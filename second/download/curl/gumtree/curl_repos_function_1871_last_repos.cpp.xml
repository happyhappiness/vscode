<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1871_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ldap_connecting<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">connectdata<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">bool<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">done<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ldapconninfo<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">li<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">conn<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">proto<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">.<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="34">generic<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LDAPMessage<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">msg<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">tv<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><block pos:line="6" pos:column="23">{<expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>, <expr><literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr>}<pos:position pos:line="6" pos:column="29"/></block></expr></init></decl>, <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">tvp<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="11">err<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">info<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">USE_SSL<pos:position pos:line="10" pos:column="15"/></name></cpp:ifdef>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">conn<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">handler<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">flags<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="29">PROTOPT_SSL<pos:position pos:line="11" pos:column="40"/></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
    <comment type="block" pos:line="12" pos:column="5">/* Is the SSL handshake complete yet? */</comment>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">!<pos:position pos:line="13" pos:column="9"/></operator><name><name pos:line="13" pos:column="9">li<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">ssldone<pos:position pos:line="13" pos:column="20"/></name></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">CURLcode<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">result<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">Curl_ssl_connect_nonblocking<pos:position pos:line="14" pos:column="53"/></name><argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">conn<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">FIRSTSOCKET<pos:position pos:line="14" pos:column="71"/></name></expr></argument>,
                                                     <argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name><name pos:line="15" pos:column="55">li<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">ssldone<pos:position pos:line="15" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="68"/></decl_stmt>
      <if pos:line="16" pos:column="7">if<condition pos:line="16" pos:column="9">(<expr><name pos:line="16" pos:column="10">result<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">||<pos:position pos:line="16" pos:column="19"/></operator> <operator pos:line="16" pos:column="20">!<pos:position pos:line="16" pos:column="21"/></operator><name><name pos:line="16" pos:column="21">li<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">ssldone<pos:position pos:line="16" pos:column="32"/></name></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">result<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Have we installed the libcurl SSL handlers into the sockbuf yet? */</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">!<pos:position pos:line="21" pos:column="9"/></operator><name><name pos:line="21" pos:column="9">li<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">sslinst<pos:position pos:line="21" pos:column="20"/></name></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">Sockbuf<pos:position pos:line="22" pos:column="14"/></name> <modifier pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></modifier></type><name pos:line="22" pos:column="16">sb<pos:position pos:line="22" pos:column="18"/></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ldap_get_option<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">li<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">ld<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">LDAP_OPT_SOCKBUF<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="49">&amp;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="50">sb<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ber_sockbuf_add_io<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">sb<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">ldapsb_tls<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">LBER_SBIOD_LEVEL_TRANSPORT<pos:position pos:line="24" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="71">conn<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">li<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">sslinst<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">TRUE<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">li<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">recv<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name><name pos:line="26" pos:column="18">conn<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">recv<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><name pos:line="26" pos:column="29">FIRSTSOCKET<pos:position pos:line="26" pos:column="40"/></name></expr>]<pos:position pos:line="26" pos:column="41"/></index></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">li<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">send<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name><name pos:line="27" pos:column="18">conn<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">send<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><name pos:line="27" pos:column="29">FIRSTSOCKET<pos:position pos:line="27" pos:column="40"/></name></expr>]<pos:position pos:line="27" pos:column="41"/></index></name></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="32" pos:column="3">tvp<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <operator pos:line="32" pos:column="9">&amp;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="10">tv<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></expr_stmt>

<label><name pos:line="34" pos:column="1">retry<pos:position pos:line="34" pos:column="6"/></name>:<pos:position pos:line="34" pos:column="7"/></label>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name><name pos:line="35" pos:column="7">li<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">didbind<pos:position pos:line="35" pos:column="18"/></name></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name pos:line="36" pos:column="11">binddn<pos:position pos:line="36" pos:column="17"/></name></decl>;<pos:position pos:line="36" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="37" pos:column="5">struct<pos:position pos:line="37" pos:column="11"/></name> <name pos:line="37" pos:column="12">berval<pos:position pos:line="37" pos:column="18"/></name></name></type> <name pos:line="37" pos:column="19">passwd<pos:position pos:line="37" pos:column="25"/></name></decl>;<pos:position pos:line="37" pos:column="26"/></decl_stmt>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name><name pos:line="39" pos:column="8">conn<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">bits<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">user_passwd<pos:position pos:line="39" pos:column="30"/></name></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
      <expr_stmt><expr><name pos:line="40" pos:column="7">binddn<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name><name pos:line="40" pos:column="16">conn<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">user<pos:position pos:line="40" pos:column="26"/></name></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="41" pos:column="7">passwd<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">bv_val<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name><name pos:line="41" pos:column="23">conn<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">passwd<pos:position pos:line="41" pos:column="35"/></name></name></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="42" pos:column="7">passwd<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">.<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">bv_len<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">strlen<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name><name pos:line="42" pos:column="30">passwd<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">.<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">bv_val<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">binddn<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">passwd<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">bv_val<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">NULL<pos:position pos:line="46" pos:column="27"/></name></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">passwd<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">bv_len<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <literal type="number" pos:line="47" pos:column="23">0<pos:position pos:line="47" pos:column="24"/></literal></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="49" pos:column="5">rc<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">ldap_sasl_bind<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name><name pos:line="49" pos:column="25">li<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">ld<pos:position pos:line="49" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="33">binddn<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">LDAP_SASL_SIMPLE<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="59">&amp;<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="60">passwd<pos:position pos:line="49" pos:column="66"/></name></expr></argument>,
                        <argument><expr><name pos:line="50" pos:column="25">NULL<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">NULL<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="37">&amp;<pos:position pos:line="50" pos:column="42"/></operator><name><name pos:line="50" pos:column="38">li<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">msgid<pos:position pos:line="50" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><name pos:line="51" pos:column="8">rc<pos:position pos:line="51" pos:column="10"/></name></expr>)<pos:position pos:line="51" pos:column="11"/></condition><then pos:line="51" pos:column="11">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">CURLE_LDAP_CANNOT_BIND<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">li<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">didbind<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">TRUE<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">tvp<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">CURLE_OK<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="58" pos:column="3">rc<pos:position pos:line="58" pos:column="5"/></name> <operator pos:line="58" pos:column="6">=<pos:position pos:line="58" pos:column="7"/></operator> <call><name pos:line="58" pos:column="8">ldap_result<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name><name pos:line="58" pos:column="20">li<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">ld<pos:position pos:line="58" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="28">li<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">msgid<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">LDAP_MSG_ONE<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="53">tvp<pos:position pos:line="58" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="58">&amp;<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="59">msg<pos:position pos:line="58" pos:column="62"/></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">rc<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">&lt;<pos:position pos:line="59" pos:column="13"/></operator> <literal type="number" pos:line="59" pos:column="11">0<pos:position pos:line="59" pos:column="12"/></literal></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13"> <block pos:line="59" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">failf<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><name pos:line="60" pos:column="11">data<pos:position pos:line="60" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="17">"LDAP local: bind ldap_result %s"<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="52">ldap_err2string<pos:position pos:line="60" pos:column="67"/></name><argument_list pos:line="60" pos:column="67">(<argument><expr><name pos:line="60" pos:column="68">rc<pos:position pos:line="60" pos:column="70"/></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="73"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">CURLE_LDAP_CANNOT_BIND<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">(<expr><name pos:line="63" pos:column="6">rc<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">==<pos:position pos:line="63" pos:column="11"/></operator> <literal type="number" pos:line="63" pos:column="12">0<pos:position pos:line="63" pos:column="13"/></literal></expr>)<pos:position pos:line="63" pos:column="14"/></condition><then pos:line="63" pos:column="14"> <block pos:line="63" pos:column="15">{
    <comment type="block" pos:line="64" pos:column="5">/* timed out */</comment>
    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">CURLE_OK<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></return>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="68" pos:column="3">rc<pos:position pos:line="68" pos:column="5"/></name> <operator pos:line="68" pos:column="6">=<pos:position pos:line="68" pos:column="7"/></operator> <call><name pos:line="68" pos:column="8">ldap_parse_result<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name><name pos:line="68" pos:column="26">li<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">ld<pos:position pos:line="68" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">msg<pos:position pos:line="68" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="39">&amp;<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="40">err<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">NULL<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="51">&amp;<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="52">info<pos:position pos:line="68" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="58">NULL<pos:position pos:line="68" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="64">NULL<pos:position pos:line="68" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="70">1<pos:position pos:line="68" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="73"/></expr_stmt>
  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">(<expr><name pos:line="69" pos:column="6">rc<pos:position pos:line="69" pos:column="8"/></name></expr>)<pos:position pos:line="69" pos:column="9"/></condition><then pos:line="69" pos:column="9"> <block pos:line="69" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">failf<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">data<pos:position pos:line="70" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="17">"LDAP local: bind ldap_parse_result %s"<pos:position pos:line="70" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="58">ldap_err2string<pos:position pos:line="70" pos:column="73"/></name><argument_list pos:line="70" pos:column="73">(<argument><expr><name pos:line="70" pos:column="74">rc<pos:position pos:line="70" pos:column="76"/></name></expr></argument>)<pos:position pos:line="70" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">CURLE_LDAP_CANNOT_BIND<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></return>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="74" pos:column="3">/* Try to fallback to LDAPv2? */</comment>
  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">(<expr><name pos:line="75" pos:column="6">err<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">==<pos:position pos:line="75" pos:column="12"/></operator> <name pos:line="75" pos:column="13">LDAP_PROTOCOL_ERROR<pos:position pos:line="75" pos:column="32"/></name></expr>)<pos:position pos:line="75" pos:column="33"/></condition><then pos:line="75" pos:column="33"> <block pos:line="75" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="76" pos:column="5">int<pos:position pos:line="76" pos:column="8"/></name></type> <name pos:line="76" pos:column="9">proto<pos:position pos:line="76" pos:column="14"/></name></decl>;<pos:position pos:line="76" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">ldap_get_option<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name><name pos:line="77" pos:column="21">li<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">-&gt;<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="25">ld<pos:position pos:line="77" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="29">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="56">&amp;<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="57">proto<pos:position pos:line="77" pos:column="62"/></name></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="64"/></expr_stmt>
    <if pos:line="78" pos:column="5">if<condition pos:line="78" pos:column="7">(<expr><name pos:line="78" pos:column="8">proto<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">==<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">LDAP_VERSION3<pos:position pos:line="78" pos:column="30"/></name></expr>)<pos:position pos:line="78" pos:column="31"/></condition><then pos:line="78" pos:column="31"> <block pos:line="78" pos:column="32">{
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">(<expr><name pos:line="79" pos:column="10">info<pos:position pos:line="79" pos:column="14"/></name></expr>)<pos:position pos:line="79" pos:column="15"/></condition><then pos:line="79" pos:column="15"> <block pos:line="79" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ldap_memfree<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><name pos:line="80" pos:column="22">info<pos:position pos:line="80" pos:column="26"/></name></expr></argument>)<pos:position pos:line="80" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">info<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <name pos:line="81" pos:column="16">NULL<pos:position pos:line="81" pos:column="20"/></name></expr>;<pos:position pos:line="81" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="82" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="83" pos:column="7">proto<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">LDAP_VERSION2<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="84" pos:column="7">ldap_set_option<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name><name pos:line="84" pos:column="23">li<pos:position pos:line="84" pos:column="25"/></name><operator pos:line="84" pos:column="25">-&gt;<pos:position pos:line="84" pos:column="30"/></operator><name pos:line="84" pos:column="27">ld<pos:position pos:line="84" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="31">LDAP_OPT_PROTOCOL_VERSION<pos:position pos:line="84" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="58">&amp;<pos:position pos:line="84" pos:column="63"/></operator><name pos:line="84" pos:column="59">proto<pos:position pos:line="84" pos:column="64"/></name></expr></argument>)<pos:position pos:line="84" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">li<pos:position pos:line="85" pos:column="9"/></name><operator pos:line="85" pos:column="9">-&gt;<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="11">didbind<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="21">FALSE<pos:position pos:line="85" pos:column="26"/></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
      <goto pos:line="86" pos:column="7">goto <name pos:line="86" pos:column="12">retry<pos:position pos:line="86" pos:column="17"/></name>;<pos:position pos:line="86" pos:column="18"/></goto>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name pos:line="90" pos:column="6">err<pos:position pos:line="90" pos:column="9"/></name></expr>)<pos:position pos:line="90" pos:column="10"/></condition><then pos:line="90" pos:column="10"> <block pos:line="90" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">failf<pos:position pos:line="91" pos:column="10"/></name><argument_list pos:line="91" pos:column="10">(<argument><expr><name pos:line="91" pos:column="11">data<pos:position pos:line="91" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="17">"LDAP remote: bind failed %s %s"<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="51">ldap_err2string<pos:position pos:line="91" pos:column="66"/></name><argument_list pos:line="91" pos:column="66">(<argument><expr><name pos:line="91" pos:column="67">rc<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="92" pos:column="11">info<pos:position pos:line="92" pos:column="15"/></name></expr> ?<pos:position pos:line="92" pos:column="17"/></condition><then pos:line="92" pos:column="17"> <expr><name pos:line="92" pos:column="18">info<pos:position pos:line="92" pos:column="22"/></name></expr> <pos:position pos:line="92" pos:column="23"/></then><else pos:line="92" pos:column="23">: <expr><literal type="string" pos:line="92" pos:column="25">""<pos:position pos:line="92" pos:column="27"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="92" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><name pos:line="93" pos:column="8">info<pos:position pos:line="93" pos:column="12"/></name></expr>)<pos:position pos:line="93" pos:column="13"/></condition><then pos:line="93" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="7">ldap_memfree<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">info<pos:position pos:line="94" pos:column="24"/></name></expr></argument>)<pos:position pos:line="94" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="26"/></expr_stmt></block></then></if>
    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></return>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name pos:line="98" pos:column="6">info<pos:position pos:line="98" pos:column="10"/></name></expr>)<pos:position pos:line="98" pos:column="11"/></condition><then pos:line="98" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">ldap_memfree<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><name pos:line="99" pos:column="18">info<pos:position pos:line="99" pos:column="22"/></name></expr></argument>)<pos:position pos:line="99" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="100" pos:column="3">conn<pos:position pos:line="100" pos:column="7"/></name><operator pos:line="100" pos:column="7">-&gt;<pos:position pos:line="100" pos:column="12"/></operator><name pos:line="100" pos:column="9">recv<pos:position pos:line="100" pos:column="13"/></name><index pos:line="100" pos:column="13">[<expr><name pos:line="100" pos:column="14">FIRSTSOCKET<pos:position pos:line="100" pos:column="25"/></name></expr>]<pos:position pos:line="100" pos:column="26"/></index></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <name pos:line="100" pos:column="29">ldap_recv<pos:position pos:line="100" pos:column="38"/></name></expr>;<pos:position pos:line="100" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="101" pos:column="3">*<pos:position pos:line="101" pos:column="4"/></operator><name pos:line="101" pos:column="4">done<pos:position pos:line="101" pos:column="8"/></name> <operator pos:line="101" pos:column="9">=<pos:position pos:line="101" pos:column="10"/></operator> <name pos:line="101" pos:column="11">TRUE<pos:position pos:line="101" pos:column="15"/></name></expr>;<pos:position pos:line="101" pos:column="16"/></expr_stmt>

  <return pos:line="103" pos:column="3">return <expr><name pos:line="103" pos:column="10">CURLE_OK<pos:position pos:line="103" pos:column="18"/></name></expr>;<pos:position pos:line="103" pos:column="19"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

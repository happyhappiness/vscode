<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1062_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_pretransfer<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">Curl_easy<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name><name pos:line="4" pos:column="7">data<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">change<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">url<pos:position pos:line="4" pos:column="23"/></name></name></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> <block pos:line="4" pos:column="25">{
    <comment type="block" pos:line="5" pos:column="5">/* we can't do anything without URL */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">failf<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">data<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="17">"No URL set!"<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="9" pos:column="3">/* since the URL may have been redirected in a previous use of this handle */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">data<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">change<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">url_alloc<pos:position pos:line="10" pos:column="28"/></name></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
    <comment type="block" pos:line="11" pos:column="5">/* the already set URL is allocated, free it first! */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Curl_safefree<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">data<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">change<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">url<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">data<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">change<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">url_alloc<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">FALSE<pos:position pos:line="13" pos:column="35"/></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">data<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">change<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">url<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name><name pos:line="15" pos:column="22">data<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">set<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">str<pos:position pos:line="15" pos:column="35"/></name><index pos:line="15" pos:column="35">[<expr><name pos:line="15" pos:column="36">STRING_SET_URL<pos:position pos:line="15" pos:column="50"/></name></expr>]<pos:position pos:line="15" pos:column="51"/></index></name></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Init the SSL session ID cache here. We do it here since we want to do it
     after the *_setopt() calls (that could specify the size of the cache) but
     before any transfer takes place. */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">result<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">Curl_ssl_initsessions<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">data<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">data<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">set<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">general_ssl<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">.<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">max_ssl_sessions<pos:position pos:line="20" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">result<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">result<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">data<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">set<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">followlocation<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt> <comment type="block" pos:line="24" pos:column="33">/* reset the location-follow counter */</comment>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">data<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">state<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">this_is_a_follow<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">FALSE<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt> <comment type="block" pos:line="25" pos:column="41">/* reset this */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">data<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">state<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">errorbuf<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">FALSE<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt> <comment type="block" pos:line="26" pos:column="33">/* no error has occurred */</comment>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">data<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">state<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">httpversion<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt> <comment type="block" pos:line="27" pos:column="32">/* don't assume any particular server version */</comment>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">data<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">state<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">.<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">authproblem<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">FALSE<pos:position pos:line="29" pos:column="34"/></name></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">data<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">state<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">authhost<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">.<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">want<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <name><name pos:line="30" pos:column="31">data<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">set<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">.<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">httpauth<pos:position pos:line="30" pos:column="49"/></name></name></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">data<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">state<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">authproxy<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">want<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name><name pos:line="31" pos:column="32">data<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">set<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">.<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">proxyauth<pos:position pos:line="31" pos:column="51"/></name></name></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">Curl_safefree<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name><name pos:line="32" pos:column="17">data<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">info<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">wouldredirect<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">data<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">info<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">wouldredirect<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">NULL<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name><name pos:line="35" pos:column="6">data<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">set<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">httpreq<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">==<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">HTTPREQ_PUT<pos:position pos:line="35" pos:column="38"/></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="5">data<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">state<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">infilesize<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <name><name pos:line="36" pos:column="30">data<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">set<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">filesize<pos:position pos:line="36" pos:column="48"/></name></name></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt></block></then>
  <else pos:line="37" pos:column="3">else <block pos:line="37" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">data<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">state<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">.<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">infilesize<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <name><name pos:line="38" pos:column="30">data<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">set<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">postfieldsize<pos:position pos:line="38" pos:column="53"/></name></name></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name><name pos:line="39" pos:column="8">data<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">set<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">postfields<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">&amp;&amp;<pos:position pos:line="39" pos:column="39"/></operator> <operator pos:line="39" pos:column="32">(<pos:position pos:line="39" pos:column="33"/></operator><name><name pos:line="39" pos:column="33">data<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">state<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">.<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">infilesize<pos:position pos:line="39" pos:column="55"/></name></name> <operator pos:line="39" pos:column="56">==<pos:position pos:line="39" pos:column="58"/></operator> <operator pos:line="39" pos:column="59">-<pos:position pos:line="39" pos:column="60"/></operator><literal type="number" pos:line="39" pos:column="60">1<pos:position pos:line="39" pos:column="61"/></literal><operator pos:line="39" pos:column="61">)<pos:position pos:line="39" pos:column="62"/></operator></expr>)<pos:position pos:line="39" pos:column="63"/></condition><then pos:line="39" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="7">data<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">state<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">infilesize<pos:position pos:line="40" pos:column="29"/></name></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="32">(<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">curl_off_t<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">)<pos:position pos:line="40" pos:column="44"/></operator><call><name pos:line="40" pos:column="44">strlen<pos:position pos:line="40" pos:column="50"/></name><argument_list pos:line="40" pos:column="50">(<argument><expr><name><name pos:line="40" pos:column="51">data<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">set<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">.<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="61">postfields<pos:position pos:line="40" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="43" pos:column="3">/* If there is a list of cookie files to read, do it now! */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">data<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">change<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">cookielist<pos:position pos:line="44" pos:column="29"/></name></name></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">Curl_cookie_loadfiles<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">data<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* If there is a list of host pairs to deal with */</comment>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><name><name pos:line="48" pos:column="6">data<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">change<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">resolve<pos:position pos:line="48" pos:column="26"/></name></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="5">result<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">Curl_loadhostpairs<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">data<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">result<pos:position pos:line="51" pos:column="13"/></name></expr>)<pos:position pos:line="51" pos:column="14"/></condition><then pos:line="51" pos:column="14"> <block pos:line="51" pos:column="15">{
    <comment type="block" pos:line="52" pos:column="5">/* Allow data-&gt;set.use_port to set which port to use. This needs to be
     * disabled for example when we follow Location: headers to URLs using
     * different ports! */</comment>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">data<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">state<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">.<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">allow_port<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">TRUE<pos:position pos:line="55" pos:column="34"/></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>

<cpp:if pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">if<pos:position pos:line="57" pos:column="4"/></cpp:directive> <expr><call><name pos:line="57" pos:column="5">defined<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">HAVE_SIGNAL<pos:position pos:line="57" pos:column="24"/></name></expr></argument>)<pos:position pos:line="57" pos:column="25"/></argument_list></call> <operator pos:line="57" pos:column="26">&amp;&amp;<pos:position pos:line="57" pos:column="36"/></operator> <call><name pos:line="57" pos:column="29">defined<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">SIGPIPE<pos:position pos:line="57" pos:column="44"/></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call> <operator pos:line="57" pos:column="46">&amp;&amp;<pos:position pos:line="57" pos:column="56"/></operator> <operator pos:line="57" pos:column="49">!<pos:position pos:line="57" pos:column="50"/></operator><call><name pos:line="57" pos:column="50">defined<pos:position pos:line="57" pos:column="57"/></name><argument_list pos:line="57" pos:column="57">(<argument><expr><name pos:line="57" pos:column="58">HAVE_MSG_NOSIGNAL<pos:position pos:line="57" pos:column="75"/></name></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr></cpp:if>
    <comment type="block" format="doxygen" pos:line="58" pos:column="5">/*************************************************************
     * Tell signal handler to ignore SIGPIPE
     *************************************************************/</comment>
    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><operator pos:line="61" pos:column="8">!<pos:position pos:line="61" pos:column="9"/></operator><name><name pos:line="61" pos:column="9">data<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">set<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">no_signal<pos:position pos:line="61" pos:column="28"/></name></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="7">data<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">state<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">.<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">prev_signal<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">=<pos:position pos:line="62" pos:column="32"/></operator> <call><name pos:line="62" pos:column="33">signal<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">SIGPIPE<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">SIG_IGN<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt></block></then></if>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">Curl_initinfo<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">data<pos:position pos:line="65" pos:column="23"/></name></expr></argument>)<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt> <comment type="block" pos:line="65" pos:column="26">/* reset session-specific information "variables" */</comment>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">Curl_pgrsResetTransferSizes<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">data<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">Curl_pgrsStartNow<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">data<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>

    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">(<expr><name><name pos:line="69" pos:column="8">data<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">set<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">.<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">timeout<pos:position pos:line="69" pos:column="25"/></name></name></expr>)<pos:position pos:line="69" pos:column="26"/></condition><then pos:line="69" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="7">Curl_expire<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">data<pos:position pos:line="70" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="25">data<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">set<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">.<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="35">timeout<pos:position pos:line="70" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="44">EXPIRE_TIMEOUT<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt></block></then></if>

    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name><name pos:line="72" pos:column="8">data<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">set<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">connecttimeout<pos:position pos:line="72" pos:column="32"/></name></name></expr>)<pos:position pos:line="72" pos:column="33"/></condition><then pos:line="72" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="7">Curl_expire<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">data<pos:position pos:line="73" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="25">data<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">-&gt;<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="31">set<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">.<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="35">connecttimeout<pos:position pos:line="73" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="51">EXPIRE_CONNECTTIMEOUT<pos:position pos:line="73" pos:column="72"/></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="74"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* In case the handle is re-used and an authentication method was picked
       in the session we need to make sure we only use the one(s) we now
       consider to be fine */</comment>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">data<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">-&gt;<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="11">state<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">.<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="17">authhost<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">.<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="26">picked<pos:position pos:line="78" pos:column="32"/></name></name> <operator pos:line="78" pos:column="33">&amp;=<pos:position pos:line="78" pos:column="39"/></operator> <name><name pos:line="78" pos:column="36">data<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">-&gt;<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="42">state<pos:position pos:line="78" pos:column="47"/></name><operator pos:line="78" pos:column="47">.<pos:position pos:line="78" pos:column="48"/></operator><name pos:line="78" pos:column="48">authhost<pos:position pos:line="78" pos:column="56"/></name><operator pos:line="78" pos:column="56">.<pos:position pos:line="78" pos:column="57"/></operator><name pos:line="78" pos:column="57">want<pos:position pos:line="78" pos:column="61"/></name></name></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">data<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">state<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">.<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">authproxy<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">.<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">picked<pos:position pos:line="79" pos:column="33"/></name></name> <operator pos:line="79" pos:column="34">&amp;=<pos:position pos:line="79" pos:column="40"/></operator> <name><name pos:line="79" pos:column="37">data<pos:position pos:line="79" pos:column="41"/></name><operator pos:line="79" pos:column="41">-&gt;<pos:position pos:line="79" pos:column="46"/></operator><name pos:line="79" pos:column="43">state<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">.<pos:position pos:line="79" pos:column="49"/></operator><name pos:line="79" pos:column="49">authproxy<pos:position pos:line="79" pos:column="58"/></name><operator pos:line="79" pos:column="58">.<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="59">want<pos:position pos:line="79" pos:column="63"/></name></name></expr>;<pos:position pos:line="79" pos:column="64"/></expr_stmt>

    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name><name pos:line="81" pos:column="8">data<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">set<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">.<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">wildcardmatch<pos:position pos:line="81" pos:column="31"/></name></name></expr>)<pos:position pos:line="81" pos:column="32"/></condition><then pos:line="81" pos:column="32"> <block pos:line="81" pos:column="33">{
      <decl_stmt><decl><type><name><name pos:line="82" pos:column="7">struct<pos:position pos:line="82" pos:column="13"/></name> <name pos:line="82" pos:column="14">WildcardData<pos:position pos:line="82" pos:column="26"/></name></name> <modifier pos:line="82" pos:column="27">*<pos:position pos:line="82" pos:column="28"/></modifier></type><name pos:line="82" pos:column="28">wc<pos:position pos:line="82" pos:column="30"/></name> <init pos:line="82" pos:column="31">= <expr><operator pos:line="82" pos:column="33">&amp;<pos:position pos:line="82" pos:column="38"/></operator><name><name pos:line="82" pos:column="34">data<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">wildcard<pos:position pos:line="82" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="82" pos:column="49"/></decl_stmt>
      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><name><name pos:line="83" pos:column="10">wc<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">state<pos:position pos:line="83" pos:column="19"/></name></name> <operator pos:line="83" pos:column="20">&lt;<pos:position pos:line="83" pos:column="24"/></operator> <name pos:line="83" pos:column="22">CURLWC_INIT<pos:position pos:line="83" pos:column="33"/></name></expr>)<pos:position pos:line="83" pos:column="34"/></condition><then pos:line="83" pos:column="34"> <block pos:line="83" pos:column="35">{
        <expr_stmt><expr><name pos:line="84" pos:column="9">result<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">Curl_wildcard_init<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name pos:line="84" pos:column="37">wc<pos:position pos:line="84" pos:column="39"/></name></expr></argument>)<pos:position pos:line="84" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="41"/></expr_stmt> <comment type="block" pos:line="84" pos:column="42">/* init wildcard structures */</comment>
        <if pos:line="85" pos:column="9">if<condition pos:line="85" pos:column="11">(<expr><name pos:line="85" pos:column="12">result<pos:position pos:line="85" pos:column="18"/></name></expr>)<pos:position pos:line="85" pos:column="19"/></condition><then pos:line="85" pos:column="19">
          <block type="pseudo"><return pos:line="86" pos:column="11">return <expr><name pos:line="86" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="86" pos:column="37"/></name></expr>;<pos:position pos:line="86" pos:column="38"/></return></block></then></if>
      }<pos:position pos:line="87" pos:column="8"/></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <return pos:line="91" pos:column="3">return <expr><name pos:line="91" pos:column="10">result<pos:position pos:line="91" pos:column="16"/></name></expr>;<pos:position pos:line="91" pos:column="17"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1942_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_quit<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">conn<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">proto<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">ftpc<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">.<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">ctl_valid<pos:position pos:line="5" pos:column="32"/></name></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <block pos:line="5" pos:column="34">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">result<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">Curl_pp_sendf<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><operator pos:line="6" pos:column="28">&amp;<pos:position pos:line="6" pos:column="33"/></operator><name><name pos:line="6" pos:column="29">conn<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">proto<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">ftpc<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">.<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">pp<pos:position pos:line="6" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="50">"%s"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">"QUIT"<pos:position pos:line="6" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><name pos:line="7" pos:column="8">result<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">failf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name><name pos:line="8" pos:column="13">conn<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">data<pos:position pos:line="8" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"Failure sending QUIT command: %s"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="9" pos:column="13">curl_easy_strerror<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">result<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">conn<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">proto<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">ftpc<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">ctl_valid<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">FALSE<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt> <comment type="block" pos:line="10" pos:column="43">/* mark control connection as bad */</comment>
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">connclose<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">conn<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"QUIT command failed"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt> <comment type="block" pos:line="11" pos:column="47">/* mark for connection closure */</comment>
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">state<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">conn<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">FTP_STOP<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">result<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">state<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">conn<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="17">FTP_QUIT<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">ftp_block_statemach<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">conn<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">result<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

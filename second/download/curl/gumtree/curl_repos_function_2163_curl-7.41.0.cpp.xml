<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2163_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">schannel_recv<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">struct<pos:position pos:line="2" pos:column="21"/></name> <name pos:line="2" pos:column="22">connectdata<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">conn<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">sockindex<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="26">size_t<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">len<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="38">CURLcode<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">err<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">size<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">ret<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">-<pos:position pos:line="6" pos:column="29"/></operator><literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">SessionHandle<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name><name pos:line="8" pos:column="32">conn<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">data<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">ssl_connect_data<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">connssl<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name><name pos:line="9" pos:column="39">conn<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">ssl<pos:position pos:line="9" pos:column="48"/></name><index pos:line="9" pos:column="48">[<expr><name pos:line="9" pos:column="49">sockindex<pos:position pos:line="9" pos:column="58"/></name></expr>]<pos:position pos:line="9" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">reallocated_buffer<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">reallocated_length<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">done<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><name pos:line="12" pos:column="15">FALSE<pos:position pos:line="12" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">SecBuffer<pos:position pos:line="13" pos:column="12"/></name></type> <name><name pos:line="13" pos:column="13">inbuf<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><literal type="number" pos:line="13" pos:column="19">4<pos:position pos:line="13" pos:column="20"/></literal></expr>]<pos:position pos:line="13" pos:column="21"/></index></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">SecBufferDesc<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">inbuf_desc<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">SECURITY_STATUS<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">sspi_status<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><name pos:line="15" pos:column="33">SEC_E_OK<pos:position pos:line="15" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">infof<pos:position pos:line="17" pos:column="8"/></name><argument_list pos:line="17" pos:column="8">(<argument><expr><name pos:line="17" pos:column="9">data<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="15">"schannel: client wants to read %zu bytes\n"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">len<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="18" pos:column="3">*<pos:position pos:line="18" pos:column="4"/></operator><name pos:line="18" pos:column="4">err<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name pos:line="18" pos:column="10">CURLE_OK<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* buffer to store previously received and decrypted data */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">connssl<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">decdata_buffer<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">==<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">NULL<pos:position pos:line="21" pos:column="37"/></name></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">connssl<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">decdata_offset<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="31">0<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">connssl<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">decdata_length<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">CURL_SCHANNEL_BUFFER_INIT_SIZE<pos:position pos:line="23" pos:column="61"/></name></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">connssl<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">decdata_buffer<pos:position pos:line="24" pos:column="28"/></name></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">malloc<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">connssl<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">decdata_length<pos:position pos:line="24" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">connssl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">decdata_buffer<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">==<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="35">NULL<pos:position pos:line="25" pos:column="39"/></name></expr>)<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <block pos:line="25" pos:column="41">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">failf<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">data<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"schannel: unable to allocate memory"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">err<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">-<pos:position pos:line="28" pos:column="15"/></operator><literal type="number" pos:line="28" pos:column="15">1<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* increase buffer in order to fit the requested amount of data */</comment>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name><name pos:line="33" pos:column="6">connssl<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">encdata_length<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">-<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">connssl<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">encdata_offset<pos:position pos:line="33" pos:column="55"/></name></name> <operator pos:line="33" pos:column="56">&lt;<pos:position pos:line="33" pos:column="60"/></operator>
     <name pos:line="34" pos:column="6">CURL_SCHANNEL_BUFFER_FREE_SIZE<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">||<pos:position pos:line="34" pos:column="39"/></operator> <name><name pos:line="34" pos:column="40">connssl<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">encdata_length<pos:position pos:line="34" pos:column="63"/></name></name> <operator pos:line="34" pos:column="64">&lt;<pos:position pos:line="34" pos:column="68"/></operator> <name pos:line="34" pos:column="66">len<pos:position pos:line="34" pos:column="69"/></name></expr>)<pos:position pos:line="34" pos:column="70"/></condition><then pos:line="34" pos:column="70"> <block pos:line="34" pos:column="71">{
    <comment type="block" pos:line="35" pos:column="5">/* increase internal encrypted data buffer */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">reallocated_length<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name><name pos:line="36" pos:column="26">connssl<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">encdata_offset<pos:position pos:line="36" pos:column="49"/></name></name> <operator pos:line="36" pos:column="50">+<pos:position pos:line="36" pos:column="51"/></operator>
                         <name pos:line="37" pos:column="26">CURL_SCHANNEL_BUFFER_FREE_SIZE<pos:position pos:line="37" pos:column="56"/></name></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="38" pos:column="5">/* make sure that the requested amount of data fits */</comment>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name pos:line="39" pos:column="8">reallocated_length<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="29">len<pos:position pos:line="39" pos:column="32"/></name></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33"> <block pos:line="39" pos:column="34">{
      <expr_stmt><expr><name pos:line="40" pos:column="7">reallocated_length<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">len<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="42" pos:column="5">reallocated_buffer<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <call><name pos:line="42" pos:column="26">realloc<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name><name pos:line="42" pos:column="34">connssl<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">encdata_buffer<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>,
                                 <argument><expr><name pos:line="43" pos:column="34">reallocated_length<pos:position pos:line="43" pos:column="52"/></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><name pos:line="45" pos:column="8">reallocated_buffer<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">==<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">NULL<pos:position pos:line="45" pos:column="34"/></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">failf<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">data<pos:position pos:line="46" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="19">"schannel: unable to re-allocate memory"<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="47" pos:column="7">*<pos:position pos:line="47" pos:column="8"/></operator><name pos:line="47" pos:column="8">err<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <name pos:line="47" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
      <return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">-<pos:position pos:line="48" pos:column="15"/></operator><literal type="number" pos:line="48" pos:column="15">1<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <else pos:line="50" pos:column="5">else <block pos:line="50" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">connssl<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">encdata_buffer<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">reallocated_buffer<pos:position pos:line="51" pos:column="51"/></name></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="52" pos:column="7">connssl<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">encdata_length<pos:position pos:line="52" pos:column="30"/></name></name> <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">reallocated_length<pos:position pos:line="52" pos:column="51"/></name></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* read encrypted data from socket */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">infof<pos:position pos:line="57" pos:column="8"/></name><argument_list pos:line="57" pos:column="8">(<argument><expr><name pos:line="57" pos:column="9">data<pos:position pos:line="57" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="15">"schannel: encrypted data buffer: offset %zu length %zu\n"<pos:position pos:line="57" pos:column="73"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="58" pos:column="9">connssl<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">encdata_offset<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="34">connssl<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">-&gt;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="43">encdata_length<pos:position pos:line="58" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="59" pos:column="3">size<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <name><name pos:line="59" pos:column="10">connssl<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">encdata_length<pos:position pos:line="59" pos:column="33"/></name></name> <operator pos:line="59" pos:column="34">-<pos:position pos:line="59" pos:column="35"/></operator> <name><name pos:line="59" pos:column="36">connssl<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">encdata_offset<pos:position pos:line="59" pos:column="59"/></name></name></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name pos:line="60" pos:column="6">size<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">&gt;<pos:position pos:line="60" pos:column="15"/></operator> <literal type="number" pos:line="60" pos:column="13">0<pos:position pos:line="60" pos:column="14"/></literal></expr>)<pos:position pos:line="60" pos:column="15"/></condition><then pos:line="60" pos:column="15"> <block pos:line="60" pos:column="16">{
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">err<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">Curl_read_plain<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name><name pos:line="61" pos:column="28">conn<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">sock<pos:position pos:line="61" pos:column="38"/></name><index pos:line="61" pos:column="38">[<expr><name pos:line="61" pos:column="39">sockindex<pos:position pos:line="61" pos:column="48"/></name></expr>]<pos:position pos:line="61" pos:column="49"/></index></name></expr></argument>,
                  <argument><expr><operator pos:line="62" pos:column="19">(<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="20">char<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">*<pos:position pos:line="62" pos:column="26"/></operator><operator pos:line="62" pos:column="26">)<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">(<pos:position pos:line="62" pos:column="29"/></operator><name><name pos:line="62" pos:column="29">connssl<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">encdata_buffer<pos:position pos:line="62" pos:column="52"/></name></name> <operator pos:line="62" pos:column="53">+<pos:position pos:line="62" pos:column="54"/></operator> <name><name pos:line="62" pos:column="55">connssl<pos:position pos:line="62" pos:column="62"/></name><operator pos:line="62" pos:column="62">-&gt;<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="64">encdata_offset<pos:position pos:line="62" pos:column="78"/></name></name><operator pos:line="62" pos:column="78">)<pos:position pos:line="62" pos:column="79"/></operator></expr></argument>,
                           <argument><expr><name pos:line="63" pos:column="28">size<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="34">&amp;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="35">nread<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
    <comment type="block" pos:line="64" pos:column="5">/* check for received data */</comment>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><operator pos:line="65" pos:column="8">*<pos:position pos:line="65" pos:column="9"/></operator><name pos:line="65" pos:column="9">err<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">!=<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">CURLE_OK<pos:position pos:line="65" pos:column="24"/></name></expr>)<pos:position pos:line="65" pos:column="25"/></condition><then pos:line="65" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="7">ret<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">=<pos:position pos:line="66" pos:column="12"/></operator> <operator pos:line="66" pos:column="13">-<pos:position pos:line="66" pos:column="14"/></operator><literal type="number" pos:line="66" pos:column="14">1<pos:position pos:line="66" pos:column="15"/></literal></expr>;<pos:position pos:line="66" pos:column="16"/></expr_stmt></block></then>
    <else pos:line="67" pos:column="5">else <block pos:line="67" pos:column="10">{
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">(<expr><name pos:line="68" pos:column="10">nread<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">&gt;<pos:position pos:line="68" pos:column="20"/></operator> <literal type="number" pos:line="68" pos:column="18">0<pos:position pos:line="68" pos:column="19"/></literal></expr>)<pos:position pos:line="68" pos:column="20"/></condition><then pos:line="68" pos:column="20">
        <comment type="block" pos:line="69" pos:column="9">/* increase encrypted data buffer offset */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="9">connssl<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">encdata_offset<pos:position pos:line="70" pos:column="32"/></name></name> <operator pos:line="70" pos:column="33">+=<pos:position pos:line="70" pos:column="35"/></operator> <name pos:line="70" pos:column="36">nread<pos:position pos:line="70" pos:column="41"/></name></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="71" pos:column="7">ret<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">=<pos:position pos:line="71" pos:column="12"/></operator> <name pos:line="71" pos:column="13">nread<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">infof<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><name pos:line="73" pos:column="11">data<pos:position pos:line="73" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="17">"schannel: encrypted data got %zd\n"<pos:position pos:line="73" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="55">ret<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="76" pos:column="3">infof<pos:position pos:line="76" pos:column="8"/></name><argument_list pos:line="76" pos:column="8">(<argument><expr><name pos:line="76" pos:column="9">data<pos:position pos:line="76" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="15">"schannel: encrypted data buffer: offset %zu length %zu\n"<pos:position pos:line="76" pos:column="73"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="77" pos:column="9">connssl<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">-&gt;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="18">encdata_offset<pos:position pos:line="77" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="34">connssl<pos:position pos:line="77" pos:column="41"/></name><operator pos:line="77" pos:column="41">-&gt;<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="43">encdata_length<pos:position pos:line="77" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="79" pos:column="3">/* check if we still have some data in our buffers */</comment>
  <while pos:line="80" pos:column="3">while<condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">connssl<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">encdata_offset<pos:position pos:line="80" pos:column="32"/></name></name> <operator pos:line="80" pos:column="33">&gt;<pos:position pos:line="80" pos:column="37"/></operator> <literal type="number" pos:line="80" pos:column="35">0<pos:position pos:line="80" pos:column="36"/></literal> <operator pos:line="80" pos:column="37">&amp;&amp;<pos:position pos:line="80" pos:column="47"/></operator> <name pos:line="80" pos:column="40">sspi_status<pos:position pos:line="80" pos:column="51"/></name> <operator pos:line="80" pos:column="52">==<pos:position pos:line="80" pos:column="54"/></operator> <name pos:line="80" pos:column="55">SEC_E_OK<pos:position pos:line="80" pos:column="63"/></name> <operator pos:line="80" pos:column="64">&amp;&amp;<pos:position pos:line="80" pos:column="74"/></operator>
        <name><name pos:line="81" pos:column="9">connssl<pos:position pos:line="81" pos:column="16"/></name><operator pos:line="81" pos:column="16">-&gt;<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="18">decdata_offset<pos:position pos:line="81" pos:column="32"/></name></name> <operator pos:line="81" pos:column="33">&lt;<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="35">len<pos:position pos:line="81" pos:column="38"/></name></expr>)<pos:position pos:line="81" pos:column="39"/></condition> <block pos:line="81" pos:column="40">{
    <comment type="block" pos:line="82" pos:column="5">/* prepare data buffer for DecryptMessage call */</comment>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">InitSecBuffer<pos:position pos:line="83" pos:column="18"/></name><argument_list pos:line="83" pos:column="18">(<argument><expr><operator pos:line="83" pos:column="19">&amp;<pos:position pos:line="83" pos:column="24"/></operator><name><name pos:line="83" pos:column="20">inbuf<pos:position pos:line="83" pos:column="25"/></name><index pos:line="83" pos:column="25">[<expr><literal type="number" pos:line="83" pos:column="26">0<pos:position pos:line="83" pos:column="27"/></literal></expr>]<pos:position pos:line="83" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="30">SECBUFFER_DATA<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="46">connssl<pos:position pos:line="83" pos:column="53"/></name><operator pos:line="83" pos:column="53">-&gt;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="55">encdata_buffer<pos:position pos:line="83" pos:column="69"/></name></name></expr></argument>,
                  <argument><expr><call><name pos:line="84" pos:column="19">curlx_uztoul<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name><name pos:line="84" pos:column="32">connssl<pos:position pos:line="84" pos:column="39"/></name><operator pos:line="84" pos:column="39">-&gt;<pos:position pos:line="84" pos:column="44"/></operator><name pos:line="84" pos:column="41">encdata_offset<pos:position pos:line="84" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* we need 3 more empty input buffers for possible output */</comment>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">InitSecBuffer<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><operator pos:line="87" pos:column="19">&amp;<pos:position pos:line="87" pos:column="24"/></operator><name><name pos:line="87" pos:column="20">inbuf<pos:position pos:line="87" pos:column="25"/></name><index pos:line="87" pos:column="25">[<expr><literal type="number" pos:line="87" pos:column="26">1<pos:position pos:line="87" pos:column="27"/></literal></expr>]<pos:position pos:line="87" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="30">SECBUFFER_EMPTY<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="47">NULL<pos:position pos:line="87" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="53">0<pos:position pos:line="87" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">InitSecBuffer<pos:position pos:line="88" pos:column="18"/></name><argument_list pos:line="88" pos:column="18">(<argument><expr><operator pos:line="88" pos:column="19">&amp;<pos:position pos:line="88" pos:column="24"/></operator><name><name pos:line="88" pos:column="20">inbuf<pos:position pos:line="88" pos:column="25"/></name><index pos:line="88" pos:column="25">[<expr><literal type="number" pos:line="88" pos:column="26">2<pos:position pos:line="88" pos:column="27"/></literal></expr>]<pos:position pos:line="88" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="30">SECBUFFER_EMPTY<pos:position pos:line="88" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="47">NULL<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="53">0<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">InitSecBuffer<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><operator pos:line="89" pos:column="19">&amp;<pos:position pos:line="89" pos:column="24"/></operator><name><name pos:line="89" pos:column="20">inbuf<pos:position pos:line="89" pos:column="25"/></name><index pos:line="89" pos:column="25">[<expr><literal type="number" pos:line="89" pos:column="26">3<pos:position pos:line="89" pos:column="27"/></literal></expr>]<pos:position pos:line="89" pos:column="28"/></index></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="30">SECBUFFER_EMPTY<pos:position pos:line="89" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="47">NULL<pos:position pos:line="89" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="53">0<pos:position pos:line="89" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">InitSecBufferDesc<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><operator pos:line="91" pos:column="23">&amp;<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="24">inbuf_desc<pos:position pos:line="91" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="36">inbuf<pos:position pos:line="91" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="43">4<pos:position pos:line="91" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="93" pos:column="5">/* http://msdn.microsoft.com/en-us/library/windows/desktop/aa375348.aspx */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">sspi_status<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <call><name><name pos:line="94" pos:column="19">s_pSecFn<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">DecryptMessage<pos:position pos:line="94" pos:column="43"/></name></name><argument_list pos:line="94" pos:column="43">(<argument><expr><operator pos:line="94" pos:column="44">&amp;<pos:position pos:line="94" pos:column="49"/></operator><name><name pos:line="94" pos:column="45">connssl<pos:position pos:line="94" pos:column="52"/></name><operator pos:line="94" pos:column="52">-&gt;<pos:position pos:line="94" pos:column="57"/></operator><name pos:line="94" pos:column="54">ctxt<pos:position pos:line="94" pos:column="58"/></name><operator pos:line="94" pos:column="58">-&gt;<pos:position pos:line="94" pos:column="63"/></operator><name pos:line="94" pos:column="60">ctxt_handle<pos:position pos:line="94" pos:column="71"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="95" pos:column="44">&amp;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="45">inbuf_desc<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="57">0<pos:position pos:line="95" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="60">NULL<pos:position pos:line="95" pos:column="64"/></name></expr></argument>)<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="97" pos:column="5">/* check if we need more data */</comment>
    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><name pos:line="98" pos:column="8">sspi_status<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">==<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="23">SEC_E_INCOMPLETE_MESSAGE<pos:position pos:line="98" pos:column="47"/></name></expr>)<pos:position pos:line="98" pos:column="48"/></condition><then pos:line="98" pos:column="48"> <block pos:line="98" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">infof<pos:position pos:line="99" pos:column="12"/></name><argument_list pos:line="99" pos:column="12">(<argument><expr><name pos:line="99" pos:column="13">data<pos:position pos:line="99" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="19">"schannel: failed to decrypt data, need more data\n"<pos:position pos:line="99" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="100" pos:column="7">*<pos:position pos:line="100" pos:column="8"/></operator><name pos:line="100" pos:column="8">err<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">=<pos:position pos:line="100" pos:column="13"/></operator> <name pos:line="100" pos:column="14">CURLE_AGAIN<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
      <return pos:line="101" pos:column="7">return <expr><operator pos:line="101" pos:column="14">-<pos:position pos:line="101" pos:column="15"/></operator><literal type="number" pos:line="101" pos:column="15">1<pos:position pos:line="101" pos:column="16"/></literal></expr>;<pos:position pos:line="101" pos:column="17"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="104" pos:column="5">/* check if everything went fine (server may want to renegotiate
       or shutdown the connection context) */</comment>
    <if pos:line="106" pos:column="5">if<condition pos:line="106" pos:column="7">(<expr><name pos:line="106" pos:column="8">sspi_status<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">==<pos:position pos:line="106" pos:column="22"/></operator> <name pos:line="106" pos:column="23">SEC_E_OK<pos:position pos:line="106" pos:column="31"/></name> <operator pos:line="106" pos:column="32">||<pos:position pos:line="106" pos:column="34"/></operator> <name pos:line="106" pos:column="35">sspi_status<pos:position pos:line="106" pos:column="46"/></name> <operator pos:line="106" pos:column="47">==<pos:position pos:line="106" pos:column="49"/></operator> <name pos:line="106" pos:column="50">SEC_I_RENEGOTIATE<pos:position pos:line="106" pos:column="67"/></name> <operator pos:line="106" pos:column="68">||<pos:position pos:line="106" pos:column="70"/></operator>
                                  <name pos:line="107" pos:column="35">sspi_status<pos:position pos:line="107" pos:column="46"/></name> <operator pos:line="107" pos:column="47">==<pos:position pos:line="107" pos:column="49"/></operator> <name pos:line="107" pos:column="50">SEC_I_CONTEXT_EXPIRED<pos:position pos:line="107" pos:column="71"/></name></expr>)<pos:position pos:line="107" pos:column="72"/></condition><then pos:line="107" pos:column="72"> <block pos:line="107" pos:column="73">{
      <comment type="block" pos:line="108" pos:column="7">/* check for successfully decrypted data, even before actual
         renegotiation or shutdown of the connection context */</comment>
      <if pos:line="110" pos:column="7">if<condition pos:line="110" pos:column="9">(<expr><name><name pos:line="110" pos:column="10">inbuf<pos:position pos:line="110" pos:column="15"/></name><index pos:line="110" pos:column="15">[<expr><literal type="number" pos:line="110" pos:column="16">1<pos:position pos:line="110" pos:column="17"/></literal></expr>]<pos:position pos:line="110" pos:column="18"/></index></name><operator pos:line="110" pos:column="18">.<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">BufferType<pos:position pos:line="110" pos:column="29"/></name> <operator pos:line="110" pos:column="30">==<pos:position pos:line="110" pos:column="32"/></operator> <name pos:line="110" pos:column="33">SECBUFFER_DATA<pos:position pos:line="110" pos:column="47"/></name></expr>)<pos:position pos:line="110" pos:column="48"/></condition><then pos:line="110" pos:column="48"> <block pos:line="110" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">infof<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><name pos:line="111" pos:column="15">data<pos:position pos:line="111" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="21">"schannel: decrypted data length: %lu\n"<pos:position pos:line="111" pos:column="61"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="112" pos:column="15">inbuf<pos:position pos:line="112" pos:column="20"/></name><index pos:line="112" pos:column="20">[<expr><literal type="number" pos:line="112" pos:column="21">1<pos:position pos:line="112" pos:column="22"/></literal></expr>]<pos:position pos:line="112" pos:column="23"/></index></name><operator pos:line="112" pos:column="23">.<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="24">cbBuffer<pos:position pos:line="112" pos:column="32"/></name></expr></argument>)<pos:position pos:line="112" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="114" pos:column="9">/* increase buffer in order to fit the received amount of data */</comment>
        <expr_stmt><expr><name pos:line="115" pos:column="9">size<pos:position pos:line="115" pos:column="13"/></name> <operator pos:line="115" pos:column="14">=<pos:position pos:line="115" pos:column="15"/></operator> <ternary><condition><expr><name><name pos:line="115" pos:column="16">inbuf<pos:position pos:line="115" pos:column="21"/></name><index pos:line="115" pos:column="21">[<expr><literal type="number" pos:line="115" pos:column="22">1<pos:position pos:line="115" pos:column="23"/></literal></expr>]<pos:position pos:line="115" pos:column="24"/></index></name><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">cbBuffer<pos:position pos:line="115" pos:column="33"/></name> <operator pos:line="115" pos:column="34">&gt;<pos:position pos:line="115" pos:column="38"/></operator> <name pos:line="115" pos:column="36">CURL_SCHANNEL_BUFFER_FREE_SIZE<pos:position pos:line="115" pos:column="66"/></name></expr> ?<pos:position pos:line="115" pos:column="68"/></condition><then pos:line="115" pos:column="68">
               <expr><name><name pos:line="116" pos:column="16">inbuf<pos:position pos:line="116" pos:column="21"/></name><index pos:line="116" pos:column="21">[<expr><literal type="number" pos:line="116" pos:column="22">1<pos:position pos:line="116" pos:column="23"/></literal></expr>]<pos:position pos:line="116" pos:column="24"/></index></name><operator pos:line="116" pos:column="24">.<pos:position pos:line="116" pos:column="25"/></operator><name pos:line="116" pos:column="25">cbBuffer<pos:position pos:line="116" pos:column="33"/></name></expr> <pos:position pos:line="116" pos:column="34"/></then><else pos:line="116" pos:column="34">: <expr><name pos:line="116" pos:column="36">CURL_SCHANNEL_BUFFER_FREE_SIZE<pos:position pos:line="116" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="116" pos:column="67"/></expr_stmt>
        <if pos:line="117" pos:column="9">if<condition pos:line="117" pos:column="11">(<expr><name><name pos:line="117" pos:column="12">connssl<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">decdata_length<pos:position pos:line="117" pos:column="35"/></name></name> <operator pos:line="117" pos:column="36">-<pos:position pos:line="117" pos:column="37"/></operator> <name><name pos:line="117" pos:column="38">connssl<pos:position pos:line="117" pos:column="45"/></name><operator pos:line="117" pos:column="45">-&gt;<pos:position pos:line="117" pos:column="50"/></operator><name pos:line="117" pos:column="47">decdata_offset<pos:position pos:line="117" pos:column="61"/></name></name> <operator pos:line="117" pos:column="62">&lt;<pos:position pos:line="117" pos:column="66"/></operator> <name pos:line="117" pos:column="64">size<pos:position pos:line="117" pos:column="68"/></name> <operator pos:line="117" pos:column="69">||<pos:position pos:line="117" pos:column="71"/></operator>
           <name><name pos:line="118" pos:column="12">connssl<pos:position pos:line="118" pos:column="19"/></name><operator pos:line="118" pos:column="19">-&gt;<pos:position pos:line="118" pos:column="24"/></operator><name pos:line="118" pos:column="21">decdata_length<pos:position pos:line="118" pos:column="35"/></name></name> <operator pos:line="118" pos:column="36">&lt;<pos:position pos:line="118" pos:column="40"/></operator> <name pos:line="118" pos:column="38">len<pos:position pos:line="118" pos:column="41"/></name></expr>)<pos:position pos:line="118" pos:column="42"/></condition><then pos:line="118" pos:column="42"> <block pos:line="118" pos:column="43">{
          <comment type="block" pos:line="119" pos:column="11">/* increase internal decrypted data buffer */</comment>
          <expr_stmt><expr><name pos:line="120" pos:column="11">reallocated_length<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">=<pos:position pos:line="120" pos:column="31"/></operator> <name><name pos:line="120" pos:column="32">connssl<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">decdata_offset<pos:position pos:line="120" pos:column="55"/></name></name> <operator pos:line="120" pos:column="56">+<pos:position pos:line="120" pos:column="57"/></operator> <name pos:line="120" pos:column="58">size<pos:position pos:line="120" pos:column="62"/></name></expr>;<pos:position pos:line="120" pos:column="63"/></expr_stmt>
          <comment type="block" pos:line="121" pos:column="11">/* make sure that the requested amount of data fits */</comment>
          <if pos:line="122" pos:column="11">if<condition pos:line="122" pos:column="13">(<expr><name pos:line="122" pos:column="14">reallocated_length<pos:position pos:line="122" pos:column="32"/></name> <operator pos:line="122" pos:column="33">&lt;<pos:position pos:line="122" pos:column="37"/></operator> <name pos:line="122" pos:column="35">len<pos:position pos:line="122" pos:column="38"/></name></expr>)<pos:position pos:line="122" pos:column="39"/></condition><then pos:line="122" pos:column="39"> <block pos:line="122" pos:column="40">{
            <expr_stmt><expr><name pos:line="123" pos:column="13">reallocated_length<pos:position pos:line="123" pos:column="31"/></name> <operator pos:line="123" pos:column="32">=<pos:position pos:line="123" pos:column="33"/></operator> <name pos:line="123" pos:column="34">len<pos:position pos:line="123" pos:column="37"/></name></expr>;<pos:position pos:line="123" pos:column="38"/></expr_stmt>
          }<pos:position pos:line="124" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name pos:line="125" pos:column="11">reallocated_buffer<pos:position pos:line="125" pos:column="29"/></name> <operator pos:line="125" pos:column="30">=<pos:position pos:line="125" pos:column="31"/></operator> <call><name pos:line="125" pos:column="32">realloc<pos:position pos:line="125" pos:column="39"/></name><argument_list pos:line="125" pos:column="39">(<argument><expr><name><name pos:line="125" pos:column="40">connssl<pos:position pos:line="125" pos:column="47"/></name><operator pos:line="125" pos:column="47">-&gt;<pos:position pos:line="125" pos:column="52"/></operator><name pos:line="125" pos:column="49">decdata_buffer<pos:position pos:line="125" pos:column="63"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="126" pos:column="40">reallocated_length<pos:position pos:line="126" pos:column="58"/></name></expr></argument>)<pos:position pos:line="126" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="60"/></expr_stmt>

          <if pos:line="128" pos:column="11">if<condition pos:line="128" pos:column="13">(<expr><name pos:line="128" pos:column="14">reallocated_buffer<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">==<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="36">NULL<pos:position pos:line="128" pos:column="40"/></name></expr>)<pos:position pos:line="128" pos:column="41"/></condition><then pos:line="128" pos:column="41"> <block pos:line="128" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">failf<pos:position pos:line="129" pos:column="18"/></name><argument_list pos:line="129" pos:column="18">(<argument><expr><name pos:line="129" pos:column="19">data<pos:position pos:line="129" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="25">"schannel: unable to re-allocate memory"<pos:position pos:line="129" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="130" pos:column="13">*<pos:position pos:line="130" pos:column="14"/></operator><name pos:line="130" pos:column="14">err<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <name pos:line="130" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="130" pos:column="39"/></name></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
            <return pos:line="131" pos:column="13">return <expr><operator pos:line="131" pos:column="20">-<pos:position pos:line="131" pos:column="21"/></operator><literal type="number" pos:line="131" pos:column="21">1<pos:position pos:line="131" pos:column="22"/></literal></expr>;<pos:position pos:line="131" pos:column="23"/></return>
          }<pos:position pos:line="132" pos:column="12"/></block></then>
          <else pos:line="133" pos:column="11">else <block pos:line="133" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="134" pos:column="13">connssl<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">-&gt;<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="22">decdata_buffer<pos:position pos:line="134" pos:column="36"/></name></name> <operator pos:line="134" pos:column="37">=<pos:position pos:line="134" pos:column="38"/></operator> <name pos:line="134" pos:column="39">reallocated_buffer<pos:position pos:line="134" pos:column="57"/></name></expr>;<pos:position pos:line="134" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="135" pos:column="13">connssl<pos:position pos:line="135" pos:column="20"/></name><operator pos:line="135" pos:column="20">-&gt;<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="22">decdata_length<pos:position pos:line="135" pos:column="36"/></name></name> <operator pos:line="135" pos:column="37">=<pos:position pos:line="135" pos:column="38"/></operator> <name pos:line="135" pos:column="39">reallocated_length<pos:position pos:line="135" pos:column="57"/></name></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>
          }<pos:position pos:line="136" pos:column="12"/></block></else></if>
        }<pos:position pos:line="137" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="139" pos:column="9">/* copy decrypted data to internal buffer */</comment>
        <expr_stmt><expr><name pos:line="140" pos:column="9">size<pos:position pos:line="140" pos:column="13"/></name> <operator pos:line="140" pos:column="14">=<pos:position pos:line="140" pos:column="15"/></operator> <name><name pos:line="140" pos:column="16">inbuf<pos:position pos:line="140" pos:column="21"/></name><index pos:line="140" pos:column="21">[<expr><literal type="number" pos:line="140" pos:column="22">1<pos:position pos:line="140" pos:column="23"/></literal></expr>]<pos:position pos:line="140" pos:column="24"/></index></name><operator pos:line="140" pos:column="24">.<pos:position pos:line="140" pos:column="25"/></operator><name pos:line="140" pos:column="25">cbBuffer<pos:position pos:line="140" pos:column="33"/></name></expr>;<pos:position pos:line="140" pos:column="34"/></expr_stmt>
        <if pos:line="141" pos:column="9">if<condition pos:line="141" pos:column="11">(<expr><name pos:line="141" pos:column="12">size<pos:position pos:line="141" pos:column="16"/></name> <operator pos:line="141" pos:column="17">&gt;<pos:position pos:line="141" pos:column="21"/></operator> <literal type="number" pos:line="141" pos:column="19">0<pos:position pos:line="141" pos:column="20"/></literal></expr>)<pos:position pos:line="141" pos:column="21"/></condition><then pos:line="141" pos:column="21"> <block pos:line="141" pos:column="22">{
          <expr_stmt><expr><call><name pos:line="142" pos:column="11">memcpy<pos:position pos:line="142" pos:column="17"/></name><argument_list pos:line="142" pos:column="17">(<argument><expr><name><name pos:line="142" pos:column="18">connssl<pos:position pos:line="142" pos:column="25"/></name><operator pos:line="142" pos:column="25">-&gt;<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="27">decdata_buffer<pos:position pos:line="142" pos:column="41"/></name></name> <operator pos:line="142" pos:column="42">+<pos:position pos:line="142" pos:column="43"/></operator> <name><name pos:line="142" pos:column="44">connssl<pos:position pos:line="142" pos:column="51"/></name><operator pos:line="142" pos:column="51">-&gt;<pos:position pos:line="142" pos:column="56"/></operator><name pos:line="142" pos:column="53">decdata_offset<pos:position pos:line="142" pos:column="67"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="143" pos:column="18">inbuf<pos:position pos:line="143" pos:column="23"/></name><index pos:line="143" pos:column="23">[<expr><literal type="number" pos:line="143" pos:column="24">1<pos:position pos:line="143" pos:column="25"/></literal></expr>]<pos:position pos:line="143" pos:column="26"/></index></name><operator pos:line="143" pos:column="26">.<pos:position pos:line="143" pos:column="27"/></operator><name pos:line="143" pos:column="27">pvBuffer<pos:position pos:line="143" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="37">size<pos:position pos:line="143" pos:column="41"/></name></expr></argument>)<pos:position pos:line="143" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="144" pos:column="11">connssl<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">-&gt;<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="20">decdata_offset<pos:position pos:line="144" pos:column="34"/></name></name> <operator pos:line="144" pos:column="35">+=<pos:position pos:line="144" pos:column="37"/></operator> <name pos:line="144" pos:column="38">size<pos:position pos:line="144" pos:column="42"/></name></expr>;<pos:position pos:line="144" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="147" pos:column="9">infof<pos:position pos:line="147" pos:column="14"/></name><argument_list pos:line="147" pos:column="14">(<argument><expr><name pos:line="147" pos:column="15">data<pos:position pos:line="147" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="21">"schannel: decrypted data added: %zu\n"<pos:position pos:line="147" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="62">size<pos:position pos:line="147" pos:column="66"/></name></expr></argument>)<pos:position pos:line="147" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">infof<pos:position pos:line="148" pos:column="14"/></name><argument_list pos:line="148" pos:column="14">(<argument><expr><name pos:line="148" pos:column="15">data<pos:position pos:line="148" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="21">"schannel: decrypted data cached: offset %zu length %zu\n"<pos:position pos:line="148" pos:column="79"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="149" pos:column="15">connssl<pos:position pos:line="149" pos:column="22"/></name><operator pos:line="149" pos:column="22">-&gt;<pos:position pos:line="149" pos:column="27"/></operator><name pos:line="149" pos:column="24">decdata_offset<pos:position pos:line="149" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="40">connssl<pos:position pos:line="149" pos:column="47"/></name><operator pos:line="149" pos:column="47">-&gt;<pos:position pos:line="149" pos:column="52"/></operator><name pos:line="149" pos:column="49">decdata_length<pos:position pos:line="149" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="150" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="152" pos:column="7">/* check for remaining encrypted data */</comment>
      <if pos:line="153" pos:column="7">if<condition pos:line="153" pos:column="9">(<expr><name><name pos:line="153" pos:column="10">inbuf<pos:position pos:line="153" pos:column="15"/></name><index pos:line="153" pos:column="15">[<expr><literal type="number" pos:line="153" pos:column="16">3<pos:position pos:line="153" pos:column="17"/></literal></expr>]<pos:position pos:line="153" pos:column="18"/></index></name><operator pos:line="153" pos:column="18">.<pos:position pos:line="153" pos:column="19"/></operator><name pos:line="153" pos:column="19">BufferType<pos:position pos:line="153" pos:column="29"/></name> <operator pos:line="153" pos:column="30">==<pos:position pos:line="153" pos:column="32"/></operator> <name pos:line="153" pos:column="33">SECBUFFER_EXTRA<pos:position pos:line="153" pos:column="48"/></name> <operator pos:line="153" pos:column="49">&amp;&amp;<pos:position pos:line="153" pos:column="59"/></operator> <name><name pos:line="153" pos:column="52">inbuf<pos:position pos:line="153" pos:column="57"/></name><index pos:line="153" pos:column="57">[<expr><literal type="number" pos:line="153" pos:column="58">3<pos:position pos:line="153" pos:column="59"/></literal></expr>]<pos:position pos:line="153" pos:column="60"/></index></name><operator pos:line="153" pos:column="60">.<pos:position pos:line="153" pos:column="61"/></operator><name pos:line="153" pos:column="61">cbBuffer<pos:position pos:line="153" pos:column="69"/></name> <operator pos:line="153" pos:column="70">&gt;<pos:position pos:line="153" pos:column="74"/></operator> <literal type="number" pos:line="153" pos:column="72">0<pos:position pos:line="153" pos:column="73"/></literal></expr>)<pos:position pos:line="153" pos:column="74"/></condition><then pos:line="153" pos:column="74"> <block pos:line="153" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="154" pos:column="9">infof<pos:position pos:line="154" pos:column="14"/></name><argument_list pos:line="154" pos:column="14">(<argument><expr><name pos:line="154" pos:column="15">data<pos:position pos:line="154" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="21">"schannel: encrypted data length: %lu\n"<pos:position pos:line="154" pos:column="61"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="155" pos:column="15">inbuf<pos:position pos:line="155" pos:column="20"/></name><index pos:line="155" pos:column="20">[<expr><literal type="number" pos:line="155" pos:column="21">3<pos:position pos:line="155" pos:column="22"/></literal></expr>]<pos:position pos:line="155" pos:column="23"/></index></name><operator pos:line="155" pos:column="23">.<pos:position pos:line="155" pos:column="24"/></operator><name pos:line="155" pos:column="24">cbBuffer<pos:position pos:line="155" pos:column="32"/></name></expr></argument>)<pos:position pos:line="155" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="157" pos:column="9">/* check if the remaining data is less than the total amount
         * and therefore begins after the already processed data
        */</comment>
        <if pos:line="160" pos:column="9">if<condition pos:line="160" pos:column="11">(<expr><name><name pos:line="160" pos:column="12">connssl<pos:position pos:line="160" pos:column="19"/></name><operator pos:line="160" pos:column="19">-&gt;<pos:position pos:line="160" pos:column="24"/></operator><name pos:line="160" pos:column="21">encdata_offset<pos:position pos:line="160" pos:column="35"/></name></name> <operator pos:line="160" pos:column="36">&gt;<pos:position pos:line="160" pos:column="40"/></operator> <name><name pos:line="160" pos:column="38">inbuf<pos:position pos:line="160" pos:column="43"/></name><index pos:line="160" pos:column="43">[<expr><literal type="number" pos:line="160" pos:column="44">3<pos:position pos:line="160" pos:column="45"/></literal></expr>]<pos:position pos:line="160" pos:column="46"/></index></name><operator pos:line="160" pos:column="46">.<pos:position pos:line="160" pos:column="47"/></operator><name pos:line="160" pos:column="47">cbBuffer<pos:position pos:line="160" pos:column="55"/></name></expr>)<pos:position pos:line="160" pos:column="56"/></condition><then pos:line="160" pos:column="56"> <block pos:line="160" pos:column="57">{
          <comment type="block" pos:line="161" pos:column="11">/* move remaining encrypted data forward to the beginning of
             buffer */</comment>
          <expr_stmt><expr><call><name pos:line="163" pos:column="11">memmove<pos:position pos:line="163" pos:column="18"/></name><argument_list pos:line="163" pos:column="18">(<argument><expr><name><name pos:line="163" pos:column="19">connssl<pos:position pos:line="163" pos:column="26"/></name><operator pos:line="163" pos:column="26">-&gt;<pos:position pos:line="163" pos:column="31"/></operator><name pos:line="163" pos:column="28">encdata_buffer<pos:position pos:line="163" pos:column="42"/></name></name></expr></argument>,
                  <argument><expr><operator pos:line="164" pos:column="19">(<pos:position pos:line="164" pos:column="20"/></operator><name><name pos:line="164" pos:column="20">connssl<pos:position pos:line="164" pos:column="27"/></name><operator pos:line="164" pos:column="27">-&gt;<pos:position pos:line="164" pos:column="32"/></operator><name pos:line="164" pos:column="29">encdata_buffer<pos:position pos:line="164" pos:column="43"/></name></name> <operator pos:line="164" pos:column="44">+<pos:position pos:line="164" pos:column="45"/></operator> <name><name pos:line="164" pos:column="46">connssl<pos:position pos:line="164" pos:column="53"/></name><operator pos:line="164" pos:column="53">-&gt;<pos:position pos:line="164" pos:column="58"/></operator><name pos:line="164" pos:column="55">encdata_offset<pos:position pos:line="164" pos:column="69"/></name></name><operator pos:line="164" pos:column="69">)<pos:position pos:line="164" pos:column="70"/></operator> <operator pos:line="164" pos:column="71">-<pos:position pos:line="164" pos:column="72"/></operator>
                    <name><name pos:line="165" pos:column="21">inbuf<pos:position pos:line="165" pos:column="26"/></name><index pos:line="165" pos:column="26">[<expr><literal type="number" pos:line="165" pos:column="27">3<pos:position pos:line="165" pos:column="28"/></literal></expr>]<pos:position pos:line="165" pos:column="29"/></index></name><operator pos:line="165" pos:column="29">.<pos:position pos:line="165" pos:column="30"/></operator><name pos:line="165" pos:column="30">cbBuffer<pos:position pos:line="165" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="40">inbuf<pos:position pos:line="165" pos:column="45"/></name><index pos:line="165" pos:column="45">[<expr><literal type="number" pos:line="165" pos:column="46">3<pos:position pos:line="165" pos:column="47"/></literal></expr>]<pos:position pos:line="165" pos:column="48"/></index></name><operator pos:line="165" pos:column="48">.<pos:position pos:line="165" pos:column="49"/></operator><name pos:line="165" pos:column="49">cbBuffer<pos:position pos:line="165" pos:column="57"/></name></expr></argument>)<pos:position pos:line="165" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="59"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="166" pos:column="11">connssl<pos:position pos:line="166" pos:column="18"/></name><operator pos:line="166" pos:column="18">-&gt;<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="20">encdata_offset<pos:position pos:line="166" pos:column="34"/></name></name> <operator pos:line="166" pos:column="35">=<pos:position pos:line="166" pos:column="36"/></operator> <name><name pos:line="166" pos:column="37">inbuf<pos:position pos:line="166" pos:column="42"/></name><index pos:line="166" pos:column="42">[<expr><literal type="number" pos:line="166" pos:column="43">3<pos:position pos:line="166" pos:column="44"/></literal></expr>]<pos:position pos:line="166" pos:column="45"/></index></name><operator pos:line="166" pos:column="45">.<pos:position pos:line="166" pos:column="46"/></operator><name pos:line="166" pos:column="46">cbBuffer<pos:position pos:line="166" pos:column="54"/></name></expr>;<pos:position pos:line="166" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="167" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="169" pos:column="9">infof<pos:position pos:line="169" pos:column="14"/></name><argument_list pos:line="169" pos:column="14">(<argument><expr><name pos:line="169" pos:column="15">data<pos:position pos:line="169" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="21">"schannel: encrypted data cached: offset %zu length %zu\n"<pos:position pos:line="169" pos:column="79"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="170" pos:column="15">connssl<pos:position pos:line="170" pos:column="22"/></name><operator pos:line="170" pos:column="22">-&gt;<pos:position pos:line="170" pos:column="27"/></operator><name pos:line="170" pos:column="24">encdata_offset<pos:position pos:line="170" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="40">connssl<pos:position pos:line="170" pos:column="47"/></name><operator pos:line="170" pos:column="47">-&gt;<pos:position pos:line="170" pos:column="52"/></operator><name pos:line="170" pos:column="49">encdata_length<pos:position pos:line="170" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="171" pos:column="8"/></block></then>
      <else pos:line="172" pos:column="7">else<block pos:line="172" pos:column="11">{
        <comment type="block" pos:line="173" pos:column="9">/* reset encrypted buffer offset, because there is no data remaining */</comment>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">connssl<pos:position pos:line="174" pos:column="16"/></name><operator pos:line="174" pos:column="16">-&gt;<pos:position pos:line="174" pos:column="21"/></operator><name pos:line="174" pos:column="18">encdata_offset<pos:position pos:line="174" pos:column="32"/></name></name> <operator pos:line="174" pos:column="33">=<pos:position pos:line="174" pos:column="34"/></operator> <literal type="number" pos:line="174" pos:column="35">0<pos:position pos:line="174" pos:column="36"/></literal></expr>;<pos:position pos:line="174" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="175" pos:column="8"/></block></else></if>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="178" pos:column="5">/* check if server wants to renegotiate the connection context */</comment>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">(<expr><name pos:line="179" pos:column="8">sspi_status<pos:position pos:line="179" pos:column="19"/></name> <operator pos:line="179" pos:column="20">==<pos:position pos:line="179" pos:column="22"/></operator> <name pos:line="179" pos:column="23">SEC_I_RENEGOTIATE<pos:position pos:line="179" pos:column="40"/></name></expr>)<pos:position pos:line="179" pos:column="41"/></condition><then pos:line="179" pos:column="41"> <block pos:line="179" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="180" pos:column="7">infof<pos:position pos:line="180" pos:column="12"/></name><argument_list pos:line="180" pos:column="12">(<argument><expr><name pos:line="180" pos:column="13">data<pos:position pos:line="180" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="19">"schannel: remote party requests SSL/TLS renegotiation\n"<pos:position pos:line="180" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="78"/></expr_stmt>

      <comment type="block" pos:line="182" pos:column="7">/* begin renegotiation */</comment>
      <expr_stmt><expr><call><name pos:line="183" pos:column="7">infof<pos:position pos:line="183" pos:column="12"/></name><argument_list pos:line="183" pos:column="12">(<argument><expr><name pos:line="183" pos:column="13">data<pos:position pos:line="183" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="19">"schannel: renegotiating SSL/TLS connection\n"<pos:position pos:line="183" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="184" pos:column="7">connssl<pos:position pos:line="184" pos:column="14"/></name><operator pos:line="184" pos:column="14">-&gt;<pos:position pos:line="184" pos:column="19"/></operator><name pos:line="184" pos:column="16">state<pos:position pos:line="184" pos:column="21"/></name></name> <operator pos:line="184" pos:column="22">=<pos:position pos:line="184" pos:column="23"/></operator> <name pos:line="184" pos:column="24">ssl_connection_negotiating<pos:position pos:line="184" pos:column="50"/></name></expr>;<pos:position pos:line="184" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="185" pos:column="7">connssl<pos:position pos:line="185" pos:column="14"/></name><operator pos:line="185" pos:column="14">-&gt;<pos:position pos:line="185" pos:column="19"/></operator><name pos:line="185" pos:column="16">connecting_state<pos:position pos:line="185" pos:column="32"/></name></name> <operator pos:line="185" pos:column="33">=<pos:position pos:line="185" pos:column="34"/></operator> <name pos:line="185" pos:column="35">ssl_connect_2_writing<pos:position pos:line="185" pos:column="56"/></name></expr>;<pos:position pos:line="185" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name pos:line="186" pos:column="7">result<pos:position pos:line="186" pos:column="13"/></name> <operator pos:line="186" pos:column="14">=<pos:position pos:line="186" pos:column="15"/></operator> <call><name pos:line="186" pos:column="16">schannel_connect_common<pos:position pos:line="186" pos:column="39"/></name><argument_list pos:line="186" pos:column="39">(<argument><expr><name pos:line="186" pos:column="40">conn<pos:position pos:line="186" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="46">sockindex<pos:position pos:line="186" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="57">FALSE<pos:position pos:line="186" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="64">&amp;<pos:position pos:line="186" pos:column="69"/></operator><name pos:line="186" pos:column="65">done<pos:position pos:line="186" pos:column="69"/></name></expr></argument>)<pos:position pos:line="186" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="71"/></expr_stmt>
      <if pos:line="187" pos:column="7">if<condition pos:line="187" pos:column="9">(<expr><name pos:line="187" pos:column="10">result<pos:position pos:line="187" pos:column="16"/></name></expr>)<pos:position pos:line="187" pos:column="17"/></condition><then pos:line="187" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="188" pos:column="9">*<pos:position pos:line="188" pos:column="10"/></operator><name pos:line="188" pos:column="10">err<pos:position pos:line="188" pos:column="13"/></name> <operator pos:line="188" pos:column="14">=<pos:position pos:line="188" pos:column="15"/></operator> <name pos:line="188" pos:column="16">result<pos:position pos:line="188" pos:column="22"/></name></expr>;<pos:position pos:line="188" pos:column="23"/></expr_stmt></block></then>
      <else pos:line="189" pos:column="7">else <block pos:line="189" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">infof<pos:position pos:line="190" pos:column="14"/></name><argument_list pos:line="190" pos:column="14">(<argument><expr><name pos:line="190" pos:column="15">data<pos:position pos:line="190" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="21">"schannel: SSL/TLS connection renegotiated\n"<pos:position pos:line="190" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="68"/></expr_stmt>
        <comment type="block" pos:line="191" pos:column="9">/* now retry receiving data */</comment>
        <return pos:line="192" pos:column="9">return <expr><call><name pos:line="192" pos:column="16">schannel_recv<pos:position pos:line="192" pos:column="29"/></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">conn<pos:position pos:line="192" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="36">sockindex<pos:position pos:line="192" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="47">buf<pos:position pos:line="192" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="52">len<pos:position pos:line="192" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="57">err<pos:position pos:line="192" pos:column="60"/></name></expr></argument>)<pos:position pos:line="192" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="62"/></return>
      }<pos:position pos:line="193" pos:column="8"/></block></else></if>
    }<pos:position pos:line="194" pos:column="6"/></block></then></if>
  }<pos:position pos:line="195" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="197" pos:column="3">infof<pos:position pos:line="197" pos:column="8"/></name><argument_list pos:line="197" pos:column="8">(<argument><expr><name pos:line="197" pos:column="9">data<pos:position pos:line="197" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="15">"schannel: decrypted data buffer: offset %zu length %zu\n"<pos:position pos:line="197" pos:column="73"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="198" pos:column="9">connssl<pos:position pos:line="198" pos:column="16"/></name><operator pos:line="198" pos:column="16">-&gt;<pos:position pos:line="198" pos:column="21"/></operator><name pos:line="198" pos:column="18">decdata_offset<pos:position pos:line="198" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="34">connssl<pos:position pos:line="198" pos:column="41"/></name><operator pos:line="198" pos:column="41">-&gt;<pos:position pos:line="198" pos:column="46"/></operator><name pos:line="198" pos:column="43">decdata_length<pos:position pos:line="198" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="200" pos:column="3">/* copy requested decrypted data to supplied buffer */</comment>
  <expr_stmt><expr><name pos:line="201" pos:column="3">size<pos:position pos:line="201" pos:column="7"/></name> <operator pos:line="201" pos:column="8">=<pos:position pos:line="201" pos:column="9"/></operator> <ternary><condition><expr><name pos:line="201" pos:column="10">len<pos:position pos:line="201" pos:column="13"/></name> <operator pos:line="201" pos:column="14">&lt;<pos:position pos:line="201" pos:column="18"/></operator> <name><name pos:line="201" pos:column="16">connssl<pos:position pos:line="201" pos:column="23"/></name><operator pos:line="201" pos:column="23">-&gt;<pos:position pos:line="201" pos:column="28"/></operator><name pos:line="201" pos:column="25">decdata_offset<pos:position pos:line="201" pos:column="39"/></name></name></expr> ?<pos:position pos:line="201" pos:column="41"/></condition><then pos:line="201" pos:column="41"> <expr><name pos:line="201" pos:column="42">len<pos:position pos:line="201" pos:column="45"/></name></expr> <pos:position pos:line="201" pos:column="46"/></then><else pos:line="201" pos:column="46">: <expr><name><name pos:line="201" pos:column="48">connssl<pos:position pos:line="201" pos:column="55"/></name><operator pos:line="201" pos:column="55">-&gt;<pos:position pos:line="201" pos:column="60"/></operator><name pos:line="201" pos:column="57">decdata_offset<pos:position pos:line="201" pos:column="71"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="201" pos:column="72"/></expr_stmt>
  <if pos:line="202" pos:column="3">if<condition pos:line="202" pos:column="5">(<expr><name pos:line="202" pos:column="6">size<pos:position pos:line="202" pos:column="10"/></name> <operator pos:line="202" pos:column="11">&gt;<pos:position pos:line="202" pos:column="15"/></operator> <literal type="number" pos:line="202" pos:column="13">0<pos:position pos:line="202" pos:column="14"/></literal></expr>)<pos:position pos:line="202" pos:column="15"/></condition><then pos:line="202" pos:column="15"> <block pos:line="202" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="203" pos:column="5">memcpy<pos:position pos:line="203" pos:column="11"/></name><argument_list pos:line="203" pos:column="11">(<argument><expr><name pos:line="203" pos:column="12">buf<pos:position pos:line="203" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="17">connssl<pos:position pos:line="203" pos:column="24"/></name><operator pos:line="203" pos:column="24">-&gt;<pos:position pos:line="203" pos:column="29"/></operator><name pos:line="203" pos:column="26">decdata_buffer<pos:position pos:line="203" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="42">size<pos:position pos:line="203" pos:column="46"/></name></expr></argument>)<pos:position pos:line="203" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="204" pos:column="5">ret<pos:position pos:line="204" pos:column="8"/></name> <operator pos:line="204" pos:column="9">=<pos:position pos:line="204" pos:column="10"/></operator> <name pos:line="204" pos:column="11">size<pos:position pos:line="204" pos:column="15"/></name></expr>;<pos:position pos:line="204" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="206" pos:column="5">/* move remaining decrypted data forward to the beginning of buffer */</comment>
    <expr_stmt><expr><call><name pos:line="207" pos:column="5">memmove<pos:position pos:line="207" pos:column="12"/></name><argument_list pos:line="207" pos:column="12">(<argument><expr><name><name pos:line="207" pos:column="13">connssl<pos:position pos:line="207" pos:column="20"/></name><operator pos:line="207" pos:column="20">-&gt;<pos:position pos:line="207" pos:column="25"/></operator><name pos:line="207" pos:column="22">decdata_buffer<pos:position pos:line="207" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="38">connssl<pos:position pos:line="207" pos:column="45"/></name><operator pos:line="207" pos:column="45">-&gt;<pos:position pos:line="207" pos:column="50"/></operator><name pos:line="207" pos:column="47">decdata_buffer<pos:position pos:line="207" pos:column="61"/></name></name> <operator pos:line="207" pos:column="62">+<pos:position pos:line="207" pos:column="63"/></operator> <name pos:line="207" pos:column="64">size<pos:position pos:line="207" pos:column="68"/></name></expr></argument>,
            <argument><expr><name><name pos:line="208" pos:column="13">connssl<pos:position pos:line="208" pos:column="20"/></name><operator pos:line="208" pos:column="20">-&gt;<pos:position pos:line="208" pos:column="25"/></operator><name pos:line="208" pos:column="22">decdata_offset<pos:position pos:line="208" pos:column="36"/></name></name> <operator pos:line="208" pos:column="37">-<pos:position pos:line="208" pos:column="38"/></operator> <name pos:line="208" pos:column="39">size<pos:position pos:line="208" pos:column="43"/></name></expr></argument>)<pos:position pos:line="208" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="209" pos:column="5">connssl<pos:position pos:line="209" pos:column="12"/></name><operator pos:line="209" pos:column="12">-&gt;<pos:position pos:line="209" pos:column="17"/></operator><name pos:line="209" pos:column="14">decdata_offset<pos:position pos:line="209" pos:column="28"/></name></name> <operator pos:line="209" pos:column="29">-=<pos:position pos:line="209" pos:column="31"/></operator> <name pos:line="209" pos:column="32">size<pos:position pos:line="209" pos:column="36"/></name></expr>;<pos:position pos:line="209" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="211" pos:column="5">infof<pos:position pos:line="211" pos:column="10"/></name><argument_list pos:line="211" pos:column="10">(<argument><expr><name pos:line="211" pos:column="11">data<pos:position pos:line="211" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="17">"schannel: decrypted data returned %zd\n"<pos:position pos:line="211" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="211" pos:column="60">size<pos:position pos:line="211" pos:column="64"/></name></expr></argument>)<pos:position pos:line="211" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="212" pos:column="5">infof<pos:position pos:line="212" pos:column="10"/></name><argument_list pos:line="212" pos:column="10">(<argument><expr><name pos:line="212" pos:column="11">data<pos:position pos:line="212" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="17">"schannel: decrypted data buffer: offset %zu length %zu\n"<pos:position pos:line="212" pos:column="75"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="213" pos:column="11">connssl<pos:position pos:line="213" pos:column="18"/></name><operator pos:line="213" pos:column="18">-&gt;<pos:position pos:line="213" pos:column="23"/></operator><name pos:line="213" pos:column="20">decdata_offset<pos:position pos:line="213" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="36">connssl<pos:position pos:line="213" pos:column="43"/></name><operator pos:line="213" pos:column="43">-&gt;<pos:position pos:line="213" pos:column="48"/></operator><name pos:line="213" pos:column="45">decdata_length<pos:position pos:line="213" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="214" pos:column="4"/></block></then>
  <else pos:line="215" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="216" pos:column="5">ret<pos:position pos:line="216" pos:column="8"/></name> <operator pos:line="216" pos:column="9">=<pos:position pos:line="216" pos:column="10"/></operator> <literal type="number" pos:line="216" pos:column="11">0<pos:position pos:line="216" pos:column="12"/></literal></expr>;<pos:position pos:line="216" pos:column="13"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="218" pos:column="3">/* check if the server closed the connection */</comment>
  <if pos:line="219" pos:column="3">if<condition pos:line="219" pos:column="5">(<expr><name pos:line="219" pos:column="6">ret<pos:position pos:line="219" pos:column="9"/></name> <operator pos:line="219" pos:column="10">&lt;=<pos:position pos:line="219" pos:column="15"/></operator> <literal type="number" pos:line="219" pos:column="13">0<pos:position pos:line="219" pos:column="14"/></literal> <operator pos:line="219" pos:column="15">&amp;&amp;<pos:position pos:line="219" pos:column="25"/></operator> <operator pos:line="219" pos:column="18">(<pos:position pos:line="219" pos:column="19"/></operator> <comment type="block" pos:line="219" pos:column="20">/* special check for Windows 2000 Professional */</comment>
      <name pos:line="220" pos:column="7">sspi_status<pos:position pos:line="220" pos:column="18"/></name> <operator pos:line="220" pos:column="19">==<pos:position pos:line="220" pos:column="21"/></operator> <name pos:line="220" pos:column="22">SEC_I_CONTEXT_EXPIRED<pos:position pos:line="220" pos:column="43"/></name> <operator pos:line="220" pos:column="44">||<pos:position pos:line="220" pos:column="46"/></operator> <operator pos:line="220" pos:column="47">(<pos:position pos:line="220" pos:column="48"/></operator><name pos:line="220" pos:column="48">sspi_status<pos:position pos:line="220" pos:column="59"/></name> <operator pos:line="220" pos:column="60">==<pos:position pos:line="220" pos:column="62"/></operator> <name pos:line="220" pos:column="63">SEC_E_OK<pos:position pos:line="220" pos:column="71"/></name> <operator pos:line="220" pos:column="72">&amp;&amp;<pos:position pos:line="220" pos:column="82"/></operator>
        <name><name pos:line="221" pos:column="9">connssl<pos:position pos:line="221" pos:column="16"/></name><operator pos:line="221" pos:column="16">-&gt;<pos:position pos:line="221" pos:column="21"/></operator><name pos:line="221" pos:column="18">encdata_offset<pos:position pos:line="221" pos:column="32"/></name></name> <operator pos:line="221" pos:column="33">&gt;<pos:position pos:line="221" pos:column="37"/></operator> <literal type="number" pos:line="221" pos:column="35">0<pos:position pos:line="221" pos:column="36"/></literal> <operator pos:line="221" pos:column="37">&amp;&amp;<pos:position pos:line="221" pos:column="47"/></operator> <name><name pos:line="221" pos:column="40">connssl<pos:position pos:line="221" pos:column="47"/></name><operator pos:line="221" pos:column="47">-&gt;<pos:position pos:line="221" pos:column="52"/></operator><name pos:line="221" pos:column="49">encdata_buffer<pos:position pos:line="221" pos:column="63"/></name><index pos:line="221" pos:column="63">[<expr><literal type="number" pos:line="221" pos:column="64">0<pos:position pos:line="221" pos:column="65"/></literal></expr>]<pos:position pos:line="221" pos:column="66"/></index></name> <operator pos:line="221" pos:column="67">==<pos:position pos:line="221" pos:column="69"/></operator> <literal type="number" pos:line="221" pos:column="70">0x15<pos:position pos:line="221" pos:column="74"/></literal><operator pos:line="221" pos:column="74">)<pos:position pos:line="221" pos:column="75"/></operator><operator pos:line="221" pos:column="75">)<pos:position pos:line="221" pos:column="76"/></operator></expr>)<pos:position pos:line="221" pos:column="77"/></condition><then pos:line="221" pos:column="77"> <block pos:line="221" pos:column="78">{
    <expr_stmt><expr><call><name pos:line="222" pos:column="5">infof<pos:position pos:line="222" pos:column="10"/></name><argument_list pos:line="222" pos:column="10">(<argument><expr><name pos:line="222" pos:column="11">data<pos:position pos:line="222" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="17">"schannel: server closed the connection\n"<pos:position pos:line="222" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="223" pos:column="5">*<pos:position pos:line="223" pos:column="6"/></operator><name pos:line="223" pos:column="6">err<pos:position pos:line="223" pos:column="9"/></name> <operator pos:line="223" pos:column="10">=<pos:position pos:line="223" pos:column="11"/></operator> <name pos:line="223" pos:column="12">CURLE_OK<pos:position pos:line="223" pos:column="20"/></name></expr>;<pos:position pos:line="223" pos:column="21"/></expr_stmt>
    <return pos:line="224" pos:column="5">return <expr><literal type="number" pos:line="224" pos:column="12">0<pos:position pos:line="224" pos:column="13"/></literal></expr>;<pos:position pos:line="224" pos:column="14"/></return>
  }<pos:position pos:line="225" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="227" pos:column="3">/* check if something went wrong and we need to return an error */</comment>
  <if pos:line="228" pos:column="3">if<condition pos:line="228" pos:column="5">(<expr><name pos:line="228" pos:column="6">ret<pos:position pos:line="228" pos:column="9"/></name> <operator pos:line="228" pos:column="10">&lt;<pos:position pos:line="228" pos:column="14"/></operator> <literal type="number" pos:line="228" pos:column="12">0<pos:position pos:line="228" pos:column="13"/></literal> <operator pos:line="228" pos:column="14">&amp;&amp;<pos:position pos:line="228" pos:column="24"/></operator> <name pos:line="228" pos:column="17">sspi_status<pos:position pos:line="228" pos:column="28"/></name> <operator pos:line="228" pos:column="29">!=<pos:position pos:line="228" pos:column="31"/></operator> <name pos:line="228" pos:column="32">SEC_E_OK<pos:position pos:line="228" pos:column="40"/></name></expr>)<pos:position pos:line="228" pos:column="41"/></condition><then pos:line="228" pos:column="41"> <block pos:line="228" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="229" pos:column="5">infof<pos:position pos:line="229" pos:column="10"/></name><argument_list pos:line="229" pos:column="10">(<argument><expr><name pos:line="229" pos:column="11">data<pos:position pos:line="229" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="17">"schannel: failed to read data from server: %s\n"<pos:position pos:line="229" pos:column="66"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="230" pos:column="11">Curl_sspi_strerror<pos:position pos:line="230" pos:column="29"/></name><argument_list pos:line="230" pos:column="29">(<argument><expr><name pos:line="230" pos:column="30">conn<pos:position pos:line="230" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="36">sspi_status<pos:position pos:line="230" pos:column="47"/></name></expr></argument>)<pos:position pos:line="230" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="230" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="231" pos:column="5">*<pos:position pos:line="231" pos:column="6"/></operator><name pos:line="231" pos:column="6">err<pos:position pos:line="231" pos:column="9"/></name> <operator pos:line="231" pos:column="10">=<pos:position pos:line="231" pos:column="11"/></operator> <name pos:line="231" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="231" pos:column="28"/></name></expr>;<pos:position pos:line="231" pos:column="29"/></expr_stmt>
    <return pos:line="232" pos:column="5">return <expr><operator pos:line="232" pos:column="12">-<pos:position pos:line="232" pos:column="13"/></operator><literal type="number" pos:line="232" pos:column="13">1<pos:position pos:line="232" pos:column="14"/></literal></expr>;<pos:position pos:line="232" pos:column="15"/></return>
  }<pos:position pos:line="233" pos:column="4"/></block></then></if>

  <return pos:line="235" pos:column="3">return <expr><name pos:line="235" pos:column="10">ret<pos:position pos:line="235" pos:column="13"/></name></expr>;<pos:position pos:line="235" pos:column="14"/></return>
}<pos:position pos:line="236" pos:column="2"/></block></function></unit>

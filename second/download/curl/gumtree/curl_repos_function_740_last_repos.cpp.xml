<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_740_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">clear_advisor_read_lock<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">filename<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">error<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">res<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/*
  ** Log all removal failures. Even those due to file not existing.
  ** This allows to detect if unexpectedly the file has already been
  ** removed by a process different than the one that should do this.
  */</comment>

  <do pos:line="12" pos:column="3">do <block pos:line="12" pos:column="6">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">res<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">unlink<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">filename<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block> while<condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">res<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&amp;&amp;<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">error<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">errno<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="35">==<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">EINTR<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">)<pos:position pos:line="14" pos:column="44"/></operator></expr>)<pos:position pos:line="14" pos:column="45"/></condition>;<pos:position pos:line="14" pos:column="46"/></do>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">res<pos:position pos:line="15" pos:column="9"/></name></expr>)<pos:position pos:line="15" pos:column="10"/></condition><then pos:line="15" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="5">logmsg<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"Error removing lock file %s error: %d %s"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>,
           <argument><expr><name pos:line="17" pos:column="12">filename<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">error<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="29">strerror<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">error<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

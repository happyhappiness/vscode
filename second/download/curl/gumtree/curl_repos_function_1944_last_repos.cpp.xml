<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1944_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">ftp_parse_url_path<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">connectdata<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">conn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/* the ftp struct is already inited in ftp_connect() */</comment>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FTP<pos:position pos:line="6" pos:column="13"/></name></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ftp<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">req<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">.<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">protop<pos:position pos:line="6" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ftp_conn<pos:position pos:line="7" pos:column="18"/></name></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">ftpc<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">proto<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">ftpc<pos:position pos:line="7" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">slash_pos<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>  <comment type="block" pos:line="8" pos:column="27">/* position of the first '/' char in curpos */</comment>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">path_to_use<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name><name pos:line="9" pos:column="29">data<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">state<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">path<pos:position pos:line="9" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">cur_pos<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">filename<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">cur_pos<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">path_to_use<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt> <comment type="block" pos:line="13" pos:column="26">/* current position in path. point at the begin of
                            next path component */</comment>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">ftpc<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">ctl_valid<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">FALSE<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">ftpc<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">cwdfail<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">FALSE<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>

  <switch pos:line="19" pos:column="3">switch<condition pos:line="19" pos:column="9">(<expr><name><name pos:line="19" pos:column="10">data<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">set<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">ftp_filemethod<pos:position pos:line="19" pos:column="34"/></name></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition> <block pos:line="19" pos:column="36">{
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">FTPFILE_NOCWD<pos:position pos:line="20" pos:column="21"/></name></expr>:<pos:position pos:line="20" pos:column="22"/></case>
    <comment type="block" pos:line="21" pos:column="5">/* fastest, but less standard-compliant */</comment>

    <comment type="block" pos:line="23" pos:column="5">/*
      The best time to check whether the path is a file or directory is right
      here. so:

      the first condition in the if() right here, is there just in case
      someone decides to set path to NULL one day
   */</comment>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name><name pos:line="30" pos:column="8">path_to_use<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name> <operator pos:line="30" pos:column="23">&amp;&amp;<pos:position pos:line="30" pos:column="33"/></operator>
       <operator pos:line="31" pos:column="8">(<pos:position pos:line="31" pos:column="9"/></operator><name><name pos:line="31" pos:column="9">path_to_use<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><call><name pos:line="31" pos:column="21">strlen<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">path_to_use<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call> <operator pos:line="31" pos:column="41">-<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="43">1<pos:position pos:line="31" pos:column="44"/></literal></expr>]<pos:position pos:line="31" pos:column="45"/></index></name> <operator pos:line="31" pos:column="46">!=<pos:position pos:line="31" pos:column="48"/></operator> <literal type="char" pos:line="31" pos:column="49">'/'<pos:position pos:line="31" pos:column="52"/></literal><operator pos:line="31" pos:column="52">)<pos:position pos:line="31" pos:column="53"/></operator></expr> )<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">filename<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">path_to_use<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt></block></then></if>  <comment type="block" pos:line="32" pos:column="32">/* this is a full file path */</comment>
    <comment type="block" pos:line="33" pos:column="5">/*
      else {
        ftpc-&gt;file is not used anywhere other than for operations on a file.
        In other words, never for directory operations.
        So we can safely leave filename as NULL here and use it as a
        argument in dir/file decisions.
      }
    */</comment>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>

  <case pos:line="43" pos:column="3">case <expr><name pos:line="43" pos:column="8">FTPFILE_SINGLECWD<pos:position pos:line="43" pos:column="25"/></name></expr>:<pos:position pos:line="43" pos:column="26"/></case>
    <comment type="block" pos:line="44" pos:column="5">/* get the last slash */</comment>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><operator pos:line="45" pos:column="8">!<pos:position pos:line="45" pos:column="9"/></operator><name><name pos:line="45" pos:column="9">path_to_use<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><literal type="number" pos:line="45" pos:column="21">0<pos:position pos:line="45" pos:column="22"/></literal></expr>]<pos:position pos:line="45" pos:column="23"/></index></name></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24"> <block pos:line="45" pos:column="25">{
      <comment type="block" pos:line="46" pos:column="7">/* no dir, no file */</comment>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">ftpc<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">dirdepth<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">0<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="50" pos:column="5">slash_pos<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">strrchr<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">cur_pos<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="34">'/'<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><name pos:line="51" pos:column="8">slash_pos<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">||<pos:position pos:line="51" pos:column="20"/></operator> <operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="22">*<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">cur_pos<pos:position pos:line="51" pos:column="30"/></name></expr>)<pos:position pos:line="51" pos:column="31"/></condition><then pos:line="51" pos:column="31"> <block pos:line="51" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">size_t<pos:position pos:line="52" pos:column="13"/></name></type> <name pos:line="52" pos:column="14">dirlen<pos:position pos:line="52" pos:column="20"/></name> <init pos:line="52" pos:column="21">= <expr><name pos:line="52" pos:column="23">slash_pos<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">-<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">cur_pos<pos:position pos:line="52" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="41"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="53" pos:column="7">CURLcode<pos:position pos:line="53" pos:column="15"/></name></type> <name pos:line="53" pos:column="16">result<pos:position pos:line="53" pos:column="22"/></name></decl>;<pos:position pos:line="53" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><name><name pos:line="55" pos:column="7">ftpc<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">dirs<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <call><name pos:line="55" pos:column="20">calloc<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><literal type="number" pos:line="55" pos:column="27">1<pos:position pos:line="55" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="30">sizeof<argument_list pos:line="55" pos:column="36">(<argument><expr><name><name pos:line="55" pos:column="37">ftpc<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">dirs<pos:position pos:line="55" pos:column="47"/></name><index pos:line="55" pos:column="47">[<expr><literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr>]<pos:position pos:line="55" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><operator pos:line="56" pos:column="10">!<pos:position pos:line="56" pos:column="11"/></operator><name><name pos:line="56" pos:column="11">ftpc<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">dirs<pos:position pos:line="56" pos:column="21"/></name></name></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22">
        <block type="pseudo"><return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></return></block></then></if>

      <if pos:line="59" pos:column="7">if<condition pos:line="59" pos:column="9">(<expr><operator pos:line="59" pos:column="10">!<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">dirlen<pos:position pos:line="59" pos:column="17"/></name></expr>)<pos:position pos:line="59" pos:column="18"/></condition><then pos:line="59" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="9">dirlen<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">++<pos:position pos:line="60" pos:column="17"/></operator></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="62" pos:column="7">result<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">Curl_urldecode<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name><name pos:line="62" pos:column="31">conn<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">data<pos:position pos:line="62" pos:column="41"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="62" pos:column="43">slash_pos<pos:position pos:line="62" pos:column="52"/></name></expr> ?<pos:position pos:line="62" pos:column="54"/></condition><then pos:line="62" pos:column="54"> <expr><name pos:line="62" pos:column="55">cur_pos<pos:position pos:line="62" pos:column="62"/></name></expr> <pos:position pos:line="62" pos:column="63"/></then><else pos:line="62" pos:column="63">: <expr><literal type="string" pos:line="62" pos:column="65">"/"<pos:position pos:line="62" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="63" pos:column="31">slash_pos<pos:position pos:line="63" pos:column="40"/></name></expr> ?<pos:position pos:line="63" pos:column="42"/></condition><then pos:line="63" pos:column="42"> <expr><name pos:line="63" pos:column="43">dirlen<pos:position pos:line="63" pos:column="49"/></name></expr> <pos:position pos:line="63" pos:column="50"/></then><else pos:line="63" pos:column="50">: <expr><literal type="number" pos:line="63" pos:column="52">1<pos:position pos:line="63" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><operator pos:line="64" pos:column="31">&amp;<pos:position pos:line="64" pos:column="36"/></operator><name><name pos:line="64" pos:column="32">ftpc<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">-&gt;<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="38">dirs<pos:position pos:line="64" pos:column="42"/></name><index pos:line="64" pos:column="42">[<expr><literal type="number" pos:line="64" pos:column="43">0<pos:position pos:line="64" pos:column="44"/></literal></expr>]<pos:position pos:line="64" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">NULL<pos:position pos:line="64" pos:column="51"/></name></expr></argument>,
                              <argument><expr><name pos:line="65" pos:column="31">FALSE<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><name pos:line="66" pos:column="10">result<pos:position pos:line="66" pos:column="16"/></name></expr>)<pos:position pos:line="66" pos:column="17"/></condition><then pos:line="66" pos:column="17"> <block pos:line="66" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">freedirs<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">ftpc<pos:position pos:line="67" pos:column="22"/></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">result<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></return>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">ftpc<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">dirdepth<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <literal type="number" pos:line="70" pos:column="24">1<pos:position pos:line="70" pos:column="25"/></literal></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt> <comment type="block" pos:line="70" pos:column="27">/* we consider it to be a single dir */</comment>
      <expr_stmt><expr><name pos:line="71" pos:column="7">filename<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="71" pos:column="18">slash_pos<pos:position pos:line="71" pos:column="27"/></name></expr> ?<pos:position pos:line="71" pos:column="29"/></condition><then pos:line="71" pos:column="29"> <expr><name pos:line="71" pos:column="30">slash_pos<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">+<pos:position pos:line="71" pos:column="41"/></operator> <literal type="number" pos:line="71" pos:column="42">1<pos:position pos:line="71" pos:column="43"/></literal></expr> <pos:position pos:line="71" pos:column="44"/></then><else pos:line="71" pos:column="44">: <expr><name pos:line="71" pos:column="46">cur_pos<pos:position pos:line="71" pos:column="53"/></name></expr></else></ternary></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt> <comment type="block" pos:line="71" pos:column="55">/* rest is file name */</comment>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <else pos:line="73" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="7">filename<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="18">cur_pos<pos:position pos:line="74" pos:column="25"/></name></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt></block></else></if>  <comment type="block" pos:line="74" pos:column="28">/* this is a file name only */</comment>
    <break pos:line="75" pos:column="5">break;<pos:position pos:line="75" pos:column="11"/></break>

  <default pos:line="77" pos:column="3">default:<pos:position pos:line="77" pos:column="11"/></default> <comment type="block" pos:line="77" pos:column="12">/* allow pretty much anything */</comment>
  <case pos:line="78" pos:column="3">case <expr><name pos:line="78" pos:column="8">FTPFILE_MULTICWD<pos:position pos:line="78" pos:column="24"/></name></expr>:<pos:position pos:line="78" pos:column="25"/></case>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">ftpc<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">dirdepth<pos:position pos:line="79" pos:column="19"/></name></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <literal type="number" pos:line="79" pos:column="22">0<pos:position pos:line="79" pos:column="23"/></literal></expr>;<pos:position pos:line="79" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">ftpc<pos:position pos:line="80" pos:column="9"/></name><operator pos:line="80" pos:column="9">-&gt;<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="11">diralloc<pos:position pos:line="80" pos:column="19"/></name></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <literal type="number" pos:line="80" pos:column="22">5<pos:position pos:line="80" pos:column="23"/></literal></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt> <comment type="block" pos:line="80" pos:column="25">/* default dir depth to allocate */</comment>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">ftpc<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">dirs<pos:position pos:line="81" pos:column="15"/></name></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">calloc<pos:position pos:line="81" pos:column="24"/></name><argument_list pos:line="81" pos:column="24">(<argument><expr><name><name pos:line="81" pos:column="25">ftpc<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">-&gt;<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="31">diralloc<pos:position pos:line="81" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="81" pos:column="41">sizeof<argument_list pos:line="81" pos:column="47">(<argument><expr><name><name pos:line="81" pos:column="48">ftpc<pos:position pos:line="81" pos:column="52"/></name><operator pos:line="81" pos:column="52">-&gt;<pos:position pos:line="81" pos:column="57"/></operator><name pos:line="81" pos:column="54">dirs<pos:position pos:line="81" pos:column="58"/></name><index pos:line="81" pos:column="58">[<expr><literal type="number" pos:line="81" pos:column="59">0<pos:position pos:line="81" pos:column="60"/></literal></expr>]<pos:position pos:line="81" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="64"/></expr_stmt>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><operator pos:line="82" pos:column="8">!<pos:position pos:line="82" pos:column="9"/></operator><name><name pos:line="82" pos:column="9">ftpc<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">dirs<pos:position pos:line="82" pos:column="19"/></name></name></expr>)<pos:position pos:line="82" pos:column="20"/></condition><then pos:line="82" pos:column="20">
      <block type="pseudo"><return pos:line="83" pos:column="7">return <expr><name pos:line="83" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="83" pos:column="33"/></name></expr>;<pos:position pos:line="83" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="85" pos:column="5">/* we have a special case for listing the root dir only */</comment>
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><operator pos:line="86" pos:column="8">!<pos:position pos:line="86" pos:column="9"/></operator><call><name pos:line="86" pos:column="9">strcmp<pos:position pos:line="86" pos:column="15"/></name><argument_list pos:line="86" pos:column="15">(<argument><expr><name pos:line="86" pos:column="16">path_to_use<pos:position pos:line="86" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"/"<pos:position pos:line="86" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="34"/></condition><then pos:line="86" pos:column="34"> <block pos:line="86" pos:column="35">{
      <expr_stmt><expr><name pos:line="87" pos:column="7">cur_pos<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">++<pos:position pos:line="87" pos:column="16"/></operator></expr>;<pos:position pos:line="87" pos:column="17"/></expr_stmt> <comment type="block" pos:line="87" pos:column="18">/* make it point to the zero byte */</comment>
      <expr_stmt><expr><name><name pos:line="88" pos:column="7">ftpc<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">dirs<pos:position pos:line="88" pos:column="17"/></name><index pos:line="88" pos:column="17">[<expr><literal type="number" pos:line="88" pos:column="18">0<pos:position pos:line="88" pos:column="19"/></literal></expr>]<pos:position pos:line="88" pos:column="20"/></index></name> <operator pos:line="88" pos:column="21">=<pos:position pos:line="88" pos:column="22"/></operator> <call><name pos:line="88" pos:column="23">strdup<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><literal type="string" pos:line="88" pos:column="30">"/"<pos:position pos:line="88" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="89" pos:column="7">ftpc<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">-&gt;<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="13">dirdepth<pos:position pos:line="89" pos:column="21"/></name></name><operator pos:line="89" pos:column="21">++<pos:position pos:line="89" pos:column="23"/></operator></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then>
    <else pos:line="91" pos:column="5">else <block pos:line="91" pos:column="10">{
      <comment type="block" pos:line="92" pos:column="7">/* parse the URL path into separate path components */</comment>
      <while pos:line="93" pos:column="7">while<condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">(<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">slash_pos<pos:position pos:line="93" pos:column="23"/></name> <operator pos:line="93" pos:column="24">=<pos:position pos:line="93" pos:column="25"/></operator> <call><name pos:line="93" pos:column="26">strchr<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">cur_pos<pos:position pos:line="93" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="93" pos:column="42">'/'<pos:position pos:line="93" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="46"/></argument_list></call><operator pos:line="93" pos:column="46">)<pos:position pos:line="93" pos:column="47"/></operator> <operator pos:line="93" pos:column="48">!=<pos:position pos:line="93" pos:column="50"/></operator> <name pos:line="93" pos:column="51">NULL<pos:position pos:line="93" pos:column="55"/></name></expr>)<pos:position pos:line="93" pos:column="56"/></condition> <block pos:line="93" pos:column="57">{
        <comment type="block" pos:line="94" pos:column="9">/* 1 or 0 pointer offset to indicate absolute directory */</comment>
        <decl_stmt><decl><type><name pos:line="95" pos:column="9">ssize_t<pos:position pos:line="95" pos:column="16"/></name></type> <name pos:line="95" pos:column="17">absolute_dir<pos:position pos:line="95" pos:column="29"/></name> <init pos:line="95" pos:column="30">= <expr><ternary><condition><expr><operator pos:line="95" pos:column="32">(<pos:position pos:line="95" pos:column="33"/></operator><operator pos:line="95" pos:column="33">(<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="34">cur_pos<pos:position pos:line="95" pos:column="41"/></name> <operator pos:line="95" pos:column="42">-<pos:position pos:line="95" pos:column="43"/></operator> <name><name pos:line="95" pos:column="44">data<pos:position pos:line="95" pos:column="48"/></name><operator pos:line="95" pos:column="48">-&gt;<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="50">state<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">.<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="56">path<pos:position pos:line="95" pos:column="60"/></name></name> <operator pos:line="95" pos:column="61">&gt;<pos:position pos:line="95" pos:column="65"/></operator> <literal type="number" pos:line="95" pos:column="63">0<pos:position pos:line="95" pos:column="64"/></literal><operator pos:line="95" pos:column="64">)<pos:position pos:line="95" pos:column="65"/></operator> <operator pos:line="95" pos:column="66">&amp;&amp;<pos:position pos:line="95" pos:column="76"/></operator>
                                <operator pos:line="96" pos:column="33">(<pos:position pos:line="96" pos:column="34"/></operator><name><name pos:line="96" pos:column="34">ftpc<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">dirdepth<pos:position pos:line="96" pos:column="48"/></name></name> <operator pos:line="96" pos:column="49">==<pos:position pos:line="96" pos:column="51"/></operator> <literal type="number" pos:line="96" pos:column="52">0<pos:position pos:line="96" pos:column="53"/></literal><operator pos:line="96" pos:column="53">)<pos:position pos:line="96" pos:column="54"/></operator><operator pos:line="96" pos:column="54">)<pos:position pos:line="96" pos:column="55"/></operator></expr>?<pos:position pos:line="96" pos:column="56"/></condition><then><expr><literal type="number" pos:line="96" pos:column="56">1<pos:position pos:line="96" pos:column="57"/></literal></expr></then><else pos:line="96" pos:column="57">:<expr><literal type="number" pos:line="96" pos:column="58">0<pos:position pos:line="96" pos:column="59"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="96" pos:column="60"/></decl_stmt>

        <comment type="block" pos:line="98" pos:column="9">/* seek out the next path component */</comment>
        <if pos:line="99" pos:column="9">if<condition pos:line="99" pos:column="11">(<expr><name pos:line="99" pos:column="12">slash_pos<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">-<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">cur_pos<pos:position pos:line="99" pos:column="29"/></name></expr>)<pos:position pos:line="99" pos:column="30"/></condition><then pos:line="99" pos:column="30"> <block pos:line="99" pos:column="31">{
          <comment type="block" pos:line="100" pos:column="11">/* we skip empty path components, like "x//y" since the FTP command
             CWD requires a parameter and a non-existent parameter a) doesn't
             work on many servers and b) has no effect on the others. */</comment>
          <decl_stmt><decl><type><name pos:line="103" pos:column="11">size_t<pos:position pos:line="103" pos:column="17"/></name></type> <name pos:line="103" pos:column="18">len<pos:position pos:line="103" pos:column="21"/></name> <init pos:line="103" pos:column="22">= <expr><name pos:line="103" pos:column="24">slash_pos<pos:position pos:line="103" pos:column="33"/></name> <operator pos:line="103" pos:column="34">-<pos:position pos:line="103" pos:column="35"/></operator> <name pos:line="103" pos:column="36">cur_pos<pos:position pos:line="103" pos:column="43"/></name> <operator pos:line="103" pos:column="44">+<pos:position pos:line="103" pos:column="45"/></operator> <name pos:line="103" pos:column="46">absolute_dir<pos:position pos:line="103" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="103" pos:column="59"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="104" pos:column="11">CURLcode<pos:position pos:line="104" pos:column="19"/></name></type> <name pos:line="104" pos:column="20">result<pos:position pos:line="104" pos:column="26"/></name> <init pos:line="104" pos:column="27">=
            <expr><call><name pos:line="105" pos:column="13">Curl_urldecode<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name><name pos:line="105" pos:column="28">conn<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">-&gt;<pos:position pos:line="105" pos:column="37"/></operator><name pos:line="105" pos:column="34">data<pos:position pos:line="105" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="40">cur_pos<pos:position pos:line="105" pos:column="47"/></name> <operator pos:line="105" pos:column="48">-<pos:position pos:line="105" pos:column="49"/></operator> <name pos:line="105" pos:column="50">absolute_dir<pos:position pos:line="105" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="64">len<pos:position pos:line="105" pos:column="67"/></name></expr></argument>,
                           <argument><expr><operator pos:line="106" pos:column="28">&amp;<pos:position pos:line="106" pos:column="33"/></operator><name><name pos:line="106" pos:column="29">ftpc<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">-&gt;<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="35">dirs<pos:position pos:line="106" pos:column="39"/></name><index pos:line="106" pos:column="39">[<expr><name><name pos:line="106" pos:column="40">ftpc<pos:position pos:line="106" pos:column="44"/></name><operator pos:line="106" pos:column="44">-&gt;<pos:position pos:line="106" pos:column="49"/></operator><name pos:line="106" pos:column="46">dirdepth<pos:position pos:line="106" pos:column="54"/></name></name></expr>]<pos:position pos:line="106" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="57">NULL<pos:position pos:line="106" pos:column="61"/></name></expr></argument>,
                           <argument><expr><name pos:line="107" pos:column="28">TRUE<pos:position pos:line="107" pos:column="32"/></name></expr></argument>)<pos:position pos:line="107" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="107" pos:column="34"/></decl_stmt>
          <if pos:line="108" pos:column="11">if<condition pos:line="108" pos:column="13">(<expr><name pos:line="108" pos:column="14">result<pos:position pos:line="108" pos:column="20"/></name></expr>)<pos:position pos:line="108" pos:column="21"/></condition><then pos:line="108" pos:column="21"> <block pos:line="108" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="109" pos:column="13">freedirs<pos:position pos:line="109" pos:column="21"/></name><argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">ftpc<pos:position pos:line="109" pos:column="26"/></name></expr></argument>)<pos:position pos:line="109" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="28"/></expr_stmt>
            <return pos:line="110" pos:column="13">return <expr><name pos:line="110" pos:column="20">result<pos:position pos:line="110" pos:column="26"/></name></expr>;<pos:position pos:line="110" pos:column="27"/></return>
          }<pos:position pos:line="111" pos:column="12"/></block></then></if>
        }<pos:position pos:line="112" pos:column="10"/></block></then>
        <else pos:line="113" pos:column="9">else <block pos:line="113" pos:column="14">{
          <expr_stmt><expr><name pos:line="114" pos:column="11">cur_pos<pos:position pos:line="114" pos:column="18"/></name> <operator pos:line="114" pos:column="19">=<pos:position pos:line="114" pos:column="20"/></operator> <name pos:line="114" pos:column="21">slash_pos<pos:position pos:line="114" pos:column="30"/></name> <operator pos:line="114" pos:column="31">+<pos:position pos:line="114" pos:column="32"/></operator> <literal type="number" pos:line="114" pos:column="33">1<pos:position pos:line="114" pos:column="34"/></literal></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt> <comment type="block" pos:line="114" pos:column="36">/* jump to the rest of the string */</comment>
          <if pos:line="115" pos:column="11">if<condition pos:line="115" pos:column="13">(<expr><operator pos:line="115" pos:column="14">!<pos:position pos:line="115" pos:column="15"/></operator><name><name pos:line="115" pos:column="15">ftpc<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">dirdepth<pos:position pos:line="115" pos:column="29"/></name></name></expr>)<pos:position pos:line="115" pos:column="30"/></condition><then pos:line="115" pos:column="30"> <block pos:line="115" pos:column="31">{
            <comment type="block" pos:line="116" pos:column="13">/* path starts with a slash, add that as a directory */</comment>
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">ftpc<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">-&gt;<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="19">dirs<pos:position pos:line="117" pos:column="23"/></name><index pos:line="117" pos:column="23">[<expr><name><name pos:line="117" pos:column="24">ftpc<pos:position pos:line="117" pos:column="28"/></name><operator pos:line="117" pos:column="28">-&gt;<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="30">dirdepth<pos:position pos:line="117" pos:column="38"/></name></name></expr>]<pos:position pos:line="117" pos:column="39"/></index></name> <operator pos:line="117" pos:column="40">=<pos:position pos:line="117" pos:column="41"/></operator> <call><name pos:line="117" pos:column="42">strdup<pos:position pos:line="117" pos:column="48"/></name><argument_list pos:line="117" pos:column="48">(<argument><expr><literal type="string" pos:line="117" pos:column="49">"/"<pos:position pos:line="117" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="54"/></expr_stmt>
            <if pos:line="118" pos:column="13">if<condition pos:line="118" pos:column="15">(<expr><operator pos:line="118" pos:column="16">!<pos:position pos:line="118" pos:column="17"/></operator><name><name pos:line="118" pos:column="17">ftpc<pos:position pos:line="118" pos:column="21"/></name><operator pos:line="118" pos:column="21">-&gt;<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="23">dirs<pos:position pos:line="118" pos:column="27"/></name><index pos:line="118" pos:column="27">[<expr><name><name pos:line="118" pos:column="28">ftpc<pos:position pos:line="118" pos:column="32"/></name><operator pos:line="118" pos:column="32">-&gt;<pos:position pos:line="118" pos:column="37"/></operator><name pos:line="118" pos:column="34">dirdepth<pos:position pos:line="118" pos:column="42"/></name></name><operator pos:line="118" pos:column="42">++<pos:position pos:line="118" pos:column="44"/></operator></expr>]<pos:position pos:line="118" pos:column="45"/></index></name></expr>)<pos:position pos:line="118" pos:column="46"/></condition><then pos:line="118" pos:column="46"> <block pos:line="118" pos:column="47">{ <comment type="block" pos:line="118" pos:column="49">/* run out of memory ... */</comment>
              <expr_stmt><expr><call><name pos:line="119" pos:column="15">failf<pos:position pos:line="119" pos:column="20"/></name><argument_list pos:line="119" pos:column="20">(<argument><expr><name pos:line="119" pos:column="21">data<pos:position pos:line="119" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="27">"no memory"<pos:position pos:line="119" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="40"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="120" pos:column="15">freedirs<pos:position pos:line="120" pos:column="23"/></name><argument_list pos:line="120" pos:column="23">(<argument><expr><name pos:line="120" pos:column="24">ftpc<pos:position pos:line="120" pos:column="28"/></name></expr></argument>)<pos:position pos:line="120" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="30"/></expr_stmt>
              <return pos:line="121" pos:column="15">return <expr><name pos:line="121" pos:column="22">CURLE_OUT_OF_MEMORY<pos:position pos:line="121" pos:column="41"/></name></expr>;<pos:position pos:line="121" pos:column="42"/></return>
            }<pos:position pos:line="122" pos:column="14"/></block></then></if>
          }<pos:position pos:line="123" pos:column="12"/></block></then></if>
          <continue pos:line="124" pos:column="11">continue;<pos:position pos:line="124" pos:column="20"/></continue>
        }<pos:position pos:line="125" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="127" pos:column="9">cur_pos<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">=<pos:position pos:line="127" pos:column="18"/></operator> <name pos:line="127" pos:column="19">slash_pos<pos:position pos:line="127" pos:column="28"/></name> <operator pos:line="127" pos:column="29">+<pos:position pos:line="127" pos:column="30"/></operator> <literal type="number" pos:line="127" pos:column="31">1<pos:position pos:line="127" pos:column="32"/></literal></expr>;<pos:position pos:line="127" pos:column="33"/></expr_stmt> <comment type="block" pos:line="127" pos:column="34">/* jump to the rest of the string */</comment>
        <if pos:line="128" pos:column="9">if<condition pos:line="128" pos:column="11">(<expr><operator pos:line="128" pos:column="12">++<pos:position pos:line="128" pos:column="14"/></operator><name><name pos:line="128" pos:column="14">ftpc<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">-&gt;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="20">dirdepth<pos:position pos:line="128" pos:column="28"/></name></name> <operator pos:line="128" pos:column="29">&gt;=<pos:position pos:line="128" pos:column="34"/></operator> <name><name pos:line="128" pos:column="32">ftpc<pos:position pos:line="128" pos:column="36"/></name><operator pos:line="128" pos:column="36">-&gt;<pos:position pos:line="128" pos:column="41"/></operator><name pos:line="128" pos:column="38">diralloc<pos:position pos:line="128" pos:column="46"/></name></name></expr>)<pos:position pos:line="128" pos:column="47"/></condition><then pos:line="128" pos:column="47"> <block pos:line="128" pos:column="48">{
          <comment type="block" pos:line="129" pos:column="11">/* enlarge array */</comment>
          <decl_stmt><decl><type><name pos:line="130" pos:column="11">char<pos:position pos:line="130" pos:column="15"/></name> <modifier pos:line="130" pos:column="16">*<pos:position pos:line="130" pos:column="17"/></modifier><modifier pos:line="130" pos:column="17">*<pos:position pos:line="130" pos:column="18"/></modifier></type><name pos:line="130" pos:column="18">bigger<pos:position pos:line="130" pos:column="24"/></name></decl>;<pos:position pos:line="130" pos:column="25"/></decl_stmt>
          <expr_stmt><expr><name><name pos:line="131" pos:column="11">ftpc<pos:position pos:line="131" pos:column="15"/></name><operator pos:line="131" pos:column="15">-&gt;<pos:position pos:line="131" pos:column="20"/></operator><name pos:line="131" pos:column="17">diralloc<pos:position pos:line="131" pos:column="25"/></name></name> <operator pos:line="131" pos:column="26">*=<pos:position pos:line="131" pos:column="28"/></operator> <literal type="number" pos:line="131" pos:column="29">2<pos:position pos:line="131" pos:column="30"/></literal></expr>;<pos:position pos:line="131" pos:column="31"/></expr_stmt> <comment type="block" pos:line="131" pos:column="32">/* double the size each time */</comment>
          <expr_stmt><expr><name pos:line="132" pos:column="11">bigger<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">=<pos:position pos:line="132" pos:column="19"/></operator> <call><name pos:line="132" pos:column="20">realloc<pos:position pos:line="132" pos:column="27"/></name><argument_list pos:line="132" pos:column="27">(<argument><expr><name><name pos:line="132" pos:column="28">ftpc<pos:position pos:line="132" pos:column="32"/></name><operator pos:line="132" pos:column="32">-&gt;<pos:position pos:line="132" pos:column="37"/></operator><name pos:line="132" pos:column="34">dirs<pos:position pos:line="132" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="40">ftpc<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">-&gt;<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="46">diralloc<pos:position pos:line="132" pos:column="54"/></name></name> <operator pos:line="132" pos:column="55">*<pos:position pos:line="132" pos:column="56"/></operator> <sizeof pos:line="132" pos:column="57">sizeof<argument_list pos:line="132" pos:column="63">(<argument><expr><name><name pos:line="132" pos:column="64">ftpc<pos:position pos:line="132" pos:column="68"/></name><operator pos:line="132" pos:column="68">-&gt;<pos:position pos:line="132" pos:column="73"/></operator><name pos:line="132" pos:column="70">dirs<pos:position pos:line="132" pos:column="74"/></name><index pos:line="132" pos:column="74">[<expr><literal type="number" pos:line="132" pos:column="75">0<pos:position pos:line="132" pos:column="76"/></literal></expr>]<pos:position pos:line="132" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="132" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="80"/></expr_stmt>
          <if pos:line="133" pos:column="11">if<condition pos:line="133" pos:column="13">(<expr><operator pos:line="133" pos:column="14">!<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="15">bigger<pos:position pos:line="133" pos:column="21"/></name></expr>)<pos:position pos:line="133" pos:column="22"/></condition><then pos:line="133" pos:column="22"> <block pos:line="133" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">freedirs<pos:position pos:line="134" pos:column="21"/></name><argument_list pos:line="134" pos:column="21">(<argument><expr><name pos:line="134" pos:column="22">ftpc<pos:position pos:line="134" pos:column="26"/></name></expr></argument>)<pos:position pos:line="134" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="28"/></expr_stmt>
            <return pos:line="135" pos:column="13">return <expr><name pos:line="135" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="135" pos:column="39"/></name></expr>;<pos:position pos:line="135" pos:column="40"/></return>
          }<pos:position pos:line="136" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name><name pos:line="137" pos:column="11">ftpc<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">-&gt;<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="17">dirs<pos:position pos:line="137" pos:column="21"/></name></name> <operator pos:line="137" pos:column="22">=<pos:position pos:line="137" pos:column="23"/></operator> <name pos:line="137" pos:column="24">bigger<pos:position pos:line="137" pos:column="30"/></name></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if>
      }<pos:position pos:line="139" pos:column="8"/></block></while>
    }<pos:position pos:line="140" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="141" pos:column="5">filename<pos:position pos:line="141" pos:column="13"/></name> <operator pos:line="141" pos:column="14">=<pos:position pos:line="141" pos:column="15"/></operator> <name pos:line="141" pos:column="16">cur_pos<pos:position pos:line="141" pos:column="23"/></name></expr>;<pos:position pos:line="141" pos:column="24"/></expr_stmt>  <comment type="block" pos:line="141" pos:column="26">/* the rest is the file name */</comment>
    <break pos:line="142" pos:column="5">break;<pos:position pos:line="142" pos:column="11"/></break>
  }<pos:position pos:line="143" pos:column="4"/></block></switch> <comment type="block" pos:line="143" pos:column="5">/* switch */</comment>

  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><name pos:line="145" pos:column="6">filename<pos:position pos:line="145" pos:column="14"/></name> <operator pos:line="145" pos:column="15">&amp;&amp;<pos:position pos:line="145" pos:column="25"/></operator> <operator pos:line="145" pos:column="18">*<pos:position pos:line="145" pos:column="19"/></operator><name pos:line="145" pos:column="19">filename<pos:position pos:line="145" pos:column="27"/></name></expr>)<pos:position pos:line="145" pos:column="28"/></condition><then pos:line="145" pos:column="28"> <block pos:line="145" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="146" pos:column="5">CURLcode<pos:position pos:line="146" pos:column="13"/></name></type> <name pos:line="146" pos:column="14">result<pos:position pos:line="146" pos:column="20"/></name> <init pos:line="146" pos:column="21">=
      <expr><call><name pos:line="147" pos:column="7">Curl_urldecode<pos:position pos:line="147" pos:column="21"/></name><argument_list pos:line="147" pos:column="21">(<argument><expr><name><name pos:line="147" pos:column="22">conn<pos:position pos:line="147" pos:column="26"/></name><operator pos:line="147" pos:column="26">-&gt;<pos:position pos:line="147" pos:column="31"/></operator><name pos:line="147" pos:column="28">data<pos:position pos:line="147" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="34">filename<pos:position pos:line="147" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="44">0<pos:position pos:line="147" pos:column="45"/></literal></expr></argument>,  <argument><expr><operator pos:line="147" pos:column="48">&amp;<pos:position pos:line="147" pos:column="53"/></operator><name><name pos:line="147" pos:column="49">ftpc<pos:position pos:line="147" pos:column="53"/></name><operator pos:line="147" pos:column="53">-&gt;<pos:position pos:line="147" pos:column="58"/></operator><name pos:line="147" pos:column="55">file<pos:position pos:line="147" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="61">NULL<pos:position pos:line="147" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="67">TRUE<pos:position pos:line="147" pos:column="71"/></name></expr></argument>)<pos:position pos:line="147" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="147" pos:column="73"/></decl_stmt>

    <if pos:line="149" pos:column="5">if<condition pos:line="149" pos:column="7">(<expr><name pos:line="149" pos:column="8">result<pos:position pos:line="149" pos:column="14"/></name></expr>)<pos:position pos:line="149" pos:column="15"/></condition><then pos:line="149" pos:column="15"> <block pos:line="149" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="150" pos:column="7">freedirs<pos:position pos:line="150" pos:column="15"/></name><argument_list pos:line="150" pos:column="15">(<argument><expr><name pos:line="150" pos:column="16">ftpc<pos:position pos:line="150" pos:column="20"/></name></expr></argument>)<pos:position pos:line="150" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="22"/></expr_stmt>
      <return pos:line="151" pos:column="7">return <expr><name pos:line="151" pos:column="14">result<pos:position pos:line="151" pos:column="20"/></name></expr>;<pos:position pos:line="151" pos:column="21"/></return>
    }<pos:position pos:line="152" pos:column="6"/></block></then></if>
  }<pos:position pos:line="153" pos:column="4"/></block></then>
  <else pos:line="154" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="155" pos:column="5">ftpc<pos:position pos:line="155" pos:column="9"/></name><operator pos:line="155" pos:column="9">-&gt;<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="11">file<pos:position pos:line="155" pos:column="15"/></name></name> <operator pos:line="155" pos:column="16">=<pos:position pos:line="155" pos:column="17"/></operator> <name pos:line="155" pos:column="18">NULL<pos:position pos:line="155" pos:column="22"/></name></expr>;<pos:position pos:line="155" pos:column="23"/></expr_stmt></block></else></if> <comment type="block" pos:line="155" pos:column="24">/* instead of point to a zero byte, we make it a NULL
                          pointer */</comment>

  <if pos:line="158" pos:column="3">if<condition pos:line="158" pos:column="5">(<expr><name><name pos:line="158" pos:column="6">data<pos:position pos:line="158" pos:column="10"/></name><operator pos:line="158" pos:column="10">-&gt;<pos:position pos:line="158" pos:column="15"/></operator><name pos:line="158" pos:column="12">set<pos:position pos:line="158" pos:column="15"/></name><operator pos:line="158" pos:column="15">.<pos:position pos:line="158" pos:column="16"/></operator><name pos:line="158" pos:column="16">upload<pos:position pos:line="158" pos:column="22"/></name></name> <operator pos:line="158" pos:column="23">&amp;&amp;<pos:position pos:line="158" pos:column="33"/></operator> <operator pos:line="158" pos:column="26">!<pos:position pos:line="158" pos:column="27"/></operator><name><name pos:line="158" pos:column="27">ftpc<pos:position pos:line="158" pos:column="31"/></name><operator pos:line="158" pos:column="31">-&gt;<pos:position pos:line="158" pos:column="36"/></operator><name pos:line="158" pos:column="33">file<pos:position pos:line="158" pos:column="37"/></name></name> <operator pos:line="158" pos:column="38">&amp;&amp;<pos:position pos:line="158" pos:column="48"/></operator> <operator pos:line="158" pos:column="41">(<pos:position pos:line="158" pos:column="42"/></operator><name><name pos:line="158" pos:column="42">ftp<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">-&gt;<pos:position pos:line="158" pos:column="50"/></operator><name pos:line="158" pos:column="47">transfer<pos:position pos:line="158" pos:column="55"/></name></name> <operator pos:line="158" pos:column="56">==<pos:position pos:line="158" pos:column="58"/></operator> <name pos:line="158" pos:column="59">FTPTRANSFER_BODY<pos:position pos:line="158" pos:column="75"/></name><operator pos:line="158" pos:column="75">)<pos:position pos:line="158" pos:column="76"/></operator></expr>)<pos:position pos:line="158" pos:column="77"/></condition><then pos:line="158" pos:column="77"> <block pos:line="158" pos:column="78">{
    <comment type="block" pos:line="159" pos:column="5">/* We need a file name when uploading. Return error! */</comment>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">failf<pos:position pos:line="160" pos:column="10"/></name><argument_list pos:line="160" pos:column="10">(<argument><expr><name pos:line="160" pos:column="11">data<pos:position pos:line="160" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="17">"Uploading to a URL without a file name!"<pos:position pos:line="160" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="60"/></expr_stmt>
    <return pos:line="161" pos:column="5">return <expr><name pos:line="161" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="161" pos:column="31"/></name></expr>;<pos:position pos:line="161" pos:column="32"/></return>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="164" pos:column="3">ftpc<pos:position pos:line="164" pos:column="7"/></name><operator pos:line="164" pos:column="7">-&gt;<pos:position pos:line="164" pos:column="12"/></operator><name pos:line="164" pos:column="9">cwddone<pos:position pos:line="164" pos:column="16"/></name></name> <operator pos:line="164" pos:column="17">=<pos:position pos:line="164" pos:column="18"/></operator> <name pos:line="164" pos:column="19">FALSE<pos:position pos:line="164" pos:column="24"/></name></expr>;<pos:position pos:line="164" pos:column="25"/></expr_stmt> <comment type="block" pos:line="164" pos:column="26">/* default to not done */</comment>

  <if pos:line="166" pos:column="3">if<condition pos:line="166" pos:column="5">(<expr><name><name pos:line="166" pos:column="6">ftpc<pos:position pos:line="166" pos:column="10"/></name><operator pos:line="166" pos:column="10">-&gt;<pos:position pos:line="166" pos:column="15"/></operator><name pos:line="166" pos:column="12">prevpath<pos:position pos:line="166" pos:column="20"/></name></name></expr>)<pos:position pos:line="166" pos:column="21"/></condition><then pos:line="166" pos:column="21"> <block pos:line="166" pos:column="22">{
    <comment type="block" pos:line="167" pos:column="5">/* prevpath is "raw" so we convert the input path before we compare the
       strings */</comment>
    <decl_stmt><decl><type><name pos:line="169" pos:column="5">size_t<pos:position pos:line="169" pos:column="11"/></name></type> <name pos:line="169" pos:column="12">dlen<pos:position pos:line="169" pos:column="16"/></name></decl>;<pos:position pos:line="169" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="170" pos:column="5">char<pos:position pos:line="170" pos:column="9"/></name> <modifier pos:line="170" pos:column="10">*<pos:position pos:line="170" pos:column="11"/></modifier></type><name pos:line="170" pos:column="11">path<pos:position pos:line="170" pos:column="15"/></name></decl>;<pos:position pos:line="170" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="171" pos:column="5">CURLcode<pos:position pos:line="171" pos:column="13"/></name></type> <name pos:line="171" pos:column="14">result<pos:position pos:line="171" pos:column="20"/></name> <init pos:line="171" pos:column="21">=
      <expr><call><name pos:line="172" pos:column="7">Curl_urldecode<pos:position pos:line="172" pos:column="21"/></name><argument_list pos:line="172" pos:column="21">(<argument><expr><name><name pos:line="172" pos:column="22">conn<pos:position pos:line="172" pos:column="26"/></name><operator pos:line="172" pos:column="26">-&gt;<pos:position pos:line="172" pos:column="31"/></operator><name pos:line="172" pos:column="28">data<pos:position pos:line="172" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="34">data<pos:position pos:line="172" pos:column="38"/></name><operator pos:line="172" pos:column="38">-&gt;<pos:position pos:line="172" pos:column="43"/></operator><name pos:line="172" pos:column="40">state<pos:position pos:line="172" pos:column="45"/></name><operator pos:line="172" pos:column="45">.<pos:position pos:line="172" pos:column="46"/></operator><name pos:line="172" pos:column="46">path<pos:position pos:line="172" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="52">0<pos:position pos:line="172" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="172" pos:column="55">&amp;<pos:position pos:line="172" pos:column="60"/></operator><name pos:line="172" pos:column="56">path<pos:position pos:line="172" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="172" pos:column="62">&amp;<pos:position pos:line="172" pos:column="67"/></operator><name pos:line="172" pos:column="63">dlen<pos:position pos:line="172" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="69">FALSE<pos:position pos:line="172" pos:column="74"/></name></expr></argument>)<pos:position pos:line="172" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="172" pos:column="76"/></decl_stmt>
    <if pos:line="173" pos:column="5">if<condition pos:line="173" pos:column="7">(<expr><name pos:line="173" pos:column="8">result<pos:position pos:line="173" pos:column="14"/></name></expr>)<pos:position pos:line="173" pos:column="15"/></condition><then pos:line="173" pos:column="15"> <block pos:line="173" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="174" pos:column="7">freedirs<pos:position pos:line="174" pos:column="15"/></name><argument_list pos:line="174" pos:column="15">(<argument><expr><name pos:line="174" pos:column="16">ftpc<pos:position pos:line="174" pos:column="20"/></name></expr></argument>)<pos:position pos:line="174" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="22"/></expr_stmt>
      <return pos:line="175" pos:column="7">return <expr><name pos:line="175" pos:column="14">result<pos:position pos:line="175" pos:column="20"/></name></expr>;<pos:position pos:line="175" pos:column="21"/></return>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="178" pos:column="5">dlen<pos:position pos:line="178" pos:column="9"/></name> <operator pos:line="178" pos:column="10">-=<pos:position pos:line="178" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="178" pos:column="13">ftpc<pos:position pos:line="178" pos:column="17"/></name><operator pos:line="178" pos:column="17">-&gt;<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="19">file<pos:position pos:line="178" pos:column="23"/></name></name></expr>?<pos:position pos:line="178" pos:column="24"/></condition><then><expr><call><name pos:line="178" pos:column="24">strlen<pos:position pos:line="178" pos:column="30"/></name><argument_list pos:line="178" pos:column="30">(<argument><expr><name><name pos:line="178" pos:column="31">ftpc<pos:position pos:line="178" pos:column="35"/></name><operator pos:line="178" pos:column="35">-&gt;<pos:position pos:line="178" pos:column="40"/></operator><name pos:line="178" pos:column="37">file<pos:position pos:line="178" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="42"/></argument_list></call></expr></then><else pos:line="178" pos:column="42">:<expr><literal type="number" pos:line="178" pos:column="43">0<pos:position pos:line="178" pos:column="44"/></literal></expr></else></ternary></expr>;<pos:position pos:line="178" pos:column="45"/></expr_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">(<expr><operator pos:line="179" pos:column="8">(<pos:position pos:line="179" pos:column="9"/></operator><name pos:line="179" pos:column="9">dlen<pos:position pos:line="179" pos:column="13"/></name> <operator pos:line="179" pos:column="14">==<pos:position pos:line="179" pos:column="16"/></operator> <call><name pos:line="179" pos:column="17">strlen<pos:position pos:line="179" pos:column="23"/></name><argument_list pos:line="179" pos:column="23">(<argument><expr><name><name pos:line="179" pos:column="24">ftpc<pos:position pos:line="179" pos:column="28"/></name><operator pos:line="179" pos:column="28">-&gt;<pos:position pos:line="179" pos:column="33"/></operator><name pos:line="179" pos:column="30">prevpath<pos:position pos:line="179" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="39"/></argument_list></call><operator pos:line="179" pos:column="39">)<pos:position pos:line="179" pos:column="40"/></operator> <operator pos:line="179" pos:column="41">&amp;&amp;<pos:position pos:line="179" pos:column="51"/></operator>
       <operator pos:line="180" pos:column="8">!<pos:position pos:line="180" pos:column="9"/></operator><call><name pos:line="180" pos:column="9">strncmp<pos:position pos:line="180" pos:column="16"/></name><argument_list pos:line="180" pos:column="16">(<argument><expr><name pos:line="180" pos:column="17">path<pos:position pos:line="180" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="23">ftpc<pos:position pos:line="180" pos:column="27"/></name><operator pos:line="180" pos:column="27">-&gt;<pos:position pos:line="180" pos:column="32"/></operator><name pos:line="180" pos:column="29">prevpath<pos:position pos:line="180" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="39">dlen<pos:position pos:line="180" pos:column="43"/></name></expr></argument>)<pos:position pos:line="180" pos:column="44"/></argument_list></call> <operator pos:line="180" pos:column="45">&amp;&amp;<pos:position pos:line="180" pos:column="55"/></operator>
       <operator pos:line="181" pos:column="8">(<pos:position pos:line="181" pos:column="9"/></operator><name><name pos:line="181" pos:column="9">ftpc<pos:position pos:line="181" pos:column="13"/></name><operator pos:line="181" pos:column="13">-&gt;<pos:position pos:line="181" pos:column="18"/></operator><name pos:line="181" pos:column="15">prevmethod<pos:position pos:line="181" pos:column="25"/></name></name> <operator pos:line="181" pos:column="26">==<pos:position pos:line="181" pos:column="28"/></operator> <name><name pos:line="181" pos:column="29">data<pos:position pos:line="181" pos:column="33"/></name><operator pos:line="181" pos:column="33">-&gt;<pos:position pos:line="181" pos:column="38"/></operator><name pos:line="181" pos:column="35">set<pos:position pos:line="181" pos:column="38"/></name><operator pos:line="181" pos:column="38">.<pos:position pos:line="181" pos:column="39"/></operator><name pos:line="181" pos:column="39">ftp_filemethod<pos:position pos:line="181" pos:column="53"/></name></name><operator pos:line="181" pos:column="53">)<pos:position pos:line="181" pos:column="54"/></operator></expr>)<pos:position pos:line="181" pos:column="55"/></condition><then pos:line="181" pos:column="55"> <block pos:line="181" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="182" pos:column="7">infof<pos:position pos:line="182" pos:column="12"/></name><argument_list pos:line="182" pos:column="12">(<argument><expr><name pos:line="182" pos:column="13">data<pos:position pos:line="182" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="19">"Request has same path as previous transfer\n"<pos:position pos:line="182" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="183" pos:column="7">ftpc<pos:position pos:line="183" pos:column="11"/></name><operator pos:line="183" pos:column="11">-&gt;<pos:position pos:line="183" pos:column="16"/></operator><name pos:line="183" pos:column="13">cwddone<pos:position pos:line="183" pos:column="20"/></name></name> <operator pos:line="183" pos:column="21">=<pos:position pos:line="183" pos:column="22"/></operator> <name pos:line="183" pos:column="23">TRUE<pos:position pos:line="183" pos:column="27"/></name></expr>;<pos:position pos:line="183" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="184" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="185" pos:column="5">free<pos:position pos:line="185" pos:column="9"/></name><argument_list pos:line="185" pos:column="9">(<argument><expr><name pos:line="185" pos:column="10">path<pos:position pos:line="185" pos:column="14"/></name></expr></argument>)<pos:position pos:line="185" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="186" pos:column="4"/></block></then></if>

  <return pos:line="188" pos:column="3">return <expr><name pos:line="188" pos:column="10">CURLE_OK<pos:position pos:line="188" pos:column="18"/></name></expr>;<pos:position pos:line="188" pos:column="19"/></return>
}<pos:position pos:line="189" pos:column="2"/></block></function></unit>

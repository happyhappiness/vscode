<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1219_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ssh_block_statemach<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">bool<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">disconnect<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ssh_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">sshc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">sshc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

  <while pos:line="8" pos:column="3">while<condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">sshc<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">state<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">!=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">SSH_STOP<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">&amp;&amp;<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="38">!<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">result<pos:position pos:line="8" pos:column="45"/></name></expr>)<pos:position pos:line="8" pos:column="46"/></condition> <block pos:line="8" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">block<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">time_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">left<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">1000<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">curltime<pos:position pos:line="11" pos:column="20"/></name></name></type> <name pos:line="11" pos:column="21">now<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">Curl_tvnow<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">()<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">result<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">ssh_statemach_act<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">conn<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="38">&amp;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="39">block<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">result<pos:position pos:line="14" pos:column="14"/></name></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then></if>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">disconnect<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20"> <block pos:line="17" pos:column="21">{
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><call><name pos:line="18" pos:column="10">Curl_pgrsUpdate<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">conn<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="21" pos:column="7">result<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">Curl_speedcheck<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">data<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">now<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><name pos:line="22" pos:column="10">result<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
        <block type="pseudo"><break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="25" pos:column="7">left<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">Curl_timeleft<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">data<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">NULL<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">FALSE<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><name pos:line="26" pos:column="10">left<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&lt;<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">failf<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"Operation timed out"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></return>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">HAVE_LIBSSH2_SESSION_BLOCK_DIRECTION<pos:position pos:line="32" pos:column="44"/></name></cpp:ifdef>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><operator pos:line="33" pos:column="8">!<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="9">result<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&amp;&amp;<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="19">block<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">int<pos:position pos:line="34" pos:column="10"/></name></type> <name pos:line="34" pos:column="11">dir<pos:position pos:line="34" pos:column="14"/></name> <init pos:line="34" pos:column="15">= <expr><call><name pos:line="34" pos:column="17">libssh2_session_block_directions<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name><name pos:line="34" pos:column="50">sshc<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">ssh_session<pos:position pos:line="34" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="69"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">curl_socket_t<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">sock<pos:position pos:line="35" pos:column="25"/></name> <init pos:line="35" pos:column="26">= <expr><name><name pos:line="35" pos:column="28">conn<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">sock<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><name pos:line="35" pos:column="39">FIRSTSOCKET<pos:position pos:line="35" pos:column="50"/></name></expr>]<pos:position pos:line="35" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="35" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">curl_socket_t<pos:position pos:line="36" pos:column="20"/></name></type> <name pos:line="36" pos:column="21">fd_read<pos:position pos:line="36" pos:column="28"/></name> <init pos:line="36" pos:column="29">= <expr><name pos:line="36" pos:column="31">CURL_SOCKET_BAD<pos:position pos:line="36" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="47"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="37" pos:column="7">curl_socket_t<pos:position pos:line="37" pos:column="20"/></name></type> <name pos:line="37" pos:column="21">fd_write<pos:position pos:line="37" pos:column="29"/></name> <init pos:line="37" pos:column="30">= <expr><name pos:line="37" pos:column="32">CURL_SOCKET_BAD<pos:position pos:line="37" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="48"/></decl_stmt>
      <if pos:line="38" pos:column="7">if<condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">LIBSSH2_SESSION_BLOCK_INBOUND<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">&amp;<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="42">dir<pos:position pos:line="38" pos:column="45"/></name></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">fd_read<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">sock<pos:position pos:line="39" pos:column="23"/></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt></block></then></if>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">LIBSSH2_SESSION_BLOCK_OUTBOUND<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">&amp;<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="43">dir<pos:position pos:line="40" pos:column="46"/></name></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">fd_write<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">sock<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt></block></then></if>
      <comment type="block" pos:line="42" pos:column="7">/* wait for the socket to become ready */</comment>
      <expr_stmt><expr><operator pos:line="43" pos:column="7">(<pos:position pos:line="43" pos:column="8"/></operator><name pos:line="43" pos:column="8">void<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">)<pos:position pos:line="43" pos:column="13"/></operator><call><name pos:line="43" pos:column="13">Curl_socket_check<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">fd_read<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">CURL_SOCKET_BAD<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="57">fd_write<pos:position pos:line="43" pos:column="65"/></name></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="44" pos:column="31">left<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">&gt;<pos:position pos:line="44" pos:column="39"/></operator><literal type="number" pos:line="44" pos:column="36">1000<pos:position pos:line="44" pos:column="40"/></literal></expr>?<pos:position pos:line="44" pos:column="41"/></condition><then><expr><literal type="number" pos:line="44" pos:column="41">1000<pos:position pos:line="44" pos:column="45"/></literal></expr></then><else pos:line="44" pos:column="45">:<expr><name pos:line="44" pos:column="46">left<pos:position pos:line="44" pos:column="50"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt> <comment type="block" pos:line="44" pos:column="53">/* ignore result */</comment>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

  }<pos:position pos:line="48" pos:column="4"/></block></while>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">result<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1290_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">curltime<pos:position pos:line="1" pos:column="16"/></name></name></type> <name pos:line="1" pos:column="17">curlx_tvnow<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/*
  ** GetTickCount() is available on _all_ Windows versions from W95 up
  ** to nowadays. Returns milliseconds elapsed since last system boot,
  ** increases monotonically and wraps once 49.7 days have elapsed.
  */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curltime<pos:position pos:line="8" pos:column="18"/></name></name></type> <name pos:line="8" pos:column="19">now<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><operator pos:line="9" pos:column="5">!<pos:position pos:line="9" pos:column="6"/></operator><call><name pos:line="9" pos:column="6">defined<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">_WIN32_WINNT<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call> <operator pos:line="9" pos:column="28">||<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">!<pos:position pos:line="9" pos:column="32"/></operator><call><name pos:line="9" pos:column="32">defined<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">_WIN32_WINNT_VISTA<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call> <operator pos:line="9" pos:column="60">||<pos:position pos:line="9" pos:column="62"/></operator> \
    <operator pos:line="10" pos:column="5">(<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">_WIN32_WINNT<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="21">_WIN32_WINNT_VISTA<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">DWORD<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">milliseconds<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><call><name pos:line="11" pos:column="24">GetTickCount<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">()<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">now<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">tv_sec<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">milliseconds<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">/<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="31">1000<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">now<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">.<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">tv_usec<pos:position pos:line="13" pos:column="14"/></name></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">milliseconds<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">%<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">1000<pos:position pos:line="13" pos:column="37"/></literal><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator> <literal type="number" pos:line="13" pos:column="41">1000<pos:position pos:line="13" pos:column="45"/></literal></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">ULONGLONG<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">milliseconds<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><call><name pos:line="15" pos:column="28">GetTickCount64<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">()<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">now<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">tv_sec<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call pos:line="16" pos:column="16">(<name pos:line="16" pos:column="17">time_t<pos:position pos:line="16" pos:column="23"/></name>) <argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">milliseconds<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">/<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="41">1000<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">now<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">tv_usec<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call pos:line="17" pos:column="17">(<name pos:line="17" pos:column="18">unsigned<pos:position pos:line="17" pos:column="26"/></name> <name pos:line="17" pos:column="27">int<pos:position pos:line="17" pos:column="30"/></name>) <argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">milliseconds<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">%<pos:position pos:line="17" pos:column="47"/></operator> <literal type="number" pos:line="17" pos:column="48">1000<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call> <operator pos:line="17" pos:column="54">*<pos:position pos:line="17" pos:column="55"/></operator> <literal type="number" pos:line="17" pos:column="56">1000<pos:position pos:line="17" pos:column="60"/></literal></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">now<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_226_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sec_prot_internal<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">connectdata<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">level<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">s<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">1048576<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name><name pos:line="8" pos:column="7">conn<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">sec_complete<pos:position pos:line="8" pos:column="25"/></name></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then><block pos:line="8" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">infof<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">conn<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"No security data exchange has taken place.\n"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">level<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then><block pos:line="13" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">Curl_ftpsendf<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name><name pos:line="14" pos:column="19">conn<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">firstsocket<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">conn<pos:position pos:line="14" pos:column="42"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="15" pos:column="19">"PBSZ %u"<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">s<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    <comment type="block" pos:line="16" pos:column="5">/* wait for feedback */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">nread<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">Curl_GetFTPResponse<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">conn<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">firstsocket<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="18" pos:column="33">conn<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">data<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">state<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">buffer<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">conn<pos:position pos:line="18" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">NULL<pos:position pos:line="18" pos:column="69"/></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">nread<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&lt;<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <comment type="block" pos:line="20" pos:column="14">/*CURLE_OPERATION_TIMEOUTED*/</comment><expr><operator pos:line="20" pos:column="43">-<pos:position pos:line="20" pos:column="44"/></operator><literal type="number" pos:line="20" pos:column="44">1<pos:position pos:line="20" pos:column="45"/></literal></expr>;<pos:position pos:line="20" pos:column="46"/></return></block></then></if>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<comment type="block" pos:line="21" pos:column="8">/*ret != COMPLETE*/</comment><expr><name><name pos:line="21" pos:column="27">conn<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">data<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">state<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">.<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">buffer<pos:position pos:line="21" pos:column="51"/></name><index pos:line="21" pos:column="51">[<expr><literal type="number" pos:line="21" pos:column="52">0<pos:position pos:line="21" pos:column="53"/></literal></expr>]<pos:position pos:line="21" pos:column="54"/></index></name> <operator pos:line="21" pos:column="55">!=<pos:position pos:line="21" pos:column="57"/></operator> <literal type="char" pos:line="21" pos:column="58">'2'<pos:position pos:line="21" pos:column="61"/></literal></expr>)<pos:position pos:line="21" pos:column="62"/></condition><then><block pos:line="21" pos:column="62">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">failf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"Failed to set protection buffer size.\n"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">conn<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">buffer_size<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">s<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">strstr<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<comment type="block" pos:line="26" pos:column="16">/*reply_string*/</comment><argument><expr><name><name pos:line="26" pos:column="32">conn<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">data<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">state<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">.<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">buffer<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="58">"PBSZ="<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">p<pos:position pos:line="27" pos:column="9"/></name></expr>)<pos:position pos:line="27" pos:column="10"/></condition><then pos:line="27" pos:column="10">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">sscanf<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">p<pos:position pos:line="28" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="17">"PBSZ=%u"<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">s<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">s<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">&lt;<pos:position pos:line="29" pos:column="14"/></operator> <name><name pos:line="29" pos:column="12">conn<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">buffer_size<pos:position pos:line="29" pos:column="29"/></name></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="7">conn<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">buffer_size<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">s<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">Curl_ftpsendf<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name><name pos:line="33" pos:column="17">conn<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">firstsocket<pos:position pos:line="33" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="36">conn<pos:position pos:line="33" pos:column="40"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="34" pos:column="17">"PROT %c"<pos:position pos:line="34" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="28">level<pos:position pos:line="34" pos:column="33"/></name><index pos:line="34" pos:column="33">[<expr><literal type="string" pos:line="34" pos:column="34">"CSEP"<pos:position pos:line="34" pos:column="40"/></literal></expr>]<pos:position pos:line="34" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
  <comment type="block" pos:line="35" pos:column="3">/* wait for feedback */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">nread<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">Curl_GetFTPResponse<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name><name pos:line="36" pos:column="31">conn<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">firstsocket<pos:position pos:line="36" pos:column="48"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="37" pos:column="31">conn<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">data<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">state<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">.<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="49">buffer<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">conn<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">NULL<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name pos:line="38" pos:column="6">nread<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">&lt;<pos:position pos:line="38" pos:column="16"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>)<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16">
    <block type="pseudo"><return pos:line="39" pos:column="5">return <comment type="block" pos:line="39" pos:column="12">/*CURLE_OPERATION_TIMEOUTED*/</comment><expr><operator pos:line="39" pos:column="41">-<pos:position pos:line="39" pos:column="42"/></operator><literal type="number" pos:line="39" pos:column="42">1<pos:position pos:line="39" pos:column="43"/></literal></expr>;<pos:position pos:line="39" pos:column="44"/></return></block></then></if>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<comment type="block" pos:line="40" pos:column="6">/*ret != COMPLETE*/</comment><expr><name><name pos:line="40" pos:column="25">conn<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">data<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">state<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">.<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">buffer<pos:position pos:line="40" pos:column="49"/></name><index pos:line="40" pos:column="49">[<expr><literal type="number" pos:line="40" pos:column="50">0<pos:position pos:line="40" pos:column="51"/></literal></expr>]<pos:position pos:line="40" pos:column="52"/></index></name> <operator pos:line="40" pos:column="53">!=<pos:position pos:line="40" pos:column="55"/></operator> <literal type="char" pos:line="40" pos:column="56">'2'<pos:position pos:line="40" pos:column="59"/></literal></expr>)<pos:position pos:line="40" pos:column="60"/></condition><then><block pos:line="40" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">failf<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name><name pos:line="41" pos:column="11">conn<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">data<pos:position pos:line="41" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"Failed to set protection level.\n"<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">-<pos:position pos:line="42" pos:column="13"/></operator><literal type="number" pos:line="42" pos:column="13">1<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
    
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">conn<pos:position pos:line="45" pos:column="7"/></name><operator pos:line="45" pos:column="7">-&gt;<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="9">data_prot<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator>enum <name pos:line="45" pos:column="27">protection_level<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">level<pos:position pos:line="45" pos:column="49"/></name></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1757_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Curl_dns_entry<pos:position pos:line="1" pos:column="22"/></name></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type>
<name pos:line="2" pos:column="1">Curl_cache_addr<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">Curl_easy<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">data<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="3" pos:column="17">Curl_addrinfo<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">addr<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">hostname<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">port<pos:position pos:line="5" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="26"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">entry_id<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">entry_len<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">Curl_dns_entry<pos:position pos:line="9" pos:column="24"/></name></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">dns<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">Curl_dns_entry<pos:position pos:line="10" pos:column="24"/></name></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">dns2<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Create an entry id, based upon the hostname and port */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">entry_id<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">create_hostcache_id<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">hostname<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">port<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
  <comment type="block" pos:line="14" pos:column="3">/* If we can't create the entry id, fail */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">entry_id<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">NULL<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="17" pos:column="3">entry_len<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strlen<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">entry_id<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Create a new cache entry */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">dns<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">calloc<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="19">sizeof<argument_list pos:line="20" pos:column="25">(<argument><expr pos:line="20" pos:column="26">struct <name pos:line="20" pos:column="33">Curl_dns_entry<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">dns<pos:position pos:line="21" pos:column="10"/></name></expr>)<pos:position pos:line="21" pos:column="11"/></condition><then pos:line="21" pos:column="11"> <block pos:line="21" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">entry_id<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="26" pos:column="3">dns<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">inuse<pos:position pos:line="26" pos:column="13"/></name></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>   <comment type="block" pos:line="26" pos:column="21">/* the cache has the first reference */</comment>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">dns<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">addr<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">addr<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt> <comment type="block" pos:line="27" pos:column="21">/* this is the address(es) */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">time<pos:position pos:line="28" pos:column="7"/></name><argument_list pos:line="28" pos:column="7">(<argument><expr><operator pos:line="28" pos:column="8">&amp;<pos:position pos:line="28" pos:column="13"/></operator><name><name pos:line="28" pos:column="9">dns<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">timestamp<pos:position pos:line="28" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name><name pos:line="29" pos:column="6">dns<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">timestamp<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="5">dns<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">timestamp<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt></block></then></if>   <comment type="block" pos:line="30" pos:column="27">/* zero indicates CURLOPT_RESOLVE entry */</comment>

  <comment type="block" pos:line="32" pos:column="3">/* Store the resolved data in our DNS cache. */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">dns2<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">Curl_hash_add<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">data<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">dns<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">.<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">hostcache<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">entry_id<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">entry_len<pos:position pos:line="33" pos:column="64"/></name> <operator pos:line="33" pos:column="65">+<pos:position pos:line="33" pos:column="66"/></operator> <literal type="number" pos:line="33" pos:column="67">1<pos:position pos:line="33" pos:column="68"/></literal></expr></argument>,
                       <argument><expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">void<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">*<pos:position pos:line="34" pos:column="31"/></operator><operator pos:line="34" pos:column="31">)<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">dns<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">dns2<pos:position pos:line="35" pos:column="11"/></name></expr>)<pos:position pos:line="35" pos:column="12"/></condition><then pos:line="35" pos:column="12"> <block pos:line="35" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">free<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">dns<pos:position pos:line="36" pos:column="13"/></name></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">free<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name pos:line="37" pos:column="10">entry_id<pos:position pos:line="37" pos:column="18"/></name></expr></argument>)<pos:position pos:line="37" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">dns<pos:position pos:line="41" pos:column="6"/></name> <operator pos:line="41" pos:column="7">=<pos:position pos:line="41" pos:column="8"/></operator> <name pos:line="41" pos:column="9">dns2<pos:position pos:line="41" pos:column="13"/></name></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">dns<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">inuse<pos:position pos:line="42" pos:column="13"/></name></name><operator pos:line="42" pos:column="13">++<pos:position pos:line="42" pos:column="15"/></operator></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>         <comment type="block" pos:line="42" pos:column="25">/* mark entry as in-use */</comment>

  <comment type="block" pos:line="44" pos:column="3">/* free the allocated entry_id */</comment>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">free<pos:position pos:line="45" pos:column="7"/></name><argument_list pos:line="45" pos:column="7">(<argument><expr><name pos:line="45" pos:column="8">entry_id<pos:position pos:line="45" pos:column="16"/></name></expr></argument>)<pos:position pos:line="45" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">dns<pos:position pos:line="47" pos:column="13"/></name></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

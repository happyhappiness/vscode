<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_321_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">curl_socket<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">domain<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">type<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">protocol<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">line<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">source<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">sockfd<pos:position pos:line="4" pos:column="13"/></name><init pos:line="4" pos:column="13">=<expr><call pos:line="4" pos:column="14">(<name pos:line="4" pos:column="15">socket<pos:position pos:line="4" pos:column="21"/></name>)<argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">domain<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="31">type<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="37">protocol<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">logfile<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&amp;&amp;<pos:position pos:line="5" pos:column="24"/></operator> <operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">sockfd<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">!=<pos:position pos:line="5" pos:column="26"/></operator><operator pos:line="5" pos:column="26">-<pos:position pos:line="5" pos:column="27"/></operator><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">fprintf<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">logfile<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="22">"FD %s:%d socket() = %d\n"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>,
            <argument><expr><name pos:line="7" pos:column="13">source<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">line<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">sockfd<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt></block></then></if>
  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">sockfd<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1078_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_gtls_connect<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">connectdata<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">sockindex<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>

<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name><name pos:line="6" pos:column="20">cert_type_priority<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[]<pos:position pos:line="6" pos:column="40"/></index></name> <init pos:line="6" pos:column="41">= <expr><block pos:line="6" pos:column="43">{ <expr><name pos:line="6" pos:column="45">GNUTLS_CRT_X509<pos:position pos:line="6" pos:column="60"/></name></expr>, <expr><literal type="number" pos:line="6" pos:column="62">0<pos:position pos:line="6" pos:column="63"/></literal></expr> }<pos:position pos:line="6" pos:column="65"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="66"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gnutls_session<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">session<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">int<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">cert_list_size<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">gnutls_datum<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">chainp<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">verify_status<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">gnutls_x509_crt<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">x509_cert<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">certbuf<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><literal type="number" pos:line="14" pos:column="16">256<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt> <comment type="block" pos:line="14" pos:column="22">/* big enough? */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">size<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">unsigned<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">int<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">algo<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">int<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">bits<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">time_t<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">certclock<pos:position pos:line="18" pos:column="19"/></name></decl>;<pos:position pos:line="18" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">ptr<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">void<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name pos:line="20" pos:column="9">ssl_sessionid<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">size_t<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">ssl_idsize<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">ENABLE_IPV6<pos:position pos:line="22" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="23" pos:column="3">struct<pos:position pos:line="23" pos:column="9"/></name> <name pos:line="23" pos:column="10">in6_addr<pos:position pos:line="23" pos:column="18"/></name></name></type> <name pos:line="23" pos:column="19">addr<pos:position pos:line="23" pos:column="23"/></name></decl>;<pos:position pos:line="23" pos:column="24"/></decl_stmt>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="25" pos:column="3">struct<pos:position pos:line="25" pos:column="9"/></name> <name pos:line="25" pos:column="10">in_addr<pos:position pos:line="25" pos:column="17"/></name></name></type> <name pos:line="25" pos:column="18">addr<pos:position pos:line="25" pos:column="22"/></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">gtls_inited<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">_Curl_gtls_init<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">()<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* GnuTLS only supports SSLv3 and TLSv1 */</comment>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name><name pos:line="32" pos:column="6">data<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">set<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">ssl<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">version<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">==<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">CURL_SSLVERSION_SSLv2<pos:position pos:line="32" pos:column="52"/></name></expr>)<pos:position pos:line="32" pos:column="53"/></condition><then pos:line="32" pos:column="53"> <block pos:line="32" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">failf<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">data<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="17">"GnuTLS does not support SSLv2"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* allocate a cred struct */</comment>
  <expr_stmt><expr><name pos:line="38" pos:column="3">rc<pos:position pos:line="38" pos:column="5"/></name> <operator pos:line="38" pos:column="6">=<pos:position pos:line="38" pos:column="7"/></operator> <call><name pos:line="38" pos:column="8">gnutls_certificate_allocate_credentials<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><operator pos:line="38" pos:column="48">&amp;<pos:position pos:line="38" pos:column="53"/></operator><name><name pos:line="38" pos:column="49">conn<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">ssl<pos:position pos:line="38" pos:column="58"/></name><index pos:line="38" pos:column="58">[<expr><name pos:line="38" pos:column="59">sockindex<pos:position pos:line="38" pos:column="68"/></name></expr>]<pos:position pos:line="38" pos:column="69"/></index></name><operator pos:line="38" pos:column="69">.<pos:position pos:line="38" pos:column="70"/></operator><name pos:line="38" pos:column="70">cred<pos:position pos:line="38" pos:column="74"/></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name pos:line="39" pos:column="6">rc<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">&lt;<pos:position pos:line="39" pos:column="13"/></operator> <literal type="number" pos:line="39" pos:column="11">0<pos:position pos:line="39" pos:column="12"/></literal></expr>)<pos:position pos:line="39" pos:column="13"/></condition><then pos:line="39" pos:column="13"> <block pos:line="39" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">failf<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">data<pos:position pos:line="40" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="17">"gnutls_cert_all_cred() failed: %s"<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="54">gnutls_strerror<pos:position pos:line="40" pos:column="69"/></name><argument_list pos:line="40" pos:column="69">(<argument><expr><name pos:line="40" pos:column="70">rc<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">data<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">set<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">ssl<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">CAfile<pos:position pos:line="44" pos:column="26"/></name></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27"> <block pos:line="44" pos:column="28">{
    <comment type="block" pos:line="45" pos:column="5">/* set the trusted CA cert bundle file */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">gnutls_certificate_set_verify_flags<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name><name pos:line="46" pos:column="41">conn<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">ssl<pos:position pos:line="46" pos:column="50"/></name><index pos:line="46" pos:column="50">[<expr><name pos:line="46" pos:column="51">sockindex<pos:position pos:line="46" pos:column="60"/></name></expr>]<pos:position pos:line="46" pos:column="61"/></index></name><operator pos:line="46" pos:column="61">.<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="62">cred<pos:position pos:line="46" pos:column="66"/></name></expr></argument>,
                                        <argument><expr><name pos:line="47" pos:column="41">GNUTLS_VERIFY_ALLOW_X509_V1_CA_CRT<pos:position pos:line="47" pos:column="75"/></name></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">rc<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">gnutls_certificate_set_x509_trust_file<pos:position pos:line="49" pos:column="48"/></name><argument_list pos:line="49" pos:column="48">(<argument><expr><name><name pos:line="49" pos:column="49">conn<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">ssl<pos:position pos:line="49" pos:column="58"/></name><index pos:line="49" pos:column="58">[<expr><name pos:line="49" pos:column="59">sockindex<pos:position pos:line="49" pos:column="68"/></name></expr>]<pos:position pos:line="49" pos:column="69"/></index></name><operator pos:line="49" pos:column="69">.<pos:position pos:line="49" pos:column="70"/></operator><name pos:line="49" pos:column="70">cred<pos:position pos:line="49" pos:column="74"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="50" pos:column="49">data<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">set<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">.<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="59">ssl<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">.<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="63">CAfile<pos:position pos:line="50" pos:column="69"/></name></name></expr></argument>,
                                                <argument><expr><name pos:line="51" pos:column="49">GNUTLS_X509_FMT_PEM<pos:position pos:line="51" pos:column="68"/></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><name pos:line="52" pos:column="8">rc<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">&lt;<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>)<pos:position pos:line="52" pos:column="15"/></condition><then pos:line="52" pos:column="15"> <block pos:line="52" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">infof<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">data<pos:position pos:line="53" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="19">"error reading ca cert file %s (%s)\n"<pos:position pos:line="53" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="54" pos:column="13">data<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">set<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">ssl<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">.<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">CAfile<pos:position pos:line="54" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="35">gnutls_strerror<pos:position pos:line="54" pos:column="50"/></name><argument_list pos:line="54" pos:column="50">(<argument><expr><name pos:line="54" pos:column="51">rc<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">(<expr><name><name pos:line="55" pos:column="10">data<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">set<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">.<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">ssl<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">verifypeer<pos:position pos:line="55" pos:column="34"/></name></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
        <block type="pseudo"><return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="56" pos:column="40"/></name></expr>;<pos:position pos:line="56" pos:column="41"/></return></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then>
    <else pos:line="58" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">infof<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><name pos:line="59" pos:column="13">data<pos:position pos:line="59" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="19">"found %d certificates in %s\n"<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>,
            <argument><expr><name pos:line="60" pos:column="13">rc<pos:position pos:line="60" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="17">data<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">set<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">ssl<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">.<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">CAfile<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt></block></else></if>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="63" pos:column="3">/* Initialize TLS session as a client */</comment>
  <expr_stmt><expr><name pos:line="64" pos:column="3">rc<pos:position pos:line="64" pos:column="5"/></name> <operator pos:line="64" pos:column="6">=<pos:position pos:line="64" pos:column="7"/></operator> <call><name pos:line="64" pos:column="8">gnutls_init<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><operator pos:line="64" pos:column="20">&amp;<pos:position pos:line="64" pos:column="25"/></operator><name><name pos:line="64" pos:column="21">conn<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">ssl<pos:position pos:line="64" pos:column="30"/></name><index pos:line="64" pos:column="30">[<expr><name pos:line="64" pos:column="31">sockindex<pos:position pos:line="64" pos:column="40"/></name></expr>]<pos:position pos:line="64" pos:column="41"/></index></name><operator pos:line="64" pos:column="41">.<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">session<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="51">GNUTLS_CLIENT<pos:position pos:line="64" pos:column="64"/></name></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name pos:line="65" pos:column="6">rc<pos:position pos:line="65" pos:column="8"/></name></expr>)<pos:position pos:line="65" pos:column="9"/></condition><then pos:line="65" pos:column="9"> <block pos:line="65" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">failf<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">data<pos:position pos:line="66" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="17">"gnutls_init() failed: %d"<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">rc<pos:position pos:line="66" pos:column="47"/></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* convenient assign */</comment>
  <expr_stmt><expr><name pos:line="71" pos:column="3">session<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">=<pos:position pos:line="71" pos:column="12"/></operator> <name><name pos:line="71" pos:column="13">conn<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">-&gt;<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="19">ssl<pos:position pos:line="71" pos:column="22"/></name><index pos:line="71" pos:column="22">[<expr><name pos:line="71" pos:column="23">sockindex<pos:position pos:line="71" pos:column="32"/></name></expr>]<pos:position pos:line="71" pos:column="33"/></index></name><operator pos:line="71" pos:column="33">.<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="34">session<pos:position pos:line="71" pos:column="41"/></name></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>

  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><operator pos:line="73" pos:column="7">(<pos:position pos:line="73" pos:column="8"/></operator><literal type="number" pos:line="73" pos:column="8">0<pos:position pos:line="73" pos:column="9"/></literal> <operator pos:line="73" pos:column="10">==<pos:position pos:line="73" pos:column="12"/></operator> <call><name pos:line="73" pos:column="13">Curl_inet_pton<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">AF_INET<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="37">conn<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">-&gt;<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="43">host<pos:position pos:line="73" pos:column="47"/></name><operator pos:line="73" pos:column="47">.<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="48">name<pos:position pos:line="73" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="54">&amp;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="55">addr<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call><operator pos:line="73" pos:column="60">)<pos:position pos:line="73" pos:column="61"/></operator> <operator pos:line="73" pos:column="62">&amp;&amp;<pos:position pos:line="73" pos:column="72"/></operator>
<cpp:ifdef pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">ifdef<pos:position pos:line="74" pos:column="7"/></cpp:directive> <name pos:line="74" pos:column="8">ENABLE_IPV6<pos:position pos:line="74" pos:column="19"/></name></cpp:ifdef>
      <operator pos:line="75" pos:column="7">(<pos:position pos:line="75" pos:column="8"/></operator><literal type="number" pos:line="75" pos:column="8">0<pos:position pos:line="75" pos:column="9"/></literal> <operator pos:line="75" pos:column="10">==<pos:position pos:line="75" pos:column="12"/></operator> <call><name pos:line="75" pos:column="13">Curl_inet_pton<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">AF_INET6<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="38">conn<pos:position pos:line="75" pos:column="42"/></name><operator pos:line="75" pos:column="42">-&gt;<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="44">host<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">.<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="49">name<pos:position pos:line="75" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="55">&amp;<pos:position pos:line="75" pos:column="60"/></operator><name pos:line="75" pos:column="56">addr<pos:position pos:line="75" pos:column="60"/></name></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call><operator pos:line="75" pos:column="61">)<pos:position pos:line="75" pos:column="62"/></operator> <operator pos:line="75" pos:column="63">&amp;&amp;<pos:position pos:line="75" pos:column="73"/></operator>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="77" pos:column="7">(<pos:position pos:line="77" pos:column="8"/></operator><call><name pos:line="77" pos:column="8">gnutls_server_name_set<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">session<pos:position pos:line="77" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="40">GNUTLS_NAME_DNS<pos:position pos:line="77" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="57">conn<pos:position pos:line="77" pos:column="61"/></name><operator pos:line="77" pos:column="61">-&gt;<pos:position pos:line="77" pos:column="66"/></operator><name pos:line="77" pos:column="63">host<pos:position pos:line="77" pos:column="67"/></name><operator pos:line="77" pos:column="67">.<pos:position pos:line="77" pos:column="68"/></operator><name pos:line="77" pos:column="68">name<pos:position pos:line="77" pos:column="72"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="78" pos:column="31">strlen<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">(<argument><expr><name><name pos:line="78" pos:column="38">conn<pos:position pos:line="78" pos:column="42"/></name><operator pos:line="78" pos:column="42">-&gt;<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="44">host<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">.<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="49">name<pos:position pos:line="78" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call> <operator pos:line="78" pos:column="56">&lt;<pos:position pos:line="78" pos:column="60"/></operator> <literal type="number" pos:line="78" pos:column="58">0<pos:position pos:line="78" pos:column="59"/></literal><operator pos:line="78" pos:column="59">)<pos:position pos:line="78" pos:column="60"/></operator></expr>)<pos:position pos:line="78" pos:column="61"/></condition><then pos:line="78" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="5">infof<pos:position pos:line="79" pos:column="10"/></name><argument_list pos:line="79" pos:column="10">(<argument><expr><name pos:line="79" pos:column="11">data<pos:position pos:line="79" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="17">"WARNING: failed to configure server name indication (SNI) "<pos:position pos:line="79" pos:column="77"/></literal>
          <literal type="string" pos:line="80" pos:column="11">"TLS extension\n"<pos:position pos:line="80" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="82" pos:column="3">/* Use default priorities */</comment>
  <expr_stmt><expr><name pos:line="83" pos:column="3">rc<pos:position pos:line="83" pos:column="5"/></name> <operator pos:line="83" pos:column="6">=<pos:position pos:line="83" pos:column="7"/></operator> <call><name pos:line="83" pos:column="8">gnutls_set_default_priority<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">session<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><name pos:line="84" pos:column="6">rc<pos:position pos:line="84" pos:column="8"/></name> <operator pos:line="84" pos:column="9">&lt;<pos:position pos:line="84" pos:column="13"/></operator> <literal type="number" pos:line="84" pos:column="11">0<pos:position pos:line="84" pos:column="12"/></literal></expr>)<pos:position pos:line="84" pos:column="13"/></condition><then pos:line="84" pos:column="13">
    <block type="pseudo"><return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="85" pos:column="35"/></name></expr>;<pos:position pos:line="85" pos:column="36"/></return></block></then></if>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><name><name pos:line="87" pos:column="6">data<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">-&gt;<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="12">set<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">.<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="16">ssl<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">.<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">version<pos:position pos:line="87" pos:column="27"/></name></name> <operator pos:line="87" pos:column="28">==<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">CURL_SSLVERSION_SSLv3<pos:position pos:line="87" pos:column="52"/></name></expr>)<pos:position pos:line="87" pos:column="53"/></condition><then pos:line="87" pos:column="53"> <block pos:line="87" pos:column="54">{
    <decl_stmt><decl><type><name pos:line="88" pos:column="5">int<pos:position pos:line="88" pos:column="8"/></name></type> <name><name pos:line="88" pos:column="9">protocol_priority<pos:position pos:line="88" pos:column="26"/></name><index pos:line="88" pos:column="26">[]<pos:position pos:line="88" pos:column="28"/></index></name> <init pos:line="88" pos:column="29">= <expr><block pos:line="88" pos:column="31">{ <expr><name pos:line="88" pos:column="33">GNUTLS_SSL3<pos:position pos:line="88" pos:column="44"/></name></expr>, <expr><literal type="number" pos:line="88" pos:column="46">0<pos:position pos:line="88" pos:column="47"/></literal></expr> }<pos:position pos:line="88" pos:column="49"/></block></expr></init></decl>;<pos:position pos:line="88" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">gnutls_protocol_set_priority<pos:position pos:line="89" pos:column="33"/></name><argument_list pos:line="89" pos:column="33">(<argument><expr><name pos:line="89" pos:column="34">session<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="43">protocol_priority<pos:position pos:line="89" pos:column="60"/></name></expr></argument>)<pos:position pos:line="89" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="62"/></expr_stmt>
    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><name pos:line="90" pos:column="8">rc<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">&lt;<pos:position pos:line="90" pos:column="15"/></operator> <literal type="number" pos:line="90" pos:column="13">0<pos:position pos:line="90" pos:column="14"/></literal></expr>)<pos:position pos:line="90" pos:column="15"/></condition><then pos:line="90" pos:column="15">
      <block type="pseudo"><return pos:line="91" pos:column="7">return <expr><name pos:line="91" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="91" pos:column="37"/></name></expr>;<pos:position pos:line="91" pos:column="38"/></return></block></then></if>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="94" pos:column="3">/* Sets the priority on the certificate types supported by gnutls. Priority
     is higher for types specified before others. After specifying the types
     you want, you must append a 0. */</comment>
  <expr_stmt><expr><name pos:line="97" pos:column="3">rc<pos:position pos:line="97" pos:column="5"/></name> <operator pos:line="97" pos:column="6">=<pos:position pos:line="97" pos:column="7"/></operator> <call><name pos:line="97" pos:column="8">gnutls_certificate_type_set_priority<pos:position pos:line="97" pos:column="44"/></name><argument_list pos:line="97" pos:column="44">(<argument><expr><name pos:line="97" pos:column="45">session<pos:position pos:line="97" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="54">cert_type_priority<pos:position pos:line="97" pos:column="72"/></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="74"/></expr_stmt>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name pos:line="98" pos:column="6">rc<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">&lt;<pos:position pos:line="98" pos:column="13"/></operator> <literal type="number" pos:line="98" pos:column="11">0<pos:position pos:line="98" pos:column="12"/></literal></expr>)<pos:position pos:line="98" pos:column="13"/></condition><then pos:line="98" pos:column="13">
    <block type="pseudo"><return pos:line="99" pos:column="5">return <expr><name pos:line="99" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="99" pos:column="35"/></name></expr>;<pos:position pos:line="99" pos:column="36"/></return></block></then></if>

  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><name><name pos:line="101" pos:column="6">data<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">set<pos:position pos:line="101" pos:column="15"/></name><operator pos:line="101" pos:column="15">.<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="16">str<pos:position pos:line="101" pos:column="19"/></name><index pos:line="101" pos:column="19">[<expr><name pos:line="101" pos:column="20">STRING_CERT<pos:position pos:line="101" pos:column="31"/></name></expr>]<pos:position pos:line="101" pos:column="32"/></index></name></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33"> <block pos:line="101" pos:column="34">{
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">( <expr><call><name pos:line="102" pos:column="9">gnutls_certificate_set_x509_key_file<pos:position pos:line="102" pos:column="45"/></name><argument_list pos:line="102" pos:column="45">(
          <argument><expr><name><name pos:line="103" pos:column="11">conn<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">-&gt;<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="17">ssl<pos:position pos:line="103" pos:column="20"/></name><index pos:line="103" pos:column="20">[<expr><name pos:line="103" pos:column="21">sockindex<pos:position pos:line="103" pos:column="30"/></name></expr>]<pos:position pos:line="103" pos:column="31"/></index></name><operator pos:line="103" pos:column="31">.<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="32">cred<pos:position pos:line="103" pos:column="36"/></name></expr></argument>,
          <argument><expr><name><name pos:line="104" pos:column="11">data<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">-&gt;<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="17">set<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">.<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="21">str<pos:position pos:line="104" pos:column="24"/></name><index pos:line="104" pos:column="24">[<expr><name pos:line="104" pos:column="25">STRING_CERT<pos:position pos:line="104" pos:column="36"/></name></expr>]<pos:position pos:line="104" pos:column="37"/></index></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="105" pos:column="11">data<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">set<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">.<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">str<pos:position pos:line="105" pos:column="24"/></name><index pos:line="105" pos:column="24">[<expr><name pos:line="105" pos:column="25">STRING_KEY<pos:position pos:line="105" pos:column="35"/></name></expr>]<pos:position pos:line="105" pos:column="36"/></index></name></expr> ?<pos:position pos:line="105" pos:column="38"/></condition><then pos:line="105" pos:column="38">
          <expr><name><name pos:line="106" pos:column="11">data<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">-&gt;<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="17">set<pos:position pos:line="106" pos:column="20"/></name><operator pos:line="106" pos:column="20">.<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">str<pos:position pos:line="106" pos:column="24"/></name><index pos:line="106" pos:column="24">[<expr><name pos:line="106" pos:column="25">STRING_KEY<pos:position pos:line="106" pos:column="35"/></name></expr>]<pos:position pos:line="106" pos:column="36"/></index></name></expr> <pos:position pos:line="106" pos:column="37"/></then><else pos:line="106" pos:column="37">: <expr><name><name pos:line="106" pos:column="39">data<pos:position pos:line="106" pos:column="43"/></name><operator pos:line="106" pos:column="43">-&gt;<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="45">set<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">.<pos:position pos:line="106" pos:column="49"/></operator><name pos:line="106" pos:column="49">str<pos:position pos:line="106" pos:column="52"/></name><index pos:line="106" pos:column="52">[<expr><name pos:line="106" pos:column="53">STRING_CERT<pos:position pos:line="106" pos:column="64"/></name></expr>]<pos:position pos:line="106" pos:column="65"/></index></name></expr></else></ternary></expr></argument>,
          <argument><expr><call><name pos:line="107" pos:column="11">do_file_type<pos:position pos:line="107" pos:column="23"/></name><argument_list pos:line="107" pos:column="23">(<argument><expr><name><name pos:line="107" pos:column="24">data<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">-&gt;<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="30">set<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">.<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="34">str<pos:position pos:line="107" pos:column="37"/></name><index pos:line="107" pos:column="37">[<expr><name pos:line="107" pos:column="38">STRING_CERT_TYPE<pos:position pos:line="107" pos:column="54"/></name></expr>]<pos:position pos:line="107" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="107" pos:column="56"/></argument_list></call></expr></argument> )<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr> )<pos:position pos:line="107" pos:column="60"/></condition><then pos:line="107" pos:column="60"> <block pos:line="107" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">failf<pos:position pos:line="108" pos:column="12"/></name><argument_list pos:line="108" pos:column="12">(<argument><expr><name pos:line="108" pos:column="13">data<pos:position pos:line="108" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="19">"error reading X.509 key or certificate file"<pos:position pos:line="108" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="66"/></expr_stmt>
      <return pos:line="109" pos:column="7">return <expr><name pos:line="109" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="109" pos:column="37"/></name></expr>;<pos:position pos:line="109" pos:column="38"/></return>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="113" pos:column="3">/* put the credentials to the current session */</comment>
  <expr_stmt><expr><name pos:line="114" pos:column="3">rc<pos:position pos:line="114" pos:column="5"/></name> <operator pos:line="114" pos:column="6">=<pos:position pos:line="114" pos:column="7"/></operator> <call><name pos:line="114" pos:column="8">gnutls_credentials_set<pos:position pos:line="114" pos:column="30"/></name><argument_list pos:line="114" pos:column="30">(<argument><expr><name pos:line="114" pos:column="31">session<pos:position pos:line="114" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="40">GNUTLS_CRD_CERTIFICATE<pos:position pos:line="114" pos:column="62"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="115" pos:column="31">conn<pos:position pos:line="115" pos:column="35"/></name><operator pos:line="115" pos:column="35">-&gt;<pos:position pos:line="115" pos:column="40"/></operator><name pos:line="115" pos:column="37">ssl<pos:position pos:line="115" pos:column="40"/></name><index pos:line="115" pos:column="40">[<expr><name pos:line="115" pos:column="41">sockindex<pos:position pos:line="115" pos:column="50"/></name></expr>]<pos:position pos:line="115" pos:column="51"/></index></name><operator pos:line="115" pos:column="51">.<pos:position pos:line="115" pos:column="52"/></operator><name pos:line="115" pos:column="52">cred<pos:position pos:line="115" pos:column="56"/></name></expr></argument>)<pos:position pos:line="115" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="58"/></expr_stmt>

  <comment type="block" pos:line="117" pos:column="3">/* set the connection handle (file descriptor for the socket) */</comment>
  <expr_stmt><expr><call><name pos:line="118" pos:column="3">gnutls_transport_set_ptr<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">session<pos:position pos:line="118" pos:column="35"/></name></expr></argument>,
                           <argument><expr><operator pos:line="119" pos:column="28">(<pos:position pos:line="119" pos:column="29"/></operator><name pos:line="119" pos:column="29">gnutls_transport_ptr<pos:position pos:line="119" pos:column="49"/></name><operator pos:line="119" pos:column="49">)<pos:position pos:line="119" pos:column="50"/></operator><name><name pos:line="119" pos:column="50">conn<pos:position pos:line="119" pos:column="54"/></name><operator pos:line="119" pos:column="54">-&gt;<pos:position pos:line="119" pos:column="59"/></operator><name pos:line="119" pos:column="56">sock<pos:position pos:line="119" pos:column="60"/></name><index pos:line="119" pos:column="60">[<expr><name pos:line="119" pos:column="61">sockindex<pos:position pos:line="119" pos:column="70"/></name></expr>]<pos:position pos:line="119" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="119" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="121" pos:column="3">/* register callback functions to send and receive data. */</comment>
  <expr_stmt><expr><call><name pos:line="122" pos:column="3">gnutls_transport_set_push_function<pos:position pos:line="122" pos:column="37"/></name><argument_list pos:line="122" pos:column="37">(<argument><expr><name pos:line="122" pos:column="38">session<pos:position pos:line="122" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="47">Curl_gtls_push<pos:position pos:line="122" pos:column="61"/></name></expr></argument>)<pos:position pos:line="122" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="123" pos:column="3">gnutls_transport_set_pull_function<pos:position pos:line="123" pos:column="37"/></name><argument_list pos:line="123" pos:column="37">(<argument><expr><name pos:line="123" pos:column="38">session<pos:position pos:line="123" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="47">Curl_gtls_pull<pos:position pos:line="123" pos:column="61"/></name></expr></argument>)<pos:position pos:line="123" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="63"/></expr_stmt>

  <comment type="block" pos:line="125" pos:column="3">/* lowat must be set to zero when using custom push and pull functions. */</comment>
  <expr_stmt><expr><call><name pos:line="126" pos:column="3">gnutls_transport_set_lowat<pos:position pos:line="126" pos:column="29"/></name><argument_list pos:line="126" pos:column="29">(<argument><expr><name pos:line="126" pos:column="30">session<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="39">0<pos:position pos:line="126" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="128" pos:column="3">/* This might be a reconnect, so we check for a session ID in the cache
     to speed up things */</comment>

  <if pos:line="131" pos:column="3">if<condition pos:line="131" pos:column="5">(<expr><operator pos:line="131" pos:column="6">!<pos:position pos:line="131" pos:column="7"/></operator><call><name pos:line="131" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="131" pos:column="28"/></name><argument_list pos:line="131" pos:column="28">(<argument><expr><name pos:line="131" pos:column="29">conn<pos:position pos:line="131" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="35">&amp;<pos:position pos:line="131" pos:column="40"/></operator><name pos:line="131" pos:column="36">ssl_sessionid<pos:position pos:line="131" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="51">&amp;<pos:position pos:line="131" pos:column="56"/></operator><name pos:line="131" pos:column="52">ssl_idsize<pos:position pos:line="131" pos:column="62"/></name></expr></argument>)<pos:position pos:line="131" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="64"/></condition><then pos:line="131" pos:column="64"> <block pos:line="131" pos:column="65">{
    <comment type="block" pos:line="132" pos:column="5">/* we got a session id, use it! */</comment>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">gnutls_session_set_data<pos:position pos:line="133" pos:column="28"/></name><argument_list pos:line="133" pos:column="28">(<argument><expr><name pos:line="133" pos:column="29">session<pos:position pos:line="133" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="38">ssl_sessionid<pos:position pos:line="133" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="53">ssl_idsize<pos:position pos:line="133" pos:column="63"/></name></expr></argument>)<pos:position pos:line="133" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="135" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">infof<pos:position pos:line="136" pos:column="10"/></name> <argument_list pos:line="136" pos:column="11">(<argument><expr><name pos:line="136" pos:column="12">data<pos:position pos:line="136" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="18">"SSL re-using session ID\n"<pos:position pos:line="136" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="137" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="139" pos:column="3">rc<pos:position pos:line="139" pos:column="5"/></name> <operator pos:line="139" pos:column="6">=<pos:position pos:line="139" pos:column="7"/></operator> <call><name pos:line="139" pos:column="8">handshake<pos:position pos:line="139" pos:column="17"/></name><argument_list pos:line="139" pos:column="17">(<argument><expr><name pos:line="139" pos:column="18">conn<pos:position pos:line="139" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="24">session<pos:position pos:line="139" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="33">sockindex<pos:position pos:line="139" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="44">TRUE<pos:position pos:line="139" pos:column="48"/></name></expr></argument>)<pos:position pos:line="139" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="50"/></expr_stmt>
  <if pos:line="140" pos:column="3">if<condition pos:line="140" pos:column="5">(<expr><name pos:line="140" pos:column="6">rc<pos:position pos:line="140" pos:column="8"/></name></expr>)<pos:position pos:line="140" pos:column="9"/></condition><then pos:line="140" pos:column="9">
    <comment type="block" pos:line="141" pos:column="5">/* handshake() sets its own error message with failf() */</comment>
    <block type="pseudo"><return pos:line="142" pos:column="5">return <expr><name pos:line="142" pos:column="12">rc<pos:position pos:line="142" pos:column="14"/></name></expr>;<pos:position pos:line="142" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="144" pos:column="3">/* This function will return the peer's raw certificate (chain) as sent by
     the peer. These certificates are in raw format (DER encoded for
     X.509). In case of a X.509 then a certificate list may be present. The
     first certificate in the list is the peer's certificate, following the
     issuer's certificate, then the issuer's issuer etc. */</comment>

  <expr_stmt><expr><name pos:line="150" pos:column="3">chainp<pos:position pos:line="150" pos:column="9"/></name> <operator pos:line="150" pos:column="10">=<pos:position pos:line="150" pos:column="11"/></operator> <call><name pos:line="150" pos:column="12">gnutls_certificate_get_peers<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">session<pos:position pos:line="150" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="50">&amp;<pos:position pos:line="150" pos:column="55"/></operator><name pos:line="150" pos:column="51">cert_list_size<pos:position pos:line="150" pos:column="65"/></name></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="67"/></expr_stmt>
  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><operator pos:line="151" pos:column="6">!<pos:position pos:line="151" pos:column="7"/></operator><name pos:line="151" pos:column="7">chainp<pos:position pos:line="151" pos:column="13"/></name></expr>)<pos:position pos:line="151" pos:column="14"/></condition><then pos:line="151" pos:column="14"> <block pos:line="151" pos:column="15">{
    <if pos:line="152" pos:column="5">if<condition pos:line="152" pos:column="7">(<expr><name><name pos:line="152" pos:column="8">data<pos:position pos:line="152" pos:column="12"/></name><operator pos:line="152" pos:column="12">-&gt;<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="14">set<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">.<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">ssl<pos:position pos:line="152" pos:column="21"/></name><operator pos:line="152" pos:column="21">.<pos:position pos:line="152" pos:column="22"/></operator><name pos:line="152" pos:column="22">verifypeer<pos:position pos:line="152" pos:column="32"/></name></name></expr>)<pos:position pos:line="152" pos:column="33"/></condition><then pos:line="152" pos:column="33"> <block pos:line="152" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">failf<pos:position pos:line="153" pos:column="12"/></name><argument_list pos:line="153" pos:column="12">(<argument><expr><name pos:line="153" pos:column="13">data<pos:position pos:line="153" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="19">"failed to get server cert"<pos:position pos:line="153" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="48"/></expr_stmt>
      <return pos:line="154" pos:column="7">return <expr><name pos:line="154" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="154" pos:column="44"/></name></expr>;<pos:position pos:line="154" pos:column="45"/></return>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="156" pos:column="5">infof<pos:position pos:line="156" pos:column="10"/></name><argument_list pos:line="156" pos:column="10">(<argument><expr><name pos:line="156" pos:column="11">data<pos:position pos:line="156" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="17">"\t common name: WARNING couldn't obtain\n"<pos:position pos:line="156" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="157" pos:column="4"/></block></then></if>

  <if pos:line="159" pos:column="3">if<condition pos:line="159" pos:column="5">(<expr><name><name pos:line="159" pos:column="6">data<pos:position pos:line="159" pos:column="10"/></name><operator pos:line="159" pos:column="10">-&gt;<pos:position pos:line="159" pos:column="15"/></operator><name pos:line="159" pos:column="12">set<pos:position pos:line="159" pos:column="15"/></name><operator pos:line="159" pos:column="15">.<pos:position pos:line="159" pos:column="16"/></operator><name pos:line="159" pos:column="16">ssl<pos:position pos:line="159" pos:column="19"/></name><operator pos:line="159" pos:column="19">.<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="20">verifypeer<pos:position pos:line="159" pos:column="30"/></name></name></expr>)<pos:position pos:line="159" pos:column="31"/></condition><then pos:line="159" pos:column="31"> <block pos:line="159" pos:column="32">{
    <comment type="block" pos:line="160" pos:column="5">/* This function will try to verify the peer's certificate and return its
       status (trusted, invalid etc.). The value of status should be one or
       more of the gnutls_certificate_status_t enumerated elements bitwise
       or'd. To avoid denial of service attacks some default upper limits
       regarding the certificate key size and chain size are set. To override
       them use gnutls_certificate_set_verify_limits(). */</comment>

    <expr_stmt><expr><name pos:line="167" pos:column="5">rc<pos:position pos:line="167" pos:column="7"/></name> <operator pos:line="167" pos:column="8">=<pos:position pos:line="167" pos:column="9"/></operator> <call><name pos:line="167" pos:column="10">gnutls_certificate_verify_peers2<pos:position pos:line="167" pos:column="42"/></name><argument_list pos:line="167" pos:column="42">(<argument><expr><name pos:line="167" pos:column="43">session<pos:position pos:line="167" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="167" pos:column="52">&amp;<pos:position pos:line="167" pos:column="57"/></operator><name pos:line="167" pos:column="53">verify_status<pos:position pos:line="167" pos:column="66"/></name></expr></argument>)<pos:position pos:line="167" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="68"/></expr_stmt>
    <if pos:line="168" pos:column="5">if<condition pos:line="168" pos:column="7">(<expr><name pos:line="168" pos:column="8">rc<pos:position pos:line="168" pos:column="10"/></name> <operator pos:line="168" pos:column="11">&lt;<pos:position pos:line="168" pos:column="15"/></operator> <literal type="number" pos:line="168" pos:column="13">0<pos:position pos:line="168" pos:column="14"/></literal></expr>)<pos:position pos:line="168" pos:column="15"/></condition><then pos:line="168" pos:column="15"> <block pos:line="168" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="169" pos:column="7">failf<pos:position pos:line="169" pos:column="12"/></name><argument_list pos:line="169" pos:column="12">(<argument><expr><name pos:line="169" pos:column="13">data<pos:position pos:line="169" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="19">"server cert verify failed: %d"<pos:position pos:line="169" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="52">rc<pos:position pos:line="169" pos:column="54"/></name></expr></argument>)<pos:position pos:line="169" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="56"/></expr_stmt>
      <return pos:line="170" pos:column="7">return <expr><name pos:line="170" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="170" pos:column="37"/></name></expr>;<pos:position pos:line="170" pos:column="38"/></return>
    }<pos:position pos:line="171" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="173" pos:column="5">/* verify_status is a bitmask of gnutls_certificate_status bits */</comment>
    <if pos:line="174" pos:column="5">if<condition pos:line="174" pos:column="7">(<expr><name pos:line="174" pos:column="8">verify_status<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">&amp;<pos:position pos:line="174" pos:column="27"/></operator> <name pos:line="174" pos:column="24">GNUTLS_CERT_INVALID<pos:position pos:line="174" pos:column="43"/></name></expr>)<pos:position pos:line="174" pos:column="44"/></condition><then pos:line="174" pos:column="44"> <block pos:line="174" pos:column="45">{
      <if pos:line="175" pos:column="7">if<condition pos:line="175" pos:column="9">(<expr><name><name pos:line="175" pos:column="10">data<pos:position pos:line="175" pos:column="14"/></name><operator pos:line="175" pos:column="14">-&gt;<pos:position pos:line="175" pos:column="19"/></operator><name pos:line="175" pos:column="16">set<pos:position pos:line="175" pos:column="19"/></name><operator pos:line="175" pos:column="19">.<pos:position pos:line="175" pos:column="20"/></operator><name pos:line="175" pos:column="20">ssl<pos:position pos:line="175" pos:column="23"/></name><operator pos:line="175" pos:column="23">.<pos:position pos:line="175" pos:column="24"/></operator><name pos:line="175" pos:column="24">verifypeer<pos:position pos:line="175" pos:column="34"/></name></name></expr>)<pos:position pos:line="175" pos:column="35"/></condition><then pos:line="175" pos:column="35"> <block pos:line="175" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">failf<pos:position pos:line="176" pos:column="14"/></name><argument_list pos:line="176" pos:column="14">(<argument><expr><name pos:line="176" pos:column="15">data<pos:position pos:line="176" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="21">"server certificate verification failed. CAfile: %s"<pos:position pos:line="176" pos:column="73"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="177" pos:column="15">data<pos:position pos:line="177" pos:column="19"/></name><operator pos:line="177" pos:column="19">-&gt;<pos:position pos:line="177" pos:column="24"/></operator><name pos:line="177" pos:column="21">set<pos:position pos:line="177" pos:column="24"/></name><operator pos:line="177" pos:column="24">.<pos:position pos:line="177" pos:column="25"/></operator><name pos:line="177" pos:column="25">ssl<pos:position pos:line="177" pos:column="28"/></name><operator pos:line="177" pos:column="28">.<pos:position pos:line="177" pos:column="29"/></operator><name pos:line="177" pos:column="29">CAfile<pos:position pos:line="177" pos:column="35"/></name></name></expr>?<pos:position pos:line="177" pos:column="36"/></condition><then><expr><name><name pos:line="177" pos:column="36">data<pos:position pos:line="177" pos:column="40"/></name><operator pos:line="177" pos:column="40">-&gt;<pos:position pos:line="177" pos:column="45"/></operator><name pos:line="177" pos:column="42">set<pos:position pos:line="177" pos:column="45"/></name><operator pos:line="177" pos:column="45">.<pos:position pos:line="177" pos:column="46"/></operator><name pos:line="177" pos:column="46">ssl<pos:position pos:line="177" pos:column="49"/></name><operator pos:line="177" pos:column="49">.<pos:position pos:line="177" pos:column="50"/></operator><name pos:line="177" pos:column="50">CAfile<pos:position pos:line="177" pos:column="56"/></name></name></expr></then><else pos:line="177" pos:column="56">:<expr><literal type="string" pos:line="177" pos:column="57">"none"<pos:position pos:line="177" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="177" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="65"/></expr_stmt>
        <return pos:line="178" pos:column="9">return <expr><name pos:line="178" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="178" pos:column="32"/></name></expr>;<pos:position pos:line="178" pos:column="33"/></return>
      }<pos:position pos:line="179" pos:column="8"/></block></then>
      <else pos:line="180" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="181" pos:column="9">infof<pos:position pos:line="181" pos:column="14"/></name><argument_list pos:line="181" pos:column="14">(<argument><expr><name pos:line="181" pos:column="15">data<pos:position pos:line="181" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="21">"\t server certificate verification FAILED\n"<pos:position pos:line="181" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="68"/></expr_stmt></block></else></if>
    }<pos:position pos:line="182" pos:column="6"/></block></then>
    <else pos:line="183" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="184" pos:column="7">infof<pos:position pos:line="184" pos:column="12"/></name><argument_list pos:line="184" pos:column="12">(<argument><expr><name pos:line="184" pos:column="13">data<pos:position pos:line="184" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="19">"\t server certificate verification OK\n"<pos:position pos:line="184" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="62"/></expr_stmt></block></else></if>
  }<pos:position pos:line="185" pos:column="4"/></block></then>
  <else pos:line="186" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="187" pos:column="5">infof<pos:position pos:line="187" pos:column="10"/></name><argument_list pos:line="187" pos:column="10">(<argument><expr><name pos:line="187" pos:column="11">data<pos:position pos:line="187" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="17">"\t server certificate verification SKIPPED\n"<pos:position pos:line="187" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="65"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="189" pos:column="3">/* initialize an X.509 certificate structure. */</comment>
  <expr_stmt><expr><call><name pos:line="190" pos:column="3">gnutls_x509_crt_init<pos:position pos:line="190" pos:column="23"/></name><argument_list pos:line="190" pos:column="23">(<argument><expr><operator pos:line="190" pos:column="24">&amp;<pos:position pos:line="190" pos:column="29"/></operator><name pos:line="190" pos:column="25">x509_cert<pos:position pos:line="190" pos:column="34"/></name></expr></argument>)<pos:position pos:line="190" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="192" pos:column="3">/* convert the given DER or PEM encoded Certificate to the native
     gnutls_x509_crt_t format */</comment>
  <expr_stmt><expr><call><name pos:line="194" pos:column="3">gnutls_x509_crt_import<pos:position pos:line="194" pos:column="25"/></name><argument_list pos:line="194" pos:column="25">(<argument><expr><name pos:line="194" pos:column="26">x509_cert<pos:position pos:line="194" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="37">chainp<pos:position pos:line="194" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="45">GNUTLS_X509_FMT_DER<pos:position pos:line="194" pos:column="64"/></name></expr></argument>)<pos:position pos:line="194" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><name pos:line="196" pos:column="3">size<pos:position pos:line="196" pos:column="7"/></name><operator pos:line="196" pos:column="7">=<pos:position pos:line="196" pos:column="8"/></operator><sizeof pos:line="196" pos:column="8">sizeof<argument_list pos:line="196" pos:column="14">(<argument><expr><name pos:line="196" pos:column="15">certbuf<pos:position pos:line="196" pos:column="22"/></name></expr></argument>)<pos:position pos:line="196" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="196" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="197" pos:column="3">rc<pos:position pos:line="197" pos:column="5"/></name> <operator pos:line="197" pos:column="6">=<pos:position pos:line="197" pos:column="7"/></operator> <call><name pos:line="197" pos:column="8">gnutls_x509_crt_get_dn_by_oid<pos:position pos:line="197" pos:column="37"/></name><argument_list pos:line="197" pos:column="37">(<argument><expr><name pos:line="197" pos:column="38">x509_cert<pos:position pos:line="197" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="49">GNUTLS_OID_X520_COMMON_NAME<pos:position pos:line="197" pos:column="76"/></name></expr></argument>,
                                     <argument><expr><literal type="number" pos:line="198" pos:column="38">0<pos:position pos:line="198" pos:column="39"/></literal></expr></argument>, <comment type="block" pos:line="198" pos:column="41">/* the first and only one */</comment>
                                     <argument><expr><name pos:line="199" pos:column="38">FALSE<pos:position pos:line="199" pos:column="43"/></name></expr></argument>,
                                     <argument><expr><name pos:line="200" pos:column="38">certbuf<pos:position pos:line="200" pos:column="45"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="201" pos:column="38">&amp;<pos:position pos:line="201" pos:column="43"/></operator><name pos:line="201" pos:column="39">size<pos:position pos:line="201" pos:column="43"/></name></expr></argument>)<pos:position pos:line="201" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="45"/></expr_stmt>
  <if pos:line="202" pos:column="3">if<condition pos:line="202" pos:column="5">(<expr><name pos:line="202" pos:column="6">rc<pos:position pos:line="202" pos:column="8"/></name></expr>)<pos:position pos:line="202" pos:column="9"/></condition><then pos:line="202" pos:column="9"> <block pos:line="202" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="203" pos:column="5">infof<pos:position pos:line="203" pos:column="10"/></name><argument_list pos:line="203" pos:column="10">(<argument><expr><name pos:line="203" pos:column="11">data<pos:position pos:line="203" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="17">"error fetching CN from cert:%s\n"<pos:position pos:line="203" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="204" pos:column="11">gnutls_strerror<pos:position pos:line="204" pos:column="26"/></name><argument_list pos:line="204" pos:column="26">(<argument><expr><name pos:line="204" pos:column="27">rc<pos:position pos:line="204" pos:column="29"/></name></expr></argument>)<pos:position pos:line="204" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="205" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="207" pos:column="3">/* This function will check if the given certificate's subject matches the
     given hostname. This is a basic implementation of the matching described
     in RFC2818 (HTTPS), which takes into account wildcards, and the subject
     alternative name PKIX extension. Returns non zero on success, and zero on
     failure. */</comment>
  <expr_stmt><expr><name pos:line="212" pos:column="3">rc<pos:position pos:line="212" pos:column="5"/></name> <operator pos:line="212" pos:column="6">=<pos:position pos:line="212" pos:column="7"/></operator> <call><name pos:line="212" pos:column="8">gnutls_x509_crt_check_hostname<pos:position pos:line="212" pos:column="38"/></name><argument_list pos:line="212" pos:column="38">(<argument><expr><name pos:line="212" pos:column="39">x509_cert<pos:position pos:line="212" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="50">conn<pos:position pos:line="212" pos:column="54"/></name><operator pos:line="212" pos:column="54">-&gt;<pos:position pos:line="212" pos:column="59"/></operator><name pos:line="212" pos:column="56">host<pos:position pos:line="212" pos:column="60"/></name><operator pos:line="212" pos:column="60">.<pos:position pos:line="212" pos:column="61"/></operator><name pos:line="212" pos:column="61">name<pos:position pos:line="212" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="67"/></expr_stmt>

  <if pos:line="214" pos:column="3">if<condition pos:line="214" pos:column="5">(<expr><operator pos:line="214" pos:column="6">!<pos:position pos:line="214" pos:column="7"/></operator><name pos:line="214" pos:column="7">rc<pos:position pos:line="214" pos:column="9"/></name></expr>)<pos:position pos:line="214" pos:column="10"/></condition><then pos:line="214" pos:column="10"> <block pos:line="214" pos:column="11">{
    <if pos:line="215" pos:column="5">if<condition pos:line="215" pos:column="7">(<expr><name><name pos:line="215" pos:column="8">data<pos:position pos:line="215" pos:column="12"/></name><operator pos:line="215" pos:column="12">-&gt;<pos:position pos:line="215" pos:column="17"/></operator><name pos:line="215" pos:column="14">set<pos:position pos:line="215" pos:column="17"/></name><operator pos:line="215" pos:column="17">.<pos:position pos:line="215" pos:column="18"/></operator><name pos:line="215" pos:column="18">ssl<pos:position pos:line="215" pos:column="21"/></name><operator pos:line="215" pos:column="21">.<pos:position pos:line="215" pos:column="22"/></operator><name pos:line="215" pos:column="22">verifyhost<pos:position pos:line="215" pos:column="32"/></name></name> <operator pos:line="215" pos:column="33">&gt;<pos:position pos:line="215" pos:column="37"/></operator> <literal type="number" pos:line="215" pos:column="35">1<pos:position pos:line="215" pos:column="36"/></literal></expr>)<pos:position pos:line="215" pos:column="37"/></condition><then pos:line="215" pos:column="37"> <block pos:line="215" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="216" pos:column="7">failf<pos:position pos:line="216" pos:column="12"/></name><argument_list pos:line="216" pos:column="12">(<argument><expr><name pos:line="216" pos:column="13">data<pos:position pos:line="216" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="19">"SSL: certificate subject name (%s) does not match "<pos:position pos:line="216" pos:column="71"/></literal>
            <literal type="string" pos:line="217" pos:column="13">"target host name '%s'"<pos:position pos:line="217" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="38">certbuf<pos:position pos:line="217" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="217" pos:column="47">conn<pos:position pos:line="217" pos:column="51"/></name><operator pos:line="217" pos:column="51">-&gt;<pos:position pos:line="217" pos:column="56"/></operator><name pos:line="217" pos:column="53">host<pos:position pos:line="217" pos:column="57"/></name><operator pos:line="217" pos:column="57">.<pos:position pos:line="217" pos:column="58"/></operator><name pos:line="217" pos:column="58">dispname<pos:position pos:line="217" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="218" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="218" pos:column="29"/></name><argument_list pos:line="218" pos:column="29">(<argument><expr><name pos:line="218" pos:column="30">x509_cert<pos:position pos:line="218" pos:column="39"/></name></expr></argument>)<pos:position pos:line="218" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="41"/></expr_stmt>
      <return pos:line="219" pos:column="7">return <expr><name pos:line="219" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="219" pos:column="44"/></name></expr>;<pos:position pos:line="219" pos:column="45"/></return>
    }<pos:position pos:line="220" pos:column="6"/></block></then>
    <else pos:line="221" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="7">infof<pos:position pos:line="222" pos:column="12"/></name><argument_list pos:line="222" pos:column="12">(<argument><expr><name pos:line="222" pos:column="13">data<pos:position pos:line="222" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="19">"\t common name: %s (does not match '%s')\n"<pos:position pos:line="222" pos:column="63"/></literal></expr></argument>,
            <argument><expr><name pos:line="223" pos:column="13">certbuf<pos:position pos:line="223" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="223" pos:column="22">conn<pos:position pos:line="223" pos:column="26"/></name><operator pos:line="223" pos:column="26">-&gt;<pos:position pos:line="223" pos:column="31"/></operator><name pos:line="223" pos:column="28">host<pos:position pos:line="223" pos:column="32"/></name><operator pos:line="223" pos:column="32">.<pos:position pos:line="223" pos:column="33"/></operator><name pos:line="223" pos:column="33">dispname<pos:position pos:line="223" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="223" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="43"/></expr_stmt></block></else></if>
  }<pos:position pos:line="224" pos:column="4"/></block></then>
  <else pos:line="225" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="5">infof<pos:position pos:line="226" pos:column="10"/></name><argument_list pos:line="226" pos:column="10">(<argument><expr><name pos:line="226" pos:column="11">data<pos:position pos:line="226" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="17">"\t common name: %s (matched)\n"<pos:position pos:line="226" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="51">certbuf<pos:position pos:line="226" pos:column="58"/></name></expr></argument>)<pos:position pos:line="226" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="60"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="228" pos:column="3">/* Check for time-based validity */</comment>
  <expr_stmt><expr><name pos:line="229" pos:column="3">certclock<pos:position pos:line="229" pos:column="12"/></name> <operator pos:line="229" pos:column="13">=<pos:position pos:line="229" pos:column="14"/></operator> <call><name pos:line="229" pos:column="15">gnutls_x509_crt_get_expiration_time<pos:position pos:line="229" pos:column="50"/></name><argument_list pos:line="229" pos:column="50">(<argument><expr><name pos:line="229" pos:column="51">x509_cert<pos:position pos:line="229" pos:column="60"/></name></expr></argument>)<pos:position pos:line="229" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="62"/></expr_stmt>

  <if pos:line="231" pos:column="3">if<condition pos:line="231" pos:column="5">(<expr><name pos:line="231" pos:column="6">certclock<pos:position pos:line="231" pos:column="15"/></name> <operator pos:line="231" pos:column="16">==<pos:position pos:line="231" pos:column="18"/></operator> <operator pos:line="231" pos:column="19">(<pos:position pos:line="231" pos:column="20"/></operator><name pos:line="231" pos:column="20">time_t<pos:position pos:line="231" pos:column="26"/></name><operator pos:line="231" pos:column="26">)<pos:position pos:line="231" pos:column="27"/></operator><operator pos:line="231" pos:column="27">-<pos:position pos:line="231" pos:column="28"/></operator><literal type="number" pos:line="231" pos:column="28">1<pos:position pos:line="231" pos:column="29"/></literal></expr>)<pos:position pos:line="231" pos:column="30"/></condition><then pos:line="231" pos:column="30"> <block pos:line="231" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="232" pos:column="5">failf<pos:position pos:line="232" pos:column="10"/></name><argument_list pos:line="232" pos:column="10">(<argument><expr><name pos:line="232" pos:column="11">data<pos:position pos:line="232" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="17">"server cert expiration date verify failed"<pos:position pos:line="232" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="62"/></expr_stmt>
    <return pos:line="233" pos:column="5">return <expr><name pos:line="233" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="233" pos:column="35"/></name></expr>;<pos:position pos:line="233" pos:column="36"/></return>
  }<pos:position pos:line="234" pos:column="4"/></block></then></if>

  <if pos:line="236" pos:column="3">if<condition pos:line="236" pos:column="5">(<expr><name pos:line="236" pos:column="6">certclock<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">&lt;<pos:position pos:line="236" pos:column="20"/></operator> <call><name pos:line="236" pos:column="18">time<pos:position pos:line="236" pos:column="22"/></name><argument_list pos:line="236" pos:column="22">(<argument><expr><name pos:line="236" pos:column="23">NULL<pos:position pos:line="236" pos:column="27"/></name></expr></argument>)<pos:position pos:line="236" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="236" pos:column="29"/></condition><then pos:line="236" pos:column="29"> <block pos:line="236" pos:column="30">{
    <if pos:line="237" pos:column="5">if<condition pos:line="237" pos:column="7">(<expr><name><name pos:line="237" pos:column="8">data<pos:position pos:line="237" pos:column="12"/></name><operator pos:line="237" pos:column="12">-&gt;<pos:position pos:line="237" pos:column="17"/></operator><name pos:line="237" pos:column="14">set<pos:position pos:line="237" pos:column="17"/></name><operator pos:line="237" pos:column="17">.<pos:position pos:line="237" pos:column="18"/></operator><name pos:line="237" pos:column="18">ssl<pos:position pos:line="237" pos:column="21"/></name><operator pos:line="237" pos:column="21">.<pos:position pos:line="237" pos:column="22"/></operator><name pos:line="237" pos:column="22">verifypeer<pos:position pos:line="237" pos:column="32"/></name></name></expr>)<pos:position pos:line="237" pos:column="33"/></condition><then pos:line="237" pos:column="33"> <block pos:line="237" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="238" pos:column="7">failf<pos:position pos:line="238" pos:column="12"/></name><argument_list pos:line="238" pos:column="12">(<argument><expr><name pos:line="238" pos:column="13">data<pos:position pos:line="238" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="19">"server certificate expiration date has passed."<pos:position pos:line="238" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="69"/></expr_stmt>
      <return pos:line="239" pos:column="7">return <expr><name pos:line="239" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="239" pos:column="44"/></name></expr>;<pos:position pos:line="239" pos:column="45"/></return>
    }<pos:position pos:line="240" pos:column="6"/></block></then>
    <else pos:line="241" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="242" pos:column="7">infof<pos:position pos:line="242" pos:column="12"/></name><argument_list pos:line="242" pos:column="12">(<argument><expr><name pos:line="242" pos:column="13">data<pos:position pos:line="242" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="19">"\t server certificate expiration date FAILED\n"<pos:position pos:line="242" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="69"/></expr_stmt></block></else></if>
  }<pos:position pos:line="243" pos:column="4"/></block></then>
  <else pos:line="244" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="245" pos:column="5">infof<pos:position pos:line="245" pos:column="10"/></name><argument_list pos:line="245" pos:column="10">(<argument><expr><name pos:line="245" pos:column="11">data<pos:position pos:line="245" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="17">"\t server certificate expiration date OK\n"<pos:position pos:line="245" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="63"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="247" pos:column="3">certclock<pos:position pos:line="247" pos:column="12"/></name> <operator pos:line="247" pos:column="13">=<pos:position pos:line="247" pos:column="14"/></operator> <call><name pos:line="247" pos:column="15">gnutls_x509_crt_get_activation_time<pos:position pos:line="247" pos:column="50"/></name><argument_list pos:line="247" pos:column="50">(<argument><expr><name pos:line="247" pos:column="51">x509_cert<pos:position pos:line="247" pos:column="60"/></name></expr></argument>)<pos:position pos:line="247" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="62"/></expr_stmt>

  <if pos:line="249" pos:column="3">if<condition pos:line="249" pos:column="5">(<expr><name pos:line="249" pos:column="6">certclock<pos:position pos:line="249" pos:column="15"/></name> <operator pos:line="249" pos:column="16">==<pos:position pos:line="249" pos:column="18"/></operator> <operator pos:line="249" pos:column="19">(<pos:position pos:line="249" pos:column="20"/></operator><name pos:line="249" pos:column="20">time_t<pos:position pos:line="249" pos:column="26"/></name><operator pos:line="249" pos:column="26">)<pos:position pos:line="249" pos:column="27"/></operator><operator pos:line="249" pos:column="27">-<pos:position pos:line="249" pos:column="28"/></operator><literal type="number" pos:line="249" pos:column="28">1<pos:position pos:line="249" pos:column="29"/></literal></expr>)<pos:position pos:line="249" pos:column="30"/></condition><then pos:line="249" pos:column="30"> <block pos:line="249" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="250" pos:column="5">failf<pos:position pos:line="250" pos:column="10"/></name><argument_list pos:line="250" pos:column="10">(<argument><expr><name pos:line="250" pos:column="11">data<pos:position pos:line="250" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="17">"server cert activation date verify failed"<pos:position pos:line="250" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="62"/></expr_stmt>
    <return pos:line="251" pos:column="5">return <expr><name pos:line="251" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="251" pos:column="35"/></name></expr>;<pos:position pos:line="251" pos:column="36"/></return>
  }<pos:position pos:line="252" pos:column="4"/></block></then></if>

  <if pos:line="254" pos:column="3">if<condition pos:line="254" pos:column="5">(<expr><name pos:line="254" pos:column="6">certclock<pos:position pos:line="254" pos:column="15"/></name> <operator pos:line="254" pos:column="16">&gt;<pos:position pos:line="254" pos:column="20"/></operator> <call><name pos:line="254" pos:column="18">time<pos:position pos:line="254" pos:column="22"/></name><argument_list pos:line="254" pos:column="22">(<argument><expr><name pos:line="254" pos:column="23">NULL<pos:position pos:line="254" pos:column="27"/></name></expr></argument>)<pos:position pos:line="254" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="254" pos:column="29"/></condition><then pos:line="254" pos:column="29"> <block pos:line="254" pos:column="30">{
    <if pos:line="255" pos:column="5">if<condition pos:line="255" pos:column="7">(<expr><name><name pos:line="255" pos:column="8">data<pos:position pos:line="255" pos:column="12"/></name><operator pos:line="255" pos:column="12">-&gt;<pos:position pos:line="255" pos:column="17"/></operator><name pos:line="255" pos:column="14">set<pos:position pos:line="255" pos:column="17"/></name><operator pos:line="255" pos:column="17">.<pos:position pos:line="255" pos:column="18"/></operator><name pos:line="255" pos:column="18">ssl<pos:position pos:line="255" pos:column="21"/></name><operator pos:line="255" pos:column="21">.<pos:position pos:line="255" pos:column="22"/></operator><name pos:line="255" pos:column="22">verifypeer<pos:position pos:line="255" pos:column="32"/></name></name></expr>)<pos:position pos:line="255" pos:column="33"/></condition><then pos:line="255" pos:column="33"> <block pos:line="255" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="256" pos:column="7">failf<pos:position pos:line="256" pos:column="12"/></name><argument_list pos:line="256" pos:column="12">(<argument><expr><name pos:line="256" pos:column="13">data<pos:position pos:line="256" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="19">"server certificate not activated yet."<pos:position pos:line="256" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="60"/></expr_stmt>
      <return pos:line="257" pos:column="7">return <expr><name pos:line="257" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="257" pos:column="44"/></name></expr>;<pos:position pos:line="257" pos:column="45"/></return>
    }<pos:position pos:line="258" pos:column="6"/></block></then>
    <else pos:line="259" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="260" pos:column="7">infof<pos:position pos:line="260" pos:column="12"/></name><argument_list pos:line="260" pos:column="12">(<argument><expr><name pos:line="260" pos:column="13">data<pos:position pos:line="260" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="19">"\t server certificate activation date FAILED\n"<pos:position pos:line="260" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="69"/></expr_stmt></block></else></if>
  }<pos:position pos:line="261" pos:column="4"/></block></then>
  <else pos:line="262" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="263" pos:column="5">infof<pos:position pos:line="263" pos:column="10"/></name><argument_list pos:line="263" pos:column="10">(<argument><expr><name pos:line="263" pos:column="11">data<pos:position pos:line="263" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="17">"\t server certificate activation date OK\n"<pos:position pos:line="263" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="63"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="265" pos:column="3">/* Show:

  - ciphers used
  - subject
  - start date
  - expire date
  - common name
  - issuer

  */</comment>

  <comment type="block" pos:line="276" pos:column="3">/* public key algorithm's parameters */</comment>
  <expr_stmt><expr><name pos:line="277" pos:column="3">algo<pos:position pos:line="277" pos:column="7"/></name> <operator pos:line="277" pos:column="8">=<pos:position pos:line="277" pos:column="9"/></operator> <call><name pos:line="277" pos:column="10">gnutls_x509_crt_get_pk_algorithm<pos:position pos:line="277" pos:column="42"/></name><argument_list pos:line="277" pos:column="42">(<argument><expr><name pos:line="277" pos:column="43">x509_cert<pos:position pos:line="277" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="277" pos:column="54">&amp;<pos:position pos:line="277" pos:column="59"/></operator><name pos:line="277" pos:column="55">bits<pos:position pos:line="277" pos:column="59"/></name></expr></argument>)<pos:position pos:line="277" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="278" pos:column="3">infof<pos:position pos:line="278" pos:column="8"/></name><argument_list pos:line="278" pos:column="8">(<argument><expr><name pos:line="278" pos:column="9">data<pos:position pos:line="278" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="278" pos:column="15">"\t certificate public key: %s\n"<pos:position pos:line="278" pos:column="48"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="279" pos:column="9">gnutls_pk_algorithm_get_name<pos:position pos:line="279" pos:column="37"/></name><argument_list pos:line="279" pos:column="37">(<argument><expr><name pos:line="279" pos:column="38">algo<pos:position pos:line="279" pos:column="42"/></name></expr></argument>)<pos:position pos:line="279" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="279" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="281" pos:column="3">/* version of the X.509 certificate. */</comment>
  <expr_stmt><expr><call><name pos:line="282" pos:column="3">infof<pos:position pos:line="282" pos:column="8"/></name><argument_list pos:line="282" pos:column="8">(<argument><expr><name pos:line="282" pos:column="9">data<pos:position pos:line="282" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="15">"\t certificate version: #%d\n"<pos:position pos:line="282" pos:column="46"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="283" pos:column="9">gnutls_x509_crt_get_version<pos:position pos:line="283" pos:column="36"/></name><argument_list pos:line="283" pos:column="36">(<argument><expr><name pos:line="283" pos:column="37">x509_cert<pos:position pos:line="283" pos:column="46"/></name></expr></argument>)<pos:position pos:line="283" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="283" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="49"/></expr_stmt>


  <expr_stmt><expr><name pos:line="286" pos:column="3">size<pos:position pos:line="286" pos:column="7"/></name> <operator pos:line="286" pos:column="8">=<pos:position pos:line="286" pos:column="9"/></operator> <sizeof pos:line="286" pos:column="10">sizeof<argument_list pos:line="286" pos:column="16">(<argument><expr><name pos:line="286" pos:column="17">certbuf<pos:position pos:line="286" pos:column="24"/></name></expr></argument>)<pos:position pos:line="286" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="286" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="287" pos:column="3">gnutls_x509_crt_get_dn<pos:position pos:line="287" pos:column="25"/></name><argument_list pos:line="287" pos:column="25">(<argument><expr><name pos:line="287" pos:column="26">x509_cert<pos:position pos:line="287" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="37">certbuf<pos:position pos:line="287" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="287" pos:column="46">&amp;<pos:position pos:line="287" pos:column="51"/></operator><name pos:line="287" pos:column="47">size<pos:position pos:line="287" pos:column="51"/></name></expr></argument>)<pos:position pos:line="287" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="288" pos:column="3">infof<pos:position pos:line="288" pos:column="8"/></name><argument_list pos:line="288" pos:column="8">(<argument><expr><name pos:line="288" pos:column="9">data<pos:position pos:line="288" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="15">"\t subject: %s\n"<pos:position pos:line="288" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="288" pos:column="35">certbuf<pos:position pos:line="288" pos:column="42"/></name></expr></argument>)<pos:position pos:line="288" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="290" pos:column="3">certclock<pos:position pos:line="290" pos:column="12"/></name> <operator pos:line="290" pos:column="13">=<pos:position pos:line="290" pos:column="14"/></operator> <call><name pos:line="290" pos:column="15">gnutls_x509_crt_get_activation_time<pos:position pos:line="290" pos:column="50"/></name><argument_list pos:line="290" pos:column="50">(<argument><expr><name pos:line="290" pos:column="51">x509_cert<pos:position pos:line="290" pos:column="60"/></name></expr></argument>)<pos:position pos:line="290" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="291" pos:column="3">showtime<pos:position pos:line="291" pos:column="11"/></name><argument_list pos:line="291" pos:column="11">(<argument><expr><name pos:line="291" pos:column="12">data<pos:position pos:line="291" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="18">"start date"<pos:position pos:line="291" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="32">certclock<pos:position pos:line="291" pos:column="41"/></name></expr></argument>)<pos:position pos:line="291" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="293" pos:column="3">certclock<pos:position pos:line="293" pos:column="12"/></name> <operator pos:line="293" pos:column="13">=<pos:position pos:line="293" pos:column="14"/></operator> <call><name pos:line="293" pos:column="15">gnutls_x509_crt_get_expiration_time<pos:position pos:line="293" pos:column="50"/></name><argument_list pos:line="293" pos:column="50">(<argument><expr><name pos:line="293" pos:column="51">x509_cert<pos:position pos:line="293" pos:column="60"/></name></expr></argument>)<pos:position pos:line="293" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="294" pos:column="3">showtime<pos:position pos:line="294" pos:column="11"/></name><argument_list pos:line="294" pos:column="11">(<argument><expr><name pos:line="294" pos:column="12">data<pos:position pos:line="294" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="18">"expire date"<pos:position pos:line="294" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="294" pos:column="33">certclock<pos:position pos:line="294" pos:column="42"/></name></expr></argument>)<pos:position pos:line="294" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="296" pos:column="3">size<pos:position pos:line="296" pos:column="7"/></name> <operator pos:line="296" pos:column="8">=<pos:position pos:line="296" pos:column="9"/></operator> <sizeof pos:line="296" pos:column="10">sizeof<argument_list pos:line="296" pos:column="16">(<argument><expr><name pos:line="296" pos:column="17">certbuf<pos:position pos:line="296" pos:column="24"/></name></expr></argument>)<pos:position pos:line="296" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="296" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="297" pos:column="3">gnutls_x509_crt_get_issuer_dn<pos:position pos:line="297" pos:column="32"/></name><argument_list pos:line="297" pos:column="32">(<argument><expr><name pos:line="297" pos:column="33">x509_cert<pos:position pos:line="297" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="44">certbuf<pos:position pos:line="297" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="297" pos:column="53">&amp;<pos:position pos:line="297" pos:column="58"/></operator><name pos:line="297" pos:column="54">size<pos:position pos:line="297" pos:column="58"/></name></expr></argument>)<pos:position pos:line="297" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="298" pos:column="3">infof<pos:position pos:line="298" pos:column="8"/></name><argument_list pos:line="298" pos:column="8">(<argument><expr><name pos:line="298" pos:column="9">data<pos:position pos:line="298" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="15">"\t issuer: %s\n"<pos:position pos:line="298" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="298" pos:column="34">certbuf<pos:position pos:line="298" pos:column="41"/></name></expr></argument>)<pos:position pos:line="298" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="300" pos:column="3">gnutls_x509_crt_deinit<pos:position pos:line="300" pos:column="25"/></name><argument_list pos:line="300" pos:column="25">(<argument><expr><name pos:line="300" pos:column="26">x509_cert<pos:position pos:line="300" pos:column="35"/></name></expr></argument>)<pos:position pos:line="300" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="302" pos:column="3">/* compression algorithm (if any) */</comment>
  <expr_stmt><expr><name pos:line="303" pos:column="3">ptr<pos:position pos:line="303" pos:column="6"/></name> <operator pos:line="303" pos:column="7">=<pos:position pos:line="303" pos:column="8"/></operator> <call><name pos:line="303" pos:column="9">gnutls_compression_get_name<pos:position pos:line="303" pos:column="36"/></name><argument_list pos:line="303" pos:column="36">(<argument><expr><call><name pos:line="303" pos:column="37">gnutls_compression_get<pos:position pos:line="303" pos:column="59"/></name><argument_list pos:line="303" pos:column="59">(<argument><expr><name pos:line="303" pos:column="60">session<pos:position pos:line="303" pos:column="67"/></name></expr></argument>)<pos:position pos:line="303" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="303" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="70"/></expr_stmt>
  <comment type="block" pos:line="304" pos:column="3">/* the *_get_name() says "NULL" if GNUTLS_COMP_NULL is returned */</comment>
  <expr_stmt><expr><call><name pos:line="305" pos:column="3">infof<pos:position pos:line="305" pos:column="8"/></name><argument_list pos:line="305" pos:column="8">(<argument><expr><name pos:line="305" pos:column="9">data<pos:position pos:line="305" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="15">"\t compression: %s\n"<pos:position pos:line="305" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="305" pos:column="39">ptr<pos:position pos:line="305" pos:column="42"/></name></expr></argument>)<pos:position pos:line="305" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="307" pos:column="3">/* the name of the cipher used. ie 3DES. */</comment>
  <expr_stmt><expr><name pos:line="308" pos:column="3">ptr<pos:position pos:line="308" pos:column="6"/></name> <operator pos:line="308" pos:column="7">=<pos:position pos:line="308" pos:column="8"/></operator> <call><name pos:line="308" pos:column="9">gnutls_cipher_get_name<pos:position pos:line="308" pos:column="31"/></name><argument_list pos:line="308" pos:column="31">(<argument><expr><call><name pos:line="308" pos:column="32">gnutls_cipher_get<pos:position pos:line="308" pos:column="49"/></name><argument_list pos:line="308" pos:column="49">(<argument><expr><name pos:line="308" pos:column="50">session<pos:position pos:line="308" pos:column="57"/></name></expr></argument>)<pos:position pos:line="308" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="308" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="309" pos:column="3">infof<pos:position pos:line="309" pos:column="8"/></name><argument_list pos:line="309" pos:column="8">(<argument><expr><name pos:line="309" pos:column="9">data<pos:position pos:line="309" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="309" pos:column="15">"\t cipher: %s\n"<pos:position pos:line="309" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="309" pos:column="34">ptr<pos:position pos:line="309" pos:column="37"/></name></expr></argument>)<pos:position pos:line="309" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="311" pos:column="3">/* the MAC algorithms name. ie SHA1 */</comment>
  <expr_stmt><expr><name pos:line="312" pos:column="3">ptr<pos:position pos:line="312" pos:column="6"/></name> <operator pos:line="312" pos:column="7">=<pos:position pos:line="312" pos:column="8"/></operator> <call><name pos:line="312" pos:column="9">gnutls_mac_get_name<pos:position pos:line="312" pos:column="28"/></name><argument_list pos:line="312" pos:column="28">(<argument><expr><call><name pos:line="312" pos:column="29">gnutls_mac_get<pos:position pos:line="312" pos:column="43"/></name><argument_list pos:line="312" pos:column="43">(<argument><expr><name pos:line="312" pos:column="44">session<pos:position pos:line="312" pos:column="51"/></name></expr></argument>)<pos:position pos:line="312" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="312" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="313" pos:column="3">infof<pos:position pos:line="313" pos:column="8"/></name><argument_list pos:line="313" pos:column="8">(<argument><expr><name pos:line="313" pos:column="9">data<pos:position pos:line="313" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="15">"\t MAC: %s\n"<pos:position pos:line="313" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="313" pos:column="31">ptr<pos:position pos:line="313" pos:column="34"/></name></expr></argument>)<pos:position pos:line="313" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="315" pos:column="3">conn<pos:position pos:line="315" pos:column="7"/></name><operator pos:line="315" pos:column="7">-&gt;<pos:position pos:line="315" pos:column="12"/></operator><name pos:line="315" pos:column="9">ssl<pos:position pos:line="315" pos:column="12"/></name><index pos:line="315" pos:column="12">[<expr><name pos:line="315" pos:column="13">sockindex<pos:position pos:line="315" pos:column="22"/></name></expr>]<pos:position pos:line="315" pos:column="23"/></index></name><operator pos:line="315" pos:column="23">.<pos:position pos:line="315" pos:column="24"/></operator><name pos:line="315" pos:column="24">state<pos:position pos:line="315" pos:column="29"/></name> <operator pos:line="315" pos:column="30">=<pos:position pos:line="315" pos:column="31"/></operator> <name pos:line="315" pos:column="32">ssl_connection_complete<pos:position pos:line="315" pos:column="55"/></name></expr>;<pos:position pos:line="315" pos:column="56"/></expr_stmt>

  <if pos:line="317" pos:column="3">if<condition pos:line="317" pos:column="5">(<expr><operator pos:line="317" pos:column="6">!<pos:position pos:line="317" pos:column="7"/></operator><name pos:line="317" pos:column="7">ssl_sessionid<pos:position pos:line="317" pos:column="20"/></name></expr>)<pos:position pos:line="317" pos:column="21"/></condition><then pos:line="317" pos:column="21"> <block pos:line="317" pos:column="22">{
    <comment type="block" pos:line="318" pos:column="5">/* this session was not previously in the cache, add it now */</comment>

    <comment type="block" pos:line="320" pos:column="5">/* get the session ID data size */</comment>
    <expr_stmt><expr><call><name pos:line="321" pos:column="5">gnutls_session_get_data<pos:position pos:line="321" pos:column="28"/></name><argument_list pos:line="321" pos:column="28">(<argument><expr><name pos:line="321" pos:column="29">session<pos:position pos:line="321" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="38">NULL<pos:position pos:line="321" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="321" pos:column="44">&amp;<pos:position pos:line="321" pos:column="49"/></operator><name pos:line="321" pos:column="45">ssl_idsize<pos:position pos:line="321" pos:column="55"/></name></expr></argument>)<pos:position pos:line="321" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="322" pos:column="5">ssl_sessionid<pos:position pos:line="322" pos:column="18"/></name> <operator pos:line="322" pos:column="19">=<pos:position pos:line="322" pos:column="20"/></operator> <call><name pos:line="322" pos:column="21">malloc<pos:position pos:line="322" pos:column="27"/></name><argument_list pos:line="322" pos:column="27">(<argument><expr><name pos:line="322" pos:column="28">ssl_idsize<pos:position pos:line="322" pos:column="38"/></name></expr></argument>)<pos:position pos:line="322" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="40"/></expr_stmt> <comment type="block" pos:line="322" pos:column="41">/* get a buffer for it */</comment>

    <if pos:line="324" pos:column="5">if<condition pos:line="324" pos:column="7">(<expr><name pos:line="324" pos:column="8">ssl_sessionid<pos:position pos:line="324" pos:column="21"/></name></expr>)<pos:position pos:line="324" pos:column="22"/></condition><then pos:line="324" pos:column="22"> <block pos:line="324" pos:column="23">{
      <comment type="block" pos:line="325" pos:column="7">/* extract session ID to the allocated buffer */</comment>
      <expr_stmt><expr><call><name pos:line="326" pos:column="7">gnutls_session_get_data<pos:position pos:line="326" pos:column="30"/></name><argument_list pos:line="326" pos:column="30">(<argument><expr><name pos:line="326" pos:column="31">session<pos:position pos:line="326" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="40">ssl_sessionid<pos:position pos:line="326" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="326" pos:column="55">&amp;<pos:position pos:line="326" pos:column="60"/></operator><name pos:line="326" pos:column="56">ssl_idsize<pos:position pos:line="326" pos:column="66"/></name></expr></argument>)<pos:position pos:line="326" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="68"/></expr_stmt>

      <comment type="block" pos:line="328" pos:column="7">/* store this session id */</comment>
      <return pos:line="329" pos:column="7">return <expr><call><name pos:line="329" pos:column="14">Curl_ssl_addsessionid<pos:position pos:line="329" pos:column="35"/></name><argument_list pos:line="329" pos:column="35">(<argument><expr><name pos:line="329" pos:column="36">conn<pos:position pos:line="329" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="42">ssl_sessionid<pos:position pos:line="329" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="57">ssl_idsize<pos:position pos:line="329" pos:column="67"/></name></expr></argument>)<pos:position pos:line="329" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="69"/></return>
    }<pos:position pos:line="330" pos:column="6"/></block></then></if>
  }<pos:position pos:line="331" pos:column="4"/></block></then></if>

  <return pos:line="333" pos:column="3">return <expr><name pos:line="333" pos:column="10">CURLE_OK<pos:position pos:line="333" pos:column="18"/></name></expr>;<pos:position pos:line="333" pos:column="19"/></return>
}<pos:position pos:line="334" pos:column="2"/></block></function></unit>

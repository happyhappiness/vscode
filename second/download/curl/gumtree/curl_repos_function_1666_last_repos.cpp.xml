<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1666_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_write<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">connectdata<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">conn<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">curl_socket_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">sockfd<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">void<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">mem<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="4" pos:column="21">size_t<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">len<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="5" pos:column="21">ssize_t<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">written<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">bytes_written<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">CURLE_OK<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">num<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">sockfd<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="24">conn<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">sock<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><name pos:line="9" pos:column="35">SECONDARYSOCKET<pos:position pos:line="9" pos:column="50"/></name></expr>]<pos:position pos:line="9" pos:column="51"/></index></name><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">bytes_written<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name><name pos:line="11" pos:column="19">conn<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">send<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">num<pos:position pos:line="11" pos:column="33"/></name></expr>]<pos:position pos:line="11" pos:column="34"/></index></name><operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">conn<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">,<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">num<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">,<pos:position pos:line="11" pos:column="45"/></operator> <name pos:line="11" pos:column="46">mem<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">,<pos:position pos:line="11" pos:column="50"/></operator> <name pos:line="11" pos:column="51">len<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">,<pos:position pos:line="11" pos:column="55"/></operator> <operator pos:line="11" pos:column="56">&amp;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="57">result<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">written<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">bytes_written<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">bytes_written<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&gt;=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
    <comment type="block" pos:line="15" pos:column="5">/* we completely ignore the curlcode value when subzero is not returned */</comment>
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OK<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* handle CURLE_AGAIN or a send failure */</comment>
  <switch pos:line="19" pos:column="3">switch<condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">result<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition> <block pos:line="19" pos:column="18">{
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">CURLE_AGAIN<pos:position pos:line="20" pos:column="19"/></name></expr>:<pos:position pos:line="20" pos:column="20"/></case>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">written<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">CURLE_OK<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return>

  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">CURLE_OK<pos:position pos:line="24" pos:column="16"/></name></expr>:<pos:position pos:line="24" pos:column="17"/></case>
    <comment type="block" pos:line="25" pos:column="5">/* general send failure */</comment>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURLE_SEND_ERROR<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>

  <default pos:line="28" pos:column="3">default:<pos:position pos:line="28" pos:column="11"/></default>
    <comment type="block" pos:line="29" pos:column="5">/* we got a specific curlcode, forward it */</comment>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">result<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></switch>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

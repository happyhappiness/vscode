"\n"
, stdout);
 fputs(
"              NEW_ENV=<var,val> Sets an environment variable.\n"
"\n"
"       -T/--upload-file <file>\n"
"              This transfers the specified local file to the  remote  URL.  If\n"
"              there is no file part in the specified URL, Curl will append the\n"
"              local file name. NOTE that you must use a trailing / on the last\n"
"              directory  to really prove to Curl that there is no file name or\n"
"              curl will think that your last directory name is the remote file\n"
, stdout);
 fputs(
"              name to use. That will most likely cause the upload operation to\n"
"              fail. If this is used on a http(s) server, the PUT command  will\n"
"              be used.\n"
"\n"
"              Use  the file name \"-\" (a single dash) to use stdin instead of a\n"
"              given file.\n"
"\n"
"              Before 7.10.8, when this option was used several times, the last\n"
"              one was used.\n"
"\n"
"              In curl 7.10.8 and later, you can specify one -T for each URL on\n"
, stdout);
 fputs(
"              the command line. Each -T + URL pair specifies  what  to  upload\n"
"              and  to where. curl also supports \"globbing\" of the -T argument,\n"
"              meaning that you can upload multiple files to a  single  URL  by\n"
"              using  the  same  URL  globbing style supported in the URL, like\n"
"              this:\n"
"\n"
"              curl -T \"{file1,file2}\" http://www.uploadtothissite.com\n"
"\n"
"              or even\n"
"\n"
, stdout);
 fputs(
"              curl -T \"img[1-1000].png\" ftp://ftp.picturemania.com/upload/\n"
"\n"
"       --trace <file>\n"
"              Enables a full trace dump of all  incoming  and  outgoing  data,\n"
"              including descriptive information, to the given output file. Use\n"
"              \"-\" as filename to have the output sent to stdout.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"              (Added in 7.9.7)\n"
"\n"
"       --trace-ascii <file>\n"
, stdout);
 fputs(
"              Enables  a  full  trace  dump of all incoming and outgoing data,\n"
"              including descriptive information, to the given output file. Use\n"
"              \"-\" as filename to have the output sent to stdout.\n"
"\n"
"              This is very similar to --trace, but leaves out the hex part and\n"
"              only shows the ASCII part of the dump. It makes  smaller  output\n"
"              that might be easier to read for untrained humans.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"              (Added in 7.9.7)\n"
"\n"
"       -u/--user <user:password>\n"
"              Specify user and password  to  use  for  server  authentication.\n"
"              Overrides -n/--netrc and --netrc-optional.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -U/--proxy-user <user:password>\n"
"              Specify user and password to use for proxy authentication.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --url <URL>\n"
"              Specify  a  URL  to  fetch. This option is mostly handy when you\n"
"              want to specify URL(s) in a config file.\n"
"\n"
"              This option may be used any number of times.  To  control  where\n"
"              this URL is written, use the -o/--output or the -O/--remote-name\n"
"              options.\n"
"\n"
"       -v/--verbose\n"
, stdout);
 fputs(
"              Makes the fetching more  verbose/talkative.  Mostly  usable  for\n"
"              debugging.  Lines starting with '>' means data sent by curl, '<'\n"
"              means data received by curl that is hidden in normal  cases  and\n"
"              lines  starting with '*' means additional info provided by curl.\n"
"              Note  that  if  you  only  want  HTTP  headers  in  the  output,\n"
"              -i/--include might be option you're looking for.\n"
"\n"
, stdout);
 fputs(
"              If  you think this option still doesn't give you enough details,\n"
"              consider using --trace or --trace-ascii instead.\n"
"\n"
"              If this option is used twice, the second will again disable ver-\n"
"              bose.\n"
"\n"
"       -V/--version\n"
"              Displays information about curl and the libcurl version it uses.\n"
"              The first line includes the full version of  curl,  libcurl  and\n"
"              other 3rd party libraries linked with the executable.\n"
"\n"
, stdout);
 fputs(
"              The  second  line (starts with \"Protocols:\") shows all protocols\n"
"              that libcurl reports to support.\n"
"\n"
"              The third line (starts with \"Features:\") shows specific features\n"
"              libcurl reports to offer. Available features include:\n"
"\n"
"              IPv6   You can use IPv6 with this.\n"
"\n"
"              krb4   Krb4 for ftp is supported.\n"
"\n"
"              SSL    HTTPS and FTPS are supported.\n"
"\n"
, stdout);
 fputs(
"              libz   Automatic  decompression of compressed files over HTTP is\n"
"                     supported.\n"
"\n"
"              NTLM   NTLM authentication is supported.\n"
"\n"
"              GSS-Negotiate\n"
"                     Negotiate authentication is supported.\n"
"\n"
"              Debug  This curl uses a libcurl built with Debug.  This  enables\n"
"                     more  error-tracking  and memory debugging etc. For curl-\n"
"                     developers only!\n"
"\n"
"              AsynchDNS\n"
, stdout);
 fputs(
"                     This curl uses asynchronous name resolves.\n"
"\n"
"              SPNEGO SPNEGO Negotiate authentication is supported.\n"
"\n"
"              Largefile\n"
"                     This curl supports transfers of large files, files larger\n"
"                     than 2GB.\n"
"\n"
"              IDN    This curl supports IDN - international domain names.\n"
"\n"
"       -w/--write-out <format>\n"
"              Defines  what to display after a completed and successful opera-\n"
, stdout);
 fputs(
"              tion. The format is a string that may contain plain  text  mixed\n"
"              with  any  number  of  variables. The string can be specified as\n"
"              \"string\", to get read from a  particular  file  you  specify  it\n"
"              \"@filename\"  and  to tell curl to read the format from stdin you\n"
"              write \"@-\".\n"
"\n"
"              The variables present in the output format will  be  substituted\n"
, stdout);
 fputs(
"              by  the  value or text that curl thinks fit, as described below.\n"
"              All variables are specified like %{variable_name} and to  output\n"
"              a normal % you just write them like %%. You can output a newline\n"
"              by using \\n, a carriage return with \\r and a tab space with  \\t.\n"
"              NOTE: The %-letter is a special letter in the win32-environment,\n"
"              where all occurrences of %  must  be  doubled  when  using  this\n"
"              option.\n"
"\n"
, stdout);
 fputs(
"              Available variables are at this point:\n"
"\n"
"              url_effective  The  URL  that  was  fetched last. This is mostly\n"
"                             meaningful if you've told curl  to  follow  loca-\n"
"                             tion: headers.\n"
"\n"
"              http_code      The  numerical  code  that  was found in the last\n"
"                             retrieved HTTP(S) page.\n"
"\n"
"              http_connect   The numerical code that was  found  in  the  last\n"
, stdout);
 fputs(
"                             response   (from  a  proxy)  to  a  curl  CONNECT\n"
"                             request. (Added in 7.12.4)\n"
"\n"
"              time_total     The total time, in seconds, that the full  opera-\n"
"                             tion lasted. The time will be displayed with mil-\n"
"                             lisecond resolution.\n"
"\n"
"              time_namelookup\n"
"                             The time, in seconds,  it  took  from  the  start\n"
, stdout);
 fputs(
"                             until the name resolving was completed.\n"
"\n"
"              time_connect   The  time,  in  seconds,  it  took from the start\n"
"                             until the connect to the remote host  (or  proxy)\n"
"                             was completed.\n"
"\n"
"              time_pretransfer\n"
"                             The  time,  in  seconds,  it  took from the start\n"
"                             until the file transfer is just about  to  begin.\n"
, stdout);
 fputs(
"                             This includes all pre-transfer commands and nego-\n"
"                             tiations that are specific to the particular pro-\n"
"                             tocol(s) involved.\n"
"\n"
"              time_redirect  The time, in seconds, it took for all redirection\n"
"                             steps include name lookup,  connect,  pretransfer\n"
"                             and   transfer   before   final  transaction  was\n"
, stdout);
 fputs(
"                             started. time_redirect shows the complete  execu-\n"
"                             tion  time  for  multiple redirections. (Added in\n"
"                             7.12.3)\n"
"\n"
"              time_starttransfer\n"
"                             The time, in seconds,  it  took  from  the  start\n"
"                             until  the  first byte is just about to be trans-\n"
"                             ferred. This includes time_pretransfer  and  also\n"
, stdout);
 fputs(
"                             the  time  the  server  needs  to  calculate  the\n"
"                             result.\n"
"\n"
"              size_download  The total amount of bytes that were downloaded.\n"
"\n"
"              size_upload    The total amount of bytes that were uploaded.\n"
"\n"
"              size_header    The total amount of bytes of the downloaded head-\n"
"                             ers.\n"
"\n"
"              size_request   The  total  amount of bytes that were sent in the\n"
, stdout);
 fputs(
"                             HTTP request.\n"
"\n"
"              speed_download The average download speed that curl measured for\n"
"                             the complete download.\n"
"\n"
"              speed_upload   The  average  upload speed that curl measured for\n"
"                             the complete upload.\n"
"\n"
"              content_type   The Content-Type of the  requested  document,  if\n"
"                             there was any. (Added in 7.9.5)\n"
"\n"
, stdout);
 fputs(
"              num_connects   Number  of new connects made in the recent trans-\n"
"                             fer. (Added in 7.12.3)\n"
"\n"
"              num_redirects  Number of redirects that  were  followed  in  the\n"
"                             request. (Added in 7.12.3)\n"
"\n"
"       If this option is used several times, the last one will be used.\n"
"\n"
"       -x/--proxy <proxyhost[:port]>\n"
"              Use  specified  HTTP proxy. If the port number is not specified,\n"
"              it is assumed at port 1080.\n"
"\n"
, stdout);
 fputs(
"              This option overrides existing environment variables  that  sets\n"
"              proxy  to  use.  If  there's  an  environment variable setting a\n"
"              proxy, you can set proxy to \"\" to override it.\n"
"\n"
"              Note that all operations that are performed over  a  HTTP  proxy\n"
"              will  transparently  be converted to HTTP. It means that certain\n"
"              protocol specific operations might not be available. This is not\n"
, stdout);
 fputs(
"              the  case  if you can tunnel through the proxy, as done with the\n"
"              -p/--proxytunnel option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -X/--request <command>\n"
"              (HTTP) Specifies a custom request to use when communicating with\n"
"              the HTTP server.  The specified request will be used instead  of\n"
"              the  standard  GET.  Read the HTTP 1.1 specification for details\n"
"              and explanations.\n"
"\n"
, stdout);
 fputs(
"              (FTP) Specifies a custom FTP command to use instead of LIST when\n"
"              doing file lists with ftp.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -y/--speed-time <time>\n"
"              If a download is slower than speed-limit bytes per second during\n"
"              a speed-time period, the download gets aborted. If speed-time is\n"
"              used, the default speed-limit will be 1 unless set with -y.\n"
"\n"
, stdout);
 fputs(
"              This option controls transfers and thus  will  not  affect  slow\n"
"              connects  etc.  If this is a concern for you, try the --connect-\n"
"              timeout option.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -Y/--speed-limit <speed>\n"
"              If a download is slower than this given speed, in bytes per sec-\n"
"              ond, for speed-time seconds it gets aborted. speed-time  is  set\n"
, stdout);
 fputs(
"              with -Y and is 30 if not set.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -z/--time-cond <date expression>\n"
"              (HTTP) Request a file that has  been  modified  later  than  the\n"
"              given  time  and date, or one that has been modified before that\n"
"              time. The date expression can be all sorts of date strings or if\n"
"              it  doesn't  match  any  internal ones, it tries to get the time\n"
, stdout);
 fputs(
"              from a given file name  instead!  See  the  curl_getdate(3)  man\n"
"              pages for date expression details.\n"
"\n"
"              Start the date expression with a dash (-) to make it request for\n"
"              a document that is older than the given date/time, default is  a\n"
"              document that is newer than the specified date/time.\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       --max-redirs <num>\n"
, stdout);
 fputs(
"              Set  maximum  number  of  redirection-followings   allowed.   If\n"
"              -L/--location  is  used, this option can be used to prevent curl\n"
"              from following redirections \"in absurdum\".\n"
"\n"
"              If this option is used several times, the last one will be used.\n"
"\n"
"       -0/--http1.0\n"
"              (HTTP)  Forces curl to issue its requests using HTTP 1.0 instead\n"
"              of using its internally preferred: HTTP 1.1.\n"
"\n"
"       -1/--tlsv1\n"
, stdout);
 fputs(
"              (HTTPS) Forces curl to use TSL version 1 when negotiating with a\n"

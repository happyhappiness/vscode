"                     than 2GB.\n"
"\n"
"              IDN    This curl supports IDN - international domain names.\n"
"\n"
, stdout);
 fputs(
"              SSPI   SSPI  is  supported. If you use NTLM and set a blank user\n"
"                     name, curl will authenticate with your current  user  and\n"
"                     password.\n"
"\n"
"       -w/--write-out <format>\n"
"              Defines what to display on stdout after a completed and success-\n"
"              ful operation. The format is a string  that  may  contain  plain\n"
"              text mixed with any number of variables. The string can be spec-\n"
, stdout);
 fputs(
"              ified as \"string\", to get read from a particular file you  spec-\n"
"              ify  it  \"@filename\"  and  to  tell curl to read the format from\n"
"              stdin you write \"@-\".\n"
"\n"
"              The variables present in the output format will  be  substituted\n"
"              by  the  value or text that curl thinks fit, as described below.\n"
"              All variables are specified as %{variable_name} and to output  a\n"
, stdout);
 fputs(
"              normal  % you just write them as %%. You can output a newline by\n"
"              using \\n, a carriage return with \\r and a tab space with \\t.\n"
"\n"
"              NOTE: The %-symbol is a special symbol in the win32-environment,\n"
"              where  all  occurrences  of  %  must  be doubled when using this\n"
"              option.\n"
"\n"
"              The variables available at this point are:\n"
"\n"
"              url_effective  The URL that was fetched last. This is most mean-\n"
, stdout);
 fputs(
"                             ingful  if  you've  told curl to follow location:\n"
"                             headers.\n"
"\n"
"              http_code      The numerical response code that was found in the\n"
"                             last  retrieved  HTTP(S)  or  FTP(s) transfer. In\n"
"                             7.18.2 the alias response_code was added to  show\n"
"                             the same info.\n"
"\n"
"              http_connect   The  numerical  code  that  was found in the last\n"
, stdout);
 fputs(
"                             response  (from  a  proxy)  to  a  curl   CONNECT\n"
"                             request. (Added in 7.12.4)\n"
"\n"
"              time_total     The  total time, in seconds, that the full opera-\n"
"                             tion lasted. The time will be displayed with mil-\n"
"                             lisecond resolution.\n"
"\n"
"              time_namelookup\n"
"                             The  time,  in  seconds,  it  took from the start\n"
, stdout);
 fputs(
"                             until the name resolving was completed.\n"
"\n"
"              time_connect   The time, in seconds,  it  took  from  the  start\n"
"                             until  the  TCP  connect  to  the remote host (or\n"
"                             proxy) was completed.\n"
"\n"
"              time_appconnect\n"
"                             The time, in seconds,  it  took  from  the  start\n"
"                             until  the  SSL/SSH/etc  connect/handshake to the\n"
, stdout);
 fputs(
"                             remote host was completed. (Added in 7.19.0)\n"
"\n"
"              time_pretransfer\n"
"                             The time, in seconds,  it  took  from  the  start\n"
"                             until  the file transfer was just about to begin.\n"
"                             This includes all pre-transfer commands and nego-\n"
"                             tiations that are specific to the particular pro-\n"
"                             tocol(s) involved.\n"
"\n"
, stdout);
 fputs(
"              time_redirect  The time, in seconds, it took for all redirection\n"
"                             steps  include  name lookup, connect, pretransfer\n"
"                             and transfer before  the  final  transaction  was\n"
"                             started.  time_redirect shows the complete execu-\n"
"                             tion time for multiple  redirections.  (Added  in\n"
"                             7.12.3)\n"
"\n"
"              time_starttransfer\n"
, stdout);
 fputs(
"                             The  time,  in  seconds,  it  took from the start\n"
"                             until the first byte was just about to be  trans-\n"
"                             ferred.  This  includes time_pretransfer and also\n"
"                             the time  the  server  needed  to  calculate  the\n"
"                             result.\n"
"\n"
"              size_download  The total amount of bytes that were downloaded.\n"
"\n"
, stdout);
 fputs(
"              size_upload    The total amount of bytes that were uploaded.\n"
"\n"
"              size_header    The total amount of bytes of the downloaded head-\n"
"                             ers.\n"
"\n"
"              size_request   The total amount of bytes that were sent  in  the\n"
"                             HTTP request.\n"
"\n"
"              speed_download The average download speed that curl measured for\n"
"                             the complete download.\n"
"\n"
, stdout);
 fputs(
"              speed_upload   The average upload speed that curl  measured  for\n"
"                             the complete upload.\n"
"\n"
"              content_type   The  Content-Type  of  the requested document, if\n"
"                             there was any.\n"
"\n"
"              num_connects   Number of new connects made in the recent  trans-\n"
"                             fer. (Added in 7.12.3)\n"
"\n"
"              num_redirects  Number  of  redirects  that  were followed in the\n"
, stdout);
 fputs(
"                             request. (Added in 7.12.3)\n"
"\n"
"              redirect_url   When a HTTP request was made without -L to follow\n"
"                             redirects, this variable will show the actual URL\n"

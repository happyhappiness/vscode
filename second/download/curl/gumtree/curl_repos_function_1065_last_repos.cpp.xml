<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1065_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">strlen_url<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">url<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">bool<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">relative<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">ptr<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">newlen<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">left<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">TRUE<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt> <comment type="block" pos:line="5" pos:column="21">/* left side of the ? */</comment>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">host_sep<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><operator pos:line="6" pos:column="35">(<pos:position pos:line="6" pos:column="36"/></operator><specifier pos:line="6" pos:column="36">const<pos:position pos:line="6" pos:column="41"/></specifier> <name pos:line="6" pos:column="42">unsigned<pos:position pos:line="6" pos:column="50"/></name> <name pos:line="6" pos:column="51">char<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <name pos:line="6" pos:column="59">url<pos:position pos:line="6" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">relative<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">host_sep<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">unsigned<pos:position pos:line="9" pos:column="31"/></name> <name pos:line="9" pos:column="32">char<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">*<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator> <call><name pos:line="9" pos:column="40">find_host_sep<pos:position pos:line="9" pos:column="53"/></name><argument_list pos:line="9" pos:column="53">(<argument><expr><name pos:line="9" pos:column="54">url<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></then></if>

  <for pos:line="11" pos:column="3">for<control pos:line="11" pos:column="6">(<init><expr><name pos:line="11" pos:column="7">ptr<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">unsigned<pos:position pos:line="11" pos:column="22"/></name> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">url<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></init> <condition><expr><operator pos:line="11" pos:column="35">*<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">ptr<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">ptr<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control> <block pos:line="11" pos:column="48">{

    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">ptr<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">&lt;<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="14">host_sep<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
      <expr_stmt><expr><operator pos:line="14" pos:column="7">++<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">newlen<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
      <continue pos:line="15" pos:column="7">continue;<pos:position pos:line="15" pos:column="16"/></continue>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <switch pos:line="18" pos:column="5">switch<condition pos:line="18" pos:column="11">(<expr><operator pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">ptr<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition> <block pos:line="18" pos:column="18">{
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'?'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="20" pos:column="7">left<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">FALSE<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
      <comment type="block" pos:line="21" pos:column="7">/* fall through */</comment>
    <default pos:line="22" pos:column="5">default:<pos:position pos:line="22" pos:column="13"/></default>
      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">ptr<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">&gt;=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="18">0x80<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">newlen<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">2<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="25" pos:column="7">newlen<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>
    <case pos:line="27" pos:column="5">case <expr><literal type="char" pos:line="27" pos:column="10">' '<pos:position pos:line="27" pos:column="13"/></literal></expr>:<pos:position pos:line="27" pos:column="14"/></case>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">left<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">newlen<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">+=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">3<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt></block></then>
      <else pos:line="30" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">newlen<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">++<pos:position pos:line="31" pos:column="17"/></operator></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt></block></else></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>
    }<pos:position pos:line="33" pos:column="6"/></block></switch>
  }<pos:position pos:line="34" pos:column="4"/></block></for>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">newlen<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

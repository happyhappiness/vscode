<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2169_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_pp_getsock<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">pingpong<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pp<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">curl_socket_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">socks<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">numsocks<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">connectdata<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">conn<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name><name pos:line="5" pos:column="30">pp<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">conn<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">numsocks<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">GETSOCK_BLANK<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">socks<pos:position pos:line="10" pos:column="8"/></name><index pos:line="10" pos:column="8">[<expr><literal type="number" pos:line="10" pos:column="9">0<pos:position pos:line="10" pos:column="10"/></literal></expr>]<pos:position pos:line="10" pos:column="11"/></index></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">conn<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">sock<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">FIRSTSOCKET<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">pp<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">sendleft<pos:position pos:line="12" pos:column="18"/></name></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <comment type="block" pos:line="13" pos:column="5">/* write mode */</comment>
    <return pos:line="14" pos:column="5">return <expr><call><name pos:line="14" pos:column="12">GETSOCK_WRITESOCK<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* read mode */</comment>
  <return pos:line="18" pos:column="3">return <expr><call><name pos:line="18" pos:column="10">GETSOCK_READSOCK<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

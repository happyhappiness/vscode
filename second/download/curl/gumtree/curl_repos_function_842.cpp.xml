<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_842.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">easysrc_add<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">curl_slist<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">plist<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">line<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">ret<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">CURLE_OK<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_slist<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">list<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">=
    <expr><call><name pos:line="5" pos:column="5">curl_slist_append<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">plist<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">line<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">list<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition><then pos:line="6" pos:column="12"> <block pos:line="6" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">easysrc_free<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">()<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">ret<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">plist<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">list<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt></block></else></if>
  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">ret<pos:position pos:line="12" pos:column="13"/></name></expr>;<pos:position pos:line="12" pos:column="14"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

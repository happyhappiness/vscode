<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1106_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURL<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_easy_duphandle<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CURL<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">incurl<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">bool<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">fail<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">TRUE<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name><init pos:line="4" pos:column="29">=<expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator>struct <name pos:line="4" pos:column="38">SessionHandle<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></operator><operator pos:line="4" pos:column="53">)<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">incurl<pos:position pos:line="4" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">outcurl<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><operator pos:line="6" pos:column="35">(<pos:position pos:line="6" pos:column="36"/></operator>struct <name pos:line="6" pos:column="43">SessionHandle<pos:position pos:line="6" pos:column="56"/></name> <operator pos:line="6" pos:column="57">*<pos:position pos:line="6" pos:column="58"/></operator><operator pos:line="6" pos:column="58">)<pos:position pos:line="6" pos:column="59"/></operator>
    <call><name pos:line="7" pos:column="5">calloc<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><sizeof pos:line="7" pos:column="12">sizeof<argument_list pos:line="7" pos:column="18">(<argument><expr pos:line="7" pos:column="19">struct <name pos:line="7" pos:column="26">SessionHandle<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="42">1<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">NULL<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">outcurl<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="10" pos:column="18">/* failure */</comment>

  <do pos:line="12" pos:column="3">do <block pos:line="12" pos:column="6">{

    <comment type="block" pos:line="14" pos:column="5">/*
     * We setup a few buffers we need. We should probably make them
     * get setup on-demand in the code, as that would probably decrease
     * the likeliness of us forgetting to init a buffer here in the future.
     */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">outcurl<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">state<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">headerbuff<pos:position pos:line="19" pos:column="30"/></name></name><operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">char<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">*<pos:position pos:line="19" pos:column="37"/></operator><operator pos:line="19" pos:column="37">)<pos:position pos:line="19" pos:column="38"/></operator><call><name pos:line="19" pos:column="38">malloc<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">HEADERSIZE<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><operator pos:line="20" pos:column="8">!<pos:position pos:line="20" pos:column="9"/></operator><name><name pos:line="20" pos:column="9">outcurl<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">state<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">headerbuff<pos:position pos:line="20" pos:column="34"/></name></name></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">outcurl<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">state<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">headersize<pos:position pos:line="23" pos:column="30"/></name></name><operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">HEADERSIZE<pos:position pos:line="23" pos:column="41"/></name></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* copy all userdefined values */</comment>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><call><name pos:line="26" pos:column="8">Curl_dupset<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">outcurl<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">data<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call> <operator pos:line="26" pos:column="35">!=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">CURLE_OK<pos:position pos:line="26" pos:column="46"/></name></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47">
      <block type="pseudo"><break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break></block></then></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name><name pos:line="29" pos:column="8">data<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">state<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">used_interface<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">==<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">Curl_if_multi<pos:position pos:line="29" pos:column="51"/></name></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="7">outcurl<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">state<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">connc<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name><name pos:line="30" pos:column="30">data<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">state<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">connc<pos:position pos:line="30" pos:column="47"/></name></name></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="31" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="7">outcurl<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">state<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">connc<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="30">Curl_mk_connc<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">CONNCACHE_PRIVATE<pos:position pos:line="32" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="63">-<pos:position pos:line="32" pos:column="64"/></operator><literal type="number" pos:line="32" pos:column="64">1<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt></block></else></if>

    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><name><name pos:line="34" pos:column="9">outcurl<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">state<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">.<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">connc<pos:position pos:line="34" pos:column="29"/></name></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
      <block type="pseudo"><break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">outcurl<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">state<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">lastconnect<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <operator pos:line="37" pos:column="34">-<pos:position pos:line="37" pos:column="35"/></operator><literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">outcurl<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">progress<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">flags<pos:position pos:line="39" pos:column="28"/></name></name>    <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <name><name pos:line="39" pos:column="34">data<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">progress<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">.<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="49">flags<pos:position pos:line="39" pos:column="54"/></name></name></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">outcurl<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">progress<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">callback<pos:position pos:line="40" pos:column="31"/></name></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="34">data<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">progress<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">.<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">callback<pos:position pos:line="40" pos:column="57"/></name></name></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>

<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><operator pos:line="42" pos:column="5">!<pos:position pos:line="42" pos:column="6"/></operator><call><name pos:line="42" pos:column="6">defined<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">CURL_DISABLE_HTTP<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <operator pos:line="42" pos:column="36">!<pos:position pos:line="42" pos:column="37"/></operator><call><name pos:line="42" pos:column="37">defined<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><name pos:line="42" pos:column="45">CURL_DISABLE_COOKIES<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr></cpp:if>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name><name pos:line="43" pos:column="8">data<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">cookies<pos:position pos:line="43" pos:column="21"/></name></name></expr>)<pos:position pos:line="43" pos:column="22"/></condition><then pos:line="43" pos:column="22"> <block pos:line="43" pos:column="23">{
      <comment type="block" pos:line="44" pos:column="7">/* If cookies are enabled in the parent handle, we enable them
         in the clone as well! */</comment>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">outcurl<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">cookies<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <call><name pos:line="46" pos:column="26">Curl_cookie_init<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">data<pos:position pos:line="46" pos:column="47"/></name></expr></argument>,
                                          <argument><expr><name><name pos:line="47" pos:column="43">data<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">-&gt;<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="49">cookies<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">filename<pos:position pos:line="47" pos:column="66"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="48" pos:column="43">outcurl<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">cookies<pos:position pos:line="48" pos:column="59"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="49" pos:column="43">data<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">set<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">.<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="53">cookiesession<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><operator pos:line="50" pos:column="10">!<pos:position pos:line="50" pos:column="11"/></operator><name><name pos:line="50" pos:column="11">outcurl<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">cookies<pos:position pos:line="50" pos:column="27"/></name></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
        <break pos:line="51" pos:column="9">break;<pos:position pos:line="51" pos:column="15"/></break>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="54" pos:column="10">/* CURL_DISABLE_HTTP */</comment>

    <comment type="block" pos:line="56" pos:column="5">/* duplicate all values in 'change' */</comment>

    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><name><name pos:line="58" pos:column="8">data<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">change<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">.<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">url<pos:position pos:line="58" pos:column="24"/></name></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25"> <block pos:line="58" pos:column="26">{
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">outcurl<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">change<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">.<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">url<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">strdup<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name><name pos:line="59" pos:column="36">data<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">change<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">.<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">url<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
      <if pos:line="60" pos:column="7">if<condition pos:line="60" pos:column="9">(<expr><operator pos:line="60" pos:column="10">!<pos:position pos:line="60" pos:column="11"/></operator><name><name pos:line="60" pos:column="11">outcurl<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">change<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">url<pos:position pos:line="60" pos:column="30"/></name></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31">
        <block type="pseudo"><break pos:line="61" pos:column="9">break;<pos:position pos:line="61" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">outcurl<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">change<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">.<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">url_alloc<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">=<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="35">TRUE<pos:position pos:line="62" pos:column="39"/></name></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name><name pos:line="65" pos:column="8">data<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">change<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">referer<pos:position pos:line="65" pos:column="28"/></name></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition><then pos:line="65" pos:column="29"> <block pos:line="65" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="66" pos:column="7">outcurl<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">change<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">.<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">referer<pos:position pos:line="66" pos:column="30"/></name></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <call><name pos:line="66" pos:column="33">strdup<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><name><name pos:line="66" pos:column="40">data<pos:position pos:line="66" pos:column="44"/></name><operator pos:line="66" pos:column="44">-&gt;<pos:position pos:line="66" pos:column="49"/></operator><name pos:line="66" pos:column="46">change<pos:position pos:line="66" pos:column="52"/></name><operator pos:line="66" pos:column="52">.<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="53">referer<pos:position pos:line="66" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
      <if pos:line="67" pos:column="7">if<condition pos:line="67" pos:column="9">(<expr><operator pos:line="67" pos:column="10">!<pos:position pos:line="67" pos:column="11"/></operator><name><name pos:line="67" pos:column="11">outcurl<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-&gt;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="20">change<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">.<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="27">referer<pos:position pos:line="67" pos:column="34"/></name></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35">
        <block type="pseudo"><break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">outcurl<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">change<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">.<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="23">referer_alloc<pos:position pos:line="69" pos:column="36"/></name></name> <operator pos:line="69" pos:column="37">=<pos:position pos:line="69" pos:column="38"/></operator> <name pos:line="69" pos:column="39">TRUE<pos:position pos:line="69" pos:column="43"/></name></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">USE_ARES<pos:position pos:line="72" pos:column="16"/></name></cpp:ifdef>
    <comment type="block" pos:line="73" pos:column="5">/* If we use ares, we setup a new ares channel for the new handle */</comment>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><name pos:line="74" pos:column="8">ARES_SUCCESS<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">!=<pos:position pos:line="74" pos:column="23"/></operator> <call><name pos:line="74" pos:column="24">ares_init<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><operator pos:line="74" pos:column="34">&amp;<pos:position pos:line="74" pos:column="39"/></operator><name><name pos:line="74" pos:column="35">outcurl<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">state<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">.<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="50">areschannel<pos:position pos:line="74" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="63"/></condition><then pos:line="74" pos:column="63">
      <block type="pseudo"><break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break></block></then></if>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">if<pos:position pos:line="78" pos:column="4"/></cpp:directive> <expr><call><name pos:line="78" pos:column="5">defined<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><name pos:line="78" pos:column="13">CURL_DOES_CONVERSIONS<pos:position pos:line="78" pos:column="34"/></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call> <operator pos:line="78" pos:column="36">&amp;&amp;<pos:position pos:line="78" pos:column="46"/></operator> <call><name pos:line="78" pos:column="39">defined<pos:position pos:line="78" pos:column="46"/></name><argument_list pos:line="78" pos:column="46">(<argument><expr><name pos:line="78" pos:column="47">HAVE_ICONV<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">outcurl<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">-&gt;<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="14">inbound_cd<pos:position pos:line="79" pos:column="24"/></name></name> <operator pos:line="79" pos:column="25">=<pos:position pos:line="79" pos:column="26"/></operator> <call><name pos:line="79" pos:column="27">iconv_open<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">CURL_ICONV_CODESET_OF_HOST<pos:position pos:line="79" pos:column="64"/></name></expr></argument>,
                                     <argument><expr><name pos:line="80" pos:column="38">CURL_ICONV_CODESET_OF_NETWORK<pos:position pos:line="80" pos:column="67"/></name></expr></argument>)<pos:position pos:line="80" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">outcurl<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">outbound_cd<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <call><name pos:line="81" pos:column="28">iconv_open<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">CURL_ICONV_CODESET_OF_NETWORK<pos:position pos:line="81" pos:column="68"/></name></expr></argument>,
                                      <argument><expr><name pos:line="82" pos:column="39">CURL_ICONV_CODESET_OF_HOST<pos:position pos:line="82" pos:column="65"/></name></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">outcurl<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">utf8_cd<pos:position pos:line="83" pos:column="21"/></name></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <call><name pos:line="83" pos:column="24">iconv_open<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">CURL_ICONV_CODESET_OF_HOST<pos:position pos:line="83" pos:column="61"/></name></expr></argument>,
                                  <argument><expr><name pos:line="84" pos:column="35">CURL_ICONV_CODESET_FOR_UTF8<pos:position pos:line="84" pos:column="62"/></name></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">Curl_easy_initHandleData<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">outcurl<pos:position pos:line="87" pos:column="37"/></name></expr></argument>)<pos:position pos:line="87" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="89" pos:column="5">outcurl<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">magic<pos:position pos:line="89" pos:column="19"/></name></name> <operator pos:line="89" pos:column="20">=<pos:position pos:line="89" pos:column="21"/></operator> <name pos:line="89" pos:column="22">CURLEASY_MAGIC_NUMBER<pos:position pos:line="89" pos:column="43"/></name></expr>;<pos:position pos:line="89" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="91" pos:column="5">fail<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <name pos:line="91" pos:column="12">FALSE<pos:position pos:line="91" pos:column="17"/></name></expr>;<pos:position pos:line="91" pos:column="18"/></expr_stmt> <comment type="block" pos:line="91" pos:column="19">/* we reach this point and thus we are OK */</comment>

  }<pos:position pos:line="93" pos:column="4"/></block> while<condition pos:line="93" pos:column="10">(<expr><literal type="number" pos:line="93" pos:column="11">0<pos:position pos:line="93" pos:column="12"/></literal></expr>)<pos:position pos:line="93" pos:column="13"/></condition>;<pos:position pos:line="93" pos:column="14"/></do>

  <if pos:line="95" pos:column="3">if<condition pos:line="95" pos:column="5">(<expr><name pos:line="95" pos:column="6">fail<pos:position pos:line="95" pos:column="10"/></name></expr>)<pos:position pos:line="95" pos:column="11"/></condition><then pos:line="95" pos:column="11"> <block pos:line="95" pos:column="12">{
    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><name pos:line="96" pos:column="8">outcurl<pos:position pos:line="96" pos:column="15"/></name></expr>)<pos:position pos:line="96" pos:column="16"/></condition><then pos:line="96" pos:column="16"> <block pos:line="96" pos:column="17">{
      <if pos:line="97" pos:column="7">if<condition pos:line="97" pos:column="9">(<expr><name><name pos:line="97" pos:column="10">outcurl<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">-&gt;<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="19">state<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">.<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="25">connc<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">&amp;&amp;<pos:position pos:line="97" pos:column="41"/></operator>
         <operator pos:line="98" pos:column="10">(<pos:position pos:line="98" pos:column="11"/></operator><name><name pos:line="98" pos:column="11">outcurl<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">state<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">.<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">connc<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">-&gt;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="33">type<pos:position pos:line="98" pos:column="37"/></name></name> <operator pos:line="98" pos:column="38">==<pos:position pos:line="98" pos:column="40"/></operator> <name pos:line="98" pos:column="41">CONNCACHE_PRIVATE<pos:position pos:line="98" pos:column="58"/></name><operator pos:line="98" pos:column="58">)<pos:position pos:line="98" pos:column="59"/></operator></expr>)<pos:position pos:line="98" pos:column="60"/></condition><then pos:line="98" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="9">Curl_rm_connc<pos:position pos:line="99" pos:column="22"/></name><argument_list pos:line="99" pos:column="22">(<argument><expr><name><name pos:line="99" pos:column="23">outcurl<pos:position pos:line="99" pos:column="30"/></name><operator pos:line="99" pos:column="30">-&gt;<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="32">state<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">.<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="38">connc<pos:position pos:line="99" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt></block></then></if>
      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><name><name pos:line="100" pos:column="10">outcurl<pos:position pos:line="100" pos:column="17"/></name><operator pos:line="100" pos:column="17">-&gt;<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="19">state<pos:position pos:line="100" pos:column="24"/></name><operator pos:line="100" pos:column="24">.<pos:position pos:line="100" pos:column="25"/></operator><name pos:line="100" pos:column="25">headerbuff<pos:position pos:line="100" pos:column="35"/></name></name></expr>)<pos:position pos:line="100" pos:column="36"/></condition><then pos:line="100" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="9">free<pos:position pos:line="101" pos:column="13"/></name><argument_list pos:line="101" pos:column="13">(<argument><expr><name><name pos:line="101" pos:column="14">outcurl<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">-&gt;<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="23">state<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">.<pos:position pos:line="101" pos:column="29"/></operator><name pos:line="101" pos:column="29">headerbuff<pos:position pos:line="101" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt></block></then></if>
      <if pos:line="102" pos:column="7">if<condition pos:line="102" pos:column="9">(<expr><name><name pos:line="102" pos:column="10">outcurl<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">-&gt;<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="19">change<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">.<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="26">url<pos:position pos:line="102" pos:column="29"/></name></name></expr>)<pos:position pos:line="102" pos:column="30"/></condition><then pos:line="102" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="9">free<pos:position pos:line="103" pos:column="13"/></name><argument_list pos:line="103" pos:column="13">(<argument><expr><name><name pos:line="103" pos:column="14">outcurl<pos:position pos:line="103" pos:column="21"/></name><operator pos:line="103" pos:column="21">-&gt;<pos:position pos:line="103" pos:column="26"/></operator><name pos:line="103" pos:column="23">change<pos:position pos:line="103" pos:column="29"/></name><operator pos:line="103" pos:column="29">.<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="30">url<pos:position pos:line="103" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="104" pos:column="7">if<condition pos:line="104" pos:column="9">(<expr><name><name pos:line="104" pos:column="10">outcurl<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">-&gt;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="19">change<pos:position pos:line="104" pos:column="25"/></name><operator pos:line="104" pos:column="25">.<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="26">referer<pos:position pos:line="104" pos:column="33"/></name></name></expr>)<pos:position pos:line="104" pos:column="34"/></condition><then pos:line="104" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="9">free<pos:position pos:line="105" pos:column="13"/></name><argument_list pos:line="105" pos:column="13">(<argument><expr><name><name pos:line="105" pos:column="14">outcurl<pos:position pos:line="105" pos:column="21"/></name><operator pos:line="105" pos:column="21">-&gt;<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="23">change<pos:position pos:line="105" pos:column="29"/></name><operator pos:line="105" pos:column="29">.<pos:position pos:line="105" pos:column="30"/></operator><name pos:line="105" pos:column="30">referer<pos:position pos:line="105" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">Curl_freeset<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">outcurl<pos:position pos:line="106" pos:column="27"/></name></expr></argument>)<pos:position pos:line="106" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">free<pos:position pos:line="107" pos:column="11"/></name><argument_list pos:line="107" pos:column="11">(<argument><expr><name pos:line="107" pos:column="12">outcurl<pos:position pos:line="107" pos:column="19"/></name></expr></argument>)<pos:position pos:line="107" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="21"/></expr_stmt> <comment type="block" pos:line="107" pos:column="22">/* free the memory again */</comment>
      <expr_stmt><expr><name pos:line="108" pos:column="7">outcurl<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <name pos:line="108" pos:column="17">NULL<pos:position pos:line="108" pos:column="21"/></name></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>
  }<pos:position pos:line="110" pos:column="4"/></block></then></if>

  <return pos:line="112" pos:column="3">return <expr><name pos:line="112" pos:column="10">outcurl<pos:position pos:line="112" pos:column="17"/></name></expr>;<pos:position pos:line="112" pos:column="18"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1042_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">Curl_convert_wchar_to_UTF8<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">wchar_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">str_w<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">str_utf8<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">str_w<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12"> <block pos:line="5" pos:column="13">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">str_utf8_len<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">WideCharToMultiByte<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">CP_UTF8<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="53">0<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="56">str_w<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="63">-<pos:position pos:line="6" pos:column="64"/></operator><literal type="number" pos:line="6" pos:column="64">1<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="67">NULL<pos:position pos:line="6" pos:column="71"/></name></expr></argument>,
                                           <argument><expr><literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">NULL<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">NULL<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><name pos:line="8" pos:column="8">str_utf8_len<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&gt;<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
      <expr_stmt><expr><name pos:line="9" pos:column="7">str_utf8<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">malloc<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">str_utf8_len<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></operator> <sizeof pos:line="9" pos:column="40">sizeof<argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">wchar_t<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
      <if pos:line="10" pos:column="7">if<condition pos:line="10" pos:column="9">(<expr><name pos:line="10" pos:column="10">str_utf8<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
        <if pos:line="11" pos:column="9">if<condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">WideCharToMultiByte<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">CP_UTF8<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">str_w<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="51">-<pos:position pos:line="11" pos:column="52"/></operator><literal type="number" pos:line="11" pos:column="52">1<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">str_utf8<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="65">str_utf8_len<pos:position pos:line="11" pos:column="77"/></name></expr></argument>,
                               <argument><expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">FALSE<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call> <operator pos:line="12" pos:column="45">==<pos:position pos:line="12" pos:column="47"/></operator> <literal type="number" pos:line="12" pos:column="48">0<pos:position pos:line="12" pos:column="49"/></literal></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
          <expr_stmt><expr><call><name pos:line="13" pos:column="11">free<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">str_utf8<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
          <return pos:line="14" pos:column="11">return <expr><name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
      }<pos:position pos:line="16" pos:column="8"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">str_utf8<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

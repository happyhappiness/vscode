<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_29_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">start_timeout<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">CURLM<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">multi<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">long<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">timeout_ms<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">userp<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><name pos:line="3" pos:column="6">timeout_ms<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">&lt;=<pos:position pos:line="3" pos:column="22"/></operator> <literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="5">timeout_ms<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">1<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt></block></then></if> <comment type="block" pos:line="4" pos:column="21">/* 0 means directly call socket_action, but we'll do it in
                       a bit */</comment>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">uv_timer_start<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><operator pos:line="6" pos:column="18">&amp;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="19">timeout<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">on_timeout<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">timeout_ms<pos:position pos:line="6" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

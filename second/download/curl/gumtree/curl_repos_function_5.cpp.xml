<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">next_url<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">URLGlob<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">glob<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">int<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">beenhere<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">glob_buffer<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">URLPattern<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">pat<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">lit<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">signed<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">carry<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">beenhere<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">beenhere<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt></block></then>
  <else pos:line="12" pos:column="3">else <block pos:line="12" pos:column="8">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">carry<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* implement a counter over the index ranges of all patterns,
       starting with the rightmost pattern */</comment>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">i<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">glob<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">size<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">/<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="27">2<pos:position pos:line="17" pos:column="28"/></literal> <operator pos:line="17" pos:column="29">-<pos:position pos:line="17" pos:column="30"/></operator> <literal type="number" pos:line="17" pos:column="31">1<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></init> <condition><expr><name pos:line="17" pos:column="34">carry<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">&amp;&amp;<pos:position pos:line="17" pos:column="50"/></operator> <name pos:line="17" pos:column="43">i<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">&gt;=<pos:position pos:line="17" pos:column="50"/></operator> <literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr>;<pos:position pos:line="17" pos:column="50"/></condition> <incr><expr><operator pos:line="17" pos:column="51">--<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">i<pos:position pos:line="17" pos:column="54"/></name></expr></incr>)<pos:position pos:line="17" pos:column="55"/></control> <block pos:line="17" pos:column="56">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">carry<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">pat<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="14">glob<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">pattern<pos:position pos:line="19" pos:column="27"/></name><index pos:line="19" pos:column="27">[<expr><name pos:line="19" pos:column="28">i<pos:position pos:line="19" pos:column="29"/></name></expr>]<pos:position pos:line="19" pos:column="30"/></index></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
      <switch pos:line="20" pos:column="7">switch <condition pos:line="20" pos:column="14">(<expr><name><name pos:line="20" pos:column="15">pat<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">type<pos:position pos:line="20" pos:column="24"/></name></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition> <block pos:line="20" pos:column="26">{
      <case pos:line="21" pos:column="7">case <expr><name pos:line="21" pos:column="12">UPTSet<pos:position pos:line="21" pos:column="18"/></name></expr>:<pos:position pos:line="21" pos:column="19"/></case>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">++<pos:position pos:line="22" pos:column="15"/></operator><name><name pos:line="22" pos:column="15">pat<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">content<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">Set<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">ptr_s<pos:position pos:line="22" pos:column="37"/></name></name> <operator pos:line="22" pos:column="38">==<pos:position pos:line="22" pos:column="40"/></operator> <name><name pos:line="22" pos:column="41">pat<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">content<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">Set<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">.<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="58">size<pos:position pos:line="22" pos:column="62"/></name></name></expr>)<pos:position pos:line="22" pos:column="63"/></condition><then pos:line="22" pos:column="63"> <block pos:line="22" pos:column="64">{
	  <expr_stmt><expr><name><name pos:line="23" pos:column="11">pat<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">content<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">Set<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">ptr_s<pos:position pos:line="23" pos:column="33"/></name></name> <operator pos:line="23" pos:column="34">=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="24" pos:column="11">carry<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">1<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break>
      <case pos:line="27" pos:column="7">case <expr><name pos:line="27" pos:column="12">UPTCharRange<pos:position pos:line="27" pos:column="24"/></name></expr>:<pos:position pos:line="27" pos:column="25"/></case>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">++<pos:position pos:line="28" pos:column="15"/></operator><name><name pos:line="28" pos:column="15">pat<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">content<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">CharRange<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">.<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">ptr_c<pos:position pos:line="28" pos:column="43"/></name></name> <operator pos:line="28" pos:column="44">&gt;<pos:position pos:line="28" pos:column="48"/></operator> <name><name pos:line="28" pos:column="46">pat<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">content<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">CharRange<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">.<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="69">max_c<pos:position pos:line="28" pos:column="74"/></name></name></expr>)<pos:position pos:line="28" pos:column="75"/></condition><then pos:line="28" pos:column="75"> <block pos:line="28" pos:column="76">{
	  <expr_stmt><expr><name><name pos:line="29" pos:column="11">pat<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">content<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">CharRange<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">ptr_c<pos:position pos:line="29" pos:column="39"/></name></name> <operator pos:line="29" pos:column="40">=<pos:position pos:line="29" pos:column="41"/></operator> <name><name pos:line="29" pos:column="42">pat<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">content<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">.<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">CharRange<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">.<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="65">min_c<pos:position pos:line="29" pos:column="70"/></name></name></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="30" pos:column="11">carry<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="19">1<pos:position pos:line="30" pos:column="20"/></literal></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>
      <case pos:line="33" pos:column="7">case <expr><name pos:line="33" pos:column="12">UPTNumRange<pos:position pos:line="33" pos:column="23"/></name></expr>:<pos:position pos:line="33" pos:column="24"/></case>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name><name pos:line="34" pos:column="15">pat<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">content<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">NumRange<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">.<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="37">ptr_n<pos:position pos:line="34" pos:column="42"/></name></name> <operator pos:line="34" pos:column="43">&gt;<pos:position pos:line="34" pos:column="47"/></operator> <name><name pos:line="34" pos:column="45">pat<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">content<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">.<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">NumRange<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">.<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="67">max_n<pos:position pos:line="34" pos:column="72"/></name></name></expr>)<pos:position pos:line="34" pos:column="73"/></condition><then pos:line="34" pos:column="73"> <block pos:line="34" pos:column="74">{
	  <expr_stmt><expr><name><name pos:line="35" pos:column="11">pat<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">content<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">.<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">NumRange<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">ptr_n<pos:position pos:line="35" pos:column="38"/></name></name> <operator pos:line="35" pos:column="39">=<pos:position pos:line="35" pos:column="40"/></operator> <name><name pos:line="35" pos:column="41">pat<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">content<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">NumRange<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">.<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">min_n<pos:position pos:line="35" pos:column="68"/></name></name></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="36" pos:column="11">carry<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
	<break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
      <default pos:line="39" pos:column="7">default:<pos:position pos:line="39" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">printf<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="string" pos:line="40" pos:column="16">"internal error: invalid pattern type (%d)\n"<pos:position pos:line="40" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="63">pat<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">-&gt;<pos:position pos:line="40" pos:column="71"/></operator><name pos:line="40" pos:column="68">type<pos:position pos:line="40" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">exit<pos:position pos:line="41" pos:column="13"/></name> <argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">CURLE_FAILED_INIT<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></switch>
    }<pos:position pos:line="43" pos:column="6"/></block></for>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">carry<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15">		<comment type="block" pos:line="44" pos:column="25">/* first pattern ptr has run into overflow, done! */</comment>
      <block type="pseudo"><return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">NULL<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>

  <for pos:line="48" pos:column="3">for <control pos:line="48" pos:column="7">(<init><expr><name pos:line="48" pos:column="8">i<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></init> <condition><expr><name pos:line="48" pos:column="15">i<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">&lt;<pos:position pos:line="48" pos:column="21"/></operator> <name><name pos:line="48" pos:column="19">glob<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">size<pos:position pos:line="48" pos:column="29"/></name></name></expr>;<pos:position pos:line="48" pos:column="30"/></condition> <incr><expr><operator pos:line="48" pos:column="31">++<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">i<pos:position pos:line="48" pos:column="34"/></name></expr></incr>)<pos:position pos:line="48" pos:column="35"/></control> <block pos:line="48" pos:column="36">{
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><operator pos:line="49" pos:column="10">(<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">i<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">%<pos:position pos:line="49" pos:column="14"/></operator> <literal type="number" pos:line="49" pos:column="15">2<pos:position pos:line="49" pos:column="16"/></literal><operator pos:line="49" pos:column="16">)<pos:position pos:line="49" pos:column="17"/></operator></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18"> <block pos:line="49" pos:column="19">{			<comment type="block" pos:line="49" pos:column="41">/* every other term (i even) is a literal */</comment>
      <expr_stmt><expr><name pos:line="50" pos:column="7">lit<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <name><name pos:line="50" pos:column="13">glob<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">literal<pos:position pos:line="50" pos:column="26"/></name><index pos:line="50" pos:column="26">[<expr><name pos:line="50" pos:column="27">i<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">/<pos:position pos:line="50" pos:column="29"/></operator><literal type="number" pos:line="50" pos:column="29">2<pos:position pos:line="50" pos:column="30"/></literal></expr>]<pos:position pos:line="50" pos:column="31"/></index></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">strcpy<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">buf<pos:position pos:line="51" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="19">lit<pos:position pos:line="51" pos:column="22"/></name></expr></argument>)<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">buf<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">+=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">strlen<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">lit<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else <block pos:line="54" pos:column="10">{				<comment type="block" pos:line="54" pos:column="41">/* the rest (i odd) are patterns */</comment>
      <expr_stmt><expr><name pos:line="55" pos:column="7">pat<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <operator pos:line="55" pos:column="13">&amp;<pos:position pos:line="55" pos:column="18"/></operator><name><name pos:line="55" pos:column="14">glob<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">pattern<pos:position pos:line="55" pos:column="27"/></name><index pos:line="55" pos:column="27">[<expr><name pos:line="55" pos:column="28">i<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">/<pos:position pos:line="55" pos:column="30"/></operator><literal type="number" pos:line="55" pos:column="30">2<pos:position pos:line="55" pos:column="31"/></literal></expr>]<pos:position pos:line="55" pos:column="32"/></index></name></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
      <switch pos:line="56" pos:column="7">switch<condition pos:line="56" pos:column="13">(<expr><name><name pos:line="56" pos:column="14">pat<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">-&gt;<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="19">type<pos:position pos:line="56" pos:column="23"/></name></name></expr>)<pos:position pos:line="56" pos:column="24"/></condition> <block pos:line="56" pos:column="25">{
      <case pos:line="57" pos:column="7">case <expr><name pos:line="57" pos:column="12">UPTSet<pos:position pos:line="57" pos:column="18"/></name></expr>:<pos:position pos:line="57" pos:column="19"/></case>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">strcpy<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">buf<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="21">pat<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">content<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">.<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">Set<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">.<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">elements<pos:position pos:line="58" pos:column="46"/></name><index pos:line="58" pos:column="46">[<expr><name><name pos:line="58" pos:column="47">pat<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">content<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">.<pos:position pos:line="58" pos:column="60"/></operator><name pos:line="58" pos:column="60">Set<pos:position pos:line="58" pos:column="63"/></name><operator pos:line="58" pos:column="63">.<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="64">ptr_s<pos:position pos:line="58" pos:column="69"/></name></name></expr>]<pos:position pos:line="58" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="59" pos:column="9">buf<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">+=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">strlen<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name><name pos:line="59" pos:column="23">pat<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">content<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">.<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">Set<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">.<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">elements<pos:position pos:line="59" pos:column="48"/></name><index pos:line="59" pos:column="48">[<expr><name><name pos:line="59" pos:column="49">pat<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">-&gt;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="54">content<pos:position pos:line="59" pos:column="61"/></name><operator pos:line="59" pos:column="61">.<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="62">Set<pos:position pos:line="59" pos:column="65"/></name><operator pos:line="59" pos:column="65">.<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="66">ptr_s<pos:position pos:line="59" pos:column="71"/></name></name></expr>]<pos:position pos:line="59" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>
	<break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break>
      <case pos:line="61" pos:column="7">case <expr><name pos:line="61" pos:column="12">UPTCharRange<pos:position pos:line="61" pos:column="24"/></name></expr>:<pos:position pos:line="61" pos:column="25"/></case>
	<expr_stmt><expr><operator pos:line="62" pos:column="9">*<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">buf<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">++<pos:position pos:line="62" pos:column="15"/></operator> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name><name pos:line="62" pos:column="18">pat<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">-&gt;<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="23">content<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">.<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">CharRange<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">.<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">ptr_c<pos:position pos:line="62" pos:column="46"/></name></name></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
	<break pos:line="63" pos:column="9">break;<pos:position pos:line="63" pos:column="15"/></break>
      <case pos:line="64" pos:column="7">case <expr><name pos:line="64" pos:column="12">UPTNumRange<pos:position pos:line="64" pos:column="23"/></name></expr>:<pos:position pos:line="64" pos:column="24"/></case>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">sprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">buf<pos:position pos:line="65" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="22">"%0*d"<pos:position pos:line="65" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="30">pat<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">content<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">.<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="43">NumRange<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">.<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="52">padlength<pos:position pos:line="65" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="63">pat<pos:position pos:line="65" pos:column="66"/></name><operator pos:line="65" pos:column="66">-&gt;<pos:position pos:line="65" pos:column="71"/></operator><name pos:line="65" pos:column="68">content<pos:position pos:line="65" pos:column="75"/></name><operator pos:line="65" pos:column="75">.<pos:position pos:line="65" pos:column="76"/></operator><name pos:line="65" pos:column="76">NumRange<pos:position pos:line="65" pos:column="84"/></name><operator pos:line="65" pos:column="84">.<pos:position pos:line="65" pos:column="85"/></operator><name pos:line="65" pos:column="85">ptr_n<pos:position pos:line="65" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="92"/></expr_stmt> 
        <expr_stmt><expr><name pos:line="66" pos:column="9">buf<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">+=<pos:position pos:line="66" pos:column="15"/></operator> <call><name pos:line="66" pos:column="16">strlen<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">buf<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt> <comment type="block" pos:line="66" pos:column="29">/* make no sprint() return code assumptions */</comment>
	<break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>
      <default pos:line="68" pos:column="7">default:<pos:position pos:line="68" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">printf<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="string" pos:line="69" pos:column="16">"internal error: invalid pattern type (%d)\n"<pos:position pos:line="69" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="63">pat<pos:position pos:line="69" pos:column="66"/></name><operator pos:line="69" pos:column="66">-&gt;<pos:position pos:line="69" pos:column="71"/></operator><name pos:line="69" pos:column="68">type<pos:position pos:line="69" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">exit<pos:position pos:line="70" pos:column="13"/></name> <argument_list pos:line="70" pos:column="14">(<argument><expr><name pos:line="70" pos:column="15">CURLE_FAILED_INIT<pos:position pos:line="70" pos:column="32"/></name></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></switch>
    }<pos:position pos:line="72" pos:column="6"/></block></else></if>
  }<pos:position pos:line="73" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="74" pos:column="3">*<pos:position pos:line="74" pos:column="4"/></operator><name pos:line="74" pos:column="4">buf<pos:position pos:line="74" pos:column="7"/></name> <operator pos:line="74" pos:column="8">=<pos:position pos:line="74" pos:column="9"/></operator> <literal type="char" pos:line="74" pos:column="10">'\0'<pos:position pos:line="74" pos:column="14"/></literal></expr>;<pos:position pos:line="74" pos:column="15"/></expr_stmt>
  <return pos:line="75" pos:column="3">return <expr><call><name pos:line="75" pos:column="10">strdup<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">glob_buffer<pos:position pos:line="75" pos:column="28"/></name></expr></argument>)<pos:position pos:line="75" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="30"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

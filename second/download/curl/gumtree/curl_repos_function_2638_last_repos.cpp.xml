<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2638_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">cmp_peer_pubkey<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">ssl_connect_data<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">connssl<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">pinnedpubkey<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_SSL_PINNEDPUBKEYNOTMATCH<pos:position pos:line="4" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">BACKEND<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">data<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CERTCertificate<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">cert<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">pinnedpubkey<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <comment type="block" pos:line="9" pos:column="5">/* no pinned public key specified */</comment>
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">CURLE_OK<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* get peer certificate */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">cert<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">SSL_PeerCertificate<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">BACKEND<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">handle<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">cert<pos:position pos:line="14" pos:column="10"/></name></expr>)<pos:position pos:line="14" pos:column="11"/></condition><then pos:line="14" pos:column="11"> <block pos:line="14" pos:column="12">{
    <comment type="block" pos:line="15" pos:column="5">/* extract public key from peer certificate */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">SECKEYPublicKey<pos:position pos:line="16" pos:column="20"/></name> <modifier pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></modifier></type><name pos:line="16" pos:column="22">pubkey<pos:position pos:line="16" pos:column="28"/></name> <init pos:line="16" pos:column="29">= <expr><call><name pos:line="16" pos:column="31">CERT_ExtractPublicKey<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">cert<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="59"/></decl_stmt>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">pubkey<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{
      <comment type="block" pos:line="18" pos:column="7">/* encode the public key as DER */</comment>
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">SECItem<pos:position pos:line="19" pos:column="14"/></name> <modifier pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></modifier></type><name pos:line="19" pos:column="16">cert_der<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><call><name pos:line="19" pos:column="27">PK11_DEREncodePublicKey<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">pubkey<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="59"/></decl_stmt>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">cert_der<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
        <comment type="block" pos:line="21" pos:column="9">/* compare the public key with the pinned public key */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">result<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">Curl_pin_peer_pubkey<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">data<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">pinnedpubkey<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="59">cert_der<pos:position pos:line="22" pos:column="67"/></name><operator pos:line="22" pos:column="67">-&gt;<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="69">data<pos:position pos:line="22" pos:column="73"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="23" pos:column="39">cert_der<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">len<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">SECITEM_FreeItem<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">cert_der<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">PR_TRUE<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">SECKEY_DestroyPublicKey<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">pubkey<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">CERT_DestroyCertificate<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">cert<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* report the resulting status */</comment>
  <switch pos:line="32" pos:column="3">switch<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">result<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition> <block pos:line="32" pos:column="18">{
  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">CURLE_OK<pos:position pos:line="33" pos:column="16"/></name></expr>:<pos:position pos:line="33" pos:column="17"/></case>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">infof<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">data<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="17">"pinned public key verified successfully!\n"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    <break pos:line="35" pos:column="5">break;<pos:position pos:line="35" pos:column="11"/></break>
  <case pos:line="36" pos:column="3">case <expr><name pos:line="36" pos:column="8">CURLE_SSL_PINNEDPUBKEYNOTMATCH<pos:position pos:line="36" pos:column="38"/></name></expr>:<pos:position pos:line="36" pos:column="39"/></case>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">failf<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="17">"failed to verify pinned public key"<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    <break pos:line="38" pos:column="5">break;<pos:position pos:line="38" pos:column="11"/></break>
  <default pos:line="39" pos:column="3">default:<pos:position pos:line="39" pos:column="11"/></default>
    <comment type="block" pos:line="40" pos:column="5">/* OOM, etc. */</comment>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>
  }<pos:position pos:line="42" pos:column="4"/></block></switch>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

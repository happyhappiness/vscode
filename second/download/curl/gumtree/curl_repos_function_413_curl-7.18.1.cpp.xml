<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_413_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">destroy_thread_sync_data<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">thread_sync_data<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type> <name pos:line="2" pos:column="57">tsd<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name><name pos:line="4" pos:column="6">tsd<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">-&gt;<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="11">hostname<pos:position pos:line="4" pos:column="19"/></name></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="5">free<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">tsd<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">hostname<pos:position pos:line="5" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt></block></then></if>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name><name pos:line="6" pos:column="6">tsd<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">event_terminate<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">CloseHandle<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name><name pos:line="7" pos:column="17">tsd<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">event_terminate<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">tsd<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">mutex_terminate<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">CloseHandle<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name><name pos:line="9" pos:column="17">tsd<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">mutex_terminate<pos:position pos:line="9" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">tsd<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">mutex_waiting<pos:position pos:line="10" pos:column="24"/></name></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">CloseHandle<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">tsd<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">mutex_waiting<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">memset<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">tsd<pos:position pos:line="12" pos:column="13"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>,<argument><expr><sizeof pos:line="12" pos:column="16">sizeof<argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">tsd<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2399_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">ossl_send<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">sockindex<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">void<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">mem<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="4" pos:column="26">size_t<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">len<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="5" pos:column="26">CURLcode<pos:position pos:line="5" pos:column="34"/></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">curlcode<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <comment type="block" pos:line="7" pos:column="3">/* SSL_write() is said to return 'int' while write() and send() returns
     'size_t' */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">err<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">error_buffer<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">256<pos:position pos:line="10" pos:column="24"/></literal></expr>]<pos:position pos:line="10" pos:column="25"/></index></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">long<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">sslerror<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">memlen<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">rc<pos:position pos:line="13" pos:column="9"/></name></decl>;<pos:position pos:line="13" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">ssl_connect_data<pos:position pos:line="14" pos:column="26"/></name></name> <modifier pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></modifier></type><name pos:line="14" pos:column="28">connssl<pos:position pos:line="14" pos:column="35"/></name> <init pos:line="14" pos:column="36">= <expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name><name pos:line="14" pos:column="39">conn<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">ssl<pos:position pos:line="14" pos:column="48"/></name><index pos:line="14" pos:column="48">[<expr><name pos:line="14" pos:column="49">sockindex<pos:position pos:line="14" pos:column="58"/></name></expr>]<pos:position pos:line="14" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="60"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ERR_clear_error<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">memlen<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">len<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&gt;<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">size_t<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">INT_MAX<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator></expr> ?<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <expr><name pos:line="18" pos:column="38">INT_MAX<pos:position pos:line="18" pos:column="45"/></name></expr> <pos:position pos:line="18" pos:column="46"/></then><else pos:line="18" pos:column="46">: <expr><operator pos:line="18" pos:column="48">(<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">int<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">)<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">len<pos:position pos:line="18" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">rc<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <call><name pos:line="19" pos:column="8">SSL_write<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">BACKEND<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">handle<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">mem<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">memlen<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">rc<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">&lt;=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">err<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name pos:line="22" pos:column="11">SSL_get_error<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">BACKEND<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">handle<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">rc<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

    <switch pos:line="24" pos:column="5">switch<condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">err<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition> <block pos:line="24" pos:column="17">{
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="25" pos:column="29"/></name></expr>:<pos:position pos:line="25" pos:column="30"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">SSL_ERROR_WANT_WRITE<pos:position pos:line="26" pos:column="30"/></name></expr>:<pos:position pos:line="26" pos:column="31"/></case>
      <comment type="block" pos:line="27" pos:column="7">/* The operation did not complete; the same TLS/SSL I/O function
         should be called again later. This is basically an EWOULDBLOCK
         equivalent. */</comment>
      <expr_stmt><expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">curlcode<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">CURLE_AGAIN<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><operator pos:line="31" pos:column="14">-<pos:position pos:line="31" pos:column="15"/></operator><literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></return>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">SSL_ERROR_SYSCALL<pos:position pos:line="32" pos:column="27"/></name></expr>:<pos:position pos:line="32" pos:column="28"/></case>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">failf<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">conn<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">data<pos:position pos:line="33" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">"SSL_write() returned SYSCALL, errno = %d"<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>,
            <argument><expr><name pos:line="34" pos:column="13">SOCKERRNO<pos:position pos:line="34" pos:column="22"/></name></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="35" pos:column="7">*<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">curlcode<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">CURLE_SEND_ERROR<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><operator pos:line="36" pos:column="14">-<pos:position pos:line="36" pos:column="15"/></operator><literal type="number" pos:line="36" pos:column="15">1<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">SSL_ERROR_SSL<pos:position pos:line="37" pos:column="23"/></name></expr>:<pos:position pos:line="37" pos:column="24"/></case>
      <comment type="block" pos:line="38" pos:column="7">/*  A failure in the SSL library occurred, usually a protocol error.
          The OpenSSL error queue contains more information on the error. */</comment>
      <expr_stmt><expr><name pos:line="40" pos:column="7">sslerror<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">ERR_get_error<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">()<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
      <if pos:line="41" pos:column="7">if<condition pos:line="41" pos:column="9">(<expr><call><name pos:line="41" pos:column="10">ERR_GET_LIB<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">sslerror<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call> <operator pos:line="41" pos:column="32">==<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="35">ERR_LIB_SSL<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">&amp;&amp;<pos:position pos:line="41" pos:column="57"/></operator>
         <call><name pos:line="42" pos:column="10">ERR_GET_REASON<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">sslerror<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call> <operator pos:line="42" pos:column="35">==<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">SSL_R_BIO_NOT_SET<pos:position pos:line="42" pos:column="55"/></name> <operator pos:line="42" pos:column="56">&amp;&amp;<pos:position pos:line="42" pos:column="66"/></operator>
         <name><name pos:line="43" pos:column="10">conn<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">ssl<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><name pos:line="43" pos:column="20">sockindex<pos:position pos:line="43" pos:column="29"/></name></expr>]<pos:position pos:line="43" pos:column="30"/></index></name><operator pos:line="43" pos:column="30">.<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">state<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">==<pos:position pos:line="43" pos:column="39"/></operator> <name pos:line="43" pos:column="40">ssl_connection_complete<pos:position pos:line="43" pos:column="63"/></name> <operator pos:line="43" pos:column="64">&amp;&amp;<pos:position pos:line="43" pos:column="74"/></operator>
         <name><name pos:line="44" pos:column="10">conn<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">proxy_ssl<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><name pos:line="44" pos:column="26">sockindex<pos:position pos:line="44" pos:column="35"/></name></expr>]<pos:position pos:line="44" pos:column="36"/></index></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">state<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">==<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="46">ssl_connection_complete<pos:position pos:line="44" pos:column="69"/></name></expr>)<pos:position pos:line="44" pos:column="70"/></condition><then pos:line="44" pos:column="70"> <block pos:line="44" pos:column="71">{
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">char<pos:position pos:line="45" pos:column="13"/></name></type> <name><name pos:line="45" pos:column="14">ver<pos:position pos:line="45" pos:column="17"/></name><index pos:line="45" pos:column="17">[<expr><literal type="number" pos:line="45" pos:column="18">120<pos:position pos:line="45" pos:column="21"/></literal></expr>]<pos:position pos:line="45" pos:column="22"/></index></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">Curl_ossl_version<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">ver<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="32">120<pos:position pos:line="46" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">failf<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name><name pos:line="47" pos:column="15">conn<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">data<pos:position pos:line="47" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="27">"Error: %s does not support double SSL tunneling."<pos:position pos:line="47" pos:column="77"/></literal></expr></argument>,
              <argument><expr><name pos:line="48" pos:column="15">ver<pos:position pos:line="48" pos:column="18"/></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then>
      <else pos:line="50" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="9">failf<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name><name pos:line="51" pos:column="15">conn<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">data<pos:position pos:line="51" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"SSL_write() error: %s"<pos:position pos:line="51" pos:column="50"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="52" pos:column="15">ossl_strerror<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">sslerror<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">error_buffer<pos:position pos:line="52" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="53">sizeof<argument_list pos:line="52" pos:column="59">(<argument><expr><name pos:line="52" pos:column="60">error_buffer<pos:position pos:line="52" pos:column="72"/></name></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt></block></else></if>
      <expr_stmt><expr><operator pos:line="53" pos:column="7">*<pos:position pos:line="53" pos:column="8"/></operator><name pos:line="53" pos:column="8">curlcode<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">CURLE_SEND_ERROR<pos:position pos:line="53" pos:column="35"/></name></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><operator pos:line="54" pos:column="14">-<pos:position pos:line="54" pos:column="15"/></operator><literal type="number" pos:line="54" pos:column="15">1<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></switch>
    <comment type="block" pos:line="56" pos:column="5">/* a true error */</comment>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">failf<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name><name pos:line="57" pos:column="11">conn<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">data<pos:position pos:line="57" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="23">OSSL_PACKAGE<pos:position pos:line="57" pos:column="35"/></name> <literal type="string" pos:line="57" pos:column="36">" SSL_write: %s, errno %d"<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="58" pos:column="11">SSL_ERROR_to_str<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">err<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">SOCKERRNO<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><name pos:line="59" pos:column="6">curlcode<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">CURLE_SEND_ERROR<pos:position pos:line="59" pos:column="33"/></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="62" pos:column="3">*<pos:position pos:line="62" pos:column="4"/></operator><name pos:line="62" pos:column="4">curlcode<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">CURLE_OK<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
  <return pos:line="63" pos:column="3">return <expr><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">ssize_t<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">rc<pos:position pos:line="63" pos:column="21"/></name></expr>;<pos:position pos:line="63" pos:column="22"/></return> <comment type="block" pos:line="63" pos:column="23">/* number of bytes */</comment>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

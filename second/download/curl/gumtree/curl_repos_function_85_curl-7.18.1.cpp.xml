<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_85_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLM<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">multi_handle<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">still_running<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curl_httppost<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">formpost<pos:position pos:line="8" pos:column="33"/></name><init pos:line="8" pos:column="33">=<expr><name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_httppost<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">lastptr<pos:position pos:line="9" pos:column="32"/></name><init pos:line="9" pos:column="32">=<expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">curl_slist<pos:position pos:line="10" pos:column="20"/></name></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">headerlist<pos:position pos:line="10" pos:column="32"/></name><init pos:line="10" pos:column="32">=<expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><specifier pos:line="11" pos:column="10">const<pos:position pos:line="11" pos:column="15"/></specifier> <name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">buf<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[]<pos:position pos:line="11" pos:column="26"/></index></name> <init pos:line="11" pos:column="27">= <expr><literal type="string" pos:line="11" pos:column="29">"Expect:"<pos:position pos:line="11" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Fill in the file upload field. This makes libcurl load data from  
     the given file name when curl_easy_perform() is called. */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">curl_formadd<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="17">formpost<pos:position pos:line="15" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">lastptr<pos:position pos:line="16" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="17" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"sendfile"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="18" pos:column="16">CURLFORM_FILE<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"postit2.c"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>,
               <argument><expr><name pos:line="19" pos:column="16">CURLFORM_END<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Fill in the filename field */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">curl_formadd<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="17">formpost<pos:position pos:line="22" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="23" pos:column="16">&amp;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="17">lastptr<pos:position pos:line="23" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="24" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"filename"<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="25" pos:column="16">CURLFORM_COPYCONTENTS<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"postit2.c"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>,
               <argument><expr><name pos:line="26" pos:column="16">CURLFORM_END<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Fill in the submit field too, even if this is rarely needed */</comment>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">curl_formadd<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><operator pos:line="29" pos:column="16">&amp;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="17">formpost<pos:position pos:line="29" pos:column="25"/></name></expr></argument>,
               <argument><expr><operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="17">lastptr<pos:position pos:line="30" pos:column="24"/></name></expr></argument>,
               <argument><expr><name pos:line="31" pos:column="16">CURLFORM_COPYNAME<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"submit"<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>,
               <argument><expr><name pos:line="32" pos:column="16">CURLFORM_COPYCONTENTS<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"send"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>,
               <argument><expr><name pos:line="33" pos:column="16">CURLFORM_END<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">curl<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">curl_easy_init<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="36" pos:column="3">multi_handle<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">curl_multi_init<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">()<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* initalize custom header list (stating that Expect: 100-continue is not
     wanted */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">headerlist<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">curl_slist_append<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">headerlist<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">buf<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name pos:line="41" pos:column="6">curl<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">&amp;&amp;<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="14">multi_handle<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <block pos:line="41" pos:column="28">{

    <comment type="block" pos:line="43" pos:column="5">/* what URL that receives this POST */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">curl_easy_setopt<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">curl<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">CURLOPT_URL<pos:position pos:line="44" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="45" pos:column="22">"http://www.fillinyoururl.com/upload.cgi"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">curl_easy_setopt<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">curl<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="45">1<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">curl_easy_setopt<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">curl<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">CURLOPT_HTTPHEADER<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">headerlist<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">curl_easy_setopt<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">curl<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="28">CURLOPT_HTTPPOST<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">formpost<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">curl_multi_add_handle<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">multi_handle<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="41">curl<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>

    <while pos:line="53" pos:column="5">while<condition pos:line="53" pos:column="10">(<expr><name pos:line="53" pos:column="11">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">==<pos:position pos:line="53" pos:column="38"/></operator>
          <call><name pos:line="54" pos:column="11">curl_multi_perform<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name pos:line="54" pos:column="30">multi_handle<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="44">&amp;<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="45">still_running<pos:position pos:line="54" pos:column="58"/></name></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="60"/></condition><block type="pseudo"><empty_stmt pos:line="54" pos:column="60">;<pos:position pos:line="54" pos:column="61"/></empty_stmt></block></while>

    <while pos:line="56" pos:column="5">while<condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">still_running<pos:position pos:line="56" pos:column="24"/></name></expr>)<pos:position pos:line="56" pos:column="25"/></condition> <block pos:line="56" pos:column="26">{
      <decl_stmt><decl><type><name><name pos:line="57" pos:column="7">struct<pos:position pos:line="57" pos:column="13"/></name> <name pos:line="57" pos:column="14">timeval<pos:position pos:line="57" pos:column="21"/></name></name></type> <name pos:line="57" pos:column="22">timeout<pos:position pos:line="57" pos:column="29"/></name></decl>;<pos:position pos:line="57" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">int<pos:position pos:line="58" pos:column="10"/></name></type> <name pos:line="58" pos:column="11">rc<pos:position pos:line="58" pos:column="13"/></name></decl>;<pos:position pos:line="58" pos:column="14"/></decl_stmt> <comment type="block" pos:line="58" pos:column="15">/* select() return code */</comment>

      <decl_stmt><decl><type><name pos:line="60" pos:column="7">fd_set<pos:position pos:line="60" pos:column="13"/></name></type> <name pos:line="60" pos:column="14">fdread<pos:position pos:line="60" pos:column="20"/></name></decl>;<pos:position pos:line="60" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">fd_set<pos:position pos:line="61" pos:column="13"/></name></type> <name pos:line="61" pos:column="14">fdwrite<pos:position pos:line="61" pos:column="21"/></name></decl>;<pos:position pos:line="61" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="62" pos:column="7">fd_set<pos:position pos:line="62" pos:column="13"/></name></type> <name pos:line="62" pos:column="14">fdexcep<pos:position pos:line="62" pos:column="21"/></name></decl>;<pos:position pos:line="62" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">int<pos:position pos:line="63" pos:column="10"/></name></type> <name pos:line="63" pos:column="11">maxfd<pos:position pos:line="63" pos:column="16"/></name></decl>;<pos:position pos:line="63" pos:column="17"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="65" pos:column="7">FD_ZERO<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><operator pos:line="65" pos:column="15">&amp;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="16">fdread<pos:position pos:line="65" pos:column="22"/></name></expr></argument>)<pos:position pos:line="65" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">FD_ZERO<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><operator pos:line="66" pos:column="15">&amp;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="16">fdwrite<pos:position pos:line="66" pos:column="23"/></name></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">FD_ZERO<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><operator pos:line="67" pos:column="15">&amp;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="16">fdexcep<pos:position pos:line="67" pos:column="23"/></name></expr></argument>)<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="69" pos:column="7">/* set a suitable timeout to play around with */</comment>
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">timeout<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">.<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">tv_sec<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <literal type="number" pos:line="70" pos:column="24">1<pos:position pos:line="70" pos:column="25"/></literal></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">timeout<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">.<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">tv_usec<pos:position pos:line="71" pos:column="22"/></name></name> <operator pos:line="71" pos:column="23">=<pos:position pos:line="71" pos:column="24"/></operator> <literal type="number" pos:line="71" pos:column="25">0<pos:position pos:line="71" pos:column="26"/></literal></expr>;<pos:position pos:line="71" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="73" pos:column="7">/* get file descriptors from the transfers */</comment>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">curl_multi_fdset<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">multi_handle<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="38">&amp;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="39">fdread<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="47">&amp;<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="48">fdwrite<pos:position pos:line="74" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="57">&amp;<pos:position pos:line="74" pos:column="62"/></operator><name pos:line="74" pos:column="58">fdexcep<pos:position pos:line="74" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="67">&amp;<pos:position pos:line="74" pos:column="72"/></operator><name pos:line="74" pos:column="68">maxfd<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="75"/></expr_stmt>

      <comment type="block" pos:line="76" pos:column="7">/* In a real-world program you OF COURSE check the return code of the
         function calls, *and* you make sure that maxfd is bigger than -1
         so that the call to select() below makes sense! */</comment>

      <expr_stmt><expr><name pos:line="80" pos:column="7">rc<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">=<pos:position pos:line="80" pos:column="11"/></operator> <call><name pos:line="80" pos:column="12">select<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">maxfd<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">+<pos:position pos:line="80" pos:column="25"/></operator><literal type="number" pos:line="80" pos:column="25">1<pos:position pos:line="80" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="28">&amp;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="29">fdread<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="37">&amp;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="38">fdwrite<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="47">&amp;<pos:position pos:line="80" pos:column="52"/></operator><name pos:line="80" pos:column="48">fdexcep<pos:position pos:line="80" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="57">&amp;<pos:position pos:line="80" pos:column="62"/></operator><name pos:line="80" pos:column="58">timeout<pos:position pos:line="80" pos:column="65"/></name></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="67"/></expr_stmt>

      <switch pos:line="82" pos:column="7">switch<condition pos:line="82" pos:column="13">(<expr><name pos:line="82" pos:column="14">rc<pos:position pos:line="82" pos:column="16"/></name></expr>)<pos:position pos:line="82" pos:column="17"/></condition> <block pos:line="82" pos:column="18">{
      <case pos:line="83" pos:column="7">case <expr><operator pos:line="83" pos:column="12">-<pos:position pos:line="83" pos:column="13"/></operator><literal type="number" pos:line="83" pos:column="13">1<pos:position pos:line="83" pos:column="14"/></literal></expr>:<pos:position pos:line="83" pos:column="15"/></case>
        <comment type="block" pos:line="84" pos:column="9">/* select error */</comment>
        <break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break>
      <case pos:line="86" pos:column="7">case <expr><literal type="number" pos:line="86" pos:column="12">0<pos:position pos:line="86" pos:column="13"/></literal></expr>:<pos:position pos:line="86" pos:column="14"/></case>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">printf<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><literal type="string" pos:line="87" pos:column="16">"timeout!\n"<pos:position pos:line="87" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="30"/></expr_stmt>
      <default pos:line="88" pos:column="7">default:<pos:position pos:line="88" pos:column="15"/></default>
        <comment type="block" pos:line="89" pos:column="9">/* timeout or readable/writable sockets */</comment>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">printf<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><literal type="string" pos:line="90" pos:column="16">"perform!\n"<pos:position pos:line="90" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
        <while pos:line="91" pos:column="9">while<condition pos:line="91" pos:column="14">(<expr><name pos:line="91" pos:column="15">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">==<pos:position pos:line="91" pos:column="42"/></operator>
              <call><name pos:line="92" pos:column="15">curl_multi_perform<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">multi_handle<pos:position pos:line="92" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="48">&amp;<pos:position pos:line="92" pos:column="53"/></operator><name pos:line="92" pos:column="49">still_running<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="64"/></condition><block type="pseudo"><empty_stmt pos:line="92" pos:column="64">;<pos:position pos:line="92" pos:column="65"/></empty_stmt></block></while>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">printf<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">(<argument><expr><literal type="string" pos:line="93" pos:column="16">"running: %d!\n"<pos:position pos:line="93" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="34">still_running<pos:position pos:line="93" pos:column="47"/></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="49"/></expr_stmt>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>
      }<pos:position pos:line="95" pos:column="8"/></block></switch>
    }<pos:position pos:line="96" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="98" pos:column="5">curl_multi_cleanup<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">multi_handle<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="100" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">curl_easy_cleanup<pos:position pos:line="101" pos:column="22"/></name><argument_list pos:line="101" pos:column="22">(<argument><expr><name pos:line="101" pos:column="23">curl<pos:position pos:line="101" pos:column="27"/></name></expr></argument>)<pos:position pos:line="101" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="103" pos:column="5">/* then cleanup the formpost chain */</comment>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">curl_formfree<pos:position pos:line="104" pos:column="18"/></name><argument_list pos:line="104" pos:column="18">(<argument><expr><name pos:line="104" pos:column="19">formpost<pos:position pos:line="104" pos:column="27"/></name></expr></argument>)<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* free slist */</comment>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">curl_slist_free_all<pos:position pos:line="107" pos:column="24"/></name> <argument_list pos:line="107" pos:column="25">(<argument><expr><name pos:line="107" pos:column="26">headerlist<pos:position pos:line="107" pos:column="36"/></name></expr></argument>)<pos:position pos:line="107" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>
  <return pos:line="109" pos:column="3">return <expr><literal type="number" pos:line="109" pos:column="10">0<pos:position pos:line="109" pos:column="11"/></literal></expr>;<pos:position pos:line="109" pos:column="12"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

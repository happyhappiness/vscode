<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1930_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">ftp_sendquote<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">connectdata<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">conn<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">struct<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">curl_slist<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">quote<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_slist<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">item<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">nread<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ftpcode<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">ftp_conn<pos:position pos:line="8" pos:column="18"/></name></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">ftpc<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">proto<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">.<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="40">ftpc<pos:position pos:line="8" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">pingpong<pos:position pos:line="9" pos:column="18"/></name></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">pp<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name><name pos:line="9" pos:column="26">ftpc<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">pp<pos:position pos:line="9" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">item<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">quote<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <while pos:line="12" pos:column="3">while<condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">item<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition> <block pos:line="12" pos:column="15">{
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name><name pos:line="13" pos:column="8">item<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">data<pos:position pos:line="13" pos:column="18"/></name></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">char<pos:position pos:line="14" pos:column="11"/></name> <modifier pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></modifier></type><name pos:line="14" pos:column="13">cmd<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><name><name pos:line="14" pos:column="19">item<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">data<pos:position pos:line="14" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">bool<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">acceptfail<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><name pos:line="15" pos:column="25">FALSE<pos:position pos:line="15" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>

      <comment type="block" pos:line="17" pos:column="7">/* if a command starts with an asterisk, which a legal FTP command never
         can, the command will be allowed to fail without it causing any
         aborts or cancels etc. It will cause libcurl to act as if the command
         is successful, whatever the server reponds. */</comment>

      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><name><name pos:line="22" pos:column="10">cmd<pos:position pos:line="22" pos:column="13"/></name><index pos:line="22" pos:column="13">[<expr><literal type="number" pos:line="22" pos:column="14">0<pos:position pos:line="22" pos:column="15"/></literal></expr>]<pos:position pos:line="22" pos:column="16"/></index></name> <operator pos:line="22" pos:column="17">==<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'*'<pos:position pos:line="22" pos:column="23"/></literal></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block pos:line="22" pos:column="25">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">cmd<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">++<pos:position pos:line="23" pos:column="14"/></operator></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">acceptfail<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">TRUE<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="27" pos:column="7">PPSENDF<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">&amp;<pos:position pos:line="27" pos:column="20"/></operator><name><name pos:line="27" pos:column="16">conn<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">proto<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">ftpc<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">pp<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="37">"%s"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">cmd<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="29" pos:column="7">pp<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">response<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">Curl_tvnow<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt> <comment type="block" pos:line="29" pos:column="36">/* timeout relative now */</comment>

      <expr_stmt><expr><name pos:line="31" pos:column="7">result<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">Curl_GetFTPResponse<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">nread<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">conn<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="50">&amp;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="51">ftpcode<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">result<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17">
        <block type="pseudo"><return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">result<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></return></block></then></if>

      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">!<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">acceptfail<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">&amp;&amp;<pos:position pos:line="35" pos:column="32"/></operator> <operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">ftpcode<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">&gt;=<pos:position pos:line="35" pos:column="39"/></operator> <literal type="number" pos:line="35" pos:column="37">400<pos:position pos:line="35" pos:column="40"/></literal><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">failf<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name><name pos:line="36" pos:column="15">conn<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">data<pos:position pos:line="36" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"QUOT string not accepted: %s"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="59">cmd<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">CURLE_QUOTE_ERROR<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></return>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">item<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <name><name pos:line="41" pos:column="12">item<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">next<pos:position pos:line="41" pos:column="22"/></name></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></while>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">CURLE_OK<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_40_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name><name pos:line="3" pos:column="9">handles<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">HANDLECOUNT<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi_handle<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">still_running<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt> <comment type="block" pos:line="6" pos:column="22">/* keep number of running handles */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLMsg<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">msg<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt> <comment type="block" pos:line="9" pos:column="17">/* for picking up messages with the transfer status */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">msgs_left<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt> <comment type="block" pos:line="10" pos:column="18">/* how many messages are left */</comment>

  <comment type="block" pos:line="12" pos:column="3">/* Allocate one CURL handle per transfer */</comment>
  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><expr><name pos:line="13" pos:column="8">i<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></init> <condition><expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">&lt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">HANDLECOUNT<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></condition> <incr><expr><name pos:line="13" pos:column="28">i<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">++<pos:position pos:line="13" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="32"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="7">handles<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name></expr>]<pos:position pos:line="14" pos:column="17"/></index></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">curl_easy_init<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></for>

  <comment type="block" pos:line="16" pos:column="3">/* set the options (I left out a few, you'll get the point anyway) */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">curl_easy_setopt<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name><name pos:line="17" pos:column="20">handles<pos:position pos:line="17" pos:column="27"/></name><index pos:line="17" pos:column="27">[<expr><name pos:line="17" pos:column="28">HTTP_HANDLE<pos:position pos:line="17" pos:column="39"/></name></expr>]<pos:position pos:line="17" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">CURLOPT_URL<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="55">"http://website.com"<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">curl_easy_setopt<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name><name pos:line="19" pos:column="20">handles<pos:position pos:line="19" pos:column="27"/></name><index pos:line="19" pos:column="27">[<expr><name pos:line="19" pos:column="28">FTP_HANDLE<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">CURLOPT_URL<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="54">"ftp://ftpsite.com"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">curl_easy_setopt<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name><name pos:line="20" pos:column="20">handles<pos:position pos:line="20" pos:column="27"/></name><index pos:line="20" pos:column="27">[<expr><name pos:line="20" pos:column="28">FTP_HANDLE<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">CURLOPT_UPLOAD<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="57">1<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* init a multi stack */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">multi_handle<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">curl_multi_init<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">()<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* add the individual transfers */</comment>
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><expr><name pos:line="26" pos:column="8">i<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator><literal type="number" pos:line="26" pos:column="10">0<pos:position pos:line="26" pos:column="11"/></literal></expr>;<pos:position pos:line="26" pos:column="12"/></init> <condition><expr><name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">&lt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">HANDLECOUNT<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></condition> <incr><expr><name pos:line="26" pos:column="28">i<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">++<pos:position pos:line="26" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="32"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="7">curl_multi_add_handle<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">multi_handle<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">handles<pos:position pos:line="27" pos:column="50"/></name><index pos:line="27" pos:column="50">[<expr><name pos:line="27" pos:column="51">i<pos:position pos:line="27" pos:column="52"/></name></expr>]<pos:position pos:line="27" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt></block></for>

  <comment type="block" pos:line="29" pos:column="3">/* we start some action by calling perform right away */</comment>
  <while pos:line="30" pos:column="3">while<condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">==<pos:position pos:line="30" pos:column="36"/></operator>
        <call><name pos:line="31" pos:column="9">curl_multi_perform<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">multi_handle<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="43">still_running<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="58"/></condition><block type="pseudo"><empty_stmt pos:line="31" pos:column="58">;<pos:position pos:line="31" pos:column="59"/></empty_stmt></block></while>

  <while pos:line="33" pos:column="3">while<condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">still_running<pos:position pos:line="33" pos:column="22"/></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition> <block pos:line="33" pos:column="24">{
    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">struct<pos:position pos:line="34" pos:column="11"/></name> <name pos:line="34" pos:column="12">timeval<pos:position pos:line="34" pos:column="19"/></name></name></type> <name pos:line="34" pos:column="20">timeout<pos:position pos:line="34" pos:column="27"/></name></decl>;<pos:position pos:line="34" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">int<pos:position pos:line="35" pos:column="8"/></name></type> <name pos:line="35" pos:column="9">rc<pos:position pos:line="35" pos:column="11"/></name></decl>;<pos:position pos:line="35" pos:column="12"/></decl_stmt> <comment type="block" pos:line="35" pos:column="13">/* select() return code */</comment>

    <decl_stmt><decl><type><name pos:line="37" pos:column="5">fd_set<pos:position pos:line="37" pos:column="11"/></name></type> <name pos:line="37" pos:column="12">fdread<pos:position pos:line="37" pos:column="18"/></name></decl>;<pos:position pos:line="37" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">fd_set<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">fdwrite<pos:position pos:line="38" pos:column="19"/></name></decl>;<pos:position pos:line="38" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">fd_set<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">fdexcep<pos:position pos:line="39" pos:column="19"/></name></decl>;<pos:position pos:line="39" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">int<pos:position pos:line="40" pos:column="8"/></name></type> <name pos:line="40" pos:column="9">maxfd<pos:position pos:line="40" pos:column="14"/></name></decl>;<pos:position pos:line="40" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">FD_ZERO<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><operator pos:line="42" pos:column="13">&amp;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="14">fdread<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">FD_ZERO<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><operator pos:line="43" pos:column="13">&amp;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="14">fdwrite<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">FD_ZERO<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><operator pos:line="44" pos:column="13">&amp;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="14">fdexcep<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* set a suitable timeout to play around with */</comment>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">timeout<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">tv_sec<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">1<pos:position pos:line="47" pos:column="23"/></literal></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">timeout<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">.<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">tv_usec<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* get file descriptors from the transfers */</comment>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">curl_multi_fdset<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">multi_handle<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="36">&amp;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="37">fdread<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="46">fdwrite<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="55">&amp;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="56">fdexcep<pos:position pos:line="51" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="65">&amp;<pos:position pos:line="51" pos:column="70"/></operator><name pos:line="51" pos:column="66">maxfd<pos:position pos:line="51" pos:column="71"/></name></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/* In a real-world program you OF COURSE check the return code of the
       function calls, *and* you make sure that maxfd is bigger than -1 so
       that the call to select() below makes sense! */</comment>

    <expr_stmt><expr><name pos:line="57" pos:column="5">rc<pos:position pos:line="57" pos:column="7"/></name> <operator pos:line="57" pos:column="8">=<pos:position pos:line="57" pos:column="9"/></operator> <call><name pos:line="57" pos:column="10">select<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">maxfd<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">+<pos:position pos:line="57" pos:column="23"/></operator><literal type="number" pos:line="57" pos:column="23">1<pos:position pos:line="57" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="26">&amp;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="27">fdread<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="35">&amp;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="36">fdwrite<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="45">&amp;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="46">fdexcep<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="55">&amp;<pos:position pos:line="57" pos:column="60"/></operator><name pos:line="57" pos:column="56">timeout<pos:position pos:line="57" pos:column="63"/></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="65"/></expr_stmt>

    <switch pos:line="59" pos:column="5">switch<condition pos:line="59" pos:column="11">(<expr><name pos:line="59" pos:column="12">rc<pos:position pos:line="59" pos:column="14"/></name></expr>)<pos:position pos:line="59" pos:column="15"/></condition> <block pos:line="59" pos:column="16">{
    <case pos:line="60" pos:column="5">case <expr><operator pos:line="60" pos:column="10">-<pos:position pos:line="60" pos:column="11"/></operator><literal type="number" pos:line="60" pos:column="11">1<pos:position pos:line="60" pos:column="12"/></literal></expr>:<pos:position pos:line="60" pos:column="13"/></case>
      <comment type="block" pos:line="61" pos:column="7">/* select error */</comment>
      <break pos:line="62" pos:column="7">break;<pos:position pos:line="62" pos:column="13"/></break>
    <case pos:line="63" pos:column="5">case <expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal></expr>:<pos:position pos:line="63" pos:column="12"/></case>
      <comment type="block" pos:line="64" pos:column="7">/* timeout, do something else */</comment>
      <break pos:line="65" pos:column="7">break;<pos:position pos:line="65" pos:column="13"/></break>
    <default pos:line="66" pos:column="5">default:<pos:position pos:line="66" pos:column="13"/></default>
      <comment type="block" pos:line="67" pos:column="7">/* one or more of curl's file descriptors say there's data to read
         or write */</comment>
      <while pos:line="69" pos:column="7">while<condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="69" pos:column="37"/></name> <operator pos:line="69" pos:column="38">==<pos:position pos:line="69" pos:column="40"/></operator>
            <call><name pos:line="70" pos:column="13">curl_multi_perform<pos:position pos:line="70" pos:column="31"/></name><argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">multi_handle<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="46">&amp;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="47">still_running<pos:position pos:line="70" pos:column="60"/></name></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="62"/></condition><block type="pseudo"><empty_stmt pos:line="70" pos:column="62">;<pos:position pos:line="70" pos:column="63"/></empty_stmt></block></while>
      <break pos:line="71" pos:column="7">break;<pos:position pos:line="71" pos:column="13"/></break>
    }<pos:position pos:line="72" pos:column="6"/></block></switch>
  }<pos:position pos:line="73" pos:column="4"/></block></while>

  <comment type="block" pos:line="75" pos:column="3">/* See how the transfers went */</comment>
  <while pos:line="76" pos:column="3">while <condition pos:line="76" pos:column="9">(<expr><operator pos:line="76" pos:column="10">(<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="11">msg<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <call><name pos:line="76" pos:column="17">curl_multi_info_read<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">multi_handle<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="52">&amp;<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="53">msgs_left<pos:position pos:line="76" pos:column="62"/></name></expr></argument>)<pos:position pos:line="76" pos:column="63"/></argument_list></call><operator pos:line="76" pos:column="63">)<pos:position pos:line="76" pos:column="64"/></operator></expr>)<pos:position pos:line="76" pos:column="65"/></condition> <block pos:line="76" pos:column="66">{
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name><name pos:line="77" pos:column="9">msg<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">msg<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">==<pos:position pos:line="77" pos:column="20"/></operator> <name pos:line="77" pos:column="21">CURLMSG_DONE<pos:position pos:line="77" pos:column="33"/></name></expr>)<pos:position pos:line="77" pos:column="34"/></condition><then pos:line="77" pos:column="34"> <block pos:line="77" pos:column="35">{

       <decl_stmt><decl><type><name pos:line="79" pos:column="8">int<pos:position pos:line="79" pos:column="11"/></name></type> <name pos:line="79" pos:column="12">idx<pos:position pos:line="79" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="79" pos:column="17">found<pos:position pos:line="79" pos:column="22"/></name> <init pos:line="79" pos:column="23">= <expr><literal type="number" pos:line="79" pos:column="25">0<pos:position pos:line="79" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>

       <comment type="block" pos:line="81" pos:column="8">/* Find out which handle this message is about */</comment>
       <for pos:line="82" pos:column="8">for <control pos:line="82" pos:column="12">(<init><expr><name pos:line="82" pos:column="13">idx<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator><literal type="number" pos:line="82" pos:column="17">0<pos:position pos:line="82" pos:column="18"/></literal></expr>;<pos:position pos:line="82" pos:column="19"/></init> <condition><expr><operator pos:line="82" pos:column="20">(<pos:position pos:line="82" pos:column="21"/></operator><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">found<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">&amp;&amp;<pos:position pos:line="82" pos:column="38"/></operator> <operator pos:line="82" pos:column="31">(<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="32">idx<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">&lt;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="36">HANDLECOUNT<pos:position pos:line="82" pos:column="47"/></name><operator pos:line="82" pos:column="47">)<pos:position pos:line="82" pos:column="48"/></operator><operator pos:line="82" pos:column="48">)<pos:position pos:line="82" pos:column="49"/></operator></expr>;<pos:position pos:line="82" pos:column="50"/></condition> <incr><expr><name pos:line="82" pos:column="51">idx<pos:position pos:line="82" pos:column="54"/></name><operator pos:line="82" pos:column="54">++<pos:position pos:line="82" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="57"/></control> <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="58">found<pos:position pos:line="82" pos:column="63"/></name> <operator pos:line="82" pos:column="64">=<pos:position pos:line="82" pos:column="65"/></operator> <operator pos:line="82" pos:column="66">(<pos:position pos:line="82" pos:column="67"/></operator><name><name pos:line="82" pos:column="67">msg<pos:position pos:line="82" pos:column="70"/></name><operator pos:line="82" pos:column="70">-&gt;<pos:position pos:line="82" pos:column="75"/></operator><name pos:line="82" pos:column="72">easy_handle<pos:position pos:line="82" pos:column="83"/></name></name> <operator pos:line="82" pos:column="84">==<pos:position pos:line="82" pos:column="86"/></operator> <name><name pos:line="82" pos:column="87">handles<pos:position pos:line="82" pos:column="94"/></name><index pos:line="82" pos:column="94">[<expr><name pos:line="82" pos:column="95">idx<pos:position pos:line="82" pos:column="98"/></name></expr>]<pos:position pos:line="82" pos:column="99"/></index></name><operator pos:line="82" pos:column="99">)<pos:position pos:line="82" pos:column="100"/></operator></expr>;<pos:position pos:line="82" pos:column="101"/></expr_stmt></block></for>

       <switch pos:line="84" pos:column="8">switch <condition pos:line="84" pos:column="15">(<expr><name pos:line="84" pos:column="16">idx<pos:position pos:line="84" pos:column="19"/></name></expr>)<pos:position pos:line="84" pos:column="20"/></condition> <block pos:line="84" pos:column="21">{
         <case pos:line="85" pos:column="10">case <expr><name pos:line="85" pos:column="15">HTTP_HANDLE<pos:position pos:line="85" pos:column="26"/></name></expr>:<pos:position pos:line="85" pos:column="27"/></case>
           <expr_stmt><expr><call><name pos:line="86" pos:column="12">printf<pos:position pos:line="86" pos:column="18"/></name><argument_list pos:line="86" pos:column="18">(<argument><expr><literal type="string" pos:line="86" pos:column="19">"HTTP transfer completed with status %d\n"<pos:position pos:line="86" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="63">msg<pos:position pos:line="86" pos:column="66"/></name><operator pos:line="86" pos:column="66">-&gt;<pos:position pos:line="86" pos:column="71"/></operator><name pos:line="86" pos:column="68">data<pos:position pos:line="86" pos:column="72"/></name><operator pos:line="86" pos:column="72">.<pos:position pos:line="86" pos:column="73"/></operator><name pos:line="86" pos:column="73">result<pos:position pos:line="86" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="81"/></expr_stmt>
           <break pos:line="87" pos:column="12">break;<pos:position pos:line="87" pos:column="18"/></break>
         <case pos:line="88" pos:column="10">case <expr><name pos:line="88" pos:column="15">FTP_HANDLE<pos:position pos:line="88" pos:column="25"/></name></expr>:<pos:position pos:line="88" pos:column="26"/></case>
           <expr_stmt><expr><call><name pos:line="89" pos:column="12">printf<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><literal type="string" pos:line="89" pos:column="19">"FTP transfer completed with status %d\n"<pos:position pos:line="89" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="62">msg<pos:position pos:line="89" pos:column="65"/></name><operator pos:line="89" pos:column="65">-&gt;<pos:position pos:line="89" pos:column="70"/></operator><name pos:line="89" pos:column="67">data<pos:position pos:line="89" pos:column="71"/></name><operator pos:line="89" pos:column="71">.<pos:position pos:line="89" pos:column="72"/></operator><name pos:line="89" pos:column="72">result<pos:position pos:line="89" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="80"/></expr_stmt>
           <break pos:line="90" pos:column="12">break;<pos:position pos:line="90" pos:column="18"/></break>
       }<pos:position pos:line="91" pos:column="9"/></block></switch>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
  }<pos:position pos:line="93" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">curl_multi_cleanup<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><name pos:line="95" pos:column="22">multi_handle<pos:position pos:line="95" pos:column="34"/></name></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="97" pos:column="3">/* Free the CURL handles */</comment>
  <for pos:line="98" pos:column="3">for <control pos:line="98" pos:column="7">(<init><expr><name pos:line="98" pos:column="8">i<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator><literal type="number" pos:line="98" pos:column="10">0<pos:position pos:line="98" pos:column="11"/></literal></expr>;<pos:position pos:line="98" pos:column="12"/></init> <condition><expr><name pos:line="98" pos:column="13">i<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">&lt;<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="15">HANDLECOUNT<pos:position pos:line="98" pos:column="26"/></name></expr>;<pos:position pos:line="98" pos:column="27"/></condition> <incr><expr><name pos:line="98" pos:column="28">i<pos:position pos:line="98" pos:column="29"/></name><operator pos:line="98" pos:column="29">++<pos:position pos:line="98" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="98" pos:column="32"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="7">curl_easy_cleanup<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name><name pos:line="99" pos:column="25">handles<pos:position pos:line="99" pos:column="32"/></name><index pos:line="99" pos:column="32">[<expr><name pos:line="99" pos:column="33">i<pos:position pos:line="99" pos:column="34"/></name></expr>]<pos:position pos:line="99" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="37"/></expr_stmt></block></for>

  <return pos:line="101" pos:column="3">return <expr><literal type="number" pos:line="101" pos:column="10">0<pos:position pos:line="101" pos:column="11"/></literal></expr>;<pos:position pos:line="101" pos:column="12"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1606_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">waitproxyconnect_getsock<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">curl_socket_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">sock<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">int<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">numsocks<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">numsocks<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">GETSOCK_BLANK<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">sock<pos:position pos:line="8" pos:column="7"/></name><index pos:line="8" pos:column="7">[<expr><literal type="number" pos:line="8" pos:column="8">0<pos:position pos:line="8" pos:column="9"/></literal></expr>]<pos:position pos:line="8" pos:column="10"/></index></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><name pos:line="8" pos:column="13">conn<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">sock<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><name pos:line="8" pos:column="24">FIRSTSOCKET<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* when we've sent a CONNECT to a proxy, we should rather wait for the
     socket to become readable to be able to get the response headers */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">conn<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">connect_state<pos:position pos:line="12" pos:column="25"/></name></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><call><name pos:line="13" pos:column="12">GETSOCK_READSOCK<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>

  <return pos:line="15" pos:column="3">return <expr><call><name pos:line="15" pos:column="10">GETSOCK_WRITESOCK<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

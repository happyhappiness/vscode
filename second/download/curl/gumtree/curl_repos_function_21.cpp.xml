<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_21.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">getparameter<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">flag<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="37">/* f or -long-flag */</comment>
			<parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">nextarg<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="40">/* NULL if unset */</comment>
			<parameter><decl><type><name pos:line="3" pos:column="25">bool<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">usedarg<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <comment type="block" pos:line="3" pos:column="40">/* set to TRUE if the arg has been
					  used */</comment>
			<parameter><decl><type><name><name pos:line="5" pos:column="25">struct<pos:position pos:line="5" pos:column="31"/></name> <name pos:line="5" pos:column="32">Configurable<pos:position pos:line="5" pos:column="44"/></name></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">config<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="53"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">letter<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">parse<pos:position pos:line="8" pos:column="14"/></name><init pos:line="8" pos:column="14">=<expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">res<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">j<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">time_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">now<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">hit<pos:position pos:line="12" pos:column="10"/></name><init pos:line="12" pos:column="10">=<expr><operator pos:line="12" pos:column="11">-<pos:position pos:line="12" pos:column="12"/></operator><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* single-letter,
     long-name,
     boolean whether it takes an additional argument
     */</comment>
  <decl_stmt><decl><type><name><name pos:line="18" pos:column="3">struct<pos:position pos:line="18" pos:column="9"/></name> <name pos:line="18" pos:column="10">LongShort<pos:position pos:line="18" pos:column="19"/></name></name></type> <name><name pos:line="18" pos:column="20">aliases<pos:position pos:line="18" pos:column="27"/></name><index pos:line="18" pos:column="27">[]<pos:position pos:line="18" pos:column="29"/></index></name><init pos:line="18" pos:column="29">= <expr><block pos:line="18" pos:column="31">{
    <expr><block pos:line="19" pos:column="5">{<expr><literal type="string" pos:line="19" pos:column="6">"9"<pos:position pos:line="19" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="19" pos:column="11">"crlf"<pos:position pos:line="19" pos:column="17"/></literal></expr>,        <expr><name pos:line="19" pos:column="26">FALSE<pos:position pos:line="19" pos:column="31"/></name></expr>}<pos:position pos:line="19" pos:column="32"/></block></expr>,
    <expr><block pos:line="20" pos:column="5">{<expr><literal type="string" pos:line="20" pos:column="6">"8"<pos:position pos:line="20" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="20" pos:column="11">"stderr"<pos:position pos:line="20" pos:column="19"/></literal></expr>,      <expr><name pos:line="20" pos:column="26">TRUE<pos:position pos:line="20" pos:column="30"/></name></expr>}<pos:position pos:line="20" pos:column="31"/></block></expr>,

    <expr><block pos:line="22" pos:column="5">{<expr><literal type="string" pos:line="22" pos:column="6">"2"<pos:position pos:line="22" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="11">"sslv2"<pos:position pos:line="22" pos:column="18"/></literal></expr>,       <expr><name pos:line="22" pos:column="26">FALSE<pos:position pos:line="22" pos:column="31"/></name></expr>}<pos:position pos:line="22" pos:column="32"/></block></expr>,
    <expr><block pos:line="23" pos:column="5">{<expr><literal type="string" pos:line="23" pos:column="6">"3"<pos:position pos:line="23" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="23" pos:column="11">"sslv3"<pos:position pos:line="23" pos:column="18"/></literal></expr>,       <expr><name pos:line="23" pos:column="26">FALSE<pos:position pos:line="23" pos:column="31"/></name></expr>}<pos:position pos:line="23" pos:column="32"/></block></expr>,
    <expr><block pos:line="24" pos:column="5">{<expr><literal type="string" pos:line="24" pos:column="6">"a"<pos:position pos:line="24" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="24" pos:column="11">"append"<pos:position pos:line="24" pos:column="19"/></literal></expr>,      <expr><name pos:line="24" pos:column="26">FALSE<pos:position pos:line="24" pos:column="31"/></name></expr>}<pos:position pos:line="24" pos:column="32"/></block></expr>,
    <expr><block pos:line="25" pos:column="5">{<expr><literal type="string" pos:line="25" pos:column="6">"A"<pos:position pos:line="25" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="25" pos:column="11">"user-agent"<pos:position pos:line="25" pos:column="23"/></literal></expr>,  <expr><name pos:line="25" pos:column="26">TRUE<pos:position pos:line="25" pos:column="30"/></name></expr>}<pos:position pos:line="25" pos:column="31"/></block></expr>,
    <expr><block pos:line="26" pos:column="5">{<expr><literal type="string" pos:line="26" pos:column="6">"b"<pos:position pos:line="26" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="26" pos:column="11">"cookie"<pos:position pos:line="26" pos:column="19"/></literal></expr>,      <expr><name pos:line="26" pos:column="26">TRUE<pos:position pos:line="26" pos:column="30"/></name></expr>}<pos:position pos:line="26" pos:column="31"/></block></expr>,
    <expr><block pos:line="27" pos:column="5">{<expr><literal type="string" pos:line="27" pos:column="6">"B"<pos:position pos:line="27" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="27" pos:column="11">"ftp-ascii"<pos:position pos:line="27" pos:column="22"/></literal></expr>,   <expr><name pos:line="27" pos:column="26">FALSE<pos:position pos:line="27" pos:column="31"/></name></expr>}<pos:position pos:line="27" pos:column="32"/></block></expr>, <comment type="block" pos:line="27" pos:column="34">/* this long format is OBSOLETEE now! */</comment>
    <expr><block pos:line="28" pos:column="5">{<expr><literal type="string" pos:line="28" pos:column="6">"B"<pos:position pos:line="28" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="28" pos:column="11">"use-ascii"<pos:position pos:line="28" pos:column="22"/></literal></expr>,   <expr><name pos:line="28" pos:column="26">FALSE<pos:position pos:line="28" pos:column="31"/></name></expr>}<pos:position pos:line="28" pos:column="32"/></block></expr>,
    <expr><block pos:line="29" pos:column="5">{<expr><literal type="string" pos:line="29" pos:column="6">"c"<pos:position pos:line="29" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="29" pos:column="11">"continue"<pos:position pos:line="29" pos:column="21"/></literal></expr>,    <expr><name pos:line="29" pos:column="26">FALSE<pos:position pos:line="29" pos:column="31"/></name></expr>}<pos:position pos:line="29" pos:column="32"/></block></expr>,
    <expr><block pos:line="30" pos:column="5">{<expr><literal type="string" pos:line="30" pos:column="6">"C"<pos:position pos:line="30" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="30" pos:column="11">"continue-at"<pos:position pos:line="30" pos:column="24"/></literal></expr>, <expr><name pos:line="30" pos:column="26">TRUE<pos:position pos:line="30" pos:column="30"/></name></expr>}<pos:position pos:line="30" pos:column="31"/></block></expr>,
    <expr><block pos:line="31" pos:column="5">{<expr><literal type="string" pos:line="31" pos:column="6">"d"<pos:position pos:line="31" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="31" pos:column="11">"data"<pos:position pos:line="31" pos:column="17"/></literal></expr>,        <expr><name pos:line="31" pos:column="26">TRUE<pos:position pos:line="31" pos:column="30"/></name></expr>}<pos:position pos:line="31" pos:column="31"/></block></expr>,
    <expr><block pos:line="32" pos:column="5">{<expr><literal type="string" pos:line="32" pos:column="6">"D"<pos:position pos:line="32" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="32" pos:column="11">"dump-header"<pos:position pos:line="32" pos:column="24"/></literal></expr>, <expr><name pos:line="32" pos:column="26">TRUE<pos:position pos:line="32" pos:column="30"/></name></expr>}<pos:position pos:line="32" pos:column="31"/></block></expr>,
    <expr><block pos:line="33" pos:column="5">{<expr><literal type="string" pos:line="33" pos:column="6">"e"<pos:position pos:line="33" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="33" pos:column="11">"referer"<pos:position pos:line="33" pos:column="20"/></literal></expr>,     <expr><name pos:line="33" pos:column="26">TRUE<pos:position pos:line="33" pos:column="30"/></name></expr>}<pos:position pos:line="33" pos:column="31"/></block></expr>,
    <expr><block pos:line="34" pos:column="5">{<expr><literal type="string" pos:line="34" pos:column="6">"E"<pos:position pos:line="34" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="34" pos:column="11">"cert"<pos:position pos:line="34" pos:column="17"/></literal></expr>,        <expr><name pos:line="34" pos:column="26">TRUE<pos:position pos:line="34" pos:column="30"/></name></expr>}<pos:position pos:line="34" pos:column="31"/></block></expr>,
    <expr><block pos:line="35" pos:column="5">{<expr><literal type="string" pos:line="35" pos:column="6">"f"<pos:position pos:line="35" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="35" pos:column="11">"fail"<pos:position pos:line="35" pos:column="17"/></literal></expr>,        <expr><name pos:line="35" pos:column="26">FALSE<pos:position pos:line="35" pos:column="31"/></name></expr>}<pos:position pos:line="35" pos:column="32"/></block></expr>,
    <expr><block pos:line="36" pos:column="5">{<expr><literal type="string" pos:line="36" pos:column="6">"F"<pos:position pos:line="36" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="36" pos:column="11">"form"<pos:position pos:line="36" pos:column="17"/></literal></expr>,        <expr><name pos:line="36" pos:column="26">TRUE<pos:position pos:line="36" pos:column="30"/></name></expr>}<pos:position pos:line="36" pos:column="31"/></block></expr>,

    <expr><block pos:line="38" pos:column="5">{<expr><literal type="string" pos:line="38" pos:column="6">"h"<pos:position pos:line="38" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="38" pos:column="11">"help"<pos:position pos:line="38" pos:column="17"/></literal></expr>,        <expr><name pos:line="38" pos:column="26">FALSE<pos:position pos:line="38" pos:column="31"/></name></expr>}<pos:position pos:line="38" pos:column="32"/></block></expr>,
    <expr><block pos:line="39" pos:column="5">{<expr><literal type="string" pos:line="39" pos:column="6">"H"<pos:position pos:line="39" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="39" pos:column="11">"header"<pos:position pos:line="39" pos:column="19"/></literal></expr>,      <expr><name pos:line="39" pos:column="26">TRUE<pos:position pos:line="39" pos:column="30"/></name></expr>}<pos:position pos:line="39" pos:column="31"/></block></expr>,
    <expr><block pos:line="40" pos:column="5">{<expr><literal type="string" pos:line="40" pos:column="6">"i"<pos:position pos:line="40" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="40" pos:column="11">"include"<pos:position pos:line="40" pos:column="20"/></literal></expr>,     <expr><name pos:line="40" pos:column="26">FALSE<pos:position pos:line="40" pos:column="31"/></name></expr>}<pos:position pos:line="40" pos:column="32"/></block></expr>,
    <expr><block pos:line="41" pos:column="5">{<expr><literal type="string" pos:line="41" pos:column="6">"I"<pos:position pos:line="41" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="41" pos:column="11">"head"<pos:position pos:line="41" pos:column="17"/></literal></expr>,        <expr><name pos:line="41" pos:column="26">FALSE<pos:position pos:line="41" pos:column="31"/></name></expr>}<pos:position pos:line="41" pos:column="32"/></block></expr>,
    <expr><block pos:line="42" pos:column="5">{<expr><literal type="string" pos:line="42" pos:column="6">"K"<pos:position pos:line="42" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="42" pos:column="11">"config"<pos:position pos:line="42" pos:column="19"/></literal></expr>,      <expr><name pos:line="42" pos:column="26">TRUE<pos:position pos:line="42" pos:column="30"/></name></expr>}<pos:position pos:line="42" pos:column="31"/></block></expr>,
    <expr><block pos:line="43" pos:column="5">{<expr><literal type="string" pos:line="43" pos:column="6">"l"<pos:position pos:line="43" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="43" pos:column="11">"list-only"<pos:position pos:line="43" pos:column="22"/></literal></expr>,   <expr><name pos:line="43" pos:column="26">FALSE<pos:position pos:line="43" pos:column="31"/></name></expr>}<pos:position pos:line="43" pos:column="32"/></block></expr>,
    <expr><block pos:line="44" pos:column="5">{<expr><literal type="string" pos:line="44" pos:column="6">"L"<pos:position pos:line="44" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="44" pos:column="11">"location"<pos:position pos:line="44" pos:column="21"/></literal></expr>,    <expr><name pos:line="44" pos:column="26">FALSE<pos:position pos:line="44" pos:column="31"/></name></expr>}<pos:position pos:line="44" pos:column="32"/></block></expr>,
    <expr><block pos:line="45" pos:column="5">{<expr><literal type="string" pos:line="45" pos:column="6">"m"<pos:position pos:line="45" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="45" pos:column="11">"max-time"<pos:position pos:line="45" pos:column="21"/></literal></expr>,    <expr><name pos:line="45" pos:column="26">TRUE<pos:position pos:line="45" pos:column="30"/></name></expr>}<pos:position pos:line="45" pos:column="31"/></block></expr>,
    <expr><block pos:line="46" pos:column="5">{<expr><literal type="string" pos:line="46" pos:column="6">"M"<pos:position pos:line="46" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="46" pos:column="11">"manual"<pos:position pos:line="46" pos:column="19"/></literal></expr>,      <expr><name pos:line="46" pos:column="26">FALSE<pos:position pos:line="46" pos:column="31"/></name></expr>}<pos:position pos:line="46" pos:column="32"/></block></expr>,
    <expr><block pos:line="47" pos:column="5">{<expr><literal type="string" pos:line="47" pos:column="6">"n"<pos:position pos:line="47" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="47" pos:column="11">"netrc"<pos:position pos:line="47" pos:column="18"/></literal></expr>,       <expr><name pos:line="47" pos:column="26">FALSE<pos:position pos:line="47" pos:column="31"/></name></expr>}<pos:position pos:line="47" pos:column="32"/></block></expr>,
    <expr><block pos:line="48" pos:column="5">{<expr><literal type="string" pos:line="48" pos:column="6">"N"<pos:position pos:line="48" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="48" pos:column="11">"no-buffer"<pos:position pos:line="48" pos:column="22"/></literal></expr>,   <expr><name pos:line="48" pos:column="26">FALSE<pos:position pos:line="48" pos:column="31"/></name></expr>}<pos:position pos:line="48" pos:column="32"/></block></expr>,
    <expr><block pos:line="49" pos:column="5">{<expr><literal type="string" pos:line="49" pos:column="6">"o"<pos:position pos:line="49" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="49" pos:column="11">"output"<pos:position pos:line="49" pos:column="19"/></literal></expr>,      <expr><name pos:line="49" pos:column="26">TRUE<pos:position pos:line="49" pos:column="30"/></name></expr>}<pos:position pos:line="49" pos:column="31"/></block></expr>,
    <expr><block pos:line="50" pos:column="5">{<expr><literal type="string" pos:line="50" pos:column="6">"O"<pos:position pos:line="50" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="50" pos:column="11">"remote-name"<pos:position pos:line="50" pos:column="24"/></literal></expr>, <expr><name pos:line="50" pos:column="26">FALSE<pos:position pos:line="50" pos:column="31"/></name></expr>}<pos:position pos:line="50" pos:column="32"/></block></expr>,
<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="51" pos:column="5">0<pos:position pos:line="51" pos:column="6"/></literal></expr></cpp:if>
    {"p", "port",        TRUE},
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
    <expr><block pos:line="54" pos:column="5">{<expr><literal type="string" pos:line="54" pos:column="6">"P"<pos:position pos:line="54" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="54" pos:column="11">"ftpport"<pos:position pos:line="54" pos:column="20"/></literal></expr>,     <expr><name pos:line="54" pos:column="26">TRUE<pos:position pos:line="54" pos:column="30"/></name></expr>}<pos:position pos:line="54" pos:column="31"/></block></expr>,
    <expr><block pos:line="55" pos:column="5">{<expr><literal type="string" pos:line="55" pos:column="6">"q"<pos:position pos:line="55" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="55" pos:column="11">"disable"<pos:position pos:line="55" pos:column="20"/></literal></expr>,     <expr><name pos:line="55" pos:column="26">FALSE<pos:position pos:line="55" pos:column="31"/></name></expr>}<pos:position pos:line="55" pos:column="32"/></block></expr>,
    <expr><block pos:line="56" pos:column="5">{<expr><literal type="string" pos:line="56" pos:column="6">"Q"<pos:position pos:line="56" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="56" pos:column="11">"quote"<pos:position pos:line="56" pos:column="18"/></literal></expr>,       <expr><name pos:line="56" pos:column="26">TRUE<pos:position pos:line="56" pos:column="30"/></name></expr>}<pos:position pos:line="56" pos:column="31"/></block></expr>,
    <expr><block pos:line="57" pos:column="5">{<expr><literal type="string" pos:line="57" pos:column="6">"r"<pos:position pos:line="57" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="57" pos:column="11">"range"<pos:position pos:line="57" pos:column="18"/></literal></expr>,       <expr><name pos:line="57" pos:column="26">TRUE<pos:position pos:line="57" pos:column="30"/></name></expr>}<pos:position pos:line="57" pos:column="31"/></block></expr>,
    <expr><block pos:line="58" pos:column="5">{<expr><literal type="string" pos:line="58" pos:column="6">"s"<pos:position pos:line="58" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="58" pos:column="11">"silent"<pos:position pos:line="58" pos:column="19"/></literal></expr>,      <expr><name pos:line="58" pos:column="26">FALSE<pos:position pos:line="58" pos:column="31"/></name></expr>}<pos:position pos:line="58" pos:column="32"/></block></expr>,
    <expr><block pos:line="59" pos:column="5">{<expr><literal type="string" pos:line="59" pos:column="6">"S"<pos:position pos:line="59" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="59" pos:column="11">"show-error"<pos:position pos:line="59" pos:column="23"/></literal></expr>,  <expr><name pos:line="59" pos:column="26">FALSE<pos:position pos:line="59" pos:column="31"/></name></expr>}<pos:position pos:line="59" pos:column="32"/></block></expr>,
    <expr><block pos:line="60" pos:column="5">{<expr><literal type="string" pos:line="60" pos:column="6">"t"<pos:position pos:line="60" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="60" pos:column="11">"upload"<pos:position pos:line="60" pos:column="19"/></literal></expr>,      <expr><name pos:line="60" pos:column="26">FALSE<pos:position pos:line="60" pos:column="31"/></name></expr>}<pos:position pos:line="60" pos:column="32"/></block></expr>,
    <expr><block pos:line="61" pos:column="5">{<expr><literal type="string" pos:line="61" pos:column="6">"T"<pos:position pos:line="61" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="61" pos:column="11">"upload-file"<pos:position pos:line="61" pos:column="24"/></literal></expr>, <expr><name pos:line="61" pos:column="26">TRUE<pos:position pos:line="61" pos:column="30"/></name></expr>}<pos:position pos:line="61" pos:column="31"/></block></expr>,
    <expr><block pos:line="62" pos:column="5">{<expr><literal type="string" pos:line="62" pos:column="6">"u"<pos:position pos:line="62" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="62" pos:column="11">"user"<pos:position pos:line="62" pos:column="17"/></literal></expr>,        <expr><name pos:line="62" pos:column="26">TRUE<pos:position pos:line="62" pos:column="30"/></name></expr>}<pos:position pos:line="62" pos:column="31"/></block></expr>,
    <expr><block pos:line="63" pos:column="5">{<expr><literal type="string" pos:line="63" pos:column="6">"U"<pos:position pos:line="63" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="63" pos:column="11">"proxy-user"<pos:position pos:line="63" pos:column="23"/></literal></expr>,  <expr><name pos:line="63" pos:column="26">TRUE<pos:position pos:line="63" pos:column="30"/></name></expr>}<pos:position pos:line="63" pos:column="31"/></block></expr>,
    <expr><block pos:line="64" pos:column="5">{<expr><literal type="string" pos:line="64" pos:column="6">"v"<pos:position pos:line="64" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="64" pos:column="11">"verbose"<pos:position pos:line="64" pos:column="20"/></literal></expr>,     <expr><name pos:line="64" pos:column="26">FALSE<pos:position pos:line="64" pos:column="31"/></name></expr>}<pos:position pos:line="64" pos:column="32"/></block></expr>,
    <expr><block pos:line="65" pos:column="5">{<expr><literal type="string" pos:line="65" pos:column="6">"V"<pos:position pos:line="65" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="65" pos:column="11">"version"<pos:position pos:line="65" pos:column="20"/></literal></expr>,     <expr><name pos:line="65" pos:column="26">FALSE<pos:position pos:line="65" pos:column="31"/></name></expr>}<pos:position pos:line="65" pos:column="32"/></block></expr>,
    <expr><block pos:line="66" pos:column="5">{<expr><literal type="string" pos:line="66" pos:column="6">"w"<pos:position pos:line="66" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="66" pos:column="11">"write-out"<pos:position pos:line="66" pos:column="22"/></literal></expr>,   <expr><name pos:line="66" pos:column="26">TRUE<pos:position pos:line="66" pos:column="30"/></name></expr>}<pos:position pos:line="66" pos:column="31"/></block></expr>,
    <expr><block pos:line="67" pos:column="5">{<expr><literal type="string" pos:line="67" pos:column="6">"x"<pos:position pos:line="67" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="67" pos:column="11">"proxy"<pos:position pos:line="67" pos:column="18"/></literal></expr>,       <expr><name pos:line="67" pos:column="26">TRUE<pos:position pos:line="67" pos:column="30"/></name></expr>}<pos:position pos:line="67" pos:column="31"/></block></expr>,
    <expr><block pos:line="68" pos:column="5">{<expr><literal type="string" pos:line="68" pos:column="6">"X"<pos:position pos:line="68" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="68" pos:column="11">"request"<pos:position pos:line="68" pos:column="20"/></literal></expr>,     <expr><name pos:line="68" pos:column="26">TRUE<pos:position pos:line="68" pos:column="30"/></name></expr>}<pos:position pos:line="68" pos:column="31"/></block></expr>,
    <expr><block pos:line="69" pos:column="5">{<expr><literal type="string" pos:line="69" pos:column="6">"X"<pos:position pos:line="69" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="69" pos:column="11">"http-request"<pos:position pos:line="69" pos:column="25"/></literal></expr>, <expr><name pos:line="69" pos:column="27">TRUE<pos:position pos:line="69" pos:column="31"/></name></expr>}<pos:position pos:line="69" pos:column="32"/></block></expr>, <comment type="block" pos:line="69" pos:column="34">/* OBSOLETE VERSION */</comment>
    <expr><block pos:line="70" pos:column="5">{<expr><literal type="string" pos:line="70" pos:column="6">"Y"<pos:position pos:line="70" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="70" pos:column="11">"speed-limit"<pos:position pos:line="70" pos:column="24"/></literal></expr>,  <expr><name pos:line="70" pos:column="27">TRUE<pos:position pos:line="70" pos:column="31"/></name></expr>}<pos:position pos:line="70" pos:column="32"/></block></expr>,
    <expr><block pos:line="71" pos:column="5">{<expr><literal type="string" pos:line="71" pos:column="6">"y"<pos:position pos:line="71" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="71" pos:column="11">"speed-time"<pos:position pos:line="71" pos:column="23"/></literal></expr>, <expr><name pos:line="71" pos:column="25">TRUE<pos:position pos:line="71" pos:column="29"/></name></expr>}<pos:position pos:line="71" pos:column="30"/></block></expr>,
    <expr><block pos:line="72" pos:column="5">{<expr><literal type="string" pos:line="72" pos:column="6">"z"<pos:position pos:line="72" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="72" pos:column="11">"time-cond"<pos:position pos:line="72" pos:column="22"/></literal></expr>,   <expr><name pos:line="72" pos:column="26">TRUE<pos:position pos:line="72" pos:column="30"/></name></expr>}<pos:position pos:line="72" pos:column="31"/></block></expr>,
    <expr><block pos:line="73" pos:column="5">{<expr><literal type="string" pos:line="73" pos:column="6">"#"<pos:position pos:line="73" pos:column="9"/></literal></expr>, <expr><literal type="string" pos:line="73" pos:column="11">"progress-bar"<pos:position pos:line="73" pos:column="25"/></literal></expr>,<expr><name pos:line="73" pos:column="26">FALSE<pos:position pos:line="73" pos:column="31"/></name></expr>}<pos:position pos:line="73" pos:column="32"/></block></expr>,
  }<pos:position pos:line="74" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="74" pos:column="5"/></decl_stmt>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><literal type="char" pos:line="76" pos:column="6">'-'<pos:position pos:line="76" pos:column="9"/></literal> <operator pos:line="76" pos:column="10">==<pos:position pos:line="76" pos:column="12"/></operator> <name><name pos:line="76" pos:column="13">flag<pos:position pos:line="76" pos:column="17"/></name><index pos:line="76" pos:column="17">[<expr><literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>]<pos:position pos:line="76" pos:column="20"/></index></name></expr>)<pos:position pos:line="76" pos:column="21"/></condition><then pos:line="76" pos:column="21"> <block pos:line="76" pos:column="22">{
    <comment type="block" pos:line="77" pos:column="5">/* try a long name */</comment>
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">int<pos:position pos:line="78" pos:column="8"/></name></type> <name pos:line="78" pos:column="9">fnam<pos:position pos:line="78" pos:column="13"/></name><init pos:line="78" pos:column="13">=<expr><call><name pos:line="78" pos:column="14">strlen<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><operator pos:line="78" pos:column="21">&amp;<pos:position pos:line="78" pos:column="26"/></operator><name><name pos:line="78" pos:column="22">flag<pos:position pos:line="78" pos:column="26"/></name><index pos:line="78" pos:column="26">[<expr><literal type="number" pos:line="78" pos:column="27">1<pos:position pos:line="78" pos:column="28"/></literal></expr>]<pos:position pos:line="78" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="78" pos:column="31"/></decl_stmt>
    <for pos:line="79" pos:column="5">for<control pos:line="79" pos:column="8">(<init><expr><name pos:line="79" pos:column="9">j<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">=<pos:position pos:line="79" pos:column="11"/></operator><literal type="number" pos:line="79" pos:column="11">0<pos:position pos:line="79" pos:column="12"/></literal></expr>;<pos:position pos:line="79" pos:column="13"/></init> <condition><expr><name pos:line="79" pos:column="14">j<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">&lt;<pos:position pos:line="79" pos:column="19"/></operator> <sizeof pos:line="79" pos:column="17">sizeof<argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">aliases<pos:position pos:line="79" pos:column="31"/></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></sizeof><operator pos:line="79" pos:column="32">/<pos:position pos:line="79" pos:column="33"/></operator><sizeof pos:line="79" pos:column="33">sizeof<argument_list pos:line="79" pos:column="39">(<argument><expr><name><name pos:line="79" pos:column="40">aliases<pos:position pos:line="79" pos:column="47"/></name><index pos:line="79" pos:column="47">[<expr><literal type="number" pos:line="79" pos:column="48">0<pos:position pos:line="79" pos:column="49"/></literal></expr>]<pos:position pos:line="79" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="79" pos:column="52"/></condition> <incr><expr><name pos:line="79" pos:column="53">j<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">++<pos:position pos:line="79" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="57"/></control> <block pos:line="79" pos:column="58">{
      <if pos:line="80" pos:column="7">if<condition pos:line="80" pos:column="9">(<expr><call><name pos:line="80" pos:column="10">strnequal<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name><name pos:line="80" pos:column="20">aliases<pos:position pos:line="80" pos:column="27"/></name><index pos:line="80" pos:column="27">[<expr><name pos:line="80" pos:column="28">j<pos:position pos:line="80" pos:column="29"/></name></expr>]<pos:position pos:line="80" pos:column="30"/></index></name><operator pos:line="80" pos:column="30">.<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="31">lname<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="38">&amp;<pos:position pos:line="80" pos:column="43"/></operator><name><name pos:line="80" pos:column="39">flag<pos:position pos:line="80" pos:column="43"/></name><index pos:line="80" pos:column="43">[<expr><literal type="number" pos:line="80" pos:column="44">1<pos:position pos:line="80" pos:column="45"/></literal></expr>]<pos:position pos:line="80" pos:column="46"/></index></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="48">fnam<pos:position pos:line="80" pos:column="52"/></name></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="54"/></condition><then pos:line="80" pos:column="54"> <block pos:line="80" pos:column="55">{
        <if pos:line="81" pos:column="9">if<condition pos:line="81" pos:column="11">(<expr><call><name pos:line="81" pos:column="12">strequal<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name><name pos:line="81" pos:column="21">aliases<pos:position pos:line="81" pos:column="28"/></name><index pos:line="81" pos:column="28">[<expr><name pos:line="81" pos:column="29">j<pos:position pos:line="81" pos:column="30"/></name></expr>]<pos:position pos:line="81" pos:column="31"/></index></name><operator pos:line="81" pos:column="31">.<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="32">lname<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator><name><name pos:line="81" pos:column="40">flag<pos:position pos:line="81" pos:column="44"/></name><index pos:line="81" pos:column="44">[<expr><literal type="number" pos:line="81" pos:column="45">1<pos:position pos:line="81" pos:column="46"/></literal></expr>]<pos:position pos:line="81" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="49"/></condition><then pos:line="81" pos:column="49"> <block pos:line="81" pos:column="50">{
          <expr_stmt><expr><name pos:line="82" pos:column="11">parse<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <name><name pos:line="82" pos:column="19">aliases<pos:position pos:line="82" pos:column="26"/></name><index pos:line="82" pos:column="26">[<expr><name pos:line="82" pos:column="27">j<pos:position pos:line="82" pos:column="28"/></name></expr>]<pos:position pos:line="82" pos:column="29"/></index></name><operator pos:line="82" pos:column="29">.<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="30">letter<pos:position pos:line="82" pos:column="36"/></name></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><name pos:line="83" pos:column="11">hit<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <name pos:line="83" pos:column="17">j<pos:position pos:line="83" pos:column="18"/></name></expr>;<pos:position pos:line="83" pos:column="19"/></expr_stmt>
          <break pos:line="84" pos:column="11">break;<pos:position pos:line="84" pos:column="17"/></break>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
	<if pos:line="86" pos:column="9">if<condition pos:line="86" pos:column="11">(<expr><name pos:line="86" pos:column="12">parse<pos:position pos:line="86" pos:column="17"/></name></expr>)<pos:position pos:line="86" pos:column="18"/></condition><then pos:line="86" pos:column="18"> <block pos:line="86" pos:column="19">{
	  <comment type="block" pos:line="87" pos:column="11">/* this is the second match, we can't continue! */</comment>
	  <expr_stmt><expr><call><name pos:line="88" pos:column="11">helpf<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><literal type="string" pos:line="88" pos:column="17">"option --%s is ambiguous\n"<pos:position pos:line="88" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="47">&amp;<pos:position pos:line="88" pos:column="52"/></operator><name><name pos:line="88" pos:column="48">flag<pos:position pos:line="88" pos:column="52"/></name><index pos:line="88" pos:column="52">[<expr><literal type="number" pos:line="88" pos:column="53">1<pos:position pos:line="88" pos:column="54"/></literal></expr>]<pos:position pos:line="88" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="57"/></expr_stmt>
	  <return pos:line="89" pos:column="11">return <expr><name pos:line="89" pos:column="18">CURLE_FAILED_INIT<pos:position pos:line="89" pos:column="35"/></name></expr>;<pos:position pos:line="89" pos:column="36"/></return>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="91" pos:column="9">parse<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <name><name pos:line="91" pos:column="17">aliases<pos:position pos:line="91" pos:column="24"/></name><index pos:line="91" pos:column="24">[<expr><name pos:line="91" pos:column="25">j<pos:position pos:line="91" pos:column="26"/></name></expr>]<pos:position pos:line="91" pos:column="27"/></index></name><operator pos:line="91" pos:column="27">.<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="28">letter<pos:position pos:line="91" pos:column="34"/></name></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="92" pos:column="9">hit<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <name pos:line="92" pos:column="15">j<pos:position pos:line="92" pos:column="16"/></name></expr>;<pos:position pos:line="92" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></then></if>
    }<pos:position pos:line="94" pos:column="6"/></block></for>
    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">(<expr><name pos:line="95" pos:column="8">hit<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">&lt;<pos:position pos:line="95" pos:column="16"/></operator> <literal type="number" pos:line="95" pos:column="14">0<pos:position pos:line="95" pos:column="15"/></literal></expr>)<pos:position pos:line="95" pos:column="16"/></condition><then pos:line="95" pos:column="16"> <block pos:line="95" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">helpf<pos:position pos:line="96" pos:column="12"/></name><argument_list pos:line="96" pos:column="12">(<argument><expr><literal type="string" pos:line="96" pos:column="13">"unknown option -%s.\n"<pos:position pos:line="96" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="38">flag<pos:position pos:line="96" pos:column="42"/></name></expr></argument>)<pos:position pos:line="96" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="44"/></expr_stmt>
      <return pos:line="97" pos:column="7">return <expr><name pos:line="97" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="97" pos:column="31"/></name></expr>;<pos:position pos:line="97" pos:column="32"/></return>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>    
  }<pos:position pos:line="99" pos:column="4"/></block></then>
  <else pos:line="100" pos:column="3">else <block pos:line="100" pos:column="8">{
    <expr_stmt><expr><name pos:line="101" pos:column="5">hit<pos:position pos:line="101" pos:column="8"/></name><operator pos:line="101" pos:column="8">=<pos:position pos:line="101" pos:column="9"/></operator><operator pos:line="101" pos:column="9">-<pos:position pos:line="101" pos:column="10"/></operator><literal type="number" pos:line="101" pos:column="10">1<pos:position pos:line="101" pos:column="11"/></literal></expr>;<pos:position pos:line="101" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="102" pos:column="5">parse<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">=<pos:position pos:line="102" pos:column="12"/></operator> <name pos:line="102" pos:column="13">flag<pos:position pos:line="102" pos:column="17"/></name></expr>;<pos:position pos:line="102" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></else></if>

  <do pos:line="105" pos:column="3">do <block pos:line="105" pos:column="6">{
    <comment type="block" pos:line="106" pos:column="5">/* we can loop here if we have multiple single-letters */</comment>

    <expr_stmt><expr><name pos:line="108" pos:column="5">letter<pos:position pos:line="108" pos:column="11"/></name> <operator pos:line="108" pos:column="12">=<pos:position pos:line="108" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="108" pos:column="14">parse<pos:position pos:line="108" pos:column="19"/></name></expr>?<pos:position pos:line="108" pos:column="20"/></condition><then><expr><operator pos:line="108" pos:column="20">*<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">parse<pos:position pos:line="108" pos:column="26"/></name></expr></then><else pos:line="108" pos:column="26">:<expr><literal type="char" pos:line="108" pos:column="27">'\0'<pos:position pos:line="108" pos:column="31"/></literal></expr></else></ternary></expr>;<pos:position pos:line="108" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="109" pos:column="5">*<pos:position pos:line="109" pos:column="6"/></operator><name pos:line="109" pos:column="6">usedarg<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <name pos:line="109" pos:column="16">FALSE<pos:position pos:line="109" pos:column="21"/></name></expr>;<pos:position pos:line="109" pos:column="22"/></expr_stmt> <comment type="block" pos:line="109" pos:column="23">/* default is that we don't use the arg */</comment>

<cpp:if pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">if<pos:position pos:line="111" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="111" pos:column="5">0<pos:position pos:line="111" pos:column="6"/></literal></expr></cpp:if>
    fprintf(stderr, "OPTION: %c %s\n", letter, nextarg?nextarg:"&lt;null&gt;");
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name pos:line="114" pos:column="8">hit<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">&lt;<pos:position pos:line="114" pos:column="16"/></operator> <literal type="number" pos:line="114" pos:column="14">0<pos:position pos:line="114" pos:column="15"/></literal></expr>)<pos:position pos:line="114" pos:column="16"/></condition><then pos:line="114" pos:column="16"> <block pos:line="114" pos:column="17">{
      <for pos:line="115" pos:column="7">for<control pos:line="115" pos:column="10">(<init><expr><name pos:line="115" pos:column="11">j<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">=<pos:position pos:line="115" pos:column="13"/></operator><literal type="number" pos:line="115" pos:column="13">0<pos:position pos:line="115" pos:column="14"/></literal></expr>;<pos:position pos:line="115" pos:column="15"/></init> <condition><expr><name pos:line="115" pos:column="16">j<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">&lt;<pos:position pos:line="115" pos:column="21"/></operator> <sizeof pos:line="115" pos:column="19">sizeof<argument_list pos:line="115" pos:column="25">(<argument><expr><name pos:line="115" pos:column="26">aliases<pos:position pos:line="115" pos:column="33"/></name></expr></argument>)<pos:position pos:line="115" pos:column="34"/></argument_list></sizeof><operator pos:line="115" pos:column="34">/<pos:position pos:line="115" pos:column="35"/></operator><sizeof pos:line="115" pos:column="35">sizeof<argument_list pos:line="115" pos:column="41">(<argument><expr><name><name pos:line="115" pos:column="42">aliases<pos:position pos:line="115" pos:column="49"/></name><index pos:line="115" pos:column="49">[<expr><literal type="number" pos:line="115" pos:column="50">0<pos:position pos:line="115" pos:column="51"/></literal></expr>]<pos:position pos:line="115" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="115" pos:column="54"/></condition> <incr><expr><name pos:line="115" pos:column="55">j<pos:position pos:line="115" pos:column="56"/></name><operator pos:line="115" pos:column="56">++<pos:position pos:line="115" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="115" pos:column="59"/></control> <block pos:line="115" pos:column="60">{
	<if pos:line="116" pos:column="9">if<condition pos:line="116" pos:column="11">(<expr><name pos:line="116" pos:column="12">letter<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">==<pos:position pos:line="116" pos:column="21"/></operator> <operator pos:line="116" pos:column="22">*<pos:position pos:line="116" pos:column="23"/></operator><name><name pos:line="116" pos:column="23">aliases<pos:position pos:line="116" pos:column="30"/></name><index pos:line="116" pos:column="30">[<expr><name pos:line="116" pos:column="31">j<pos:position pos:line="116" pos:column="32"/></name></expr>]<pos:position pos:line="116" pos:column="33"/></index></name><operator pos:line="116" pos:column="33">.<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">letter<pos:position pos:line="116" pos:column="40"/></name></expr>)<pos:position pos:line="116" pos:column="41"/></condition><then pos:line="116" pos:column="41"> <block pos:line="116" pos:column="42">{
	  <expr_stmt><expr><name pos:line="117" pos:column="11">hit<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <name pos:line="117" pos:column="17">j<pos:position pos:line="117" pos:column="18"/></name></expr>;<pos:position pos:line="117" pos:column="19"/></expr_stmt>
	  <break pos:line="118" pos:column="11">break;<pos:position pos:line="118" pos:column="17"/></break>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>
      }<pos:position pos:line="120" pos:column="8"/></block></for>
      <if pos:line="121" pos:column="7">if<condition pos:line="121" pos:column="9">(<expr><name pos:line="121" pos:column="10">hit<pos:position pos:line="121" pos:column="13"/></name> <operator pos:line="121" pos:column="14">&lt;<pos:position pos:line="121" pos:column="18"/></operator> <literal type="number" pos:line="121" pos:column="16">0<pos:position pos:line="121" pos:column="17"/></literal></expr>)<pos:position pos:line="121" pos:column="18"/></condition><then pos:line="121" pos:column="18"> <block pos:line="121" pos:column="19">{
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">helpf<pos:position pos:line="122" pos:column="14"/></name><argument_list pos:line="122" pos:column="14">(<argument><expr><literal type="string" pos:line="122" pos:column="15">"unknown option -%c.\n"<pos:position pos:line="122" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="40">letter<pos:position pos:line="122" pos:column="46"/></name></expr></argument>)<pos:position pos:line="122" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="48"/></expr_stmt>
	<return pos:line="123" pos:column="9">return <expr><name pos:line="123" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="123" pos:column="33"/></name></expr>;<pos:position pos:line="123" pos:column="34"/></return>      
      }<pos:position pos:line="124" pos:column="8"/></block></then></if>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>
    <if pos:line="126" pos:column="5">if<condition pos:line="126" pos:column="7">(<expr><name pos:line="126" pos:column="8">hit<pos:position pos:line="126" pos:column="11"/></name> <operator pos:line="126" pos:column="12">&lt;<pos:position pos:line="126" pos:column="16"/></operator> <literal type="number" pos:line="126" pos:column="14">0<pos:position pos:line="126" pos:column="15"/></literal></expr>)<pos:position pos:line="126" pos:column="16"/></condition><then pos:line="126" pos:column="16"> <block pos:line="126" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="127" pos:column="7">helpf<pos:position pos:line="127" pos:column="12"/></name><argument_list pos:line="127" pos:column="12">(<argument><expr><literal type="string" pos:line="127" pos:column="13">"unknown option -%c.\n"<pos:position pos:line="127" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="38">letter<pos:position pos:line="127" pos:column="44"/></name></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
      <return pos:line="128" pos:column="7">return <expr><name pos:line="128" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="128" pos:column="31"/></name></expr>;<pos:position pos:line="128" pos:column="32"/></return>
    }<pos:position pos:line="129" pos:column="6"/></block></then></if>    
    <if pos:line="130" pos:column="5">if<condition pos:line="130" pos:column="7">(<expr><operator pos:line="130" pos:column="8">!<pos:position pos:line="130" pos:column="9"/></operator><name pos:line="130" pos:column="9">nextarg<pos:position pos:line="130" pos:column="16"/></name> <operator pos:line="130" pos:column="17">&amp;&amp;<pos:position pos:line="130" pos:column="27"/></operator> <name><name pos:line="130" pos:column="20">aliases<pos:position pos:line="130" pos:column="27"/></name><index pos:line="130" pos:column="27">[<expr><name pos:line="130" pos:column="28">hit<pos:position pos:line="130" pos:column="31"/></name></expr>]<pos:position pos:line="130" pos:column="32"/></index></name><operator pos:line="130" pos:column="32">.<pos:position pos:line="130" pos:column="33"/></operator><name pos:line="130" pos:column="33">extraparam<pos:position pos:line="130" pos:column="43"/></name></expr>)<pos:position pos:line="130" pos:column="44"/></condition><then pos:line="130" pos:column="44"> <block pos:line="130" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="131" pos:column="7">helpf<pos:position pos:line="131" pos:column="12"/></name><argument_list pos:line="131" pos:column="12">(<argument><expr><literal type="string" pos:line="131" pos:column="13">"option -%s/--%s requires an extra argument!\n"<pos:position pos:line="131" pos:column="60"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="132" pos:column="13">aliases<pos:position pos:line="132" pos:column="20"/></name><index pos:line="132" pos:column="20">[<expr><name pos:line="132" pos:column="21">hit<pos:position pos:line="132" pos:column="24"/></name></expr>]<pos:position pos:line="132" pos:column="25"/></index></name><operator pos:line="132" pos:column="25">.<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="26">letter<pos:position pos:line="132" pos:column="32"/></name></expr></argument>,
	    <argument><expr><name><name pos:line="133" pos:column="13">aliases<pos:position pos:line="133" pos:column="20"/></name><index pos:line="133" pos:column="20">[<expr><name pos:line="133" pos:column="21">hit<pos:position pos:line="133" pos:column="24"/></name></expr>]<pos:position pos:line="133" pos:column="25"/></index></name><operator pos:line="133" pos:column="25">.<pos:position pos:line="133" pos:column="26"/></operator><name pos:line="133" pos:column="26">lname<pos:position pos:line="133" pos:column="31"/></name></expr></argument>)<pos:position pos:line="133" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="33"/></expr_stmt>
      <return pos:line="134" pos:column="7">return <expr><name pos:line="134" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="134" pos:column="31"/></name></expr>;<pos:position pos:line="134" pos:column="32"/></return>
    }<pos:position pos:line="135" pos:column="6"/></block></then>
    <elseif pos:line="136" pos:column="5">else <if pos:line="136" pos:column="10">if<condition pos:line="136" pos:column="12">(<expr><name pos:line="136" pos:column="13">nextarg<pos:position pos:line="136" pos:column="20"/></name> <operator pos:line="136" pos:column="21">&amp;&amp;<pos:position pos:line="136" pos:column="31"/></operator> <name><name pos:line="136" pos:column="24">aliases<pos:position pos:line="136" pos:column="31"/></name><index pos:line="136" pos:column="31">[<expr><name pos:line="136" pos:column="32">hit<pos:position pos:line="136" pos:column="35"/></name></expr>]<pos:position pos:line="136" pos:column="36"/></index></name><operator pos:line="136" pos:column="36">.<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="37">extraparam<pos:position pos:line="136" pos:column="47"/></name></expr>)<pos:position pos:line="136" pos:column="48"/></condition><then pos:line="136" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="137" pos:column="7">*<pos:position pos:line="137" pos:column="8"/></operator><name pos:line="137" pos:column="8">usedarg<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <name pos:line="137" pos:column="18">TRUE<pos:position pos:line="137" pos:column="22"/></name></expr>;<pos:position pos:line="137" pos:column="23"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="137" pos:column="24">/* mark it as used */</comment>

    <switch pos:line="139" pos:column="5">switch<condition pos:line="139" pos:column="11">(<expr><name pos:line="139" pos:column="12">letter<pos:position pos:line="139" pos:column="18"/></name></expr>)<pos:position pos:line="139" pos:column="19"/></condition> <block pos:line="139" pos:column="20">{
    <case pos:line="140" pos:column="5">case <expr><literal type="char" pos:line="140" pos:column="10">'z'<pos:position pos:line="140" pos:column="13"/></literal></expr>:<pos:position pos:line="140" pos:column="14"/></case> <comment type="block" pos:line="140" pos:column="15">/* time condition coming up */</comment>
      <switch pos:line="141" pos:column="7">switch<condition pos:line="141" pos:column="13">(<expr><operator pos:line="141" pos:column="14">*<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="15">nextarg<pos:position pos:line="141" pos:column="22"/></name></expr>)<pos:position pos:line="141" pos:column="23"/></condition> <block pos:line="141" pos:column="24">{
      <case pos:line="142" pos:column="7">case <expr><literal type="char" pos:line="142" pos:column="12">'+'<pos:position pos:line="142" pos:column="15"/></literal></expr>:<pos:position pos:line="142" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="143" pos:column="9">nextarg<pos:position pos:line="143" pos:column="16"/></name><operator pos:line="143" pos:column="16">++<pos:position pos:line="143" pos:column="18"/></operator></expr>;<pos:position pos:line="143" pos:column="19"/></expr_stmt>
      <default pos:line="144" pos:column="7">default:<pos:position pos:line="144" pos:column="15"/></default>
        <comment type="block" pos:line="145" pos:column="9">/* If-Modified-Since: (section 14.28 in RFC2068) */</comment>
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">config<pos:position pos:line="146" pos:column="15"/></name><operator pos:line="146" pos:column="15">-&gt;<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="17">timecond<pos:position pos:line="146" pos:column="25"/></name></name> <operator pos:line="146" pos:column="26">=<pos:position pos:line="146" pos:column="27"/></operator> <name pos:line="146" pos:column="28">TIMECOND_IFMODSINCE<pos:position pos:line="146" pos:column="47"/></name></expr>;<pos:position pos:line="146" pos:column="48"/></expr_stmt>
        <break pos:line="147" pos:column="9">break;<pos:position pos:line="147" pos:column="15"/></break>
      <case pos:line="148" pos:column="7">case <expr><literal type="char" pos:line="148" pos:column="12">'-'<pos:position pos:line="148" pos:column="15"/></literal></expr>:<pos:position pos:line="148" pos:column="16"/></case>
        <comment type="block" pos:line="149" pos:column="9">/* If-Unmodified-Since:  (section 14.24 in RFC2068) */</comment>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">config<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">-&gt;<pos:position pos:line="150" pos:column="20"/></operator><name pos:line="150" pos:column="17">timecond<pos:position pos:line="150" pos:column="25"/></name></name> <operator pos:line="150" pos:column="26">=<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="28">TIMECOND_IFUNMODSINCE<pos:position pos:line="150" pos:column="49"/></name></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="151" pos:column="9">nextarg<pos:position pos:line="151" pos:column="16"/></name><operator pos:line="151" pos:column="16">++<pos:position pos:line="151" pos:column="18"/></operator></expr>;<pos:position pos:line="151" pos:column="19"/></expr_stmt>
        <break pos:line="152" pos:column="9">break;<pos:position pos:line="152" pos:column="15"/></break>
      <case pos:line="153" pos:column="7">case <expr><literal type="char" pos:line="153" pos:column="12">'='<pos:position pos:line="153" pos:column="15"/></literal></expr>:<pos:position pos:line="153" pos:column="16"/></case>
        <comment type="block" pos:line="154" pos:column="9">/* Last-Modified:  (section 14.29 in RFC2068) */</comment>
        <expr_stmt><expr><name><name pos:line="155" pos:column="9">config<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">-&gt;<pos:position pos:line="155" pos:column="20"/></operator><name pos:line="155" pos:column="17">timecond<pos:position pos:line="155" pos:column="25"/></name></name> <operator pos:line="155" pos:column="26">=<pos:position pos:line="155" pos:column="27"/></operator> <name pos:line="155" pos:column="28">TIMECOND_LASTMOD<pos:position pos:line="155" pos:column="44"/></name></expr>;<pos:position pos:line="155" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="156" pos:column="9">nextarg<pos:position pos:line="156" pos:column="16"/></name><operator pos:line="156" pos:column="16">++<pos:position pos:line="156" pos:column="18"/></operator></expr>;<pos:position pos:line="156" pos:column="19"/></expr_stmt>
        <break pos:line="157" pos:column="9">break;<pos:position pos:line="157" pos:column="15"/></break>
      }<pos:position pos:line="158" pos:column="8"/></block></switch>
      <expr_stmt><expr><name pos:line="159" pos:column="7">now<pos:position pos:line="159" pos:column="10"/></name><operator pos:line="159" pos:column="10">=<pos:position pos:line="159" pos:column="11"/></operator><call><name pos:line="159" pos:column="11">time<pos:position pos:line="159" pos:column="15"/></name><argument_list pos:line="159" pos:column="15">(<argument><expr><name pos:line="159" pos:column="16">NULL<pos:position pos:line="159" pos:column="20"/></name></expr></argument>)<pos:position pos:line="159" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="160" pos:column="7">config<pos:position pos:line="160" pos:column="13"/></name><operator pos:line="160" pos:column="13">-&gt;<pos:position pos:line="160" pos:column="18"/></operator><name pos:line="160" pos:column="15">condtime<pos:position pos:line="160" pos:column="23"/></name></name><operator pos:line="160" pos:column="23">=<pos:position pos:line="160" pos:column="24"/></operator><call><name pos:line="160" pos:column="24">curl_getdate<pos:position pos:line="160" pos:column="36"/></name><argument_list pos:line="160" pos:column="36">(<argument><expr><name pos:line="160" pos:column="37">nextarg<pos:position pos:line="160" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="160" pos:column="46">&amp;<pos:position pos:line="160" pos:column="51"/></operator><name pos:line="160" pos:column="47">now<pos:position pos:line="160" pos:column="50"/></name></expr></argument>)<pos:position pos:line="160" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="52"/></expr_stmt>
      <if pos:line="161" pos:column="7">if<condition pos:line="161" pos:column="9">(<expr><operator pos:line="161" pos:column="10">-<pos:position pos:line="161" pos:column="11"/></operator><literal type="number" pos:line="161" pos:column="11">1<pos:position pos:line="161" pos:column="12"/></literal> <operator pos:line="161" pos:column="13">==<pos:position pos:line="161" pos:column="15"/></operator> <name><name pos:line="161" pos:column="16">config<pos:position pos:line="161" pos:column="22"/></name><operator pos:line="161" pos:column="22">-&gt;<pos:position pos:line="161" pos:column="27"/></operator><name pos:line="161" pos:column="24">condtime<pos:position pos:line="161" pos:column="32"/></name></name></expr>)<pos:position pos:line="161" pos:column="33"/></condition><then pos:line="161" pos:column="33"> <block pos:line="161" pos:column="34">{
        <comment type="block" pos:line="162" pos:column="9">/* now let's see if it is a file name to get the time from instead! */</comment>
        <decl_stmt><decl><type><name><name pos:line="163" pos:column="9">struct<pos:position pos:line="163" pos:column="15"/></name> <name pos:line="163" pos:column="16">stat<pos:position pos:line="163" pos:column="20"/></name></name></type> <name pos:line="163" pos:column="21">statbuf<pos:position pos:line="163" pos:column="28"/></name></decl>;<pos:position pos:line="163" pos:column="29"/></decl_stmt>
        <if pos:line="164" pos:column="9">if<condition pos:line="164" pos:column="11">(<expr><operator pos:line="164" pos:column="12">-<pos:position pos:line="164" pos:column="13"/></operator><literal type="number" pos:line="164" pos:column="13">1<pos:position pos:line="164" pos:column="14"/></literal> <operator pos:line="164" pos:column="15">==<pos:position pos:line="164" pos:column="17"/></operator> <call><name pos:line="164" pos:column="18">stat<pos:position pos:line="164" pos:column="22"/></name><argument_list pos:line="164" pos:column="22">(<argument><expr><name pos:line="164" pos:column="23">nextarg<pos:position pos:line="164" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="32">&amp;<pos:position pos:line="164" pos:column="37"/></operator><name pos:line="164" pos:column="33">statbuf<pos:position pos:line="164" pos:column="40"/></name></expr></argument>)<pos:position pos:line="164" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="42"/></condition><then pos:line="164" pos:column="42"> <block pos:line="164" pos:column="43">{
          <comment type="block" pos:line="165" pos:column="11">/* failed, remove time condition */</comment>
          <expr_stmt><expr><name><name pos:line="166" pos:column="11">config<pos:position pos:line="166" pos:column="17"/></name><operator pos:line="166" pos:column="17">-&gt;<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="19">timecond<pos:position pos:line="166" pos:column="27"/></name></name> <operator pos:line="166" pos:column="28">=<pos:position pos:line="166" pos:column="29"/></operator> <name pos:line="166" pos:column="30">TIMECOND_NONE<pos:position pos:line="166" pos:column="43"/></name></expr>;<pos:position pos:line="166" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="167" pos:column="10"/></block></then>
        <else pos:line="168" pos:column="9">else <block pos:line="168" pos:column="14">{
          <comment type="block" pos:line="169" pos:column="11">/* pull the time out from the file */</comment>
          <expr_stmt><expr><name><name pos:line="170" pos:column="11">config<pos:position pos:line="170" pos:column="17"/></name><operator pos:line="170" pos:column="17">-&gt;<pos:position pos:line="170" pos:column="22"/></operator><name pos:line="170" pos:column="19">condtime<pos:position pos:line="170" pos:column="27"/></name></name> <operator pos:line="170" pos:column="28">=<pos:position pos:line="170" pos:column="29"/></operator> <name><name pos:line="170" pos:column="30">statbuf<pos:position pos:line="170" pos:column="37"/></name><operator pos:line="170" pos:column="37">.<pos:position pos:line="170" pos:column="38"/></operator><name pos:line="170" pos:column="38">st_mtime<pos:position pos:line="170" pos:column="46"/></name></name></expr>;<pos:position pos:line="170" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="171" pos:column="10"/></block></else></if>
      }<pos:position pos:line="172" pos:column="8"/></block></then></if>
      <break pos:line="173" pos:column="7">break;<pos:position pos:line="173" pos:column="13"/></break>
    <case pos:line="174" pos:column="5">case <expr><literal type="char" pos:line="174" pos:column="10">'9'<pos:position pos:line="174" pos:column="13"/></literal></expr>:<pos:position pos:line="174" pos:column="14"/></case> <comment type="block" pos:line="174" pos:column="15">/* there is no short letter for this */</comment>
      <comment type="block" pos:line="175" pos:column="7">/* LF -&gt; CRLF conversinon? */</comment>
      <expr_stmt><expr><name><name pos:line="176" pos:column="7">config<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">crlf<pos:position pos:line="176" pos:column="19"/></name></name> <operator pos:line="176" pos:column="20">=<pos:position pos:line="176" pos:column="21"/></operator> <name pos:line="176" pos:column="22">TRUE<pos:position pos:line="176" pos:column="26"/></name></expr>;<pos:position pos:line="176" pos:column="27"/></expr_stmt>
      <break pos:line="177" pos:column="7">break;<pos:position pos:line="177" pos:column="13"/></break>
    <case pos:line="178" pos:column="5">case <expr><literal type="char" pos:line="178" pos:column="10">'8'<pos:position pos:line="178" pos:column="13"/></literal></expr>:<pos:position pos:line="178" pos:column="14"/></case> <comment type="block" pos:line="178" pos:column="15">/* there is no short letter for this */</comment>
      <if pos:line="179" pos:column="7">if<condition pos:line="179" pos:column="9">(<expr><call><name pos:line="179" pos:column="10">strcmp<pos:position pos:line="179" pos:column="16"/></name><argument_list pos:line="179" pos:column="16">(<argument><expr><name pos:line="179" pos:column="17">nextarg<pos:position pos:line="179" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="26">"-"<pos:position pos:line="179" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="31"/></condition><then pos:line="179" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="180" pos:column="9">config<pos:position pos:line="180" pos:column="15"/></name><operator pos:line="180" pos:column="15">-&gt;<pos:position pos:line="180" pos:column="20"/></operator><name pos:line="180" pos:column="17">errors<pos:position pos:line="180" pos:column="23"/></name></name> <operator pos:line="180" pos:column="24">=<pos:position pos:line="180" pos:column="25"/></operator> <call><name pos:line="180" pos:column="26">fopen<pos:position pos:line="180" pos:column="31"/></name><argument_list pos:line="180" pos:column="31">(<argument><expr><name pos:line="180" pos:column="32">nextarg<pos:position pos:line="180" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="41">"wt"<pos:position pos:line="180" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="47"/></expr_stmt></block></then>
      <else pos:line="181" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="182" pos:column="9">config<pos:position pos:line="182" pos:column="15"/></name><operator pos:line="182" pos:column="15">-&gt;<pos:position pos:line="182" pos:column="20"/></operator><name pos:line="182" pos:column="17">errors<pos:position pos:line="182" pos:column="23"/></name></name> <operator pos:line="182" pos:column="24">=<pos:position pos:line="182" pos:column="25"/></operator> <name pos:line="182" pos:column="26">stdout<pos:position pos:line="182" pos:column="32"/></name></expr>;<pos:position pos:line="182" pos:column="33"/></expr_stmt></block></else></if>
      <break pos:line="183" pos:column="7">break;<pos:position pos:line="183" pos:column="13"/></break>
    <case pos:line="184" pos:column="5">case <expr><literal type="char" pos:line="184" pos:column="10">'#'<pos:position pos:line="184" pos:column="13"/></literal></expr>:<pos:position pos:line="184" pos:column="14"/></case> <comment type="block" pos:line="184" pos:column="15">/* added 19990617 larsa */</comment>
      <expr_stmt><expr><name><name pos:line="185" pos:column="7">config<pos:position pos:line="185" pos:column="13"/></name><operator pos:line="185" pos:column="13">-&gt;<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="15">progressmode<pos:position pos:line="185" pos:column="27"/></name></name> <operator pos:line="185" pos:column="28">^=<pos:position pos:line="185" pos:column="30"/></operator> <name pos:line="185" pos:column="31">CURL_PROGRESS_BAR<pos:position pos:line="185" pos:column="48"/></name></expr>;<pos:position pos:line="185" pos:column="49"/></expr_stmt>
      <break pos:line="186" pos:column="7">break;<pos:position pos:line="186" pos:column="13"/></break>
    <case pos:line="187" pos:column="5">case <expr><literal type="char" pos:line="187" pos:column="10">'2'<pos:position pos:line="187" pos:column="13"/></literal></expr>:<pos:position pos:line="187" pos:column="14"/></case> 
      <comment type="block" pos:line="188" pos:column="7">/* SSL version 2 */</comment>
      <expr_stmt><expr><name><name pos:line="189" pos:column="7">config<pos:position pos:line="189" pos:column="13"/></name><operator pos:line="189" pos:column="13">-&gt;<pos:position pos:line="189" pos:column="18"/></operator><name pos:line="189" pos:column="15">ssl_version<pos:position pos:line="189" pos:column="26"/></name></name> <operator pos:line="189" pos:column="27">=<pos:position pos:line="189" pos:column="28"/></operator> <literal type="number" pos:line="189" pos:column="29">2<pos:position pos:line="189" pos:column="30"/></literal></expr>;<pos:position pos:line="189" pos:column="31"/></expr_stmt>
      <break pos:line="190" pos:column="7">break;<pos:position pos:line="190" pos:column="13"/></break>
    <case pos:line="191" pos:column="5">case <expr><literal type="char" pos:line="191" pos:column="10">'3'<pos:position pos:line="191" pos:column="13"/></literal></expr>:<pos:position pos:line="191" pos:column="14"/></case> 
      <comment type="block" pos:line="192" pos:column="7">/* SSL version 2 */</comment>
      <expr_stmt><expr><name><name pos:line="193" pos:column="7">config<pos:position pos:line="193" pos:column="13"/></name><operator pos:line="193" pos:column="13">-&gt;<pos:position pos:line="193" pos:column="18"/></operator><name pos:line="193" pos:column="15">ssl_version<pos:position pos:line="193" pos:column="26"/></name></name> <operator pos:line="193" pos:column="27">=<pos:position pos:line="193" pos:column="28"/></operator> <literal type="number" pos:line="193" pos:column="29">3<pos:position pos:line="193" pos:column="30"/></literal></expr>;<pos:position pos:line="193" pos:column="31"/></expr_stmt>
      <break pos:line="194" pos:column="7">break;<pos:position pos:line="194" pos:column="13"/></break>
    <case pos:line="195" pos:column="5">case <expr><literal type="char" pos:line="195" pos:column="10">'a'<pos:position pos:line="195" pos:column="13"/></literal></expr>:<pos:position pos:line="195" pos:column="14"/></case>
      <comment type="block" pos:line="196" pos:column="7">/* This makes the FTP sessions use APPE instead of STOR */</comment>
      <expr_stmt><expr><name><name pos:line="197" pos:column="7">config<pos:position pos:line="197" pos:column="13"/></name><operator pos:line="197" pos:column="13">-&gt;<pos:position pos:line="197" pos:column="18"/></operator><name pos:line="197" pos:column="15">conf<pos:position pos:line="197" pos:column="19"/></name></name> <operator pos:line="197" pos:column="20">^=<pos:position pos:line="197" pos:column="22"/></operator> <name pos:line="197" pos:column="23">CONF_FTPAPPEND<pos:position pos:line="197" pos:column="37"/></name></expr>;<pos:position pos:line="197" pos:column="38"/></expr_stmt>
      <break pos:line="198" pos:column="7">break;<pos:position pos:line="198" pos:column="13"/></break>
    <case pos:line="199" pos:column="5">case <expr><literal type="char" pos:line="199" pos:column="10">'A'<pos:position pos:line="199" pos:column="13"/></literal></expr>:<pos:position pos:line="199" pos:column="14"/></case>
      <comment type="block" pos:line="200" pos:column="7">/* This specifies the User-Agent name */</comment>
      <expr_stmt><expr><call><name pos:line="201" pos:column="7">GetStr<pos:position pos:line="201" pos:column="13"/></name><argument_list pos:line="201" pos:column="13">(<argument><expr><operator pos:line="201" pos:column="14">&amp;<pos:position pos:line="201" pos:column="19"/></operator><name><name pos:line="201" pos:column="15">config<pos:position pos:line="201" pos:column="21"/></name><operator pos:line="201" pos:column="21">-&gt;<pos:position pos:line="201" pos:column="26"/></operator><name pos:line="201" pos:column="23">useragent<pos:position pos:line="201" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="34">nextarg<pos:position pos:line="201" pos:column="41"/></name></expr></argument>)<pos:position pos:line="201" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
      <break pos:line="202" pos:column="7">break;<pos:position pos:line="202" pos:column="13"/></break>
    <case pos:line="203" pos:column="5">case <expr><literal type="char" pos:line="203" pos:column="10">'b'<pos:position pos:line="203" pos:column="13"/></literal></expr>:<pos:position pos:line="203" pos:column="14"/></case> <comment type="block" pos:line="203" pos:column="15">/* cookie string coming up: */</comment>
      <if pos:line="204" pos:column="7">if<condition pos:line="204" pos:column="9">(<expr><name><name pos:line="204" pos:column="10">nextarg<pos:position pos:line="204" pos:column="17"/></name><index pos:line="204" pos:column="17">[<expr><literal type="number" pos:line="204" pos:column="18">0<pos:position pos:line="204" pos:column="19"/></literal></expr>]<pos:position pos:line="204" pos:column="20"/></index></name> <operator pos:line="204" pos:column="21">==<pos:position pos:line="204" pos:column="23"/></operator> <literal type="char" pos:line="204" pos:column="24">'@'<pos:position pos:line="204" pos:column="27"/></literal></expr>)<pos:position pos:line="204" pos:column="28"/></condition><then pos:line="204" pos:column="28"> <block pos:line="204" pos:column="29">{
        <expr_stmt><expr><name pos:line="205" pos:column="9">nextarg<pos:position pos:line="205" pos:column="16"/></name><operator pos:line="205" pos:column="16">++<pos:position pos:line="205" pos:column="18"/></operator></expr>;<pos:position pos:line="205" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="206" pos:column="8"/></block></then>
      <elseif pos:line="207" pos:column="7">else <if pos:line="207" pos:column="12">if<condition pos:line="207" pos:column="14">(<expr><call><name pos:line="207" pos:column="15">strchr<pos:position pos:line="207" pos:column="21"/></name><argument_list pos:line="207" pos:column="21">(<argument><expr><name pos:line="207" pos:column="22">nextarg<pos:position pos:line="207" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="207" pos:column="31">'='<pos:position pos:line="207" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="36"/></condition><then pos:line="207" pos:column="36"> <block pos:line="207" pos:column="37">{
        <comment type="block" pos:line="208" pos:column="9">/* A cookie string must have a =-letter */</comment>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">GetStr<pos:position pos:line="209" pos:column="15"/></name><argument_list pos:line="209" pos:column="15">(<argument><expr><operator pos:line="209" pos:column="16">&amp;<pos:position pos:line="209" pos:column="21"/></operator><name><name pos:line="209" pos:column="17">config<pos:position pos:line="209" pos:column="23"/></name><operator pos:line="209" pos:column="23">-&gt;<pos:position pos:line="209" pos:column="28"/></operator><name pos:line="209" pos:column="25">cookie<pos:position pos:line="209" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="33">nextarg<pos:position pos:line="209" pos:column="40"/></name></expr></argument>)<pos:position pos:line="209" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="42"/></expr_stmt>
        <break pos:line="210" pos:column="9">break;<pos:position pos:line="210" pos:column="15"/></break>
      }<pos:position pos:line="211" pos:column="8"/></block></then></if></elseif></if>
      <comment type="block" pos:line="212" pos:column="7">/* We have a cookie file to read from! */</comment>
      <expr_stmt><expr><call><name pos:line="213" pos:column="7">GetStr<pos:position pos:line="213" pos:column="13"/></name><argument_list pos:line="213" pos:column="13">(<argument><expr><operator pos:line="213" pos:column="14">&amp;<pos:position pos:line="213" pos:column="19"/></operator><name><name pos:line="213" pos:column="15">config<pos:position pos:line="213" pos:column="21"/></name><operator pos:line="213" pos:column="21">-&gt;<pos:position pos:line="213" pos:column="26"/></operator><name pos:line="213" pos:column="23">cookiefile<pos:position pos:line="213" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="35">nextarg<pos:position pos:line="213" pos:column="42"/></name></expr></argument>)<pos:position pos:line="213" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="44"/></expr_stmt>
      <break pos:line="214" pos:column="7">break;<pos:position pos:line="214" pos:column="13"/></break>
    <case pos:line="215" pos:column="5">case <expr><literal type="char" pos:line="215" pos:column="10">'B'<pos:position pos:line="215" pos:column="13"/></literal></expr>:<pos:position pos:line="215" pos:column="14"/></case>
      <comment type="block" pos:line="216" pos:column="7">/* use ASCII/text when transfering */</comment>
      <expr_stmt><expr><name><name pos:line="217" pos:column="7">config<pos:position pos:line="217" pos:column="13"/></name><operator pos:line="217" pos:column="13">-&gt;<pos:position pos:line="217" pos:column="18"/></operator><name pos:line="217" pos:column="15">conf<pos:position pos:line="217" pos:column="19"/></name></name> <operator pos:line="217" pos:column="20">^=<pos:position pos:line="217" pos:column="22"/></operator> <name pos:line="217" pos:column="23">CONF_GETTEXT<pos:position pos:line="217" pos:column="35"/></name></expr>;<pos:position pos:line="217" pos:column="36"/></expr_stmt>
      <break pos:line="218" pos:column="7">break;<pos:position pos:line="218" pos:column="13"/></break>
    <case pos:line="219" pos:column="5">case <expr><literal type="char" pos:line="219" pos:column="10">'c'<pos:position pos:line="219" pos:column="13"/></literal></expr>:<pos:position pos:line="219" pos:column="14"/></case>
      <comment type="block" pos:line="220" pos:column="7">/* This makes us continue an ftp transfer */</comment>
      <expr_stmt><expr><name><name pos:line="221" pos:column="7">config<pos:position pos:line="221" pos:column="13"/></name><operator pos:line="221" pos:column="13">-&gt;<pos:position pos:line="221" pos:column="18"/></operator><name pos:line="221" pos:column="15">use_resume<pos:position pos:line="221" pos:column="25"/></name></name><operator pos:line="221" pos:column="25">^=<pos:position pos:line="221" pos:column="27"/></operator><name pos:line="221" pos:column="27">TRUE<pos:position pos:line="221" pos:column="31"/></name></expr>;<pos:position pos:line="221" pos:column="32"/></expr_stmt>
      <break pos:line="222" pos:column="7">break;<pos:position pos:line="222" pos:column="13"/></break>
    <case pos:line="223" pos:column="5">case <expr><literal type="char" pos:line="223" pos:column="10">'C'<pos:position pos:line="223" pos:column="13"/></literal></expr>:<pos:position pos:line="223" pos:column="14"/></case>
      <comment type="block" pos:line="224" pos:column="7">/* This makes us continue an ftp transfer at given position */</comment>
      <expr_stmt><expr><name><name pos:line="225" pos:column="7">config<pos:position pos:line="225" pos:column="13"/></name><operator pos:line="225" pos:column="13">-&gt;<pos:position pos:line="225" pos:column="18"/></operator><name pos:line="225" pos:column="15">resume_from<pos:position pos:line="225" pos:column="26"/></name></name><operator pos:line="225" pos:column="26">=<pos:position pos:line="225" pos:column="27"/></operator> <call><name pos:line="225" pos:column="28">atoi<pos:position pos:line="225" pos:column="32"/></name><argument_list pos:line="225" pos:column="32">(<argument><expr><name pos:line="225" pos:column="33">nextarg<pos:position pos:line="225" pos:column="40"/></name></expr></argument>)<pos:position pos:line="225" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="226" pos:column="7">config<pos:position pos:line="226" pos:column="13"/></name><operator pos:line="226" pos:column="13">-&gt;<pos:position pos:line="226" pos:column="18"/></operator><name pos:line="226" pos:column="15">use_resume<pos:position pos:line="226" pos:column="25"/></name></name><operator pos:line="226" pos:column="25">=<pos:position pos:line="226" pos:column="26"/></operator><name pos:line="226" pos:column="26">TRUE<pos:position pos:line="226" pos:column="30"/></name></expr>;<pos:position pos:line="226" pos:column="31"/></expr_stmt>
      <break pos:line="227" pos:column="7">break;<pos:position pos:line="227" pos:column="13"/></break>
    <case pos:line="228" pos:column="5">case <expr><literal type="char" pos:line="228" pos:column="10">'d'<pos:position pos:line="228" pos:column="13"/></literal></expr>:<pos:position pos:line="228" pos:column="14"/></case>
      <comment type="block" pos:line="229" pos:column="7">/* postfield data */</comment>
      <if pos:line="230" pos:column="7">if<condition pos:line="230" pos:column="9">(<expr><literal type="char" pos:line="230" pos:column="10">'@'<pos:position pos:line="230" pos:column="13"/></literal> <operator pos:line="230" pos:column="14">==<pos:position pos:line="230" pos:column="16"/></operator> <operator pos:line="230" pos:column="17">*<pos:position pos:line="230" pos:column="18"/></operator><name pos:line="230" pos:column="18">nextarg<pos:position pos:line="230" pos:column="25"/></name></expr>)<pos:position pos:line="230" pos:column="26"/></condition><then pos:line="230" pos:column="26"> <block pos:line="230" pos:column="27">{
        <comment type="block" pos:line="231" pos:column="9">/* the data begins with a '@' letter, it means that a file name
           or - (stdin) follows */</comment>
        <decl_stmt><decl><type><name pos:line="233" pos:column="9">FILE<pos:position pos:line="233" pos:column="13"/></name> <modifier pos:line="233" pos:column="14">*<pos:position pos:line="233" pos:column="15"/></modifier></type><name pos:line="233" pos:column="15">file<pos:position pos:line="233" pos:column="19"/></name></decl>;<pos:position pos:line="233" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><name pos:line="234" pos:column="9">nextarg<pos:position pos:line="234" pos:column="16"/></name><operator pos:line="234" pos:column="16">++<pos:position pos:line="234" pos:column="18"/></operator></expr>;<pos:position pos:line="234" pos:column="19"/></expr_stmt> <comment type="block" pos:line="234" pos:column="20">/* pass the @ */</comment>
        <if pos:line="235" pos:column="9">if<condition pos:line="235" pos:column="11">(<expr><call><name pos:line="235" pos:column="12">strequal<pos:position pos:line="235" pos:column="20"/></name><argument_list pos:line="235" pos:column="20">(<argument><expr><literal type="string" pos:line="235" pos:column="21">"-"<pos:position pos:line="235" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="235" pos:column="26">nextarg<pos:position pos:line="235" pos:column="33"/></name></expr></argument>)<pos:position pos:line="235" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="35"/></condition><then pos:line="235" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="236" pos:column="11">file<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">=<pos:position pos:line="236" pos:column="17"/></operator> <name pos:line="236" pos:column="18">stdin<pos:position pos:line="236" pos:column="23"/></name></expr>;<pos:position pos:line="236" pos:column="24"/></expr_stmt></block></then>
        <else pos:line="237" pos:column="9">else 
          <block type="pseudo"><expr_stmt><expr><name pos:line="238" pos:column="11">file<pos:position pos:line="238" pos:column="15"/></name> <operator pos:line="238" pos:column="16">=<pos:position pos:line="238" pos:column="17"/></operator> <call><name pos:line="238" pos:column="18">fopen<pos:position pos:line="238" pos:column="23"/></name><argument_list pos:line="238" pos:column="23">(<argument><expr><name pos:line="238" pos:column="24">nextarg<pos:position pos:line="238" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="33">"r"<pos:position pos:line="238" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="38"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name><name pos:line="239" pos:column="9">config<pos:position pos:line="239" pos:column="15"/></name><operator pos:line="239" pos:column="15">-&gt;<pos:position pos:line="239" pos:column="20"/></operator><name pos:line="239" pos:column="17">postfields<pos:position pos:line="239" pos:column="27"/></name></name> <operator pos:line="239" pos:column="28">=<pos:position pos:line="239" pos:column="29"/></operator> <call><name pos:line="239" pos:column="30">file2string<pos:position pos:line="239" pos:column="41"/></name><argument_list pos:line="239" pos:column="41">(<argument><expr><name pos:line="239" pos:column="42">file<pos:position pos:line="239" pos:column="46"/></name></expr></argument>)<pos:position pos:line="239" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="48"/></expr_stmt>
        <if pos:line="240" pos:column="9">if<condition pos:line="240" pos:column="11">(<expr><name pos:line="240" pos:column="12">file<pos:position pos:line="240" pos:column="16"/></name> <operator pos:line="240" pos:column="17">&amp;&amp;<pos:position pos:line="240" pos:column="27"/></operator> <operator pos:line="240" pos:column="20">(<pos:position pos:line="240" pos:column="21"/></operator><name pos:line="240" pos:column="21">file<pos:position pos:line="240" pos:column="25"/></name> <operator pos:line="240" pos:column="26">!=<pos:position pos:line="240" pos:column="28"/></operator> <name pos:line="240" pos:column="29">stdin<pos:position pos:line="240" pos:column="34"/></name><operator pos:line="240" pos:column="34">)<pos:position pos:line="240" pos:column="35"/></operator></expr>)<pos:position pos:line="240" pos:column="36"/></condition><then pos:line="240" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="241" pos:column="11">fclose<pos:position pos:line="241" pos:column="17"/></name><argument_list pos:line="241" pos:column="17">(<argument><expr><name pos:line="241" pos:column="18">stdin<pos:position pos:line="241" pos:column="23"/></name></expr></argument>)<pos:position pos:line="241" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="242" pos:column="8"/></block></then>
      <else pos:line="243" pos:column="7">else <block pos:line="243" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="244" pos:column="9">GetStr<pos:position pos:line="244" pos:column="15"/></name><argument_list pos:line="244" pos:column="15">(<argument><expr><operator pos:line="244" pos:column="16">&amp;<pos:position pos:line="244" pos:column="21"/></operator><name><name pos:line="244" pos:column="17">config<pos:position pos:line="244" pos:column="23"/></name><operator pos:line="244" pos:column="23">-&gt;<pos:position pos:line="244" pos:column="28"/></operator><name pos:line="244" pos:column="25">postfields<pos:position pos:line="244" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="37">nextarg<pos:position pos:line="244" pos:column="44"/></name></expr></argument>)<pos:position pos:line="244" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="245" pos:column="8"/></block></else></if>
      <if pos:line="246" pos:column="7">if<condition pos:line="246" pos:column="9">(<expr><name><name pos:line="246" pos:column="10">config<pos:position pos:line="246" pos:column="16"/></name><operator pos:line="246" pos:column="16">-&gt;<pos:position pos:line="246" pos:column="21"/></operator><name pos:line="246" pos:column="18">postfields<pos:position pos:line="246" pos:column="28"/></name></name></expr>)<pos:position pos:line="246" pos:column="29"/></condition><then pos:line="246" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="247" pos:column="9">config<pos:position pos:line="247" pos:column="15"/></name><operator pos:line="247" pos:column="15">-&gt;<pos:position pos:line="247" pos:column="20"/></operator><name pos:line="247" pos:column="17">conf<pos:position pos:line="247" pos:column="21"/></name></name> <operator pos:line="247" pos:column="22">|=<pos:position pos:line="247" pos:column="24"/></operator> <name pos:line="247" pos:column="25">CONF_POST<pos:position pos:line="247" pos:column="34"/></name></expr>;<pos:position pos:line="247" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="248" pos:column="7">if<condition pos:line="248" pos:column="9">(<expr><call><name pos:line="248" pos:column="10">SetHTTPrequest<pos:position pos:line="248" pos:column="24"/></name><argument_list pos:line="248" pos:column="24">(<argument><expr><name pos:line="248" pos:column="25">HTTPREQ_SIMPLEPOST<pos:position pos:line="248" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="45">&amp;<pos:position pos:line="248" pos:column="50"/></operator><name><name pos:line="248" pos:column="46">config<pos:position pos:line="248" pos:column="52"/></name><operator pos:line="248" pos:column="52">-&gt;<pos:position pos:line="248" pos:column="57"/></operator><name pos:line="248" pos:column="54">httpreq<pos:position pos:line="248" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="248" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="63"/></condition><then pos:line="248" pos:column="63">
        <block type="pseudo"><return pos:line="249" pos:column="9">return <expr><name pos:line="249" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="249" pos:column="33"/></name></expr>;<pos:position pos:line="249" pos:column="34"/></return></block></then></if>
      <break pos:line="250" pos:column="7">break;<pos:position pos:line="250" pos:column="13"/></break>
    <case pos:line="251" pos:column="5">case <expr><literal type="char" pos:line="251" pos:column="10">'D'<pos:position pos:line="251" pos:column="13"/></literal></expr>:<pos:position pos:line="251" pos:column="14"/></case>
      <comment type="block" pos:line="252" pos:column="7">/* dump-header to given file name */</comment>
      <expr_stmt><expr><call><name pos:line="253" pos:column="7">GetStr<pos:position pos:line="253" pos:column="13"/></name><argument_list pos:line="253" pos:column="13">(<argument><expr><operator pos:line="253" pos:column="14">&amp;<pos:position pos:line="253" pos:column="19"/></operator><name><name pos:line="253" pos:column="15">config<pos:position pos:line="253" pos:column="21"/></name><operator pos:line="253" pos:column="21">-&gt;<pos:position pos:line="253" pos:column="26"/></operator><name pos:line="253" pos:column="23">headerfile<pos:position pos:line="253" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="35">nextarg<pos:position pos:line="253" pos:column="42"/></name></expr></argument>)<pos:position pos:line="253" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="44"/></expr_stmt>
      <break pos:line="254" pos:column="7">break;<pos:position pos:line="254" pos:column="13"/></break>
    <case pos:line="255" pos:column="5">case <expr><literal type="char" pos:line="255" pos:column="10">'e'<pos:position pos:line="255" pos:column="13"/></literal></expr>:<pos:position pos:line="255" pos:column="14"/></case>
      <block pos:line="256" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="257" pos:column="9">char<pos:position pos:line="257" pos:column="13"/></name> <modifier pos:line="257" pos:column="14">*<pos:position pos:line="257" pos:column="15"/></modifier></type><name pos:line="257" pos:column="15">ptr<pos:position pos:line="257" pos:column="18"/></name> <init pos:line="257" pos:column="19">= <expr><call><name pos:line="257" pos:column="21">strstr<pos:position pos:line="257" pos:column="27"/></name><argument_list pos:line="257" pos:column="27">(<argument><expr><name pos:line="257" pos:column="28">nextarg<pos:position pos:line="257" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="37">";auto"<pos:position pos:line="257" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="257" pos:column="46"/></decl_stmt>
        <if pos:line="258" pos:column="9">if<condition pos:line="258" pos:column="11">(<expr><name pos:line="258" pos:column="12">ptr<pos:position pos:line="258" pos:column="15"/></name></expr>)<pos:position pos:line="258" pos:column="16"/></condition><then pos:line="258" pos:column="16"> <block pos:line="258" pos:column="17">{
          <comment type="block" pos:line="259" pos:column="11">/* Automatic referer requested, this may be combined with a
             set initial one */</comment>
          <expr_stmt><expr><name><name pos:line="261" pos:column="11">config<pos:position pos:line="261" pos:column="17"/></name><operator pos:line="261" pos:column="17">-&gt;<pos:position pos:line="261" pos:column="22"/></operator><name pos:line="261" pos:column="19">conf<pos:position pos:line="261" pos:column="23"/></name></name> <operator pos:line="261" pos:column="24">|=<pos:position pos:line="261" pos:column="26"/></operator> <name pos:line="261" pos:column="27">CONF_AUTO_REFERER<pos:position pos:line="261" pos:column="44"/></name></expr>;<pos:position pos:line="261" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="262" pos:column="11">*<pos:position pos:line="262" pos:column="12"/></operator><name pos:line="262" pos:column="12">ptr<pos:position pos:line="262" pos:column="15"/></name> <operator pos:line="262" pos:column="16">=<pos:position pos:line="262" pos:column="17"/></operator> <literal type="number" pos:line="262" pos:column="18">0<pos:position pos:line="262" pos:column="19"/></literal></expr>;<pos:position pos:line="262" pos:column="20"/></expr_stmt> <comment type="block" pos:line="262" pos:column="21">/* zero terminate here */</comment>
        }<pos:position pos:line="263" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="264" pos:column="9">GetStr<pos:position pos:line="264" pos:column="15"/></name><argument_list pos:line="264" pos:column="15">(<argument><expr><operator pos:line="264" pos:column="16">&amp;<pos:position pos:line="264" pos:column="21"/></operator><name><name pos:line="264" pos:column="17">config<pos:position pos:line="264" pos:column="23"/></name><operator pos:line="264" pos:column="23">-&gt;<pos:position pos:line="264" pos:column="28"/></operator><name pos:line="264" pos:column="25">referer<pos:position pos:line="264" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="34">nextarg<pos:position pos:line="264" pos:column="41"/></name></expr></argument>)<pos:position pos:line="264" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="265" pos:column="8"/></block>
      <break pos:line="266" pos:column="7">break;<pos:position pos:line="266" pos:column="13"/></break>
    <case pos:line="267" pos:column="5">case <expr><literal type="char" pos:line="267" pos:column="10">'E'<pos:position pos:line="267" pos:column="13"/></literal></expr>:<pos:position pos:line="267" pos:column="14"/></case>
      <block pos:line="268" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="269" pos:column="9">char<pos:position pos:line="269" pos:column="13"/></name> <modifier pos:line="269" pos:column="14">*<pos:position pos:line="269" pos:column="15"/></modifier></type><name pos:line="269" pos:column="15">ptr<pos:position pos:line="269" pos:column="18"/></name> <init pos:line="269" pos:column="19">= <expr><call><name pos:line="269" pos:column="21">strchr<pos:position pos:line="269" pos:column="27"/></name><argument_list pos:line="269" pos:column="27">(<argument><expr><name pos:line="269" pos:column="28">nextarg<pos:position pos:line="269" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="269" pos:column="37">':'<pos:position pos:line="269" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="269" pos:column="42"/></decl_stmt>
	<if pos:line="270" pos:column="9">if<condition pos:line="270" pos:column="11">(<expr><name pos:line="270" pos:column="12">ptr<pos:position pos:line="270" pos:column="15"/></name></expr>)<pos:position pos:line="270" pos:column="16"/></condition><then pos:line="270" pos:column="16"> <block pos:line="270" pos:column="17">{
	  <comment type="block" pos:line="271" pos:column="11">/* we have a password too */</comment>
	  <expr_stmt><expr><operator pos:line="272" pos:column="11">*<pos:position pos:line="272" pos:column="12"/></operator><name pos:line="272" pos:column="12">ptr<pos:position pos:line="272" pos:column="15"/></name><operator pos:line="272" pos:column="15">=<pos:position pos:line="272" pos:column="16"/></operator><literal type="number" pos:line="272" pos:column="16">0<pos:position pos:line="272" pos:column="17"/></literal></expr>;<pos:position pos:line="272" pos:column="18"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="273" pos:column="11">ptr<pos:position pos:line="273" pos:column="14"/></name><operator pos:line="273" pos:column="14">++<pos:position pos:line="273" pos:column="16"/></operator></expr>;<pos:position pos:line="273" pos:column="17"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="274" pos:column="11">GetStr<pos:position pos:line="274" pos:column="17"/></name><argument_list pos:line="274" pos:column="17">(<argument><expr><operator pos:line="274" pos:column="18">&amp;<pos:position pos:line="274" pos:column="23"/></operator><name><name pos:line="274" pos:column="19">config<pos:position pos:line="274" pos:column="25"/></name><operator pos:line="274" pos:column="25">-&gt;<pos:position pos:line="274" pos:column="30"/></operator><name pos:line="274" pos:column="27">cert_passwd<pos:position pos:line="274" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="40">ptr<pos:position pos:line="274" pos:column="43"/></name></expr></argument>)<pos:position pos:line="274" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="275" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="276" pos:column="9">GetStr<pos:position pos:line="276" pos:column="15"/></name><argument_list pos:line="276" pos:column="15">(<argument><expr><operator pos:line="276" pos:column="16">&amp;<pos:position pos:line="276" pos:column="21"/></operator><name><name pos:line="276" pos:column="17">config<pos:position pos:line="276" pos:column="23"/></name><operator pos:line="276" pos:column="23">-&gt;<pos:position pos:line="276" pos:column="28"/></operator><name pos:line="276" pos:column="25">cert<pos:position pos:line="276" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="31">nextarg<pos:position pos:line="276" pos:column="38"/></name></expr></argument>)<pos:position pos:line="276" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="277" pos:column="8"/></block>
      <break pos:line="278" pos:column="7">break;<pos:position pos:line="278" pos:column="13"/></break>
    <case pos:line="279" pos:column="5">case <expr><literal type="char" pos:line="279" pos:column="10">'f'<pos:position pos:line="279" pos:column="13"/></literal></expr>:<pos:position pos:line="279" pos:column="14"/></case>
      <comment type="block" pos:line="280" pos:column="7">/* fail hard on errors  */</comment>
      <expr_stmt><expr><name><name pos:line="281" pos:column="7">config<pos:position pos:line="281" pos:column="13"/></name><operator pos:line="281" pos:column="13">-&gt;<pos:position pos:line="281" pos:column="18"/></operator><name pos:line="281" pos:column="15">conf<pos:position pos:line="281" pos:column="19"/></name></name> <operator pos:line="281" pos:column="20">^=<pos:position pos:line="281" pos:column="22"/></operator> <name pos:line="281" pos:column="23">CONF_FAILONERROR<pos:position pos:line="281" pos:column="39"/></name></expr>;<pos:position pos:line="281" pos:column="40"/></expr_stmt>
      <break pos:line="282" pos:column="7">break;<pos:position pos:line="282" pos:column="13"/></break>
    <case pos:line="283" pos:column="5">case <expr><literal type="char" pos:line="283" pos:column="10">'F'<pos:position pos:line="283" pos:column="13"/></literal></expr>:<pos:position pos:line="283" pos:column="14"/></case>
      <comment type="block" pos:line="284" pos:column="7">/* "form data" simulation, this is a little advanced so lets do our best
	 to sort this out slowly and carefully */</comment>
      <if pos:line="286" pos:column="7">if<condition pos:line="286" pos:column="9">(<expr><call><name pos:line="286" pos:column="10">curl_formparse<pos:position pos:line="286" pos:column="24"/></name><argument_list pos:line="286" pos:column="24">(<argument><expr><name pos:line="286" pos:column="25">nextarg<pos:position pos:line="286" pos:column="32"/></name></expr></argument>,
                        <argument><expr><operator pos:line="287" pos:column="25">&amp;<pos:position pos:line="287" pos:column="30"/></operator><name><name pos:line="287" pos:column="26">config<pos:position pos:line="287" pos:column="32"/></name><operator pos:line="287" pos:column="32">-&gt;<pos:position pos:line="287" pos:column="37"/></operator><name pos:line="287" pos:column="34">httppost<pos:position pos:line="287" pos:column="42"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="288" pos:column="25">&amp;<pos:position pos:line="288" pos:column="30"/></operator><name><name pos:line="288" pos:column="26">config<pos:position pos:line="288" pos:column="32"/></name><operator pos:line="288" pos:column="32">-&gt;<pos:position pos:line="288" pos:column="37"/></operator><name pos:line="288" pos:column="34">last_post<pos:position pos:line="288" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="288" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="288" pos:column="45"/></condition><then pos:line="288" pos:column="45">
	<block type="pseudo"><return pos:line="289" pos:column="9">return <expr><name pos:line="289" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="289" pos:column="33"/></name></expr>;<pos:position pos:line="289" pos:column="34"/></return></block></then></if>    
      <if pos:line="290" pos:column="7">if<condition pos:line="290" pos:column="9">(<expr><call><name pos:line="290" pos:column="10">SetHTTPrequest<pos:position pos:line="290" pos:column="24"/></name><argument_list pos:line="290" pos:column="24">(<argument><expr><name pos:line="290" pos:column="25">HTTPREQ_POST<pos:position pos:line="290" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="290" pos:column="39">&amp;<pos:position pos:line="290" pos:column="44"/></operator><name><name pos:line="290" pos:column="40">config<pos:position pos:line="290" pos:column="46"/></name><operator pos:line="290" pos:column="46">-&gt;<pos:position pos:line="290" pos:column="51"/></operator><name pos:line="290" pos:column="48">httpreq<pos:position pos:line="290" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="290" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="290" pos:column="57"/></condition><then pos:line="290" pos:column="57">
        <block type="pseudo"><return pos:line="291" pos:column="9">return <expr><name pos:line="291" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="291" pos:column="33"/></name></expr>;<pos:position pos:line="291" pos:column="34"/></return></block></then></if>
      <break pos:line="292" pos:column="7">break;<pos:position pos:line="292" pos:column="13"/></break>

    <case pos:line="294" pos:column="5">case <expr><literal type="char" pos:line="294" pos:column="10">'h'<pos:position pos:line="294" pos:column="13"/></literal></expr>:<pos:position pos:line="294" pos:column="14"/></case> <comment type="block" pos:line="294" pos:column="15">/* h for help */</comment>
      <expr_stmt><expr><call><name pos:line="295" pos:column="7">help<pos:position pos:line="295" pos:column="11"/></name><argument_list pos:line="295" pos:column="11">()<pos:position pos:line="295" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="14"/></expr_stmt>
      <return pos:line="296" pos:column="7">return <expr><name pos:line="296" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="296" pos:column="31"/></name></expr>;<pos:position pos:line="296" pos:column="32"/></return>
    <case pos:line="297" pos:column="5">case <expr><literal type="char" pos:line="297" pos:column="10">'H'<pos:position pos:line="297" pos:column="13"/></literal></expr>:<pos:position pos:line="297" pos:column="14"/></case>
      <comment type="block" pos:line="298" pos:column="7">/* A custom header to append to a list */</comment>
      <expr_stmt><expr><name><name pos:line="299" pos:column="7">config<pos:position pos:line="299" pos:column="13"/></name><operator pos:line="299" pos:column="13">-&gt;<pos:position pos:line="299" pos:column="18"/></operator><name pos:line="299" pos:column="15">headers<pos:position pos:line="299" pos:column="22"/></name></name> <operator pos:line="299" pos:column="23">=<pos:position pos:line="299" pos:column="24"/></operator> <call><name pos:line="299" pos:column="25">curl_slist_append<pos:position pos:line="299" pos:column="42"/></name><argument_list pos:line="299" pos:column="42">(<argument><expr><name><name pos:line="299" pos:column="43">config<pos:position pos:line="299" pos:column="49"/></name><operator pos:line="299" pos:column="49">-&gt;<pos:position pos:line="299" pos:column="54"/></operator><name pos:line="299" pos:column="51">headers<pos:position pos:line="299" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="60">nextarg<pos:position pos:line="299" pos:column="67"/></name></expr></argument>)<pos:position pos:line="299" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="69"/></expr_stmt>
      <break pos:line="300" pos:column="7">break;<pos:position pos:line="300" pos:column="13"/></break>
    <case pos:line="301" pos:column="5">case <expr><literal type="char" pos:line="301" pos:column="10">'i'<pos:position pos:line="301" pos:column="13"/></literal></expr>:<pos:position pos:line="301" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="302" pos:column="7">config<pos:position pos:line="302" pos:column="13"/></name><operator pos:line="302" pos:column="13">-&gt;<pos:position pos:line="302" pos:column="18"/></operator><name pos:line="302" pos:column="15">conf<pos:position pos:line="302" pos:column="19"/></name></name> <operator pos:line="302" pos:column="20">^=<pos:position pos:line="302" pos:column="22"/></operator> <name pos:line="302" pos:column="23">CONF_HEADER<pos:position pos:line="302" pos:column="34"/></name></expr>;<pos:position pos:line="302" pos:column="35"/></expr_stmt> <comment type="block" pos:line="302" pos:column="36">/* include the HTTP header as well */</comment>
      <break pos:line="303" pos:column="7">break;<pos:position pos:line="303" pos:column="13"/></break>
    <case pos:line="304" pos:column="5">case <expr><literal type="char" pos:line="304" pos:column="10">'I'<pos:position pos:line="304" pos:column="13"/></literal></expr>:<pos:position pos:line="304" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="305" pos:column="7">config<pos:position pos:line="305" pos:column="13"/></name><operator pos:line="305" pos:column="13">-&gt;<pos:position pos:line="305" pos:column="18"/></operator><name pos:line="305" pos:column="15">conf<pos:position pos:line="305" pos:column="19"/></name></name> <operator pos:line="305" pos:column="20">^=<pos:position pos:line="305" pos:column="22"/></operator> <name pos:line="305" pos:column="23">CONF_HEADER<pos:position pos:line="305" pos:column="34"/></name></expr>;<pos:position pos:line="305" pos:column="35"/></expr_stmt> <comment type="block" pos:line="305" pos:column="36">/* include the HTTP header in the output */</comment>
      <expr_stmt><expr><name><name pos:line="306" pos:column="7">config<pos:position pos:line="306" pos:column="13"/></name><operator pos:line="306" pos:column="13">-&gt;<pos:position pos:line="306" pos:column="18"/></operator><name pos:line="306" pos:column="15">conf<pos:position pos:line="306" pos:column="19"/></name></name> <operator pos:line="306" pos:column="20">^=<pos:position pos:line="306" pos:column="22"/></operator> <name pos:line="306" pos:column="23">CONF_NOBODY<pos:position pos:line="306" pos:column="34"/></name></expr>;<pos:position pos:line="306" pos:column="35"/></expr_stmt> <comment type="block" pos:line="306" pos:column="36">/* don't fetch the body at all */</comment>
      <if pos:line="307" pos:column="7">if<condition pos:line="307" pos:column="9">(<expr><call><name pos:line="307" pos:column="10">SetHTTPrequest<pos:position pos:line="307" pos:column="24"/></name><argument_list pos:line="307" pos:column="24">(<argument><expr><name pos:line="307" pos:column="25">HTTPREQ_HEAD<pos:position pos:line="307" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="307" pos:column="39">&amp;<pos:position pos:line="307" pos:column="44"/></operator><name><name pos:line="307" pos:column="40">config<pos:position pos:line="307" pos:column="46"/></name><operator pos:line="307" pos:column="46">-&gt;<pos:position pos:line="307" pos:column="51"/></operator><name pos:line="307" pos:column="48">httpreq<pos:position pos:line="307" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="307" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="307" pos:column="57"/></condition><then pos:line="307" pos:column="57">
        <block type="pseudo"><return pos:line="308" pos:column="9">return <expr><name pos:line="308" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="308" pos:column="33"/></name></expr>;<pos:position pos:line="308" pos:column="34"/></return></block></then></if>
      <break pos:line="309" pos:column="7">break;<pos:position pos:line="309" pos:column="13"/></break>
    <case pos:line="310" pos:column="5">case <expr><literal type="char" pos:line="310" pos:column="10">'K'<pos:position pos:line="310" pos:column="13"/></literal></expr>:<pos:position pos:line="310" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="311" pos:column="7">res<pos:position pos:line="311" pos:column="10"/></name> <operator pos:line="311" pos:column="11">=<pos:position pos:line="311" pos:column="12"/></operator> <call><name pos:line="311" pos:column="13">parseconfig<pos:position pos:line="311" pos:column="24"/></name><argument_list pos:line="311" pos:column="24">(<argument><expr><name pos:line="311" pos:column="25">nextarg<pos:position pos:line="311" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="34">config<pos:position pos:line="311" pos:column="40"/></name></expr></argument>)<pos:position pos:line="311" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="312" pos:column="7">config<pos:position pos:line="312" pos:column="13"/></name><operator pos:line="312" pos:column="13">-&gt;<pos:position pos:line="312" pos:column="18"/></operator><name pos:line="312" pos:column="15">configread<pos:position pos:line="312" pos:column="25"/></name></name> <operator pos:line="312" pos:column="26">=<pos:position pos:line="312" pos:column="27"/></operator> <name pos:line="312" pos:column="28">TRUE<pos:position pos:line="312" pos:column="32"/></name></expr>;<pos:position pos:line="312" pos:column="33"/></expr_stmt>
      <if pos:line="313" pos:column="7">if<condition pos:line="313" pos:column="9">(<expr><name pos:line="313" pos:column="10">res<pos:position pos:line="313" pos:column="13"/></name></expr>)<pos:position pos:line="313" pos:column="14"/></condition><then pos:line="313" pos:column="14">
	<block type="pseudo"><return pos:line="314" pos:column="9">return <expr><name pos:line="314" pos:column="16">res<pos:position pos:line="314" pos:column="19"/></name></expr>;<pos:position pos:line="314" pos:column="20"/></return></block></then></if>
      <break pos:line="315" pos:column="7">break;<pos:position pos:line="315" pos:column="13"/></break>
    <case pos:line="316" pos:column="5">case <expr><literal type="char" pos:line="316" pos:column="10">'l'<pos:position pos:line="316" pos:column="13"/></literal></expr>:<pos:position pos:line="316" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="317" pos:column="7">config<pos:position pos:line="317" pos:column="13"/></name><operator pos:line="317" pos:column="13">-&gt;<pos:position pos:line="317" pos:column="18"/></operator><name pos:line="317" pos:column="15">conf<pos:position pos:line="317" pos:column="19"/></name></name> <operator pos:line="317" pos:column="20">^=<pos:position pos:line="317" pos:column="22"/></operator> <name pos:line="317" pos:column="23">CONF_FTPLISTONLY<pos:position pos:line="317" pos:column="39"/></name></expr>;<pos:position pos:line="317" pos:column="40"/></expr_stmt> <comment type="block" pos:line="317" pos:column="41">/* only list the names of the FTP dir */</comment>
      <break pos:line="318" pos:column="7">break;<pos:position pos:line="318" pos:column="13"/></break>
    <case pos:line="319" pos:column="5">case <expr><literal type="char" pos:line="319" pos:column="10">'L'<pos:position pos:line="319" pos:column="13"/></literal></expr>:<pos:position pos:line="319" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="320" pos:column="7">config<pos:position pos:line="320" pos:column="13"/></name><operator pos:line="320" pos:column="13">-&gt;<pos:position pos:line="320" pos:column="18"/></operator><name pos:line="320" pos:column="15">conf<pos:position pos:line="320" pos:column="19"/></name></name> <operator pos:line="320" pos:column="20">^=<pos:position pos:line="320" pos:column="22"/></operator> <name pos:line="320" pos:column="23">CONF_FOLLOWLOCATION<pos:position pos:line="320" pos:column="42"/></name></expr>;<pos:position pos:line="320" pos:column="43"/></expr_stmt> <comment type="block" pos:line="320" pos:column="44">/* Follow Location: HTTP headers */</comment>
      <break pos:line="321" pos:column="7">break;<pos:position pos:line="321" pos:column="13"/></break>
    <case pos:line="322" pos:column="5">case <expr><literal type="char" pos:line="322" pos:column="10">'m'<pos:position pos:line="322" pos:column="13"/></literal></expr>:<pos:position pos:line="322" pos:column="14"/></case>
      <comment type="block" pos:line="323" pos:column="7">/* specified max time */</comment>
      <expr_stmt><expr><name><name pos:line="324" pos:column="7">config<pos:position pos:line="324" pos:column="13"/></name><operator pos:line="324" pos:column="13">-&gt;<pos:position pos:line="324" pos:column="18"/></operator><name pos:line="324" pos:column="15">timeout<pos:position pos:line="324" pos:column="22"/></name></name> <operator pos:line="324" pos:column="23">=<pos:position pos:line="324" pos:column="24"/></operator> <call><name pos:line="324" pos:column="25">atoi<pos:position pos:line="324" pos:column="29"/></name><argument_list pos:line="324" pos:column="29">(<argument><expr><name pos:line="324" pos:column="30">nextarg<pos:position pos:line="324" pos:column="37"/></name></expr></argument>)<pos:position pos:line="324" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="39"/></expr_stmt>
      <break pos:line="325" pos:column="7">break;<pos:position pos:line="325" pos:column="13"/></break>
    <case pos:line="326" pos:column="5">case <expr><literal type="char" pos:line="326" pos:column="10">'M'<pos:position pos:line="326" pos:column="13"/></literal></expr>:<pos:position pos:line="326" pos:column="14"/></case> <comment type="block" pos:line="326" pos:column="15">/* M for manual, huge help */</comment>
      <expr_stmt><expr><call><name pos:line="327" pos:column="7">hugehelp<pos:position pos:line="327" pos:column="15"/></name><argument_list pos:line="327" pos:column="15">()<pos:position pos:line="327" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="18"/></expr_stmt>
      <return pos:line="328" pos:column="7">return <expr><name pos:line="328" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="328" pos:column="31"/></name></expr>;<pos:position pos:line="328" pos:column="32"/></return>
    <case pos:line="329" pos:column="5">case <expr><literal type="char" pos:line="329" pos:column="10">'n'<pos:position pos:line="329" pos:column="13"/></literal></expr>:<pos:position pos:line="329" pos:column="14"/></case>
      <comment type="block" pos:line="330" pos:column="7">/* pick info from .netrc, if this is used for http, curl will
	 automatically enfore user+password with the request */</comment>
      <expr_stmt><expr><name><name pos:line="332" pos:column="7">config<pos:position pos:line="332" pos:column="13"/></name><operator pos:line="332" pos:column="13">-&gt;<pos:position pos:line="332" pos:column="18"/></operator><name pos:line="332" pos:column="15">conf<pos:position pos:line="332" pos:column="19"/></name></name> <operator pos:line="332" pos:column="20">^=<pos:position pos:line="332" pos:column="22"/></operator> <name pos:line="332" pos:column="23">CONF_NETRC<pos:position pos:line="332" pos:column="33"/></name></expr>;<pos:position pos:line="332" pos:column="34"/></expr_stmt>
      <break pos:line="333" pos:column="7">break;<pos:position pos:line="333" pos:column="13"/></break>
    <case pos:line="334" pos:column="5">case <expr><literal type="char" pos:line="334" pos:column="10">'N'<pos:position pos:line="334" pos:column="13"/></literal></expr>:<pos:position pos:line="334" pos:column="14"/></case>
      <comment type="block" pos:line="335" pos:column="7">/* disable the output I/O buffering */</comment>
      <expr_stmt><expr><name><name pos:line="336" pos:column="7">config<pos:position pos:line="336" pos:column="13"/></name><operator pos:line="336" pos:column="13">-&gt;<pos:position pos:line="336" pos:column="18"/></operator><name pos:line="336" pos:column="15">nobuffer<pos:position pos:line="336" pos:column="23"/></name></name> <operator pos:line="336" pos:column="24">^=<pos:position pos:line="336" pos:column="26"/></operator> <literal type="number" pos:line="336" pos:column="27">1<pos:position pos:line="336" pos:column="28"/></literal></expr>;<pos:position pos:line="336" pos:column="29"/></expr_stmt>
      <break pos:line="337" pos:column="7">break;<pos:position pos:line="337" pos:column="13"/></break>
    <case pos:line="338" pos:column="5">case <expr><literal type="char" pos:line="338" pos:column="10">'o'<pos:position pos:line="338" pos:column="13"/></literal></expr>:<pos:position pos:line="338" pos:column="14"/></case>
      <comment type="block" pos:line="339" pos:column="7">/* output file */</comment>
      <expr_stmt><expr><call><name pos:line="340" pos:column="7">GetStr<pos:position pos:line="340" pos:column="13"/></name><argument_list pos:line="340" pos:column="13">(<argument><expr><operator pos:line="340" pos:column="14">&amp;<pos:position pos:line="340" pos:column="19"/></operator><name><name pos:line="340" pos:column="15">config<pos:position pos:line="340" pos:column="21"/></name><operator pos:line="340" pos:column="21">-&gt;<pos:position pos:line="340" pos:column="26"/></operator><name pos:line="340" pos:column="23">outfile<pos:position pos:line="340" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="32">nextarg<pos:position pos:line="340" pos:column="39"/></name></expr></argument>)<pos:position pos:line="340" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="41"/></expr_stmt> <comment type="block" pos:line="340" pos:column="42">/* write to this file */</comment>
      <break pos:line="341" pos:column="7">break;<pos:position pos:line="341" pos:column="13"/></break>
    <case pos:line="342" pos:column="5">case <expr><literal type="char" pos:line="342" pos:column="10">'O'<pos:position pos:line="342" pos:column="13"/></literal></expr>:<pos:position pos:line="342" pos:column="14"/></case>
      <comment type="block" pos:line="343" pos:column="7">/* output file */</comment>
      <expr_stmt><expr><name><name pos:line="344" pos:column="7">config<pos:position pos:line="344" pos:column="13"/></name><operator pos:line="344" pos:column="13">-&gt;<pos:position pos:line="344" pos:column="18"/></operator><name pos:line="344" pos:column="15">remotefile<pos:position pos:line="344" pos:column="25"/></name></name> <operator pos:line="344" pos:column="26">^=<pos:position pos:line="344" pos:column="28"/></operator> <name pos:line="344" pos:column="29">TRUE<pos:position pos:line="344" pos:column="33"/></name></expr>;<pos:position pos:line="344" pos:column="34"/></expr_stmt>
      <break pos:line="345" pos:column="7">break;<pos:position pos:line="345" pos:column="13"/></break>
    <case pos:line="346" pos:column="5">case <expr><literal type="char" pos:line="346" pos:column="10">'P'<pos:position pos:line="346" pos:column="13"/></literal></expr>:<pos:position pos:line="346" pos:column="14"/></case>
      <comment type="block" pos:line="347" pos:column="7">/* This makes the FTP sessions use PORT instead of PASV */</comment>
      <comment type="block" pos:line="348" pos:column="7">/* use &lt;eth0&gt; or &lt;192.168.10.10&gt; style addresses. Anything except
	 this will make us try to get the "default" address.
	 NOTE: this is a changed behaviour since the released 4.1!
	 */</comment>
      <expr_stmt><expr><call><name pos:line="352" pos:column="7">GetStr<pos:position pos:line="352" pos:column="13"/></name><argument_list pos:line="352" pos:column="13">(<argument><expr><operator pos:line="352" pos:column="14">&amp;<pos:position pos:line="352" pos:column="19"/></operator><name><name pos:line="352" pos:column="15">config<pos:position pos:line="352" pos:column="21"/></name><operator pos:line="352" pos:column="21">-&gt;<pos:position pos:line="352" pos:column="26"/></operator><name pos:line="352" pos:column="23">ftpport<pos:position pos:line="352" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="352" pos:column="32">nextarg<pos:position pos:line="352" pos:column="39"/></name></expr></argument>)<pos:position pos:line="352" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="41"/></expr_stmt>
      <break pos:line="353" pos:column="7">break;<pos:position pos:line="353" pos:column="13"/></break>
<cpp:if pos:line="354" pos:column="1">#<cpp:directive pos:line="354" pos:column="2">if<pos:position pos:line="354" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="354" pos:column="5">0<pos:position pos:line="354" pos:column="6"/></literal></expr></cpp:if>
    case 'p':
      <comment type="block" pos:line="356" pos:column="7">/* specified port */</comment>
      fputs("You've used the -p option, it will be removed in a future version\n",
	    stderr);
      config-&gt;porttouse = atoi(nextarg);
      config-&gt;conf |= CONF_PORT; <comment type="block" pos:line="360" pos:column="34">/* changed port */</comment>
      break;
<cpp:endif pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">endif<pos:position pos:line="362" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="363" pos:column="5">case <expr><literal type="char" pos:line="363" pos:column="10">'q'<pos:position pos:line="363" pos:column="13"/></literal></expr>:<pos:position pos:line="363" pos:column="14"/></case> <comment type="block" pos:line="363" pos:column="15">/* if used first, already taken care of, we do it like
		 this so we don't cause an error! */</comment>
      <break pos:line="365" pos:column="7">break;<pos:position pos:line="365" pos:column="13"/></break>
    <case pos:line="366" pos:column="5">case <expr><literal type="char" pos:line="366" pos:column="10">'Q'<pos:position pos:line="366" pos:column="13"/></literal></expr>:<pos:position pos:line="366" pos:column="14"/></case>
      <comment type="block" pos:line="367" pos:column="7">/* QUOTE command to send to FTP server */</comment>
      <if pos:line="368" pos:column="7">if<condition pos:line="368" pos:column="9">(<expr><name><name pos:line="368" pos:column="10">nextarg<pos:position pos:line="368" pos:column="17"/></name><index pos:line="368" pos:column="17">[<expr><literal type="number" pos:line="368" pos:column="18">0<pos:position pos:line="368" pos:column="19"/></literal></expr>]<pos:position pos:line="368" pos:column="20"/></index></name> <operator pos:line="368" pos:column="21">==<pos:position pos:line="368" pos:column="23"/></operator> <literal type="char" pos:line="368" pos:column="24">'-'<pos:position pos:line="368" pos:column="27"/></literal></expr>)<pos:position pos:line="368" pos:column="28"/></condition><then pos:line="368" pos:column="28"> <block pos:line="368" pos:column="29">{
        <comment type="block" pos:line="369" pos:column="9">/* prefixed with a dash makes it a POST TRANSFER one */</comment>
        <expr_stmt><expr><name pos:line="370" pos:column="9">nextarg<pos:position pos:line="370" pos:column="16"/></name><operator pos:line="370" pos:column="16">++<pos:position pos:line="370" pos:column="18"/></operator></expr>;<pos:position pos:line="370" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="371" pos:column="9">config<pos:position pos:line="371" pos:column="15"/></name><operator pos:line="371" pos:column="15">-&gt;<pos:position pos:line="371" pos:column="20"/></operator><name pos:line="371" pos:column="17">postquote<pos:position pos:line="371" pos:column="26"/></name></name> <operator pos:line="371" pos:column="27">=<pos:position pos:line="371" pos:column="28"/></operator> <call><name pos:line="371" pos:column="29">curl_slist_append<pos:position pos:line="371" pos:column="46"/></name><argument_list pos:line="371" pos:column="46">(<argument><expr><name><name pos:line="371" pos:column="47">config<pos:position pos:line="371" pos:column="53"/></name><operator pos:line="371" pos:column="53">-&gt;<pos:position pos:line="371" pos:column="58"/></operator><name pos:line="371" pos:column="55">postquote<pos:position pos:line="371" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="371" pos:column="66">nextarg<pos:position pos:line="371" pos:column="73"/></name></expr></argument>)<pos:position pos:line="371" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="75"/></expr_stmt>
      }<pos:position pos:line="372" pos:column="8"/></block></then>
      <else pos:line="373" pos:column="7">else <block pos:line="373" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="374" pos:column="9">config<pos:position pos:line="374" pos:column="15"/></name><operator pos:line="374" pos:column="15">-&gt;<pos:position pos:line="374" pos:column="20"/></operator><name pos:line="374" pos:column="17">quote<pos:position pos:line="374" pos:column="22"/></name></name> <operator pos:line="374" pos:column="23">=<pos:position pos:line="374" pos:column="24"/></operator> <call><name pos:line="374" pos:column="25">curl_slist_append<pos:position pos:line="374" pos:column="42"/></name><argument_list pos:line="374" pos:column="42">(<argument><expr><name><name pos:line="374" pos:column="43">config<pos:position pos:line="374" pos:column="49"/></name><operator pos:line="374" pos:column="49">-&gt;<pos:position pos:line="374" pos:column="54"/></operator><name pos:line="374" pos:column="51">quote<pos:position pos:line="374" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="58">nextarg<pos:position pos:line="374" pos:column="65"/></name></expr></argument>)<pos:position pos:line="374" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="67"/></expr_stmt>
      }<pos:position pos:line="375" pos:column="8"/></block></else></if>
      <break pos:line="376" pos:column="7">break;<pos:position pos:line="376" pos:column="13"/></break>
    <case pos:line="377" pos:column="5">case <expr><literal type="char" pos:line="377" pos:column="10">'r'<pos:position pos:line="377" pos:column="13"/></literal></expr>:<pos:position pos:line="377" pos:column="14"/></case>
      <comment type="block" pos:line="378" pos:column="7">/* byte range requested */</comment>
      <expr_stmt><expr><call><name pos:line="379" pos:column="7">GetStr<pos:position pos:line="379" pos:column="13"/></name><argument_list pos:line="379" pos:column="13">(<argument><expr><operator pos:line="379" pos:column="14">&amp;<pos:position pos:line="379" pos:column="19"/></operator><name><name pos:line="379" pos:column="15">config<pos:position pos:line="379" pos:column="21"/></name><operator pos:line="379" pos:column="21">-&gt;<pos:position pos:line="379" pos:column="26"/></operator><name pos:line="379" pos:column="23">range<pos:position pos:line="379" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="379" pos:column="30">nextarg<pos:position pos:line="379" pos:column="37"/></name></expr></argument>)<pos:position pos:line="379" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="39"/></expr_stmt>
      <break pos:line="380" pos:column="7">break;<pos:position pos:line="380" pos:column="13"/></break>
    <case pos:line="381" pos:column="5">case <expr><literal type="char" pos:line="381" pos:column="10">'s'<pos:position pos:line="381" pos:column="13"/></literal></expr>:<pos:position pos:line="381" pos:column="14"/></case>
      <comment type="block" pos:line="382" pos:column="7">/* don't show progress meter, don't show errors : */</comment>
      <expr_stmt><expr><name><name pos:line="383" pos:column="7">config<pos:position pos:line="383" pos:column="13"/></name><operator pos:line="383" pos:column="13">-&gt;<pos:position pos:line="383" pos:column="18"/></operator><name pos:line="383" pos:column="15">conf<pos:position pos:line="383" pos:column="19"/></name></name> <operator pos:line="383" pos:column="20">|=<pos:position pos:line="383" pos:column="22"/></operator> <operator pos:line="383" pos:column="23">(<pos:position pos:line="383" pos:column="24"/></operator><name pos:line="383" pos:column="24">CONF_MUTE<pos:position pos:line="383" pos:column="33"/></name><operator pos:line="383" pos:column="33">|<pos:position pos:line="383" pos:column="34"/></operator><name pos:line="383" pos:column="34">CONF_NOPROGRESS<pos:position pos:line="383" pos:column="49"/></name><operator pos:line="383" pos:column="49">)<pos:position pos:line="383" pos:column="50"/></operator></expr>;<pos:position pos:line="383" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="384" pos:column="7">config<pos:position pos:line="384" pos:column="13"/></name><operator pos:line="384" pos:column="13">-&gt;<pos:position pos:line="384" pos:column="18"/></operator><name pos:line="384" pos:column="15">showerror<pos:position pos:line="384" pos:column="24"/></name></name> <operator pos:line="384" pos:column="25">^=<pos:position pos:line="384" pos:column="27"/></operator> <name pos:line="384" pos:column="28">TRUE<pos:position pos:line="384" pos:column="32"/></name></expr>;<pos:position pos:line="384" pos:column="33"/></expr_stmt> <comment type="block" pos:line="384" pos:column="34">/* toggle off */</comment>
      <break pos:line="385" pos:column="7">break;<pos:position pos:line="385" pos:column="13"/></break>
    <case pos:line="386" pos:column="5">case <expr><literal type="char" pos:line="386" pos:column="10">'S'<pos:position pos:line="386" pos:column="13"/></literal></expr>:<pos:position pos:line="386" pos:column="14"/></case>
      <comment type="block" pos:line="387" pos:column="7">/* show errors */</comment>
      <expr_stmt><expr><name><name pos:line="388" pos:column="7">config<pos:position pos:line="388" pos:column="13"/></name><operator pos:line="388" pos:column="13">-&gt;<pos:position pos:line="388" pos:column="18"/></operator><name pos:line="388" pos:column="15">showerror<pos:position pos:line="388" pos:column="24"/></name></name> <operator pos:line="388" pos:column="25">^=<pos:position pos:line="388" pos:column="27"/></operator> <name pos:line="388" pos:column="28">TRUE<pos:position pos:line="388" pos:column="32"/></name></expr>;<pos:position pos:line="388" pos:column="33"/></expr_stmt> <comment type="block" pos:line="388" pos:column="34">/* toggle on if used with -s */</comment>
      <break pos:line="389" pos:column="7">break;<pos:position pos:line="389" pos:column="13"/></break>
    <case pos:line="390" pos:column="5">case <expr><literal type="char" pos:line="390" pos:column="10">'t'<pos:position pos:line="390" pos:column="13"/></literal></expr>:<pos:position pos:line="390" pos:column="14"/></case>
      <comment type="block" pos:line="391" pos:column="7">/* we are uploading */</comment>
      <expr_stmt><expr><name><name pos:line="392" pos:column="7">config<pos:position pos:line="392" pos:column="13"/></name><operator pos:line="392" pos:column="13">-&gt;<pos:position pos:line="392" pos:column="18"/></operator><name pos:line="392" pos:column="15">conf<pos:position pos:line="392" pos:column="19"/></name></name> <operator pos:line="392" pos:column="20">^=<pos:position pos:line="392" pos:column="22"/></operator> <name pos:line="392" pos:column="23">CONF_UPLOAD<pos:position pos:line="392" pos:column="34"/></name></expr>;<pos:position pos:line="392" pos:column="35"/></expr_stmt>
      <break pos:line="393" pos:column="7">break;<pos:position pos:line="393" pos:column="13"/></break>
    <case pos:line="394" pos:column="5">case <expr><literal type="char" pos:line="394" pos:column="10">'T'<pos:position pos:line="394" pos:column="13"/></literal></expr>:<pos:position pos:line="394" pos:column="14"/></case>
      <comment type="block" pos:line="395" pos:column="7">/* we are uploading */</comment>
      <expr_stmt><expr><name><name pos:line="396" pos:column="7">config<pos:position pos:line="396" pos:column="13"/></name><operator pos:line="396" pos:column="13">-&gt;<pos:position pos:line="396" pos:column="18"/></operator><name pos:line="396" pos:column="15">conf<pos:position pos:line="396" pos:column="19"/></name></name> <operator pos:line="396" pos:column="20">|=<pos:position pos:line="396" pos:column="22"/></operator> <name pos:line="396" pos:column="23">CONF_UPLOAD<pos:position pos:line="396" pos:column="34"/></name></expr>;<pos:position pos:line="396" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="397" pos:column="7">GetStr<pos:position pos:line="397" pos:column="13"/></name><argument_list pos:line="397" pos:column="13">(<argument><expr><operator pos:line="397" pos:column="14">&amp;<pos:position pos:line="397" pos:column="19"/></operator><name><name pos:line="397" pos:column="15">config<pos:position pos:line="397" pos:column="21"/></name><operator pos:line="397" pos:column="21">-&gt;<pos:position pos:line="397" pos:column="26"/></operator><name pos:line="397" pos:column="23">infile<pos:position pos:line="397" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="31">nextarg<pos:position pos:line="397" pos:column="38"/></name></expr></argument>)<pos:position pos:line="397" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="40"/></expr_stmt>
      <break pos:line="398" pos:column="7">break;<pos:position pos:line="398" pos:column="13"/></break>
    <case pos:line="399" pos:column="5">case <expr><literal type="char" pos:line="399" pos:column="10">'u'<pos:position pos:line="399" pos:column="13"/></literal></expr>:<pos:position pos:line="399" pos:column="14"/></case>
      <comment type="block" pos:line="400" pos:column="7">/* user:password  */</comment>
      <expr_stmt><expr><call><name pos:line="401" pos:column="7">GetStr<pos:position pos:line="401" pos:column="13"/></name><argument_list pos:line="401" pos:column="13">(<argument><expr><operator pos:line="401" pos:column="14">&amp;<pos:position pos:line="401" pos:column="19"/></operator><name><name pos:line="401" pos:column="15">config<pos:position pos:line="401" pos:column="21"/></name><operator pos:line="401" pos:column="21">-&gt;<pos:position pos:line="401" pos:column="26"/></operator><name pos:line="401" pos:column="23">userpwd<pos:position pos:line="401" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="32">nextarg<pos:position pos:line="401" pos:column="39"/></name></expr></argument>)<pos:position pos:line="401" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="41"/></expr_stmt>
      <break pos:line="402" pos:column="7">break;<pos:position pos:line="402" pos:column="13"/></break>
    <case pos:line="403" pos:column="5">case <expr><literal type="char" pos:line="403" pos:column="10">'U'<pos:position pos:line="403" pos:column="13"/></literal></expr>:<pos:position pos:line="403" pos:column="14"/></case>
      <comment type="block" pos:line="404" pos:column="7">/* Proxy user:password  */</comment>
      <expr_stmt><expr><call><name pos:line="405" pos:column="7">GetStr<pos:position pos:line="405" pos:column="13"/></name><argument_list pos:line="405" pos:column="13">(<argument><expr><operator pos:line="405" pos:column="14">&amp;<pos:position pos:line="405" pos:column="19"/></operator><name><name pos:line="405" pos:column="15">config<pos:position pos:line="405" pos:column="21"/></name><operator pos:line="405" pos:column="21">-&gt;<pos:position pos:line="405" pos:column="26"/></operator><name pos:line="405" pos:column="23">proxyuserpwd<pos:position pos:line="405" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="405" pos:column="37">nextarg<pos:position pos:line="405" pos:column="44"/></name></expr></argument>)<pos:position pos:line="405" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="46"/></expr_stmt>
      <break pos:line="406" pos:column="7">break;<pos:position pos:line="406" pos:column="13"/></break>
    <case pos:line="407" pos:column="5">case <expr><literal type="char" pos:line="407" pos:column="10">'v'<pos:position pos:line="407" pos:column="13"/></literal></expr>:<pos:position pos:line="407" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="408" pos:column="7">config<pos:position pos:line="408" pos:column="13"/></name><operator pos:line="408" pos:column="13">-&gt;<pos:position pos:line="408" pos:column="18"/></operator><name pos:line="408" pos:column="15">conf<pos:position pos:line="408" pos:column="19"/></name></name> <operator pos:line="408" pos:column="20">^=<pos:position pos:line="408" pos:column="22"/></operator> <name pos:line="408" pos:column="23">CONF_VERBOSE<pos:position pos:line="408" pos:column="35"/></name></expr>;<pos:position pos:line="408" pos:column="36"/></expr_stmt> <comment type="block" pos:line="408" pos:column="37">/* talk a lot */</comment>
      <break pos:line="409" pos:column="7">break;<pos:position pos:line="409" pos:column="13"/></break>
    <case pos:line="410" pos:column="5">case <expr><literal type="char" pos:line="410" pos:column="10">'V'<pos:position pos:line="410" pos:column="13"/></literal></expr>:<pos:position pos:line="410" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="411" pos:column="7">printf<pos:position pos:line="411" pos:column="13"/></name><argument_list pos:line="411" pos:column="13">(<argument><expr><name pos:line="411" pos:column="14">CURL_ID<pos:position pos:line="411" pos:column="21"/></name> <literal type="string" pos:line="411" pos:column="22">"%s\n"<pos:position pos:line="411" pos:column="28"/></literal></expr></argument>, <argument><expr><call><name pos:line="411" pos:column="30">curl_version<pos:position pos:line="411" pos:column="42"/></name><argument_list pos:line="411" pos:column="42">()<pos:position pos:line="411" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="411" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="46"/></expr_stmt>
      <return pos:line="412" pos:column="7">return <expr><name pos:line="412" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="412" pos:column="31"/></name></expr>;<pos:position pos:line="412" pos:column="32"/></return>
    <case pos:line="413" pos:column="5">case <expr><literal type="char" pos:line="413" pos:column="10">'w'<pos:position pos:line="413" pos:column="13"/></literal></expr>:<pos:position pos:line="413" pos:column="14"/></case>
      <comment type="block" pos:line="414" pos:column="7">/* get the output string */</comment>
      <if pos:line="415" pos:column="7">if<condition pos:line="415" pos:column="9">(<expr><literal type="char" pos:line="415" pos:column="10">'@'<pos:position pos:line="415" pos:column="13"/></literal> <operator pos:line="415" pos:column="14">==<pos:position pos:line="415" pos:column="16"/></operator> <operator pos:line="415" pos:column="17">*<pos:position pos:line="415" pos:column="18"/></operator><name pos:line="415" pos:column="18">nextarg<pos:position pos:line="415" pos:column="25"/></name></expr>)<pos:position pos:line="415" pos:column="26"/></condition><then pos:line="415" pos:column="26"> <block pos:line="415" pos:column="27">{
        <comment type="block" pos:line="416" pos:column="9">/* the data begins with a '@' letter, it means that a file name
           or - (stdin) follows */</comment>
        <decl_stmt><decl><type><name pos:line="418" pos:column="9">FILE<pos:position pos:line="418" pos:column="13"/></name> <modifier pos:line="418" pos:column="14">*<pos:position pos:line="418" pos:column="15"/></modifier></type><name pos:line="418" pos:column="15">file<pos:position pos:line="418" pos:column="19"/></name></decl>;<pos:position pos:line="418" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><name pos:line="419" pos:column="9">nextarg<pos:position pos:line="419" pos:column="16"/></name><operator pos:line="419" pos:column="16">++<pos:position pos:line="419" pos:column="18"/></operator></expr>;<pos:position pos:line="419" pos:column="19"/></expr_stmt> <comment type="block" pos:line="419" pos:column="20">/* pass the @ */</comment>
        <if pos:line="420" pos:column="9">if<condition pos:line="420" pos:column="11">(<expr><call><name pos:line="420" pos:column="12">strequal<pos:position pos:line="420" pos:column="20"/></name><argument_list pos:line="420" pos:column="20">(<argument><expr><literal type="string" pos:line="420" pos:column="21">"-"<pos:position pos:line="420" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="420" pos:column="26">nextarg<pos:position pos:line="420" pos:column="33"/></name></expr></argument>)<pos:position pos:line="420" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="420" pos:column="35"/></condition><then pos:line="420" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="421" pos:column="11">file<pos:position pos:line="421" pos:column="15"/></name> <operator pos:line="421" pos:column="16">=<pos:position pos:line="421" pos:column="17"/></operator> <name pos:line="421" pos:column="18">stdin<pos:position pos:line="421" pos:column="23"/></name></expr>;<pos:position pos:line="421" pos:column="24"/></expr_stmt></block></then>
        <else pos:line="422" pos:column="9">else 
          <block type="pseudo"><expr_stmt><expr><name pos:line="423" pos:column="11">file<pos:position pos:line="423" pos:column="15"/></name> <operator pos:line="423" pos:column="16">=<pos:position pos:line="423" pos:column="17"/></operator> <call><name pos:line="423" pos:column="18">fopen<pos:position pos:line="423" pos:column="23"/></name><argument_list pos:line="423" pos:column="23">(<argument><expr><name pos:line="423" pos:column="24">nextarg<pos:position pos:line="423" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="423" pos:column="33">"r"<pos:position pos:line="423" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="423" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="38"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name><name pos:line="424" pos:column="9">config<pos:position pos:line="424" pos:column="15"/></name><operator pos:line="424" pos:column="15">-&gt;<pos:position pos:line="424" pos:column="20"/></operator><name pos:line="424" pos:column="17">writeout<pos:position pos:line="424" pos:column="25"/></name></name> <operator pos:line="424" pos:column="26">=<pos:position pos:line="424" pos:column="27"/></operator> <call><name pos:line="424" pos:column="28">file2string<pos:position pos:line="424" pos:column="39"/></name><argument_list pos:line="424" pos:column="39">(<argument><expr><name pos:line="424" pos:column="40">file<pos:position pos:line="424" pos:column="44"/></name></expr></argument>)<pos:position pos:line="424" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="46"/></expr_stmt>
        <if pos:line="425" pos:column="9">if<condition pos:line="425" pos:column="11">(<expr><name pos:line="425" pos:column="12">file<pos:position pos:line="425" pos:column="16"/></name> <operator pos:line="425" pos:column="17">&amp;&amp;<pos:position pos:line="425" pos:column="27"/></operator> <operator pos:line="425" pos:column="20">(<pos:position pos:line="425" pos:column="21"/></operator><name pos:line="425" pos:column="21">file<pos:position pos:line="425" pos:column="25"/></name> <operator pos:line="425" pos:column="26">!=<pos:position pos:line="425" pos:column="28"/></operator> <name pos:line="425" pos:column="29">stdin<pos:position pos:line="425" pos:column="34"/></name><operator pos:line="425" pos:column="34">)<pos:position pos:line="425" pos:column="35"/></operator></expr>)<pos:position pos:line="425" pos:column="36"/></condition><then pos:line="425" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="426" pos:column="11">fclose<pos:position pos:line="426" pos:column="17"/></name><argument_list pos:line="426" pos:column="17">(<argument><expr><name pos:line="426" pos:column="18">stdin<pos:position pos:line="426" pos:column="23"/></name></expr></argument>)<pos:position pos:line="426" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="427" pos:column="8"/></block></then>
      <else pos:line="428" pos:column="7">else 
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="429" pos:column="9">GetStr<pos:position pos:line="429" pos:column="15"/></name><argument_list pos:line="429" pos:column="15">(<argument><expr><operator pos:line="429" pos:column="16">&amp;<pos:position pos:line="429" pos:column="21"/></operator><name><name pos:line="429" pos:column="17">config<pos:position pos:line="429" pos:column="23"/></name><operator pos:line="429" pos:column="23">-&gt;<pos:position pos:line="429" pos:column="28"/></operator><name pos:line="429" pos:column="25">writeout<pos:position pos:line="429" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="429" pos:column="35">nextarg<pos:position pos:line="429" pos:column="42"/></name></expr></argument>)<pos:position pos:line="429" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="44"/></expr_stmt></block></else></if>
      <break pos:line="430" pos:column="7">break;<pos:position pos:line="430" pos:column="13"/></break>
    <case pos:line="431" pos:column="5">case <expr><literal type="char" pos:line="431" pos:column="10">'x'<pos:position pos:line="431" pos:column="13"/></literal></expr>:<pos:position pos:line="431" pos:column="14"/></case>
      <comment type="block" pos:line="432" pos:column="7">/* proxy */</comment>
      <expr_stmt><expr><call><name pos:line="433" pos:column="7">GetStr<pos:position pos:line="433" pos:column="13"/></name><argument_list pos:line="433" pos:column="13">(<argument><expr><operator pos:line="433" pos:column="14">&amp;<pos:position pos:line="433" pos:column="19"/></operator><name><name pos:line="433" pos:column="15">config<pos:position pos:line="433" pos:column="21"/></name><operator pos:line="433" pos:column="21">-&gt;<pos:position pos:line="433" pos:column="26"/></operator><name pos:line="433" pos:column="23">proxy<pos:position pos:line="433" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="30">nextarg<pos:position pos:line="433" pos:column="37"/></name></expr></argument>)<pos:position pos:line="433" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="39"/></expr_stmt>
      <break pos:line="434" pos:column="7">break;<pos:position pos:line="434" pos:column="13"/></break>
    <case pos:line="435" pos:column="5">case <expr><literal type="char" pos:line="435" pos:column="10">'X'<pos:position pos:line="435" pos:column="13"/></literal></expr>:<pos:position pos:line="435" pos:column="14"/></case>
      <comment type="block" pos:line="436" pos:column="7">/* HTTP request */</comment>
      <expr_stmt><expr><call><name pos:line="437" pos:column="7">GetStr<pos:position pos:line="437" pos:column="13"/></name><argument_list pos:line="437" pos:column="13">(<argument><expr><operator pos:line="437" pos:column="14">&amp;<pos:position pos:line="437" pos:column="19"/></operator><name><name pos:line="437" pos:column="15">config<pos:position pos:line="437" pos:column="21"/></name><operator pos:line="437" pos:column="21">-&gt;<pos:position pos:line="437" pos:column="26"/></operator><name pos:line="437" pos:column="23">customrequest<pos:position pos:line="437" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="437" pos:column="38">nextarg<pos:position pos:line="437" pos:column="45"/></name></expr></argument>)<pos:position pos:line="437" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="437" pos:column="47"/></expr_stmt>
      <if pos:line="438" pos:column="7">if<condition pos:line="438" pos:column="9">(<expr><call><name pos:line="438" pos:column="10">SetHTTPrequest<pos:position pos:line="438" pos:column="24"/></name><argument_list pos:line="438" pos:column="24">(<argument><expr><name pos:line="438" pos:column="25">HTTPREQ_CUSTOM<pos:position pos:line="438" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="438" pos:column="41">&amp;<pos:position pos:line="438" pos:column="46"/></operator><name><name pos:line="438" pos:column="42">config<pos:position pos:line="438" pos:column="48"/></name><operator pos:line="438" pos:column="48">-&gt;<pos:position pos:line="438" pos:column="53"/></operator><name pos:line="438" pos:column="50">httpreq<pos:position pos:line="438" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="438" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="438" pos:column="59"/></condition><then pos:line="438" pos:column="59">
        <block type="pseudo"><return pos:line="439" pos:column="9">return <expr><name pos:line="439" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="439" pos:column="33"/></name></expr>;<pos:position pos:line="439" pos:column="34"/></return></block></then></if>
      <break pos:line="440" pos:column="7">break;<pos:position pos:line="440" pos:column="13"/></break>
    <case pos:line="441" pos:column="5">case <expr><literal type="char" pos:line="441" pos:column="10">'y'<pos:position pos:line="441" pos:column="13"/></literal></expr>:<pos:position pos:line="441" pos:column="14"/></case>
      <comment type="block" pos:line="442" pos:column="7">/* low speed time */</comment>
      <expr_stmt><expr><name><name pos:line="443" pos:column="7">config<pos:position pos:line="443" pos:column="13"/></name><operator pos:line="443" pos:column="13">-&gt;<pos:position pos:line="443" pos:column="18"/></operator><name pos:line="443" pos:column="15">low_speed_time<pos:position pos:line="443" pos:column="29"/></name></name> <operator pos:line="443" pos:column="30">=<pos:position pos:line="443" pos:column="31"/></operator> <call><name pos:line="443" pos:column="32">atoi<pos:position pos:line="443" pos:column="36"/></name><argument_list pos:line="443" pos:column="36">(<argument><expr><name pos:line="443" pos:column="37">nextarg<pos:position pos:line="443" pos:column="44"/></name></expr></argument>)<pos:position pos:line="443" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="46"/></expr_stmt>
      <if pos:line="444" pos:column="7">if<condition pos:line="444" pos:column="9">(<expr><operator pos:line="444" pos:column="10">!<pos:position pos:line="444" pos:column="11"/></operator><name><name pos:line="444" pos:column="11">config<pos:position pos:line="444" pos:column="17"/></name><operator pos:line="444" pos:column="17">-&gt;<pos:position pos:line="444" pos:column="22"/></operator><name pos:line="444" pos:column="19">low_speed_limit<pos:position pos:line="444" pos:column="34"/></name></name></expr>)<pos:position pos:line="444" pos:column="35"/></condition><then pos:line="444" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="445" pos:column="9">config<pos:position pos:line="445" pos:column="15"/></name><operator pos:line="445" pos:column="15">-&gt;<pos:position pos:line="445" pos:column="20"/></operator><name pos:line="445" pos:column="17">low_speed_limit<pos:position pos:line="445" pos:column="32"/></name></name> <operator pos:line="445" pos:column="33">=<pos:position pos:line="445" pos:column="34"/></operator> <literal type="number" pos:line="445" pos:column="35">1<pos:position pos:line="445" pos:column="36"/></literal></expr>;<pos:position pos:line="445" pos:column="37"/></expr_stmt></block></then></if>
      <break pos:line="446" pos:column="7">break;<pos:position pos:line="446" pos:column="13"/></break>
    <case pos:line="447" pos:column="5">case <expr><literal type="char" pos:line="447" pos:column="10">'Y'<pos:position pos:line="447" pos:column="13"/></literal></expr>:<pos:position pos:line="447" pos:column="14"/></case>
      <comment type="block" pos:line="448" pos:column="7">/* low speed limit */</comment>
      <expr_stmt><expr><name><name pos:line="449" pos:column="7">config<pos:position pos:line="449" pos:column="13"/></name><operator pos:line="449" pos:column="13">-&gt;<pos:position pos:line="449" pos:column="18"/></operator><name pos:line="449" pos:column="15">low_speed_limit<pos:position pos:line="449" pos:column="30"/></name></name> <operator pos:line="449" pos:column="31">=<pos:position pos:line="449" pos:column="32"/></operator> <call><name pos:line="449" pos:column="33">atoi<pos:position pos:line="449" pos:column="37"/></name><argument_list pos:line="449" pos:column="37">(<argument><expr><name pos:line="449" pos:column="38">nextarg<pos:position pos:line="449" pos:column="45"/></name></expr></argument>)<pos:position pos:line="449" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="47"/></expr_stmt>
      <if pos:line="450" pos:column="7">if<condition pos:line="450" pos:column="9">(<expr><operator pos:line="450" pos:column="10">!<pos:position pos:line="450" pos:column="11"/></operator><name><name pos:line="450" pos:column="11">config<pos:position pos:line="450" pos:column="17"/></name><operator pos:line="450" pos:column="17">-&gt;<pos:position pos:line="450" pos:column="22"/></operator><name pos:line="450" pos:column="19">low_speed_time<pos:position pos:line="450" pos:column="33"/></name></name></expr>)<pos:position pos:line="450" pos:column="34"/></condition><then pos:line="450" pos:column="34">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="451" pos:column="9">config<pos:position pos:line="451" pos:column="15"/></name><operator pos:line="451" pos:column="15">-&gt;<pos:position pos:line="451" pos:column="20"/></operator><name pos:line="451" pos:column="17">low_speed_time<pos:position pos:line="451" pos:column="31"/></name></name><operator pos:line="451" pos:column="31">=<pos:position pos:line="451" pos:column="32"/></operator><literal type="number" pos:line="451" pos:column="32">30<pos:position pos:line="451" pos:column="34"/></literal></expr>;<pos:position pos:line="451" pos:column="35"/></expr_stmt></block></then></if>
      <break pos:line="452" pos:column="7">break;<pos:position pos:line="452" pos:column="13"/></break>

    <default pos:line="454" pos:column="5">default:<pos:position pos:line="454" pos:column="13"/></default> <comment type="block" pos:line="454" pos:column="14">/* unknown flag */</comment>
      <if pos:line="455" pos:column="7">if<condition pos:line="455" pos:column="9">(<expr><name pos:line="455" pos:column="10">letter<pos:position pos:line="455" pos:column="16"/></name></expr>)<pos:position pos:line="455" pos:column="17"/></condition><then pos:line="455" pos:column="17">	
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="456" pos:column="9">helpf<pos:position pos:line="456" pos:column="14"/></name><argument_list pos:line="456" pos:column="14">(<argument><expr><literal type="string" pos:line="456" pos:column="15">"Unknown option '%c'\n"<pos:position pos:line="456" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="456" pos:column="40">letter<pos:position pos:line="456" pos:column="46"/></name></expr></argument>)<pos:position pos:line="456" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="48"/></expr_stmt></block></then>
      <else pos:line="457" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="458" pos:column="9">helpf<pos:position pos:line="458" pos:column="14"/></name><argument_list pos:line="458" pos:column="14">(<argument><expr><literal type="string" pos:line="458" pos:column="15">"Unknown option\n"<pos:position pos:line="458" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="458" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="35"/></expr_stmt></block></else></if> <comment type="block" pos:line="458" pos:column="36">/* short help blurb */</comment>
      <return pos:line="459" pos:column="7">return <expr><name pos:line="459" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="459" pos:column="31"/></name></expr>;<pos:position pos:line="459" pos:column="32"/></return>
    }<pos:position pos:line="460" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="461" pos:column="5">hit<pos:position pos:line="461" pos:column="8"/></name> <operator pos:line="461" pos:column="9">=<pos:position pos:line="461" pos:column="10"/></operator> <operator pos:line="461" pos:column="11">-<pos:position pos:line="461" pos:column="12"/></operator><literal type="number" pos:line="461" pos:column="12">1<pos:position pos:line="461" pos:column="13"/></literal></expr>;<pos:position pos:line="461" pos:column="14"/></expr_stmt>

  }<pos:position pos:line="463" pos:column="4"/></block> while<condition pos:line="463" pos:column="10">(<expr><operator pos:line="463" pos:column="11">*<pos:position pos:line="463" pos:column="12"/></operator><operator pos:line="463" pos:column="12">++<pos:position pos:line="463" pos:column="14"/></operator><name pos:line="463" pos:column="14">parse<pos:position pos:line="463" pos:column="19"/></name> <operator pos:line="463" pos:column="20">&amp;&amp;<pos:position pos:line="463" pos:column="30"/></operator> <operator pos:line="463" pos:column="23">!<pos:position pos:line="463" pos:column="24"/></operator><operator pos:line="463" pos:column="24">*<pos:position pos:line="463" pos:column="25"/></operator><name pos:line="463" pos:column="25">usedarg<pos:position pos:line="463" pos:column="32"/></name></expr>)<pos:position pos:line="463" pos:column="33"/></condition>;<pos:position pos:line="463" pos:column="34"/></do>

  <return pos:line="465" pos:column="3">return <expr><name pos:line="465" pos:column="10">CURLE_OK<pos:position pos:line="465" pos:column="18"/></name></expr>;<pos:position pos:line="465" pos:column="19"/></return>
}<pos:position pos:line="466" pos:column="2"/></block></function></unit>

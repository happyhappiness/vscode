<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_421_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_wait_for_resolv<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">Curl_dns_entry<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">entry<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">thread_data<pos:position pos:line="4" pos:column="21"/></name></name>   <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">td<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator>struct <name pos:line="4" pos:column="38">thread_data<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></operator><operator pos:line="4" pos:column="50">)<pos:position pos:line="4" pos:column="51"/></operator> <name><name pos:line="4" pos:column="52">conn<pos:position pos:line="4" pos:column="56"/></name><operator pos:line="4" pos:column="56">-&gt;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="58">async<pos:position pos:line="4" pos:column="63"/></name><operator pos:line="4" pos:column="63">.<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="64">os_specific<pos:position pos:line="4" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">long<pos:position pos:line="6" pos:column="7"/></name></type>   <name pos:line="6" pos:column="10">timeout<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">DWORD<pos:position pos:line="7" pos:column="8"/></name></type>  <name pos:line="7" pos:column="10">status<pos:position pos:line="7" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="18">ticks<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">rc<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUGASSERT<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">conn<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="23">td<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* now, see if there's a connect timeout or a regular timeout to
     use instead of the default one */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">timeout<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator>
    <ternary><condition><expr><name><name pos:line="15" pos:column="5">conn<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">data<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">set<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">connecttimeout<pos:position pos:line="15" pos:column="35"/></name></name></expr> ?<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37"> <expr><name><name pos:line="15" pos:column="38">conn<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">data<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">set<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">.<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">connecttimeout<pos:position pos:line="15" pos:column="68"/></name></name></expr> <pos:position pos:line="15" pos:column="69"/></then><else pos:line="15" pos:column="69">:
    <expr><ternary><condition><expr><name><name pos:line="16" pos:column="5">conn<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">data<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">set<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">timeout<pos:position pos:line="16" pos:column="28"/></name></name></expr> ?<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <expr><name><name pos:line="16" pos:column="31">conn<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">data<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">set<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">timeout<pos:position pos:line="16" pos:column="54"/></name></name></expr> <pos:position pos:line="16" pos:column="55"/></then><else pos:line="16" pos:column="55">:
    <expr><name pos:line="17" pos:column="5">CURL_TIMEOUT_RESOLVE<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1000<pos:position pos:line="17" pos:column="32"/></literal></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt> <comment type="block" pos:line="17" pos:column="34">/* default name resolve timeout */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">ticks<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">GetTickCount<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* wait for the thread to resolve the name */</comment>
  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">WaitForSingleObject<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name><name pos:line="21" pos:column="32">td<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">event_resolved<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">timeout<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* mark that we are now done waiting */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">ReleaseMutex<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name><name pos:line="24" pos:column="16">td<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">mutex_waiting<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* close our handle to the mutex, no point in hanging on to it */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">CloseHandle<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">td<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">mutex_waiting<pos:position pos:line="27" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">td<pos:position pos:line="28" pos:column="5"/></name><operator pos:line="28" pos:column="5">-&gt;<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="7">mutex_waiting<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">NULL<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="30" pos:column="3">/* close the event handle, it's useless now */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">CloseHandle<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name><name pos:line="31" pos:column="15">td<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">event_resolved<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">td<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">event_resolved<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">NULL<pos:position pos:line="32" pos:column="28"/></name></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* has the resolver thread succeeded in resolving our query ? */</comment>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">status<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">==<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">WAIT_OBJECT_0<pos:position pos:line="35" pos:column="29"/></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
    <comment type="block" pos:line="36" pos:column="5">/* wait for the thread to exit, it's in the callback sequence */</comment>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><call><name pos:line="37" pos:column="8">WaitForSingleObject<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name><name pos:line="37" pos:column="28">td<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">thread_hnd<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="44">5000<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call> <operator pos:line="37" pos:column="50">==<pos:position pos:line="37" pos:column="52"/></operator> <name pos:line="37" pos:column="53">WAIT_TIMEOUT<pos:position pos:line="37" pos:column="65"/></name></expr>)<pos:position pos:line="37" pos:column="66"/></condition><then pos:line="37" pos:column="66"> <block pos:line="37" pos:column="67">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">TerminateThread<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name><name pos:line="38" pos:column="23">td<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">thread_hnd<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="39">0<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">conn<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">async<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">done<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">TRUE<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">td<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">thread_status<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="27">(<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">DWORD<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator><operator pos:line="40" pos:column="34">-<pos:position pos:line="40" pos:column="35"/></operator><literal type="number" pos:line="40" pos:column="35">1<pos:position pos:line="40" pos:column="36"/></literal></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">TRACE<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><literal type="string" pos:line="41" pos:column="14">"%s() thread stuck?!, "<pos:position pos:line="41" pos:column="37"/></literal><operator pos:line="41" pos:column="37">,<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="39">THREAD_NAME<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
      <comment type="block" pos:line="44" pos:column="7">/* Thread finished before timeout; propagate Winsock error to this
       * thread.  'conn-&gt;async.done = TRUE' is set in
       * Curl_addrinfo4/6_callback().
       */</comment>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">SET_SOCKERRNO<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name><name pos:line="48" pos:column="21">conn<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">async<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">status<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">GetExitCodeThread<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name><name pos:line="49" pos:column="25">td<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">thread_hnd<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="41">&amp;<pos:position pos:line="49" pos:column="46"/></operator><name><name pos:line="49" pos:column="42">td<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">thread_status<pos:position pos:line="49" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">TRACE<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><literal type="string" pos:line="50" pos:column="14">"%s() status %lu, thread retval %lu, "<pos:position pos:line="50" pos:column="52"/></literal><operator pos:line="50" pos:column="52">,<pos:position pos:line="50" pos:column="53"/></operator>
             <name pos:line="51" pos:column="14">THREAD_NAME<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">,<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">status<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">,<pos:position pos:line="51" pos:column="34"/></operator> <name><name pos:line="51" pos:column="35">td<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">thread_status<pos:position pos:line="51" pos:column="52"/></name></name><operator pos:line="51" pos:column="52">)<pos:position pos:line="51" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then>
  <else pos:line="54" pos:column="3">else <block pos:line="54" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">conn<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">async<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">.<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">done<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">TRUE<pos:position pos:line="55" pos:column="28"/></name></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">td<pos:position pos:line="56" pos:column="7"/></name><operator pos:line="56" pos:column="7">-&gt;<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="9">thread_status<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">DWORD<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">)<pos:position pos:line="56" pos:column="32"/></operator><operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator><literal type="number" pos:line="56" pos:column="33">1<pos:position pos:line="56" pos:column="34"/></literal></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">TRACE<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><operator pos:line="57" pos:column="11">(<pos:position pos:line="57" pos:column="12"/></operator><literal type="string" pos:line="57" pos:column="12">"%s() timeout, "<pos:position pos:line="57" pos:column="28"/></literal><operator pos:line="57" pos:column="28">,<pos:position pos:line="57" pos:column="29"/></operator> <name pos:line="57" pos:column="30">THREAD_NAME<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">)<pos:position pos:line="57" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">TRACE<pos:position pos:line="60" pos:column="8"/></name><argument_list pos:line="60" pos:column="8">(<argument><expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><literal type="string" pos:line="60" pos:column="10">"elapsed %lu ms\n"<pos:position pos:line="60" pos:column="28"/></literal><operator pos:line="60" pos:column="28">,<pos:position pos:line="60" pos:column="29"/></operator> <call><name pos:line="60" pos:column="30">GetTickCount<pos:position pos:line="60" pos:column="42"/></name><argument_list pos:line="60" pos:column="42">()<pos:position pos:line="60" pos:column="44"/></argument_list></call><operator pos:line="60" pos:column="44">-<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">ticks<pos:position pos:line="60" pos:column="50"/></name><operator pos:line="60" pos:column="50">)<pos:position pos:line="60" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt>

  <if pos:line="62" pos:column="3">if<condition pos:line="62" pos:column="5">(<expr><name pos:line="62" pos:column="6">entry<pos:position pos:line="62" pos:column="11"/></name></expr>)<pos:position pos:line="62" pos:column="12"/></condition><then pos:line="62" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="63" pos:column="5">*<pos:position pos:line="63" pos:column="6"/></operator><name pos:line="63" pos:column="6">entry<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <name><name pos:line="63" pos:column="14">conn<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">async<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">.<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">dns<pos:position pos:line="63" pos:column="29"/></name></name></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="65" pos:column="3">rc<pos:position pos:line="65" pos:column="5"/></name> <operator pos:line="65" pos:column="6">=<pos:position pos:line="65" pos:column="7"/></operator> <name pos:line="65" pos:column="8">CURLE_OK<pos:position pos:line="65" pos:column="16"/></name></expr>;<pos:position pos:line="65" pos:column="17"/></expr_stmt>

  <if pos:line="67" pos:column="3">if<condition pos:line="67" pos:column="5">(<expr><operator pos:line="67" pos:column="6">!<pos:position pos:line="67" pos:column="7"/></operator><name><name pos:line="67" pos:column="7">conn<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">async<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">.<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="19">dns<pos:position pos:line="67" pos:column="22"/></name></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> <block pos:line="67" pos:column="24">{
    <comment type="block" pos:line="68" pos:column="5">/* a name was not resolved */</comment>
    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">(<expr><name><name pos:line="69" pos:column="8">td<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">thread_status<pos:position pos:line="69" pos:column="25"/></name></name> <operator pos:line="69" pos:column="26">==<pos:position pos:line="69" pos:column="28"/></operator> <name pos:line="69" pos:column="29">CURLE_OUT_OF_MEMORY<pos:position pos:line="69" pos:column="48"/></name></expr>)<pos:position pos:line="69" pos:column="49"/></condition><then pos:line="69" pos:column="49"> <block pos:line="69" pos:column="50">{
      <expr_stmt><expr><name pos:line="70" pos:column="7">rc<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <name pos:line="70" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="70" pos:column="31"/></name></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">failf<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">data<pos:position pos:line="71" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="19">"Could not resolve host: %s"<pos:position pos:line="71" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="49">curl_easy_strerror<pos:position pos:line="71" pos:column="67"/></name><argument_list pos:line="71" pos:column="67">(<argument><expr><name pos:line="71" pos:column="68">rc<pos:position pos:line="71" pos:column="70"/></name></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <elseif pos:line="73" pos:column="5">else <if pos:line="73" pos:column="10">if<condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">conn<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">async<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">.<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="25">done<pos:position pos:line="73" pos:column="29"/></name></name></expr>)<pos:position pos:line="73" pos:column="30"/></condition><then pos:line="73" pos:column="30"> <block pos:line="73" pos:column="31">{
      <if pos:line="74" pos:column="7">if<condition pos:line="74" pos:column="9">(<expr><name><name pos:line="74" pos:column="10">conn<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">bits<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">.<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">httpproxy<pos:position pos:line="74" pos:column="30"/></name></name></expr>)<pos:position pos:line="74" pos:column="31"/></condition><then pos:line="74" pos:column="31"> <block pos:line="74" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">failf<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">data<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="21">"Could not resolve proxy: %s; %s"<pos:position pos:line="75" pos:column="54"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="76" pos:column="15">conn<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">proxy<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">.<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="27">dispname<pos:position pos:line="76" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="37">Curl_strerror<pos:position pos:line="76" pos:column="50"/></name><argument_list pos:line="76" pos:column="50">(<argument><expr><name pos:line="76" pos:column="51">conn<pos:position pos:line="76" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="57">conn<pos:position pos:line="76" pos:column="61"/></name><operator pos:line="76" pos:column="61">-&gt;<pos:position pos:line="76" pos:column="66"/></operator><name pos:line="76" pos:column="63">async<pos:position pos:line="76" pos:column="68"/></name><operator pos:line="76" pos:column="68">.<pos:position pos:line="76" pos:column="69"/></operator><name pos:line="76" pos:column="69">status<pos:position pos:line="76" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><name pos:line="77" pos:column="9">rc<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <name pos:line="77" pos:column="14">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="77" pos:column="41"/></name></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="78" pos:column="8"/></block></then>
      <else pos:line="79" pos:column="7">else <block pos:line="79" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">failf<pos:position pos:line="80" pos:column="14"/></name><argument_list pos:line="80" pos:column="14">(<argument><expr><name pos:line="80" pos:column="15">data<pos:position pos:line="80" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="21">"Could not resolve host: %s; %s"<pos:position pos:line="80" pos:column="53"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="81" pos:column="15">conn<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">-&gt;<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="21">host<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">.<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="26">name<pos:position pos:line="81" pos:column="30"/></name></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="32">Curl_strerror<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name pos:line="81" pos:column="46">conn<pos:position pos:line="81" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="52">conn<pos:position pos:line="81" pos:column="56"/></name><operator pos:line="81" pos:column="56">-&gt;<pos:position pos:line="81" pos:column="61"/></operator><name pos:line="81" pos:column="58">async<pos:position pos:line="81" pos:column="63"/></name><operator pos:line="81" pos:column="63">.<pos:position pos:line="81" pos:column="64"/></operator><name pos:line="81" pos:column="64">status<pos:position pos:line="81" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="82" pos:column="9">rc<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">=<pos:position pos:line="82" pos:column="13"/></operator> <name pos:line="82" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="82" pos:column="40"/></name></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="83" pos:column="8"/></block></else></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="85" pos:column="5">else <if pos:line="85" pos:column="10">if<condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">td<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">-&gt;<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="17">thread_status<pos:position pos:line="85" pos:column="30"/></name></name> <operator pos:line="85" pos:column="31">==<pos:position pos:line="85" pos:column="33"/></operator> <operator pos:line="85" pos:column="34">(<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="35">DWORD<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">)<pos:position pos:line="85" pos:column="41"/></operator><operator pos:line="85" pos:column="41">-<pos:position pos:line="85" pos:column="42"/></operator><literal type="number" pos:line="85" pos:column="42">1<pos:position pos:line="85" pos:column="43"/></literal> <operator pos:line="85" pos:column="44">||<pos:position pos:line="85" pos:column="46"/></operator> <name><name pos:line="85" pos:column="47">conn<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">-&gt;<pos:position pos:line="85" pos:column="56"/></operator><name pos:line="85" pos:column="53">async<pos:position pos:line="85" pos:column="58"/></name><operator pos:line="85" pos:column="58">.<pos:position pos:line="85" pos:column="59"/></operator><name pos:line="85" pos:column="59">status<pos:position pos:line="85" pos:column="65"/></name></name> <operator pos:line="85" pos:column="66">==<pos:position pos:line="85" pos:column="68"/></operator> <name pos:line="85" pos:column="69">NO_DATA<pos:position pos:line="85" pos:column="76"/></name></expr>)<pos:position pos:line="85" pos:column="77"/></condition><then pos:line="85" pos:column="77"> <block pos:line="85" pos:column="78">{
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">failf<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">data<pos:position pos:line="86" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="19">"Resolving host timed out: %s"<pos:position pos:line="86" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="51">conn<pos:position pos:line="86" pos:column="55"/></name><operator pos:line="86" pos:column="55">-&gt;<pos:position pos:line="86" pos:column="60"/></operator><name pos:line="86" pos:column="57">host<pos:position pos:line="86" pos:column="61"/></name><operator pos:line="86" pos:column="61">.<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="62">name<pos:position pos:line="86" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><name pos:line="87" pos:column="7">rc<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <name pos:line="87" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="87" pos:column="36"/></name></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif>
    <else pos:line="89" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="7">rc<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <name pos:line="90" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="90" pos:column="36"/></name></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt></block></else></if>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="93" pos:column="3">Curl_destroy_thread_data<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><operator pos:line="93" pos:column="28">&amp;<pos:position pos:line="93" pos:column="33"/></operator><name><name pos:line="93" pos:column="29">conn<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">-&gt;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="35">async<pos:position pos:line="93" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>

  <if pos:line="95" pos:column="3">if<condition pos:line="95" pos:column="5">(<expr><operator pos:line="95" pos:column="6">!<pos:position pos:line="95" pos:column="7"/></operator><name><name pos:line="95" pos:column="7">conn<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">async<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">.<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="19">dns<pos:position pos:line="95" pos:column="22"/></name></name></expr>)<pos:position pos:line="95" pos:column="23"/></condition><then pos:line="95" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="96" pos:column="5">conn<pos:position pos:line="96" pos:column="9"/></name><operator pos:line="96" pos:column="9">-&gt;<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="11">bits<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">.<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">close<pos:position pos:line="96" pos:column="21"/></name></name> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="24">TRUE<pos:position pos:line="96" pos:column="28"/></name></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt></block></then></if>

  <return pos:line="98" pos:column="3">return <expr><operator pos:line="98" pos:column="10">(<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="11">rc<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">)<pos:position pos:line="98" pos:column="14"/></operator></expr>;<pos:position pos:line="98" pos:column="15"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

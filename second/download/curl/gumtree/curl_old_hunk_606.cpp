"     stop'  (optionally  with  one  of  the  numbers omitted). It\n"
"     depends on the non-RFC command SIZE.\n"
"\n"
"     -s/--silent\n"
"          Silent mode. Don't show progress meter  or  error  mes­\n"
"          sages.  Makes Curl mute.\n"
"     -S/--show-error\n"
"          When  used  with -s it makes curl show error message if\n"
"          it fails.\n"
"\n"
"     -t/--upload\n"
"          Transfer the stdin data to  the  specified  file.  Curl\n"
"          will  read  everything  from  stdin until EOF and store\n"
"          with the supplied name. If this is used  on  a  http(s)\n"
"          server, the PUT command will be used.\n"
"\n"
"     -T/--upload-file <file>\n"
"          Like  -t,  but this transfers the specified local file.\n"
"          If there is no file part in  the  specified  URL,  Curl\n"
"          will append the local file name. NOTE that you must use\n"
"          a trailing / on the last directory to really  prove  to\n"
"          Curl that there is no file name or curl will think that\n"
"          your last directory name is the  remote  file  name  to\n"
"          use.  That  will most likely cause the upload operation\n"
"          to fail. If this is used on a http(s) server,  the  PUT\n"
"          command will be used.\n"
"\n"
"     -u/--user <user:password>\n"
"          Specify  user  and  password  to use when fetching. See\n"
"          README.curl for detailed examples of how to  use  this.\n"
"          If  no  password  is  specified,  curl  will ask for it\n"
"          interactively.\n"
"\n"
"     -U/--proxy-user <user:password>\n"
"          Specify user and password to use for Proxy  authentica­\n"
"          tion. If no password is specified, curl will ask for it\n"
"          interactively.\n"
"\n"
"     -v/--verbose\n"
"          Makes  the  fetching  more  verbose/talkative.   Mostly\n"
"          usable  for  debugging.  Lines  starting with '>' means\n"
"          data sent by curl, '<' means data received by curl that\n"
"          is  hidden  in normal cases and lines starting with '*'\n"
"          means additional info provided by curl.\n"
"\n"
"     -V/--version\n"
"          Displays the full version of curl,  libcurl  and  other\n"
"          3rd party libraries linked with the executable.\n"
"\n"
"     -w/--write-out <format>\n"
"          Defines  what to display after a completed and success­\n"
"          ful operation. The format is a string that may  contain\n"
"          plain  text  mixed  with  any  number of variables. The\n"
"          string can be specified as \"string\", to get read from a\n"
"          particular  file you specify it \"@filename\" and to tell\n"
"          curl to read the format from stdin you write \"@-\".\n"
"\n"
"          The variables present in  the  output  format  will  be\n"
"          substituted  by the value or text that curl thinks fit,\n"
"          as described below. All variables  are  specified  like\n"
"          %{variable_name}  and  to  output  a  normal % you just\n"
"          write them like %%. You can output a newline  by  using\n"
"          \\n, a carrige return with \\r and a tab space with \\t.\n"
"\n"
"          NOTE:   The   %-letter  is  a  special  letter  in  the\n"
"          win32-environment, where all occurrences of %  must  be\n"
"          doubled when using this option.\n"
"\n"
"          Available variables are at this point:\n"
"\n"
"          url_effective  The  URL  that was fetched last. This is\n"
"                         mostly meaningful if you've told curl to\n"
"                         follow location: headers.\n"
"\n"
"          http_code      The numerical code that was found in the\n"
"                         last retrieved HTTP(S) page.\n"
"\n"
"          time_total     The total time,  in  seconds,  that  the\n"
"                         full  operation lasted. The time will be\n"
"                         displayed with millisecond resolution.\n"
"\n"
"          time_namelookup\n"
"                         The time, in seconds, it took  from  the\n"
"                         start  until the name resolving was com­\n"
"                         pleted.\n"
"\n"
"          time_connect   The time, in seconds, it took  from  the\n"
"                         start  until  the  connect to the remote\n"
"                         host (or proxy) was completed.\n"
"\n"
"          time_pretransfer\n"
"                         The time, in seconds, it took  from  the\n"
"                         start  until  the  file transfer is just\n"
"                         about to begin. This includes  all  pre-\n"
"                         transfer  commands and negotiations that\n"
"                         are specific to  the  particular  proto­\n"
"                         col(s) involved.\n"
);
 puts(
"\n"
"          size_download  The  total  amount  of  bytes  that were\n"
"                         downloaded.\n"
"\n"
"          size_upload    The total  amount  of  bytes  that  were\n"
"                         uploaded.\n"
"\n"
"          speed_download The  average  download  speed  that curl\n"
"                         measured for the complete download.\n"
"\n"
"          speed_upload   The average upload speed that curl  mea­\n"
"                         sured for the complete download.\n"
"     -x/--proxy <proxyhost[:port]>\n"
"          Use  specified  proxy. If the port number is not speci­\n"
"          fied, it is assumed at port 1080.\n"
"\n"
"     -X/--request <command>\n"
"          (HTTP) Specifies a custom request to use when  communi­\n"
"          cating  with  the  HTTP  server.  The specified request\n"
"          will be used instead of the standard GET. Read the HTTP\n"
"          1.1 specification for details and explanations.\n"
"\n"
"          (FTP)  Specifies a custom FTP command to use instead of\n"
"          LIST when doing file lists with ftp.\n"
"\n"
"     -y/--speed-time <time>\n"
"          If a download is slower than speed-limit bytes per sec­\n"
"          ond  during  a  speed-time  period,  the  download gets\n"
"          aborted. If speed-time is used, the default speed-limit\n"
"          will be 1 unless set with -y.\n"
"\n"
"     -Y/--speed-limit <speed>\n"
"          If a download is slower than this given speed, in bytes\n"
"          per second, for speed-time  seconds  it  gets  aborted.\n"
"          speed-time is set with -Y and is 30 if not set.\n"
"\n"
"     -z/--time-cond <date expression>\n"
"          (HTTP)  Request  to  get  a file that has been modified\n"
"          later than the given time and date,  or  one  that  has\n"
"          been modified before that time. The date expression can\n"
"          be all sorts of date strings or if it doesn't match any\n"
"          internal  ones,  it  tries to get the time from a given\n"
"          file name instead! See the  GNU  date(1)  or  curl_get­\n"
"          date(3) man pages for date expression details.\n"
"\n"
"          Start  the  date  expression with a dash (-) to make it\n"
"          request for a document that is  older  than  the  given\n"
"          date/time, default is a document that is newer than the\n"
"          specified date/time.\n"
"\n"
"     -3/--sslv3\n"
"          (HTTPS) Forces curl to use SSL version 3 when negotiat­\n"
"          ing with a remote SSL server.\n"
"\n"
"     -2/--sslv2\n"
"          (HTTPS) Forces curl to use SSL version 2 when negotiat­\n"
"          ing with a remote SSL server.\n"
"\n"
"     -#/--progress-bar\n"
"          Make curl display progress information  as  a  progress\n"
"          bar instead of the default statistics.\n"
"\n"
"     --crlf\n"
"          (FTP)  Convert  LF  to  CRLF  in upload. Useful for MVS\n"
"          (OS/390).\n"
"\n"
"     --stderr <file>\n"
"          Redirect all writes to stderr  to  the  specified  file\n"
"          instead. If the file name is a plain '-', it is instead\n"
"          written to stdout. This option has no point when you're\n"
"          using a shell with decent redirecting capabilities.\n"
"\n"
"FILES\n"
"     ~/.curlrc\n"

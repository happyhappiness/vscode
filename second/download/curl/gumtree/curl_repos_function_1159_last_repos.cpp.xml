<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1159_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_perform_login<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">user<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">passwd<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Check we have a username and password to authenticate with and end the
     connect phase if we don't */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name><name pos:line="9" pos:column="7">conn<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">bits<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">user_passwd<pos:position pos:line="9" pos:column="29"/></name></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <block pos:line="9" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">state<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">conn<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">IMAP_STOP<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">result<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* Make sure the username and password are in the correct atom format */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">user<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">imap_atom<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">conn<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">user<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="16" pos:column="32">false<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">passwd<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">imap_atom<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">conn<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">passwd<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="17" pos:column="36">false<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Send the LOGIN command */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">result<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">imap_sendf<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">conn<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">"LOGIN %s %s"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="20" pos:column="44">user<pos:position pos:line="20" pos:column="48"/></name></expr> ?<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50"> <expr><name pos:line="20" pos:column="51">user<pos:position pos:line="20" pos:column="55"/></name></expr> <pos:position pos:line="20" pos:column="56"/></then><else pos:line="20" pos:column="56">: <expr><literal type="string" pos:line="20" pos:column="58">""<pos:position pos:line="20" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="23">passwd<pos:position pos:line="21" pos:column="29"/></name></expr> ?<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <expr><name pos:line="21" pos:column="32">passwd<pos:position pos:line="21" pos:column="38"/></name></expr> <pos:position pos:line="21" pos:column="39"/></then><else pos:line="21" pos:column="39">: <expr><literal type="string" pos:line="21" pos:column="41">""<pos:position pos:line="21" pos:column="43"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">free<pos:position pos:line="23" pos:column="7"/></name><argument_list pos:line="23" pos:column="7">(<argument><expr><name pos:line="23" pos:column="8">user<pos:position pos:line="23" pos:column="12"/></name></expr></argument>)<pos:position pos:line="23" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">free<pos:position pos:line="24" pos:column="7"/></name><argument_list pos:line="24" pos:column="7">(<argument><expr><name pos:line="24" pos:column="8">passwd<pos:position pos:line="24" pos:column="14"/></name></expr></argument>)<pos:position pos:line="24" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">result<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">state<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">conn<pos:position pos:line="27" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="17">IMAP_LOGIN<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">result<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

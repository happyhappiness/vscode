<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1345_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_splayremovebyaddr<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">Curl_tree<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">t<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                           <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">Curl_tree<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">removenode<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                           <parameter><decl><type><name><name pos:line="3" pos:column="28">struct<pos:position pos:line="3" pos:column="34"/></name> <name pos:line="3" pos:column="35">Curl_tree<pos:position pos:line="3" pos:column="44"/></name></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">newroot<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">curltime<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">KEY_NOTUSED<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><block pos:line="5" pos:column="46">{
    <expr><operator pos:line="6" pos:column="5">(<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">time_t<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">)<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr>, <expr><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">unsigned<pos:position pos:line="6" pos:column="26"/></name> <name pos:line="6" pos:column="27">int<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">-<pos:position pos:line="6" pos:column="32"/></operator><literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr>
  }<pos:position pos:line="7" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="5"/></decl_stmt> <comment type="block" pos:line="7" pos:column="6">/* will *NEVER* appear */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_tree<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">x<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">t<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">||<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">removenode<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><call><name pos:line="13" pos:column="6">compare<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">KEY_NOTUSED<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="27">removenode<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">key<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call> <operator pos:line="13" pos:column="44">==<pos:position pos:line="13" pos:column="46"/></operator> <literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <block pos:line="13" pos:column="50">{
    <comment type="block" pos:line="14" pos:column="5">/* Key set to NOTUSED means it is a subnode within a 'same' linked list
       and thus we can unlink it easily. */</comment>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name><name pos:line="16" pos:column="8">removenode<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">samen<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">removenode<pos:position pos:line="16" pos:column="39"/></name></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40">
      <comment type="block" pos:line="17" pos:column="7">/* A non-subnode should never be set to KEY_NOTUSED */</comment>
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><literal type="number" pos:line="18" pos:column="14">3<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">removenode<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">samep<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">samen<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">removenode<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">samen<pos:position pos:line="20" pos:column="49"/></name></name></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">removenode<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">samen<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">samep<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name><name pos:line="21" pos:column="32">removenode<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">samep<pos:position pos:line="21" pos:column="49"/></name></name></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Ensures that double-remove gets caught. */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">removenode<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">samen<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">removenode<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="26" pos:column="5">*<pos:position pos:line="26" pos:column="6"/></operator><name pos:line="26" pos:column="6">newroot<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">t<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt> <comment type="block" pos:line="26" pos:column="19">/* return the same root */</comment>
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">t<pos:position pos:line="30" pos:column="4"/></name> <operator pos:line="30" pos:column="5">=<pos:position pos:line="30" pos:column="6"/></operator> <call><name pos:line="30" pos:column="7">Curl_splay<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name><name pos:line="30" pos:column="18">removenode<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">key<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">t<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* First make sure that we got the same root node as the one we want
     to remove, as otherwise we might be trying to remove a node that
     isn't actually in the tree.

     We cannot just compare the keys here as a double remove in quick
     succession of a node with key != KEY_NOTUSED &amp;&amp; same != NULL
     could return the same key but a different node. */</comment>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name pos:line="39" pos:column="6">t<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">!=<pos:position pos:line="39" pos:column="10"/></operator> <name pos:line="39" pos:column="11">removenode<pos:position pos:line="39" pos:column="21"/></name></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22">
    <block type="pseudo"><return pos:line="40" pos:column="5">return <expr><literal type="number" pos:line="40" pos:column="12">2<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="42" pos:column="3">/* Check if there is a list with identical sizes, as then we're trying to
     remove the root node of a list of nodes with identical keys. */</comment>
  <expr_stmt><expr><name pos:line="44" pos:column="3">x<pos:position pos:line="44" pos:column="4"/></name> <operator pos:line="44" pos:column="5">=<pos:position pos:line="44" pos:column="6"/></operator> <name><name pos:line="44" pos:column="7">t<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">samen<pos:position pos:line="44" pos:column="15"/></name></name></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">x<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">!=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">t<pos:position pos:line="45" pos:column="12"/></name></expr>)<pos:position pos:line="45" pos:column="13"/></condition><then pos:line="45" pos:column="13"> <block pos:line="45" pos:column="14">{
    <comment type="block" pos:line="46" pos:column="5">/* 'x' is the new root node, we just make it use the root node's
       smaller/larger links */</comment>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">x<pos:position pos:line="49" pos:column="6"/></name><operator pos:line="49" pos:column="6">-&gt;<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="8">key<pos:position pos:line="49" pos:column="11"/></name></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name><name pos:line="49" pos:column="14">t<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">key<pos:position pos:line="49" pos:column="20"/></name></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">x<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">larger<pos:position pos:line="50" pos:column="14"/></name></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name><name pos:line="50" pos:column="17">t<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">larger<pos:position pos:line="50" pos:column="26"/></name></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">x<pos:position pos:line="51" pos:column="6"/></name><operator pos:line="51" pos:column="6">-&gt;<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="8">smaller<pos:position pos:line="51" pos:column="15"/></name></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name><name pos:line="51" pos:column="18">t<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">smaller<pos:position pos:line="51" pos:column="28"/></name></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">x<pos:position pos:line="52" pos:column="6"/></name><operator pos:line="52" pos:column="6">-&gt;<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="8">samep<pos:position pos:line="52" pos:column="13"/></name></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <name><name pos:line="52" pos:column="16">t<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">samep<pos:position pos:line="52" pos:column="24"/></name></name></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">t<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">samep<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">samen<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">x<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then>
  <else pos:line="55" pos:column="3">else <block pos:line="55" pos:column="8">{
    <comment type="block" pos:line="56" pos:column="5">/* Remove the root node */</comment>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name><name pos:line="57" pos:column="8">t<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">smaller<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">==<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">NULL<pos:position pos:line="57" pos:column="26"/></name></expr>)<pos:position pos:line="57" pos:column="27"/></condition><then pos:line="57" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">x<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">=<pos:position pos:line="58" pos:column="10"/></operator> <name><name pos:line="58" pos:column="11">t<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">larger<pos:position pos:line="58" pos:column="20"/></name></name></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
      <expr_stmt><expr><name pos:line="60" pos:column="7">x<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name pos:line="60" pos:column="11">Curl_splay<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name><name pos:line="60" pos:column="22">removenode<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">key<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="39">t<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">smaller<pos:position pos:line="60" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">x<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">-&gt;<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="10">larger<pos:position pos:line="61" pos:column="16"/></name></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name><name pos:line="61" pos:column="19">t<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">larger<pos:position pos:line="61" pos:column="28"/></name></name></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
  }<pos:position pos:line="63" pos:column="4"/></block></else></if>

  <expr_stmt><expr><operator pos:line="65" pos:column="3">*<pos:position pos:line="65" pos:column="4"/></operator><name pos:line="65" pos:column="4">newroot<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">=<pos:position pos:line="65" pos:column="13"/></operator> <name pos:line="65" pos:column="14">x<pos:position pos:line="65" pos:column="15"/></name></expr>;<pos:position pos:line="65" pos:column="16"/></expr_stmt> <comment type="block" pos:line="65" pos:column="17">/* store new root pointer */</comment>

  <return pos:line="67" pos:column="3">return <expr><literal type="number" pos:line="67" pos:column="10">0<pos:position pos:line="67" pos:column="11"/></literal></expr>;<pos:position pos:line="67" pos:column="12"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

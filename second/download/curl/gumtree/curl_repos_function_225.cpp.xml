<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_225.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_addrinfo<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">addrinfo<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">ai<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">TRACE<pos:position pos:line="3" pos:column="8"/></name><argument_list pos:line="3" pos:column="8">(<argument><expr><operator pos:line="3" pos:column="9">(<pos:position pos:line="3" pos:column="10"/></operator><literal type="string" pos:line="3" pos:column="10">"dump_addrinfo:\n"<pos:position pos:line="3" pos:column="28"/></literal><operator pos:line="3" pos:column="28">)<pos:position pos:line="3" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">( <init pos:line="4" pos:column="9">;<pos:position pos:line="4" pos:column="10"/></init> <condition><expr><name pos:line="4" pos:column="11">ai<pos:position pos:line="4" pos:column="13"/></name></expr>;<pos:position pos:line="4" pos:column="14"/></condition> <incr><expr><name pos:line="4" pos:column="15">ai<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">=<pos:position pos:line="4" pos:column="19"/></operator> <name><name pos:line="4" pos:column="20">ai<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">ai_next<pos:position pos:line="4" pos:column="31"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="32"/></control> <block pos:line="4" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type>  <name><name pos:line="5" pos:column="11">buf<pos:position pos:line="5" pos:column="14"/></name> <index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">INET6_ADDRSTRLEN<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">trace_it<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="string" pos:line="7" pos:column="14">"    fam %2d, CNAME %s, "<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="8" pos:column="14">ai<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">ai_family<pos:position pos:line="8" pos:column="27"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="8" pos:column="29">ai<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">ai_canonname<pos:position pos:line="8" pos:column="45"/></name></name></expr> ?<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <expr><name><name pos:line="8" pos:column="48">ai<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">ai_canonname<pos:position pos:line="8" pos:column="64"/></name></name></expr> <pos:position pos:line="8" pos:column="65"/></then><else pos:line="8" pos:column="65">: <expr><literal type="string" pos:line="8" pos:column="67">"&lt;none&gt;"<pos:position pos:line="8" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">Curl_printable_address<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">ai<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">buf<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="41">sizeof<argument_list pos:line="9" pos:column="47">(<argument><expr><name pos:line="9" pos:column="48">buf<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">trace_it<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"%s\n"<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">trace_it<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"failed; %s\n"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="32">Curl_strerror<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">conn<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,<argument><expr><call><name pos:line="12" pos:column="51">WSAGetLastError<pos:position pos:line="12" pos:column="66"/></name><argument_list pos:line="12" pos:column="66">()<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></else></if>
  }<pos:position pos:line="13" pos:column="4"/></block></for>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

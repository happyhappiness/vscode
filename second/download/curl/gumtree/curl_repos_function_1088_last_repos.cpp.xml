<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1088_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_promise<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">Curl_easy<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                        <parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">connectdata<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">conn<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">nghttp2_push_promise<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">frame<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rv<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">DEBUGF<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name pos:line="6" pos:column="10">infof<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">data<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="22">"PUSH_PROMISE received, stream %u!\n"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="7" pos:column="16">frame<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">promised_stream_id<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">multi<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">push_cb<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">HTTP<pos:position pos:line="9" pos:column="16"/></name></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">stream<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">HTTP<pos:position pos:line="10" pos:column="16"/></name></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">newstream<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">curl_pushheaders<pos:position pos:line="11" pos:column="28"/></name></name></type> <name pos:line="11" pos:column="29">heads<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">CURLMcode<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">rc<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">http_conn<pos:position pos:line="13" pos:column="21"/></name></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">httpc<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">size_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* clone the parent */</comment>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">Curl_easy<pos:position pos:line="16" pos:column="21"/></name></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">newhandle<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><call><name pos:line="16" pos:column="35">duphandle<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">data<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="51"/></decl_stmt>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">newhandle<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">infof<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">data<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"failed to duplicate handle\n"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">rv<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">1<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt> <comment type="block" pos:line="19" pos:column="15">/* FAIL HARD */</comment>
      <goto pos:line="20" pos:column="7">goto <name pos:line="20" pos:column="12">fail<pos:position pos:line="20" pos:column="16"/></name>;<pos:position pos:line="20" pos:column="17"/></goto>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">heads<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">.<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">data<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">data<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">heads<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">.<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">frame<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">frame<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <comment type="block" pos:line="25" pos:column="5">/* ask the application */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">DEBUGF<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><call><name pos:line="26" pos:column="12">infof<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">data<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"Got PUSH_PROMISE, ask application!\n"<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">stream<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name><name pos:line="28" pos:column="14">data<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">req<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">protop<pos:position pos:line="28" pos:column="30"/></name></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">stream<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16"> <block pos:line="29" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">failf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">data<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"Internal NULL stream!\n"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="31" pos:column="7">(<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">void<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator><call><name pos:line="31" pos:column="13">Curl_close<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">newhandle<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">rv<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></expr_stmt>
      <goto pos:line="33" pos:column="7">goto <name pos:line="33" pos:column="12">fail<pos:position pos:line="33" pos:column="16"/></name>;<pos:position pos:line="33" pos:column="17"/></goto>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">rv<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <call><name><name pos:line="36" pos:column="10">data<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">multi<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">push_cb<pos:position pos:line="36" pos:column="30"/></name></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">data<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">newhandle<pos:position pos:line="36" pos:column="46"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="37" pos:column="31">stream<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">push_headers_used<pos:position pos:line="37" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="58">&amp;<pos:position pos:line="37" pos:column="63"/></operator><name pos:line="37" pos:column="59">heads<pos:position pos:line="37" pos:column="64"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="38" pos:column="31">data<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">multi<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">push_userp<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* free the headers again */</comment>
    <for pos:line="41" pos:column="5">for<control pos:line="41" pos:column="8">(<init><expr><name pos:line="41" pos:column="9">i<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <literal type="number" pos:line="41" pos:column="13">0<pos:position pos:line="41" pos:column="14"/></literal></expr>;<pos:position pos:line="41" pos:column="15"/></init> <condition><expr><name pos:line="41" pos:column="16">i<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">&lt;<pos:position pos:line="41" pos:column="21"/></operator><name><name pos:line="41" pos:column="18">stream<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">push_headers_used<pos:position pos:line="41" pos:column="43"/></name></name></expr>;<pos:position pos:line="41" pos:column="44"/></condition> <incr><expr><name pos:line="41" pos:column="45">i<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">++<pos:position pos:line="41" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="49"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">free<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name><name pos:line="42" pos:column="12">stream<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">push_headers<pos:position pos:line="42" pos:column="32"/></name><index pos:line="42" pos:column="32">[<expr><name pos:line="42" pos:column="33">i<pos:position pos:line="42" pos:column="34"/></name></expr>]<pos:position pos:line="42" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">free<pos:position pos:line="43" pos:column="9"/></name><argument_list pos:line="43" pos:column="9">(<argument><expr><name><name pos:line="43" pos:column="10">stream<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">push_headers<pos:position pos:line="43" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">stream<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">push_headers<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="28">NULL<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">stream<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">push_headers_used<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>

    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">rv<pos:position pos:line="47" pos:column="10"/></name></expr>)<pos:position pos:line="47" pos:column="11"/></condition><then pos:line="47" pos:column="11"> <block pos:line="47" pos:column="12">{
      <comment type="block" pos:line="48" pos:column="7">/* denied, kill off the new handle again */</comment>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">http2_stream_free<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name><name pos:line="49" pos:column="25">newhandle<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">req<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">.<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="40">protop<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">void<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">)<pos:position pos:line="50" pos:column="13"/></operator><call><name pos:line="50" pos:column="13">Curl_close<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">newhandle<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
      <goto pos:line="51" pos:column="7">goto <name pos:line="51" pos:column="12">fail<pos:position pos:line="51" pos:column="16"/></name>;<pos:position pos:line="51" pos:column="17"/></goto>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="54" pos:column="5">newstream<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name><name pos:line="54" pos:column="17">newhandle<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">req<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">.<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">protop<pos:position pos:line="54" pos:column="38"/></name></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">newstream<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">stream_id<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name><name pos:line="55" pos:column="28">frame<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">promised_stream_id<pos:position pos:line="55" pos:column="53"/></name></name></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">newhandle<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">req<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">maxdownload<pos:position pos:line="56" pos:column="31"/></name></name> <operator pos:line="56" pos:column="32">=<pos:position pos:line="56" pos:column="33"/></operator> <operator pos:line="56" pos:column="34">-<pos:position pos:line="56" pos:column="35"/></operator><literal type="number" pos:line="56" pos:column="35">1<pos:position pos:line="56" pos:column="36"/></literal></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">newhandle<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">req<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">.<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">size<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <operator pos:line="57" pos:column="27">-<pos:position pos:line="57" pos:column="28"/></operator><literal type="number" pos:line="57" pos:column="28">1<pos:position pos:line="57" pos:column="29"/></literal></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* approved, add to the multi handle and immediately switch to PERFORM
       state with the given connection !*/</comment>
    <expr_stmt><expr><name pos:line="61" pos:column="5">rc<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <call><name pos:line="61" pos:column="10">Curl_multi_add_perform<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name><name pos:line="61" pos:column="33">data<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">-&gt;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="39">multi<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">newhandle<pos:position pos:line="61" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="57">conn<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">rc<pos:position pos:line="62" pos:column="10"/></name></expr>)<pos:position pos:line="62" pos:column="11"/></condition><then pos:line="62" pos:column="11"> <block pos:line="62" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">infof<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">data<pos:position pos:line="63" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="19">"failed to add handle to multi\n"<pos:position pos:line="63" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">http2_stream_free<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><name><name pos:line="64" pos:column="25">newhandle<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">req<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">.<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">protop<pos:position pos:line="64" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">Curl_close<pos:position pos:line="65" pos:column="17"/></name><argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">newhandle<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">rv<pos:position pos:line="66" pos:column="9"/></name> <operator pos:line="66" pos:column="10">=<pos:position pos:line="66" pos:column="11"/></operator> <literal type="number" pos:line="66" pos:column="12">1<pos:position pos:line="66" pos:column="13"/></literal></expr>;<pos:position pos:line="66" pos:column="14"/></expr_stmt>
      <goto pos:line="67" pos:column="7">goto <name pos:line="67" pos:column="12">fail<pos:position pos:line="67" pos:column="16"/></name>;<pos:position pos:line="67" pos:column="17"/></goto>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="70" pos:column="5">httpc<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">=<pos:position pos:line="70" pos:column="12"/></operator> <operator pos:line="70" pos:column="13">&amp;<pos:position pos:line="70" pos:column="18"/></operator><name><name pos:line="70" pos:column="14">conn<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">proto<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">httpc<pos:position pos:line="70" pos:column="31"/></name></name></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">nghttp2_session_set_stream_user_data<pos:position pos:line="71" pos:column="41"/></name><argument_list pos:line="71" pos:column="41">(<argument><expr><name><name pos:line="71" pos:column="42">httpc<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">-&gt;<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="49">h2<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="72" pos:column="42">frame<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">-&gt;<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="49">promised_stream_id<pos:position pos:line="72" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="69">newhandle<pos:position pos:line="72" pos:column="78"/></name></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></then>
  <else pos:line="74" pos:column="3">else <block pos:line="74" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">DEBUGF<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><call><name pos:line="75" pos:column="12">infof<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">data<pos:position pos:line="75" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="24">"Got PUSH_PROMISE, ignore it!\n"<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">rv<pos:position pos:line="76" pos:column="7"/></name> <operator pos:line="76" pos:column="8">=<pos:position pos:line="76" pos:column="9"/></operator> <literal type="number" pos:line="76" pos:column="10">1<pos:position pos:line="76" pos:column="11"/></literal></expr>;<pos:position pos:line="76" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></else></if>
  <label><name pos:line="78" pos:column="3">fail<pos:position pos:line="78" pos:column="7"/></name>:<pos:position pos:line="78" pos:column="8"/></label>
  <return pos:line="79" pos:column="3">return <expr><name pos:line="79" pos:column="10">rv<pos:position pos:line="79" pos:column="12"/></name></expr>;<pos:position pos:line="79" pos:column="13"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

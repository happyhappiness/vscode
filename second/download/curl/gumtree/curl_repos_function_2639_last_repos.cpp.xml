<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2639_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SECStatus<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">SelectClientCert<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">arg<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">PRFileDesc<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sock<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">CERTDistNamesStr<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">caNames<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="3" pos:column="35">struct<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">CERTCertificateStr<pos:position pos:line="3" pos:column="60"/></name></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier><modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">pRetCert<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="4" pos:column="35">struct<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">SECKEYPrivateKeyStr<pos:position pos:line="4" pos:column="61"/></name></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier><modifier pos:line="4" pos:column="63">*<pos:position pos:line="4" pos:column="64"/></modifier></type><name pos:line="4" pos:column="64">pRetKey<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssl_connect_data<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">connssl<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><operator pos:line="6" pos:column="38">(<pos:position pos:line="6" pos:column="39"/></operator>struct <name pos:line="6" pos:column="46">ssl_connect_data<pos:position pos:line="6" pos:column="62"/></name> <operator pos:line="6" pos:column="63">*<pos:position pos:line="6" pos:column="64"/></operator><operator pos:line="6" pos:column="64">)<pos:position pos:line="6" pos:column="65"/></operator><name pos:line="6" pos:column="65">arg<pos:position pos:line="6" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="69"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">BACKEND<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">data<pos:position pos:line="7" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">nickname<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name><name pos:line="8" pos:column="26">BACKEND<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">client_nickname<pos:position pos:line="8" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="9" pos:column="3">static<pos:position pos:line="9" pos:column="9"/></specifier> <type><specifier pos:line="9" pos:column="10">const<pos:position pos:line="9" pos:column="15"/></specifier> <name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name></type> <name><name pos:line="9" pos:column="21">pem_slotname<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[]<pos:position pos:line="9" pos:column="35"/></index></name> <init pos:line="9" pos:column="36">= <expr><literal type="string" pos:line="9" pos:column="38">"PEM Token #1"<pos:position pos:line="9" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">BACKEND<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">obj_clicert<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
    <comment type="block" pos:line="12" pos:column="5">/* use the cert/key provided by PEM reader */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">SECItem<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">cert_der<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><block pos:line="13" pos:column="24">{ <expr><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>, <expr><name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr> }<pos:position pos:line="13" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">void<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">proto_win<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><call><name pos:line="14" pos:column="23">SSL_RevealPinArg<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">sock<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">CERTCertificateStr<pos:position pos:line="15" pos:column="30"/></name></name> <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type><name pos:line="15" pos:column="32">cert<pos:position pos:line="15" pos:column="36"/></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">SECKEYPrivateKeyStr<pos:position pos:line="16" pos:column="31"/></name></name> <modifier pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></modifier></type><name pos:line="16" pos:column="33">key<pos:position pos:line="16" pos:column="36"/></name></decl>;<pos:position pos:line="16" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">PK11SlotInfo<pos:position pos:line="18" pos:column="17"/></name> <modifier pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></modifier></type><name pos:line="18" pos:column="19">slot<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><call><name pos:line="18" pos:column="26">nss_find_slot_by_name<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">pem_slotname<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">NULL<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">slot<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">failf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">data<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"NSS: PK11 slot not found: %s"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">pem_slotname<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">SECFailure<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><call><name pos:line="24" pos:column="8">PK11_ReadRawAttribute<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">PK11_TypeGeneric<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="48">BACKEND<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">-&gt;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="57">obj_clicert<pos:position pos:line="24" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="70">CKA_VALUE<pos:position pos:line="24" pos:column="79"/></name></expr></argument>,
                             <argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="31">cert_der<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">!=<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">SECSuccess<pos:position pos:line="25" pos:column="54"/></name></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55"> <block pos:line="25" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">failf<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">data<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"NSS: CKA_VALUE not found in PK11 generic object"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">PK11_FreeSlot<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">slot<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">SECFailure<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">cert<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">PK11_FindCertFromDERCertItem<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">slot<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">cert_der<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">proto_win<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">SECITEM_FreeItem<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">&amp;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="23">cert_der<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">PR_FALSE<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">NULL<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">cert<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21"> <block pos:line="33" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">failf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"NSS: client certificate from file not found"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">PK11_FreeSlot<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">slot<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">SECFailure<pos:position pos:line="36" pos:column="24"/></name></expr>;<pos:position pos:line="36" pos:column="25"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">key<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <call><name pos:line="39" pos:column="11">PK11_FindPrivateKeyFromCert<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">slot<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">cert<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">NULL<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">PK11_FreeSlot<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">slot<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">NULL<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">==<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">key<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">failf<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">data<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="19">"NSS: private key from file not found"<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">CERT_DestroyCertificate<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">cert<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><name pos:line="44" pos:column="14">SECFailure<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">infof<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">data<pos:position pos:line="47" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="17">"NSS: client certificate from file\n"<pos:position pos:line="47" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">display_cert_info<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">data<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">cert<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">pRetCert<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">cert<pos:position pos:line="50" pos:column="21"/></name></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><name pos:line="51" pos:column="6">pRetKey<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="16">key<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">SECSuccess<pos:position pos:line="52" pos:column="22"/></name></expr>;<pos:position pos:line="52" pos:column="23"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="55" pos:column="3">/* use the default NSS hook */</comment>
  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name pos:line="56" pos:column="6">SECSuccess<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">!=<pos:position pos:line="56" pos:column="19"/></operator> <call><name pos:line="56" pos:column="20">NSS_GetClientAuthData<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><operator pos:line="56" pos:column="42">(<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">void<pos:position pos:line="56" pos:column="47"/></name> <operator pos:line="56" pos:column="48">*<pos:position pos:line="56" pos:column="49"/></operator><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="50">nickname<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">sock<pos:position pos:line="56" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="66">caNames<pos:position pos:line="56" pos:column="73"/></name></expr></argument>,
                                          <argument><expr><name pos:line="57" pos:column="43">pRetCert<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">pRetKey<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call>
      <operator pos:line="58" pos:column="7">||<pos:position pos:line="58" pos:column="9"/></operator> <name pos:line="58" pos:column="10">NULL<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">==<pos:position pos:line="58" pos:column="17"/></operator> <operator pos:line="58" pos:column="18">*<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">pRetCert<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block pos:line="58" pos:column="29">{

    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><name pos:line="60" pos:column="8">NULL<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">==<pos:position pos:line="60" pos:column="15"/></operator> <name pos:line="60" pos:column="16">nickname<pos:position pos:line="60" pos:column="24"/></name></expr>)<pos:position pos:line="60" pos:column="25"/></condition><then pos:line="60" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="7">failf<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">data<pos:position pos:line="61" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="19">"NSS: client certificate not found (nickname not "<pos:position pos:line="61" pos:column="69"/></literal>
            <literal type="string" pos:line="62" pos:column="13">"specified)"<pos:position pos:line="62" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">failf<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"NSS: client certificate not found: %s"<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">nickname<pos:position pos:line="64" pos:column="68"/></name></expr></argument>)<pos:position pos:line="64" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt></block></else></if>

    <return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">SECFailure<pos:position pos:line="66" pos:column="22"/></name></expr>;<pos:position pos:line="66" pos:column="23"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="69" pos:column="3">/* get certificate nickname if any */</comment>
  <expr_stmt><expr><name pos:line="70" pos:column="3">nickname<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <name><operator pos:line="70" pos:column="14">(<pos:position pos:line="70" pos:column="15"/></operator><operator pos:line="70" pos:column="15">*<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">pRetCert<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">)<pos:position pos:line="70" pos:column="25"/></operator><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">nickname<pos:position pos:line="70" pos:column="35"/></name></name></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><name pos:line="71" pos:column="6">NULL<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">==<pos:position pos:line="71" pos:column="13"/></operator> <name pos:line="71" pos:column="14">nickname<pos:position pos:line="71" pos:column="22"/></name></expr>)<pos:position pos:line="71" pos:column="23"/></condition><then pos:line="71" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="5">nickname<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <literal type="string" pos:line="72" pos:column="16">"[unknown]"<pos:position pos:line="72" pos:column="27"/></literal></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt></block></then></if>

  <if pos:line="74" pos:column="3">if<condition pos:line="74" pos:column="5">(<expr><operator pos:line="74" pos:column="6">!<pos:position pos:line="74" pos:column="7"/></operator><call><name pos:line="74" pos:column="7">strncmp<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">nickname<pos:position pos:line="74" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="25">pem_slotname<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="39">sizeof<argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">pem_slotname<pos:position pos:line="74" pos:column="58"/></name></expr></argument>)<pos:position pos:line="74" pos:column="59"/></argument_list></sizeof> <operator pos:line="74" pos:column="60">-<pos:position pos:line="74" pos:column="61"/></operator> <literal type="number" pos:line="74" pos:column="62">1U<pos:position pos:line="74" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="66"/></condition><then pos:line="74" pos:column="66"> <block pos:line="74" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">failf<pos:position pos:line="75" pos:column="10"/></name><argument_list pos:line="75" pos:column="10">(<argument><expr><name pos:line="75" pos:column="11">data<pos:position pos:line="75" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="17">"NSS: refusing previously loaded certificate from file: %s"<pos:position pos:line="75" pos:column="76"/></literal></expr></argument>,
          <argument><expr><name pos:line="76" pos:column="11">nickname<pos:position pos:line="76" pos:column="19"/></name></expr></argument>)<pos:position pos:line="76" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">SECFailure<pos:position pos:line="77" pos:column="22"/></name></expr>;<pos:position pos:line="77" pos:column="23"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name pos:line="80" pos:column="6">NULL<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">==<pos:position pos:line="80" pos:column="13"/></operator> <operator pos:line="80" pos:column="14">*<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">pRetKey<pos:position pos:line="80" pos:column="22"/></name></expr>)<pos:position pos:line="80" pos:column="23"/></condition><then pos:line="80" pos:column="23"> <block pos:line="80" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">failf<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><name pos:line="81" pos:column="11">data<pos:position pos:line="81" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="17">"NSS: private key not found for certificate: %s"<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="67">nickname<pos:position pos:line="81" pos:column="75"/></name></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">SECFailure<pos:position pos:line="82" pos:column="22"/></name></expr>;<pos:position pos:line="82" pos:column="23"/></return>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="85" pos:column="3">infof<pos:position pos:line="85" pos:column="8"/></name><argument_list pos:line="85" pos:column="8">(<argument><expr><name pos:line="85" pos:column="9">data<pos:position pos:line="85" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="15">"NSS: using client certificate: %s\n"<pos:position pos:line="85" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="54">nickname<pos:position pos:line="85" pos:column="62"/></name></expr></argument>)<pos:position pos:line="85" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">display_cert_info<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">data<pos:position pos:line="86" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="27">*<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="28">pRetCert<pos:position pos:line="86" pos:column="36"/></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
  <return pos:line="87" pos:column="3">return <expr><name pos:line="87" pos:column="10">SECSuccess<pos:position pos:line="87" pos:column="20"/></name></expr>;<pos:position pos:line="87" pos:column="21"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

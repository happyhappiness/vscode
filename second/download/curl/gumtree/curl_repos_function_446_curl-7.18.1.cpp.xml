<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_446_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_input_negotiate<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">bool<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">proxy<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">header<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">negotiatedata<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">neg_ctx<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><ternary><condition><expr><name pos:line="4" pos:column="35">proxy<pos:position pos:line="4" pos:column="40"/></name></expr>?<pos:position pos:line="4" pos:column="41"/></condition><then><expr><operator pos:line="4" pos:column="41">&amp;<pos:position pos:line="4" pos:column="46"/></operator><name><name pos:line="4" pos:column="42">conn<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">data<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="54">state<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">.<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="60">proxyneg<pos:position pos:line="4" pos:column="68"/></name></name></expr></then><else pos:line="4" pos:column="68">:
    <expr><operator pos:line="5" pos:column="5">&amp;<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="6">conn<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">data<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">state<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">negotiate<pos:position pos:line="5" pos:column="33"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">OM_uint32<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">major_status<pos:position pos:line="6" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">minor_status<pos:position pos:line="6" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="41">minor_status2<pos:position pos:line="6" pos:column="54"/></name></decl>;<pos:position pos:line="6" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gss_buffer_desc<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">input_token<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">GSS_C_EMPTY_BUFFER<pos:position pos:line="7" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gss_buffer_desc<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">output_token<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">GSS_C_EMPTY_BUFFER<pos:position pos:line="8" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ret<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">len<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">bool<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">gss<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name><modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type> <name pos:line="12" pos:column="15">protocol<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

  <while pos:line="14" pos:column="3">while<condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">header<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="20">ISSPACE<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">header<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="37"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">header<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">++<pos:position pos:line="15" pos:column="13"/></operator></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt></block></while>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><call><name pos:line="16" pos:column="6">checkprefix<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="string" pos:line="16" pos:column="18">"GSS-Negotiate"<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">header<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">protocol<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="string" pos:line="17" pos:column="16">"GSS-Negotiate"<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">gss<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">TRUE<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if<condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">checkprefix<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"Negotiate"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">header<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">protocol<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="string" pos:line="21" pos:column="16">"Negotiate"<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">gss<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <name pos:line="22" pos:column="11">FALSE<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return></block></else></if>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name><name pos:line="27" pos:column="6">neg_ctx<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">context<pos:position pos:line="27" pos:column="22"/></name></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23"> <block pos:line="27" pos:column="24">{
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">neg_ctx<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">gss<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">!=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">gss<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28"> <block pos:line="28" pos:column="29">{
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then>
  <else pos:line="32" pos:column="3">else <block pos:line="32" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">neg_ctx<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">protocol<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">protocol<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">neg_ctx<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">gss<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">gss<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></else></if>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name><name pos:line="37" pos:column="6">neg_ctx<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">context<pos:position pos:line="37" pos:column="22"/></name></name> <operator pos:line="37" pos:column="23">&amp;&amp;<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="26">neg_ctx<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">status<pos:position pos:line="37" pos:column="41"/></name></name> <operator pos:line="37" pos:column="42">==<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="45">GSS_S_COMPLETE<pos:position pos:line="37" pos:column="59"/></name></expr>)<pos:position pos:line="37" pos:column="60"/></condition><then pos:line="37" pos:column="60"> <block pos:line="37" pos:column="61">{
    <comment type="block" pos:line="38" pos:column="5">/* We finished succesfully our part of authentication, but server
     * rejected it (since we're again here). Exit with an error since we
     * can't invent anything better */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">Curl_cleanup_negotiate<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name><name pos:line="41" pos:column="28">conn<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">data<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">-<pos:position pos:line="42" pos:column="13"/></operator><literal type="number" pos:line="42" pos:column="13">1<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name><name pos:line="45" pos:column="6">neg_ctx<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">server_name<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">==<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">NULL<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">&amp;&amp;<pos:position pos:line="45" pos:column="45"/></operator>
      <operator pos:line="46" pos:column="7">(<pos:position pos:line="46" pos:column="8"/></operator><name pos:line="46" pos:column="8">ret<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">get_gss_name<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">conn<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">proxy<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name><name pos:line="46" pos:column="41">neg_ctx<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">server_name<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call><operator pos:line="46" pos:column="62">)<pos:position pos:line="46" pos:column="63"/></operator></expr>)<pos:position pos:line="46" pos:column="64"/></condition><then pos:line="46" pos:column="64">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">ret<pos:position pos:line="47" pos:column="15"/></name></expr>;<pos:position pos:line="47" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="49" pos:column="3">header<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">+=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">strlen<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name><name pos:line="49" pos:column="20">neg_ctx<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">protocol<pos:position pos:line="49" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
  <while pos:line="50" pos:column="3">while<condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">header<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">&amp;&amp;<pos:position pos:line="50" pos:column="27"/></operator> <call><name pos:line="50" pos:column="20">ISSPACE<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">header<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="37"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">header<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">++<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt></block></while>

  <expr_stmt><expr><name pos:line="53" pos:column="3">len<pos:position pos:line="53" pos:column="6"/></name> <operator pos:line="53" pos:column="7">=<pos:position pos:line="53" pos:column="8"/></operator> <call><name pos:line="53" pos:column="9">strlen<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">header<pos:position pos:line="53" pos:column="22"/></name></expr></argument>)<pos:position pos:line="53" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">len<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">&gt;<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="12">0<pos:position pos:line="54" pos:column="13"/></literal></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14"> <block pos:line="54" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="55" pos:column="5">int<pos:position pos:line="55" pos:column="8"/></name></type> <name pos:line="55" pos:column="9">rawlen<pos:position pos:line="55" pos:column="15"/></name> <init pos:line="55" pos:column="16">= <expr><call><name pos:line="55" pos:column="18">Curl_base64_decode<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">header<pos:position pos:line="55" pos:column="43"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="56" pos:column="37">(<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">unsigned<pos:position pos:line="56" pos:column="46"/></name> <name pos:line="56" pos:column="47">char<pos:position pos:line="56" pos:column="51"/></name> <operator pos:line="56" pos:column="52">*<pos:position pos:line="56" pos:column="53"/></operator><operator pos:line="56" pos:column="53">*<pos:position pos:line="56" pos:column="54"/></operator><operator pos:line="56" pos:column="54">)<pos:position pos:line="56" pos:column="55"/></operator><operator pos:line="56" pos:column="55">&amp;<pos:position pos:line="56" pos:column="60"/></operator><name><name pos:line="56" pos:column="56">input_token<pos:position pos:line="56" pos:column="67"/></name><operator pos:line="56" pos:column="67">.<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="68">value<pos:position pos:line="56" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="75"/></decl_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">rawlen<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">&lt;<pos:position pos:line="57" pos:column="19"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19">
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><operator pos:line="58" pos:column="14">-<pos:position pos:line="58" pos:column="15"/></operator><literal type="number" pos:line="58" pos:column="15">1<pos:position pos:line="58" pos:column="16"/></literal></expr>;<pos:position pos:line="58" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">input_token<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">.<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">length<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">rawlen<pos:position pos:line="59" pos:column="32"/></name></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>

<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">HAVE_SPNEGO<pos:position pos:line="61" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="61" pos:column="20">/* Handle SPNEGO */</comment>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><call><name pos:line="62" pos:column="8">checkprefix<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><literal type="string" pos:line="62" pos:column="20">"Negotiate"<pos:position pos:line="62" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="33">header<pos:position pos:line="62" pos:column="39"/></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <block pos:line="62" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">ASN1_OBJECT<pos:position pos:line="63" pos:column="20"/></name> <modifier pos:line="63" pos:column="21">*<pos:position pos:line="63" pos:column="22"/></modifier></type>   <name pos:line="63" pos:column="25">object<pos:position pos:line="63" pos:column="31"/></name>            <init pos:line="63" pos:column="43">= <expr><name pos:line="63" pos:column="45">NULL<pos:position pos:line="63" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">int<pos:position pos:line="64" pos:column="12"/></name></type>             <name pos:line="64" pos:column="25">rc<pos:position pos:line="64" pos:column="27"/></name>                <init pos:line="64" pos:column="43">= <expr><literal type="number" pos:line="64" pos:column="45">1<pos:position pos:line="64" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">unsigned<pos:position pos:line="65" pos:column="17"/></name> <name pos:line="65" pos:column="18">char<pos:position pos:line="65" pos:column="22"/></name> <modifier pos:line="65" pos:column="23">*<pos:position pos:line="65" pos:column="24"/></modifier></type> <name pos:line="65" pos:column="25">spnegoToken<pos:position pos:line="65" pos:column="36"/></name>       <init pos:line="65" pos:column="43">= <expr><name pos:line="65" pos:column="45">NULL<pos:position pos:line="65" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">size_t<pos:position pos:line="66" pos:column="15"/></name></type>          <name pos:line="66" pos:column="25">spnegoTokenLength<pos:position pos:line="66" pos:column="42"/></name> <init pos:line="66" pos:column="43">= <expr><literal type="number" pos:line="66" pos:column="45">0<pos:position pos:line="66" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="66" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">unsigned<pos:position pos:line="67" pos:column="17"/></name> <name pos:line="67" pos:column="18">char<pos:position pos:line="67" pos:column="22"/></name> <modifier pos:line="67" pos:column="23">*<pos:position pos:line="67" pos:column="24"/></modifier></type> <name pos:line="67" pos:column="25">mechToken<pos:position pos:line="67" pos:column="34"/></name>         <init pos:line="67" pos:column="43">= <expr><name pos:line="67" pos:column="45">NULL<pos:position pos:line="67" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="67" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">size_t<pos:position pos:line="68" pos:column="15"/></name></type>          <name pos:line="68" pos:column="25">mechTokenLength<pos:position pos:line="68" pos:column="40"/></name>   <init pos:line="68" pos:column="43">= <expr><literal type="number" pos:line="68" pos:column="45">0<pos:position pos:line="68" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="68" pos:column="47"/></decl_stmt>

        <expr_stmt><expr><name pos:line="70" pos:column="9">spnegoToken<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">malloc<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name><name pos:line="70" pos:column="30">input_token<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">.<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">length<pos:position pos:line="70" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
        <if pos:line="71" pos:column="9">if<condition pos:line="71" pos:column="11">(<expr><name><name pos:line="71" pos:column="12">input_token<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">.<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="24">value<pos:position pos:line="71" pos:column="29"/></name></name> <operator pos:line="71" pos:column="30">==<pos:position pos:line="71" pos:column="32"/></operator> <name pos:line="71" pos:column="33">NULL<pos:position pos:line="71" pos:column="37"/></name></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38">
          <block type="pseudo"><return pos:line="72" pos:column="11">return <expr><name pos:line="72" pos:column="18">ENOMEM<pos:position pos:line="72" pos:column="24"/></name></expr>;<pos:position pos:line="72" pos:column="25"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="73" pos:column="9">spnegoTokenLength<pos:position pos:line="73" pos:column="26"/></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <name><name pos:line="73" pos:column="29">input_token<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">.<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">length<pos:position pos:line="73" pos:column="47"/></name></name></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name pos:line="75" pos:column="9">object<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">OBJ_txt2obj<pos:position pos:line="75" pos:column="29"/></name> <argument_list pos:line="75" pos:column="30">(<argument><expr><literal type="string" pos:line="75" pos:column="31">"1.2.840.113554.1.2.2"<pos:position pos:line="75" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="55">1<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
        <if pos:line="76" pos:column="9">if<condition pos:line="76" pos:column="11">(<expr><operator pos:line="76" pos:column="12">!<pos:position pos:line="76" pos:column="13"/></operator><call><name pos:line="76" pos:column="13">parseSpnegoTargetToken<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><name pos:line="76" pos:column="36">spnegoToken<pos:position pos:line="76" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><name pos:line="77" pos:column="37">spnegoTokenLength<pos:position pos:line="77" pos:column="54"/></name></expr></argument>,
                                    <argument><expr><name pos:line="78" pos:column="37">NULL<pos:position pos:line="78" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><name pos:line="79" pos:column="37">NULL<pos:position pos:line="79" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="80" pos:column="37">&amp;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="38">mechToken<pos:position pos:line="80" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="81" pos:column="37">&amp;<pos:position pos:line="81" pos:column="42"/></operator><name pos:line="81" pos:column="38">mechTokenLength<pos:position pos:line="81" pos:column="53"/></name></expr></argument>,
                                    <argument><expr><name pos:line="82" pos:column="37">NULL<pos:position pos:line="82" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><name pos:line="83" pos:column="37">NULL<pos:position pos:line="83" pos:column="41"/></name></expr></argument>)<pos:position pos:line="83" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43"> <block pos:line="83" pos:column="44">{
          <expr_stmt><expr><call><name pos:line="84" pos:column="11">free<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><name pos:line="84" pos:column="16">spnegoToken<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="85" pos:column="11">spnegoToken<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="25">NULL<pos:position pos:line="85" pos:column="29"/></name></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="86" pos:column="11">infof<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">(<argument><expr><name><name pos:line="86" pos:column="17">conn<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">data<pos:position pos:line="86" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"Parse SPNEGO Target Token failed\n"<pos:position pos:line="86" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then>
        <else pos:line="88" pos:column="9">else <block pos:line="88" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="89" pos:column="11">free<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name><name pos:line="89" pos:column="16">input_token<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">.<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="28">value<pos:position pos:line="89" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="90" pos:column="11">input_token<pos:position pos:line="90" pos:column="22"/></name><operator pos:line="90" pos:column="22">.<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">value<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="31">NULL<pos:position pos:line="90" pos:column="35"/></name></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="91" pos:column="11">input_token<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">.<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">value<pos:position pos:line="91" pos:column="28"/></name></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <call><name pos:line="91" pos:column="31">malloc<pos:position pos:line="91" pos:column="37"/></name><argument_list pos:line="91" pos:column="37">(<argument><expr><name pos:line="91" pos:column="38">mechTokenLength<pos:position pos:line="91" pos:column="53"/></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="92" pos:column="11">memcpy<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name><name pos:line="92" pos:column="18">input_token<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">.<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="30">value<pos:position pos:line="92" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="37">mechToken<pos:position pos:line="92" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="92" pos:column="47">mechTokenLength<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="93" pos:column="11">input_token<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">.<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="23">length<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="32">mechTokenLength<pos:position pos:line="93" pos:column="47"/></name></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="94" pos:column="11">free<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><name pos:line="94" pos:column="16">mechToken<pos:position pos:line="94" pos:column="25"/></name></expr></argument>)<pos:position pos:line="94" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><name pos:line="95" pos:column="11">mechToken<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">NULL<pos:position pos:line="95" pos:column="27"/></name></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="96" pos:column="11">infof<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><name><name pos:line="96" pos:column="17">conn<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">data<pos:position pos:line="96" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="29">"Parse SPNEGO Target Token succeeded\n"<pos:position pos:line="96" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="97" pos:column="10"/></block></else></if>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="102" pos:column="3">major_status<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <call><name pos:line="102" pos:column="18">gss_init_sec_context<pos:position pos:line="102" pos:column="38"/></name><argument_list pos:line="102" pos:column="38">(<argument><expr><operator pos:line="102" pos:column="39">&amp;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="40">minor_status<pos:position pos:line="102" pos:column="52"/></name></expr></argument>,
                                      <argument><expr><name pos:line="103" pos:column="39">GSS_C_NO_CREDENTIAL<pos:position pos:line="103" pos:column="58"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="104" pos:column="39">&amp;<pos:position pos:line="104" pos:column="44"/></operator><name><name pos:line="104" pos:column="40">neg_ctx<pos:position pos:line="104" pos:column="47"/></name><operator pos:line="104" pos:column="47">-&gt;<pos:position pos:line="104" pos:column="52"/></operator><name pos:line="104" pos:column="49">context<pos:position pos:line="104" pos:column="56"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="105" pos:column="39">neg_ctx<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">-&gt;<pos:position pos:line="105" pos:column="51"/></operator><name pos:line="105" pos:column="48">server_name<pos:position pos:line="105" pos:column="59"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="106" pos:column="39">GSS_C_NO_OID<pos:position pos:line="106" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><name pos:line="107" pos:column="39">GSS_C_DELEG_FLAG<pos:position pos:line="107" pos:column="55"/></name></expr></argument>,
                                      <argument><expr><literal type="number" pos:line="108" pos:column="39">0<pos:position pos:line="108" pos:column="40"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="109" pos:column="39">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="109" pos:column="64"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="110" pos:column="39">&amp;<pos:position pos:line="110" pos:column="44"/></operator><name pos:line="110" pos:column="40">input_token<pos:position pos:line="110" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><name pos:line="111" pos:column="39">NULL<pos:position pos:line="111" pos:column="43"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="112" pos:column="39">&amp;<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="40">output_token<pos:position pos:line="112" pos:column="52"/></name></expr></argument>,
                                      <argument><expr><name pos:line="113" pos:column="39">NULL<pos:position pos:line="113" pos:column="43"/></name></expr></argument>,
                                      <argument><expr><name pos:line="114" pos:column="39">NULL<pos:position pos:line="114" pos:column="43"/></name></expr></argument>)<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt>
  <if pos:line="115" pos:column="3">if<condition pos:line="115" pos:column="5">(<expr><name><name pos:line="115" pos:column="6">input_token<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">.<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">length<pos:position pos:line="115" pos:column="24"/></name></name> <operator pos:line="115" pos:column="25">&gt;<pos:position pos:line="115" pos:column="29"/></operator> <literal type="number" pos:line="115" pos:column="27">0<pos:position pos:line="115" pos:column="28"/></literal></expr>)<pos:position pos:line="115" pos:column="29"/></condition><then pos:line="115" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="5">gss_release_buffer<pos:position pos:line="116" pos:column="23"/></name><argument_list pos:line="116" pos:column="23">(<argument><expr><operator pos:line="116" pos:column="24">&amp;<pos:position pos:line="116" pos:column="29"/></operator><name pos:line="116" pos:column="25">minor_status2<pos:position pos:line="116" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="40">&amp;<pos:position pos:line="116" pos:column="45"/></operator><name pos:line="116" pos:column="41">input_token<pos:position pos:line="116" pos:column="52"/></name></expr></argument>)<pos:position pos:line="116" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="54"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="117" pos:column="3">neg_ctx<pos:position pos:line="117" pos:column="10"/></name><operator pos:line="117" pos:column="10">-&gt;<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="12">status<pos:position pos:line="117" pos:column="18"/></name></name> <operator pos:line="117" pos:column="19">=<pos:position pos:line="117" pos:column="20"/></operator> <name pos:line="117" pos:column="21">major_status<pos:position pos:line="117" pos:column="33"/></name></expr>;<pos:position pos:line="117" pos:column="34"/></expr_stmt>
  <if pos:line="118" pos:column="3">if<condition pos:line="118" pos:column="5">(<expr><call><name pos:line="118" pos:column="6">GSS_ERROR<pos:position pos:line="118" pos:column="15"/></name><argument_list pos:line="118" pos:column="15">(<argument><expr><name pos:line="118" pos:column="16">major_status<pos:position pos:line="118" pos:column="28"/></name></expr></argument>)<pos:position pos:line="118" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="30"/></condition><then pos:line="118" pos:column="30"> <block pos:line="118" pos:column="31">{
    <comment type="block" pos:line="119" pos:column="5">/* Curl_cleanup_negotiate(conn-&gt;data) ??? */</comment>
    <expr_stmt><expr><call><name pos:line="120" pos:column="5">log_gss_error<pos:position pos:line="120" pos:column="18"/></name><argument_list pos:line="120" pos:column="18">(<argument><expr><name pos:line="120" pos:column="19">conn<pos:position pos:line="120" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="25">minor_status<pos:position pos:line="120" pos:column="37"/></name></expr></argument>,
                  <argument><expr><operator pos:line="121" pos:column="19">(<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">char<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">*<pos:position pos:line="121" pos:column="26"/></operator><operator pos:line="121" pos:column="26">)<pos:position pos:line="121" pos:column="27"/></operator><literal type="string" pos:line="121" pos:column="27">"gss_init_sec_context() failed: "<pos:position pos:line="121" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="62"/></expr_stmt>
    <return pos:line="122" pos:column="5">return <expr><operator pos:line="122" pos:column="12">-<pos:position pos:line="122" pos:column="13"/></operator><literal type="number" pos:line="122" pos:column="13">1<pos:position pos:line="122" pos:column="14"/></literal></expr>;<pos:position pos:line="122" pos:column="15"/></return>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if>

  <if pos:line="125" pos:column="3">if<condition pos:line="125" pos:column="5">(<expr><name><name pos:line="125" pos:column="6">output_token<pos:position pos:line="125" pos:column="18"/></name><operator pos:line="125" pos:column="18">.<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="19">length<pos:position pos:line="125" pos:column="25"/></name></name> <operator pos:line="125" pos:column="26">==<pos:position pos:line="125" pos:column="28"/></operator> <literal type="number" pos:line="125" pos:column="29">0<pos:position pos:line="125" pos:column="30"/></literal></expr>)<pos:position pos:line="125" pos:column="31"/></condition><then pos:line="125" pos:column="31"> <block pos:line="125" pos:column="32">{
    <return pos:line="126" pos:column="5">return <expr><operator pos:line="126" pos:column="12">-<pos:position pos:line="126" pos:column="13"/></operator><literal type="number" pos:line="126" pos:column="13">1<pos:position pos:line="126" pos:column="14"/></literal></expr>;<pos:position pos:line="126" pos:column="15"/></return>
  }<pos:position pos:line="127" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="129" pos:column="3">neg_ctx<pos:position pos:line="129" pos:column="10"/></name><operator pos:line="129" pos:column="10">-&gt;<pos:position pos:line="129" pos:column="15"/></operator><name pos:line="129" pos:column="12">output_token<pos:position pos:line="129" pos:column="24"/></name></name> <operator pos:line="129" pos:column="25">=<pos:position pos:line="129" pos:column="26"/></operator> <name pos:line="129" pos:column="27">output_token<pos:position pos:line="129" pos:column="39"/></name></expr>;<pos:position pos:line="129" pos:column="40"/></expr_stmt>
  <comment type="block" pos:line="130" pos:column="3">/* conn-&gt;bits.close = FALSE; */</comment>

  <return pos:line="132" pos:column="3">return <expr><literal type="number" pos:line="132" pos:column="10">0<pos:position pos:line="132" pos:column="11"/></literal></expr>;<pos:position pos:line="132" pos:column="12"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

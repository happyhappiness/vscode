<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1200_curl-7.41.0.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Curl_tree<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">Curl_splaygetbest<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">timeval<pos:position pos:line="1" pos:column="51"/></name></name></type> <name pos:line="1" pos:column="52">i<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">Curl_tree<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">t<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">Curl_tree<pos:position pos:line="3" pos:column="53"/></name></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier><modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">removed<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_tree<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">x<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">t<pos:position pos:line="7" pos:column="8"/></name></expr>)<pos:position pos:line="7" pos:column="9"/></condition><then pos:line="7" pos:column="9"> <block pos:line="7" pos:column="10">{
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">removed<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt> <comment type="block" pos:line="8" pos:column="22">/* none removed since there was no root */</comment>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">t<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">Curl_splay<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">i<pos:position pos:line="12" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="20">t<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><call><name pos:line="13" pos:column="6">compare<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="17">t<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">key<pos:position pos:line="13" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call> <operator pos:line="13" pos:column="25">&lt;<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
    <comment type="block" pos:line="14" pos:column="5">/* too big node, try the smaller chain */</comment>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name><name pos:line="15" pos:column="8">t<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">smaller<pos:position pos:line="15" pos:column="18"/></name></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">t<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator><call><name pos:line="16" pos:column="9">Curl_splay<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">t<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">smaller<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">key<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">t<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
      <comment type="block" pos:line="18" pos:column="7">/* fail */</comment>
      <expr_stmt><expr><operator pos:line="19" pos:column="7">*<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">removed<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><name pos:line="20" pos:column="14">t<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><call><name pos:line="24" pos:column="6">compare<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="17">t<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">key<pos:position pos:line="24" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call> <operator pos:line="24" pos:column="25">&gt;=<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <block pos:line="24" pos:column="31">{               <comment type="block" pos:line="24" pos:column="47">/* found it */</comment>
    <comment type="block" pos:line="25" pos:column="5">/* FIRST! Check if there is a list with identical keys */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">x<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <name><name pos:line="26" pos:column="9">t<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">same<pos:position pos:line="26" pos:column="16"/></name></name></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">x<pos:position pos:line="27" pos:column="9"/></name></expr>)<pos:position pos:line="27" pos:column="10"/></condition><then pos:line="27" pos:column="10"> <block pos:line="27" pos:column="11">{
      <comment type="block" pos:line="28" pos:column="7">/* there is, pick one from the list */</comment>

      <comment type="block" pos:line="30" pos:column="7">/* 'x' is the new root node */</comment>

      <expr_stmt><expr><name><name pos:line="32" pos:column="7">x<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">key<pos:position pos:line="32" pos:column="13"/></name></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">t<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">key<pos:position pos:line="32" pos:column="22"/></name></name></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">x<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">larger<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name><name pos:line="33" pos:column="19">t<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">larger<pos:position pos:line="33" pos:column="28"/></name></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">x<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">-&gt;<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="10">smaller<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name><name pos:line="34" pos:column="20">t<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">smaller<pos:position pos:line="34" pos:column="30"/></name></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="36" pos:column="7">*<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">removed<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">t<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
      <return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">x<pos:position pos:line="37" pos:column="15"/></name></expr>;<pos:position pos:line="37" pos:column="16"/></return> <comment type="block" pos:line="37" pos:column="17">/* new root */</comment>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name><name pos:line="40" pos:column="8">t<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">smaller<pos:position pos:line="40" pos:column="18"/></name></name> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">NULL<pos:position pos:line="40" pos:column="26"/></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27"> <block pos:line="40" pos:column="28">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">x<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <name><name pos:line="41" pos:column="11">t<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">larger<pos:position pos:line="41" pos:column="20"/></name></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">x<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">Curl_splay<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">i<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="25">t<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">smaller<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">x<pos:position pos:line="45" pos:column="8"/></name><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">larger<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">t<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">larger<pos:position pos:line="45" pos:column="28"/></name></name></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">removed<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name pos:line="47" pos:column="16">t<pos:position pos:line="47" pos:column="17"/></name></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">x<pos:position pos:line="49" pos:column="13"/></name></expr>;<pos:position pos:line="49" pos:column="14"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then>
  <else pos:line="51" pos:column="3">else <block pos:line="51" pos:column="8">{
    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">removed<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">NULL<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt> <comment type="block" pos:line="52" pos:column="22">/* no match */</comment>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">t<pos:position pos:line="53" pos:column="13"/></name></expr>;<pos:position pos:line="53" pos:column="14"/></return>        <comment type="block" pos:line="53" pos:column="22">/* It wasn't there */</comment>
  }<pos:position pos:line="54" pos:column="4"/></block></else></if>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

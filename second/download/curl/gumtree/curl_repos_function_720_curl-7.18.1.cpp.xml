<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_720_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">SetupConnection<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">connectdata<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">Curl_dns_entry<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">hostaddr<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">bool<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">protocol_done<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">CURLE_OK<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">conn<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">Curl_pgrsTime<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">data<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">TIMER_NAMELOOKUP<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">conn<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">protocol<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="23">PROT_FILE<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
    <comment type="block" pos:line="11" pos:column="5">/* There's nothing in this function to setup if we're only doing
       a file:// transfer */</comment>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">protocol_done<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">TRUE<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">protocol_done<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">FALSE<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt> <comment type="block" pos:line="16" pos:column="27">/* default to not done */</comment>

  <comment type="block" pos:line="18" pos:column="3">/* set proxy_connect_closed to false unconditionally already here since it
     is used strictly to provide extra information to a parent function in the
     case of proxy CONNECT failures and we must make sure we don't have it
     lingering set from a previous invoke */</comment>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">conn<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">bits<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">proxy_connect_closed<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">FALSE<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="24" pos:column="3">/*************************************************************
   * Set user-agent for HTTP
   *************************************************************/</comment>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">(<pos:position pos:line="27" pos:column="7"/></operator><name><name pos:line="27" pos:column="7">conn<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">protocol<pos:position pos:line="27" pos:column="21"/></name></name><operator pos:line="27" pos:column="21">&amp;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="22">PROT_HTTP<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">)<pos:position pos:line="27" pos:column="32"/></operator> <operator pos:line="27" pos:column="33">&amp;&amp;<pos:position pos:line="27" pos:column="43"/></operator> <name><name pos:line="27" pos:column="36">data<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">set<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">str<pos:position pos:line="27" pos:column="49"/></name><index pos:line="27" pos:column="49">[<expr><name pos:line="27" pos:column="50">STRING_USERAGENT<pos:position pos:line="27" pos:column="66"/></name></expr>]<pos:position pos:line="27" pos:column="67"/></index></name></expr>)<pos:position pos:line="27" pos:column="68"/></condition><then pos:line="27" pos:column="68"> <block pos:line="27" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">Curl_safefree<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name><name pos:line="28" pos:column="19">conn<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">allocptr<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">uagent<pos:position pos:line="28" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">conn<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">allocptr<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">uagent<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator>
      <call><name pos:line="30" pos:column="7">aprintf<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><literal type="string" pos:line="30" pos:column="15">"User-Agent: %s\r\n"<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="37">data<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">set<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">str<pos:position pos:line="30" pos:column="50"/></name><index pos:line="30" pos:column="50">[<expr><name pos:line="30" pos:column="51">STRING_USERAGENT<pos:position pos:line="30" pos:column="67"/></name></expr>]<pos:position pos:line="30" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><operator pos:line="31" pos:column="8">!<pos:position pos:line="31" pos:column="9"/></operator><name><name pos:line="31" pos:column="9">conn<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">allocptr<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">uagent<pos:position pos:line="31" pos:column="30"/></name></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">data<pos:position pos:line="35" pos:column="7"/></name><operator pos:line="35" pos:column="7">-&gt;<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="9">req<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">headerbytecount<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">CURL_DO_LINEEND_CONV<pos:position pos:line="37" pos:column="28"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">data<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">state<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">crlf_conversions<pos:position pos:line="38" pos:column="31"/></name></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="34">0<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt> <comment type="block" pos:line="38" pos:column="37">/* reset CRLF conversion counter */</comment>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="39" pos:column="8">/* CURL_DO_LINEEND_CONV */</comment>

  <for pos:line="41" pos:column="3">for<control pos:line="41" pos:column="6">(<init pos:line="41" pos:column="7">;<pos:position pos:line="41" pos:column="8"/></init><condition pos:line="41" pos:column="8">;<pos:position pos:line="41" pos:column="9"/></condition><incr/>)<pos:position pos:line="41" pos:column="10"/></control> <block pos:line="41" pos:column="11">{
    <comment type="block" pos:line="42" pos:column="5">/* loop for CURL_SERVER_CLOSED_CONNECTION */</comment>

    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">CURL_SOCKET_BAD<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">==<pos:position pos:line="44" pos:column="26"/></operator> <name><name pos:line="44" pos:column="27">conn<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">sock<pos:position pos:line="44" pos:column="37"/></name><index pos:line="44" pos:column="37">[<expr><name pos:line="44" pos:column="38">FIRSTSOCKET<pos:position pos:line="44" pos:column="49"/></name></expr>]<pos:position pos:line="44" pos:column="50"/></index></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51"> <block pos:line="44" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">bool<pos:position pos:line="45" pos:column="11"/></name></type> <name pos:line="45" pos:column="12">connected<pos:position pos:line="45" pos:column="21"/></name> <init pos:line="45" pos:column="22">= <expr><name pos:line="45" pos:column="24">FALSE<pos:position pos:line="45" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="30"/></decl_stmt>

      <comment type="block" pos:line="47" pos:column="7">/* Connect only if not already connected! */</comment>
      <expr_stmt><expr><name pos:line="48" pos:column="7">result<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">ConnectPlease<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">data<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">conn<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">hostaddr<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="52">&amp;<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="53">connected<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>

      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><name pos:line="50" pos:column="10">connected<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block pos:line="50" pos:column="21">{
        <expr_stmt><expr><name pos:line="51" pos:column="9">result<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">Curl_protocol_connect<pos:position pos:line="51" pos:column="39"/></name><argument_list pos:line="51" pos:column="39">(<argument><expr><name pos:line="51" pos:column="40">conn<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">protocol_done<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
        <if pos:line="52" pos:column="9">if<condition pos:line="52" pos:column="11">(<expr><name pos:line="52" pos:column="12">CURLE_OK<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">==<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">result<pos:position pos:line="52" pos:column="30"/></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="11">conn<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">bits<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">.<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">tcpconnect<pos:position pos:line="53" pos:column="32"/></name></name> <operator pos:line="53" pos:column="33">=<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">TRUE<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt></block></then></if>
      }<pos:position pos:line="54" pos:column="8"/></block></then>
      <else pos:line="55" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="9">conn<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">bits<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">tcpconnect<pos:position pos:line="56" pos:column="30"/></name></name> <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <name pos:line="56" pos:column="33">FALSE<pos:position pos:line="56" pos:column="38"/></name></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="58" pos:column="7">/* if the connection was closed by the server while exchanging
         authentication informations, retry with the new set
         authentication information */</comment>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><name><name pos:line="61" pos:column="10">conn<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">bits<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">proxy_connect_closed<pos:position pos:line="61" pos:column="41"/></name></name></expr>)<pos:position pos:line="61" pos:column="42"/></condition><then pos:line="61" pos:column="42"> <block pos:line="61" pos:column="43">{
        <comment type="block" pos:line="62" pos:column="9">/* reset the error buffer */</comment>
        <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">(<expr><name><name pos:line="63" pos:column="12">data<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">set<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">.<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">errorbuffer<pos:position pos:line="63" pos:column="33"/></name></name></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="11">data<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">set<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">.<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">errorbuffer<pos:position pos:line="64" pos:column="32"/></name><index pos:line="64" pos:column="32">[<expr><literal type="number" pos:line="64" pos:column="33">0<pos:position pos:line="64" pos:column="34"/></literal></expr>]<pos:position pos:line="64" pos:column="35"/></index></name> <operator pos:line="64" pos:column="36">=<pos:position pos:line="64" pos:column="37"/></operator> <literal type="char" pos:line="64" pos:column="38">'\0'<pos:position pos:line="64" pos:column="42"/></literal></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">data<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">state<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">errorbuf<pos:position pos:line="65" pos:column="29"/></name></name> <operator pos:line="65" pos:column="30">=<pos:position pos:line="65" pos:column="31"/></operator> <name pos:line="65" pos:column="32">FALSE<pos:position pos:line="65" pos:column="37"/></name></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>
        <continue pos:line="66" pos:column="9">continue;<pos:position pos:line="66" pos:column="18"/></continue>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>

      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><name pos:line="69" pos:column="10">CURLE_OK<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">!=<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="22">result<pos:position pos:line="69" pos:column="28"/></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29">
        <block type="pseudo"><return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">result<pos:position pos:line="70" pos:column="22"/></name></expr>;<pos:position pos:line="70" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <else pos:line="72" pos:column="5">else <block pos:line="72" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">Curl_pgrsTime<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">data<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">TIMER_CONNECT<pos:position pos:line="73" pos:column="40"/></name></expr></argument>)<pos:position pos:line="73" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="42"/></expr_stmt> <comment type="block" pos:line="73" pos:column="43">/* we're connected already */</comment>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">conn<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">bits<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">.<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">tcpconnect<pos:position pos:line="74" pos:column="28"/></name></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">TRUE<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="75" pos:column="7">*<pos:position pos:line="75" pos:column="8"/></operator><name pos:line="75" pos:column="8">protocol_done<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">TRUE<pos:position pos:line="75" pos:column="28"/></name></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
      <if pos:line="76" pos:column="7">if<condition pos:line="76" pos:column="9">(<expr><name><name pos:line="76" pos:column="10">data<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">set<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">.<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="20">verbose<pos:position pos:line="76" pos:column="27"/></name></name></expr>)<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">verboseconnect<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">conn<pos:position pos:line="77" pos:column="28"/></name></expr></argument>)<pos:position pos:line="77" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt></block></then></if>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="79" pos:column="5">/* Stop the loop now */</comment>
    <break pos:line="80" pos:column="5">break;<pos:position pos:line="80" pos:column="11"/></break>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="83" pos:column="3">conn<pos:position pos:line="83" pos:column="7"/></name><operator pos:line="83" pos:column="7">-&gt;<pos:position pos:line="83" pos:column="12"/></operator><name pos:line="83" pos:column="9">now<pos:position pos:line="83" pos:column="12"/></name></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">Curl_tvnow<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">()<pos:position pos:line="83" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt> <comment type="block" pos:line="83" pos:column="29">/* time this *after* the connect is done, we
                               set this here perhaps a second time */</comment>

<cpp:ifdef pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">ifdef<pos:position pos:line="86" pos:column="7"/></cpp:directive> <name pos:line="86" pos:column="8">__EMX__<pos:position pos:line="86" pos:column="15"/></name></cpp:ifdef>
  <comment type="block" pos:line="87" pos:column="3">/* 20000330 mgs
   * the check is quite a hack...
   * we're calling _fsetmode to fix the problem with fwrite converting newline
   * characters (you get mangled text files, and corrupted binary files when
   * you download to stdout and redirect it to a file). */</comment>

  <if pos:line="93" pos:column="3">if<condition pos:line="93" pos:column="5">(<expr><name><operator pos:line="93" pos:column="6">(<pos:position pos:line="93" pos:column="7"/></operator><name><name pos:line="93" pos:column="7">data<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">set<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">.<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="17">out<pos:position pos:line="93" pos:column="20"/></name></name><operator pos:line="93" pos:column="20">)<pos:position pos:line="93" pos:column="21"/></operator><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">_handle<pos:position pos:line="93" pos:column="30"/></name></name> <operator pos:line="93" pos:column="31">==<pos:position pos:line="93" pos:column="33"/></operator> <name pos:line="93" pos:column="34">NULL<pos:position pos:line="93" pos:column="38"/></name></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39"> <block pos:line="93" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">_fsetmode<pos:position pos:line="94" pos:column="14"/></name><argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">stdout<pos:position pos:line="94" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="23">"b"<pos:position pos:line="94" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif<pos:position pos:line="96" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="98" pos:column="3">return <expr><name pos:line="98" pos:column="10">CURLE_OK<pos:position pos:line="98" pos:column="18"/></name></expr>;<pos:position pos:line="98" pos:column="19"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

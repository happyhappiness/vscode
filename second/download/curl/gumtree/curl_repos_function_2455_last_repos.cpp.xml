<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2455_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Curl_gskit_shutdown<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">sockindex<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ssl_connect_data<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">connssl<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name><name pos:line="3" pos:column="39">conn<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">ssl<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[<expr><name pos:line="3" pos:column="49">sockindex<pos:position pos:line="3" pos:column="58"/></name></expr>]<pos:position pos:line="3" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">nread<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">what<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buf<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><literal type="number" pos:line="8" pos:column="12">120<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">BACKEND<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">handle<pos:position pos:line="10" pos:column="22"/></name></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">data<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">set<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">ftp_ccc<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">!=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">CURLFTPSSL_CCC_ACTIVE<pos:position pos:line="13" pos:column="48"/></name></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">close_one<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">connssl<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">conn<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">sockindex<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">rc<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <literal type="number" pos:line="17" pos:column="8">0<pos:position pos:line="17" pos:column="9"/></literal></expr>;<pos:position pos:line="17" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">what<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">SOCKET_READABLE<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">conn<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">sock<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name pos:line="18" pos:column="37">sockindex<pos:position pos:line="18" pos:column="46"/></name></expr>]<pos:position pos:line="18" pos:column="47"/></index></name></expr></argument>,
                         <argument><expr><name pos:line="19" pos:column="26">SSL_SHUTDOWN_TIMEOUT<pos:position pos:line="19" pos:column="46"/></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>

  <for pos:line="21" pos:column="3">for<control pos:line="21" pos:column="6">(<init pos:line="21" pos:column="7">;<pos:position pos:line="21" pos:column="8"/></init><condition pos:line="21" pos:column="8">;<pos:position pos:line="21" pos:column="9"/></condition><incr/>)<pos:position pos:line="21" pos:column="10"/></control> <block pos:line="21" pos:column="11">{
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><name pos:line="22" pos:column="8">what<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&lt;<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block pos:line="22" pos:column="18">{
      <comment type="block" pos:line="23" pos:column="7">/* anything that gets here is fatally bad */</comment>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">failf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">data<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"select/poll on SSL socket, errno: %d"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">SOCKERRNO<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
      <break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">what<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <block pos:line="29" pos:column="15">{                                <comment type="block" pos:line="29" pos:column="48">/* timeout */</comment>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">failf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">data<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"SSL shutdown timeout"<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* Something to read, let's do it and hope that it is the close
       notify alert from the server. No way to gsk_secure_soc_read() now, so
       use read(). */</comment>

    <expr_stmt><expr><name pos:line="38" pos:column="5">nread<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">read<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name><name pos:line="38" pos:column="18">conn<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">sock<pos:position pos:line="38" pos:column="28"/></name><index pos:line="38" pos:column="28">[<expr><name pos:line="38" pos:column="29">sockindex<pos:position pos:line="38" pos:column="38"/></name></expr>]<pos:position pos:line="38" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">buf<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="46">sizeof<argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">buf<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">nread<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">&lt;<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18"> <block pos:line="40" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">failf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">data<pos:position pos:line="41" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"read: %s"<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="31">strerror<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">errno<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">rc<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <operator pos:line="42" pos:column="12">-<pos:position pos:line="42" pos:column="13"/></operator><literal type="number" pos:line="42" pos:column="13">1<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><name pos:line="45" pos:column="8">nread<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">&lt;=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="17">0<pos:position pos:line="45" pos:column="18"/></literal></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
      <block type="pseudo"><break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="48" pos:column="5">what<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <call><name pos:line="48" pos:column="12">SOCKET_READABLE<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name><name pos:line="48" pos:column="28">conn<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">sock<pos:position pos:line="48" pos:column="38"/></name><index pos:line="48" pos:column="38">[<expr><name pos:line="48" pos:column="39">sockindex<pos:position pos:line="48" pos:column="48"/></name></expr>]<pos:position pos:line="48" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="51">0<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></for>

  <return pos:line="51" pos:column="3">return <expr><name pos:line="51" pos:column="10">rc<pos:position pos:line="51" pos:column="12"/></name></expr>;<pos:position pos:line="51" pos:column="13"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

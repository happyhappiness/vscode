<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_496_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">ossl_connect_step3<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">connectdata<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">conn<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">sockindex<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">retcode<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">CURLE_OK<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">void<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ssl_sessionid<pos:position pos:line="6" pos:column="22"/></name><init pos:line="6" pos:column="22">=<expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">ssl_connect_data<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">connssl<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name><name pos:line="8" pos:column="39">conn<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">ssl<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">sockindex<pos:position pos:line="8" pos:column="58"/></name></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUGASSERT<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">ssl_connect_3<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">==<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="32">connssl<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">connecting_state<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><call><name pos:line="12" pos:column="6">Curl_ssl_getsessionid<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">conn<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">ssl_sessionid<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">NULL<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
    <comment type="block" pos:line="13" pos:column="5">/* Since this is not a cached session ID, then we want to stach this one
       in the cache! */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">SSL_SESSION<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">our_ssl_sessionid<pos:position pos:line="15" pos:column="35"/></name></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">HAVE_SSL_GET1_SESSION<pos:position pos:line="16" pos:column="29"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="17" pos:column="5">our_ssl_sessionid<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">SSL_get1_session<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name><name pos:line="17" pos:column="42">connssl<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">handle<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* SSL_get1_session() will increment the reference
       count and the session will stay in memory until explicitly freed with
       SSL_SESSION_free(3), regardless of its state.
       This function was introduced in openssl 0.9.5a. */</comment>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="24" pos:column="5">our_ssl_sessionid<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">SSL_get_session<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name><name pos:line="24" pos:column="41">connssl<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">handle<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* if SSL_get1_session() is unavailable, use SSL_get_session().
       This is an inferior option because the session can be flushed
       at any time by openssl. It is included only so curl compiles
       under versions of openssl &lt; 0.9.5a.

       WARNING: How curl behaves if it's session is flushed is
       untested.
    */</comment>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="35" pos:column="5">retcode<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">Curl_ssl_addsessionid<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">conn<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">our_ssl_sessionid<pos:position pos:line="35" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><literal type="number" pos:line="36" pos:column="37">0<pos:position pos:line="36" pos:column="38"/></literal></expr></argument> <comment type="block" pos:line="36" pos:column="39">/* unknown size */</comment>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">retcode<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16"> <block pos:line="37" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">failf<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">data<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"failed to store ssl session"<pos:position pos:line="38" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">retcode<pos:position pos:line="39" pos:column="21"/></name></expr>;<pos:position pos:line="39" pos:column="22"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="44" pos:column="3">/*
   * We check certificates to authenticate the server; otherwise we risk
   * man-in-the-middle attack; NEVERTHELESS, if we're told explicitly not to
   * verify the peer ignore faults and failures from the server cert
   * operations.
   */</comment>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name><name pos:line="51" pos:column="7">data<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">set<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">ssl<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">.<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">verifypeer<pos:position pos:line="51" pos:column="31"/></name></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="5">(<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">void<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">)<pos:position pos:line="52" pos:column="11"/></operator><call><name pos:line="52" pos:column="11">servercert<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">conn<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">connssl<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">FALSE<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt></block></then>
  <else pos:line="53" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="5">retcode<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">servercert<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">conn<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">connssl<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="41">TRUE<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt></block></else></if>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name pos:line="56" pos:column="6">CURLE_OK<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">==<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">retcode<pos:position pos:line="56" pos:column="25"/></name></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="5">connssl<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">connecting_state<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">ssl_connect_done<pos:position pos:line="57" pos:column="49"/></name></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt></block></then></if>
  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">retcode<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

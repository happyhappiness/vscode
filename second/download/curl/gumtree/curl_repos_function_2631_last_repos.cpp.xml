<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2631_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SECStatus<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">nss_auth_cert_hook<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">arg<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">PRFileDesc<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">fd<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">PRBool<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">checksig<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">PRBool<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">isServer<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">connectdata<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator>struct <name pos:line="4" pos:column="38">connectdata<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">arg<pos:position pos:line="4" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">SSL_ENABLE_OCSP_STAPLING<pos:position pos:line="6" pos:column="32"/></name></cpp:ifdef>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><call><name pos:line="7" pos:column="6">SSL_CONN_CONFIG<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">verifystatus<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SECStatus<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">cacheResult<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">SECItemArray<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">csa<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><call><name pos:line="10" pos:column="31">SSL_PeerStapledOCSPResponses<pos:position pos:line="10" pos:column="59"/></name><argument_list pos:line="10" pos:column="59">(<argument><expr><name pos:line="10" pos:column="60">fd<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><operator pos:line="11" pos:column="8">!<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">csa<pos:position pos:line="11" pos:column="12"/></name></expr>)<pos:position pos:line="11" pos:column="13"/></condition><then pos:line="11" pos:column="13"> <block pos:line="11" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">failf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name><name pos:line="12" pos:column="13">conn<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">data<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"Invalid OCSP response"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">SECFailure<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name><name pos:line="16" pos:column="8">csa<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">failf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name><name pos:line="17" pos:column="13">conn<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">data<pos:position pos:line="17" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"No OCSP response received"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">SECFailure<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">cacheResult<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">CERT_CacheOCSPResponseFromSideChannel<pos:position pos:line="21" pos:column="56"/></name><argument_list pos:line="21" pos:column="56">(
      <argument><expr><call><name pos:line="22" pos:column="7">CERT_GetDefaultCertDB<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="32">SSL_PeerCertificate<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">fd<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr></argument>,
      <argument><expr><call><name pos:line="23" pos:column="7">PR_Now<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">()<pos:position pos:line="23" pos:column="15"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator><name><name pos:line="23" pos:column="18">csa<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">items<pos:position pos:line="23" pos:column="28"/></name><index pos:line="23" pos:column="28">[<expr><literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>]<pos:position pos:line="23" pos:column="31"/></index></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">arg<pos:position pos:line="23" pos:column="36"/></name></expr></argument>
    )<pos:position pos:line="24" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="7"/></expr_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">cacheResult<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">!=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">SECSuccess<pos:position pos:line="26" pos:column="33"/></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">failf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name><name pos:line="27" pos:column="13">conn<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">data<pos:position pos:line="27" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="25">"Invalid OCSP response"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">cacheResult<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><call><name pos:line="33" pos:column="7">SSL_CONN_CONFIG<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">verifypeer<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35"> <block pos:line="33" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">infof<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name><name pos:line="34" pos:column="11">conn<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">data<pos:position pos:line="34" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"skipping SSL peer certificate verification\n"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">SECSuccess<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><call><name pos:line="38" pos:column="10">SSL_AuthCertificate<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><call><name pos:line="38" pos:column="30">CERT_GetDefaultCertDB<pos:position pos:line="38" pos:column="51"/></name><argument_list pos:line="38" pos:column="51">()<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">fd<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">checksig<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="69">isServer<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="79"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

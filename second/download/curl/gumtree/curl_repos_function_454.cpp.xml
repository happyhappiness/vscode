<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_454.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_perform<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">CURLM<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">multi_handle<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">running_handles<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name><init pos:line="3" pos:column="27">=<expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">Curl_multi<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">)<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">multi_handle<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_one_easy<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">easy<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">done<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLMcode<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">result<pos:position pos:line="6" pos:column="19"/></name><init pos:line="6" pos:column="19">=<expr><name pos:line="6" pos:column="20">CURLM_OK<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_message<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">msg<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">connected<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">bool<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">async<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">bool<pos:position pos:line="10" pos:column="7"/></name></type> <name pos:line="10" pos:column="8">protocol_connect<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">bool<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">dophase_done<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">running_handles<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt> <comment type="block" pos:line="13" pos:column="25">/* bump this once for every living handle */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><call><name pos:line="15" pos:column="7">GOOD_MULTI_HANDLE<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">multi<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">easy<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">multi<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">easy<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">next<pos:position pos:line="18" pos:column="24"/></name></name></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  <while pos:line="19" pos:column="3">while<condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">easy<pos:position pos:line="19" pos:column="13"/></name></expr>)<pos:position pos:line="19" pos:column="14"/></condition> <block pos:line="19" pos:column="15">{
    <do pos:line="20" pos:column="5">do <block pos:line="20" pos:column="8">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">CURLM_STATE_WAITCONNECT<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&lt;=<pos:position pos:line="21" pos:column="40"/></operator> <name><name pos:line="21" pos:column="38">easy<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">state<pos:position pos:line="21" pos:column="49"/></name></name> <operator pos:line="21" pos:column="50">&amp;&amp;<pos:position pos:line="21" pos:column="60"/></operator>
          <name><name pos:line="22" pos:column="11">easy<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">state<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">&lt;=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="26">CURLM_STATE_DO<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator>
          <name><name pos:line="23" pos:column="11">easy<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">easy_handle<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">change<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">url_changed<pos:position pos:line="23" pos:column="48"/></name></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49"> <block pos:line="23" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">gotourl<pos:position pos:line="24" pos:column="22"/></name></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">Curl_posttransfer<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">easy<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">easy_handle<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="27" pos:column="9">easy<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">result<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">Curl_done<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name><name pos:line="27" pos:column="35">easy<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">easy_conn<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">CURLE_OK<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
        <if pos:line="28" pos:column="9">if<condition pos:line="28" pos:column="11">(<expr><name pos:line="28" pos:column="12">CURLE_OK<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <name><name pos:line="28" pos:column="24">easy<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">result<pos:position pos:line="28" pos:column="36"/></name></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
          <expr_stmt><expr><name pos:line="29" pos:column="11">gotourl<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">strdup<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name><name pos:line="29" pos:column="28">easy<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">easy_handle<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">change<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">.<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="54">url<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
          <if pos:line="30" pos:column="11">if<condition pos:line="30" pos:column="13">(<expr><name pos:line="30" pos:column="14">gotourl<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">easy<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">easy_handle<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">change<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">.<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">url_changed<pos:position pos:line="31" pos:column="50"/></name></name> <operator pos:line="31" pos:column="51">=<pos:position pos:line="31" pos:column="52"/></operator> <name pos:line="31" pos:column="53">FALSE<pos:position pos:line="31" pos:column="58"/></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">easy<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">result<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">Curl_follow<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name><name pos:line="32" pos:column="40">easy<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">easy_handle<pos:position pos:line="32" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">gotourl<pos:position pos:line="32" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">FALSE<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
            <if pos:line="33" pos:column="13">if<condition pos:line="33" pos:column="15">(<expr><name pos:line="33" pos:column="16">CURLE_OK<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name><name pos:line="33" pos:column="28">easy<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">result<pos:position pos:line="33" pos:column="40"/></name></name></expr>)<pos:position pos:line="33" pos:column="41"/></condition><then pos:line="33" pos:column="41">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="15">multistate<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">easy<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">CURLM_STATE_CONNECT<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt></block></then>
            <else pos:line="35" pos:column="13">else
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="15">free<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">gotourl<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt></block></else></if>
          }<pos:position pos:line="37" pos:column="12"/></block></then>
          <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">easy<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">result<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">CURLE_OUT_OF_MEMORY<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">multistate<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">easy<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">CURLM_STATE_COMPLETED<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
          }<pos:position pos:line="42" pos:column="12"/></block></else></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="46" pos:column="7">easy<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">easy_handle<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">change<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">.<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="33">url_changed<pos:position pos:line="46" pos:column="44"/></name></name> <operator pos:line="46" pos:column="45">=<pos:position pos:line="46" pos:column="46"/></operator> <name pos:line="46" pos:column="47">FALSE<pos:position pos:line="46" pos:column="52"/></name></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>

      <switch pos:line="48" pos:column="7">switch<condition pos:line="48" pos:column="13">(<expr><name><name pos:line="48" pos:column="14">easy<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">state<pos:position pos:line="48" pos:column="25"/></name></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition> <block pos:line="48" pos:column="27">{
      <case pos:line="49" pos:column="7">case <expr><name pos:line="49" pos:column="12">CURLM_STATE_INIT<pos:position pos:line="49" pos:column="28"/></name></expr>:<pos:position pos:line="49" pos:column="29"/></case>
        <comment type="block" pos:line="50" pos:column="9">/* init this transfer. */</comment>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">easy<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">result<pos:position pos:line="51" pos:column="21"/></name></name><operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator><call><name pos:line="51" pos:column="22">Curl_pretransfer<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><name><name pos:line="51" pos:column="39">easy<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">easy_handle<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>

        <if pos:line="53" pos:column="9">if<condition pos:line="53" pos:column="11">(<expr><name pos:line="53" pos:column="12">CURLE_OK<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">==<pos:position pos:line="53" pos:column="23"/></operator> <name><name pos:line="53" pos:column="24">easy<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">result<pos:position pos:line="53" pos:column="36"/></name></name></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37"> <block pos:line="53" pos:column="38">{
          <comment type="block" pos:line="54" pos:column="11">/* after init, go CONNECT */</comment>
          <expr_stmt><expr><call><name pos:line="55" pos:column="11">multistate<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">easy<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="28">CURLM_STATE_CONNECT<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><name pos:line="56" pos:column="11">result<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="56" pos:column="44"/></name></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>

          <expr_stmt><expr><name><name pos:line="58" pos:column="11">easy<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">easy_handle<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">state<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">.<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="36">used_interface<pos:position pos:line="58" pos:column="50"/></name></name> <operator pos:line="58" pos:column="51">=<pos:position pos:line="58" pos:column="52"/></operator> <name pos:line="58" pos:column="53">Curl_if_multi<pos:position pos:line="58" pos:column="66"/></name></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break>

      <case pos:line="62" pos:column="7">case <expr><name pos:line="62" pos:column="12">CURLM_STATE_CONNECT<pos:position pos:line="62" pos:column="31"/></name></expr>:<pos:position pos:line="62" pos:column="32"/></case>
        <comment type="block" pos:line="63" pos:column="9">/* Connect. We get a connection identifier filled in. */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">Curl_pgrsTime<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name><name pos:line="64" pos:column="23">easy<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">-&gt;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="29">easy_handle<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">TIMER_STARTSINGLE<pos:position pos:line="64" pos:column="59"/></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">easy<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">result<pos:position pos:line="65" pos:column="21"/></name></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <call><name pos:line="65" pos:column="24">Curl_connect<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><name><name pos:line="65" pos:column="37">easy<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">-&gt;<pos:position pos:line="65" pos:column="46"/></operator><name pos:line="65" pos:column="43">easy_handle<pos:position pos:line="65" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="56">&amp;<pos:position pos:line="65" pos:column="61"/></operator><name><name pos:line="65" pos:column="57">easy<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">-&gt;<pos:position pos:line="65" pos:column="66"/></operator><name pos:line="65" pos:column="63">easy_conn<pos:position pos:line="65" pos:column="72"/></name></name></expr></argument>,
                                    <argument><expr><operator pos:line="66" pos:column="37">&amp;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="38">async<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="45">&amp;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="46">protocol_connect<pos:position pos:line="66" pos:column="62"/></name></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt>

        <if pos:line="68" pos:column="9">if<condition pos:line="68" pos:column="11">(<expr><name pos:line="68" pos:column="12">CURLE_OK<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">==<pos:position pos:line="68" pos:column="23"/></operator> <name><name pos:line="68" pos:column="24">easy<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">result<pos:position pos:line="68" pos:column="36"/></name></name></expr>)<pos:position pos:line="68" pos:column="37"/></condition><then pos:line="68" pos:column="37"> <block pos:line="68" pos:column="38">{
          <if pos:line="69" pos:column="11">if<condition pos:line="69" pos:column="13">(<expr><name pos:line="69" pos:column="14">async<pos:position pos:line="69" pos:column="19"/></name></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20">
            <comment type="block" pos:line="70" pos:column="13">/* We're now waiting for an asynchronous name lookup */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="13">multistate<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">easy<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">CURLM_STATE_WAITRESOLVE<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt></block></then>
          <else pos:line="72" pos:column="11">else <block pos:line="72" pos:column="16">{
            <comment type="block" pos:line="73" pos:column="13">/* after the connect has been sent off, go WAITCONNECT unless the
               protocol connect is already done and we can go directly to
               DO! */</comment>
            <expr_stmt><expr><name pos:line="76" pos:column="13">result<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="76" pos:column="46"/></name></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>

            <if pos:line="78" pos:column="13">if<condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">protocol_connect<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="15">multistate<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">easy<pos:position pos:line="79" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="32">CURLM_STATE_DO<pos:position pos:line="79" pos:column="46"/></name></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt></block></then>
            <else pos:line="80" pos:column="13">else
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="15">multistate<pos:position pos:line="81" pos:column="25"/></name><argument_list pos:line="81" pos:column="25">(<argument><expr><name pos:line="81" pos:column="26">easy<pos:position pos:line="81" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="32">CURLM_STATE_WAITCONNECT<pos:position pos:line="81" pos:column="55"/></name></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt></block></else></if>
          }<pos:position pos:line="82" pos:column="12"/></block></else></if>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
        <break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break>

      <case pos:line="86" pos:column="7">case <expr><name pos:line="86" pos:column="12">CURLM_STATE_WAITRESOLVE<pos:position pos:line="86" pos:column="35"/></name></expr>:<pos:position pos:line="86" pos:column="36"/></case>
        <comment type="block" pos:line="87" pos:column="9">/* awaiting an asynch name resolve to complete */</comment>
      <block pos:line="88" pos:column="7">{
        <decl_stmt><decl><type><name><name pos:line="89" pos:column="9">struct<pos:position pos:line="89" pos:column="15"/></name> <name pos:line="89" pos:column="16">Curl_dns_entry<pos:position pos:line="89" pos:column="30"/></name></name> <modifier pos:line="89" pos:column="31">*<pos:position pos:line="89" pos:column="32"/></modifier></type><name pos:line="89" pos:column="32">dns<pos:position pos:line="89" pos:column="35"/></name> <init pos:line="89" pos:column="36">= <expr><name pos:line="89" pos:column="38">NULL<pos:position pos:line="89" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="89" pos:column="43"/></decl_stmt>

        <comment type="block" pos:line="91" pos:column="9">/* check if we have the name resolved by now */</comment>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">easy<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">result<pos:position pos:line="92" pos:column="21"/></name></name> <operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator> <call><name pos:line="92" pos:column="24">Curl_is_resolved<pos:position pos:line="92" pos:column="40"/></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name><name pos:line="92" pos:column="41">easy<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">-&gt;<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="47">easy_conn<pos:position pos:line="92" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="58">&amp;<pos:position pos:line="92" pos:column="63"/></operator><name pos:line="92" pos:column="59">dns<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="64"/></expr_stmt>

        <if pos:line="94" pos:column="9">if<condition pos:line="94" pos:column="11">(<expr><name pos:line="94" pos:column="12">dns<pos:position pos:line="94" pos:column="15"/></name></expr>)<pos:position pos:line="94" pos:column="16"/></condition><then pos:line="94" pos:column="16"> <block pos:line="94" pos:column="17">{
          <comment type="block" pos:line="95" pos:column="11">/* Perform the next step in the connection phase, and then move on
             to the WAITCONNECT state */</comment>
          <expr_stmt><expr><name><name pos:line="97" pos:column="11">easy<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">result<pos:position pos:line="97" pos:column="23"/></name></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <call><name pos:line="97" pos:column="26">Curl_async_resolved<pos:position pos:line="97" pos:column="45"/></name><argument_list pos:line="97" pos:column="45">(<argument><expr><name><name pos:line="97" pos:column="46">easy<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">-&gt;<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="52">easy_conn<pos:position pos:line="97" pos:column="61"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="98" pos:column="46">&amp;<pos:position pos:line="98" pos:column="51"/></operator><name pos:line="98" pos:column="47">protocol_connect<pos:position pos:line="98" pos:column="63"/></name></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="65"/></expr_stmt>

          <if pos:line="100" pos:column="11">if<condition pos:line="100" pos:column="13">(<expr><name pos:line="100" pos:column="14">CURLE_OK<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">!=<pos:position pos:line="100" pos:column="25"/></operator> <name><name pos:line="100" pos:column="26">easy<pos:position pos:line="100" pos:column="30"/></name><operator pos:line="100" pos:column="30">-&gt;<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="32">result<pos:position pos:line="100" pos:column="38"/></name></name></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
            <comment type="block" pos:line="101" pos:column="13">/* if Curl_async_resolved() returns failure, the connection struct
               is already freed and gone */</comment>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="13">easy<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">easy_conn<pos:position pos:line="103" pos:column="28"/></name></name> <operator pos:line="103" pos:column="29">=<pos:position pos:line="103" pos:column="30"/></operator> <name pos:line="103" pos:column="31">NULL<pos:position pos:line="103" pos:column="35"/></name></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt></block></then>           <comment type="block" pos:line="103" pos:column="47">/* no more connection */</comment>
          <else pos:line="104" pos:column="11">else <block pos:line="104" pos:column="16">{
            <comment type="block" pos:line="105" pos:column="13">/* FIX: what if protocol_connect is TRUE here?! */</comment>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">multistate<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">easy<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="30">CURLM_STATE_WAITCONNECT<pos:position pos:line="106" pos:column="53"/></name></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="55"/></expr_stmt>
          }<pos:position pos:line="107" pos:column="12"/></block></else></if>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if>

        <if pos:line="110" pos:column="9">if<condition pos:line="110" pos:column="11">(<expr><name pos:line="110" pos:column="12">CURLE_OK<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">!=<pos:position pos:line="110" pos:column="23"/></operator> <name><name pos:line="110" pos:column="24">easy<pos:position pos:line="110" pos:column="28"/></name><operator pos:line="110" pos:column="28">-&gt;<pos:position pos:line="110" pos:column="33"/></operator><name pos:line="110" pos:column="30">result<pos:position pos:line="110" pos:column="36"/></name></name></expr>)<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37"> <block pos:line="110" pos:column="38">{
          <comment type="block" pos:line="111" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="112" pos:column="11">Curl_disconnect<pos:position pos:line="112" pos:column="26"/></name><argument_list pos:line="112" pos:column="26">(<argument><expr><name><name pos:line="112" pos:column="27">easy<pos:position pos:line="112" pos:column="31"/></name><operator pos:line="112" pos:column="31">-&gt;<pos:position pos:line="112" pos:column="36"/></operator><name pos:line="112" pos:column="33">easy_conn<pos:position pos:line="112" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="44"/></expr_stmt> <comment type="block" pos:line="112" pos:column="45">/* disconnect properly */</comment>
          <expr_stmt><expr><name><name pos:line="113" pos:column="11">easy<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">-&gt;<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="17">easy_conn<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <name pos:line="113" pos:column="29">NULL<pos:position pos:line="113" pos:column="33"/></name></expr>;<pos:position pos:line="113" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="113" pos:column="45">/* no more connection */</comment>
          <break pos:line="114" pos:column="11">break;<pos:position pos:line="114" pos:column="17"/></break>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>
      }<pos:position pos:line="116" pos:column="8"/></block>
      <break pos:line="117" pos:column="7">break;<pos:position pos:line="117" pos:column="13"/></break>

      <case pos:line="119" pos:column="7">case <expr><name pos:line="119" pos:column="12">CURLM_STATE_WAITCONNECT<pos:position pos:line="119" pos:column="35"/></name></expr>:<pos:position pos:line="119" pos:column="36"/></case>
        <comment type="block" pos:line="120" pos:column="9">/* awaiting a completion of an asynch connect */</comment>
        <expr_stmt><expr><name><name pos:line="121" pos:column="9">easy<pos:position pos:line="121" pos:column="13"/></name><operator pos:line="121" pos:column="13">-&gt;<pos:position pos:line="121" pos:column="18"/></operator><name pos:line="121" pos:column="15">result<pos:position pos:line="121" pos:column="21"/></name></name> <operator pos:line="121" pos:column="22">=<pos:position pos:line="121" pos:column="23"/></operator> <call><name pos:line="121" pos:column="24">Curl_is_connected<pos:position pos:line="121" pos:column="41"/></name><argument_list pos:line="121" pos:column="41">(<argument><expr><name><name pos:line="121" pos:column="42">easy<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">-&gt;<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="48">easy_conn<pos:position pos:line="121" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="59">FIRSTSOCKET<pos:position pos:line="121" pos:column="70"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="122" pos:column="42">&amp;<pos:position pos:line="122" pos:column="47"/></operator><name pos:line="122" pos:column="43">connected<pos:position pos:line="122" pos:column="52"/></name></expr></argument>)<pos:position pos:line="122" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="54"/></expr_stmt>
        <if pos:line="123" pos:column="9">if<condition pos:line="123" pos:column="11">(<expr><name pos:line="123" pos:column="12">connected<pos:position pos:line="123" pos:column="21"/></name></expr>)<pos:position pos:line="123" pos:column="22"/></condition><then pos:line="123" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="11">easy<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">-&gt;<pos:position pos:line="124" pos:column="20"/></operator><name pos:line="124" pos:column="17">result<pos:position pos:line="124" pos:column="23"/></name></name> <operator pos:line="124" pos:column="24">=<pos:position pos:line="124" pos:column="25"/></operator> <call><name pos:line="124" pos:column="26">Curl_protocol_connect<pos:position pos:line="124" pos:column="47"/></name><argument_list pos:line="124" pos:column="47">(<argument><expr><name><name pos:line="124" pos:column="48">easy<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">-&gt;<pos:position pos:line="124" pos:column="57"/></operator><name pos:line="124" pos:column="54">easy_conn<pos:position pos:line="124" pos:column="63"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="125" pos:column="48">&amp;<pos:position pos:line="125" pos:column="53"/></operator><name pos:line="125" pos:column="49">protocol_connect<pos:position pos:line="125" pos:column="65"/></name></expr></argument>)<pos:position pos:line="125" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="67"/></expr_stmt></block></then></if>

        <if pos:line="127" pos:column="9">if<condition pos:line="127" pos:column="11">(<expr><name pos:line="127" pos:column="12">CURLE_OK<pos:position pos:line="127" pos:column="20"/></name> <operator pos:line="127" pos:column="21">!=<pos:position pos:line="127" pos:column="23"/></operator> <name><name pos:line="127" pos:column="24">easy<pos:position pos:line="127" pos:column="28"/></name><operator pos:line="127" pos:column="28">-&gt;<pos:position pos:line="127" pos:column="33"/></operator><name pos:line="127" pos:column="30">result<pos:position pos:line="127" pos:column="36"/></name></name></expr>)<pos:position pos:line="127" pos:column="37"/></condition><then pos:line="127" pos:column="37"> <block pos:line="127" pos:column="38">{
          <comment type="block" pos:line="128" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">Curl_disconnect<pos:position pos:line="129" pos:column="26"/></name><argument_list pos:line="129" pos:column="26">(<argument><expr><name><name pos:line="129" pos:column="27">easy<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">-&gt;<pos:position pos:line="129" pos:column="36"/></operator><name pos:line="129" pos:column="33">easy_conn<pos:position pos:line="129" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="44"/></expr_stmt> <comment type="block" pos:line="129" pos:column="45">/* close the connection */</comment>
          <expr_stmt><expr><name><name pos:line="130" pos:column="11">easy<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">easy_conn<pos:position pos:line="130" pos:column="26"/></name></name> <operator pos:line="130" pos:column="27">=<pos:position pos:line="130" pos:column="28"/></operator> <name pos:line="130" pos:column="29">NULL<pos:position pos:line="130" pos:column="33"/></name></expr>;<pos:position pos:line="130" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="130" pos:column="45">/* no more connection */</comment>
          <break pos:line="131" pos:column="11">break;<pos:position pos:line="131" pos:column="17"/></break>
        }<pos:position pos:line="132" pos:column="10"/></block></then></if>

        <if pos:line="134" pos:column="9">if<condition pos:line="134" pos:column="11">(<expr><name pos:line="134" pos:column="12">connected<pos:position pos:line="134" pos:column="21"/></name></expr>)<pos:position pos:line="134" pos:column="22"/></condition><then pos:line="134" pos:column="22"> <block pos:line="134" pos:column="23">{
          <if pos:line="135" pos:column="11">if<condition pos:line="135" pos:column="13">(<expr><operator pos:line="135" pos:column="14">!<pos:position pos:line="135" pos:column="15"/></operator><name pos:line="135" pos:column="15">protocol_connect<pos:position pos:line="135" pos:column="31"/></name></expr>)<pos:position pos:line="135" pos:column="32"/></condition><then pos:line="135" pos:column="32"> <block pos:line="135" pos:column="33">{
            <comment type="block" pos:line="136" pos:column="13">/* We have a TCP connection, but 'protocol_connect' may be false
               and then we continue to 'STATE_PROTOCONNECT'. If protocol
               connect is TRUE, we move on to STATE_DO. */</comment>
            <expr_stmt><expr><call><name pos:line="139" pos:column="13">multistate<pos:position pos:line="139" pos:column="23"/></name><argument_list pos:line="139" pos:column="23">(<argument><expr><name pos:line="139" pos:column="24">easy<pos:position pos:line="139" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="30">CURLM_STATE_PROTOCONNECT<pos:position pos:line="139" pos:column="54"/></name></expr></argument>)<pos:position pos:line="139" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="140" pos:column="12"/></block></then>
          <else pos:line="141" pos:column="11">else <block pos:line="141" pos:column="16">{
            <comment type="block" pos:line="142" pos:column="13">/* after the connect has completed, go DO */</comment>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">multistate<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><name pos:line="143" pos:column="24">easy<pos:position pos:line="143" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="30">CURLM_STATE_DO<pos:position pos:line="143" pos:column="44"/></name></expr></argument>)<pos:position pos:line="143" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="144" pos:column="13">result<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">=<pos:position pos:line="144" pos:column="21"/></operator> <name pos:line="144" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="144" pos:column="46"/></name></expr>;<pos:position pos:line="144" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="145" pos:column="12"/></block></else></if>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if>
        <break pos:line="147" pos:column="9">break;<pos:position pos:line="147" pos:column="15"/></break>

      <case pos:line="149" pos:column="7">case <expr><name pos:line="149" pos:column="12">CURLM_STATE_PROTOCONNECT<pos:position pos:line="149" pos:column="36"/></name></expr>:<pos:position pos:line="149" pos:column="37"/></case>
        <comment type="block" pos:line="150" pos:column="9">/* protocol-specific connect phase */</comment>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">easy<pos:position pos:line="151" pos:column="13"/></name><operator pos:line="151" pos:column="13">-&gt;<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="15">result<pos:position pos:line="151" pos:column="21"/></name></name> <operator pos:line="151" pos:column="22">=<pos:position pos:line="151" pos:column="23"/></operator> <call><name pos:line="151" pos:column="24">Curl_protocol_connecting<pos:position pos:line="151" pos:column="48"/></name><argument_list pos:line="151" pos:column="48">(<argument><expr><name><name pos:line="151" pos:column="49">easy<pos:position pos:line="151" pos:column="53"/></name><operator pos:line="151" pos:column="53">-&gt;<pos:position pos:line="151" pos:column="58"/></operator><name pos:line="151" pos:column="55">easy_conn<pos:position pos:line="151" pos:column="64"/></name></name></expr></argument>,
                                                <argument><expr><operator pos:line="152" pos:column="49">&amp;<pos:position pos:line="152" pos:column="54"/></operator><name pos:line="152" pos:column="50">protocol_connect<pos:position pos:line="152" pos:column="66"/></name></expr></argument>)<pos:position pos:line="152" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="68"/></expr_stmt>
        <if pos:line="153" pos:column="9">if<condition pos:line="153" pos:column="11">(<expr><name pos:line="153" pos:column="12">protocol_connect<pos:position pos:line="153" pos:column="28"/></name></expr>)<pos:position pos:line="153" pos:column="29"/></condition><then pos:line="153" pos:column="29"> <block pos:line="153" pos:column="30">{
          <comment type="block" pos:line="154" pos:column="11">/* after the connect has completed, go DO */</comment>
          <expr_stmt><expr><call><name pos:line="155" pos:column="11">multistate<pos:position pos:line="155" pos:column="21"/></name><argument_list pos:line="155" pos:column="21">(<argument><expr><name pos:line="155" pos:column="22">easy<pos:position pos:line="155" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="28">CURLM_STATE_DO<pos:position pos:line="155" pos:column="42"/></name></expr></argument>)<pos:position pos:line="155" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name pos:line="156" pos:column="11">result<pos:position pos:line="156" pos:column="17"/></name> <operator pos:line="156" pos:column="18">=<pos:position pos:line="156" pos:column="19"/></operator> <name pos:line="156" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="156" pos:column="44"/></name></expr>;<pos:position pos:line="156" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="157" pos:column="10"/></block></then>
        <elseif pos:line="158" pos:column="9">else <if pos:line="158" pos:column="14">if<condition pos:line="158" pos:column="16">(<expr><name><name pos:line="158" pos:column="17">easy<pos:position pos:line="158" pos:column="21"/></name><operator pos:line="158" pos:column="21">-&gt;<pos:position pos:line="158" pos:column="26"/></operator><name pos:line="158" pos:column="23">result<pos:position pos:line="158" pos:column="29"/></name></name></expr>)<pos:position pos:line="158" pos:column="30"/></condition><then pos:line="158" pos:column="30"> <block pos:line="158" pos:column="31">{
          <comment type="block" pos:line="159" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="160" pos:column="11">Curl_posttransfer<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><name><name pos:line="160" pos:column="29">easy<pos:position pos:line="160" pos:column="33"/></name><operator pos:line="160" pos:column="33">-&gt;<pos:position pos:line="160" pos:column="38"/></operator><name pos:line="160" pos:column="35">easy_handle<pos:position pos:line="160" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="161" pos:column="11">Curl_done<pos:position pos:line="161" pos:column="20"/></name><argument_list pos:line="161" pos:column="20">(<argument><expr><operator pos:line="161" pos:column="21">&amp;<pos:position pos:line="161" pos:column="26"/></operator><name><name pos:line="161" pos:column="22">easy<pos:position pos:line="161" pos:column="26"/></name><operator pos:line="161" pos:column="26">-&gt;<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="28">easy_conn<pos:position pos:line="161" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="39">easy<pos:position pos:line="161" pos:column="43"/></name><operator pos:line="161" pos:column="43">-&gt;<pos:position pos:line="161" pos:column="48"/></operator><name pos:line="161" pos:column="45">result<pos:position pos:line="161" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="162" pos:column="11">Curl_disconnect<pos:position pos:line="162" pos:column="26"/></name><argument_list pos:line="162" pos:column="26">(<argument><expr><name><name pos:line="162" pos:column="27">easy<pos:position pos:line="162" pos:column="31"/></name><operator pos:line="162" pos:column="31">-&gt;<pos:position pos:line="162" pos:column="36"/></operator><name pos:line="162" pos:column="33">easy_conn<pos:position pos:line="162" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="44"/></expr_stmt> <comment type="block" pos:line="162" pos:column="45">/* close the connection */</comment>
          <expr_stmt><expr><name><name pos:line="163" pos:column="11">easy<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">-&gt;<pos:position pos:line="163" pos:column="20"/></operator><name pos:line="163" pos:column="17">easy_conn<pos:position pos:line="163" pos:column="26"/></name></name> <operator pos:line="163" pos:column="27">=<pos:position pos:line="163" pos:column="28"/></operator> <name pos:line="163" pos:column="29">NULL<pos:position pos:line="163" pos:column="33"/></name></expr>;<pos:position pos:line="163" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="163" pos:column="45">/* no more connection */</comment>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="165" pos:column="9">break;<pos:position pos:line="165" pos:column="15"/></break>

      <case pos:line="167" pos:column="7">case <expr><name pos:line="167" pos:column="12">CURLM_STATE_DO<pos:position pos:line="167" pos:column="26"/></name></expr>:<pos:position pos:line="167" pos:column="27"/></case>
        <comment type="block" pos:line="168" pos:column="9">/* Perform the protocol's DO action */</comment>
        <expr_stmt><expr><name><name pos:line="169" pos:column="9">easy<pos:position pos:line="169" pos:column="13"/></name><operator pos:line="169" pos:column="13">-&gt;<pos:position pos:line="169" pos:column="18"/></operator><name pos:line="169" pos:column="15">result<pos:position pos:line="169" pos:column="21"/></name></name> <operator pos:line="169" pos:column="22">=<pos:position pos:line="169" pos:column="23"/></operator> <call><name pos:line="169" pos:column="24">Curl_do<pos:position pos:line="169" pos:column="31"/></name><argument_list pos:line="169" pos:column="31">(<argument><expr><operator pos:line="169" pos:column="32">&amp;<pos:position pos:line="169" pos:column="37"/></operator><name><name pos:line="169" pos:column="33">easy<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">-&gt;<pos:position pos:line="169" pos:column="42"/></operator><name pos:line="169" pos:column="39">easy_conn<pos:position pos:line="169" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="169" pos:column="50">&amp;<pos:position pos:line="169" pos:column="55"/></operator><name pos:line="169" pos:column="51">dophase_done<pos:position pos:line="169" pos:column="63"/></name></expr></argument>)<pos:position pos:line="169" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="65"/></expr_stmt>

        <if pos:line="171" pos:column="9">if<condition pos:line="171" pos:column="11">(<expr><name pos:line="171" pos:column="12">CURLE_OK<pos:position pos:line="171" pos:column="20"/></name> <operator pos:line="171" pos:column="21">==<pos:position pos:line="171" pos:column="23"/></operator> <name><name pos:line="171" pos:column="24">easy<pos:position pos:line="171" pos:column="28"/></name><operator pos:line="171" pos:column="28">-&gt;<pos:position pos:line="171" pos:column="33"/></operator><name pos:line="171" pos:column="30">result<pos:position pos:line="171" pos:column="36"/></name></name></expr>)<pos:position pos:line="171" pos:column="37"/></condition><then pos:line="171" pos:column="37"> <block pos:line="171" pos:column="38">{

          <if pos:line="173" pos:column="11">if<condition pos:line="173" pos:column="13">(<expr><operator pos:line="173" pos:column="14">!<pos:position pos:line="173" pos:column="15"/></operator><name pos:line="173" pos:column="15">dophase_done<pos:position pos:line="173" pos:column="27"/></name></expr>)<pos:position pos:line="173" pos:column="28"/></condition><then pos:line="173" pos:column="28"> <block pos:line="173" pos:column="29">{
            <comment type="block" pos:line="174" pos:column="13">/* DO was not completed in one function call, we must continue
               DOING... */</comment>
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">multistate<pos:position pos:line="176" pos:column="23"/></name><argument_list pos:line="176" pos:column="23">(<argument><expr><name pos:line="176" pos:column="24">easy<pos:position pos:line="176" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="30">CURLM_STATE_DOING<pos:position pos:line="176" pos:column="47"/></name></expr></argument>)<pos:position pos:line="176" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="177" pos:column="13">result<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">=<pos:position pos:line="177" pos:column="21"/></operator> <name pos:line="177" pos:column="22">CURLM_OK<pos:position pos:line="177" pos:column="30"/></name></expr>;<pos:position pos:line="177" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="178" pos:column="12"/></block></then>

          <comment type="block" pos:line="180" pos:column="11">/* after DO, go PERFORM... or DO_MORE */</comment>
          <elseif pos:line="181" pos:column="11">else <if pos:line="181" pos:column="16">if<condition pos:line="181" pos:column="18">(<expr><name><name pos:line="181" pos:column="19">easy<pos:position pos:line="181" pos:column="23"/></name><operator pos:line="181" pos:column="23">-&gt;<pos:position pos:line="181" pos:column="28"/></operator><name pos:line="181" pos:column="25">easy_conn<pos:position pos:line="181" pos:column="34"/></name><operator pos:line="181" pos:column="34">-&gt;<pos:position pos:line="181" pos:column="39"/></operator><name pos:line="181" pos:column="36">bits<pos:position pos:line="181" pos:column="40"/></name><operator pos:line="181" pos:column="40">.<pos:position pos:line="181" pos:column="41"/></operator><name pos:line="181" pos:column="41">do_more<pos:position pos:line="181" pos:column="48"/></name></name></expr>)<pos:position pos:line="181" pos:column="49"/></condition><then pos:line="181" pos:column="49"> <block pos:line="181" pos:column="50">{
            <comment type="block" pos:line="182" pos:column="13">/* we're supposed to do more, but we need to sit down, relax
               and wait a little while first */</comment>
            <expr_stmt><expr><call><name pos:line="184" pos:column="13">multistate<pos:position pos:line="184" pos:column="23"/></name><argument_list pos:line="184" pos:column="23">(<argument><expr><name pos:line="184" pos:column="24">easy<pos:position pos:line="184" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="30">CURLM_STATE_DO_MORE<pos:position pos:line="184" pos:column="49"/></name></expr></argument>)<pos:position pos:line="184" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="185" pos:column="13">result<pos:position pos:line="185" pos:column="19"/></name> <operator pos:line="185" pos:column="20">=<pos:position pos:line="185" pos:column="21"/></operator> <name pos:line="185" pos:column="22">CURLM_OK<pos:position pos:line="185" pos:column="30"/></name></expr>;<pos:position pos:line="185" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="186" pos:column="12"/></block></then></if></elseif>
          <else pos:line="187" pos:column="11">else <block pos:line="187" pos:column="16">{
            <comment type="block" pos:line="188" pos:column="13">/* we're done with the DO, now PERFORM */</comment>
            <expr_stmt><expr><name><name pos:line="189" pos:column="13">easy<pos:position pos:line="189" pos:column="17"/></name><operator pos:line="189" pos:column="17">-&gt;<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="19">result<pos:position pos:line="189" pos:column="25"/></name></name> <operator pos:line="189" pos:column="26">=<pos:position pos:line="189" pos:column="27"/></operator> <call><name pos:line="189" pos:column="28">Curl_readwrite_init<pos:position pos:line="189" pos:column="47"/></name><argument_list pos:line="189" pos:column="47">(<argument><expr><name><name pos:line="189" pos:column="48">easy<pos:position pos:line="189" pos:column="52"/></name><operator pos:line="189" pos:column="52">-&gt;<pos:position pos:line="189" pos:column="57"/></operator><name pos:line="189" pos:column="54">easy_conn<pos:position pos:line="189" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="65"/></expr_stmt>
            <if pos:line="190" pos:column="13">if<condition pos:line="190" pos:column="15">(<expr><name pos:line="190" pos:column="16">CURLE_OK<pos:position pos:line="190" pos:column="24"/></name> <operator pos:line="190" pos:column="25">==<pos:position pos:line="190" pos:column="27"/></operator> <name><name pos:line="190" pos:column="28">easy<pos:position pos:line="190" pos:column="32"/></name><operator pos:line="190" pos:column="32">-&gt;<pos:position pos:line="190" pos:column="37"/></operator><name pos:line="190" pos:column="34">result<pos:position pos:line="190" pos:column="40"/></name></name></expr>)<pos:position pos:line="190" pos:column="41"/></condition><then pos:line="190" pos:column="41"> <block pos:line="190" pos:column="42">{
              <expr_stmt><expr><call><name pos:line="191" pos:column="15">multistate<pos:position pos:line="191" pos:column="25"/></name><argument_list pos:line="191" pos:column="25">(<argument><expr><name pos:line="191" pos:column="26">easy<pos:position pos:line="191" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="32">CURLM_STATE_PERFORM<pos:position pos:line="191" pos:column="51"/></name></expr></argument>)<pos:position pos:line="191" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="53"/></expr_stmt>
              <expr_stmt><expr><name pos:line="192" pos:column="15">result<pos:position pos:line="192" pos:column="21"/></name> <operator pos:line="192" pos:column="22">=<pos:position pos:line="192" pos:column="23"/></operator> <name pos:line="192" pos:column="24">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="192" pos:column="48"/></name></expr>;<pos:position pos:line="192" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="193" pos:column="14"/></block></then></if>
          }<pos:position pos:line="194" pos:column="12"/></block></else></if>
        }<pos:position pos:line="195" pos:column="10"/></block></then>
        <else pos:line="196" pos:column="9">else <block pos:line="196" pos:column="14">{
          <comment type="block" pos:line="197" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="198" pos:column="11">Curl_posttransfer<pos:position pos:line="198" pos:column="28"/></name><argument_list pos:line="198" pos:column="28">(<argument><expr><name><name pos:line="198" pos:column="29">easy<pos:position pos:line="198" pos:column="33"/></name><operator pos:line="198" pos:column="33">-&gt;<pos:position pos:line="198" pos:column="38"/></operator><name pos:line="198" pos:column="35">easy_handle<pos:position pos:line="198" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="199" pos:column="11">Curl_done<pos:position pos:line="199" pos:column="20"/></name><argument_list pos:line="199" pos:column="20">(<argument><expr><operator pos:line="199" pos:column="21">&amp;<pos:position pos:line="199" pos:column="26"/></operator><name><name pos:line="199" pos:column="22">easy<pos:position pos:line="199" pos:column="26"/></name><operator pos:line="199" pos:column="26">-&gt;<pos:position pos:line="199" pos:column="31"/></operator><name pos:line="199" pos:column="28">easy_conn<pos:position pos:line="199" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="39">easy<pos:position pos:line="199" pos:column="43"/></name><operator pos:line="199" pos:column="43">-&gt;<pos:position pos:line="199" pos:column="48"/></operator><name pos:line="199" pos:column="45">result<pos:position pos:line="199" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="200" pos:column="11">Curl_disconnect<pos:position pos:line="200" pos:column="26"/></name><argument_list pos:line="200" pos:column="26">(<argument><expr><name><name pos:line="200" pos:column="27">easy<pos:position pos:line="200" pos:column="31"/></name><operator pos:line="200" pos:column="31">-&gt;<pos:position pos:line="200" pos:column="36"/></operator><name pos:line="200" pos:column="33">easy_conn<pos:position pos:line="200" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="44"/></expr_stmt> <comment type="block" pos:line="200" pos:column="45">/* close the connection */</comment>
          <expr_stmt><expr><name><name pos:line="201" pos:column="11">easy<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">-&gt;<pos:position pos:line="201" pos:column="20"/></operator><name pos:line="201" pos:column="17">easy_conn<pos:position pos:line="201" pos:column="26"/></name></name> <operator pos:line="201" pos:column="27">=<pos:position pos:line="201" pos:column="28"/></operator> <name pos:line="201" pos:column="29">NULL<pos:position pos:line="201" pos:column="33"/></name></expr>;<pos:position pos:line="201" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="201" pos:column="45">/* no more connection */</comment>
        }<pos:position pos:line="202" pos:column="10"/></block></else></if>
        <break pos:line="203" pos:column="9">break;<pos:position pos:line="203" pos:column="15"/></break>

      <case pos:line="205" pos:column="7">case <expr><name pos:line="205" pos:column="12">CURLM_STATE_DOING<pos:position pos:line="205" pos:column="29"/></name></expr>:<pos:position pos:line="205" pos:column="30"/></case>
        <comment type="block" pos:line="206" pos:column="9">/* we continue DOING until the DO phase is complete */</comment>
        <expr_stmt><expr><name><name pos:line="207" pos:column="9">easy<pos:position pos:line="207" pos:column="13"/></name><operator pos:line="207" pos:column="13">-&gt;<pos:position pos:line="207" pos:column="18"/></operator><name pos:line="207" pos:column="15">result<pos:position pos:line="207" pos:column="21"/></name></name> <operator pos:line="207" pos:column="22">=<pos:position pos:line="207" pos:column="23"/></operator> <call><name pos:line="207" pos:column="24">Curl_protocol_doing<pos:position pos:line="207" pos:column="43"/></name><argument_list pos:line="207" pos:column="43">(<argument><expr><name><name pos:line="207" pos:column="44">easy<pos:position pos:line="207" pos:column="48"/></name><operator pos:line="207" pos:column="48">-&gt;<pos:position pos:line="207" pos:column="53"/></operator><name pos:line="207" pos:column="50">easy_conn<pos:position pos:line="207" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="207" pos:column="61">&amp;<pos:position pos:line="207" pos:column="66"/></operator><name pos:line="207" pos:column="62">dophase_done<pos:position pos:line="207" pos:column="74"/></name></expr></argument>)<pos:position pos:line="207" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="76"/></expr_stmt>
        <if pos:line="208" pos:column="9">if<condition pos:line="208" pos:column="11">(<expr><name pos:line="208" pos:column="12">CURLE_OK<pos:position pos:line="208" pos:column="20"/></name> <operator pos:line="208" pos:column="21">==<pos:position pos:line="208" pos:column="23"/></operator> <name><name pos:line="208" pos:column="24">easy<pos:position pos:line="208" pos:column="28"/></name><operator pos:line="208" pos:column="28">-&gt;<pos:position pos:line="208" pos:column="33"/></operator><name pos:line="208" pos:column="30">result<pos:position pos:line="208" pos:column="36"/></name></name></expr>)<pos:position pos:line="208" pos:column="37"/></condition><then pos:line="208" pos:column="37"> <block pos:line="208" pos:column="38">{
          <if pos:line="209" pos:column="11">if<condition pos:line="209" pos:column="13">(<expr><name pos:line="209" pos:column="14">dophase_done<pos:position pos:line="209" pos:column="26"/></name></expr>)<pos:position pos:line="209" pos:column="27"/></condition><then pos:line="209" pos:column="27"> <block pos:line="209" pos:column="28">{
            <comment type="block" pos:line="210" pos:column="13">/* after DO, go PERFORM... or DO_MORE */</comment>
            <if pos:line="211" pos:column="13">if<condition pos:line="211" pos:column="15">(<expr><name><name pos:line="211" pos:column="16">easy<pos:position pos:line="211" pos:column="20"/></name><operator pos:line="211" pos:column="20">-&gt;<pos:position pos:line="211" pos:column="25"/></operator><name pos:line="211" pos:column="22">easy_conn<pos:position pos:line="211" pos:column="31"/></name><operator pos:line="211" pos:column="31">-&gt;<pos:position pos:line="211" pos:column="36"/></operator><name pos:line="211" pos:column="33">bits<pos:position pos:line="211" pos:column="37"/></name><operator pos:line="211" pos:column="37">.<pos:position pos:line="211" pos:column="38"/></operator><name pos:line="211" pos:column="38">do_more<pos:position pos:line="211" pos:column="45"/></name></name></expr>)<pos:position pos:line="211" pos:column="46"/></condition><then pos:line="211" pos:column="46"> <block pos:line="211" pos:column="47">{
              <comment type="block" pos:line="212" pos:column="15">/* we're supposed to do more, but we need to sit down, relax
                 and wait a little while first */</comment>
              <expr_stmt><expr><call><name pos:line="214" pos:column="15">multistate<pos:position pos:line="214" pos:column="25"/></name><argument_list pos:line="214" pos:column="25">(<argument><expr><name pos:line="214" pos:column="26">easy<pos:position pos:line="214" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="32">CURLM_STATE_DO_MORE<pos:position pos:line="214" pos:column="51"/></name></expr></argument>)<pos:position pos:line="214" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="53"/></expr_stmt>
              <expr_stmt><expr><name pos:line="215" pos:column="15">result<pos:position pos:line="215" pos:column="21"/></name> <operator pos:line="215" pos:column="22">=<pos:position pos:line="215" pos:column="23"/></operator> <name pos:line="215" pos:column="24">CURLM_OK<pos:position pos:line="215" pos:column="32"/></name></expr>;<pos:position pos:line="215" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="216" pos:column="14"/></block></then>
            <else pos:line="217" pos:column="13">else <block pos:line="217" pos:column="18">{
              <comment type="block" pos:line="218" pos:column="15">/* we're done with the DO, now PERFORM */</comment>
              <expr_stmt><expr><name><name pos:line="219" pos:column="15">easy<pos:position pos:line="219" pos:column="19"/></name><operator pos:line="219" pos:column="19">-&gt;<pos:position pos:line="219" pos:column="24"/></operator><name pos:line="219" pos:column="21">result<pos:position pos:line="219" pos:column="27"/></name></name> <operator pos:line="219" pos:column="28">=<pos:position pos:line="219" pos:column="29"/></operator> <call><name pos:line="219" pos:column="30">Curl_readwrite_init<pos:position pos:line="219" pos:column="49"/></name><argument_list pos:line="219" pos:column="49">(<argument><expr><name><name pos:line="219" pos:column="50">easy<pos:position pos:line="219" pos:column="54"/></name><operator pos:line="219" pos:column="54">-&gt;<pos:position pos:line="219" pos:column="59"/></operator><name pos:line="219" pos:column="56">easy_conn<pos:position pos:line="219" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="67"/></expr_stmt>
              <if pos:line="220" pos:column="15">if<condition pos:line="220" pos:column="17">(<expr><name pos:line="220" pos:column="18">CURLE_OK<pos:position pos:line="220" pos:column="26"/></name> <operator pos:line="220" pos:column="27">==<pos:position pos:line="220" pos:column="29"/></operator> <name><name pos:line="220" pos:column="30">easy<pos:position pos:line="220" pos:column="34"/></name><operator pos:line="220" pos:column="34">-&gt;<pos:position pos:line="220" pos:column="39"/></operator><name pos:line="220" pos:column="36">result<pos:position pos:line="220" pos:column="42"/></name></name></expr>)<pos:position pos:line="220" pos:column="43"/></condition><then pos:line="220" pos:column="43"> <block pos:line="220" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="221" pos:column="17">multistate<pos:position pos:line="221" pos:column="27"/></name><argument_list pos:line="221" pos:column="27">(<argument><expr><name pos:line="221" pos:column="28">easy<pos:position pos:line="221" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="34">CURLM_STATE_PERFORM<pos:position pos:line="221" pos:column="53"/></name></expr></argument>)<pos:position pos:line="221" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="222" pos:column="17">result<pos:position pos:line="222" pos:column="23"/></name> <operator pos:line="222" pos:column="24">=<pos:position pos:line="222" pos:column="25"/></operator> <name pos:line="222" pos:column="26">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="222" pos:column="50"/></name></expr>;<pos:position pos:line="222" pos:column="51"/></expr_stmt>
              }<pos:position pos:line="223" pos:column="16"/></block></then></if>
            }<pos:position pos:line="224" pos:column="14"/></block></else></if>
          }<pos:position pos:line="225" pos:column="12"/></block></then></if> <comment type="block" pos:line="225" pos:column="13">/* dophase_done */</comment>
        }<pos:position pos:line="226" pos:column="10"/></block></then>
        <else pos:line="227" pos:column="9">else <block pos:line="227" pos:column="14">{
          <comment type="block" pos:line="228" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="229" pos:column="11">Curl_posttransfer<pos:position pos:line="229" pos:column="28"/></name><argument_list pos:line="229" pos:column="28">(<argument><expr><name><name pos:line="229" pos:column="29">easy<pos:position pos:line="229" pos:column="33"/></name><operator pos:line="229" pos:column="33">-&gt;<pos:position pos:line="229" pos:column="38"/></operator><name pos:line="229" pos:column="35">easy_handle<pos:position pos:line="229" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="229" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="230" pos:column="11">Curl_done<pos:position pos:line="230" pos:column="20"/></name><argument_list pos:line="230" pos:column="20">(<argument><expr><operator pos:line="230" pos:column="21">&amp;<pos:position pos:line="230" pos:column="26"/></operator><name><name pos:line="230" pos:column="22">easy<pos:position pos:line="230" pos:column="26"/></name><operator pos:line="230" pos:column="26">-&gt;<pos:position pos:line="230" pos:column="31"/></operator><name pos:line="230" pos:column="28">easy_conn<pos:position pos:line="230" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="230" pos:column="39">easy<pos:position pos:line="230" pos:column="43"/></name><operator pos:line="230" pos:column="43">-&gt;<pos:position pos:line="230" pos:column="48"/></operator><name pos:line="230" pos:column="45">result<pos:position pos:line="230" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="231" pos:column="11">Curl_disconnect<pos:position pos:line="231" pos:column="26"/></name><argument_list pos:line="231" pos:column="26">(<argument><expr><name><name pos:line="231" pos:column="27">easy<pos:position pos:line="231" pos:column="31"/></name><operator pos:line="231" pos:column="31">-&gt;<pos:position pos:line="231" pos:column="36"/></operator><name pos:line="231" pos:column="33">easy_conn<pos:position pos:line="231" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="44"/></expr_stmt> <comment type="block" pos:line="231" pos:column="45">/* close the connection */</comment>
          <expr_stmt><expr><name><name pos:line="232" pos:column="11">easy<pos:position pos:line="232" pos:column="15"/></name><operator pos:line="232" pos:column="15">-&gt;<pos:position pos:line="232" pos:column="20"/></operator><name pos:line="232" pos:column="17">easy_conn<pos:position pos:line="232" pos:column="26"/></name></name> <operator pos:line="232" pos:column="27">=<pos:position pos:line="232" pos:column="28"/></operator> <name pos:line="232" pos:column="29">NULL<pos:position pos:line="232" pos:column="33"/></name></expr>;<pos:position pos:line="232" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="232" pos:column="45">/* no more connection */</comment>
        }<pos:position pos:line="233" pos:column="10"/></block></else></if>
        <break pos:line="234" pos:column="9">break;<pos:position pos:line="234" pos:column="15"/></break>

      <case pos:line="236" pos:column="7">case <expr><name pos:line="236" pos:column="12">CURLM_STATE_DO_MORE<pos:position pos:line="236" pos:column="31"/></name></expr>:<pos:position pos:line="236" pos:column="32"/></case>
        <comment type="block" pos:line="237" pos:column="9">/* Ready to do more? */</comment>
        <expr_stmt><expr><name><name pos:line="238" pos:column="9">easy<pos:position pos:line="238" pos:column="13"/></name><operator pos:line="238" pos:column="13">-&gt;<pos:position pos:line="238" pos:column="18"/></operator><name pos:line="238" pos:column="15">result<pos:position pos:line="238" pos:column="21"/></name></name> <operator pos:line="238" pos:column="22">=<pos:position pos:line="238" pos:column="23"/></operator> <call><name pos:line="238" pos:column="24">Curl_is_connected<pos:position pos:line="238" pos:column="41"/></name><argument_list pos:line="238" pos:column="41">(<argument><expr><name><name pos:line="238" pos:column="42">easy<pos:position pos:line="238" pos:column="46"/></name><operator pos:line="238" pos:column="46">-&gt;<pos:position pos:line="238" pos:column="51"/></operator><name pos:line="238" pos:column="48">easy_conn<pos:position pos:line="238" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="59">SECONDARYSOCKET<pos:position pos:line="238" pos:column="74"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="239" pos:column="42">&amp;<pos:position pos:line="239" pos:column="47"/></operator><name pos:line="239" pos:column="43">connected<pos:position pos:line="239" pos:column="52"/></name></expr></argument>)<pos:position pos:line="239" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="54"/></expr_stmt>
        <if pos:line="240" pos:column="9">if<condition pos:line="240" pos:column="11">(<expr><name pos:line="240" pos:column="12">connected<pos:position pos:line="240" pos:column="21"/></name></expr>)<pos:position pos:line="240" pos:column="22"/></condition><then pos:line="240" pos:column="22"> <block pos:line="240" pos:column="23">{
          <comment type="block" pos:line="241" pos:column="11">/*
           * When we are connected, DO MORE and then go PERFORM
           */</comment>
          <expr_stmt><expr><name><name pos:line="244" pos:column="11">easy<pos:position pos:line="244" pos:column="15"/></name><operator pos:line="244" pos:column="15">-&gt;<pos:position pos:line="244" pos:column="20"/></operator><name pos:line="244" pos:column="17">result<pos:position pos:line="244" pos:column="23"/></name></name> <operator pos:line="244" pos:column="24">=<pos:position pos:line="244" pos:column="25"/></operator> <call><name pos:line="244" pos:column="26">Curl_do_more<pos:position pos:line="244" pos:column="38"/></name><argument_list pos:line="244" pos:column="38">(<argument><expr><name><name pos:line="244" pos:column="39">easy<pos:position pos:line="244" pos:column="43"/></name><operator pos:line="244" pos:column="43">-&gt;<pos:position pos:line="244" pos:column="48"/></operator><name pos:line="244" pos:column="45">easy_conn<pos:position pos:line="244" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="244" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="56"/></expr_stmt>

          <if pos:line="246" pos:column="11">if<condition pos:line="246" pos:column="13">(<expr><name pos:line="246" pos:column="14">CURLE_OK<pos:position pos:line="246" pos:column="22"/></name> <operator pos:line="246" pos:column="23">==<pos:position pos:line="246" pos:column="25"/></operator> <name><name pos:line="246" pos:column="26">easy<pos:position pos:line="246" pos:column="30"/></name><operator pos:line="246" pos:column="30">-&gt;<pos:position pos:line="246" pos:column="35"/></operator><name pos:line="246" pos:column="32">result<pos:position pos:line="246" pos:column="38"/></name></name></expr>)<pos:position pos:line="246" pos:column="39"/></condition><then pos:line="246" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="247" pos:column="13">easy<pos:position pos:line="247" pos:column="17"/></name><operator pos:line="247" pos:column="17">-&gt;<pos:position pos:line="247" pos:column="22"/></operator><name pos:line="247" pos:column="19">result<pos:position pos:line="247" pos:column="25"/></name></name> <operator pos:line="247" pos:column="26">=<pos:position pos:line="247" pos:column="27"/></operator> <call><name pos:line="247" pos:column="28">Curl_readwrite_init<pos:position pos:line="247" pos:column="47"/></name><argument_list pos:line="247" pos:column="47">(<argument><expr><name><name pos:line="247" pos:column="48">easy<pos:position pos:line="247" pos:column="52"/></name><operator pos:line="247" pos:column="52">-&gt;<pos:position pos:line="247" pos:column="57"/></operator><name pos:line="247" pos:column="54">easy_conn<pos:position pos:line="247" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="65"/></expr_stmt></block></then></if>

          <if pos:line="249" pos:column="11">if<condition pos:line="249" pos:column="13">(<expr><name pos:line="249" pos:column="14">CURLE_OK<pos:position pos:line="249" pos:column="22"/></name> <operator pos:line="249" pos:column="23">==<pos:position pos:line="249" pos:column="25"/></operator> <name><name pos:line="249" pos:column="26">easy<pos:position pos:line="249" pos:column="30"/></name><operator pos:line="249" pos:column="30">-&gt;<pos:position pos:line="249" pos:column="35"/></operator><name pos:line="249" pos:column="32">result<pos:position pos:line="249" pos:column="38"/></name></name></expr>)<pos:position pos:line="249" pos:column="39"/></condition><then pos:line="249" pos:column="39"> <block pos:line="249" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="250" pos:column="13">multistate<pos:position pos:line="250" pos:column="23"/></name><argument_list pos:line="250" pos:column="23">(<argument><expr><name pos:line="250" pos:column="24">easy<pos:position pos:line="250" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="30">CURLM_STATE_PERFORM<pos:position pos:line="250" pos:column="49"/></name></expr></argument>)<pos:position pos:line="250" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="251" pos:column="13">result<pos:position pos:line="251" pos:column="19"/></name> <operator pos:line="251" pos:column="20">=<pos:position pos:line="251" pos:column="21"/></operator> <name pos:line="251" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="251" pos:column="46"/></name></expr>;<pos:position pos:line="251" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="252" pos:column="12"/></block></then></if>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>
        <break pos:line="254" pos:column="9">break;<pos:position pos:line="254" pos:column="15"/></break>

      <case pos:line="256" pos:column="7">case <expr><name pos:line="256" pos:column="12">CURLM_STATE_PERFORM<pos:position pos:line="256" pos:column="31"/></name></expr>:<pos:position pos:line="256" pos:column="32"/></case>
        <comment type="block" pos:line="257" pos:column="9">/* read/write data if it is ready to do so */</comment>
        <expr_stmt><expr><name><name pos:line="258" pos:column="9">easy<pos:position pos:line="258" pos:column="13"/></name><operator pos:line="258" pos:column="13">-&gt;<pos:position pos:line="258" pos:column="18"/></operator><name pos:line="258" pos:column="15">result<pos:position pos:line="258" pos:column="21"/></name></name> <operator pos:line="258" pos:column="22">=<pos:position pos:line="258" pos:column="23"/></operator> <call><name pos:line="258" pos:column="24">Curl_readwrite<pos:position pos:line="258" pos:column="38"/></name><argument_list pos:line="258" pos:column="38">(<argument><expr><name><name pos:line="258" pos:column="39">easy<pos:position pos:line="258" pos:column="43"/></name><operator pos:line="258" pos:column="43">-&gt;<pos:position pos:line="258" pos:column="48"/></operator><name pos:line="258" pos:column="45">easy_conn<pos:position pos:line="258" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="258" pos:column="56">&amp;<pos:position pos:line="258" pos:column="61"/></operator><name pos:line="258" pos:column="57">done<pos:position pos:line="258" pos:column="61"/></name></expr></argument>)<pos:position pos:line="258" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="63"/></expr_stmt>

        <if pos:line="260" pos:column="9">if<condition pos:line="260" pos:column="11">(<expr><name><name pos:line="260" pos:column="12">easy<pos:position pos:line="260" pos:column="16"/></name><operator pos:line="260" pos:column="16">-&gt;<pos:position pos:line="260" pos:column="21"/></operator><name pos:line="260" pos:column="18">result<pos:position pos:line="260" pos:column="24"/></name></name></expr>)<pos:position pos:line="260" pos:column="25"/></condition><then pos:line="260" pos:column="25">  <block pos:line="260" pos:column="27">{
          <comment type="block" pos:line="261" pos:column="11">/* The transfer phase returned error, we mark the connection to get
           * closed to prevent being re-used. This is becasue we can't
           * possibly know if the connection is in a good shape or not now. */</comment>
          <expr_stmt><expr><name><name pos:line="264" pos:column="11">easy<pos:position pos:line="264" pos:column="15"/></name><operator pos:line="264" pos:column="15">-&gt;<pos:position pos:line="264" pos:column="20"/></operator><name pos:line="264" pos:column="17">easy_conn<pos:position pos:line="264" pos:column="26"/></name><operator pos:line="264" pos:column="26">-&gt;<pos:position pos:line="264" pos:column="31"/></operator><name pos:line="264" pos:column="28">bits<pos:position pos:line="264" pos:column="32"/></name><operator pos:line="264" pos:column="32">.<pos:position pos:line="264" pos:column="33"/></operator><name pos:line="264" pos:column="33">close<pos:position pos:line="264" pos:column="38"/></name></name> <operator pos:line="264" pos:column="39">=<pos:position pos:line="264" pos:column="40"/></operator> <name pos:line="264" pos:column="41">TRUE<pos:position pos:line="264" pos:column="45"/></name></expr>;<pos:position pos:line="264" pos:column="46"/></expr_stmt>

          <if pos:line="266" pos:column="11">if<condition pos:line="266" pos:column="13">(<expr><name pos:line="266" pos:column="14">CURL_SOCKET_BAD<pos:position pos:line="266" pos:column="29"/></name> <operator pos:line="266" pos:column="30">!=<pos:position pos:line="266" pos:column="32"/></operator> <name><name pos:line="266" pos:column="33">easy<pos:position pos:line="266" pos:column="37"/></name><operator pos:line="266" pos:column="37">-&gt;<pos:position pos:line="266" pos:column="42"/></operator><name pos:line="266" pos:column="39">easy_conn<pos:position pos:line="266" pos:column="48"/></name><operator pos:line="266" pos:column="48">-&gt;<pos:position pos:line="266" pos:column="53"/></operator><name pos:line="266" pos:column="50">sock<pos:position pos:line="266" pos:column="54"/></name><index pos:line="266" pos:column="54">[<expr><name pos:line="266" pos:column="55">SECONDARYSOCKET<pos:position pos:line="266" pos:column="70"/></name></expr>]<pos:position pos:line="266" pos:column="71"/></index></name></expr>)<pos:position pos:line="266" pos:column="72"/></condition><then pos:line="266" pos:column="72"> <block pos:line="266" pos:column="73">{
            <comment type="block" pos:line="267" pos:column="13">/* if we failed anywhere, we must clean up the secondary socket if
               it was used */</comment>
            <expr_stmt><expr><call><name pos:line="269" pos:column="13">sclose<pos:position pos:line="269" pos:column="19"/></name><argument_list pos:line="269" pos:column="19">(<argument><expr><name><name pos:line="269" pos:column="20">easy<pos:position pos:line="269" pos:column="24"/></name><operator pos:line="269" pos:column="24">-&gt;<pos:position pos:line="269" pos:column="29"/></operator><name pos:line="269" pos:column="26">easy_conn<pos:position pos:line="269" pos:column="35"/></name><operator pos:line="269" pos:column="35">-&gt;<pos:position pos:line="269" pos:column="40"/></operator><name pos:line="269" pos:column="37">sock<pos:position pos:line="269" pos:column="41"/></name><index pos:line="269" pos:column="41">[<expr><name pos:line="269" pos:column="42">SECONDARYSOCKET<pos:position pos:line="269" pos:column="57"/></name></expr>]<pos:position pos:line="269" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="269" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="270" pos:column="13">easy<pos:position pos:line="270" pos:column="17"/></name><operator pos:line="270" pos:column="17">-&gt;<pos:position pos:line="270" pos:column="22"/></operator><name pos:line="270" pos:column="19">easy_conn<pos:position pos:line="270" pos:column="28"/></name><operator pos:line="270" pos:column="28">-&gt;<pos:position pos:line="270" pos:column="33"/></operator><name pos:line="270" pos:column="30">sock<pos:position pos:line="270" pos:column="34"/></name><index pos:line="270" pos:column="34">[<expr><name pos:line="270" pos:column="35">SECONDARYSOCKET<pos:position pos:line="270" pos:column="50"/></name></expr>]<pos:position pos:line="270" pos:column="51"/></index></name><operator pos:line="270" pos:column="51">=<pos:position pos:line="270" pos:column="52"/></operator><operator pos:line="270" pos:column="52">-<pos:position pos:line="270" pos:column="53"/></operator><literal type="number" pos:line="270" pos:column="53">1<pos:position pos:line="270" pos:column="54"/></literal></expr>;<pos:position pos:line="270" pos:column="55"/></expr_stmt>
          }<pos:position pos:line="271" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="272" pos:column="11">Curl_posttransfer<pos:position pos:line="272" pos:column="28"/></name><argument_list pos:line="272" pos:column="28">(<argument><expr><name><name pos:line="272" pos:column="29">easy<pos:position pos:line="272" pos:column="33"/></name><operator pos:line="272" pos:column="33">-&gt;<pos:position pos:line="272" pos:column="38"/></operator><name pos:line="272" pos:column="35">easy_handle<pos:position pos:line="272" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="272" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="273" pos:column="11">Curl_done<pos:position pos:line="273" pos:column="20"/></name><argument_list pos:line="273" pos:column="20">(<argument><expr><operator pos:line="273" pos:column="21">&amp;<pos:position pos:line="273" pos:column="26"/></operator><name><name pos:line="273" pos:column="22">easy<pos:position pos:line="273" pos:column="26"/></name><operator pos:line="273" pos:column="26">-&gt;<pos:position pos:line="273" pos:column="31"/></operator><name pos:line="273" pos:column="28">easy_conn<pos:position pos:line="273" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="39">easy<pos:position pos:line="273" pos:column="43"/></name><operator pos:line="273" pos:column="43">-&gt;<pos:position pos:line="273" pos:column="48"/></operator><name pos:line="273" pos:column="45">result<pos:position pos:line="273" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="273" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="274" pos:column="10"/></block></then>

        <elseif pos:line="276" pos:column="9">else <if pos:line="276" pos:column="14">if<condition pos:line="276" pos:column="16">(<expr><name pos:line="276" pos:column="17">TRUE<pos:position pos:line="276" pos:column="21"/></name> <operator pos:line="276" pos:column="22">==<pos:position pos:line="276" pos:column="24"/></operator> <name pos:line="276" pos:column="25">done<pos:position pos:line="276" pos:column="29"/></name></expr>)<pos:position pos:line="276" pos:column="30"/></condition><then pos:line="276" pos:column="30"> <block pos:line="276" pos:column="31">{
          <decl_stmt><decl><type><name pos:line="277" pos:column="11">char<pos:position pos:line="277" pos:column="15"/></name> <modifier pos:line="277" pos:column="16">*<pos:position pos:line="277" pos:column="17"/></modifier></type><name pos:line="277" pos:column="17">newurl<pos:position pos:line="277" pos:column="23"/></name></decl>;<pos:position pos:line="277" pos:column="24"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="278" pos:column="11">bool<pos:position pos:line="278" pos:column="15"/></name></type> <name pos:line="278" pos:column="16">retry<pos:position pos:line="278" pos:column="21"/></name> <init pos:line="278" pos:column="22">= <expr><call><name pos:line="278" pos:column="24">Curl_retry_request<pos:position pos:line="278" pos:column="42"/></name><argument_list pos:line="278" pos:column="42">(<argument><expr><name><name pos:line="278" pos:column="43">easy<pos:position pos:line="278" pos:column="47"/></name><operator pos:line="278" pos:column="47">-&gt;<pos:position pos:line="278" pos:column="52"/></operator><name pos:line="278" pos:column="49">easy_conn<pos:position pos:line="278" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="60">&amp;<pos:position pos:line="278" pos:column="65"/></operator><name pos:line="278" pos:column="61">newurl<pos:position pos:line="278" pos:column="67"/></name></expr></argument>)<pos:position pos:line="278" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="278" pos:column="69"/></decl_stmt>

          <comment type="block" pos:line="280" pos:column="11">/* call this even if the readwrite function returned error */</comment>
          <expr_stmt><expr><call><name pos:line="281" pos:column="11">Curl_posttransfer<pos:position pos:line="281" pos:column="28"/></name><argument_list pos:line="281" pos:column="28">(<argument><expr><name><name pos:line="281" pos:column="29">easy<pos:position pos:line="281" pos:column="33"/></name><operator pos:line="281" pos:column="33">-&gt;<pos:position pos:line="281" pos:column="38"/></operator><name pos:line="281" pos:column="35">easy_handle<pos:position pos:line="281" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="281" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="48"/></expr_stmt>

          <comment type="block" pos:line="283" pos:column="11">/* When we follow redirects, must to go back to the CONNECT state */</comment>
          <if pos:line="284" pos:column="11">if<condition pos:line="284" pos:column="13">(<expr><name><name pos:line="284" pos:column="14">easy<pos:position pos:line="284" pos:column="18"/></name><operator pos:line="284" pos:column="18">-&gt;<pos:position pos:line="284" pos:column="23"/></operator><name pos:line="284" pos:column="20">easy_conn<pos:position pos:line="284" pos:column="29"/></name><operator pos:line="284" pos:column="29">-&gt;<pos:position pos:line="284" pos:column="34"/></operator><name pos:line="284" pos:column="31">newurl<pos:position pos:line="284" pos:column="37"/></name></name> <operator pos:line="284" pos:column="38">||<pos:position pos:line="284" pos:column="40"/></operator> <name pos:line="284" pos:column="41">retry<pos:position pos:line="284" pos:column="46"/></name></expr>)<pos:position pos:line="284" pos:column="47"/></condition><then pos:line="284" pos:column="47"> <block pos:line="284" pos:column="48">{
            <if pos:line="285" pos:column="13">if<condition pos:line="285" pos:column="15">(<expr><operator pos:line="285" pos:column="16">!<pos:position pos:line="285" pos:column="17"/></operator><name pos:line="285" pos:column="17">retry<pos:position pos:line="285" pos:column="22"/></name></expr>)<pos:position pos:line="285" pos:column="23"/></condition><then pos:line="285" pos:column="23"> <block pos:line="285" pos:column="24">{
              <comment type="block" pos:line="286" pos:column="15">/* if the URL is a follow-location and not just a retried request
                 then figure out the URL here */</comment>
              <expr_stmt><expr><name pos:line="288" pos:column="15">newurl<pos:position pos:line="288" pos:column="21"/></name> <operator pos:line="288" pos:column="22">=<pos:position pos:line="288" pos:column="23"/></operator> <name><name pos:line="288" pos:column="24">easy<pos:position pos:line="288" pos:column="28"/></name><operator pos:line="288" pos:column="28">-&gt;<pos:position pos:line="288" pos:column="33"/></operator><name pos:line="288" pos:column="30">easy_conn<pos:position pos:line="288" pos:column="39"/></name><operator pos:line="288" pos:column="39">-&gt;<pos:position pos:line="288" pos:column="44"/></operator><name pos:line="288" pos:column="41">newurl<pos:position pos:line="288" pos:column="47"/></name></name></expr>;<pos:position pos:line="288" pos:column="48"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="289" pos:column="15">easy<pos:position pos:line="289" pos:column="19"/></name><operator pos:line="289" pos:column="19">-&gt;<pos:position pos:line="289" pos:column="24"/></operator><name pos:line="289" pos:column="21">easy_conn<pos:position pos:line="289" pos:column="30"/></name><operator pos:line="289" pos:column="30">-&gt;<pos:position pos:line="289" pos:column="35"/></operator><name pos:line="289" pos:column="32">newurl<pos:position pos:line="289" pos:column="38"/></name></name> <operator pos:line="289" pos:column="39">=<pos:position pos:line="289" pos:column="40"/></operator> <name pos:line="289" pos:column="41">NULL<pos:position pos:line="289" pos:column="45"/></name></expr>;<pos:position pos:line="289" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="290" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="291" pos:column="13">easy<pos:position pos:line="291" pos:column="17"/></name><operator pos:line="291" pos:column="17">-&gt;<pos:position pos:line="291" pos:column="22"/></operator><name pos:line="291" pos:column="19">result<pos:position pos:line="291" pos:column="25"/></name></name> <operator pos:line="291" pos:column="26">=<pos:position pos:line="291" pos:column="27"/></operator> <call><name pos:line="291" pos:column="28">Curl_done<pos:position pos:line="291" pos:column="37"/></name><argument_list pos:line="291" pos:column="37">(<argument><expr><operator pos:line="291" pos:column="38">&amp;<pos:position pos:line="291" pos:column="43"/></operator><name><name pos:line="291" pos:column="39">easy<pos:position pos:line="291" pos:column="43"/></name><operator pos:line="291" pos:column="43">-&gt;<pos:position pos:line="291" pos:column="48"/></operator><name pos:line="291" pos:column="45">easy_conn<pos:position pos:line="291" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="56">CURLE_OK<pos:position pos:line="291" pos:column="64"/></name></expr></argument>)<pos:position pos:line="291" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="66"/></expr_stmt>
            <if pos:line="292" pos:column="13">if<condition pos:line="292" pos:column="15">(<expr><name><name pos:line="292" pos:column="16">easy<pos:position pos:line="292" pos:column="20"/></name><operator pos:line="292" pos:column="20">-&gt;<pos:position pos:line="292" pos:column="25"/></operator><name pos:line="292" pos:column="22">result<pos:position pos:line="292" pos:column="28"/></name></name> <operator pos:line="292" pos:column="29">==<pos:position pos:line="292" pos:column="31"/></operator> <name pos:line="292" pos:column="32">CURLE_OK<pos:position pos:line="292" pos:column="40"/></name></expr>)<pos:position pos:line="292" pos:column="41"/></condition><then pos:line="292" pos:column="41">
              <block type="pseudo"><expr_stmt><expr><name><name pos:line="293" pos:column="15">easy<pos:position pos:line="293" pos:column="19"/></name><operator pos:line="293" pos:column="19">-&gt;<pos:position pos:line="293" pos:column="24"/></operator><name pos:line="293" pos:column="21">result<pos:position pos:line="293" pos:column="27"/></name></name> <operator pos:line="293" pos:column="28">=<pos:position pos:line="293" pos:column="29"/></operator> <call><name pos:line="293" pos:column="30">Curl_follow<pos:position pos:line="293" pos:column="41"/></name><argument_list pos:line="293" pos:column="41">(<argument><expr><name><name pos:line="293" pos:column="42">easy<pos:position pos:line="293" pos:column="46"/></name><operator pos:line="293" pos:column="46">-&gt;<pos:position pos:line="293" pos:column="51"/></operator><name pos:line="293" pos:column="48">easy_handle<pos:position pos:line="293" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="61">newurl<pos:position pos:line="293" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="69">retry<pos:position pos:line="293" pos:column="74"/></name></expr></argument>)<pos:position pos:line="293" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="76"/></expr_stmt></block></then></if>
            <if pos:line="294" pos:column="13">if<condition pos:line="294" pos:column="15">(<expr><name pos:line="294" pos:column="16">CURLE_OK<pos:position pos:line="294" pos:column="24"/></name> <operator pos:line="294" pos:column="25">==<pos:position pos:line="294" pos:column="27"/></operator> <name><name pos:line="294" pos:column="28">easy<pos:position pos:line="294" pos:column="32"/></name><operator pos:line="294" pos:column="32">-&gt;<pos:position pos:line="294" pos:column="37"/></operator><name pos:line="294" pos:column="34">result<pos:position pos:line="294" pos:column="40"/></name></name></expr>)<pos:position pos:line="294" pos:column="41"/></condition><then pos:line="294" pos:column="41"> <block pos:line="294" pos:column="42">{
              <expr_stmt><expr><call><name pos:line="295" pos:column="15">multistate<pos:position pos:line="295" pos:column="25"/></name><argument_list pos:line="295" pos:column="25">(<argument><expr><name pos:line="295" pos:column="26">easy<pos:position pos:line="295" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="32">CURLM_STATE_CONNECT<pos:position pos:line="295" pos:column="51"/></name></expr></argument>)<pos:position pos:line="295" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="53"/></expr_stmt>
              <expr_stmt><expr><name pos:line="296" pos:column="15">result<pos:position pos:line="296" pos:column="21"/></name> <operator pos:line="296" pos:column="22">=<pos:position pos:line="296" pos:column="23"/></operator> <name pos:line="296" pos:column="24">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="296" pos:column="48"/></name></expr>;<pos:position pos:line="296" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="297" pos:column="14"/></block></then>
            <else pos:line="298" pos:column="13">else
              <comment type="block" pos:line="299" pos:column="15">/* Since we "took it", we are in charge of freeing this on
                 failure */</comment>
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="301" pos:column="15">free<pos:position pos:line="301" pos:column="19"/></name><argument_list pos:line="301" pos:column="19">(<argument><expr><name pos:line="301" pos:column="20">newurl<pos:position pos:line="301" pos:column="26"/></name></expr></argument>)<pos:position pos:line="301" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="28"/></expr_stmt></block></else></if>
          }<pos:position pos:line="302" pos:column="12"/></block></then>
          <else pos:line="303" pos:column="11">else <block pos:line="303" pos:column="16">{
            <comment type="block" pos:line="304" pos:column="13">/* after the transfer is done, go DONE */</comment>
            <expr_stmt><expr><call><name pos:line="305" pos:column="13">multistate<pos:position pos:line="305" pos:column="23"/></name><argument_list pos:line="305" pos:column="23">(<argument><expr><name pos:line="305" pos:column="24">easy<pos:position pos:line="305" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="30">CURLM_STATE_DONE<pos:position pos:line="305" pos:column="46"/></name></expr></argument>)<pos:position pos:line="305" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="306" pos:column="13">result<pos:position pos:line="306" pos:column="19"/></name> <operator pos:line="306" pos:column="20">=<pos:position pos:line="306" pos:column="21"/></operator> <name pos:line="306" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="306" pos:column="46"/></name></expr>;<pos:position pos:line="306" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="307" pos:column="12"/></block></else></if>
        }<pos:position pos:line="308" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="309" pos:column="9">break;<pos:position pos:line="309" pos:column="15"/></break>
      <case pos:line="310" pos:column="7">case <expr><name pos:line="310" pos:column="12">CURLM_STATE_DONE<pos:position pos:line="310" pos:column="28"/></name></expr>:<pos:position pos:line="310" pos:column="29"/></case>
        <comment type="block" pos:line="311" pos:column="9">/* post-transfer command */</comment>
        <expr_stmt><expr><name><name pos:line="312" pos:column="9">easy<pos:position pos:line="312" pos:column="13"/></name><operator pos:line="312" pos:column="13">-&gt;<pos:position pos:line="312" pos:column="18"/></operator><name pos:line="312" pos:column="15">result<pos:position pos:line="312" pos:column="21"/></name></name> <operator pos:line="312" pos:column="22">=<pos:position pos:line="312" pos:column="23"/></operator> <call><name pos:line="312" pos:column="24">Curl_done<pos:position pos:line="312" pos:column="33"/></name><argument_list pos:line="312" pos:column="33">(<argument><expr><operator pos:line="312" pos:column="34">&amp;<pos:position pos:line="312" pos:column="39"/></operator><name><name pos:line="312" pos:column="35">easy<pos:position pos:line="312" pos:column="39"/></name><operator pos:line="312" pos:column="39">-&gt;<pos:position pos:line="312" pos:column="44"/></operator><name pos:line="312" pos:column="41">easy_conn<pos:position pos:line="312" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="52">CURLE_OK<pos:position pos:line="312" pos:column="60"/></name></expr></argument>)<pos:position pos:line="312" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="62"/></expr_stmt>

        <comment type="block" pos:line="314" pos:column="9">/* after we have DONE what we're supposed to do, go COMPLETED, and
           it doesn't matter what the Curl_done() returned! */</comment>
        <expr_stmt><expr><call><name pos:line="316" pos:column="9">multistate<pos:position pos:line="316" pos:column="19"/></name><argument_list pos:line="316" pos:column="19">(<argument><expr><name pos:line="316" pos:column="20">easy<pos:position pos:line="316" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="26">CURLM_STATE_COMPLETED<pos:position pos:line="316" pos:column="47"/></name></expr></argument>)<pos:position pos:line="316" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="49"/></expr_stmt>
        <break pos:line="317" pos:column="9">break;<pos:position pos:line="317" pos:column="15"/></break>

      <case pos:line="319" pos:column="7">case <expr><name pos:line="319" pos:column="12">CURLM_STATE_COMPLETED<pos:position pos:line="319" pos:column="33"/></name></expr>:<pos:position pos:line="319" pos:column="34"/></case>
        <comment type="block" pos:line="320" pos:column="9">/* this is a completed transfer, it is likely to still be connected */</comment>

        <comment type="block" pos:line="322" pos:column="9">/* This node should be delinked from the list now and we should post
           an information message that we are complete. */</comment>
        <break pos:line="324" pos:column="9">break;<pos:position pos:line="324" pos:column="15"/></break>
      <default pos:line="325" pos:column="7">default:<pos:position pos:line="325" pos:column="15"/></default>
        <return pos:line="326" pos:column="9">return <expr><name pos:line="326" pos:column="16">CURLM_INTERNAL_ERROR<pos:position pos:line="326" pos:column="36"/></name></expr>;<pos:position pos:line="326" pos:column="37"/></return>
      }<pos:position pos:line="327" pos:column="8"/></block></switch>

      <if pos:line="329" pos:column="7">if<condition pos:line="329" pos:column="9">(<expr><name pos:line="329" pos:column="10">CURLM_STATE_COMPLETED<pos:position pos:line="329" pos:column="31"/></name> <operator pos:line="329" pos:column="32">!=<pos:position pos:line="329" pos:column="34"/></operator> <name><name pos:line="329" pos:column="35">easy<pos:position pos:line="329" pos:column="39"/></name><operator pos:line="329" pos:column="39">-&gt;<pos:position pos:line="329" pos:column="44"/></operator><name pos:line="329" pos:column="41">state<pos:position pos:line="329" pos:column="46"/></name></name></expr>)<pos:position pos:line="329" pos:column="47"/></condition><then pos:line="329" pos:column="47"> <block pos:line="329" pos:column="48">{
        <if pos:line="330" pos:column="9">if<condition pos:line="330" pos:column="11">(<expr><name pos:line="330" pos:column="12">CURLE_OK<pos:position pos:line="330" pos:column="20"/></name> <operator pos:line="330" pos:column="21">!=<pos:position pos:line="330" pos:column="23"/></operator> <name><name pos:line="330" pos:column="24">easy<pos:position pos:line="330" pos:column="28"/></name><operator pos:line="330" pos:column="28">-&gt;<pos:position pos:line="330" pos:column="33"/></operator><name pos:line="330" pos:column="30">result<pos:position pos:line="330" pos:column="36"/></name></name></expr>)<pos:position pos:line="330" pos:column="37"/></condition><then pos:line="330" pos:column="37"> <block pos:line="330" pos:column="38">{
          <comment type="block" pos:line="331" pos:column="11">/*
           * If an error was returned, and we aren't in completed state now,
           * then we go to completed and consider this transfer aborted.  */</comment>
          <expr_stmt><expr><call><name pos:line="334" pos:column="11">multistate<pos:position pos:line="334" pos:column="21"/></name><argument_list pos:line="334" pos:column="21">(<argument><expr><name pos:line="334" pos:column="22">easy<pos:position pos:line="334" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="28">CURLM_STATE_COMPLETED<pos:position pos:line="334" pos:column="49"/></name></expr></argument>)<pos:position pos:line="334" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="335" pos:column="10"/></block></then>
        <else pos:line="336" pos:column="9">else
          <comment type="block" pos:line="337" pos:column="11">/* this one still lives! */</comment>
          <block type="pseudo"><expr_stmt><expr><operator pos:line="338" pos:column="11">(<pos:position pos:line="338" pos:column="12"/></operator><operator pos:line="338" pos:column="12">*<pos:position pos:line="338" pos:column="13"/></operator><name pos:line="338" pos:column="13">running_handles<pos:position pos:line="338" pos:column="28"/></name><operator pos:line="338" pos:column="28">)<pos:position pos:line="338" pos:column="29"/></operator><operator pos:line="338" pos:column="29">++<pos:position pos:line="338" pos:column="31"/></operator></expr>;<pos:position pos:line="338" pos:column="32"/></expr_stmt></block></else></if>
      }<pos:position pos:line="339" pos:column="8"/></block></then></if>

    }<pos:position pos:line="341" pos:column="6"/></block> while <condition pos:line="341" pos:column="13">(<expr><name><name pos:line="341" pos:column="14">easy<pos:position pos:line="341" pos:column="18"/></name><operator pos:line="341" pos:column="18">-&gt;<pos:position pos:line="341" pos:column="23"/></operator><name pos:line="341" pos:column="20">easy_handle<pos:position pos:line="341" pos:column="31"/></name><operator pos:line="341" pos:column="31">-&gt;<pos:position pos:line="341" pos:column="36"/></operator><name pos:line="341" pos:column="33">change<pos:position pos:line="341" pos:column="39"/></name><operator pos:line="341" pos:column="39">.<pos:position pos:line="341" pos:column="40"/></operator><name pos:line="341" pos:column="40">url_changed<pos:position pos:line="341" pos:column="51"/></name></name></expr>)<pos:position pos:line="341" pos:column="52"/></condition>;<pos:position pos:line="341" pos:column="53"/></do>

    <if pos:line="343" pos:column="5">if <condition pos:line="343" pos:column="8">(<expr><operator pos:line="343" pos:column="9">(<pos:position pos:line="343" pos:column="10"/></operator><name pos:line="343" pos:column="10">CURLM_STATE_COMPLETED<pos:position pos:line="343" pos:column="31"/></name> <operator pos:line="343" pos:column="32">==<pos:position pos:line="343" pos:column="34"/></operator> <name><name pos:line="343" pos:column="35">easy<pos:position pos:line="343" pos:column="39"/></name><operator pos:line="343" pos:column="39">-&gt;<pos:position pos:line="343" pos:column="44"/></operator><name pos:line="343" pos:column="41">state<pos:position pos:line="343" pos:column="46"/></name></name><operator pos:line="343" pos:column="46">)<pos:position pos:line="343" pos:column="47"/></operator> <operator pos:line="343" pos:column="48">&amp;&amp;<pos:position pos:line="343" pos:column="58"/></operator> <operator pos:line="343" pos:column="51">!<pos:position pos:line="343" pos:column="52"/></operator><name><name pos:line="343" pos:column="52">easy<pos:position pos:line="343" pos:column="56"/></name><operator pos:line="343" pos:column="56">-&gt;<pos:position pos:line="343" pos:column="61"/></operator><name pos:line="343" pos:column="58">msg<pos:position pos:line="343" pos:column="61"/></name></name></expr>)<pos:position pos:line="343" pos:column="62"/></condition><then pos:line="343" pos:column="62"> <block pos:line="343" pos:column="63">{
      <comment type="block" pos:line="344" pos:column="7">/* clear out the usage of the shared DNS cache */</comment>
      <expr_stmt><expr><name><name pos:line="345" pos:column="7">easy<pos:position pos:line="345" pos:column="11"/></name><operator pos:line="345" pos:column="11">-&gt;<pos:position pos:line="345" pos:column="16"/></operator><name pos:line="345" pos:column="13">easy_handle<pos:position pos:line="345" pos:column="24"/></name><operator pos:line="345" pos:column="24">-&gt;<pos:position pos:line="345" pos:column="29"/></operator><name pos:line="345" pos:column="26">hostcache<pos:position pos:line="345" pos:column="35"/></name></name> <operator pos:line="345" pos:column="36">=<pos:position pos:line="345" pos:column="37"/></operator> <name pos:line="345" pos:column="38">NULL<pos:position pos:line="345" pos:column="42"/></name></expr>;<pos:position pos:line="345" pos:column="43"/></expr_stmt>

      <comment type="block" pos:line="347" pos:column="7">/* now add a node to the Curl_message linked list with this info */</comment>
      <expr_stmt><expr><name pos:line="348" pos:column="7">msg<pos:position pos:line="348" pos:column="10"/></name> <operator pos:line="348" pos:column="11">=<pos:position pos:line="348" pos:column="12"/></operator> <operator pos:line="348" pos:column="13">(<pos:position pos:line="348" pos:column="14"/></operator>struct <name pos:line="348" pos:column="21">Curl_message<pos:position pos:line="348" pos:column="33"/></name> <operator pos:line="348" pos:column="34">*<pos:position pos:line="348" pos:column="35"/></operator><operator pos:line="348" pos:column="35">)<pos:position pos:line="348" pos:column="36"/></operator><call><name pos:line="348" pos:column="36">malloc<pos:position pos:line="348" pos:column="42"/></name><argument_list pos:line="348" pos:column="42">(<argument><expr><sizeof pos:line="348" pos:column="43">sizeof<argument_list pos:line="348" pos:column="49">(<argument><expr pos:line="348" pos:column="50">struct <name pos:line="348" pos:column="57">Curl_message<pos:position pos:line="348" pos:column="69"/></name></expr></argument>)<pos:position pos:line="348" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="348" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="72"/></expr_stmt>

      <if pos:line="350" pos:column="7">if<condition pos:line="350" pos:column="9">(<expr><operator pos:line="350" pos:column="10">!<pos:position pos:line="350" pos:column="11"/></operator><name pos:line="350" pos:column="11">msg<pos:position pos:line="350" pos:column="14"/></name></expr>)<pos:position pos:line="350" pos:column="15"/></condition><then pos:line="350" pos:column="15">
        <block type="pseudo"><return pos:line="351" pos:column="9">return <expr><name pos:line="351" pos:column="16">CURLM_OUT_OF_MEMORY<pos:position pos:line="351" pos:column="35"/></name></expr>;<pos:position pos:line="351" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><name><name pos:line="353" pos:column="7">msg<pos:position pos:line="353" pos:column="10"/></name><operator pos:line="353" pos:column="10">-&gt;<pos:position pos:line="353" pos:column="15"/></operator><name pos:line="353" pos:column="12">extmsg<pos:position pos:line="353" pos:column="18"/></name><operator pos:line="353" pos:column="18">.<pos:position pos:line="353" pos:column="19"/></operator><name pos:line="353" pos:column="19">msg<pos:position pos:line="353" pos:column="22"/></name></name> <operator pos:line="353" pos:column="23">=<pos:position pos:line="353" pos:column="24"/></operator> <name pos:line="353" pos:column="25">CURLMSG_DONE<pos:position pos:line="353" pos:column="37"/></name></expr>;<pos:position pos:line="353" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="354" pos:column="7">msg<pos:position pos:line="354" pos:column="10"/></name><operator pos:line="354" pos:column="10">-&gt;<pos:position pos:line="354" pos:column="15"/></operator><name pos:line="354" pos:column="12">extmsg<pos:position pos:line="354" pos:column="18"/></name><operator pos:line="354" pos:column="18">.<pos:position pos:line="354" pos:column="19"/></operator><name pos:line="354" pos:column="19">easy_handle<pos:position pos:line="354" pos:column="30"/></name></name> <operator pos:line="354" pos:column="31">=<pos:position pos:line="354" pos:column="32"/></operator> <name><name pos:line="354" pos:column="33">easy<pos:position pos:line="354" pos:column="37"/></name><operator pos:line="354" pos:column="37">-&gt;<pos:position pos:line="354" pos:column="42"/></operator><name pos:line="354" pos:column="39">easy_handle<pos:position pos:line="354" pos:column="50"/></name></name></expr>;<pos:position pos:line="354" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="355" pos:column="7">msg<pos:position pos:line="355" pos:column="10"/></name><operator pos:line="355" pos:column="10">-&gt;<pos:position pos:line="355" pos:column="15"/></operator><name pos:line="355" pos:column="12">extmsg<pos:position pos:line="355" pos:column="18"/></name><operator pos:line="355" pos:column="18">.<pos:position pos:line="355" pos:column="19"/></operator><name pos:line="355" pos:column="19">data<pos:position pos:line="355" pos:column="23"/></name><operator pos:line="355" pos:column="23">.<pos:position pos:line="355" pos:column="24"/></operator><name pos:line="355" pos:column="24">result<pos:position pos:line="355" pos:column="30"/></name></name> <operator pos:line="355" pos:column="31">=<pos:position pos:line="355" pos:column="32"/></operator> <name><name pos:line="355" pos:column="33">easy<pos:position pos:line="355" pos:column="37"/></name><operator pos:line="355" pos:column="37">-&gt;<pos:position pos:line="355" pos:column="42"/></operator><name pos:line="355" pos:column="39">result<pos:position pos:line="355" pos:column="45"/></name></name></expr>;<pos:position pos:line="355" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="356" pos:column="7">msg<pos:position pos:line="356" pos:column="10"/></name><operator pos:line="356" pos:column="10">-&gt;<pos:position pos:line="356" pos:column="15"/></operator><name pos:line="356" pos:column="12">next<pos:position pos:line="356" pos:column="16"/></name></name><operator pos:line="356" pos:column="16">=<pos:position pos:line="356" pos:column="17"/></operator><name pos:line="356" pos:column="17">NULL<pos:position pos:line="356" pos:column="21"/></name></expr>;<pos:position pos:line="356" pos:column="22"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="358" pos:column="7">easy<pos:position pos:line="358" pos:column="11"/></name><operator pos:line="358" pos:column="11">-&gt;<pos:position pos:line="358" pos:column="16"/></operator><name pos:line="358" pos:column="13">msg<pos:position pos:line="358" pos:column="16"/></name></name> <operator pos:line="358" pos:column="17">=<pos:position pos:line="358" pos:column="18"/></operator> <name pos:line="358" pos:column="19">msg<pos:position pos:line="358" pos:column="22"/></name></expr>;<pos:position pos:line="358" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="359" pos:column="7">easy<pos:position pos:line="359" pos:column="11"/></name><operator pos:line="359" pos:column="11">-&gt;<pos:position pos:line="359" pos:column="16"/></operator><name pos:line="359" pos:column="13">msg_num<pos:position pos:line="359" pos:column="20"/></name></name> <operator pos:line="359" pos:column="21">=<pos:position pos:line="359" pos:column="22"/></operator> <literal type="number" pos:line="359" pos:column="23">1<pos:position pos:line="359" pos:column="24"/></literal></expr>;<pos:position pos:line="359" pos:column="25"/></expr_stmt> <comment type="block" pos:line="359" pos:column="26">/* there is one unread message here */</comment>

      <expr_stmt><expr><name><name pos:line="361" pos:column="7">multi<pos:position pos:line="361" pos:column="12"/></name><operator pos:line="361" pos:column="12">-&gt;<pos:position pos:line="361" pos:column="17"/></operator><name pos:line="361" pos:column="14">num_msgs<pos:position pos:line="361" pos:column="22"/></name></name><operator pos:line="361" pos:column="22">++<pos:position pos:line="361" pos:column="24"/></operator></expr>;<pos:position pos:line="361" pos:column="25"/></expr_stmt> <comment type="block" pos:line="361" pos:column="26">/* increase message counter */</comment>
    }<pos:position pos:line="362" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="363" pos:column="5">easy<pos:position pos:line="363" pos:column="9"/></name> <operator pos:line="363" pos:column="10">=<pos:position pos:line="363" pos:column="11"/></operator> <name><name pos:line="363" pos:column="12">easy<pos:position pos:line="363" pos:column="16"/></name><operator pos:line="363" pos:column="16">-&gt;<pos:position pos:line="363" pos:column="21"/></operator><name pos:line="363" pos:column="18">next<pos:position pos:line="363" pos:column="22"/></name></name></expr>;<pos:position pos:line="363" pos:column="23"/></expr_stmt> <comment type="block" pos:line="363" pos:column="24">/* operate on next handle */</comment>
  }<pos:position pos:line="364" pos:column="4"/></block></while>

  <return pos:line="366" pos:column="3">return <expr><name pos:line="366" pos:column="10">result<pos:position pos:line="366" pos:column="16"/></name></expr>;<pos:position pos:line="366" pos:column="17"/></return>
}<pos:position pos:line="367" pos:column="2"/></block></function></unit>

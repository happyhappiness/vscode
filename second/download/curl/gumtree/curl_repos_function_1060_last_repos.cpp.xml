<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1060_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_single_getsock<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">curl_socket_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">sock<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="46">/* points to numsocks number
                                                of sockets */</comment>
                        <parameter><decl><type><name pos:line="4" pos:column="25">int<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">numsocks<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="38"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">Curl_easy<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">data<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name><name pos:line="6" pos:column="34">conn<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">data<pos:position pos:line="6" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">bitmap<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">GETSOCK_BLANK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">sockindex<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">conn<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">handler<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">perform_getsock<pos:position pos:line="10" pos:column="36"/></name></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><call><name><name pos:line="11" pos:column="12">conn<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">handler<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">perform_getsock<pos:position pos:line="11" pos:column="42"/></name></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">conn<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">sock<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">numsocks<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">numsocks<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&lt;<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="17">2<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <comment type="block" pos:line="14" pos:column="5">/* simple check but we might need two slots */</comment>
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">GETSOCK_BLANK<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* don't include HOLD and PAUSE connections */</comment>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">(<pos:position pos:line="18" pos:column="7"/></operator><name><name pos:line="18" pos:column="7">data<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">req<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">keepon<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="26">KEEP_RECVBITS<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">)<pos:position pos:line="18" pos:column="40"/></operator> <operator pos:line="18" pos:column="41">==<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">KEEP_RECV<pos:position pos:line="18" pos:column="53"/></name></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">DEBUGASSERT<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name><name pos:line="20" pos:column="17">conn<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">sockfd<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">!=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">bitmap<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">|=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">GETSOCK_READSOCK<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">sockindex<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">sock<pos:position pos:line="23" pos:column="9"/></name><index pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">sockindex<pos:position pos:line="23" pos:column="19"/></name></expr>]<pos:position pos:line="23" pos:column="20"/></index></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name><name pos:line="23" pos:column="23">conn<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">sockfd<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* don't include HOLD and PAUSE connections */</comment>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">(<pos:position pos:line="27" pos:column="7"/></operator><name><name pos:line="27" pos:column="7">data<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">req<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">keepon<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="26">KEEP_SENDBITS<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">)<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="41">==<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">KEEP_SEND<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54"> <block pos:line="27" pos:column="55">{

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">(<pos:position pos:line="29" pos:column="9"/></operator><name><name pos:line="29" pos:column="9">conn<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">sockfd<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">!=<pos:position pos:line="29" pos:column="24"/></operator> <name><name pos:line="29" pos:column="25">conn<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">writesockfd<pos:position pos:line="29" pos:column="42"/></name></name><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator> <operator pos:line="29" pos:column="44">||<pos:position pos:line="29" pos:column="46"/></operator>
       <name pos:line="30" pos:column="8">bitmap<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">==<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">GETSOCK_BLANK<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
      <comment type="block" pos:line="31" pos:column="7">/* only if they are not the same socket and we have a readable
         one, we increase index */</comment>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">bitmap<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">!=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">GETSOCK_BLANK<pos:position pos:line="33" pos:column="33"/></name></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">sockindex<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">++<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt></block></then></if> <comment type="block" pos:line="34" pos:column="22">/* increase index if we need two entries */</comment>

      <expr_stmt><expr><call><name pos:line="36" pos:column="7">DEBUGASSERT<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name><name pos:line="36" pos:column="19">conn<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">writesockfd<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">!=<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">CURL_SOCKET_BAD<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="38" pos:column="7">sock<pos:position pos:line="38" pos:column="11"/></name><index pos:line="38" pos:column="11">[<expr><name pos:line="38" pos:column="12">sockindex<pos:position pos:line="38" pos:column="21"/></name></expr>]<pos:position pos:line="38" pos:column="22"/></index></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <name><name pos:line="38" pos:column="25">conn<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">writesockfd<pos:position pos:line="38" pos:column="42"/></name></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">bitmap<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">|=<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">GETSOCK_WRITESOCK<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">sockindex<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">bitmap<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

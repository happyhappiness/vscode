<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_450.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">data<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">config<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> <type><specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier> <name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">fill<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[]<pos:position pos:line="7" pos:column="27"/></index></name> <init pos:line="7" pos:column="28">= <expr><literal type="string" pos:line="7" pos:column="30">"test data"<pos:position pos:line="7" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">config<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">.<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">trace_ascii<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt> <comment type="block" pos:line="9" pos:column="27">/* enable ascii tracing */</comment>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">curl<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">curl_easy_init<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">()<pos:position pos:line="11" pos:column="30"/></argument_list></call><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">NULL<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fprintf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">stderr<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">curl_global_cleanup<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">test_setopt<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">curl<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="21">CURLOPT_DEBUGFUNCTION<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">my_trace<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">test_setopt<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">curl<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="21">CURLOPT_DEBUGDATA<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">config<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
  <comment type="block" pos:line="19" pos:column="3">/* the DEBUGFUNCTION has no effect until we enable VERBOSE */</comment>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">test_setopt<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">curl<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">CURLOPT_VERBOSE<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="38">1L<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* setup repeated data string */</comment>
  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">i<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator><literal type="number" pos:line="23" pos:column="10">0<pos:position pos:line="23" pos:column="11"/></literal></expr>;<pos:position pos:line="23" pos:column="12"/></init> <condition><expr><name pos:line="23" pos:column="13">i<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">&lt;<pos:position pos:line="23" pos:column="19"/></operator> <sizeof pos:line="23" pos:column="17">sizeof<argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">databuf<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="33"/></condition> <incr><expr><operator pos:line="23" pos:column="34">++<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">i<pos:position pos:line="23" pos:column="37"/></name></expr></incr>)<pos:position pos:line="23" pos:column="38"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="7">databuf<pos:position pos:line="24" pos:column="14"/></name><index pos:line="24" pos:column="14">[<expr><name pos:line="24" pos:column="15">i<pos:position pos:line="24" pos:column="16"/></name></expr>]<pos:position pos:line="24" pos:column="17"/></index></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">fill<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">i<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">%<pos:position pos:line="24" pos:column="28"/></operator> <sizeof pos:line="24" pos:column="29">sizeof <name pos:line="24" pos:column="36">fill<pos:position pos:line="24" pos:column="40"/></name></sizeof></expr>]<pos:position pos:line="24" pos:column="41"/></index></name></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt></block></for>

  <comment type="block" pos:line="26" pos:column="3">/* Post */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">test_setopt<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">curl<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">CURLOPT_POST<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="35">1L<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="29" pos:column="29"/></name></cpp:ifdef>
  <comment type="block" pos:line="30" pos:column="3">/* Convert the POST data to ASCII */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">test_setopt<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">curl<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="21">CURLOPT_TRANSFERTEXT<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="43">1L<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="34" pos:column="3">/* Setup read callback */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">test_setopt<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">curl<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="21">CURLOPT_POSTFIELDSIZE<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="44">(<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">long<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">)<pos:position pos:line="35" pos:column="50"/></operator> <sizeof pos:line="35" pos:column="51">sizeof<argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">databuf<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">test_setopt<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">curl<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="21">CURLOPT_READFUNCTION<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">read_callback<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* Write callback */</comment>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">test_setopt<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">curl<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="21">CURLOPT_WRITEFUNCTION<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">write_callback<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* Ioctl function */</comment>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">test_setopt<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">curl<pos:position pos:line="42" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="21">CURLOPT_IOCTLFUNCTION<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">ioctl_callback<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">test_setopt<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">curl<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="21">CURLOPT_PROXY<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">libtest_arg2<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">test_setopt<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">curl<pos:position pos:line="46" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="21">CURLOPT_URL<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">URL<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="48" pos:column="3">/* Accept any auth. But for this bug configure proxy with DIGEST, basic might work too, not NTLM */</comment>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">test_setopt<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">curl<pos:position pos:line="49" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="21">CURLOPT_PROXYAUTH<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="40">(<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">long<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">)<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">CURLAUTH_ANY<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><name pos:line="51" pos:column="3">res<pos:position pos:line="51" pos:column="6"/></name> <operator pos:line="51" pos:column="7">=<pos:position pos:line="51" pos:column="8"/></operator> <call><name pos:line="51" pos:column="9">curl_easy_perform<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">curl<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">fprintf<pos:position pos:line="52" pos:column="10"/></name><argument_list pos:line="52" pos:column="10">(<argument><expr><name pos:line="52" pos:column="11">stderr<pos:position pos:line="52" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="19">"curl_easy_perform = %d\n"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="47">(<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">int<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">)<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="52">res<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>

<label><name pos:line="54" pos:column="1">test_cleanup<pos:position pos:line="54" pos:column="13"/></name>:<pos:position pos:line="54" pos:column="14"/></label>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">curl_easy_cleanup<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">curl<pos:position pos:line="56" pos:column="25"/></name></expr></argument>)<pos:position pos:line="56" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">curl_global_cleanup<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">()<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">int<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">)<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">res<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

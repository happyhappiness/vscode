<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_16951.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_cookie_output<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">CookieInfo<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">c<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">dumphere<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Cookie<pos:position pos:line="3" pos:column="16"/></name></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">co<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">out<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">use_stdout<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">FALSE<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">(<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">NULL<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">c<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">)<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name><name pos:line="7" pos:column="27">c<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">numcookies<pos:position pos:line="7" pos:column="40"/></name></name><operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
    <comment type="block" pos:line="8" pos:column="5">/* If there are no known cookies, we don't write or even create any
       destination file */</comment>
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><call><name pos:line="12" pos:column="6">strequal<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"-"<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">dumphere<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
    <comment type="block" pos:line="13" pos:column="5">/* use stdout */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">out<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name pos:line="14" pos:column="11">stdout<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">use_stdout<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">TRUE<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <else pos:line="17" pos:column="3">else <block pos:line="17" pos:column="8">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">out<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">fopen<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">dumphere<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">"w"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><operator pos:line="19" pos:column="8">!<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">out<pos:position pos:line="19" pos:column="12"/></name></expr>)<pos:position pos:line="19" pos:column="13"/></condition><then pos:line="19" pos:column="13">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="20" pos:column="17">/* failure */</comment>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">c<pos:position pos:line="23" pos:column="7"/></name></expr>)<pos:position pos:line="23" pos:column="8"/></condition><then pos:line="23" pos:column="8"> <block pos:line="23" pos:column="9">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fputs<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"# Netscape HTTP Cookie File\n"<pos:position pos:line="24" pos:column="42"/></literal>
          <literal type="string" pos:line="25" pos:column="11">"# http://www.netscape.com/newsref/std/cookie_spec.html\n"<pos:position pos:line="25" pos:column="69"/></literal>
          <literal type="string" pos:line="26" pos:column="11">"# This is generated by libcurl! Edit on your own risk.\n\n"<pos:position pos:line="26" pos:column="71"/></literal></expr></argument>,
          <argument><expr><name pos:line="27" pos:column="11">out<pos:position pos:line="27" pos:column="14"/></name></expr></argument>)<pos:position pos:line="27" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">co<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <name><name pos:line="28" pos:column="10">c<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">cookies<pos:position pos:line="28" pos:column="20"/></name></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
     
    <while pos:line="30" pos:column="5">while<condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">co<pos:position pos:line="30" pos:column="13"/></name></expr>)<pos:position pos:line="30" pos:column="14"/></condition> <block pos:line="30" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">fprintf<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">out<pos:position pos:line="31" pos:column="18"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="32" pos:column="15">"%s\t"<pos:position pos:line="32" pos:column="21"/></literal> <comment type="block" pos:line="32" pos:column="22">/* domain */</comment>
              <literal type="string" pos:line="33" pos:column="15">"%s\t"<pos:position pos:line="33" pos:column="21"/></literal> <comment type="block" pos:line="33" pos:column="22">/* field1 */</comment>
              <literal type="string" pos:line="34" pos:column="15">"%s\t"<pos:position pos:line="34" pos:column="21"/></literal> <comment type="block" pos:line="34" pos:column="22">/* path */</comment>
              <literal type="string" pos:line="35" pos:column="15">"%s\t"<pos:position pos:line="35" pos:column="21"/></literal> <comment type="block" pos:line="35" pos:column="22">/* secure */</comment>
              <literal type="string" pos:line="36" pos:column="15">"%u\t"<pos:position pos:line="36" pos:column="21"/></literal> <comment type="block" pos:line="36" pos:column="22">/* expires */</comment>
              <literal type="string" pos:line="37" pos:column="15">"%s\t"<pos:position pos:line="37" pos:column="21"/></literal> <comment type="block" pos:line="37" pos:column="22">/* name */</comment>
              <literal type="string" pos:line="38" pos:column="15">"%s\n"<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>, <comment type="block" pos:line="38" pos:column="23">/* value */</comment>
              <argument><expr><name><name pos:line="39" pos:column="15">co<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">domain<pos:position pos:line="39" pos:column="25"/></name></name></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="40" pos:column="15">co<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">field1<pos:position pos:line="40" pos:column="25"/></name></name><operator pos:line="40" pos:column="25">==<pos:position pos:line="40" pos:column="27"/></operator><literal type="number" pos:line="40" pos:column="27">2<pos:position pos:line="40" pos:column="28"/></literal></expr>?<pos:position pos:line="40" pos:column="29"/></condition><then><expr><literal type="string" pos:line="40" pos:column="29">"TRUE"<pos:position pos:line="40" pos:column="35"/></literal></expr></then><else pos:line="40" pos:column="35">:<expr><literal type="string" pos:line="40" pos:column="36">"FALSE"<pos:position pos:line="40" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><name><name pos:line="41" pos:column="15">co<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">path<pos:position pos:line="41" pos:column="23"/></name></name></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="42" pos:column="15">co<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">secure<pos:position pos:line="42" pos:column="25"/></name></name></expr>?<pos:position pos:line="42" pos:column="26"/></condition><then><expr><literal type="string" pos:line="42" pos:column="26">"TRUE"<pos:position pos:line="42" pos:column="32"/></literal></expr></then><else pos:line="42" pos:column="32">:<expr><literal type="string" pos:line="42" pos:column="33">"FALSE"<pos:position pos:line="42" pos:column="40"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">unsigned<pos:position pos:line="43" pos:column="24"/></name> <name pos:line="43" pos:column="25">int<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">)<pos:position pos:line="43" pos:column="29"/></operator><name><name pos:line="43" pos:column="29">co<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">expires<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="44" pos:column="15">co<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">name<pos:position pos:line="44" pos:column="23"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="45" pos:column="15">co<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">value<pos:position pos:line="45" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><name pos:line="47" pos:column="7">co<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator><name><name pos:line="47" pos:column="10">co<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">next<pos:position pos:line="47" pos:column="18"/></name></name></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">use_stdout<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="5">fclose<pos:position pos:line="52" pos:column="11"/></name><argument_list pos:line="52" pos:column="11">(<argument><expr><name pos:line="52" pos:column="12">out<pos:position pos:line="52" pos:column="15"/></name></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt></block></then></if>

  <return pos:line="54" pos:column="3">return <expr><literal type="number" pos:line="54" pos:column="10">0<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_101_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_escape<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">string<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">length<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">alloc<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><ternary><condition><expr><name pos:line="3" pos:column="16">length<pos:position pos:line="3" pos:column="22"/></name></expr>?<pos:position pos:line="3" pos:column="23"/></condition><then><expr><name pos:line="3" pos:column="23">length<pos:position pos:line="3" pos:column="29"/></name></expr></then><else pos:line="3" pos:column="29">:<expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">)<pos:position pos:line="3" pos:column="35"/></operator><call><name pos:line="3" pos:column="35">strlen<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><name pos:line="3" pos:column="42">string<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></else></ternary><operator pos:line="3" pos:column="49">)<pos:position pos:line="3" pos:column="50"/></operator><operator pos:line="3" pos:column="50">+<pos:position pos:line="3" pos:column="51"/></operator><literal type="number" pos:line="3" pos:column="51">1<pos:position pos:line="3" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>  
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ns<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><call><name pos:line="4" pos:column="14">malloc<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">alloc<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">testing_ptr<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">in<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">newlen<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">alloc<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">index<pos:position pos:line="8" pos:column="12"/></name><init pos:line="8" pos:column="12">=<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">length<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">alloc<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-<pos:position pos:line="10" pos:column="18"/></operator><literal type="number" pos:line="10" pos:column="18">1<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
  <while pos:line="11" pos:column="3">while<condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">length<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">--<pos:position pos:line="11" pos:column="17"/></operator></expr>)<pos:position pos:line="11" pos:column="18"/></condition> <block pos:line="11" pos:column="19">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">in<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">string<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">!<pos:position pos:line="13" pos:column="9"/></operator><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">in<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&gt;=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="16">'a'<pos:position pos:line="13" pos:column="19"/></literal> <operator pos:line="13" pos:column="20">&amp;&amp;<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="23">in<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&lt;=<pos:position pos:line="13" pos:column="31"/></operator> <literal type="char" pos:line="13" pos:column="29">'z'<pos:position pos:line="13" pos:column="32"/></literal><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">&amp;&amp;<pos:position pos:line="13" pos:column="44"/></operator>
       <operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">in<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">&gt;=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="16">'A'<pos:position pos:line="14" pos:column="19"/></literal> <operator pos:line="14" pos:column="20">&amp;&amp;<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="23">in<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&lt;=<pos:position pos:line="14" pos:column="31"/></operator> <literal type="char" pos:line="14" pos:column="29">'Z'<pos:position pos:line="14" pos:column="32"/></literal><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">&amp;&amp;<pos:position pos:line="14" pos:column="44"/></operator>
       <operator pos:line="15" pos:column="8">!<pos:position pos:line="15" pos:column="9"/></operator><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">in<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">&gt;=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="char" pos:line="15" pos:column="16">'0'<pos:position pos:line="15" pos:column="19"/></literal> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="23">in<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">&lt;=<pos:position pos:line="15" pos:column="31"/></operator> <literal type="char" pos:line="15" pos:column="29">'9'<pos:position pos:line="15" pos:column="32"/></literal><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
      <comment type="block" pos:line="16" pos:column="7">/* encode it */</comment>
      <expr_stmt><expr><name pos:line="17" pos:column="7">newlen<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">+=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">2<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt> <comment type="block" pos:line="17" pos:column="20">/* the size grows with two, since this'll become a %XX */</comment>
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">newlen<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&gt;<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="19">alloc<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">alloc<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">*=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">2<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">testing_ptr<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">realloc<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">ns<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">alloc<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
        <if pos:line="21" pos:column="9">if<condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">!<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">testing_ptr<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
          <expr_stmt><expr><call><name pos:line="22" pos:column="11">free<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">( <argument><expr><name pos:line="22" pos:column="17">ns<pos:position pos:line="22" pos:column="19"/></name></expr></argument> )<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
          <return pos:line="23" pos:column="11">return <expr><name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then>
        <else pos:line="25" pos:column="9">else <block pos:line="25" pos:column="14">{
          <expr_stmt><expr><name pos:line="26" pos:column="11">ns<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">testing_ptr<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">sprintf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><operator pos:line="29" pos:column="15">&amp;<pos:position pos:line="29" pos:column="20"/></operator><name><name pos:line="29" pos:column="16">ns<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><name pos:line="29" pos:column="19">index<pos:position pos:line="29" pos:column="24"/></name></expr>]<pos:position pos:line="29" pos:column="25"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"%%%02X"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">in<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

      <expr_stmt><expr><name pos:line="31" pos:column="7">index<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">+=<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">3<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
      <comment type="block" pos:line="34" pos:column="7">/* just copy this */</comment>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">ns<pos:position pos:line="35" pos:column="9"/></name><index pos:line="35" pos:column="9">[<expr><name pos:line="35" pos:column="10">index<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">++<pos:position pos:line="35" pos:column="17"/></operator></expr>]<pos:position pos:line="35" pos:column="18"/></index></name><operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">in<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="37" pos:column="5">string<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">++<pos:position pos:line="37" pos:column="13"/></operator></expr>;<pos:position pos:line="37" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">ns<pos:position pos:line="39" pos:column="5"/></name><index pos:line="39" pos:column="5">[<expr><name pos:line="39" pos:column="6">index<pos:position pos:line="39" pos:column="11"/></name></expr>]<pos:position pos:line="39" pos:column="12"/></index></name><operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator><literal type="number" pos:line="39" pos:column="13">0<pos:position pos:line="39" pos:column="14"/></literal></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt> <comment type="block" pos:line="39" pos:column="16">/* terminate it */</comment>
  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">ns<pos:position pos:line="40" pos:column="12"/></name></expr>;<pos:position pos:line="40" pos:column="13"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

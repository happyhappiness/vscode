<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_23_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">GlobCode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">glob_word<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">URLGlob<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">glob<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pattern<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">pos<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">amount<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* processes a literal string component of a URL
     special characters '{' and '[' branch to set/range processing functions
   */</comment> 
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name><modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type> <name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">glob<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">glob_buffer<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">litindex<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="9" pos:column="3">*<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">amount<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt> <comment type="block" pos:line="9" pos:column="16">/* default is one single string */</comment>

  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">pattern<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">!=<pos:position pos:line="11" pos:column="21"/></operator> <literal type="char" pos:line="11" pos:column="22">'\0'<pos:position pos:line="11" pos:column="26"/></literal> <operator pos:line="11" pos:column="27">&amp;&amp;<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">pattern<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">!=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="char" pos:line="11" pos:column="42">'{'<pos:position pos:line="11" pos:column="45"/></literal> <operator pos:line="11" pos:column="46">&amp;&amp;<pos:position pos:line="11" pos:column="56"/></operator> <operator pos:line="11" pos:column="49">*<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">pattern<pos:position pos:line="11" pos:column="57"/></name> <operator pos:line="11" pos:column="58">!=<pos:position pos:line="11" pos:column="60"/></operator> <literal type="char" pos:line="11" pos:column="61">'['<pos:position pos:line="11" pos:column="64"/></literal></expr>)<pos:position pos:line="11" pos:column="65"/></condition> <block pos:line="11" pos:column="66">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">pattern<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <literal type="char" pos:line="12" pos:column="21">'}'<pos:position pos:line="12" pos:column="24"/></literal> <operator pos:line="12" pos:column="25">||<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">pattern<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <literal type="char" pos:line="12" pos:column="40">']'<pos:position pos:line="12" pos:column="43"/></literal></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">GLOB_ERROR<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">pattern<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <literal type="char" pos:line="15" pos:column="21">'\\'<pos:position pos:line="15" pos:column="25"/></literal></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{		<comment type="block" pos:line="15" pos:column="41">/* escape character, skip '\' */</comment>
      <expr_stmt><expr><operator pos:line="16" pos:column="7">++<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">pattern<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="17" pos:column="7">++<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">pos<pos:position pos:line="17" pos:column="12"/></name></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">*<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">pattern<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'\0'<pos:position pos:line="18" pos:column="27"/></literal></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{		<comment type="block" pos:line="18" pos:column="41">/* but no escaping of '\0'! */</comment>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">GLOB_ERROR<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></return>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">buf<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">++<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">pattern<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">++<pos:position pos:line="22" pos:column="24"/></operator></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>		<comment type="block" pos:line="22" pos:column="41">/* copy character to literal */</comment>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">++<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">pos<pos:position pos:line="23" pos:column="10"/></name></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="25" pos:column="3">*<pos:position pos:line="25" pos:column="4"/></operator><name pos:line="25" pos:column="4">buf<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <literal type="char" pos:line="25" pos:column="10">'\0'<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">litindex<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name><name pos:line="26" pos:column="14">glob<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">size<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">/<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">2<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
  <comment type="block" pos:line="27" pos:column="3">/* literals 0,1,2,... correspond to size=0,2,4,... */</comment>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">glob<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">literal<pos:position pos:line="28" pos:column="16"/></name><index pos:line="28" pos:column="16">[<expr><name pos:line="28" pos:column="17">litindex<pos:position pos:line="28" pos:column="25"/></name></expr>]<pos:position pos:line="28" pos:column="26"/></index></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">strdup<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name><name pos:line="28" pos:column="36">glob<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">glob_buffer<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="29" pos:column="3">++<pos:position pos:line="29" pos:column="5"/></operator><name><name pos:line="29" pos:column="5">glob<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">size<pos:position pos:line="29" pos:column="15"/></name></name></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>

  <switch pos:line="31" pos:column="3">switch <condition pos:line="31" pos:column="10">(<expr><operator pos:line="31" pos:column="11">*<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">pattern<pos:position pos:line="31" pos:column="19"/></name></expr>)<pos:position pos:line="31" pos:column="20"/></condition> <block pos:line="31" pos:column="21">{
  <case pos:line="32" pos:column="3">case <expr><literal type="char" pos:line="32" pos:column="8">'\0'<pos:position pos:line="32" pos:column="12"/></literal></expr>:<pos:position pos:line="32" pos:column="13"/></case>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">GLOB_OK<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>			<comment type="block" pos:line="33" pos:column="41">/* singular URL processed  */</comment>

  <case pos:line="35" pos:column="3">case <expr><literal type="char" pos:line="35" pos:column="8">'{'<pos:position pos:line="35" pos:column="11"/></literal></expr>:<pos:position pos:line="35" pos:column="12"/></case>
    <comment type="block" pos:line="36" pos:column="5">/* process set pattern */</comment>
    <return pos:line="37" pos:column="5">return <expr><call><name pos:line="37" pos:column="12">glob_set<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">glob<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="27">++<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">pattern<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="38">++<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">pos<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">amount<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></return>

  <case pos:line="39" pos:column="3">case <expr><literal type="char" pos:line="39" pos:column="8">'['<pos:position pos:line="39" pos:column="11"/></literal></expr>:<pos:position pos:line="39" pos:column="12"/></case>
    <comment type="block" pos:line="40" pos:column="5">/* process range pattern */</comment>
    <return pos:line="41" pos:column="5">return <expr><call><name pos:line="41" pos:column="12">glob_range<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">glob<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="29">++<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">pattern<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">++<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">pos<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">amount<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></switch>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">GLOB_ERROR<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return> <comment type="block" pos:line="44" pos:column="22">/* something got wrong */</comment>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2624_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">nss_load_cert<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">ssl_connect_data<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">ssl<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">filename<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">PRBool<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">cacert<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><ternary><condition><expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">cacert<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">)<pos:position pos:line="4" pos:column="29"/></operator></expr>
    ?<pos:position pos:line="5" pos:column="6"/></condition><then pos:line="5" pos:column="6"> <expr><name pos:line="5" pos:column="7">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="5" pos:column="31"/></name></expr>
    <pos:position pos:line="6" pos:column="5"/></then><else pos:line="6" pos:column="5">: <expr><name pos:line="6" pos:column="7">CURLE_SSL_CERTPROBLEM<pos:position pos:line="6" pos:column="28"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* libnsspem.so leaks memory if the requested file does not exist.  For more
   * details, go to &lt;https://bugzilla.redhat.com/734760&gt;. */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><call><name pos:line="10" pos:column="6">is_file<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">filename<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">result<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">nss_create_object<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">ssl<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">CKO_CERTIFICATE<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">filename<pos:position pos:line="11" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="64">cacert<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">result<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">&amp;&amp;<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">cacert<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
    <comment type="block" pos:line="14" pos:column="5">/* we have successfully loaded a client certificate */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">CERTCertificate<pos:position pos:line="15" pos:column="20"/></name> <modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type><name pos:line="15" pos:column="22">cert<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">nickname<pos:position pos:line="16" pos:column="19"/></name> <init pos:line="16" pos:column="20">= <expr><name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">n<pos:position pos:line="17" pos:column="12"/></name> <init pos:line="17" pos:column="13">= <expr><call><name pos:line="17" pos:column="15">strrchr<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">filename<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="33">'/'<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="38"/></decl_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">n<pos:position pos:line="18" pos:column="9"/></name></expr>)<pos:position pos:line="18" pos:column="10"/></condition><then pos:line="18" pos:column="10">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">n<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">++<pos:position pos:line="19" pos:column="10"/></operator></expr>;<pos:position pos:line="19" pos:column="11"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* The following undocumented magic helps to avoid a SIGSEGV on call
     * of PK11_ReadRawAttribute() from SelectClientCert() when using an
     * immature version of libnsspem.so.  For more details, go to
     * &lt;https://bugzilla.redhat.com/733685&gt;. */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">nickname<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">aprintf<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">"PEM Token #1:%s"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">n<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">nickname<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">cert<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">PK11_FindCertFromNickname<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">nickname<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">NULL<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">cert<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">CERT_DestroyCertificate<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">cert<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="31" pos:column="7">free<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">nickname<pos:position pos:line="31" pos:column="20"/></name></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">result<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1501_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_sspi_global_init<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">INITSECURITYINTERFACE_FN<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">pInitSecurityInterface<pos:position pos:line="3" pos:column="50"/></name></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* If security interface is not yet initialized try to do this */</comment>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">s_hSecDll<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17"> <block pos:line="6" pos:column="18">{
    <comment type="block" pos:line="7" pos:column="5">/* Security Service Provider Interface (SSPI) functions are located in
     * security.dll on WinNT 4.0 and in secur32.dll on Win9x. Win2K and XP
     * have both these DLLs (security.dll forwards calls to secur32.dll) */</comment>

    <comment type="block" pos:line="11" pos:column="5">/* Load SSPI dll into the address space of the calling process */</comment>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><call><name pos:line="12" pos:column="8">Curl_verify_windows_version<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><literal type="number" pos:line="12" pos:column="36">4<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">PLATFORM_WINNT<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="58">VERSION_EQUAL<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">s_hSecDll<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">Curl_load_library<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><call><name pos:line="13" pos:column="37">TEXT<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><literal type="string" pos:line="13" pos:column="42">"security.dll"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt></block></then>
    <else pos:line="14" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">s_hSecDll<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">Curl_load_library<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><call><name pos:line="15" pos:column="37">TEXT<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><literal type="string" pos:line="15" pos:column="42">"secur32.dll"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt></block></else></if>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">!<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">s_hSecDll<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Get address of the InitSecurityInterfaceA function from the SSPI dll */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">pInitSecurityInterface<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="30">(<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">INITSECURITYINTERFACE_FN<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">)<pos:position pos:line="20" pos:column="56"/></operator>
      <call><name pos:line="21" pos:column="7">GetProcAddress<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">s_hSecDll<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">SECURITYENTRYPOINT<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">pInitSecurityInterface<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Get pointer to Security Service Provider Interface dispatch table */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">s_pSecFn<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">pInitSecurityInterface<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">()<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">s_pSecFn<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></return></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">CURLE_OK<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

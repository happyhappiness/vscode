<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_484_curl-7.14.0.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">Curl_printable_address<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">Curl_addrinfo<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ip<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">buf<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">size_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">bufsize<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ip4<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><operator pos:line="4" pos:column="23">(<pos:position pos:line="4" pos:column="24"/></operator><specifier pos:line="4" pos:column="24">const<pos:position pos:line="4" pos:column="29"/></specifier> struct <name pos:line="4" pos:column="37">sockaddr_in<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></operator><operator pos:line="4" pos:column="49">)<pos:position pos:line="4" pos:column="50"/></operator><name><name pos:line="4" pos:column="50">ip<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="54">ai_addr<pos:position pos:line="4" pos:column="61"/></name></name><operator pos:line="4" pos:column="61">)<pos:position pos:line="4" pos:column="62"/></operator><operator pos:line="4" pos:column="62">-&gt;<pos:position pos:line="4" pos:column="67"/></operator><name pos:line="4" pos:column="64">sin_addr<pos:position pos:line="4" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">af<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><name><name pos:line="5" pos:column="12">ip<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">ai_family<pos:position pos:line="5" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">CURLRES_IPV6<pos:position pos:line="6" pos:column="20"/></name></cpp:ifdef>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ip6<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><specifier pos:line="7" pos:column="24">const<pos:position pos:line="7" pos:column="29"/></specifier> struct <name pos:line="7" pos:column="37">sockaddr_in6<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">*<pos:position pos:line="7" pos:column="50"/></operator><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator><name><name pos:line="7" pos:column="51">ip<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">ai_addr<pos:position pos:line="7" pos:column="62"/></name></name><operator pos:line="7" pos:column="62">)<pos:position pos:line="7" pos:column="63"/></operator><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">sin6_addr<pos:position pos:line="7" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="75"/></decl_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">void<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">ip6<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="12" pos:column="3">return <expr><call><name pos:line="12" pos:column="10">Curl_inet_ntop<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">af<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="29">af<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">==<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">AF_INET<pos:position pos:line="12" pos:column="42"/></name></expr> ?<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <expr><name pos:line="12" pos:column="45">ip4<pos:position pos:line="12" pos:column="48"/></name></expr> <pos:position pos:line="12" pos:column="49"/></then><else pos:line="12" pos:column="49">: <expr><name pos:line="12" pos:column="51">ip6<pos:position pos:line="12" pos:column="54"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">buf<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="61">bufsize<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

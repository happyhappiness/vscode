<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1603_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_pipeline_wanted<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">Curl_multi<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">multi<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">bits<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <return pos:line="3" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">multi<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">&amp;&amp;<pos:position pos:line="3" pos:column="27"/></operator> <operator pos:line="3" pos:column="20">(<pos:position pos:line="3" pos:column="21"/></operator><name><name pos:line="3" pos:column="21">multi<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">pipelining<pos:position pos:line="3" pos:column="38"/></name></name> <operator pos:line="3" pos:column="39">&amp;<pos:position pos:line="3" pos:column="44"/></operator> <name pos:line="3" pos:column="41">bits<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator></expr> ?<pos:position pos:line="3" pos:column="49"/></condition><then pos:line="3" pos:column="49"> <expr><name pos:line="3" pos:column="50">TRUE<pos:position pos:line="3" pos:column="54"/></name></expr> <pos:position pos:line="3" pos:column="55"/></then><else pos:line="3" pos:column="55">: <expr><name pos:line="3" pos:column="57">FALSE<pos:position pos:line="3" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="63"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1785_curl-7.55.1.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">Curl_getASN1Element<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">curl_asn1Element<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">elem<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">beg<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">end<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">long<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">len<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_asn1Element<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">lelem<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Get a single ASN.1 element into `elem', parse ASN.1 string at `beg'
     ending at `end'.
     Returns a pointer in source string after the parsed element, or NULL
     if an error occurs. */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">beg<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">||<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">!<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">end<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">||<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">beg<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&gt;=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">end<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">||<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="36">!<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">beg<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator>
     <call pos:line="13" pos:column="6">(<name pos:line="13" pos:column="7">size_t<pos:position pos:line="13" pos:column="13"/></name>)<argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">end<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">beg<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call> <operator pos:line="13" pos:column="26">&gt;<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="28">CURL_ASN1_MAX<pos:position pos:line="13" pos:column="41"/></name></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><specifier pos:line="14" pos:column="13">const<pos:position pos:line="14" pos:column="18"/></specifier> <name pos:line="14" pos:column="19">char<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* Process header byte. */</comment>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">elem<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">header<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">beg<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">b<pos:position pos:line="18" pos:column="4"/></name> <operator pos:line="18" pos:column="5">=<pos:position pos:line="18" pos:column="6"/></operator> <operator pos:line="18" pos:column="7">(<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">unsigned<pos:position pos:line="18" pos:column="16"/></name> <name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">beg<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">++<pos:position pos:line="18" pos:column="29"/></operator></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">elem<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">constructed<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">b<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">&amp;<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="28">0x20<pos:position pos:line="19" pos:column="32"/></literal><operator pos:line="19" pos:column="32">)<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="34">!=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">0<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">elem<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">class<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">b<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;&gt;<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="23">6<pos:position pos:line="20" pos:column="24"/></literal><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="28">3<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">b<pos:position pos:line="21" pos:column="4"/></name> <operator pos:line="21" pos:column="5">&amp;=<pos:position pos:line="21" pos:column="11"/></operator> <literal type="number" pos:line="21" pos:column="8">0x1F<pos:position pos:line="21" pos:column="12"/></literal></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">b<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">==<pos:position pos:line="22" pos:column="10"/></operator> <literal type="number" pos:line="22" pos:column="11">0x1F<pos:position pos:line="22" pos:column="15"/></literal></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><specifier pos:line="23" pos:column="13">const<pos:position pos:line="23" pos:column="18"/></specifier> <name pos:line="23" pos:column="19">char<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">)<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">NULL<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return></block></then></if> <comment type="block" pos:line="23" pos:column="33">/* Long tag values not supported here. */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">elem<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">tag<pos:position pos:line="24" pos:column="12"/></name></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">b<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* Process length. */</comment>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name pos:line="27" pos:column="6">beg<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">&gt;=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="13">end<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><specifier pos:line="28" pos:column="13">const<pos:position pos:line="28" pos:column="18"/></specifier> <name pos:line="28" pos:column="19">char<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">NULL<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="29" pos:column="3">b<pos:position pos:line="29" pos:column="4"/></name> <operator pos:line="29" pos:column="5">=<pos:position pos:line="29" pos:column="6"/></operator> <operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">unsigned<pos:position pos:line="29" pos:column="16"/></name> <name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">beg<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">++<pos:position pos:line="29" pos:column="29"/></operator></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">b<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">&amp;<pos:position pos:line="30" pos:column="15"/></operator> <literal type="number" pos:line="30" pos:column="12">0x80<pos:position pos:line="30" pos:column="16"/></literal><operator pos:line="30" pos:column="16">)<pos:position pos:line="30" pos:column="17"/></operator></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">len<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <name pos:line="31" pos:column="11">b<pos:position pos:line="31" pos:column="12"/></name></expr>;<pos:position pos:line="31" pos:column="13"/></expr_stmt></block></then>
  <elseif pos:line="32" pos:column="3">else <if pos:line="32" pos:column="8">if<condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">!<pos:position pos:line="32" pos:column="12"/></operator><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">b<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&amp;=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="18">0x7F<pos:position pos:line="32" pos:column="22"/></literal><operator pos:line="32" pos:column="22">)<pos:position pos:line="32" pos:column="23"/></operator></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
    <comment type="block" pos:line="33" pos:column="5">/* Unspecified length. Since we have all the data, we can determine the
       effective length by skipping element until an end element is found. */</comment>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">!<pos:position pos:line="35" pos:column="9"/></operator><name><name pos:line="35" pos:column="9">elem<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">constructed<pos:position pos:line="35" pos:column="26"/></name></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
      <block type="pseudo"><return pos:line="36" pos:column="7">return <expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><specifier pos:line="36" pos:column="15">const<pos:position pos:line="36" pos:column="20"/></specifier> <name pos:line="36" pos:column="21">char<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></operator><operator pos:line="36" pos:column="27">)<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">NULL<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">elem<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">beg<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">beg<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
    <while pos:line="38" pos:column="5">while<condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">beg<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">&lt;<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="17">end<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&amp;&amp;<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">beg<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition> <block pos:line="38" pos:column="30">{
      <expr_stmt><expr><name pos:line="39" pos:column="7">beg<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">Curl_getASN1Element<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="34">lelem<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">beg<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">end<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><operator pos:line="40" pos:column="10">!<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">beg<pos:position pos:line="40" pos:column="14"/></name></expr>)<pos:position pos:line="40" pos:column="15"/></condition><then pos:line="40" pos:column="15">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><specifier pos:line="41" pos:column="17">const<pos:position pos:line="41" pos:column="22"/></specifier> <name pos:line="41" pos:column="23">char<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">NULL<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></return></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></while>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name pos:line="43" pos:column="8">beg<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">&gt;=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="15">end<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19">
      <block type="pseudo"><return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><specifier pos:line="44" pos:column="15">const<pos:position pos:line="44" pos:column="20"/></specifier> <name pos:line="44" pos:column="21">char<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">NULL<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">elem<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">end<pos:position pos:line="45" pos:column="14"/></name></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <name pos:line="45" pos:column="17">beg<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">beg<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">+<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">1<pos:position pos:line="46" pos:column="19"/></literal></expr>;<pos:position pos:line="46" pos:column="20"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="48" pos:column="3">else <if pos:line="48" pos:column="8">if<condition pos:line="48" pos:column="10">(<expr><operator pos:line="48" pos:column="11">(<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">unsigned<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">)<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">b<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">&gt;<pos:position pos:line="48" pos:column="27"/></operator> <call pos:line="48" pos:column="25">(<name pos:line="48" pos:column="26">size_t<pos:position pos:line="48" pos:column="32"/></name>)<argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">end<pos:position pos:line="48" pos:column="37"/></name> <operator pos:line="48" pos:column="38">-<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="40">beg<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45">
    <block type="pseudo"><return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><specifier pos:line="49" pos:column="13">const<pos:position pos:line="49" pos:column="18"/></specifier> <name pos:line="49" pos:column="19">char<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">*<pos:position pos:line="49" pos:column="25"/></operator><operator pos:line="49" pos:column="25">)<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">NULL<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></return></block></then></if></elseif> <comment type="block" pos:line="49" pos:column="33">/* Does not fit in source. */</comment>
  <else pos:line="50" pos:column="3">else <block pos:line="50" pos:column="8">{
    <comment type="block" pos:line="51" pos:column="5">/* Get long length. */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">len<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <literal type="number" pos:line="52" pos:column="11">0<pos:position pos:line="52" pos:column="12"/></literal></expr>;<pos:position pos:line="52" pos:column="13"/></expr_stmt>
    <do pos:line="53" pos:column="5">do <block pos:line="53" pos:column="8">{
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name pos:line="54" pos:column="10">len<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">&amp;<pos:position pos:line="54" pos:column="19"/></operator> <literal type="number" pos:line="54" pos:column="16">0xFF000000L<pos:position pos:line="54" pos:column="27"/></literal></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><specifier pos:line="55" pos:column="17">const<pos:position pos:line="55" pos:column="22"/></specifier> <name pos:line="55" pos:column="23">char<pos:position pos:line="55" pos:column="27"/></name> <operator pos:line="55" pos:column="28">*<pos:position pos:line="55" pos:column="29"/></operator><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator> <name pos:line="55" pos:column="31">NULL<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></return></block></then></if>  <comment type="block" pos:line="55" pos:column="38">/* Lengths &gt; 32 bits are not supported. */</comment>
      <expr_stmt><expr><name pos:line="56" pos:column="7">len<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">len<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">&lt;&lt;<pos:position pos:line="56" pos:column="26"/></operator> <literal type="number" pos:line="56" pos:column="21">8<pos:position pos:line="56" pos:column="22"/></literal><operator pos:line="56" pos:column="22">)<pos:position pos:line="56" pos:column="23"/></operator> <operator pos:line="56" pos:column="24">|<pos:position pos:line="56" pos:column="25"/></operator> <operator pos:line="56" pos:column="26">(<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">unsigned<pos:position pos:line="56" pos:column="35"/></name> <name pos:line="56" pos:column="36">char<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">)<pos:position pos:line="56" pos:column="41"/></operator> <operator pos:line="56" pos:column="42">*<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">beg<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">++<pos:position pos:line="56" pos:column="48"/></operator></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block> while<condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">--<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">b<pos:position pos:line="57" pos:column="16"/></name></expr>)<pos:position pos:line="57" pos:column="17"/></condition>;<pos:position pos:line="57" pos:column="18"/></do>
  }<pos:position pos:line="58" pos:column="4"/></block></else></if>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">len<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">&gt;<pos:position pos:line="59" pos:column="14"/></operator> <call pos:line="59" pos:column="12">(<name pos:line="59" pos:column="13">size_t<pos:position pos:line="59" pos:column="19"/></name>)<argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">end<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">-<pos:position pos:line="59" pos:column="26"/></operator> <name pos:line="59" pos:column="27">beg<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="32"/></condition><then pos:line="59" pos:column="32">
    <block type="pseudo"><return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">(<pos:position pos:line="60" pos:column="13"/></operator><specifier pos:line="60" pos:column="13">const<pos:position pos:line="60" pos:column="18"/></specifier> <name pos:line="60" pos:column="19">char<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">*<pos:position pos:line="60" pos:column="25"/></operator><operator pos:line="60" pos:column="25">)<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">NULL<pos:position pos:line="60" pos:column="31"/></name></expr>;<pos:position pos:line="60" pos:column="32"/></return></block></then></if>  <comment type="block" pos:line="60" pos:column="34">/* Element data does not fit in source. */</comment>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">elem<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">beg<pos:position pos:line="61" pos:column="12"/></name></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">beg<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">elem<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">end<pos:position pos:line="62" pos:column="12"/></name></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">beg<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">+<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="21">len<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
  <return pos:line="63" pos:column="3">return <expr><name><name pos:line="63" pos:column="10">elem<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">end<pos:position pos:line="63" pos:column="19"/></name></name></expr>;<pos:position pos:line="63" pos:column="20"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

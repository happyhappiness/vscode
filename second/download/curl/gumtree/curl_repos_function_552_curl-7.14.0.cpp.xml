<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_552_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ftp_connect<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">bool<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">done<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list> <comment type="block" pos:line="2" pos:column="39">/* see description above */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">FTP<pos:position pos:line="4" pos:column="13"/></name></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ftp<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="7" pos:column="3">*<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">done<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name pos:line="7" pos:column="11">FALSE<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt> <comment type="block" pos:line="7" pos:column="18">/* default to not done yet */</comment>

  <expr_stmt><expr><name pos:line="9" pos:column="3">ftp<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator>struct <name pos:line="9" pos:column="17">FTP<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator><call><name pos:line="9" pos:column="23">calloc<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><sizeof pos:line="9" pos:column="30">sizeof<argument_list pos:line="9" pos:column="36">(<argument><expr pos:line="9" pos:column="37">struct <name pos:line="9" pos:column="44">FTP<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="50">1<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">ftp<pos:position pos:line="10" pos:column="10"/></name></expr>)<pos:position pos:line="10" pos:column="11"/></condition><then pos:line="10" pos:column="11">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">conn<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">proto<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">ftp<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">ftp<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* We always support persistant connections on ftp */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">conn<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">bits<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">close<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">FALSE<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* get some initial data into the ftp struct */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">ftp<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">bytecountp<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name><name pos:line="19" pos:column="22">conn<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">bytecount<pos:position pos:line="19" pos:column="37"/></name></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* no need to duplicate them, this connectdata struct won't change */</comment>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">ftp<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">user<pos:position pos:line="22" pos:column="12"/></name></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name><name pos:line="22" pos:column="15">conn<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">user<pos:position pos:line="22" pos:column="25"/></name></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">ftp<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">passwd<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name><name pos:line="23" pos:column="17">conn<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">passwd<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">isBadFtpString<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">ftp<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">user<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call> <operator pos:line="24" pos:column="33">||<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="36">isBadFtpString<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name><name pos:line="24" pos:column="51">ftp<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">passwd<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="64"/></condition><then pos:line="24" pos:column="64">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">ftp<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">response_time<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <literal type="number" pos:line="27" pos:column="24">3600<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt> <comment type="block" pos:line="27" pos:column="30">/* set default response time-out */</comment>

<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef<pos:position pos:line="29" pos:column="8"/></cpp:directive> <name pos:line="29" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="29" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">conn<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">bits<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">tunnel_proxy<pos:position pos:line="30" pos:column="30"/></name></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
    <comment type="block" pos:line="31" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="32" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">result<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">Curl_ConnectHTTPProxyTunnel<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">conn<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">FIRSTSOCKET<pos:position pos:line="33" pos:column="59"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="34" pos:column="42">conn<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">host<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">.<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="53">name<pos:position pos:line="34" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="59">conn<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">remote_port<pos:position pos:line="34" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><name pos:line="35" pos:column="8">CURLE_OK<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">!=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">result<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27">
      <block type="pseudo"><return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">result<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>   <comment type="block" pos:line="38" pos:column="10">/* CURL_DISABLE_HTTP */</comment>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name><name pos:line="40" pos:column="6">conn<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">protocol<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">&amp;<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="23">PROT_FTPS<pos:position pos:line="40" pos:column="32"/></name></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
    <comment type="block" pos:line="41" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="42" pos:column="5">/* FTPS is simply ftp with SSL for the control channel */</comment>
    <comment type="block" pos:line="43" pos:column="5">/* now, perform the SSL initialization for this socket */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">result<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name pos:line="44" pos:column="14">Curl_ssl_connect<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">conn<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">FIRSTSOCKET<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><name pos:line="45" pos:column="8">result<pos:position pos:line="45" pos:column="14"/></name></expr>)<pos:position pos:line="45" pos:column="15"/></condition><then pos:line="45" pos:column="15">
      <block type="pseudo"><return pos:line="46" pos:column="7">return <expr><name pos:line="46" pos:column="14">result<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* When we connect, we start in the state where we await the 220
     response */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">ftp_respinit<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">conn<pos:position pos:line="51" pos:column="20"/></name></expr></argument>)<pos:position pos:line="51" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt> <comment type="block" pos:line="51" pos:column="23">/* init the response reader stuff */</comment>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">state<pos:position pos:line="52" pos:column="8"/></name><argument_list pos:line="52" pos:column="8">(<argument><expr><name pos:line="52" pos:column="9">conn<pos:position pos:line="52" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="15">FTP_WAIT220<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="53" pos:column="3">ftp<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">response<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <call><name pos:line="53" pos:column="19">Curl_tvnow<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">()<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt> <comment type="block" pos:line="53" pos:column="33">/* start response time-out now! */</comment>

  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name><name pos:line="55" pos:column="6">conn<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">data<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">state<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">used_interface<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">==<pos:position pos:line="55" pos:column="41"/></operator> <name pos:line="55" pos:column="42">Curl_if_multi<pos:position pos:line="55" pos:column="55"/></name></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="5">result<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">Curl_ftp_multi_statemach<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name pos:line="56" pos:column="39">conn<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">done<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="57" pos:column="3">else <block pos:line="57" pos:column="8">{
    <expr_stmt><expr><name pos:line="58" pos:column="5">result<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">ftp_easy_statemach<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">conn<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><operator pos:line="59" pos:column="8">!<pos:position pos:line="59" pos:column="9"/></operator><name pos:line="59" pos:column="9">result<pos:position pos:line="59" pos:column="15"/></name></expr>)<pos:position pos:line="59" pos:column="16"/></condition><then pos:line="59" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="60" pos:column="7">*<pos:position pos:line="60" pos:column="8"/></operator><name pos:line="60" pos:column="8">done<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">TRUE<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt></block></then></if>
  }<pos:position pos:line="61" pos:column="4"/></block></else></if>

  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">result<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

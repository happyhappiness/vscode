<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_102.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_do<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">CURLconnect<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">in_conn<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">connectdata<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">conn<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">in_conn<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">conn<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">||<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">(<pos:position pos:line="6" pos:column="16"/></operator><name><name pos:line="6" pos:column="16">conn<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">handle<pos:position pos:line="6" pos:column="28"/></name></name><operator pos:line="6" pos:column="28">!=<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">STRUCT_CONNECT<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <block pos:line="6" pos:column="48">{
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="7" pos:column="39"/></name></expr>;<pos:position pos:line="7" pos:column="40"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">conn<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">state<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">!=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">CONN_INIT<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <block pos:line="9" pos:column="32">{
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">CURLE_BAD_CALLING_ORDER<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">conn<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">curl_do<pos:position pos:line="13" pos:column="19"/></name></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
    <comment type="block" pos:line="14" pos:column="5">/* generic protocol-specific function pointer set in curl_connect() */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">result<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name><name pos:line="15" pos:column="14">conn<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">curl_do<pos:position pos:line="15" pos:column="27"/></name></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">conn<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">result<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block pos:line="16" pos:column="16">{
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">conn<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">state<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">CONN_ERROR<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">result<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">conn<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">CONN_DO<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt> <comment type="block" pos:line="22" pos:column="26">/* we have entered this state */</comment>

<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="24" pos:column="5">0<pos:position pos:line="24" pos:column="6"/></literal></expr></cpp:if>
  if(conn-&gt;bytecount) {
    double ittook = tvdiff (tvnow(), conn-&gt;now);
    infof(data, "%i bytes transfered in %.3lf seconds (%.0lf bytes/sec).\n",
          conn-&gt;bytecount, ittook, (double)conn-&gt;bytecount/(ittook!=0.0?ittook:1));
  }
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">CURLE_OK<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

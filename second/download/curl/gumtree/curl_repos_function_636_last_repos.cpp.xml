<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_636_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">print_httppost_callback<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">arg<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">buf<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">size_t<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">len<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">fwrite<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="15">len<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="20">1<pos:position pos:line="3" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="23">stdout<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="4" pos:column="3">(<pos:position pos:line="4" pos:column="4"/></operator><operator pos:line="4" pos:column="4">*<pos:position pos:line="4" pos:column="5"/></operator><operator pos:line="4" pos:column="5">(<pos:position pos:line="4" pos:column="6"/></operator><name pos:line="4" pos:column="6">size_t<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></operator><operator pos:line="4" pos:column="14">)<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">arg<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">)<pos:position pos:line="4" pos:column="20"/></operator> <operator pos:line="4" pos:column="21">+=<pos:position pos:line="4" pos:column="23"/></operator> <name pos:line="4" pos:column="24">len<pos:position pos:line="4" pos:column="27"/></name></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
  <return pos:line="5" pos:column="3">return <expr><name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name></expr>;<pos:position pos:line="5" pos:column="14"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

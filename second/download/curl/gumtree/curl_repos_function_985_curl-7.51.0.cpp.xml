<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_985_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">readwrite_upload<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">Curl_easy<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">connectdata<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">conn<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">SingleRequest<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">k<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="4" pos:column="34">int<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">didwhat<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="47"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">i<pos:position pos:line="6" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="14">si<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">bytes_written<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">nread<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt> <comment type="block" pos:line="9" pos:column="18">/* number of bytes read */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">bool<pos:position pos:line="10" pos:column="7"/></name></type> <name pos:line="10" pos:column="8">sending_http_headers<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><name pos:line="10" pos:column="31">FALSE<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">(<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">k<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">bytecount<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">k<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">writebytecount<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">Curl_pgrsTime<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">data<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="25">TIMER_STARTTRANSFER<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then></if>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">didwhat<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">|=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">KEEP_SEND<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

  <do pos:line="17" pos:column="3">do <block pos:line="17" pos:column="6">{

    <comment type="block" pos:line="19" pos:column="5">/* only read more data if there's no upload data already
       present in the upload buffer */</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><literal type="number" pos:line="21" pos:column="8">0<pos:position pos:line="21" pos:column="9"/></literal> <operator pos:line="21" pos:column="10">==<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">data<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">req<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">upload_present<pos:position pos:line="21" pos:column="37"/></name></name></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
      <comment type="block" pos:line="22" pos:column="7">/* init the "upload from here" pointer */</comment>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">data<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">req<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">upload_fromhere<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">=<pos:position pos:line="23" pos:column="34"/></operator> <name><name pos:line="23" pos:column="35">k<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">uploadbuf<pos:position pos:line="23" pos:column="47"/></name></name></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>

      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">!<pos:position pos:line="25" pos:column="11"/></operator><name><name pos:line="25" pos:column="11">k<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">upload_done<pos:position pos:line="25" pos:column="25"/></name></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26"> <block pos:line="25" pos:column="27">{
        <comment type="block" pos:line="26" pos:column="9">/* HTTP pollution, this should be written nicer to become more
           protocol agnostic. */</comment>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">int<pos:position pos:line="28" pos:column="12"/></name></type> <name pos:line="28" pos:column="13">fillcount<pos:position pos:line="28" pos:column="22"/></name></decl>;<pos:position pos:line="28" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="29" pos:column="9">struct<pos:position pos:line="29" pos:column="15"/></name> <name pos:line="29" pos:column="16">HTTP<pos:position pos:line="29" pos:column="20"/></name></name> <modifier pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></modifier></type><name pos:line="29" pos:column="22">http<pos:position pos:line="29" pos:column="26"/></name> <init pos:line="29" pos:column="27">= <expr><name><name pos:line="29" pos:column="29">data<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">req<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">.<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">protop<pos:position pos:line="29" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="46"/></decl_stmt>

        <if pos:line="31" pos:column="9">if<condition pos:line="31" pos:column="11">(<expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="13">k<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">exp100<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">==<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">EXP100_SENDING_REQUEST<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">)<pos:position pos:line="31" pos:column="49"/></operator> <operator pos:line="31" pos:column="50">&amp;&amp;<pos:position pos:line="31" pos:column="60"/></operator>
           <operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name><name pos:line="32" pos:column="13">http<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">sending<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">==<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">HTTPSEND_BODY<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">)<pos:position pos:line="32" pos:column="44"/></operator></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <block pos:line="32" pos:column="46">{
          <comment type="block" pos:line="33" pos:column="11">/* If this call is to send body data, we must take some action:
             We have sent off the full HTTP 1.1 request, and we shall now
             go into the Expect: 100 state and await such a header */</comment>
          <expr_stmt><expr><name><name pos:line="36" pos:column="11">k<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">exp100<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">EXP100_AWAITING_CONTINUE<pos:position pos:line="36" pos:column="47"/></name></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt> <comment type="block" pos:line="36" pos:column="49">/* wait for the header */</comment>
          <expr_stmt><expr><name><name pos:line="37" pos:column="11">k<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">keepon<pos:position pos:line="37" pos:column="20"/></name></name> <operator pos:line="37" pos:column="21">&amp;=<pos:position pos:line="37" pos:column="27"/></operator> <operator pos:line="37" pos:column="24">~<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">KEEP_SEND<pos:position pos:line="37" pos:column="34"/></name></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="37" pos:column="44">/* disable writing */</comment>
          <expr_stmt><expr><name><name pos:line="38" pos:column="11">k<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">start100<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">Curl_tvnow<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">()<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>       <comment type="block" pos:line="38" pos:column="45">/* timeout count starts now */</comment>
          <expr_stmt><expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">didwhat<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">&amp;=<pos:position pos:line="39" pos:column="26"/></operator> <operator pos:line="39" pos:column="23">~<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">KEEP_SEND<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>  <comment type="block" pos:line="39" pos:column="36">/* we didn't write anything actually */</comment>

          <comment type="block" pos:line="41" pos:column="11">/* set a timeout for the multi interface */</comment>
          <expr_stmt><expr><call><name pos:line="42" pos:column="11">Curl_expire<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">data<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="29">data<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">set<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">.<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">expect_100_timeout<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
          <break pos:line="43" pos:column="11">break;<pos:position pos:line="43" pos:column="17"/></break>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <if pos:line="46" pos:column="9">if<condition pos:line="46" pos:column="11">(<expr><name><name pos:line="46" pos:column="12">conn<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">handler<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">protocol<pos:position pos:line="46" pos:column="35"/></name></name><operator pos:line="46" pos:column="35">&amp;<pos:position pos:line="46" pos:column="40"/></operator><operator pos:line="46" pos:column="36">(<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="37">PROTO_FAMILY_HTTP<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">|<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="55">CURLPROTO_RTSP<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">)<pos:position pos:line="46" pos:column="70"/></operator></expr>)<pos:position pos:line="46" pos:column="71"/></condition><then pos:line="46" pos:column="71"> <block pos:line="46" pos:column="72">{
          <if pos:line="47" pos:column="11">if<condition pos:line="47" pos:column="13">(<expr><name><name pos:line="47" pos:column="14">http<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">sending<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">==<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">HTTPSEND_REQUEST<pos:position pos:line="47" pos:column="47"/></name></expr>)<pos:position pos:line="47" pos:column="48"/></condition><then pos:line="47" pos:column="48">
            <comment type="block" pos:line="48" pos:column="13">/* We're sending the HTTP request headers, not the data.
               Remember that so we don't change the line endings. */</comment>
            <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">sending_http_headers<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">=<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="36">TRUE<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt></block></then>
          <else pos:line="51" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="13">sending_http_headers<pos:position pos:line="52" pos:column="33"/></name> <operator pos:line="52" pos:column="34">=<pos:position pos:line="52" pos:column="35"/></operator> <name pos:line="52" pos:column="36">FALSE<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt></block></else></if>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="55" pos:column="9">result<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">Curl_fillreadbuffer<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">conn<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">BUFSIZE<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="53">&amp;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="54">fillcount<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>
        <if pos:line="56" pos:column="9">if<condition pos:line="56" pos:column="11">(<expr><name pos:line="56" pos:column="12">result<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19">
          <block type="pseudo"><return pos:line="57" pos:column="11">return <expr><name pos:line="57" pos:column="18">result<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="59" pos:column="9">nread<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <operator pos:line="59" pos:column="17">(<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">ssize_t<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">)<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">fillcount<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then>
      <else pos:line="61" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">nread<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt></block></else></if> <comment type="block" pos:line="62" pos:column="20">/* we're done uploading/reading */</comment>

      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><operator pos:line="64" pos:column="10">!<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">nread<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">&amp;&amp;<pos:position pos:line="64" pos:column="27"/></operator> <operator pos:line="64" pos:column="20">(<pos:position pos:line="64" pos:column="21"/></operator><name><name pos:line="64" pos:column="21">k<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">-&gt;<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="24">keepon<pos:position pos:line="64" pos:column="30"/></name></name> <operator pos:line="64" pos:column="31">&amp;<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="33">KEEP_SEND_PAUSE<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">)<pos:position pos:line="64" pos:column="49"/></operator></expr>)<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50"> <block pos:line="64" pos:column="51">{
        <comment type="block" pos:line="65" pos:column="9">/* this is a paused transfer */</comment>
        <break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>
      }<pos:position pos:line="67" pos:column="8"/></block></then>
      <elseif pos:line="68" pos:column="7">else <if pos:line="68" pos:column="12">if<condition pos:line="68" pos:column="14">(<expr><name pos:line="68" pos:column="15">nread<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">&lt;=<pos:position pos:line="68" pos:column="25"/></operator><literal type="number" pos:line="68" pos:column="22">0<pos:position pos:line="68" pos:column="23"/></literal></expr>)<pos:position pos:line="68" pos:column="24"/></condition><then pos:line="68" pos:column="24"> <block pos:line="68" pos:column="25">{
        <expr_stmt><expr><name pos:line="69" pos:column="9">result<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">done_sending<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">conn<pos:position pos:line="69" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="37">k<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
        <if pos:line="70" pos:column="9">if<condition pos:line="70" pos:column="11">(<expr><name pos:line="70" pos:column="12">result<pos:position pos:line="70" pos:column="18"/></name></expr>)<pos:position pos:line="70" pos:column="19"/></condition><then pos:line="70" pos:column="19">
          <block type="pseudo"><return pos:line="71" pos:column="11">return <expr><name pos:line="71" pos:column="18">result<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></return></block></then></if>
        <break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if></elseif></if>

      <comment type="block" pos:line="75" pos:column="7">/* store number of bytes available for upload */</comment>
      <expr_stmt><expr><name><name pos:line="76" pos:column="7">data<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">req<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">.<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">upload_present<pos:position pos:line="76" pos:column="31"/></name></name> <operator pos:line="76" pos:column="32">=<pos:position pos:line="76" pos:column="33"/></operator> <name pos:line="76" pos:column="34">nread<pos:position pos:line="76" pos:column="39"/></name></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>

      <comment type="block" pos:line="78" pos:column="7">/* convert LF to CRLF if so asked */</comment>
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">(<expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><operator pos:line="79" pos:column="11">!<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="12">sending_http_headers<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">)<pos:position pos:line="79" pos:column="33"/></operator> <operator pos:line="79" pos:column="34">&amp;&amp;<pos:position pos:line="79" pos:column="44"/></operator> <operator pos:line="79" pos:column="37">(<pos:position pos:line="79" pos:column="38"/></operator>
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">CURL_DO_LINEEND_CONV<pos:position pos:line="80" pos:column="28"/></name></cpp:ifdef>
         <comment type="block" pos:line="81" pos:column="10">/* always convert if we're FTPing in ASCII mode */</comment>
         <operator pos:line="82" pos:column="10">(<pos:position pos:line="82" pos:column="11"/></operator><name><name pos:line="82" pos:column="11">data<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">set<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">.<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="21">prefer_ascii<pos:position pos:line="82" pos:column="33"/></name></name><operator pos:line="82" pos:column="33">)<pos:position pos:line="82" pos:column="34"/></operator> <operator pos:line="82" pos:column="35">||<pos:position pos:line="82" pos:column="37"/></operator>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
         <operator pos:line="84" pos:column="10">(<pos:position pos:line="84" pos:column="11"/></operator><name><name pos:line="84" pos:column="11">data<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">set<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">.<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="21">crlf<pos:position pos:line="84" pos:column="25"/></name></name><operator pos:line="84" pos:column="25">)<pos:position pos:line="84" pos:column="26"/></operator><operator pos:line="84" pos:column="26">)<pos:position pos:line="84" pos:column="27"/></operator></expr>)<pos:position pos:line="84" pos:column="28"/></condition><then pos:line="84" pos:column="28"> <block pos:line="84" pos:column="29">{
        <comment type="block" pos:line="85" pos:column="9">/* Do we need to allocate a scratch buffer? */</comment>
        <if pos:line="86" pos:column="9">if<condition pos:line="86" pos:column="11">(<expr><operator pos:line="86" pos:column="12">!<pos:position pos:line="86" pos:column="13"/></operator><name><name pos:line="86" pos:column="13">data<pos:position pos:line="86" pos:column="17"/></name><operator pos:line="86" pos:column="17">-&gt;<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="19">state<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">.<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="25">scratch<pos:position pos:line="86" pos:column="32"/></name></name></expr>)<pos:position pos:line="86" pos:column="33"/></condition><then pos:line="86" pos:column="33"> <block pos:line="86" pos:column="34">{
          <expr_stmt><expr><name><name pos:line="87" pos:column="11">data<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">-&gt;<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="17">state<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">.<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="23">scratch<pos:position pos:line="87" pos:column="30"/></name></name> <operator pos:line="87" pos:column="31">=<pos:position pos:line="87" pos:column="32"/></operator> <call><name pos:line="87" pos:column="33">malloc<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><literal type="number" pos:line="87" pos:column="40">2<pos:position pos:line="87" pos:column="41"/></literal> <operator pos:line="87" pos:column="42">*<pos:position pos:line="87" pos:column="43"/></operator> <name pos:line="87" pos:column="44">BUFSIZE<pos:position pos:line="87" pos:column="51"/></name></expr></argument>)<pos:position pos:line="87" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="53"/></expr_stmt>
          <if pos:line="88" pos:column="11">if<condition pos:line="88" pos:column="13">(<expr><operator pos:line="88" pos:column="14">!<pos:position pos:line="88" pos:column="15"/></operator><name><name pos:line="88" pos:column="15">data<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">-&gt;<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="21">state<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">.<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">scratch<pos:position pos:line="88" pos:column="34"/></name></name></expr>)<pos:position pos:line="88" pos:column="35"/></condition><then pos:line="88" pos:column="35"> <block pos:line="88" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">failf<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><name pos:line="89" pos:column="19">data<pos:position pos:line="89" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="25">"Failed to alloc scratch buffer!"<pos:position pos:line="89" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="60"/></expr_stmt>

            <return pos:line="91" pos:column="13">return <expr><name pos:line="91" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="91" pos:column="39"/></name></expr>;<pos:position pos:line="91" pos:column="40"/></return>
          }<pos:position pos:line="92" pos:column="12"/></block></then></if>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="95" pos:column="9">/*
         * ASCII/EBCDIC Note: This is presumably a text (not binary)
         * transfer so the data should already be in ASCII.
         * That means the hex values for ASCII CR (0x0d) &amp; LF (0x0a)
         * must be used instead of the escape sequences \r &amp; \n.
         */</comment>
        <for pos:line="101" pos:column="9">for<control pos:line="101" pos:column="12">(<init><expr><name pos:line="101" pos:column="13">i<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">=<pos:position pos:line="101" pos:column="16"/></operator> <literal type="number" pos:line="101" pos:column="17">0<pos:position pos:line="101" pos:column="18"/></literal></expr><operator pos:line="101" pos:column="18">,<pos:position pos:line="101" pos:column="19"/></operator> <expr><name pos:line="101" pos:column="20">si<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">=<pos:position pos:line="101" pos:column="24"/></operator> <literal type="number" pos:line="101" pos:column="25">0<pos:position pos:line="101" pos:column="26"/></literal></expr>;<pos:position pos:line="101" pos:column="27"/></init> <condition><expr><name pos:line="101" pos:column="28">i<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">&lt;<pos:position pos:line="101" pos:column="34"/></operator> <name pos:line="101" pos:column="32">nread<pos:position pos:line="101" pos:column="37"/></name></expr>;<pos:position pos:line="101" pos:column="38"/></condition> <incr><expr><name pos:line="101" pos:column="39">i<pos:position pos:line="101" pos:column="40"/></name><operator pos:line="101" pos:column="40">++<pos:position pos:line="101" pos:column="42"/></operator></expr><operator pos:line="101" pos:column="42">,<pos:position pos:line="101" pos:column="43"/></operator> <expr><name pos:line="101" pos:column="44">si<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">++<pos:position pos:line="101" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="101" pos:column="49"/></control> <block pos:line="101" pos:column="50">{
          <if pos:line="102" pos:column="11">if<condition pos:line="102" pos:column="13">(<expr><name><name pos:line="102" pos:column="14">data<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">-&gt;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="20">req<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">.<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="24">upload_fromhere<pos:position pos:line="102" pos:column="39"/></name><index pos:line="102" pos:column="39">[<expr><name pos:line="102" pos:column="40">i<pos:position pos:line="102" pos:column="41"/></name></expr>]<pos:position pos:line="102" pos:column="42"/></index></name> <operator pos:line="102" pos:column="43">==<pos:position pos:line="102" pos:column="45"/></operator> <literal type="number" pos:line="102" pos:column="46">0x0a<pos:position pos:line="102" pos:column="50"/></literal></expr>)<pos:position pos:line="102" pos:column="51"/></condition><then pos:line="102" pos:column="51"> <block pos:line="102" pos:column="52">{
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">data<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">state<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">.<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">scratch<pos:position pos:line="103" pos:column="32"/></name><index pos:line="103" pos:column="32">[<expr><name pos:line="103" pos:column="33">si<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">++<pos:position pos:line="103" pos:column="37"/></operator></expr>]<pos:position pos:line="103" pos:column="38"/></index></name> <operator pos:line="103" pos:column="39">=<pos:position pos:line="103" pos:column="40"/></operator> <literal type="number" pos:line="103" pos:column="41">0x0d<pos:position pos:line="103" pos:column="45"/></literal></expr>;<pos:position pos:line="103" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="104" pos:column="13">data<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">-&gt;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="19">state<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">.<pos:position pos:line="104" pos:column="25"/></operator><name pos:line="104" pos:column="25">scratch<pos:position pos:line="104" pos:column="32"/></name><index pos:line="104" pos:column="32">[<expr><name pos:line="104" pos:column="33">si<pos:position pos:line="104" pos:column="35"/></name></expr>]<pos:position pos:line="104" pos:column="36"/></index></name> <operator pos:line="104" pos:column="37">=<pos:position pos:line="104" pos:column="38"/></operator> <literal type="number" pos:line="104" pos:column="39">0x0a<pos:position pos:line="104" pos:column="43"/></literal></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
            <if pos:line="105" pos:column="13">if<condition pos:line="105" pos:column="15">(<expr><operator pos:line="105" pos:column="16">!<pos:position pos:line="105" pos:column="17"/></operator><name><name pos:line="105" pos:column="17">data<pos:position pos:line="105" pos:column="21"/></name><operator pos:line="105" pos:column="21">-&gt;<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="23">set<pos:position pos:line="105" pos:column="26"/></name><operator pos:line="105" pos:column="26">.<pos:position pos:line="105" pos:column="27"/></operator><name pos:line="105" pos:column="27">crlf<pos:position pos:line="105" pos:column="31"/></name></name></expr>)<pos:position pos:line="105" pos:column="32"/></condition><then pos:line="105" pos:column="32"> <block pos:line="105" pos:column="33">{
              <comment type="block" pos:line="106" pos:column="15">/* we're here only because FTP is in ASCII mode...
                 bump infilesize for the LF we just added */</comment>
              <if pos:line="108" pos:column="15">if<condition pos:line="108" pos:column="17">(<expr><name><name pos:line="108" pos:column="18">data<pos:position pos:line="108" pos:column="22"/></name><operator pos:line="108" pos:column="22">-&gt;<pos:position pos:line="108" pos:column="27"/></operator><name pos:line="108" pos:column="24">state<pos:position pos:line="108" pos:column="29"/></name><operator pos:line="108" pos:column="29">.<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="30">infilesize<pos:position pos:line="108" pos:column="40"/></name></name> <operator pos:line="108" pos:column="41">!=<pos:position pos:line="108" pos:column="43"/></operator> <operator pos:line="108" pos:column="44">-<pos:position pos:line="108" pos:column="45"/></operator><literal type="number" pos:line="108" pos:column="45">1<pos:position pos:line="108" pos:column="46"/></literal></expr>)<pos:position pos:line="108" pos:column="47"/></condition><then pos:line="108" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="17">data<pos:position pos:line="109" pos:column="21"/></name><operator pos:line="109" pos:column="21">-&gt;<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="23">state<pos:position pos:line="109" pos:column="28"/></name><operator pos:line="109" pos:column="28">.<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="29">infilesize<pos:position pos:line="109" pos:column="39"/></name></name><operator pos:line="109" pos:column="39">++<pos:position pos:line="109" pos:column="41"/></operator></expr>;<pos:position pos:line="109" pos:column="42"/></expr_stmt></block></then></if>
            }<pos:position pos:line="110" pos:column="14"/></block></then></if>
          }<pos:position pos:line="111" pos:column="12"/></block></then>
          <else pos:line="112" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="113" pos:column="13">data<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">-&gt;<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="19">state<pos:position pos:line="113" pos:column="24"/></name><operator pos:line="113" pos:column="24">.<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="25">scratch<pos:position pos:line="113" pos:column="32"/></name><index pos:line="113" pos:column="32">[<expr><name pos:line="113" pos:column="33">si<pos:position pos:line="113" pos:column="35"/></name></expr>]<pos:position pos:line="113" pos:column="36"/></index></name> <operator pos:line="113" pos:column="37">=<pos:position pos:line="113" pos:column="38"/></operator> <name><name pos:line="113" pos:column="39">data<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">-&gt;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="45">req<pos:position pos:line="113" pos:column="48"/></name><operator pos:line="113" pos:column="48">.<pos:position pos:line="113" pos:column="49"/></operator><name pos:line="113" pos:column="49">upload_fromhere<pos:position pos:line="113" pos:column="64"/></name><index pos:line="113" pos:column="64">[<expr><name pos:line="113" pos:column="65">i<pos:position pos:line="113" pos:column="66"/></name></expr>]<pos:position pos:line="113" pos:column="67"/></index></name></expr>;<pos:position pos:line="113" pos:column="68"/></expr_stmt></block></else></if>
        }<pos:position pos:line="114" pos:column="10"/></block></for>

        <if pos:line="116" pos:column="9">if<condition pos:line="116" pos:column="11">(<expr><name pos:line="116" pos:column="12">si<pos:position pos:line="116" pos:column="14"/></name> <operator pos:line="116" pos:column="15">!=<pos:position pos:line="116" pos:column="17"/></operator> <name pos:line="116" pos:column="18">nread<pos:position pos:line="116" pos:column="23"/></name></expr>)<pos:position pos:line="116" pos:column="24"/></condition><then pos:line="116" pos:column="24"> <block pos:line="116" pos:column="25">{
          <comment type="block" pos:line="117" pos:column="11">/* only perform the special operation if we really did replace
             anything */</comment>
          <expr_stmt><expr><name pos:line="119" pos:column="11">nread<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <name pos:line="119" pos:column="19">si<pos:position pos:line="119" pos:column="21"/></name></expr>;<pos:position pos:line="119" pos:column="22"/></expr_stmt>

          <comment type="block" pos:line="121" pos:column="11">/* upload from the new (replaced) buffer instead */</comment>
          <expr_stmt><expr><name><name pos:line="122" pos:column="11">data<pos:position pos:line="122" pos:column="15"/></name><operator pos:line="122" pos:column="15">-&gt;<pos:position pos:line="122" pos:column="20"/></operator><name pos:line="122" pos:column="17">req<pos:position pos:line="122" pos:column="20"/></name><operator pos:line="122" pos:column="20">.<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="21">upload_fromhere<pos:position pos:line="122" pos:column="36"/></name></name> <operator pos:line="122" pos:column="37">=<pos:position pos:line="122" pos:column="38"/></operator> <name><name pos:line="122" pos:column="39">data<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">-&gt;<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="45">state<pos:position pos:line="122" pos:column="50"/></name><operator pos:line="122" pos:column="50">.<pos:position pos:line="122" pos:column="51"/></operator><name pos:line="122" pos:column="51">scratch<pos:position pos:line="122" pos:column="58"/></name></name></expr>;<pos:position pos:line="122" pos:column="59"/></expr_stmt>

          <comment type="block" pos:line="124" pos:column="11">/* set the new amount too */</comment>
          <expr_stmt><expr><name><name pos:line="125" pos:column="11">data<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">-&gt;<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="17">req<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">.<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">upload_present<pos:position pos:line="125" pos:column="35"/></name></name> <operator pos:line="125" pos:column="36">=<pos:position pos:line="125" pos:column="37"/></operator> <name pos:line="125" pos:column="38">nread<pos:position pos:line="125" pos:column="43"/></name></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="126" pos:column="10"/></block></then></if>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if>

<cpp:ifndef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifndef<pos:position pos:line="129" pos:column="8"/></cpp:directive> <name pos:line="129" pos:column="9">CURL_DISABLE_SMTP<pos:position pos:line="129" pos:column="26"/></name></cpp:ifndef>
      <if pos:line="130" pos:column="7">if<condition pos:line="130" pos:column="9">(<expr><name><name pos:line="130" pos:column="10">conn<pos:position pos:line="130" pos:column="14"/></name><operator pos:line="130" pos:column="14">-&gt;<pos:position pos:line="130" pos:column="19"/></operator><name pos:line="130" pos:column="16">handler<pos:position pos:line="130" pos:column="23"/></name><operator pos:line="130" pos:column="23">-&gt;<pos:position pos:line="130" pos:column="28"/></operator><name pos:line="130" pos:column="25">protocol<pos:position pos:line="130" pos:column="33"/></name></name> <operator pos:line="130" pos:column="34">&amp;<pos:position pos:line="130" pos:column="39"/></operator> <name pos:line="130" pos:column="36">PROTO_FAMILY_SMTP<pos:position pos:line="130" pos:column="53"/></name></expr>)<pos:position pos:line="130" pos:column="54"/></condition><then pos:line="130" pos:column="54"> <block pos:line="130" pos:column="55">{
        <expr_stmt><expr><name pos:line="131" pos:column="9">result<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <call><name pos:line="131" pos:column="18">Curl_smtp_escape_eob<pos:position pos:line="131" pos:column="38"/></name><argument_list pos:line="131" pos:column="38">(<argument><expr><name pos:line="131" pos:column="39">conn<pos:position pos:line="131" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="45">nread<pos:position pos:line="131" pos:column="50"/></name></expr></argument>)<pos:position pos:line="131" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt>
        <if pos:line="132" pos:column="9">if<condition pos:line="132" pos:column="11">(<expr><name pos:line="132" pos:column="12">result<pos:position pos:line="132" pos:column="18"/></name></expr>)<pos:position pos:line="132" pos:column="19"/></condition><then pos:line="132" pos:column="19">
          <block type="pseudo"><return pos:line="133" pos:column="11">return <expr><name pos:line="133" pos:column="18">result<pos:position pos:line="133" pos:column="24"/></name></expr>;<pos:position pos:line="133" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="134" pos:column="8"/></block></then></if>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="135" pos:column="8">/* CURL_DISABLE_SMTP */</comment>
    }<pos:position pos:line="136" pos:column="6"/></block></then> <comment type="block" pos:line="136" pos:column="7">/* if 0 == data-&gt;req.upload_present */</comment>
    <else pos:line="137" pos:column="5">else <block pos:line="137" pos:column="10">{
      <comment type="block" pos:line="138" pos:column="7">/* We have a partial buffer left from a previous "round". Use
         that instead of reading more data */</comment>
    }<pos:position pos:line="140" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="142" pos:column="5">/* write to socket (send away data) */</comment>
    <expr_stmt><expr><name pos:line="143" pos:column="5">result<pos:position pos:line="143" pos:column="11"/></name> <operator pos:line="143" pos:column="12">=<pos:position pos:line="143" pos:column="13"/></operator> <call><name pos:line="143" pos:column="14">Curl_write<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name pos:line="143" pos:column="25">conn<pos:position pos:line="143" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="144" pos:column="25">conn<pos:position pos:line="144" pos:column="29"/></name><operator pos:line="144" pos:column="29">-&gt;<pos:position pos:line="144" pos:column="34"/></operator><name pos:line="144" pos:column="31">writesockfd<pos:position pos:line="144" pos:column="42"/></name></name></expr></argument>,     <comment type="block" pos:line="144" pos:column="48">/* socket to send to */</comment>
                        <argument><expr><name><name pos:line="145" pos:column="25">data<pos:position pos:line="145" pos:column="29"/></name><operator pos:line="145" pos:column="29">-&gt;<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="31">req<pos:position pos:line="145" pos:column="34"/></name><operator pos:line="145" pos:column="34">.<pos:position pos:line="145" pos:column="35"/></operator><name pos:line="145" pos:column="35">upload_fromhere<pos:position pos:line="145" pos:column="50"/></name></name></expr></argument>, <comment type="block" pos:line="145" pos:column="52">/* buffer pointer */</comment>
                        <argument><expr><name><name pos:line="146" pos:column="25">data<pos:position pos:line="146" pos:column="29"/></name><operator pos:line="146" pos:column="29">-&gt;<pos:position pos:line="146" pos:column="34"/></operator><name pos:line="146" pos:column="31">req<pos:position pos:line="146" pos:column="34"/></name><operator pos:line="146" pos:column="34">.<pos:position pos:line="146" pos:column="35"/></operator><name pos:line="146" pos:column="35">upload_present<pos:position pos:line="146" pos:column="49"/></name></name></expr></argument>,  <comment type="block" pos:line="146" pos:column="52">/* buffer size */</comment>
                        <argument><expr><operator pos:line="147" pos:column="25">&amp;<pos:position pos:line="147" pos:column="30"/></operator><name pos:line="147" pos:column="26">bytes_written<pos:position pos:line="147" pos:column="39"/></name></expr></argument>)<pos:position pos:line="147" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>           <comment type="block" pos:line="147" pos:column="52">/* actually sent */</comment>

    <if pos:line="149" pos:column="5">if<condition pos:line="149" pos:column="7">(<expr><name pos:line="149" pos:column="8">result<pos:position pos:line="149" pos:column="14"/></name></expr>)<pos:position pos:line="149" pos:column="15"/></condition><then pos:line="149" pos:column="15">
      <block type="pseudo"><return pos:line="150" pos:column="7">return <expr><name pos:line="150" pos:column="14">result<pos:position pos:line="150" pos:column="20"/></name></expr>;<pos:position pos:line="150" pos:column="21"/></return></block></then></if>

    <if pos:line="152" pos:column="5">if<condition pos:line="152" pos:column="7">(<expr><name><name pos:line="152" pos:column="8">data<pos:position pos:line="152" pos:column="12"/></name><operator pos:line="152" pos:column="12">-&gt;<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="14">set<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">.<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">verbose<pos:position pos:line="152" pos:column="25"/></name></name></expr>)<pos:position pos:line="152" pos:column="26"/></condition><then pos:line="152" pos:column="26">
      <comment type="block" pos:line="153" pos:column="7">/* show the data before we change the pointer upload_fromhere */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="7">Curl_debug<pos:position pos:line="154" pos:column="17"/></name><argument_list pos:line="154" pos:column="17">(<argument><expr><name pos:line="154" pos:column="18">data<pos:position pos:line="154" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="24">CURLINFO_DATA_OUT<pos:position pos:line="154" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="43">data<pos:position pos:line="154" pos:column="47"/></name><operator pos:line="154" pos:column="47">-&gt;<pos:position pos:line="154" pos:column="52"/></operator><name pos:line="154" pos:column="49">req<pos:position pos:line="154" pos:column="52"/></name><operator pos:line="154" pos:column="52">.<pos:position pos:line="154" pos:column="53"/></operator><name pos:line="154" pos:column="53">upload_fromhere<pos:position pos:line="154" pos:column="68"/></name></name></expr></argument>,
                 <argument><expr><operator pos:line="155" pos:column="18">(<pos:position pos:line="155" pos:column="19"/></operator><name pos:line="155" pos:column="19">size_t<pos:position pos:line="155" pos:column="25"/></name><operator pos:line="155" pos:column="25">)<pos:position pos:line="155" pos:column="26"/></operator><name pos:line="155" pos:column="26">bytes_written<pos:position pos:line="155" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="41">conn<pos:position pos:line="155" pos:column="45"/></name></expr></argument>)<pos:position pos:line="155" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="47"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="157" pos:column="5">k<pos:position pos:line="157" pos:column="6"/></name><operator pos:line="157" pos:column="6">-&gt;<pos:position pos:line="157" pos:column="11"/></operator><name pos:line="157" pos:column="8">writebytecount<pos:position pos:line="157" pos:column="22"/></name></name> <operator pos:line="157" pos:column="23">+=<pos:position pos:line="157" pos:column="25"/></operator> <name pos:line="157" pos:column="26">bytes_written<pos:position pos:line="157" pos:column="39"/></name></expr>;<pos:position pos:line="157" pos:column="40"/></expr_stmt>

    <if pos:line="159" pos:column="5">if<condition pos:line="159" pos:column="7">(<expr><name><name pos:line="159" pos:column="8">k<pos:position pos:line="159" pos:column="9"/></name><operator pos:line="159" pos:column="9">-&gt;<pos:position pos:line="159" pos:column="14"/></operator><name pos:line="159" pos:column="11">writebytecount<pos:position pos:line="159" pos:column="25"/></name></name> <operator pos:line="159" pos:column="26">==<pos:position pos:line="159" pos:column="28"/></operator> <name><name pos:line="159" pos:column="29">data<pos:position pos:line="159" pos:column="33"/></name><operator pos:line="159" pos:column="33">-&gt;<pos:position pos:line="159" pos:column="38"/></operator><name pos:line="159" pos:column="35">state<pos:position pos:line="159" pos:column="40"/></name><operator pos:line="159" pos:column="40">.<pos:position pos:line="159" pos:column="41"/></operator><name pos:line="159" pos:column="41">infilesize<pos:position pos:line="159" pos:column="51"/></name></name></expr>)<pos:position pos:line="159" pos:column="52"/></condition><then pos:line="159" pos:column="52"> <block pos:line="159" pos:column="53">{
      <comment type="block" pos:line="160" pos:column="7">/* we have sent all data we were supposed to */</comment>
      <expr_stmt><expr><name><name pos:line="161" pos:column="7">k<pos:position pos:line="161" pos:column="8"/></name><operator pos:line="161" pos:column="8">-&gt;<pos:position pos:line="161" pos:column="13"/></operator><name pos:line="161" pos:column="10">upload_done<pos:position pos:line="161" pos:column="21"/></name></name> <operator pos:line="161" pos:column="22">=<pos:position pos:line="161" pos:column="23"/></operator> <name pos:line="161" pos:column="24">TRUE<pos:position pos:line="161" pos:column="28"/></name></expr>;<pos:position pos:line="161" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="162" pos:column="7">infof<pos:position pos:line="162" pos:column="12"/></name><argument_list pos:line="162" pos:column="12">(<argument><expr><name pos:line="162" pos:column="13">data<pos:position pos:line="162" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="19">"We are completely uploaded and fine\n"<pos:position pos:line="162" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>

    <if pos:line="165" pos:column="5">if<condition pos:line="165" pos:column="7">(<expr><name><name pos:line="165" pos:column="8">data<pos:position pos:line="165" pos:column="12"/></name><operator pos:line="165" pos:column="12">-&gt;<pos:position pos:line="165" pos:column="17"/></operator><name pos:line="165" pos:column="14">req<pos:position pos:line="165" pos:column="17"/></name><operator pos:line="165" pos:column="17">.<pos:position pos:line="165" pos:column="18"/></operator><name pos:line="165" pos:column="18">upload_present<pos:position pos:line="165" pos:column="32"/></name></name> <operator pos:line="165" pos:column="33">!=<pos:position pos:line="165" pos:column="35"/></operator> <name pos:line="165" pos:column="36">bytes_written<pos:position pos:line="165" pos:column="49"/></name></expr>)<pos:position pos:line="165" pos:column="50"/></condition><then pos:line="165" pos:column="50"> <block pos:line="165" pos:column="51">{
      <comment type="block" pos:line="166" pos:column="7">/* we only wrote a part of the buffer (if anything), deal with it! */</comment>

      <comment type="block" pos:line="168" pos:column="7">/* store the amount of bytes left in the buffer to write */</comment>
      <expr_stmt><expr><name><name pos:line="169" pos:column="7">data<pos:position pos:line="169" pos:column="11"/></name><operator pos:line="169" pos:column="11">-&gt;<pos:position pos:line="169" pos:column="16"/></operator><name pos:line="169" pos:column="13">req<pos:position pos:line="169" pos:column="16"/></name><operator pos:line="169" pos:column="16">.<pos:position pos:line="169" pos:column="17"/></operator><name pos:line="169" pos:column="17">upload_present<pos:position pos:line="169" pos:column="31"/></name></name> <operator pos:line="169" pos:column="32">-=<pos:position pos:line="169" pos:column="34"/></operator> <name pos:line="169" pos:column="35">bytes_written<pos:position pos:line="169" pos:column="48"/></name></expr>;<pos:position pos:line="169" pos:column="49"/></expr_stmt>

      <comment type="block" pos:line="171" pos:column="7">/* advance the pointer where to find the buffer when the next send
         is to happen */</comment>
      <expr_stmt><expr><name><name pos:line="173" pos:column="7">data<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">-&gt;<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="13">req<pos:position pos:line="173" pos:column="16"/></name><operator pos:line="173" pos:column="16">.<pos:position pos:line="173" pos:column="17"/></operator><name pos:line="173" pos:column="17">upload_fromhere<pos:position pos:line="173" pos:column="32"/></name></name> <operator pos:line="173" pos:column="33">+=<pos:position pos:line="173" pos:column="35"/></operator> <name pos:line="173" pos:column="36">bytes_written<pos:position pos:line="173" pos:column="49"/></name></expr>;<pos:position pos:line="173" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="174" pos:column="6"/></block></then>
    <else pos:line="175" pos:column="5">else <block pos:line="175" pos:column="10">{
      <comment type="block" pos:line="176" pos:column="7">/* we've uploaded that buffer now */</comment>
      <expr_stmt><expr><name><name pos:line="177" pos:column="7">data<pos:position pos:line="177" pos:column="11"/></name><operator pos:line="177" pos:column="11">-&gt;<pos:position pos:line="177" pos:column="16"/></operator><name pos:line="177" pos:column="13">req<pos:position pos:line="177" pos:column="16"/></name><operator pos:line="177" pos:column="16">.<pos:position pos:line="177" pos:column="17"/></operator><name pos:line="177" pos:column="17">upload_fromhere<pos:position pos:line="177" pos:column="32"/></name></name> <operator pos:line="177" pos:column="33">=<pos:position pos:line="177" pos:column="34"/></operator> <name><name pos:line="177" pos:column="35">k<pos:position pos:line="177" pos:column="36"/></name><operator pos:line="177" pos:column="36">-&gt;<pos:position pos:line="177" pos:column="41"/></operator><name pos:line="177" pos:column="38">uploadbuf<pos:position pos:line="177" pos:column="47"/></name></name></expr>;<pos:position pos:line="177" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="178" pos:column="7">data<pos:position pos:line="178" pos:column="11"/></name><operator pos:line="178" pos:column="11">-&gt;<pos:position pos:line="178" pos:column="16"/></operator><name pos:line="178" pos:column="13">req<pos:position pos:line="178" pos:column="16"/></name><operator pos:line="178" pos:column="16">.<pos:position pos:line="178" pos:column="17"/></operator><name pos:line="178" pos:column="17">upload_present<pos:position pos:line="178" pos:column="31"/></name></name> <operator pos:line="178" pos:column="32">=<pos:position pos:line="178" pos:column="33"/></operator> <literal type="number" pos:line="178" pos:column="34">0<pos:position pos:line="178" pos:column="35"/></literal></expr>;<pos:position pos:line="178" pos:column="36"/></expr_stmt> <comment type="block" pos:line="178" pos:column="37">/* no more bytes left */</comment>

      <if pos:line="180" pos:column="7">if<condition pos:line="180" pos:column="9">(<expr><name><name pos:line="180" pos:column="10">k<pos:position pos:line="180" pos:column="11"/></name><operator pos:line="180" pos:column="11">-&gt;<pos:position pos:line="180" pos:column="16"/></operator><name pos:line="180" pos:column="13">upload_done<pos:position pos:line="180" pos:column="24"/></name></name></expr>)<pos:position pos:line="180" pos:column="25"/></condition><then pos:line="180" pos:column="25"> <block pos:line="180" pos:column="26">{
        <expr_stmt><expr><name pos:line="181" pos:column="9">result<pos:position pos:line="181" pos:column="15"/></name> <operator pos:line="181" pos:column="16">=<pos:position pos:line="181" pos:column="17"/></operator> <call><name pos:line="181" pos:column="18">done_sending<pos:position pos:line="181" pos:column="30"/></name><argument_list pos:line="181" pos:column="30">(<argument><expr><name pos:line="181" pos:column="31">conn<pos:position pos:line="181" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="37">k<pos:position pos:line="181" pos:column="38"/></name></expr></argument>)<pos:position pos:line="181" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="40"/></expr_stmt>
        <if pos:line="182" pos:column="9">if<condition pos:line="182" pos:column="11">(<expr><name pos:line="182" pos:column="12">result<pos:position pos:line="182" pos:column="18"/></name></expr>)<pos:position pos:line="182" pos:column="19"/></condition><then pos:line="182" pos:column="19">
          <block type="pseudo"><return pos:line="183" pos:column="11">return <expr><name pos:line="183" pos:column="18">result<pos:position pos:line="183" pos:column="24"/></name></expr>;<pos:position pos:line="183" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="184" pos:column="8"/></block></then></if>
    }<pos:position pos:line="185" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="187" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="187" pos:column="30"/></name><argument_list pos:line="187" pos:column="30">(<argument><expr><name pos:line="187" pos:column="31">data<pos:position pos:line="187" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="37">k<pos:position pos:line="187" pos:column="38"/></name><operator pos:line="187" pos:column="38">-&gt;<pos:position pos:line="187" pos:column="43"/></operator><name pos:line="187" pos:column="40">writebytecount<pos:position pos:line="187" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="56"/></expr_stmt>

  }<pos:position pos:line="189" pos:column="4"/></block> WHILE_FALSE; <comment type="block" pos:line="189" pos:column="18">/* just to break out from! */</comment>

  return CURLE_OK;
}<pos:position pos:line="192" pos:column="2"/></do>

<comment type="block" pos:line="194" pos:column="1">/*
 * Curl_readwrite() is the low-level function to be called when data is to
 * be read and written to/from the connection.
 *
 * return '*comeback' TRUE if we didn't properly drain the socket so this
 * function should get called again without select() or similar in between!
 */</comment>
<function><type><name pos:line="201" pos:column="1">CURLcode<pos:position pos:line="201" pos:column="9"/></name></type> <name pos:line="201" pos:column="10">Curl_readwrite<pos:position pos:line="201" pos:column="24"/></name><parameter_list pos:line="201" pos:column="24">(<parameter><decl><type><name><name pos:line="201" pos:column="25">struct<pos:position pos:line="201" pos:column="31"/></name> <name pos:line="201" pos:column="32">connectdata<pos:position pos:line="201" pos:column="43"/></name></name> <modifier pos:line="201" pos:column="44">*<pos:position pos:line="201" pos:column="45"/></modifier></type><name pos:line="201" pos:column="45">conn<pos:position pos:line="201" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><name><name pos:line="202" pos:column="25">struct<pos:position pos:line="202" pos:column="31"/></name> <name pos:line="202" pos:column="32">Curl_easy<pos:position pos:line="202" pos:column="41"/></name></name> <modifier pos:line="202" pos:column="42">*<pos:position pos:line="202" pos:column="43"/></modifier></type><name pos:line="202" pos:column="43">data<pos:position pos:line="202" pos:column="47"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="203" pos:column="25">bool<pos:position pos:line="203" pos:column="29"/></name> <modifier pos:line="203" pos:column="30">*<pos:position pos:line="203" pos:column="31"/></modifier></type><name pos:line="203" pos:column="31">done<pos:position pos:line="203" pos:column="35"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="204" pos:column="25">bool<pos:position pos:line="204" pos:column="29"/></name> <modifier pos:line="204" pos:column="30">*<pos:position pos:line="204" pos:column="31"/></modifier></type><name pos:line="204" pos:column="31">comeback<pos:position pos:line="204" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="204" pos:column="40"/></parameter_list>
<block pos:line="205" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="206" pos:column="3">struct<pos:position pos:line="206" pos:column="9"/></name> <name pos:line="206" pos:column="10">SingleRequest<pos:position pos:line="206" pos:column="23"/></name></name> <modifier pos:line="206" pos:column="24">*<pos:position pos:line="206" pos:column="25"/></modifier></type><name pos:line="206" pos:column="25">k<pos:position pos:line="206" pos:column="26"/></name> <init pos:line="206" pos:column="27">= <expr><operator pos:line="206" pos:column="29">&amp;<pos:position pos:line="206" pos:column="34"/></operator><name><name pos:line="206" pos:column="30">data<pos:position pos:line="206" pos:column="34"/></name><operator pos:line="206" pos:column="34">-&gt;<pos:position pos:line="206" pos:column="39"/></operator><name pos:line="206" pos:column="36">req<pos:position pos:line="206" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="206" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="207" pos:column="3">CURLcode<pos:position pos:line="207" pos:column="11"/></name></type> <name pos:line="207" pos:column="12">result<pos:position pos:line="207" pos:column="18"/></name></decl>;<pos:position pos:line="207" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="208" pos:column="3">int<pos:position pos:line="208" pos:column="6"/></name></type> <name pos:line="208" pos:column="7">didwhat<pos:position pos:line="208" pos:column="14"/></name><init pos:line="208" pos:column="14">=<expr><literal type="number" pos:line="208" pos:column="15">0<pos:position pos:line="208" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="208" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="210" pos:column="3">curl_socket_t<pos:position pos:line="210" pos:column="16"/></name></type> <name pos:line="210" pos:column="17">fd_read<pos:position pos:line="210" pos:column="24"/></name></decl>;<pos:position pos:line="210" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="211" pos:column="3">curl_socket_t<pos:position pos:line="211" pos:column="16"/></name></type> <name pos:line="211" pos:column="17">fd_write<pos:position pos:line="211" pos:column="25"/></name></decl>;<pos:position pos:line="211" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="212" pos:column="3">int<pos:position pos:line="212" pos:column="6"/></name></type> <name pos:line="212" pos:column="7">select_res<pos:position pos:line="212" pos:column="17"/></name> <init pos:line="212" pos:column="18">= <expr><name><name pos:line="212" pos:column="20">conn<pos:position pos:line="212" pos:column="24"/></name><operator pos:line="212" pos:column="24">-&gt;<pos:position pos:line="212" pos:column="29"/></operator><name pos:line="212" pos:column="26">cselect_bits<pos:position pos:line="212" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="212" pos:column="39"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="214" pos:column="3">conn<pos:position pos:line="214" pos:column="7"/></name><operator pos:line="214" pos:column="7">-&gt;<pos:position pos:line="214" pos:column="12"/></operator><name pos:line="214" pos:column="9">cselect_bits<pos:position pos:line="214" pos:column="21"/></name></name> <operator pos:line="214" pos:column="22">=<pos:position pos:line="214" pos:column="23"/></operator> <literal type="number" pos:line="214" pos:column="24">0<pos:position pos:line="214" pos:column="25"/></literal></expr>;<pos:position pos:line="214" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="216" pos:column="3">/* only use the proper socket if the *_HOLD bit is not set simultaneously as
     then we are in rate limiting state in that transfer direction */</comment>

  <if pos:line="219" pos:column="3">if<condition pos:line="219" pos:column="5">(<expr><operator pos:line="219" pos:column="6">(<pos:position pos:line="219" pos:column="7"/></operator><name><name pos:line="219" pos:column="7">k<pos:position pos:line="219" pos:column="8"/></name><operator pos:line="219" pos:column="8">-&gt;<pos:position pos:line="219" pos:column="13"/></operator><name pos:line="219" pos:column="10">keepon<pos:position pos:line="219" pos:column="16"/></name></name> <operator pos:line="219" pos:column="17">&amp;<pos:position pos:line="219" pos:column="22"/></operator> <name pos:line="219" pos:column="19">KEEP_RECVBITS<pos:position pos:line="219" pos:column="32"/></name><operator pos:line="219" pos:column="32">)<pos:position pos:line="219" pos:column="33"/></operator> <operator pos:line="219" pos:column="34">==<pos:position pos:line="219" pos:column="36"/></operator> <name pos:line="219" pos:column="37">KEEP_RECV<pos:position pos:line="219" pos:column="46"/></name></expr>)<pos:position pos:line="219" pos:column="47"/></condition><then pos:line="219" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="220" pos:column="5">fd_read<pos:position pos:line="220" pos:column="12"/></name> <operator pos:line="220" pos:column="13">=<pos:position pos:line="220" pos:column="14"/></operator> <name><name pos:line="220" pos:column="15">conn<pos:position pos:line="220" pos:column="19"/></name><operator pos:line="220" pos:column="19">-&gt;<pos:position pos:line="220" pos:column="24"/></operator><name pos:line="220" pos:column="21">sockfd<pos:position pos:line="220" pos:column="27"/></name></name></expr>;<pos:position pos:line="220" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="221" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="222" pos:column="5">fd_read<pos:position pos:line="222" pos:column="12"/></name> <operator pos:line="222" pos:column="13">=<pos:position pos:line="222" pos:column="14"/></operator> <name pos:line="222" pos:column="15">CURL_SOCKET_BAD<pos:position pos:line="222" pos:column="30"/></name></expr>;<pos:position pos:line="222" pos:column="31"/></expr_stmt></block></else></if>

  <if pos:line="224" pos:column="3">if<condition pos:line="224" pos:column="5">(<expr><operator pos:line="224" pos:column="6">(<pos:position pos:line="224" pos:column="7"/></operator><name><name pos:line="224" pos:column="7">k<pos:position pos:line="224" pos:column="8"/></name><operator pos:line="224" pos:column="8">-&gt;<pos:position pos:line="224" pos:column="13"/></operator><name pos:line="224" pos:column="10">keepon<pos:position pos:line="224" pos:column="16"/></name></name> <operator pos:line="224" pos:column="17">&amp;<pos:position pos:line="224" pos:column="22"/></operator> <name pos:line="224" pos:column="19">KEEP_SENDBITS<pos:position pos:line="224" pos:column="32"/></name><operator pos:line="224" pos:column="32">)<pos:position pos:line="224" pos:column="33"/></operator> <operator pos:line="224" pos:column="34">==<pos:position pos:line="224" pos:column="36"/></operator> <name pos:line="224" pos:column="37">KEEP_SEND<pos:position pos:line="224" pos:column="46"/></name></expr>)<pos:position pos:line="224" pos:column="47"/></condition><then pos:line="224" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="225" pos:column="5">fd_write<pos:position pos:line="225" pos:column="13"/></name> <operator pos:line="225" pos:column="14">=<pos:position pos:line="225" pos:column="15"/></operator> <name><name pos:line="225" pos:column="16">conn<pos:position pos:line="225" pos:column="20"/></name><operator pos:line="225" pos:column="20">-&gt;<pos:position pos:line="225" pos:column="25"/></operator><name pos:line="225" pos:column="22">writesockfd<pos:position pos:line="225" pos:column="33"/></name></name></expr>;<pos:position pos:line="225" pos:column="34"/></expr_stmt></block></then>
  <else pos:line="226" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="227" pos:column="5">fd_write<pos:position pos:line="227" pos:column="13"/></name> <operator pos:line="227" pos:column="14">=<pos:position pos:line="227" pos:column="15"/></operator> <name pos:line="227" pos:column="16">CURL_SOCKET_BAD<pos:position pos:line="227" pos:column="31"/></name></expr>;<pos:position pos:line="227" pos:column="32"/></expr_stmt></block></else></if>

  <if pos:line="229" pos:column="3">if<condition pos:line="229" pos:column="5">(<expr><name><name pos:line="229" pos:column="6">conn<pos:position pos:line="229" pos:column="10"/></name><operator pos:line="229" pos:column="10">-&gt;<pos:position pos:line="229" pos:column="15"/></operator><name pos:line="229" pos:column="12">data<pos:position pos:line="229" pos:column="16"/></name><operator pos:line="229" pos:column="16">-&gt;<pos:position pos:line="229" pos:column="21"/></operator><name pos:line="229" pos:column="18">state<pos:position pos:line="229" pos:column="23"/></name><operator pos:line="229" pos:column="23">.<pos:position pos:line="229" pos:column="24"/></operator><name pos:line="229" pos:column="24">drain<pos:position pos:line="229" pos:column="29"/></name></name></expr>)<pos:position pos:line="229" pos:column="30"/></condition><then pos:line="229" pos:column="30"> <block pos:line="229" pos:column="31">{
    <expr_stmt><expr><name pos:line="230" pos:column="5">select_res<pos:position pos:line="230" pos:column="15"/></name> <operator pos:line="230" pos:column="16">|=<pos:position pos:line="230" pos:column="18"/></operator> <name pos:line="230" pos:column="19">CURL_CSELECT_IN<pos:position pos:line="230" pos:column="34"/></name></expr>;<pos:position pos:line="230" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="231" pos:column="5">DEBUGF<pos:position pos:line="231" pos:column="11"/></name><argument_list pos:line="231" pos:column="11">(<argument><expr><call><name pos:line="231" pos:column="12">infof<pos:position pos:line="231" pos:column="17"/></name><argument_list pos:line="231" pos:column="17">(<argument><expr><name pos:line="231" pos:column="18">data<pos:position pos:line="231" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="24">"Curl_readwrite: forcibly told to drain data\n"<pos:position pos:line="231" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="231" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="232" pos:column="4"/></block></then></if>

  <if pos:line="234" pos:column="3">if<condition pos:line="234" pos:column="5">(<expr><operator pos:line="234" pos:column="6">!<pos:position pos:line="234" pos:column="7"/></operator><name pos:line="234" pos:column="7">select_res<pos:position pos:line="234" pos:column="17"/></name></expr>)<pos:position pos:line="234" pos:column="18"/></condition><then pos:line="234" pos:column="18"> <comment type="block" pos:line="234" pos:column="19">/* Call for select()/poll() only, if read/write/error
                     status is not known. */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="236" pos:column="5">select_res<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">=<pos:position pos:line="236" pos:column="17"/></operator> <call><name pos:line="236" pos:column="18">Curl_socket_check<pos:position pos:line="236" pos:column="35"/></name><argument_list pos:line="236" pos:column="35">(<argument><expr><name pos:line="236" pos:column="36">fd_read<pos:position pos:line="236" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="45">CURL_SOCKET_BAD<pos:position pos:line="236" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="62">fd_write<pos:position pos:line="236" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="236" pos:column="72">0<pos:position pos:line="236" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="75"/></expr_stmt></block></then></if>

  <if pos:line="238" pos:column="3">if<condition pos:line="238" pos:column="5">(<expr><name pos:line="238" pos:column="6">select_res<pos:position pos:line="238" pos:column="16"/></name> <operator pos:line="238" pos:column="17">==<pos:position pos:line="238" pos:column="19"/></operator> <name pos:line="238" pos:column="20">CURL_CSELECT_ERR<pos:position pos:line="238" pos:column="36"/></name></expr>)<pos:position pos:line="238" pos:column="37"/></condition><then pos:line="238" pos:column="37"> <block pos:line="238" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="239" pos:column="5">failf<pos:position pos:line="239" pos:column="10"/></name><argument_list pos:line="239" pos:column="10">(<argument><expr><name pos:line="239" pos:column="11">data<pos:position pos:line="239" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="17">"select/poll returned error"<pos:position pos:line="239" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="47"/></expr_stmt>
    <return pos:line="240" pos:column="5">return <expr><name pos:line="240" pos:column="12">CURLE_SEND_ERROR<pos:position pos:line="240" pos:column="28"/></name></expr>;<pos:position pos:line="240" pos:column="29"/></return>
  }<pos:position pos:line="241" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="243" pos:column="3">/* We go ahead and do a read if we have a readable socket or if
     the stream was rewound (in which case we have data in a
     buffer) */</comment>
  <if pos:line="246" pos:column="3">if<condition pos:line="246" pos:column="5">(<expr><operator pos:line="246" pos:column="6">(<pos:position pos:line="246" pos:column="7"/></operator><name><name pos:line="246" pos:column="7">k<pos:position pos:line="246" pos:column="8"/></name><operator pos:line="246" pos:column="8">-&gt;<pos:position pos:line="246" pos:column="13"/></operator><name pos:line="246" pos:column="10">keepon<pos:position pos:line="246" pos:column="16"/></name></name> <operator pos:line="246" pos:column="17">&amp;<pos:position pos:line="246" pos:column="22"/></operator> <name pos:line="246" pos:column="19">KEEP_RECV<pos:position pos:line="246" pos:column="28"/></name><operator pos:line="246" pos:column="28">)<pos:position pos:line="246" pos:column="29"/></operator> <operator pos:line="246" pos:column="30">&amp;&amp;<pos:position pos:line="246" pos:column="40"/></operator>
     <operator pos:line="247" pos:column="6">(<pos:position pos:line="247" pos:column="7"/></operator><operator pos:line="247" pos:column="7">(<pos:position pos:line="247" pos:column="8"/></operator><name pos:line="247" pos:column="8">select_res<pos:position pos:line="247" pos:column="18"/></name> <operator pos:line="247" pos:column="19">&amp;<pos:position pos:line="247" pos:column="24"/></operator> <name pos:line="247" pos:column="21">CURL_CSELECT_IN<pos:position pos:line="247" pos:column="36"/></name><operator pos:line="247" pos:column="36">)<pos:position pos:line="247" pos:column="37"/></operator> <operator pos:line="247" pos:column="38">||<pos:position pos:line="247" pos:column="40"/></operator> <name><name pos:line="247" pos:column="41">conn<pos:position pos:line="247" pos:column="45"/></name><operator pos:line="247" pos:column="45">-&gt;<pos:position pos:line="247" pos:column="50"/></operator><name pos:line="247" pos:column="47">bits<pos:position pos:line="247" pos:column="51"/></name><operator pos:line="247" pos:column="51">.<pos:position pos:line="247" pos:column="52"/></operator><name pos:line="247" pos:column="52">stream_was_rewound<pos:position pos:line="247" pos:column="70"/></name></name><operator pos:line="247" pos:column="70">)<pos:position pos:line="247" pos:column="71"/></operator></expr>)<pos:position pos:line="247" pos:column="72"/></condition><then pos:line="247" pos:column="72"> <block pos:line="247" pos:column="73">{

    <expr_stmt><expr><name pos:line="249" pos:column="5">result<pos:position pos:line="249" pos:column="11"/></name> <operator pos:line="249" pos:column="12">=<pos:position pos:line="249" pos:column="13"/></operator> <call><name pos:line="249" pos:column="14">readwrite_data<pos:position pos:line="249" pos:column="28"/></name><argument_list pos:line="249" pos:column="28">(<argument><expr><name pos:line="249" pos:column="29">data<pos:position pos:line="249" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="35">conn<pos:position pos:line="249" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="41">k<pos:position pos:line="249" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="249" pos:column="44">&amp;<pos:position pos:line="249" pos:column="49"/></operator><name pos:line="249" pos:column="45">didwhat<pos:position pos:line="249" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="54">done<pos:position pos:line="249" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="60">comeback<pos:position pos:line="249" pos:column="68"/></name></expr></argument>)<pos:position pos:line="249" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="70"/></expr_stmt>
    <if pos:line="250" pos:column="5">if<condition pos:line="250" pos:column="7">(<expr><name pos:line="250" pos:column="8">result<pos:position pos:line="250" pos:column="14"/></name> <operator pos:line="250" pos:column="15">||<pos:position pos:line="250" pos:column="17"/></operator> <operator pos:line="250" pos:column="18">*<pos:position pos:line="250" pos:column="19"/></operator><name pos:line="250" pos:column="19">done<pos:position pos:line="250" pos:column="23"/></name></expr>)<pos:position pos:line="250" pos:column="24"/></condition><then pos:line="250" pos:column="24">
      <block type="pseudo"><return pos:line="251" pos:column="7">return <expr><name pos:line="251" pos:column="14">result<pos:position pos:line="251" pos:column="20"/></name></expr>;<pos:position pos:line="251" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="252" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="254" pos:column="3">/* If we still have writing to do, we check if we have a writable socket. */</comment>
  <if pos:line="255" pos:column="3">if<condition pos:line="255" pos:column="5">(<expr><operator pos:line="255" pos:column="6">(<pos:position pos:line="255" pos:column="7"/></operator><name><name pos:line="255" pos:column="7">k<pos:position pos:line="255" pos:column="8"/></name><operator pos:line="255" pos:column="8">-&gt;<pos:position pos:line="255" pos:column="13"/></operator><name pos:line="255" pos:column="10">keepon<pos:position pos:line="255" pos:column="16"/></name></name> <operator pos:line="255" pos:column="17">&amp;<pos:position pos:line="255" pos:column="22"/></operator> <name pos:line="255" pos:column="19">KEEP_SEND<pos:position pos:line="255" pos:column="28"/></name><operator pos:line="255" pos:column="28">)<pos:position pos:line="255" pos:column="29"/></operator> <operator pos:line="255" pos:column="30">&amp;&amp;<pos:position pos:line="255" pos:column="40"/></operator> <operator pos:line="255" pos:column="33">(<pos:position pos:line="255" pos:column="34"/></operator><name pos:line="255" pos:column="34">select_res<pos:position pos:line="255" pos:column="44"/></name> <operator pos:line="255" pos:column="45">&amp;<pos:position pos:line="255" pos:column="50"/></operator> <name pos:line="255" pos:column="47">CURL_CSELECT_OUT<pos:position pos:line="255" pos:column="63"/></name><operator pos:line="255" pos:column="63">)<pos:position pos:line="255" pos:column="64"/></operator></expr>)<pos:position pos:line="255" pos:column="65"/></condition><then pos:line="255" pos:column="65"> <block pos:line="255" pos:column="66">{
    <comment type="block" pos:line="256" pos:column="5">/* write */</comment>

    <expr_stmt><expr><name pos:line="258" pos:column="5">result<pos:position pos:line="258" pos:column="11"/></name> <operator pos:line="258" pos:column="12">=<pos:position pos:line="258" pos:column="13"/></operator> <call><name pos:line="258" pos:column="14">readwrite_upload<pos:position pos:line="258" pos:column="30"/></name><argument_list pos:line="258" pos:column="30">(<argument><expr><name pos:line="258" pos:column="31">data<pos:position pos:line="258" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="37">conn<pos:position pos:line="258" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="43">k<pos:position pos:line="258" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="258" pos:column="46">&amp;<pos:position pos:line="258" pos:column="51"/></operator><name pos:line="258" pos:column="47">didwhat<pos:position pos:line="258" pos:column="54"/></name></expr></argument>)<pos:position pos:line="258" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="56"/></expr_stmt>
    <if pos:line="259" pos:column="5">if<condition pos:line="259" pos:column="7">(<expr><name pos:line="259" pos:column="8">result<pos:position pos:line="259" pos:column="14"/></name></expr>)<pos:position pos:line="259" pos:column="15"/></condition><then pos:line="259" pos:column="15">
      <block type="pseudo"><return pos:line="260" pos:column="7">return <expr><name pos:line="260" pos:column="14">result<pos:position pos:line="260" pos:column="20"/></name></expr>;<pos:position pos:line="260" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="261" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="263" pos:column="3">k<pos:position pos:line="263" pos:column="4"/></name><operator pos:line="263" pos:column="4">-&gt;<pos:position pos:line="263" pos:column="9"/></operator><name pos:line="263" pos:column="6">now<pos:position pos:line="263" pos:column="9"/></name></name> <operator pos:line="263" pos:column="10">=<pos:position pos:line="263" pos:column="11"/></operator> <call><name pos:line="263" pos:column="12">Curl_tvnow<pos:position pos:line="263" pos:column="22"/></name><argument_list pos:line="263" pos:column="22">()<pos:position pos:line="263" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="25"/></expr_stmt>
  <if pos:line="264" pos:column="3">if<condition pos:line="264" pos:column="5">(<expr><name pos:line="264" pos:column="6">didwhat<pos:position pos:line="264" pos:column="13"/></name></expr>)<pos:position pos:line="264" pos:column="14"/></condition><then pos:line="264" pos:column="14"> <block pos:line="264" pos:column="15">{
    <comment type="block" pos:line="265" pos:column="5">/* Update read/write counters */</comment>
    <if pos:line="266" pos:column="5">if<condition pos:line="266" pos:column="7">(<expr><name><name pos:line="266" pos:column="8">k<pos:position pos:line="266" pos:column="9"/></name><operator pos:line="266" pos:column="9">-&gt;<pos:position pos:line="266" pos:column="14"/></operator><name pos:line="266" pos:column="11">bytecountp<pos:position pos:line="266" pos:column="21"/></name></name></expr>)<pos:position pos:line="266" pos:column="22"/></condition><then pos:line="266" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="267" pos:column="7">*<pos:position pos:line="267" pos:column="8"/></operator><name><name pos:line="267" pos:column="8">k<pos:position pos:line="267" pos:column="9"/></name><operator pos:line="267" pos:column="9">-&gt;<pos:position pos:line="267" pos:column="14"/></operator><name pos:line="267" pos:column="11">bytecountp<pos:position pos:line="267" pos:column="21"/></name></name> <operator pos:line="267" pos:column="22">=<pos:position pos:line="267" pos:column="23"/></operator> <name><name pos:line="267" pos:column="24">k<pos:position pos:line="267" pos:column="25"/></name><operator pos:line="267" pos:column="25">-&gt;<pos:position pos:line="267" pos:column="30"/></operator><name pos:line="267" pos:column="27">bytecount<pos:position pos:line="267" pos:column="36"/></name></name></expr>;<pos:position pos:line="267" pos:column="37"/></expr_stmt></block></then></if> <comment type="block" pos:line="267" pos:column="38">/* read count */</comment>
    <if pos:line="268" pos:column="5">if<condition pos:line="268" pos:column="7">(<expr><name><name pos:line="268" pos:column="8">k<pos:position pos:line="268" pos:column="9"/></name><operator pos:line="268" pos:column="9">-&gt;<pos:position pos:line="268" pos:column="14"/></operator><name pos:line="268" pos:column="11">writebytecountp<pos:position pos:line="268" pos:column="26"/></name></name></expr>)<pos:position pos:line="268" pos:column="27"/></condition><then pos:line="268" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="269" pos:column="7">*<pos:position pos:line="269" pos:column="8"/></operator><name><name pos:line="269" pos:column="8">k<pos:position pos:line="269" pos:column="9"/></name><operator pos:line="269" pos:column="9">-&gt;<pos:position pos:line="269" pos:column="14"/></operator><name pos:line="269" pos:column="11">writebytecountp<pos:position pos:line="269" pos:column="26"/></name></name> <operator pos:line="269" pos:column="27">=<pos:position pos:line="269" pos:column="28"/></operator> <name><name pos:line="269" pos:column="29">k<pos:position pos:line="269" pos:column="30"/></name><operator pos:line="269" pos:column="30">-&gt;<pos:position pos:line="269" pos:column="35"/></operator><name pos:line="269" pos:column="32">writebytecount<pos:position pos:line="269" pos:column="46"/></name></name></expr>;<pos:position pos:line="269" pos:column="47"/></expr_stmt></block></then></if> <comment type="block" pos:line="269" pos:column="48">/* write count */</comment>
  }<pos:position pos:line="270" pos:column="4"/></block></then>
  <else pos:line="271" pos:column="3">else <block pos:line="271" pos:column="8">{
    <comment type="block" pos:line="272" pos:column="5">/* no read no write, this is a timeout? */</comment>
    <if pos:line="273" pos:column="5">if<condition pos:line="273" pos:column="7">(<expr><name><name pos:line="273" pos:column="8">k<pos:position pos:line="273" pos:column="9"/></name><operator pos:line="273" pos:column="9">-&gt;<pos:position pos:line="273" pos:column="14"/></operator><name pos:line="273" pos:column="11">exp100<pos:position pos:line="273" pos:column="17"/></name></name> <operator pos:line="273" pos:column="18">==<pos:position pos:line="273" pos:column="20"/></operator> <name pos:line="273" pos:column="21">EXP100_AWAITING_CONTINUE<pos:position pos:line="273" pos:column="45"/></name></expr>)<pos:position pos:line="273" pos:column="46"/></condition><then pos:line="273" pos:column="46"> <block pos:line="273" pos:column="47">{
      <comment type="block" pos:line="274" pos:column="7">/* This should allow some time for the header to arrive, but only a
         very short time as otherwise it'll be too much wasted time too
         often. */</comment>

      <comment type="block" pos:line="278" pos:column="7">/* Quoting RFC2616, section "8.2.3 Use of the 100 (Continue) Status":

         Therefore, when a client sends this header field to an origin server
         (possibly via a proxy) from which it has never seen a 100 (Continue)
         status, the client SHOULD NOT wait for an indefinite period before
         sending the request body.

      */</comment>

      <decl_stmt><decl><type><name pos:line="287" pos:column="7">long<pos:position pos:line="287" pos:column="11"/></name></type> <name pos:line="287" pos:column="12">ms<pos:position pos:line="287" pos:column="14"/></name> <init pos:line="287" pos:column="15">= <expr><call><name pos:line="287" pos:column="17">Curl_tvdiff<pos:position pos:line="287" pos:column="28"/></name><argument_list pos:line="287" pos:column="28">(<argument><expr><name><name pos:line="287" pos:column="29">k<pos:position pos:line="287" pos:column="30"/></name><operator pos:line="287" pos:column="30">-&gt;<pos:position pos:line="287" pos:column="35"/></operator><name pos:line="287" pos:column="32">now<pos:position pos:line="287" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="37">k<pos:position pos:line="287" pos:column="38"/></name><operator pos:line="287" pos:column="38">-&gt;<pos:position pos:line="287" pos:column="43"/></operator><name pos:line="287" pos:column="40">start100<pos:position pos:line="287" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="287" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="287" pos:column="50"/></decl_stmt>
      <if pos:line="288" pos:column="7">if<condition pos:line="288" pos:column="9">(<expr><name pos:line="288" pos:column="10">ms<pos:position pos:line="288" pos:column="12"/></name> <operator pos:line="288" pos:column="13">&gt;=<pos:position pos:line="288" pos:column="18"/></operator> <name><name pos:line="288" pos:column="16">data<pos:position pos:line="288" pos:column="20"/></name><operator pos:line="288" pos:column="20">-&gt;<pos:position pos:line="288" pos:column="25"/></operator><name pos:line="288" pos:column="22">set<pos:position pos:line="288" pos:column="25"/></name><operator pos:line="288" pos:column="25">.<pos:position pos:line="288" pos:column="26"/></operator><name pos:line="288" pos:column="26">expect_100_timeout<pos:position pos:line="288" pos:column="44"/></name></name></expr>)<pos:position pos:line="288" pos:column="45"/></condition><then pos:line="288" pos:column="45"> <block pos:line="288" pos:column="46">{
        <comment type="block" pos:line="289" pos:column="9">/* we've waited long enough, continue anyway */</comment>
        <expr_stmt><expr><name><name pos:line="290" pos:column="9">k<pos:position pos:line="290" pos:column="10"/></name><operator pos:line="290" pos:column="10">-&gt;<pos:position pos:line="290" pos:column="15"/></operator><name pos:line="290" pos:column="12">exp100<pos:position pos:line="290" pos:column="18"/></name></name> <operator pos:line="290" pos:column="19">=<pos:position pos:line="290" pos:column="20"/></operator> <name pos:line="290" pos:column="21">EXP100_SEND_DATA<pos:position pos:line="290" pos:column="37"/></name></expr>;<pos:position pos:line="290" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="291" pos:column="9">k<pos:position pos:line="291" pos:column="10"/></name><operator pos:line="291" pos:column="10">-&gt;<pos:position pos:line="291" pos:column="15"/></operator><name pos:line="291" pos:column="12">keepon<pos:position pos:line="291" pos:column="18"/></name></name> <operator pos:line="291" pos:column="19">|=<pos:position pos:line="291" pos:column="21"/></operator> <name pos:line="291" pos:column="22">KEEP_SEND<pos:position pos:line="291" pos:column="31"/></name></expr>;<pos:position pos:line="291" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">infof<pos:position pos:line="292" pos:column="14"/></name><argument_list pos:line="292" pos:column="14">(<argument><expr><name pos:line="292" pos:column="15">data<pos:position pos:line="292" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="21">"Done waiting for 100-continue\n"<pos:position pos:line="292" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="293" pos:column="8"/></block></then></if>
    }<pos:position pos:line="294" pos:column="6"/></block></then></if>
  }<pos:position pos:line="295" pos:column="4"/></block></else></if>

  <if pos:line="297" pos:column="3">if<condition pos:line="297" pos:column="5">(<expr><call><name pos:line="297" pos:column="6">Curl_pgrsUpdate<pos:position pos:line="297" pos:column="21"/></name><argument_list pos:line="297" pos:column="21">(<argument><expr><name pos:line="297" pos:column="22">conn<pos:position pos:line="297" pos:column="26"/></name></expr></argument>)<pos:position pos:line="297" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="297" pos:column="28"/></condition><then pos:line="297" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="298" pos:column="5">result<pos:position pos:line="298" pos:column="11"/></name> <operator pos:line="298" pos:column="12">=<pos:position pos:line="298" pos:column="13"/></operator> <name pos:line="298" pos:column="14">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="298" pos:column="39"/></name></expr>;<pos:position pos:line="298" pos:column="40"/></expr_stmt></block></then>
  <else pos:line="299" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="300" pos:column="5">result<pos:position pos:line="300" pos:column="11"/></name> <operator pos:line="300" pos:column="12">=<pos:position pos:line="300" pos:column="13"/></operator> <call><name pos:line="300" pos:column="14">Curl_speedcheck<pos:position pos:line="300" pos:column="29"/></name><argument_list pos:line="300" pos:column="29">(<argument><expr><name pos:line="300" pos:column="30">data<pos:position pos:line="300" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="300" pos:column="36">k<pos:position pos:line="300" pos:column="37"/></name><operator pos:line="300" pos:column="37">-&gt;<pos:position pos:line="300" pos:column="42"/></operator><name pos:line="300" pos:column="39">now<pos:position pos:line="300" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="300" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="44"/></expr_stmt></block></else></if>
  <if pos:line="301" pos:column="3">if<condition pos:line="301" pos:column="5">(<expr><name pos:line="301" pos:column="6">result<pos:position pos:line="301" pos:column="12"/></name></expr>)<pos:position pos:line="301" pos:column="13"/></condition><then pos:line="301" pos:column="13">
    <block type="pseudo"><return pos:line="302" pos:column="5">return <expr><name pos:line="302" pos:column="12">result<pos:position pos:line="302" pos:column="18"/></name></expr>;<pos:position pos:line="302" pos:column="19"/></return></block></then></if>

  <if pos:line="304" pos:column="3">if<condition pos:line="304" pos:column="5">(<expr><name><name pos:line="304" pos:column="6">k<pos:position pos:line="304" pos:column="7"/></name><operator pos:line="304" pos:column="7">-&gt;<pos:position pos:line="304" pos:column="12"/></operator><name pos:line="304" pos:column="9">keepon<pos:position pos:line="304" pos:column="15"/></name></name></expr>)<pos:position pos:line="304" pos:column="16"/></condition><then pos:line="304" pos:column="16"> <block pos:line="304" pos:column="17">{
    <if pos:line="305" pos:column="5">if<condition pos:line="305" pos:column="7">(<expr><literal type="number" pos:line="305" pos:column="8">0<pos:position pos:line="305" pos:column="9"/></literal> <operator pos:line="305" pos:column="10">&gt;<pos:position pos:line="305" pos:column="14"/></operator> <call><name pos:line="305" pos:column="12">Curl_timeleft<pos:position pos:line="305" pos:column="25"/></name><argument_list pos:line="305" pos:column="25">(<argument><expr><name pos:line="305" pos:column="26">data<pos:position pos:line="305" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="305" pos:column="32">&amp;<pos:position pos:line="305" pos:column="37"/></operator><name><name pos:line="305" pos:column="33">k<pos:position pos:line="305" pos:column="34"/></name><operator pos:line="305" pos:column="34">-&gt;<pos:position pos:line="305" pos:column="39"/></operator><name pos:line="305" pos:column="36">now<pos:position pos:line="305" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="41">FALSE<pos:position pos:line="305" pos:column="46"/></name></expr></argument>)<pos:position pos:line="305" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="305" pos:column="48"/></condition><then pos:line="305" pos:column="48"> <block pos:line="305" pos:column="49">{
      <if pos:line="306" pos:column="7">if<condition pos:line="306" pos:column="9">(<expr><name><name pos:line="306" pos:column="10">k<pos:position pos:line="306" pos:column="11"/></name><operator pos:line="306" pos:column="11">-&gt;<pos:position pos:line="306" pos:column="16"/></operator><name pos:line="306" pos:column="13">size<pos:position pos:line="306" pos:column="17"/></name></name> <operator pos:line="306" pos:column="18">!=<pos:position pos:line="306" pos:column="20"/></operator> <operator pos:line="306" pos:column="21">-<pos:position pos:line="306" pos:column="22"/></operator><literal type="number" pos:line="306" pos:column="22">1<pos:position pos:line="306" pos:column="23"/></literal></expr>)<pos:position pos:line="306" pos:column="24"/></condition><then pos:line="306" pos:column="24"> <block pos:line="306" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="307" pos:column="9">failf<pos:position pos:line="307" pos:column="14"/></name><argument_list pos:line="307" pos:column="14">(<argument><expr><name pos:line="307" pos:column="15">data<pos:position pos:line="307" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="21">"Operation timed out after %ld milliseconds with %"<pos:position pos:line="307" pos:column="72"/></literal>
              <name pos:line="308" pos:column="15">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="308" pos:column="37"/></name> <literal type="string" pos:line="308" pos:column="38">" out of %"<pos:position pos:line="308" pos:column="49"/></literal>
              <name pos:line="309" pos:column="15">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="309" pos:column="37"/></name> <literal type="string" pos:line="309" pos:column="38">" bytes received"<pos:position pos:line="309" pos:column="55"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="310" pos:column="15">Curl_tvdiff<pos:position pos:line="310" pos:column="26"/></name><argument_list pos:line="310" pos:column="26">(<argument><expr><name><name pos:line="310" pos:column="27">k<pos:position pos:line="310" pos:column="28"/></name><operator pos:line="310" pos:column="28">-&gt;<pos:position pos:line="310" pos:column="33"/></operator><name pos:line="310" pos:column="30">now<pos:position pos:line="310" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="35">data<pos:position pos:line="310" pos:column="39"/></name><operator pos:line="310" pos:column="39">-&gt;<pos:position pos:line="310" pos:column="44"/></operator><name pos:line="310" pos:column="41">progress<pos:position pos:line="310" pos:column="49"/></name><operator pos:line="310" pos:column="49">.<pos:position pos:line="310" pos:column="50"/></operator><name pos:line="310" pos:column="50">t_startsingle<pos:position pos:line="310" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="310" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="66">k<pos:position pos:line="310" pos:column="67"/></name><operator pos:line="310" pos:column="67">-&gt;<pos:position pos:line="310" pos:column="72"/></operator><name pos:line="310" pos:column="69">bytecount<pos:position pos:line="310" pos:column="78"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="311" pos:column="15">k<pos:position pos:line="311" pos:column="16"/></name><operator pos:line="311" pos:column="16">-&gt;<pos:position pos:line="311" pos:column="21"/></operator><name pos:line="311" pos:column="18">size<pos:position pos:line="311" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="312" pos:column="8"/></block></then>
      <else pos:line="313" pos:column="7">else <block pos:line="313" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="314" pos:column="9">failf<pos:position pos:line="314" pos:column="14"/></name><argument_list pos:line="314" pos:column="14">(<argument><expr><name pos:line="314" pos:column="15">data<pos:position pos:line="314" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="21">"Operation timed out after %ld milliseconds with %"<pos:position pos:line="314" pos:column="72"/></literal>
              <name pos:line="315" pos:column="15">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="315" pos:column="37"/></name> <literal type="string" pos:line="315" pos:column="38">" bytes received"<pos:position pos:line="315" pos:column="55"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="316" pos:column="15">Curl_tvdiff<pos:position pos:line="316" pos:column="26"/></name><argument_list pos:line="316" pos:column="26">(<argument><expr><name><name pos:line="316" pos:column="27">k<pos:position pos:line="316" pos:column="28"/></name><operator pos:line="316" pos:column="28">-&gt;<pos:position pos:line="316" pos:column="33"/></operator><name pos:line="316" pos:column="30">now<pos:position pos:line="316" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="35">data<pos:position pos:line="316" pos:column="39"/></name><operator pos:line="316" pos:column="39">-&gt;<pos:position pos:line="316" pos:column="44"/></operator><name pos:line="316" pos:column="41">progress<pos:position pos:line="316" pos:column="49"/></name><operator pos:line="316" pos:column="49">.<pos:position pos:line="316" pos:column="50"/></operator><name pos:line="316" pos:column="50">t_startsingle<pos:position pos:line="316" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="66">k<pos:position pos:line="316" pos:column="67"/></name><operator pos:line="316" pos:column="67">-&gt;<pos:position pos:line="316" pos:column="72"/></operator><name pos:line="316" pos:column="69">bytecount<pos:position pos:line="316" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="80"/></expr_stmt>
      }<pos:position pos:line="317" pos:column="8"/></block></else></if>
      <return pos:line="318" pos:column="7">return <expr><name pos:line="318" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="318" pos:column="38"/></name></expr>;<pos:position pos:line="318" pos:column="39"/></return>
    }<pos:position pos:line="319" pos:column="6"/></block></then></if>
  }<pos:position pos:line="320" pos:column="4"/></block></then>
  <else pos:line="321" pos:column="3">else <block pos:line="321" pos:column="8">{
    <comment type="block" pos:line="322" pos:column="5">/*
     * The transfer has been performed. Just make some general checks before
     * returning.
     */</comment>

    <if pos:line="327" pos:column="5">if<condition pos:line="327" pos:column="7">(<expr><operator pos:line="327" pos:column="8">!<pos:position pos:line="327" pos:column="9"/></operator><operator pos:line="327" pos:column="9">(<pos:position pos:line="327" pos:column="10"/></operator><name><name pos:line="327" pos:column="10">data<pos:position pos:line="327" pos:column="14"/></name><operator pos:line="327" pos:column="14">-&gt;<pos:position pos:line="327" pos:column="19"/></operator><name pos:line="327" pos:column="16">set<pos:position pos:line="327" pos:column="19"/></name><operator pos:line="327" pos:column="19">.<pos:position pos:line="327" pos:column="20"/></operator><name pos:line="327" pos:column="20">opt_no_body<pos:position pos:line="327" pos:column="31"/></name></name><operator pos:line="327" pos:column="31">)<pos:position pos:line="327" pos:column="32"/></operator> <operator pos:line="327" pos:column="33">&amp;&amp;<pos:position pos:line="327" pos:column="43"/></operator> <operator pos:line="327" pos:column="36">(<pos:position pos:line="327" pos:column="37"/></operator><name><name pos:line="327" pos:column="37">k<pos:position pos:line="327" pos:column="38"/></name><operator pos:line="327" pos:column="38">-&gt;<pos:position pos:line="327" pos:column="43"/></operator><name pos:line="327" pos:column="40">size<pos:position pos:line="327" pos:column="44"/></name></name> <operator pos:line="327" pos:column="45">!=<pos:position pos:line="327" pos:column="47"/></operator> <operator pos:line="327" pos:column="48">-<pos:position pos:line="327" pos:column="49"/></operator><literal type="number" pos:line="327" pos:column="49">1<pos:position pos:line="327" pos:column="50"/></literal><operator pos:line="327" pos:column="50">)<pos:position pos:line="327" pos:column="51"/></operator> <operator pos:line="327" pos:column="52">&amp;&amp;<pos:position pos:line="327" pos:column="62"/></operator>
       <operator pos:line="328" pos:column="8">(<pos:position pos:line="328" pos:column="9"/></operator><name><name pos:line="328" pos:column="9">k<pos:position pos:line="328" pos:column="10"/></name><operator pos:line="328" pos:column="10">-&gt;<pos:position pos:line="328" pos:column="15"/></operator><name pos:line="328" pos:column="12">bytecount<pos:position pos:line="328" pos:column="21"/></name></name> <operator pos:line="328" pos:column="22">!=<pos:position pos:line="328" pos:column="24"/></operator> <name><name pos:line="328" pos:column="25">k<pos:position pos:line="328" pos:column="26"/></name><operator pos:line="328" pos:column="26">-&gt;<pos:position pos:line="328" pos:column="31"/></operator><name pos:line="328" pos:column="28">size<pos:position pos:line="328" pos:column="32"/></name></name><operator pos:line="328" pos:column="32">)<pos:position pos:line="328" pos:column="33"/></operator> <operator pos:line="328" pos:column="34">&amp;&amp;<pos:position pos:line="328" pos:column="44"/></operator>
<cpp:ifdef pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">ifdef<pos:position pos:line="329" pos:column="7"/></cpp:directive> <name pos:line="329" pos:column="8">CURL_DO_LINEEND_CONV<pos:position pos:line="329" pos:column="28"/></name></cpp:ifdef>
       <comment type="block" pos:line="330" pos:column="8">/* Most FTP servers don't adjust their file SIZE response for CRLFs,
          so we'll check to see if the discrepancy can be explained
          by the number of CRLFs we've changed to LFs.
       */</comment>
       <operator pos:line="334" pos:column="8">(<pos:position pos:line="334" pos:column="9"/></operator><name><name pos:line="334" pos:column="9">k<pos:position pos:line="334" pos:column="10"/></name><operator pos:line="334" pos:column="10">-&gt;<pos:position pos:line="334" pos:column="15"/></operator><name pos:line="334" pos:column="12">bytecount<pos:position pos:line="334" pos:column="21"/></name></name> <operator pos:line="334" pos:column="22">!=<pos:position pos:line="334" pos:column="24"/></operator> <operator pos:line="334" pos:column="25">(<pos:position pos:line="334" pos:column="26"/></operator><name><name pos:line="334" pos:column="26">k<pos:position pos:line="334" pos:column="27"/></name><operator pos:line="334" pos:column="27">-&gt;<pos:position pos:line="334" pos:column="32"/></operator><name pos:line="334" pos:column="29">size<pos:position pos:line="334" pos:column="33"/></name></name> <operator pos:line="334" pos:column="34">+<pos:position pos:line="334" pos:column="35"/></operator> <name><name pos:line="334" pos:column="36">data<pos:position pos:line="334" pos:column="40"/></name><operator pos:line="334" pos:column="40">-&gt;<pos:position pos:line="334" pos:column="45"/></operator><name pos:line="334" pos:column="42">state<pos:position pos:line="334" pos:column="47"/></name><operator pos:line="334" pos:column="47">.<pos:position pos:line="334" pos:column="48"/></operator><name pos:line="334" pos:column="48">crlf_conversions<pos:position pos:line="334" pos:column="64"/></name></name><operator pos:line="334" pos:column="64">)<pos:position pos:line="334" pos:column="65"/></operator><operator pos:line="334" pos:column="65">)<pos:position pos:line="334" pos:column="66"/></operator> <operator pos:line="334" pos:column="67">&amp;&amp;<pos:position pos:line="334" pos:column="77"/></operator>
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif<pos:position pos:line="335" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="335" pos:column="8">/* CURL_DO_LINEEND_CONV */</comment>
       <operator pos:line="336" pos:column="8">!<pos:position pos:line="336" pos:column="9"/></operator><name><name pos:line="336" pos:column="9">data<pos:position pos:line="336" pos:column="13"/></name><operator pos:line="336" pos:column="13">-&gt;<pos:position pos:line="336" pos:column="18"/></operator><name pos:line="336" pos:column="15">req<pos:position pos:line="336" pos:column="18"/></name><operator pos:line="336" pos:column="18">.<pos:position pos:line="336" pos:column="19"/></operator><name pos:line="336" pos:column="19">newurl<pos:position pos:line="336" pos:column="25"/></name></name></expr>)<pos:position pos:line="336" pos:column="26"/></condition><then pos:line="336" pos:column="26"> <block pos:line="336" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="337" pos:column="7">failf<pos:position pos:line="337" pos:column="12"/></name><argument_list pos:line="337" pos:column="12">(<argument><expr><name pos:line="337" pos:column="13">data<pos:position pos:line="337" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="337" pos:column="19">"transfer closed with %"<pos:position pos:line="337" pos:column="43"/></literal> <name pos:line="337" pos:column="44">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="337" pos:column="66"/></name>
            <literal type="string" pos:line="338" pos:column="13">" bytes remaining to read"<pos:position pos:line="338" pos:column="39"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="339" pos:column="13">k<pos:position pos:line="339" pos:column="14"/></name><operator pos:line="339" pos:column="14">-&gt;<pos:position pos:line="339" pos:column="19"/></operator><name pos:line="339" pos:column="16">size<pos:position pos:line="339" pos:column="20"/></name></name> <operator pos:line="339" pos:column="21">-<pos:position pos:line="339" pos:column="22"/></operator> <name><name pos:line="339" pos:column="23">k<pos:position pos:line="339" pos:column="24"/></name><operator pos:line="339" pos:column="24">-&gt;<pos:position pos:line="339" pos:column="29"/></operator><name pos:line="339" pos:column="26">bytecount<pos:position pos:line="339" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="339" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="37"/></expr_stmt>
      <return pos:line="340" pos:column="7">return <expr><name pos:line="340" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="340" pos:column="32"/></name></expr>;<pos:position pos:line="340" pos:column="33"/></return>
    }<pos:position pos:line="341" pos:column="6"/></block></then>
    <elseif pos:line="342" pos:column="5">else <if pos:line="342" pos:column="10">if<condition pos:line="342" pos:column="12">(<expr><operator pos:line="342" pos:column="13">!<pos:position pos:line="342" pos:column="14"/></operator><operator pos:line="342" pos:column="14">(<pos:position pos:line="342" pos:column="15"/></operator><name><name pos:line="342" pos:column="15">data<pos:position pos:line="342" pos:column="19"/></name><operator pos:line="342" pos:column="19">-&gt;<pos:position pos:line="342" pos:column="24"/></operator><name pos:line="342" pos:column="21">set<pos:position pos:line="342" pos:column="24"/></name><operator pos:line="342" pos:column="24">.<pos:position pos:line="342" pos:column="25"/></operator><name pos:line="342" pos:column="25">opt_no_body<pos:position pos:line="342" pos:column="36"/></name></name><operator pos:line="342" pos:column="36">)<pos:position pos:line="342" pos:column="37"/></operator> <operator pos:line="342" pos:column="38">&amp;&amp;<pos:position pos:line="342" pos:column="48"/></operator>
            <name><name pos:line="343" pos:column="13">k<pos:position pos:line="343" pos:column="14"/></name><operator pos:line="343" pos:column="14">-&gt;<pos:position pos:line="343" pos:column="19"/></operator><name pos:line="343" pos:column="16">chunk<pos:position pos:line="343" pos:column="21"/></name></name> <operator pos:line="343" pos:column="22">&amp;&amp;<pos:position pos:line="343" pos:column="32"/></operator>
            <operator pos:line="344" pos:column="13">(<pos:position pos:line="344" pos:column="14"/></operator><name><name pos:line="344" pos:column="14">conn<pos:position pos:line="344" pos:column="18"/></name><operator pos:line="344" pos:column="18">-&gt;<pos:position pos:line="344" pos:column="23"/></operator><name pos:line="344" pos:column="20">chunk<pos:position pos:line="344" pos:column="25"/></name><operator pos:line="344" pos:column="25">.<pos:position pos:line="344" pos:column="26"/></operator><name pos:line="344" pos:column="26">state<pos:position pos:line="344" pos:column="31"/></name></name> <operator pos:line="344" pos:column="32">!=<pos:position pos:line="344" pos:column="34"/></operator> <name pos:line="344" pos:column="35">CHUNK_STOP<pos:position pos:line="344" pos:column="45"/></name><operator pos:line="344" pos:column="45">)<pos:position pos:line="344" pos:column="46"/></operator></expr>)<pos:position pos:line="344" pos:column="47"/></condition><then pos:line="344" pos:column="47"> <block pos:line="344" pos:column="48">{
      <comment type="block" pos:line="345" pos:column="7">/*
       * In chunked mode, return an error if the connection is closed prior to
       * the empty (terminating) chunk is read.
       *
       * The condition above used to check for
       * conn-&gt;proto.http-&gt;chunk.datasize != 0 which is true after reading
       * *any* chunk, not just the empty chunk.
       *
       */</comment>
      <expr_stmt><expr><call><name pos:line="354" pos:column="7">failf<pos:position pos:line="354" pos:column="12"/></name><argument_list pos:line="354" pos:column="12">(<argument><expr><name pos:line="354" pos:column="13">data<pos:position pos:line="354" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="19">"transfer closed with outstanding read data remaining"<pos:position pos:line="354" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="75"/></expr_stmt>
      <return pos:line="355" pos:column="7">return <expr><name pos:line="355" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="355" pos:column="32"/></name></expr>;<pos:position pos:line="355" pos:column="33"/></return>
    }<pos:position pos:line="356" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="357" pos:column="5">if<condition pos:line="357" pos:column="7">(<expr><call><name pos:line="357" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="357" pos:column="23"/></name><argument_list pos:line="357" pos:column="23">(<argument><expr><name pos:line="357" pos:column="24">conn<pos:position pos:line="357" pos:column="28"/></name></expr></argument>)<pos:position pos:line="357" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="357" pos:column="30"/></condition><then pos:line="357" pos:column="30">
      <block type="pseudo"><return pos:line="358" pos:column="7">return <expr><name pos:line="358" pos:column="14">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="358" pos:column="39"/></name></expr>;<pos:position pos:line="358" pos:column="40"/></return></block></then></if>
  }<pos:position pos:line="359" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="361" pos:column="3">/* Now update the "done" boolean we return */</comment>
  <expr_stmt><expr><operator pos:line="362" pos:column="3">*<pos:position pos:line="362" pos:column="4"/></operator><name pos:line="362" pos:column="4">done<pos:position pos:line="362" pos:column="8"/></name> <operator pos:line="362" pos:column="9">=<pos:position pos:line="362" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="362" pos:column="11">(<pos:position pos:line="362" pos:column="12"/></operator><literal type="number" pos:line="362" pos:column="12">0<pos:position pos:line="362" pos:column="13"/></literal> <operator pos:line="362" pos:column="14">==<pos:position pos:line="362" pos:column="16"/></operator> <operator pos:line="362" pos:column="17">(<pos:position pos:line="362" pos:column="18"/></operator><name><name pos:line="362" pos:column="18">k<pos:position pos:line="362" pos:column="19"/></name><operator pos:line="362" pos:column="19">-&gt;<pos:position pos:line="362" pos:column="24"/></operator><name pos:line="362" pos:column="21">keepon<pos:position pos:line="362" pos:column="27"/></name></name><operator pos:line="362" pos:column="27">&amp;<pos:position pos:line="362" pos:column="32"/></operator><operator pos:line="362" pos:column="28">(<pos:position pos:line="362" pos:column="29"/></operator><name pos:line="362" pos:column="29">KEEP_RECV<pos:position pos:line="362" pos:column="38"/></name><operator pos:line="362" pos:column="38">|<pos:position pos:line="362" pos:column="39"/></operator><name pos:line="362" pos:column="39">KEEP_SEND<pos:position pos:line="362" pos:column="48"/></name><operator pos:line="362" pos:column="48">|<pos:position pos:line="362" pos:column="49"/></operator>
                            <name pos:line="363" pos:column="29">KEEP_RECV_PAUSE<pos:position pos:line="363" pos:column="44"/></name><operator pos:line="363" pos:column="44">|<pos:position pos:line="363" pos:column="45"/></operator><name pos:line="363" pos:column="45">KEEP_SEND_PAUSE<pos:position pos:line="363" pos:column="60"/></name><operator pos:line="363" pos:column="60">)<pos:position pos:line="363" pos:column="61"/></operator><operator pos:line="363" pos:column="61">)<pos:position pos:line="363" pos:column="62"/></operator><operator pos:line="363" pos:column="62">)<pos:position pos:line="363" pos:column="63"/></operator></expr> ?<pos:position pos:line="363" pos:column="65"/></condition><then pos:line="363" pos:column="65"> <expr><name pos:line="363" pos:column="66">TRUE<pos:position pos:line="363" pos:column="70"/></name></expr> <pos:position pos:line="363" pos:column="71"/></then><else pos:line="363" pos:column="71">: <expr><name pos:line="363" pos:column="73">FALSE<pos:position pos:line="363" pos:column="78"/></name></expr></else></ternary></expr>;<pos:position pos:line="363" pos:column="79"/></expr_stmt>

  <return pos:line="365" pos:column="3">return <expr><name pos:line="365" pos:column="10">CURLE_OK<pos:position pos:line="365" pos:column="18"/></name></expr>;<pos:position pos:line="365" pos:column="19"/></return>
}<pos:position pos:line="366" pos:column="2"/></block></function>

<comment type="block" pos:line="368" pos:column="1">/*
 * Curl_single_getsock() gets called by the multi interface code when the app
 * has requested to get the sockets for the current connection. This function
 * will then be called once for every connection that the multi interface
 * keeps track of. This function will only be called for connections that are
 * in the proper state to have this information available.
 */</comment>
<function><type><name pos:line="375" pos:column="1">int<pos:position pos:line="375" pos:column="4"/></name></type> <name pos:line="375" pos:column="5">Curl_single_getsock<pos:position pos:line="375" pos:column="24"/></name><parameter_list pos:line="375" pos:column="24">(<parameter><decl><type><specifier pos:line="375" pos:column="25">const<pos:position pos:line="375" pos:column="30"/></specifier> <name><name pos:line="375" pos:column="31">struct<pos:position pos:line="375" pos:column="37"/></name> <name pos:line="375" pos:column="38">connectdata<pos:position pos:line="375" pos:column="49"/></name></name> <modifier pos:line="375" pos:column="50">*<pos:position pos:line="375" pos:column="51"/></modifier></type><name pos:line="375" pos:column="51">conn<pos:position pos:line="375" pos:column="55"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="376" pos:column="25">curl_socket_t<pos:position pos:line="376" pos:column="38"/></name> <modifier pos:line="376" pos:column="39">*<pos:position pos:line="376" pos:column="40"/></modifier></type><name pos:line="376" pos:column="40">sock<pos:position pos:line="376" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="376" pos:column="46">/* points to numsocks number
                                                of sockets */</comment>
                        <parameter><decl><type><name pos:line="378" pos:column="25">int<pos:position pos:line="378" pos:column="28"/></name></type> <name pos:line="378" pos:column="29">numsocks<pos:position pos:line="378" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="378" pos:column="38"/></parameter_list>
<block pos:line="379" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="380" pos:column="3">const<pos:position pos:line="380" pos:column="8"/></specifier> <name><name pos:line="380" pos:column="9">struct<pos:position pos:line="380" pos:column="15"/></name> <name pos:line="380" pos:column="16">Curl_easy<pos:position pos:line="380" pos:column="25"/></name></name> <modifier pos:line="380" pos:column="26">*<pos:position pos:line="380" pos:column="27"/></modifier></type><name pos:line="380" pos:column="27">data<pos:position pos:line="380" pos:column="31"/></name> <init pos:line="380" pos:column="32">= <expr><name><name pos:line="380" pos:column="34">conn<pos:position pos:line="380" pos:column="38"/></name><operator pos:line="380" pos:column="38">-&gt;<pos:position pos:line="380" pos:column="43"/></operator><name pos:line="380" pos:column="40">data<pos:position pos:line="380" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="380" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="381" pos:column="3">int<pos:position pos:line="381" pos:column="6"/></name></type> <name pos:line="381" pos:column="7">bitmap<pos:position pos:line="381" pos:column="13"/></name> <init pos:line="381" pos:column="14">= <expr><name pos:line="381" pos:column="16">GETSOCK_BLANK<pos:position pos:line="381" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="381" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="382" pos:column="3">unsigned<pos:position pos:line="382" pos:column="11"/></name></type> <name pos:line="382" pos:column="12">sockindex<pos:position pos:line="382" pos:column="21"/></name> <init pos:line="382" pos:column="22">= <expr><literal type="number" pos:line="382" pos:column="24">0<pos:position pos:line="382" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="382" pos:column="26"/></decl_stmt>

  <if pos:line="384" pos:column="3">if<condition pos:line="384" pos:column="5">(<expr><name><name pos:line="384" pos:column="6">conn<pos:position pos:line="384" pos:column="10"/></name><operator pos:line="384" pos:column="10">-&gt;<pos:position pos:line="384" pos:column="15"/></operator><name pos:line="384" pos:column="12">handler<pos:position pos:line="384" pos:column="19"/></name><operator pos:line="384" pos:column="19">-&gt;<pos:position pos:line="384" pos:column="24"/></operator><name pos:line="384" pos:column="21">perform_getsock<pos:position pos:line="384" pos:column="36"/></name></name></expr>)<pos:position pos:line="384" pos:column="37"/></condition><then pos:line="384" pos:column="37">
    <block type="pseudo"><return pos:line="385" pos:column="5">return <expr><call><name><name pos:line="385" pos:column="12">conn<pos:position pos:line="385" pos:column="16"/></name><operator pos:line="385" pos:column="16">-&gt;<pos:position pos:line="385" pos:column="21"/></operator><name pos:line="385" pos:column="18">handler<pos:position pos:line="385" pos:column="25"/></name><operator pos:line="385" pos:column="25">-&gt;<pos:position pos:line="385" pos:column="30"/></operator><name pos:line="385" pos:column="27">perform_getsock<pos:position pos:line="385" pos:column="42"/></name></name><argument_list pos:line="385" pos:column="42">(<argument><expr><name pos:line="385" pos:column="43">conn<pos:position pos:line="385" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="49">sock<pos:position pos:line="385" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="55">numsocks<pos:position pos:line="385" pos:column="63"/></name></expr></argument>)<pos:position pos:line="385" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="65"/></return></block></then></if>

  <if pos:line="387" pos:column="3">if<condition pos:line="387" pos:column="5">(<expr><name pos:line="387" pos:column="6">numsocks<pos:position pos:line="387" pos:column="14"/></name> <operator pos:line="387" pos:column="15">&lt;<pos:position pos:line="387" pos:column="19"/></operator> <literal type="number" pos:line="387" pos:column="17">2<pos:position pos:line="387" pos:column="18"/></literal></expr>)<pos:position pos:line="387" pos:column="19"/></condition><then pos:line="387" pos:column="19">
    <comment type="block" pos:line="388" pos:column="5">/* simple check but we might need two slots */</comment>
    <block type="pseudo"><return pos:line="389" pos:column="5">return <expr><name pos:line="389" pos:column="12">GETSOCK_BLANK<pos:position pos:line="389" pos:column="25"/></name></expr>;<pos:position pos:line="389" pos:column="26"/></return></block></then></if>

  <comment type="block" pos:line="391" pos:column="3">/* don't include HOLD and PAUSE connections */</comment>
  <if pos:line="392" pos:column="3">if<condition pos:line="392" pos:column="5">(<expr><operator pos:line="392" pos:column="6">(<pos:position pos:line="392" pos:column="7"/></operator><name><name pos:line="392" pos:column="7">data<pos:position pos:line="392" pos:column="11"/></name><operator pos:line="392" pos:column="11">-&gt;<pos:position pos:line="392" pos:column="16"/></operator><name pos:line="392" pos:column="13">req<pos:position pos:line="392" pos:column="16"/></name><operator pos:line="392" pos:column="16">.<pos:position pos:line="392" pos:column="17"/></operator><name pos:line="392" pos:column="17">keepon<pos:position pos:line="392" pos:column="23"/></name></name> <operator pos:line="392" pos:column="24">&amp;<pos:position pos:line="392" pos:column="29"/></operator> <name pos:line="392" pos:column="26">KEEP_RECVBITS<pos:position pos:line="392" pos:column="39"/></name><operator pos:line="392" pos:column="39">)<pos:position pos:line="392" pos:column="40"/></operator> <operator pos:line="392" pos:column="41">==<pos:position pos:line="392" pos:column="43"/></operator> <name pos:line="392" pos:column="44">KEEP_RECV<pos:position pos:line="392" pos:column="53"/></name></expr>)<pos:position pos:line="392" pos:column="54"/></condition><then pos:line="392" pos:column="54"> <block pos:line="392" pos:column="55">{

    <expr_stmt><expr><call><name pos:line="394" pos:column="5">DEBUGASSERT<pos:position pos:line="394" pos:column="16"/></name><argument_list pos:line="394" pos:column="16">(<argument><expr><name><name pos:line="394" pos:column="17">conn<pos:position pos:line="394" pos:column="21"/></name><operator pos:line="394" pos:column="21">-&gt;<pos:position pos:line="394" pos:column="26"/></operator><name pos:line="394" pos:column="23">sockfd<pos:position pos:line="394" pos:column="29"/></name></name> <operator pos:line="394" pos:column="30">!=<pos:position pos:line="394" pos:column="32"/></operator> <name pos:line="394" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="394" pos:column="48"/></name></expr></argument>)<pos:position pos:line="394" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name pos:line="396" pos:column="5">bitmap<pos:position pos:line="396" pos:column="11"/></name> <operator pos:line="396" pos:column="12">|=<pos:position pos:line="396" pos:column="14"/></operator> <call><name pos:line="396" pos:column="15">GETSOCK_READSOCK<pos:position pos:line="396" pos:column="31"/></name><argument_list pos:line="396" pos:column="31">(<argument><expr><name pos:line="396" pos:column="32">sockindex<pos:position pos:line="396" pos:column="41"/></name></expr></argument>)<pos:position pos:line="396" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="397" pos:column="5">sock<pos:position pos:line="397" pos:column="9"/></name><index pos:line="397" pos:column="9">[<expr><name pos:line="397" pos:column="10">sockindex<pos:position pos:line="397" pos:column="19"/></name></expr>]<pos:position pos:line="397" pos:column="20"/></index></name> <operator pos:line="397" pos:column="21">=<pos:position pos:line="397" pos:column="22"/></operator> <name><name pos:line="397" pos:column="23">conn<pos:position pos:line="397" pos:column="27"/></name><operator pos:line="397" pos:column="27">-&gt;<pos:position pos:line="397" pos:column="32"/></operator><name pos:line="397" pos:column="29">sockfd<pos:position pos:line="397" pos:column="35"/></name></name></expr>;<pos:position pos:line="397" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="398" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="400" pos:column="3">/* don't include HOLD and PAUSE connections */</comment>
  <if pos:line="401" pos:column="3">if<condition pos:line="401" pos:column="5">(<expr><operator pos:line="401" pos:column="6">(<pos:position pos:line="401" pos:column="7"/></operator><name><name pos:line="401" pos:column="7">data<pos:position pos:line="401" pos:column="11"/></name><operator pos:line="401" pos:column="11">-&gt;<pos:position pos:line="401" pos:column="16"/></operator><name pos:line="401" pos:column="13">req<pos:position pos:line="401" pos:column="16"/></name><operator pos:line="401" pos:column="16">.<pos:position pos:line="401" pos:column="17"/></operator><name pos:line="401" pos:column="17">keepon<pos:position pos:line="401" pos:column="23"/></name></name> <operator pos:line="401" pos:column="24">&amp;<pos:position pos:line="401" pos:column="29"/></operator> <name pos:line="401" pos:column="26">KEEP_SENDBITS<pos:position pos:line="401" pos:column="39"/></name><operator pos:line="401" pos:column="39">)<pos:position pos:line="401" pos:column="40"/></operator> <operator pos:line="401" pos:column="41">==<pos:position pos:line="401" pos:column="43"/></operator> <name pos:line="401" pos:column="44">KEEP_SEND<pos:position pos:line="401" pos:column="53"/></name></expr>)<pos:position pos:line="401" pos:column="54"/></condition><then pos:line="401" pos:column="54"> <block pos:line="401" pos:column="55">{

    <if pos:line="403" pos:column="5">if<condition pos:line="403" pos:column="7">(<expr><operator pos:line="403" pos:column="8">(<pos:position pos:line="403" pos:column="9"/></operator><name><name pos:line="403" pos:column="9">conn<pos:position pos:line="403" pos:column="13"/></name><operator pos:line="403" pos:column="13">-&gt;<pos:position pos:line="403" pos:column="18"/></operator><name pos:line="403" pos:column="15">sockfd<pos:position pos:line="403" pos:column="21"/></name></name> <operator pos:line="403" pos:column="22">!=<pos:position pos:line="403" pos:column="24"/></operator> <name><name pos:line="403" pos:column="25">conn<pos:position pos:line="403" pos:column="29"/></name><operator pos:line="403" pos:column="29">-&gt;<pos:position pos:line="403" pos:column="34"/></operator><name pos:line="403" pos:column="31">writesockfd<pos:position pos:line="403" pos:column="42"/></name></name><operator pos:line="403" pos:column="42">)<pos:position pos:line="403" pos:column="43"/></operator> <operator pos:line="403" pos:column="44">||<pos:position pos:line="403" pos:column="46"/></operator>
       <name pos:line="404" pos:column="8">bitmap<pos:position pos:line="404" pos:column="14"/></name> <operator pos:line="404" pos:column="15">==<pos:position pos:line="404" pos:column="17"/></operator> <name pos:line="404" pos:column="18">GETSOCK_BLANK<pos:position pos:line="404" pos:column="31"/></name></expr>)<pos:position pos:line="404" pos:column="32"/></condition><then pos:line="404" pos:column="32"> <block pos:line="404" pos:column="33">{
      <comment type="block" pos:line="405" pos:column="7">/* only if they are not the same socket and we have a readable
         one, we increase index */</comment>
      <if pos:line="407" pos:column="7">if<condition pos:line="407" pos:column="9">(<expr><name pos:line="407" pos:column="10">bitmap<pos:position pos:line="407" pos:column="16"/></name> <operator pos:line="407" pos:column="17">!=<pos:position pos:line="407" pos:column="19"/></operator> <name pos:line="407" pos:column="20">GETSOCK_BLANK<pos:position pos:line="407" pos:column="33"/></name></expr>)<pos:position pos:line="407" pos:column="34"/></condition><then pos:line="407" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="408" pos:column="9">sockindex<pos:position pos:line="408" pos:column="18"/></name><operator pos:line="408" pos:column="18">++<pos:position pos:line="408" pos:column="20"/></operator></expr>;<pos:position pos:line="408" pos:column="21"/></expr_stmt></block></then></if> <comment type="block" pos:line="408" pos:column="22">/* increase index if we need two entries */</comment>

      <expr_stmt><expr><call><name pos:line="410" pos:column="7">DEBUGASSERT<pos:position pos:line="410" pos:column="18"/></name><argument_list pos:line="410" pos:column="18">(<argument><expr><name><name pos:line="410" pos:column="19">conn<pos:position pos:line="410" pos:column="23"/></name><operator pos:line="410" pos:column="23">-&gt;<pos:position pos:line="410" pos:column="28"/></operator><name pos:line="410" pos:column="25">writesockfd<pos:position pos:line="410" pos:column="36"/></name></name> <operator pos:line="410" pos:column="37">!=<pos:position pos:line="410" pos:column="39"/></operator> <name pos:line="410" pos:column="40">CURL_SOCKET_BAD<pos:position pos:line="410" pos:column="55"/></name></expr></argument>)<pos:position pos:line="410" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="57"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="412" pos:column="7">sock<pos:position pos:line="412" pos:column="11"/></name><index pos:line="412" pos:column="11">[<expr><name pos:line="412" pos:column="12">sockindex<pos:position pos:line="412" pos:column="21"/></name></expr>]<pos:position pos:line="412" pos:column="22"/></index></name> <operator pos:line="412" pos:column="23">=<pos:position pos:line="412" pos:column="24"/></operator> <name><name pos:line="412" pos:column="25">conn<pos:position pos:line="412" pos:column="29"/></name><operator pos:line="412" pos:column="29">-&gt;<pos:position pos:line="412" pos:column="34"/></operator><name pos:line="412" pos:column="31">writesockfd<pos:position pos:line="412" pos:column="42"/></name></name></expr>;<pos:position pos:line="412" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="413" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="415" pos:column="5">bitmap<pos:position pos:line="415" pos:column="11"/></name> <operator pos:line="415" pos:column="12">|=<pos:position pos:line="415" pos:column="14"/></operator> <call><name pos:line="415" pos:column="15">GETSOCK_WRITESOCK<pos:position pos:line="415" pos:column="32"/></name><argument_list pos:line="415" pos:column="32">(<argument><expr><name pos:line="415" pos:column="33">sockindex<pos:position pos:line="415" pos:column="42"/></name></expr></argument>)<pos:position pos:line="415" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="416" pos:column="4"/></block></then></if>

  <return pos:line="418" pos:column="3">return <expr><name pos:line="418" pos:column="10">bitmap<pos:position pos:line="418" pos:column="16"/></name></expr>;<pos:position pos:line="418" pos:column="17"/></return>
}<pos:position pos:line="419" pos:column="2"/></block></function>

<comment type="block" pos:line="421" pos:column="1">/* Curl_init_CONNECT() gets called each time the handle switches to CONNECT
   which means this gets called once for each subsequent redirect etc */</comment>
<function><type><name pos:line="423" pos:column="1">void<pos:position pos:line="423" pos:column="5"/></name></type> <name pos:line="423" pos:column="6">Curl_init_CONNECT<pos:position pos:line="423" pos:column="23"/></name><parameter_list pos:line="423" pos:column="23">(<parameter><decl><type><name><name pos:line="423" pos:column="24">struct<pos:position pos:line="423" pos:column="30"/></name> <name pos:line="423" pos:column="31">Curl_easy<pos:position pos:line="423" pos:column="40"/></name></name> <modifier pos:line="423" pos:column="41">*<pos:position pos:line="423" pos:column="42"/></modifier></type><name pos:line="423" pos:column="42">data<pos:position pos:line="423" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="423" pos:column="47"/></parameter_list>
<block pos:line="424" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="425" pos:column="3">data<pos:position pos:line="425" pos:column="7"/></name><operator pos:line="425" pos:column="7">-&gt;<pos:position pos:line="425" pos:column="12"/></operator><name pos:line="425" pos:column="9">state<pos:position pos:line="425" pos:column="14"/></name><operator pos:line="425" pos:column="14">.<pos:position pos:line="425" pos:column="15"/></operator><name pos:line="425" pos:column="15">fread_func<pos:position pos:line="425" pos:column="25"/></name></name> <operator pos:line="425" pos:column="26">=<pos:position pos:line="425" pos:column="27"/></operator> <name><name pos:line="425" pos:column="28">data<pos:position pos:line="425" pos:column="32"/></name><operator pos:line="425" pos:column="32">-&gt;<pos:position pos:line="425" pos:column="37"/></operator><name pos:line="425" pos:column="34">set<pos:position pos:line="425" pos:column="37"/></name><operator pos:line="425" pos:column="37">.<pos:position pos:line="425" pos:column="38"/></operator><name pos:line="425" pos:column="38">fread_func_set<pos:position pos:line="425" pos:column="52"/></name></name></expr>;<pos:position pos:line="425" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="426" pos:column="3">data<pos:position pos:line="426" pos:column="7"/></name><operator pos:line="426" pos:column="7">-&gt;<pos:position pos:line="426" pos:column="12"/></operator><name pos:line="426" pos:column="9">state<pos:position pos:line="426" pos:column="14"/></name><operator pos:line="426" pos:column="14">.<pos:position pos:line="426" pos:column="15"/></operator><name pos:line="426" pos:column="15">in<pos:position pos:line="426" pos:column="17"/></name></name> <operator pos:line="426" pos:column="18">=<pos:position pos:line="426" pos:column="19"/></operator> <name><name pos:line="426" pos:column="20">data<pos:position pos:line="426" pos:column="24"/></name><operator pos:line="426" pos:column="24">-&gt;<pos:position pos:line="426" pos:column="29"/></operator><name pos:line="426" pos:column="26">set<pos:position pos:line="426" pos:column="29"/></name><operator pos:line="426" pos:column="29">.<pos:position pos:line="426" pos:column="30"/></operator><name pos:line="426" pos:column="30">in_set<pos:position pos:line="426" pos:column="36"/></name></name></expr>;<pos:position pos:line="426" pos:column="37"/></expr_stmt>
}<pos:position pos:line="427" pos:column="2"/></block></function>

<comment type="block" pos:line="429" pos:column="1">/*
 * Curl_pretransfer() is called immediately before a transfer starts, and only
 * once for one transfer no matter if it has redirects or do multi-pass
 * authentication etc.
 */</comment>
<function><type><name pos:line="434" pos:column="1">CURLcode<pos:position pos:line="434" pos:column="9"/></name></type> <name pos:line="434" pos:column="10">Curl_pretransfer<pos:position pos:line="434" pos:column="26"/></name><parameter_list pos:line="434" pos:column="26">(<parameter><decl><type><name><name pos:line="434" pos:column="27">struct<pos:position pos:line="434" pos:column="33"/></name> <name pos:line="434" pos:column="34">Curl_easy<pos:position pos:line="434" pos:column="43"/></name></name> <modifier pos:line="434" pos:column="44">*<pos:position pos:line="434" pos:column="45"/></modifier></type><name pos:line="434" pos:column="45">data<pos:position pos:line="434" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="434" pos:column="50"/></parameter_list>
<block pos:line="435" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="436" pos:column="3">CURLcode<pos:position pos:line="436" pos:column="11"/></name></type> <name pos:line="436" pos:column="12">result<pos:position pos:line="436" pos:column="18"/></name></decl>;<pos:position pos:line="436" pos:column="19"/></decl_stmt>
  <if pos:line="437" pos:column="3">if<condition pos:line="437" pos:column="5">(<expr><operator pos:line="437" pos:column="6">!<pos:position pos:line="437" pos:column="7"/></operator><name><name pos:line="437" pos:column="7">data<pos:position pos:line="437" pos:column="11"/></name><operator pos:line="437" pos:column="11">-&gt;<pos:position pos:line="437" pos:column="16"/></operator><name pos:line="437" pos:column="13">change<pos:position pos:line="437" pos:column="19"/></name><operator pos:line="437" pos:column="19">.<pos:position pos:line="437" pos:column="20"/></operator><name pos:line="437" pos:column="20">url<pos:position pos:line="437" pos:column="23"/></name></name></expr>)<pos:position pos:line="437" pos:column="24"/></condition><then pos:line="437" pos:column="24"> <block pos:line="437" pos:column="25">{
    <comment type="block" pos:line="438" pos:column="5">/* we can't do anything without URL */</comment>
    <expr_stmt><expr><call><name pos:line="439" pos:column="5">failf<pos:position pos:line="439" pos:column="10"/></name><argument_list pos:line="439" pos:column="10">(<argument><expr><name pos:line="439" pos:column="11">data<pos:position pos:line="439" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="439" pos:column="17">"No URL set!"<pos:position pos:line="439" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="32"/></expr_stmt>
    <return pos:line="440" pos:column="5">return <expr><name pos:line="440" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="440" pos:column="31"/></name></expr>;<pos:position pos:line="440" pos:column="32"/></return>
  }<pos:position pos:line="441" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="443" pos:column="3">/* Init the SSL session ID cache here. We do it here since we want to do it
     after the *_setopt() calls (that could specify the size of the cache) but
     before any transfer takes place. */</comment>
  <expr_stmt><expr><name pos:line="446" pos:column="3">result<pos:position pos:line="446" pos:column="9"/></name> <operator pos:line="446" pos:column="10">=<pos:position pos:line="446" pos:column="11"/></operator> <call><name pos:line="446" pos:column="12">Curl_ssl_initsessions<pos:position pos:line="446" pos:column="33"/></name><argument_list pos:line="446" pos:column="33">(<argument><expr><name pos:line="446" pos:column="34">data<pos:position pos:line="446" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="446" pos:column="40">data<pos:position pos:line="446" pos:column="44"/></name><operator pos:line="446" pos:column="44">-&gt;<pos:position pos:line="446" pos:column="49"/></operator><name pos:line="446" pos:column="46">set<pos:position pos:line="446" pos:column="49"/></name><operator pos:line="446" pos:column="49">.<pos:position pos:line="446" pos:column="50"/></operator><name pos:line="446" pos:column="50">ssl<pos:position pos:line="446" pos:column="53"/></name><operator pos:line="446" pos:column="53">.<pos:position pos:line="446" pos:column="54"/></operator><name pos:line="446" pos:column="54">max_ssl_sessions<pos:position pos:line="446" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="446" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="72"/></expr_stmt>
  <if pos:line="447" pos:column="3">if<condition pos:line="447" pos:column="5">(<expr><name pos:line="447" pos:column="6">result<pos:position pos:line="447" pos:column="12"/></name></expr>)<pos:position pos:line="447" pos:column="13"/></condition><then pos:line="447" pos:column="13">
    <block type="pseudo"><return pos:line="448" pos:column="5">return <expr><name pos:line="448" pos:column="12">result<pos:position pos:line="448" pos:column="18"/></name></expr>;<pos:position pos:line="448" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="450" pos:column="3">data<pos:position pos:line="450" pos:column="7"/></name><operator pos:line="450" pos:column="7">-&gt;<pos:position pos:line="450" pos:column="12"/></operator><name pos:line="450" pos:column="9">set<pos:position pos:line="450" pos:column="12"/></name><operator pos:line="450" pos:column="12">.<pos:position pos:line="450" pos:column="13"/></operator><name pos:line="450" pos:column="13">followlocation<pos:position pos:line="450" pos:column="27"/></name></name><operator pos:line="450" pos:column="27">=<pos:position pos:line="450" pos:column="28"/></operator><literal type="number" pos:line="450" pos:column="28">0<pos:position pos:line="450" pos:column="29"/></literal></expr>;<pos:position pos:line="450" pos:column="30"/></expr_stmt> <comment type="block" pos:line="450" pos:column="31">/* reset the location-follow counter */</comment>
  <expr_stmt><expr><name><name pos:line="451" pos:column="3">data<pos:position pos:line="451" pos:column="7"/></name><operator pos:line="451" pos:column="7">-&gt;<pos:position pos:line="451" pos:column="12"/></operator><name pos:line="451" pos:column="9">state<pos:position pos:line="451" pos:column="14"/></name><operator pos:line="451" pos:column="14">.<pos:position pos:line="451" pos:column="15"/></operator><name pos:line="451" pos:column="15">this_is_a_follow<pos:position pos:line="451" pos:column="31"/></name></name> <operator pos:line="451" pos:column="32">=<pos:position pos:line="451" pos:column="33"/></operator> <name pos:line="451" pos:column="34">FALSE<pos:position pos:line="451" pos:column="39"/></name></expr>;<pos:position pos:line="451" pos:column="40"/></expr_stmt> <comment type="block" pos:line="451" pos:column="41">/* reset this */</comment>
  <expr_stmt><expr><name><name pos:line="452" pos:column="3">data<pos:position pos:line="452" pos:column="7"/></name><operator pos:line="452" pos:column="7">-&gt;<pos:position pos:line="452" pos:column="12"/></operator><name pos:line="452" pos:column="9">state<pos:position pos:line="452" pos:column="14"/></name><operator pos:line="452" pos:column="14">.<pos:position pos:line="452" pos:column="15"/></operator><name pos:line="452" pos:column="15">errorbuf<pos:position pos:line="452" pos:column="23"/></name></name> <operator pos:line="452" pos:column="24">=<pos:position pos:line="452" pos:column="25"/></operator> <name pos:line="452" pos:column="26">FALSE<pos:position pos:line="452" pos:column="31"/></name></expr>;<pos:position pos:line="452" pos:column="32"/></expr_stmt> <comment type="block" pos:line="452" pos:column="33">/* no error has occurred */</comment>
  <expr_stmt><expr><name><name pos:line="453" pos:column="3">data<pos:position pos:line="453" pos:column="7"/></name><operator pos:line="453" pos:column="7">-&gt;<pos:position pos:line="453" pos:column="12"/></operator><name pos:line="453" pos:column="9">state<pos:position pos:line="453" pos:column="14"/></name><operator pos:line="453" pos:column="14">.<pos:position pos:line="453" pos:column="15"/></operator><name pos:line="453" pos:column="15">httpversion<pos:position pos:line="453" pos:column="26"/></name></name> <operator pos:line="453" pos:column="27">=<pos:position pos:line="453" pos:column="28"/></operator> <literal type="number" pos:line="453" pos:column="29">0<pos:position pos:line="453" pos:column="30"/></literal></expr>;<pos:position pos:line="453" pos:column="31"/></expr_stmt> <comment type="block" pos:line="453" pos:column="32">/* don't assume any particular server version */</comment>

  <expr_stmt><expr><name><name pos:line="455" pos:column="3">data<pos:position pos:line="455" pos:column="7"/></name><operator pos:line="455" pos:column="7">-&gt;<pos:position pos:line="455" pos:column="12"/></operator><name pos:line="455" pos:column="9">state<pos:position pos:line="455" pos:column="14"/></name><operator pos:line="455" pos:column="14">.<pos:position pos:line="455" pos:column="15"/></operator><name pos:line="455" pos:column="15">authproblem<pos:position pos:line="455" pos:column="26"/></name></name> <operator pos:line="455" pos:column="27">=<pos:position pos:line="455" pos:column="28"/></operator> <name pos:line="455" pos:column="29">FALSE<pos:position pos:line="455" pos:column="34"/></name></expr>;<pos:position pos:line="455" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="456" pos:column="3">data<pos:position pos:line="456" pos:column="7"/></name><operator pos:line="456" pos:column="7">-&gt;<pos:position pos:line="456" pos:column="12"/></operator><name pos:line="456" pos:column="9">state<pos:position pos:line="456" pos:column="14"/></name><operator pos:line="456" pos:column="14">.<pos:position pos:line="456" pos:column="15"/></operator><name pos:line="456" pos:column="15">authhost<pos:position pos:line="456" pos:column="23"/></name><operator pos:line="456" pos:column="23">.<pos:position pos:line="456" pos:column="24"/></operator><name pos:line="456" pos:column="24">want<pos:position pos:line="456" pos:column="28"/></name></name> <operator pos:line="456" pos:column="29">=<pos:position pos:line="456" pos:column="30"/></operator> <name><name pos:line="456" pos:column="31">data<pos:position pos:line="456" pos:column="35"/></name><operator pos:line="456" pos:column="35">-&gt;<pos:position pos:line="456" pos:column="40"/></operator><name pos:line="456" pos:column="37">set<pos:position pos:line="456" pos:column="40"/></name><operator pos:line="456" pos:column="40">.<pos:position pos:line="456" pos:column="41"/></operator><name pos:line="456" pos:column="41">httpauth<pos:position pos:line="456" pos:column="49"/></name></name></expr>;<pos:position pos:line="456" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="457" pos:column="3">data<pos:position pos:line="457" pos:column="7"/></name><operator pos:line="457" pos:column="7">-&gt;<pos:position pos:line="457" pos:column="12"/></operator><name pos:line="457" pos:column="9">state<pos:position pos:line="457" pos:column="14"/></name><operator pos:line="457" pos:column="14">.<pos:position pos:line="457" pos:column="15"/></operator><name pos:line="457" pos:column="15">authproxy<pos:position pos:line="457" pos:column="24"/></name><operator pos:line="457" pos:column="24">.<pos:position pos:line="457" pos:column="25"/></operator><name pos:line="457" pos:column="25">want<pos:position pos:line="457" pos:column="29"/></name></name> <operator pos:line="457" pos:column="30">=<pos:position pos:line="457" pos:column="31"/></operator> <name><name pos:line="457" pos:column="32">data<pos:position pos:line="457" pos:column="36"/></name><operator pos:line="457" pos:column="36">-&gt;<pos:position pos:line="457" pos:column="41"/></operator><name pos:line="457" pos:column="38">set<pos:position pos:line="457" pos:column="41"/></name><operator pos:line="457" pos:column="41">.<pos:position pos:line="457" pos:column="42"/></operator><name pos:line="457" pos:column="42">proxyauth<pos:position pos:line="457" pos:column="51"/></name></name></expr>;<pos:position pos:line="457" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="458" pos:column="3">Curl_safefree<pos:position pos:line="458" pos:column="16"/></name><argument_list pos:line="458" pos:column="16">(<argument><expr><name><name pos:line="458" pos:column="17">data<pos:position pos:line="458" pos:column="21"/></name><operator pos:line="458" pos:column="21">-&gt;<pos:position pos:line="458" pos:column="26"/></operator><name pos:line="458" pos:column="23">info<pos:position pos:line="458" pos:column="27"/></name><operator pos:line="458" pos:column="27">.<pos:position pos:line="458" pos:column="28"/></operator><name pos:line="458" pos:column="28">wouldredirect<pos:position pos:line="458" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="458" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="459" pos:column="3">data<pos:position pos:line="459" pos:column="7"/></name><operator pos:line="459" pos:column="7">-&gt;<pos:position pos:line="459" pos:column="12"/></operator><name pos:line="459" pos:column="9">info<pos:position pos:line="459" pos:column="13"/></name><operator pos:line="459" pos:column="13">.<pos:position pos:line="459" pos:column="14"/></operator><name pos:line="459" pos:column="14">wouldredirect<pos:position pos:line="459" pos:column="27"/></name></name> <operator pos:line="459" pos:column="28">=<pos:position pos:line="459" pos:column="29"/></operator> <name pos:line="459" pos:column="30">NULL<pos:position pos:line="459" pos:column="34"/></name></expr>;<pos:position pos:line="459" pos:column="35"/></expr_stmt>

  <if pos:line="461" pos:column="3">if<condition pos:line="461" pos:column="5">(<expr><name><name pos:line="461" pos:column="6">data<pos:position pos:line="461" pos:column="10"/></name><operator pos:line="461" pos:column="10">-&gt;<pos:position pos:line="461" pos:column="15"/></operator><name pos:line="461" pos:column="12">set<pos:position pos:line="461" pos:column="15"/></name><operator pos:line="461" pos:column="15">.<pos:position pos:line="461" pos:column="16"/></operator><name pos:line="461" pos:column="16">httpreq<pos:position pos:line="461" pos:column="23"/></name></name> <operator pos:line="461" pos:column="24">==<pos:position pos:line="461" pos:column="26"/></operator> <name pos:line="461" pos:column="27">HTTPREQ_PUT<pos:position pos:line="461" pos:column="38"/></name></expr>)<pos:position pos:line="461" pos:column="39"/></condition><then pos:line="461" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="462" pos:column="5">data<pos:position pos:line="462" pos:column="9"/></name><operator pos:line="462" pos:column="9">-&gt;<pos:position pos:line="462" pos:column="14"/></operator><name pos:line="462" pos:column="11">state<pos:position pos:line="462" pos:column="16"/></name><operator pos:line="462" pos:column="16">.<pos:position pos:line="462" pos:column="17"/></operator><name pos:line="462" pos:column="17">infilesize<pos:position pos:line="462" pos:column="27"/></name></name> <operator pos:line="462" pos:column="28">=<pos:position pos:line="462" pos:column="29"/></operator> <name><name pos:line="462" pos:column="30">data<pos:position pos:line="462" pos:column="34"/></name><operator pos:line="462" pos:column="34">-&gt;<pos:position pos:line="462" pos:column="39"/></operator><name pos:line="462" pos:column="36">set<pos:position pos:line="462" pos:column="39"/></name><operator pos:line="462" pos:column="39">.<pos:position pos:line="462" pos:column="40"/></operator><name pos:line="462" pos:column="40">filesize<pos:position pos:line="462" pos:column="48"/></name></name></expr>;<pos:position pos:line="462" pos:column="49"/></expr_stmt></block></then>
  <else pos:line="463" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="464" pos:column="5">data<pos:position pos:line="464" pos:column="9"/></name><operator pos:line="464" pos:column="9">-&gt;<pos:position pos:line="464" pos:column="14"/></operator><name pos:line="464" pos:column="11">state<pos:position pos:line="464" pos:column="16"/></name><operator pos:line="464" pos:column="16">.<pos:position pos:line="464" pos:column="17"/></operator><name pos:line="464" pos:column="17">infilesize<pos:position pos:line="464" pos:column="27"/></name></name> <operator pos:line="464" pos:column="28">=<pos:position pos:line="464" pos:column="29"/></operator> <name><name pos:line="464" pos:column="30">data<pos:position pos:line="464" pos:column="34"/></name><operator pos:line="464" pos:column="34">-&gt;<pos:position pos:line="464" pos:column="39"/></operator><name pos:line="464" pos:column="36">set<pos:position pos:line="464" pos:column="39"/></name><operator pos:line="464" pos:column="39">.<pos:position pos:line="464" pos:column="40"/></operator><name pos:line="464" pos:column="40">postfieldsize<pos:position pos:line="464" pos:column="53"/></name></name></expr>;<pos:position pos:line="464" pos:column="54"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="466" pos:column="3">/* If there is a list of cookie files to read, do it now! */</comment>
  <if pos:line="467" pos:column="3">if<condition pos:line="467" pos:column="5">(<expr><name><name pos:line="467" pos:column="6">data<pos:position pos:line="467" pos:column="10"/></name><operator pos:line="467" pos:column="10">-&gt;<pos:position pos:line="467" pos:column="15"/></operator><name pos:line="467" pos:column="12">change<pos:position pos:line="467" pos:column="18"/></name><operator pos:line="467" pos:column="18">.<pos:position pos:line="467" pos:column="19"/></operator><name pos:line="467" pos:column="19">cookielist<pos:position pos:line="467" pos:column="29"/></name></name></expr>)<pos:position pos:line="467" pos:column="30"/></condition><then pos:line="467" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="468" pos:column="5">Curl_cookie_loadfiles<pos:position pos:line="468" pos:column="26"/></name><argument_list pos:line="468" pos:column="26">(<argument><expr><name pos:line="468" pos:column="27">data<pos:position pos:line="468" pos:column="31"/></name></expr></argument>)<pos:position pos:line="468" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="33"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="470" pos:column="3">/* If there is a list of host pairs to deal with */</comment>
  <if pos:line="471" pos:column="3">if<condition pos:line="471" pos:column="5">(<expr><name><name pos:line="471" pos:column="6">data<pos:position pos:line="471" pos:column="10"/></name><operator pos:line="471" pos:column="10">-&gt;<pos:position pos:line="471" pos:column="15"/></operator><name pos:line="471" pos:column="12">change<pos:position pos:line="471" pos:column="18"/></name><operator pos:line="471" pos:column="18">.<pos:position pos:line="471" pos:column="19"/></operator><name pos:line="471" pos:column="19">resolve<pos:position pos:line="471" pos:column="26"/></name></name></expr>)<pos:position pos:line="471" pos:column="27"/></condition><then pos:line="471" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="472" pos:column="5">result<pos:position pos:line="472" pos:column="11"/></name> <operator pos:line="472" pos:column="12">=<pos:position pos:line="472" pos:column="13"/></operator> <call><name pos:line="472" pos:column="14">Curl_loadhostpairs<pos:position pos:line="472" pos:column="32"/></name><argument_list pos:line="472" pos:column="32">(<argument><expr><name pos:line="472" pos:column="33">data<pos:position pos:line="472" pos:column="37"/></name></expr></argument>)<pos:position pos:line="472" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="474" pos:column="3">if<condition pos:line="474" pos:column="5">(<expr><operator pos:line="474" pos:column="6">!<pos:position pos:line="474" pos:column="7"/></operator><name pos:line="474" pos:column="7">result<pos:position pos:line="474" pos:column="13"/></name></expr>)<pos:position pos:line="474" pos:column="14"/></condition><then pos:line="474" pos:column="14"> <block pos:line="474" pos:column="15">{
    <comment type="block" pos:line="475" pos:column="5">/* Allow data-&gt;set.use_port to set which port to use. This needs to be
     * disabled for example when we follow Location: headers to URLs using
     * different ports! */</comment>
    <expr_stmt><expr><name><name pos:line="478" pos:column="5">data<pos:position pos:line="478" pos:column="9"/></name><operator pos:line="478" pos:column="9">-&gt;<pos:position pos:line="478" pos:column="14"/></operator><name pos:line="478" pos:column="11">state<pos:position pos:line="478" pos:column="16"/></name><operator pos:line="478" pos:column="16">.<pos:position pos:line="478" pos:column="17"/></operator><name pos:line="478" pos:column="17">allow_port<pos:position pos:line="478" pos:column="27"/></name></name> <operator pos:line="478" pos:column="28">=<pos:position pos:line="478" pos:column="29"/></operator> <name pos:line="478" pos:column="30">TRUE<pos:position pos:line="478" pos:column="34"/></name></expr>;<pos:position pos:line="478" pos:column="35"/></expr_stmt>

<cpp:if pos:line="480" pos:column="1">#<cpp:directive pos:line="480" pos:column="2">if<pos:position pos:line="480" pos:column="4"/></cpp:directive> <expr><call><name pos:line="480" pos:column="5">defined<pos:position pos:line="480" pos:column="12"/></name><argument_list pos:line="480" pos:column="12">(<argument><expr><name pos:line="480" pos:column="13">HAVE_SIGNAL<pos:position pos:line="480" pos:column="24"/></name></expr></argument>)<pos:position pos:line="480" pos:column="25"/></argument_list></call> <operator pos:line="480" pos:column="26">&amp;&amp;<pos:position pos:line="480" pos:column="36"/></operator> <call><name pos:line="480" pos:column="29">defined<pos:position pos:line="480" pos:column="36"/></name><argument_list pos:line="480" pos:column="36">(<argument><expr><name pos:line="480" pos:column="37">SIGPIPE<pos:position pos:line="480" pos:column="44"/></name></expr></argument>)<pos:position pos:line="480" pos:column="45"/></argument_list></call> <operator pos:line="480" pos:column="46">&amp;&amp;<pos:position pos:line="480" pos:column="56"/></operator> <operator pos:line="480" pos:column="49">!<pos:position pos:line="480" pos:column="50"/></operator><call><name pos:line="480" pos:column="50">defined<pos:position pos:line="480" pos:column="57"/></name><argument_list pos:line="480" pos:column="57">(<argument><expr><name pos:line="480" pos:column="58">HAVE_MSG_NOSIGNAL<pos:position pos:line="480" pos:column="75"/></name></expr></argument>)<pos:position pos:line="480" pos:column="76"/></argument_list></call></expr></cpp:if>
    <comment type="block" format="doxygen" pos:line="481" pos:column="5">/*************************************************************
     * Tell signal handler to ignore SIGPIPE
     *************************************************************/</comment>
    <if pos:line="484" pos:column="5">if<condition pos:line="484" pos:column="7">(<expr><operator pos:line="484" pos:column="8">!<pos:position pos:line="484" pos:column="9"/></operator><name><name pos:line="484" pos:column="9">data<pos:position pos:line="484" pos:column="13"/></name><operator pos:line="484" pos:column="13">-&gt;<pos:position pos:line="484" pos:column="18"/></operator><name pos:line="484" pos:column="15">set<pos:position pos:line="484" pos:column="18"/></name><operator pos:line="484" pos:column="18">.<pos:position pos:line="484" pos:column="19"/></operator><name pos:line="484" pos:column="19">no_signal<pos:position pos:line="484" pos:column="28"/></name></name></expr>)<pos:position pos:line="484" pos:column="29"/></condition><then pos:line="484" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="485" pos:column="7">data<pos:position pos:line="485" pos:column="11"/></name><operator pos:line="485" pos:column="11">-&gt;<pos:position pos:line="485" pos:column="16"/></operator><name pos:line="485" pos:column="13">state<pos:position pos:line="485" pos:column="18"/></name><operator pos:line="485" pos:column="18">.<pos:position pos:line="485" pos:column="19"/></operator><name pos:line="485" pos:column="19">prev_signal<pos:position pos:line="485" pos:column="30"/></name></name> <operator pos:line="485" pos:column="31">=<pos:position pos:line="485" pos:column="32"/></operator> <call><name pos:line="485" pos:column="33">signal<pos:position pos:line="485" pos:column="39"/></name><argument_list pos:line="485" pos:column="39">(<argument><expr><name pos:line="485" pos:column="40">SIGPIPE<pos:position pos:line="485" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="485" pos:column="49">SIG_IGN<pos:position pos:line="485" pos:column="56"/></name></expr></argument>)<pos:position pos:line="485" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="58"/></expr_stmt></block></then></if>
<cpp:endif pos:line="486" pos:column="1">#<cpp:directive pos:line="486" pos:column="2">endif<pos:position pos:line="486" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="488" pos:column="5">Curl_initinfo<pos:position pos:line="488" pos:column="18"/></name><argument_list pos:line="488" pos:column="18">(<argument><expr><name pos:line="488" pos:column="19">data<pos:position pos:line="488" pos:column="23"/></name></expr></argument>)<pos:position pos:line="488" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="25"/></expr_stmt> <comment type="block" pos:line="488" pos:column="26">/* reset session-specific information "variables" */</comment>
    <expr_stmt><expr><call><name pos:line="489" pos:column="5">Curl_pgrsResetTimesSizes<pos:position pos:line="489" pos:column="29"/></name><argument_list pos:line="489" pos:column="29">(<argument><expr><name pos:line="489" pos:column="30">data<pos:position pos:line="489" pos:column="34"/></name></expr></argument>)<pos:position pos:line="489" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="490" pos:column="5">Curl_pgrsStartNow<pos:position pos:line="490" pos:column="22"/></name><argument_list pos:line="490" pos:column="22">(<argument><expr><name pos:line="490" pos:column="23">data<pos:position pos:line="490" pos:column="27"/></name></expr></argument>)<pos:position pos:line="490" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="29"/></expr_stmt>

    <if pos:line="492" pos:column="5">if<condition pos:line="492" pos:column="7">(<expr><name><name pos:line="492" pos:column="8">data<pos:position pos:line="492" pos:column="12"/></name><operator pos:line="492" pos:column="12">-&gt;<pos:position pos:line="492" pos:column="17"/></operator><name pos:line="492" pos:column="14">set<pos:position pos:line="492" pos:column="17"/></name><operator pos:line="492" pos:column="17">.<pos:position pos:line="492" pos:column="18"/></operator><name pos:line="492" pos:column="18">timeout<pos:position pos:line="492" pos:column="25"/></name></name></expr>)<pos:position pos:line="492" pos:column="26"/></condition><then pos:line="492" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="493" pos:column="7">Curl_expire<pos:position pos:line="493" pos:column="18"/></name><argument_list pos:line="493" pos:column="18">(<argument><expr><name pos:line="493" pos:column="19">data<pos:position pos:line="493" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="25">data<pos:position pos:line="493" pos:column="29"/></name><operator pos:line="493" pos:column="29">-&gt;<pos:position pos:line="493" pos:column="34"/></operator><name pos:line="493" pos:column="31">set<pos:position pos:line="493" pos:column="34"/></name><operator pos:line="493" pos:column="34">.<pos:position pos:line="493" pos:column="35"/></operator><name pos:line="493" pos:column="35">timeout<pos:position pos:line="493" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="493" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="44"/></expr_stmt></block></then></if>

    <if pos:line="495" pos:column="5">if<condition pos:line="495" pos:column="7">(<expr><name><name pos:line="495" pos:column="8">data<pos:position pos:line="495" pos:column="12"/></name><operator pos:line="495" pos:column="12">-&gt;<pos:position pos:line="495" pos:column="17"/></operator><name pos:line="495" pos:column="14">set<pos:position pos:line="495" pos:column="17"/></name><operator pos:line="495" pos:column="17">.<pos:position pos:line="495" pos:column="18"/></operator><name pos:line="495" pos:column="18">connecttimeout<pos:position pos:line="495" pos:column="32"/></name></name></expr>)<pos:position pos:line="495" pos:column="33"/></condition><then pos:line="495" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="496" pos:column="7">Curl_expire<pos:position pos:line="496" pos:column="18"/></name><argument_list pos:line="496" pos:column="18">(<argument><expr><name pos:line="496" pos:column="19">data<pos:position pos:line="496" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="496" pos:column="25">data<pos:position pos:line="496" pos:column="29"/></name><operator pos:line="496" pos:column="29">-&gt;<pos:position pos:line="496" pos:column="34"/></operator><name pos:line="496" pos:column="31">set<pos:position pos:line="496" pos:column="34"/></name><operator pos:line="496" pos:column="34">.<pos:position pos:line="496" pos:column="35"/></operator><name pos:line="496" pos:column="35">connecttimeout<pos:position pos:line="496" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="496" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="51"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="498" pos:column="5">/* In case the handle is re-used and an authentication method was picked
       in the session we need to make sure we only use the one(s) we now
       consider to be fine */</comment>
    <expr_stmt><expr><name><name pos:line="501" pos:column="5">data<pos:position pos:line="501" pos:column="9"/></name><operator pos:line="501" pos:column="9">-&gt;<pos:position pos:line="501" pos:column="14"/></operator><name pos:line="501" pos:column="11">state<pos:position pos:line="501" pos:column="16"/></name><operator pos:line="501" pos:column="16">.<pos:position pos:line="501" pos:column="17"/></operator><name pos:line="501" pos:column="17">authhost<pos:position pos:line="501" pos:column="25"/></name><operator pos:line="501" pos:column="25">.<pos:position pos:line="501" pos:column="26"/></operator><name pos:line="501" pos:column="26">picked<pos:position pos:line="501" pos:column="32"/></name></name> <operator pos:line="501" pos:column="33">&amp;=<pos:position pos:line="501" pos:column="39"/></operator> <name><name pos:line="501" pos:column="36">data<pos:position pos:line="501" pos:column="40"/></name><operator pos:line="501" pos:column="40">-&gt;<pos:position pos:line="501" pos:column="45"/></operator><name pos:line="501" pos:column="42">state<pos:position pos:line="501" pos:column="47"/></name><operator pos:line="501" pos:column="47">.<pos:position pos:line="501" pos:column="48"/></operator><name pos:line="501" pos:column="48">authhost<pos:position pos:line="501" pos:column="56"/></name><operator pos:line="501" pos:column="56">.<pos:position pos:line="501" pos:column="57"/></operator><name pos:line="501" pos:column="57">want<pos:position pos:line="501" pos:column="61"/></name></name></expr>;<pos:position pos:line="501" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="502" pos:column="5">data<pos:position pos:line="502" pos:column="9"/></name><operator pos:line="502" pos:column="9">-&gt;<pos:position pos:line="502" pos:column="14"/></operator><name pos:line="502" pos:column="11">state<pos:position pos:line="502" pos:column="16"/></name><operator pos:line="502" pos:column="16">.<pos:position pos:line="502" pos:column="17"/></operator><name pos:line="502" pos:column="17">authproxy<pos:position pos:line="502" pos:column="26"/></name><operator pos:line="502" pos:column="26">.<pos:position pos:line="502" pos:column="27"/></operator><name pos:line="502" pos:column="27">picked<pos:position pos:line="502" pos:column="33"/></name></name> <operator pos:line="502" pos:column="34">&amp;=<pos:position pos:line="502" pos:column="40"/></operator> <name><name pos:line="502" pos:column="37">data<pos:position pos:line="502" pos:column="41"/></name><operator pos:line="502" pos:column="41">-&gt;<pos:position pos:line="502" pos:column="46"/></operator><name pos:line="502" pos:column="43">state<pos:position pos:line="502" pos:column="48"/></name><operator pos:line="502" pos:column="48">.<pos:position pos:line="502" pos:column="49"/></operator><name pos:line="502" pos:column="49">authproxy<pos:position pos:line="502" pos:column="58"/></name><operator pos:line="502" pos:column="58">.<pos:position pos:line="502" pos:column="59"/></operator><name pos:line="502" pos:column="59">want<pos:position pos:line="502" pos:column="63"/></name></name></expr>;<pos:position pos:line="502" pos:column="64"/></expr_stmt>

    <if pos:line="504" pos:column="5">if<condition pos:line="504" pos:column="7">(<expr><name><name pos:line="504" pos:column="8">data<pos:position pos:line="504" pos:column="12"/></name><operator pos:line="504" pos:column="12">-&gt;<pos:position pos:line="504" pos:column="17"/></operator><name pos:line="504" pos:column="14">set<pos:position pos:line="504" pos:column="17"/></name><operator pos:line="504" pos:column="17">.<pos:position pos:line="504" pos:column="18"/></operator><name pos:line="504" pos:column="18">wildcardmatch<pos:position pos:line="504" pos:column="31"/></name></name></expr>)<pos:position pos:line="504" pos:column="32"/></condition><then pos:line="504" pos:column="32"> <block pos:line="504" pos:column="33">{
      <decl_stmt><decl><type><name><name pos:line="505" pos:column="7">struct<pos:position pos:line="505" pos:column="13"/></name> <name pos:line="505" pos:column="14">WildcardData<pos:position pos:line="505" pos:column="26"/></name></name> <modifier pos:line="505" pos:column="27">*<pos:position pos:line="505" pos:column="28"/></modifier></type><name pos:line="505" pos:column="28">wc<pos:position pos:line="505" pos:column="30"/></name> <init pos:line="505" pos:column="31">= <expr><operator pos:line="505" pos:column="33">&amp;<pos:position pos:line="505" pos:column="38"/></operator><name><name pos:line="505" pos:column="34">data<pos:position pos:line="505" pos:column="38"/></name><operator pos:line="505" pos:column="38">-&gt;<pos:position pos:line="505" pos:column="43"/></operator><name pos:line="505" pos:column="40">wildcard<pos:position pos:line="505" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="505" pos:column="49"/></decl_stmt>
      <if pos:line="506" pos:column="7">if<condition pos:line="506" pos:column="9">(<expr><operator pos:line="506" pos:column="10">!<pos:position pos:line="506" pos:column="11"/></operator><name><name pos:line="506" pos:column="11">wc<pos:position pos:line="506" pos:column="13"/></name><operator pos:line="506" pos:column="13">-&gt;<pos:position pos:line="506" pos:column="18"/></operator><name pos:line="506" pos:column="15">filelist<pos:position pos:line="506" pos:column="23"/></name></name></expr>)<pos:position pos:line="506" pos:column="24"/></condition><then pos:line="506" pos:column="24"> <block pos:line="506" pos:column="25">{
        <expr_stmt><expr><name pos:line="507" pos:column="9">result<pos:position pos:line="507" pos:column="15"/></name> <operator pos:line="507" pos:column="16">=<pos:position pos:line="507" pos:column="17"/></operator> <call><name pos:line="507" pos:column="18">Curl_wildcard_init<pos:position pos:line="507" pos:column="36"/></name><argument_list pos:line="507" pos:column="36">(<argument><expr><name pos:line="507" pos:column="37">wc<pos:position pos:line="507" pos:column="39"/></name></expr></argument>)<pos:position pos:line="507" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="507" pos:column="41"/></expr_stmt> <comment type="block" pos:line="507" pos:column="42">/* init wildcard structures */</comment>
        <if pos:line="508" pos:column="9">if<condition pos:line="508" pos:column="11">(<expr><name pos:line="508" pos:column="12">result<pos:position pos:line="508" pos:column="18"/></name></expr>)<pos:position pos:line="508" pos:column="19"/></condition><then pos:line="508" pos:column="19">
          <block type="pseudo"><return pos:line="509" pos:column="11">return <expr><name pos:line="509" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="509" pos:column="37"/></name></expr>;<pos:position pos:line="509" pos:column="38"/></return></block></then></if>
      }<pos:position pos:line="510" pos:column="8"/></block></then></if>
    }<pos:position pos:line="511" pos:column="6"/></block></then></if>

  }<pos:position pos:line="513" pos:column="4"/></block></then></if>

  <return pos:line="515" pos:column="3">return <expr><name pos:line="515" pos:column="10">result<pos:position pos:line="515" pos:column="16"/></name></expr>;<pos:position pos:line="515" pos:column="17"/></return>
}<pos:position pos:line="516" pos:column="2"/></block></function>

<comment type="block" pos:line="518" pos:column="1">/*
 * Curl_posttransfer() is called immediately after a transfer ends
 */</comment>
<function><type><name pos:line="521" pos:column="1">CURLcode<pos:position pos:line="521" pos:column="9"/></name></type> <name pos:line="521" pos:column="10">Curl_posttransfer<pos:position pos:line="521" pos:column="27"/></name><parameter_list pos:line="521" pos:column="27">(<parameter><decl><type><name><name pos:line="521" pos:column="28">struct<pos:position pos:line="521" pos:column="34"/></name> <name pos:line="521" pos:column="35">Curl_easy<pos:position pos:line="521" pos:column="44"/></name></name> <modifier pos:line="521" pos:column="45">*<pos:position pos:line="521" pos:column="46"/></modifier></type><name pos:line="521" pos:column="46">data<pos:position pos:line="521" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="521" pos:column="51"/></parameter_list>
<block pos:line="522" pos:column="1">{
<cpp:if pos:line="523" pos:column="1">#<cpp:directive pos:line="523" pos:column="2">if<pos:position pos:line="523" pos:column="4"/></cpp:directive> <expr><call><name pos:line="523" pos:column="5">defined<pos:position pos:line="523" pos:column="12"/></name><argument_list pos:line="523" pos:column="12">(<argument><expr><name pos:line="523" pos:column="13">HAVE_SIGNAL<pos:position pos:line="523" pos:column="24"/></name></expr></argument>)<pos:position pos:line="523" pos:column="25"/></argument_list></call> <operator pos:line="523" pos:column="26">&amp;&amp;<pos:position pos:line="523" pos:column="36"/></operator> <call><name pos:line="523" pos:column="29">defined<pos:position pos:line="523" pos:column="36"/></name><argument_list pos:line="523" pos:column="36">(<argument><expr><name pos:line="523" pos:column="37">SIGPIPE<pos:position pos:line="523" pos:column="44"/></name></expr></argument>)<pos:position pos:line="523" pos:column="45"/></argument_list></call> <operator pos:line="523" pos:column="46">&amp;&amp;<pos:position pos:line="523" pos:column="56"/></operator> <operator pos:line="523" pos:column="49">!<pos:position pos:line="523" pos:column="50"/></operator><call><name pos:line="523" pos:column="50">defined<pos:position pos:line="523" pos:column="57"/></name><argument_list pos:line="523" pos:column="57">(<argument><expr><name pos:line="523" pos:column="58">HAVE_MSG_NOSIGNAL<pos:position pos:line="523" pos:column="75"/></name></expr></argument>)<pos:position pos:line="523" pos:column="76"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="524" pos:column="3">/* restore the signal handler for SIGPIPE before we get back */</comment>
  <if pos:line="525" pos:column="3">if<condition pos:line="525" pos:column="5">(<expr><operator pos:line="525" pos:column="6">!<pos:position pos:line="525" pos:column="7"/></operator><name><name pos:line="525" pos:column="7">data<pos:position pos:line="525" pos:column="11"/></name><operator pos:line="525" pos:column="11">-&gt;<pos:position pos:line="525" pos:column="16"/></operator><name pos:line="525" pos:column="13">set<pos:position pos:line="525" pos:column="16"/></name><operator pos:line="525" pos:column="16">.<pos:position pos:line="525" pos:column="17"/></operator><name pos:line="525" pos:column="17">no_signal<pos:position pos:line="525" pos:column="26"/></name></name></expr>)<pos:position pos:line="525" pos:column="27"/></condition><then pos:line="525" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="526" pos:column="5">signal<pos:position pos:line="526" pos:column="11"/></name><argument_list pos:line="526" pos:column="11">(<argument><expr><name pos:line="526" pos:column="12">SIGPIPE<pos:position pos:line="526" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="526" pos:column="21">data<pos:position pos:line="526" pos:column="25"/></name><operator pos:line="526" pos:column="25">-&gt;<pos:position pos:line="526" pos:column="30"/></operator><name pos:line="526" pos:column="27">state<pos:position pos:line="526" pos:column="32"/></name><operator pos:line="526" pos:column="32">.<pos:position pos:line="526" pos:column="33"/></operator><name pos:line="526" pos:column="33">prev_signal<pos:position pos:line="526" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="526" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="46"/></expr_stmt></block></then></if>
<cpp:else pos:line="527" pos:column="1">#<cpp:directive pos:line="527" pos:column="2">else<pos:position pos:line="527" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="528" pos:column="3">(<pos:position pos:line="528" pos:column="4"/></operator><name pos:line="528" pos:column="4">void<pos:position pos:line="528" pos:column="8"/></name><operator pos:line="528" pos:column="8">)<pos:position pos:line="528" pos:column="9"/></operator><name pos:line="528" pos:column="9">data<pos:position pos:line="528" pos:column="13"/></name></expr>;<pos:position pos:line="528" pos:column="14"/></expr_stmt> <comment type="block" pos:line="528" pos:column="15">/* unused parameter */</comment>
<cpp:endif pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">endif<pos:position pos:line="529" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="531" pos:column="3">return <expr><name pos:line="531" pos:column="10">CURLE_OK<pos:position pos:line="531" pos:column="18"/></name></expr>;<pos:position pos:line="531" pos:column="19"/></return>
}<pos:position pos:line="532" pos:column="2"/></block></function>

<cpp:ifndef pos:line="534" pos:column="1">#<cpp:directive pos:line="534" pos:column="2">ifndef<pos:position pos:line="534" pos:column="8"/></cpp:directive> <name pos:line="534" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="534" pos:column="26"/></name></cpp:ifndef>
<comment type="block" pos:line="535" pos:column="1">/*
 * strlen_url() returns the length of the given URL if the spaces within the
 * URL were properly URL encoded.
 */</comment>
<function><specifier pos:line="539" pos:column="1">static<pos:position pos:line="539" pos:column="7"/></specifier> <type><name pos:line="539" pos:column="8">size_t<pos:position pos:line="539" pos:column="14"/></name></type> <name pos:line="539" pos:column="15">strlen_url<pos:position pos:line="539" pos:column="25"/></name><parameter_list pos:line="539" pos:column="25">(<parameter><decl><type><specifier pos:line="539" pos:column="26">const<pos:position pos:line="539" pos:column="31"/></specifier> <name pos:line="539" pos:column="32">char<pos:position pos:line="539" pos:column="36"/></name> <modifier pos:line="539" pos:column="37">*<pos:position pos:line="539" pos:column="38"/></modifier></type><name pos:line="539" pos:column="38">url<pos:position pos:line="539" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="539" pos:column="42"/></parameter_list>
<block pos:line="540" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="541" pos:column="3">const<pos:position pos:line="541" pos:column="8"/></specifier> <name pos:line="541" pos:column="9">unsigned<pos:position pos:line="541" pos:column="17"/></name> <name pos:line="541" pos:column="18">char<pos:position pos:line="541" pos:column="22"/></name> <modifier pos:line="541" pos:column="23">*<pos:position pos:line="541" pos:column="24"/></modifier></type><name pos:line="541" pos:column="24">ptr<pos:position pos:line="541" pos:column="27"/></name></decl>;<pos:position pos:line="541" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="542" pos:column="3">size_t<pos:position pos:line="542" pos:column="9"/></name></type> <name pos:line="542" pos:column="10">newlen<pos:position pos:line="542" pos:column="16"/></name><init pos:line="542" pos:column="16">=<expr><literal type="number" pos:line="542" pos:column="17">0<pos:position pos:line="542" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="542" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="543" pos:column="3">bool<pos:position pos:line="543" pos:column="7"/></name></type> <name pos:line="543" pos:column="8">left<pos:position pos:line="543" pos:column="12"/></name><init pos:line="543" pos:column="12">=<expr><name pos:line="543" pos:column="13">TRUE<pos:position pos:line="543" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="543" pos:column="18"/></decl_stmt> <comment type="block" pos:line="543" pos:column="19">/* left side of the ? */</comment>

  <for pos:line="545" pos:column="3">for<control pos:line="545" pos:column="6">(<init><expr><name pos:line="545" pos:column="7">ptr<pos:position pos:line="545" pos:column="10"/></name><operator pos:line="545" pos:column="10">=<pos:position pos:line="545" pos:column="11"/></operator><operator pos:line="545" pos:column="11">(<pos:position pos:line="545" pos:column="12"/></operator><name pos:line="545" pos:column="12">unsigned<pos:position pos:line="545" pos:column="20"/></name> <name pos:line="545" pos:column="21">char<pos:position pos:line="545" pos:column="25"/></name> <operator pos:line="545" pos:column="26">*<pos:position pos:line="545" pos:column="27"/></operator><operator pos:line="545" pos:column="27">)<pos:position pos:line="545" pos:column="28"/></operator><name pos:line="545" pos:column="28">url<pos:position pos:line="545" pos:column="31"/></name></expr>;<pos:position pos:line="545" pos:column="32"/></init> <condition><expr><operator pos:line="545" pos:column="33">*<pos:position pos:line="545" pos:column="34"/></operator><name pos:line="545" pos:column="34">ptr<pos:position pos:line="545" pos:column="37"/></name></expr>;<pos:position pos:line="545" pos:column="38"/></condition> <incr><expr><name pos:line="545" pos:column="39">ptr<pos:position pos:line="545" pos:column="42"/></name><operator pos:line="545" pos:column="42">++<pos:position pos:line="545" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="545" pos:column="45"/></control> <block pos:line="545" pos:column="46">{
    <switch pos:line="546" pos:column="5">switch<condition pos:line="546" pos:column="11">(<expr><operator pos:line="546" pos:column="12">*<pos:position pos:line="546" pos:column="13"/></operator><name pos:line="546" pos:column="13">ptr<pos:position pos:line="546" pos:column="16"/></name></expr>)<pos:position pos:line="546" pos:column="17"/></condition> <block pos:line="546" pos:column="18">{
    <case pos:line="547" pos:column="5">case <expr><literal type="char" pos:line="547" pos:column="10">'?'<pos:position pos:line="547" pos:column="13"/></literal></expr>:<pos:position pos:line="547" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="548" pos:column="7">left<pos:position pos:line="548" pos:column="11"/></name><operator pos:line="548" pos:column="11">=<pos:position pos:line="548" pos:column="12"/></operator><name pos:line="548" pos:column="12">FALSE<pos:position pos:line="548" pos:column="17"/></name></expr>;<pos:position pos:line="548" pos:column="18"/></expr_stmt>
      <comment type="block" pos:line="549" pos:column="7">/* fall through */</comment>
    <default pos:line="550" pos:column="5">default:<pos:position pos:line="550" pos:column="13"/></default>
      <if pos:line="551" pos:column="7">if<condition pos:line="551" pos:column="9">(<expr><operator pos:line="551" pos:column="10">*<pos:position pos:line="551" pos:column="11"/></operator><name pos:line="551" pos:column="11">ptr<pos:position pos:line="551" pos:column="14"/></name> <operator pos:line="551" pos:column="15">&gt;=<pos:position pos:line="551" pos:column="20"/></operator> <literal type="number" pos:line="551" pos:column="18">0x80<pos:position pos:line="551" pos:column="22"/></literal></expr>)<pos:position pos:line="551" pos:column="23"/></condition><then pos:line="551" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="552" pos:column="9">newlen<pos:position pos:line="552" pos:column="15"/></name> <operator pos:line="552" pos:column="16">+=<pos:position pos:line="552" pos:column="18"/></operator> <literal type="number" pos:line="552" pos:column="19">2<pos:position pos:line="552" pos:column="20"/></literal></expr>;<pos:position pos:line="552" pos:column="21"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="553" pos:column="7">newlen<pos:position pos:line="553" pos:column="13"/></name><operator pos:line="553" pos:column="13">++<pos:position pos:line="553" pos:column="15"/></operator></expr>;<pos:position pos:line="553" pos:column="16"/></expr_stmt>
      <break pos:line="554" pos:column="7">break;<pos:position pos:line="554" pos:column="13"/></break>
    <case pos:line="555" pos:column="5">case <expr><literal type="char" pos:line="555" pos:column="10">' '<pos:position pos:line="555" pos:column="13"/></literal></expr>:<pos:position pos:line="555" pos:column="14"/></case>
      <if pos:line="556" pos:column="7">if<condition pos:line="556" pos:column="9">(<expr><name pos:line="556" pos:column="10">left<pos:position pos:line="556" pos:column="14"/></name></expr>)<pos:position pos:line="556" pos:column="15"/></condition><then pos:line="556" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="557" pos:column="9">newlen<pos:position pos:line="557" pos:column="15"/></name><operator pos:line="557" pos:column="15">+=<pos:position pos:line="557" pos:column="17"/></operator><literal type="number" pos:line="557" pos:column="17">3<pos:position pos:line="557" pos:column="18"/></literal></expr>;<pos:position pos:line="557" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="558" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="559" pos:column="9">newlen<pos:position pos:line="559" pos:column="15"/></name><operator pos:line="559" pos:column="15">++<pos:position pos:line="559" pos:column="17"/></operator></expr>;<pos:position pos:line="559" pos:column="18"/></expr_stmt></block></else></if>
      <break pos:line="560" pos:column="7">break;<pos:position pos:line="560" pos:column="13"/></break>
    }<pos:position pos:line="561" pos:column="6"/></block></switch>
  }<pos:position pos:line="562" pos:column="4"/></block></for>
  <return pos:line="563" pos:column="3">return <expr><name pos:line="563" pos:column="10">newlen<pos:position pos:line="563" pos:column="16"/></name></expr>;<pos:position pos:line="563" pos:column="17"/></return>
}<pos:position pos:line="564" pos:column="2"/></block></function>

<comment type="block" pos:line="566" pos:column="1">/* strcpy_url() copies a url to a output buffer and URL-encodes the spaces in
 * the source URL accordingly.
 */</comment>
<function><specifier pos:line="569" pos:column="1">static<pos:position pos:line="569" pos:column="7"/></specifier> <type><name pos:line="569" pos:column="8">void<pos:position pos:line="569" pos:column="12"/></name></type> <name pos:line="569" pos:column="13">strcpy_url<pos:position pos:line="569" pos:column="23"/></name><parameter_list pos:line="569" pos:column="23">(<parameter><decl><type><name pos:line="569" pos:column="24">char<pos:position pos:line="569" pos:column="28"/></name> <modifier pos:line="569" pos:column="29">*<pos:position pos:line="569" pos:column="30"/></modifier></type><name pos:line="569" pos:column="30">output<pos:position pos:line="569" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="569" pos:column="38">const<pos:position pos:line="569" pos:column="43"/></specifier> <name pos:line="569" pos:column="44">char<pos:position pos:line="569" pos:column="48"/></name> <modifier pos:line="569" pos:column="49">*<pos:position pos:line="569" pos:column="50"/></modifier></type><name pos:line="569" pos:column="50">url<pos:position pos:line="569" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="569" pos:column="54"/></parameter_list>
<block pos:line="570" pos:column="1">{
  <comment type="block" pos:line="571" pos:column="3">/* we must add this with whitespace-replacing */</comment>
  <decl_stmt><decl><type><name pos:line="572" pos:column="3">bool<pos:position pos:line="572" pos:column="7"/></name></type> <name pos:line="572" pos:column="8">left<pos:position pos:line="572" pos:column="12"/></name><init pos:line="572" pos:column="12">=<expr><name pos:line="572" pos:column="13">TRUE<pos:position pos:line="572" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="572" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="573" pos:column="3">const<pos:position pos:line="573" pos:column="8"/></specifier> <name pos:line="573" pos:column="9">unsigned<pos:position pos:line="573" pos:column="17"/></name> <name pos:line="573" pos:column="18">char<pos:position pos:line="573" pos:column="22"/></name> <modifier pos:line="573" pos:column="23">*<pos:position pos:line="573" pos:column="24"/></modifier></type><name pos:line="573" pos:column="24">iptr<pos:position pos:line="573" pos:column="28"/></name></decl>;<pos:position pos:line="573" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="574" pos:column="3">char<pos:position pos:line="574" pos:column="7"/></name> <modifier pos:line="574" pos:column="8">*<pos:position pos:line="574" pos:column="9"/></modifier></type><name pos:line="574" pos:column="9">optr<pos:position pos:line="574" pos:column="13"/></name> <init pos:line="574" pos:column="14">= <expr><name pos:line="574" pos:column="16">output<pos:position pos:line="574" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="574" pos:column="23"/></decl_stmt>
  <for pos:line="575" pos:column="3">for<control pos:line="575" pos:column="6">(<init><expr><name pos:line="575" pos:column="7">iptr<pos:position pos:line="575" pos:column="11"/></name> <operator pos:line="575" pos:column="12">=<pos:position pos:line="575" pos:column="13"/></operator> <operator pos:line="575" pos:column="14">(<pos:position pos:line="575" pos:column="15"/></operator><name pos:line="575" pos:column="15">unsigned<pos:position pos:line="575" pos:column="23"/></name> <name pos:line="575" pos:column="24">char<pos:position pos:line="575" pos:column="28"/></name> <operator pos:line="575" pos:column="29">*<pos:position pos:line="575" pos:column="30"/></operator><operator pos:line="575" pos:column="30">)<pos:position pos:line="575" pos:column="31"/></operator><name pos:line="575" pos:column="31">url<pos:position pos:line="575" pos:column="34"/></name></expr>;<pos:position pos:line="575" pos:column="35"/></init>    <comment type="block" pos:line="575" pos:column="39">/* read from here */</comment>
      <condition><expr><operator pos:line="576" pos:column="7">*<pos:position pos:line="576" pos:column="8"/></operator><name pos:line="576" pos:column="8">iptr<pos:position pos:line="576" pos:column="12"/></name></expr>;<pos:position pos:line="576" pos:column="13"/></condition>         <comment type="block" pos:line="576" pos:column="22">/* until zero byte */</comment>
      <incr><expr><name pos:line="577" pos:column="7">iptr<pos:position pos:line="577" pos:column="11"/></name><operator pos:line="577" pos:column="11">++<pos:position pos:line="577" pos:column="13"/></operator></expr></incr>)<pos:position pos:line="577" pos:column="14"/></control> <block pos:line="577" pos:column="15">{
    <switch pos:line="578" pos:column="5">switch<condition pos:line="578" pos:column="11">(<expr><operator pos:line="578" pos:column="12">*<pos:position pos:line="578" pos:column="13"/></operator><name pos:line="578" pos:column="13">iptr<pos:position pos:line="578" pos:column="17"/></name></expr>)<pos:position pos:line="578" pos:column="18"/></condition> <block pos:line="578" pos:column="19">{
    <case pos:line="579" pos:column="5">case <expr><literal type="char" pos:line="579" pos:column="10">'?'<pos:position pos:line="579" pos:column="13"/></literal></expr>:<pos:position pos:line="579" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="580" pos:column="7">left<pos:position pos:line="580" pos:column="11"/></name><operator pos:line="580" pos:column="11">=<pos:position pos:line="580" pos:column="12"/></operator><name pos:line="580" pos:column="12">FALSE<pos:position pos:line="580" pos:column="17"/></name></expr>;<pos:position pos:line="580" pos:column="18"/></expr_stmt>
      <comment type="block" pos:line="581" pos:column="7">/* fall through */</comment>
    <default pos:line="582" pos:column="5">default:<pos:position pos:line="582" pos:column="13"/></default>
      <if pos:line="583" pos:column="7">if<condition pos:line="583" pos:column="9">(<expr><operator pos:line="583" pos:column="10">*<pos:position pos:line="583" pos:column="11"/></operator><name pos:line="583" pos:column="11">iptr<pos:position pos:line="583" pos:column="15"/></name> <operator pos:line="583" pos:column="16">&gt;=<pos:position pos:line="583" pos:column="21"/></operator> <literal type="number" pos:line="583" pos:column="19">0x80<pos:position pos:line="583" pos:column="23"/></literal></expr>)<pos:position pos:line="583" pos:column="24"/></condition><then pos:line="583" pos:column="24"> <block pos:line="583" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="584" pos:column="9">snprintf<pos:position pos:line="584" pos:column="17"/></name><argument_list pos:line="584" pos:column="17">(<argument><expr><name pos:line="584" pos:column="18">optr<pos:position pos:line="584" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="584" pos:column="24">4<pos:position pos:line="584" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="584" pos:column="27">"%%%02x"<pos:position pos:line="584" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="584" pos:column="37">*<pos:position pos:line="584" pos:column="38"/></operator><name pos:line="584" pos:column="38">iptr<pos:position pos:line="584" pos:column="42"/></name></expr></argument>)<pos:position pos:line="584" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="585" pos:column="9">optr<pos:position pos:line="585" pos:column="13"/></name> <operator pos:line="585" pos:column="14">+=<pos:position pos:line="585" pos:column="16"/></operator> <literal type="number" pos:line="585" pos:column="17">3<pos:position pos:line="585" pos:column="18"/></literal></expr>;<pos:position pos:line="585" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="586" pos:column="8"/></block></then>
      <else pos:line="587" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="588" pos:column="9">*<pos:position pos:line="588" pos:column="10"/></operator><name pos:line="588" pos:column="10">optr<pos:position pos:line="588" pos:column="14"/></name><operator pos:line="588" pos:column="14">++<pos:position pos:line="588" pos:column="16"/></operator><operator pos:line="588" pos:column="16">=<pos:position pos:line="588" pos:column="17"/></operator><operator pos:line="588" pos:column="17">*<pos:position pos:line="588" pos:column="18"/></operator><name pos:line="588" pos:column="18">iptr<pos:position pos:line="588" pos:column="22"/></name></expr>;<pos:position pos:line="588" pos:column="23"/></expr_stmt></block></else></if>
      <break pos:line="589" pos:column="7">break;<pos:position pos:line="589" pos:column="13"/></break>
    <case pos:line="590" pos:column="5">case <expr><literal type="char" pos:line="590" pos:column="10">' '<pos:position pos:line="590" pos:column="13"/></literal></expr>:<pos:position pos:line="590" pos:column="14"/></case>
      <if pos:line="591" pos:column="7">if<condition pos:line="591" pos:column="9">(<expr><name pos:line="591" pos:column="10">left<pos:position pos:line="591" pos:column="14"/></name></expr>)<pos:position pos:line="591" pos:column="15"/></condition><then pos:line="591" pos:column="15"> <block pos:line="591" pos:column="16">{
        <expr_stmt><expr><operator pos:line="592" pos:column="9">*<pos:position pos:line="592" pos:column="10"/></operator><name pos:line="592" pos:column="10">optr<pos:position pos:line="592" pos:column="14"/></name><operator pos:line="592" pos:column="14">++<pos:position pos:line="592" pos:column="16"/></operator><operator pos:line="592" pos:column="16">=<pos:position pos:line="592" pos:column="17"/></operator><literal type="char" pos:line="592" pos:column="17">'%'<pos:position pos:line="592" pos:column="20"/></literal></expr>;<pos:position pos:line="592" pos:column="21"/></expr_stmt> <comment type="block" pos:line="592" pos:column="22">/* add a '%' */</comment>
        <expr_stmt><expr><operator pos:line="593" pos:column="9">*<pos:position pos:line="593" pos:column="10"/></operator><name pos:line="593" pos:column="10">optr<pos:position pos:line="593" pos:column="14"/></name><operator pos:line="593" pos:column="14">++<pos:position pos:line="593" pos:column="16"/></operator><operator pos:line="593" pos:column="16">=<pos:position pos:line="593" pos:column="17"/></operator><literal type="char" pos:line="593" pos:column="17">'2'<pos:position pos:line="593" pos:column="20"/></literal></expr>;<pos:position pos:line="593" pos:column="21"/></expr_stmt> <comment type="block" pos:line="593" pos:column="22">/* add a '2' */</comment>
        <expr_stmt><expr><operator pos:line="594" pos:column="9">*<pos:position pos:line="594" pos:column="10"/></operator><name pos:line="594" pos:column="10">optr<pos:position pos:line="594" pos:column="14"/></name><operator pos:line="594" pos:column="14">++<pos:position pos:line="594" pos:column="16"/></operator><operator pos:line="594" pos:column="16">=<pos:position pos:line="594" pos:column="17"/></operator><literal type="char" pos:line="594" pos:column="17">'0'<pos:position pos:line="594" pos:column="20"/></literal></expr>;<pos:position pos:line="594" pos:column="21"/></expr_stmt> <comment type="block" pos:line="594" pos:column="22">/* add a '0' */</comment>
      }<pos:position pos:line="595" pos:column="8"/></block></then>
      <else pos:line="596" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="597" pos:column="9">*<pos:position pos:line="597" pos:column="10"/></operator><name pos:line="597" pos:column="10">optr<pos:position pos:line="597" pos:column="14"/></name><operator pos:line="597" pos:column="14">++<pos:position pos:line="597" pos:column="16"/></operator><operator pos:line="597" pos:column="16">=<pos:position pos:line="597" pos:column="17"/></operator><literal type="char" pos:line="597" pos:column="17">'+'<pos:position pos:line="597" pos:column="20"/></literal></expr>;<pos:position pos:line="597" pos:column="21"/></expr_stmt></block></else></if> <comment type="block" pos:line="597" pos:column="22">/* add a '+' here */</comment>
      <break pos:line="598" pos:column="7">break;<pos:position pos:line="598" pos:column="13"/></break>
    }<pos:position pos:line="599" pos:column="6"/></block></switch>
  }<pos:position pos:line="600" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="601" pos:column="3">*<pos:position pos:line="601" pos:column="4"/></operator><name pos:line="601" pos:column="4">optr<pos:position pos:line="601" pos:column="8"/></name><operator pos:line="601" pos:column="8">=<pos:position pos:line="601" pos:column="9"/></operator><literal type="number" pos:line="601" pos:column="9">0<pos:position pos:line="601" pos:column="10"/></literal></expr>;<pos:position pos:line="601" pos:column="11"/></expr_stmt> <comment type="block" pos:line="601" pos:column="12">/* zero terminate output buffer */</comment>

}<pos:position pos:line="603" pos:column="2"/></block></function>

<comment type="block" pos:line="605" pos:column="1">/*
 * Returns true if the given URL is absolute (as opposed to relative)
 */</comment>
<function><specifier pos:line="608" pos:column="1">static<pos:position pos:line="608" pos:column="7"/></specifier> <type><name pos:line="608" pos:column="8">bool<pos:position pos:line="608" pos:column="12"/></name></type> <name pos:line="608" pos:column="13">is_absolute_url<pos:position pos:line="608" pos:column="28"/></name><parameter_list pos:line="608" pos:column="28">(<parameter><decl><type><specifier pos:line="608" pos:column="29">const<pos:position pos:line="608" pos:column="34"/></specifier> <name pos:line="608" pos:column="35">char<pos:position pos:line="608" pos:column="39"/></name> <modifier pos:line="608" pos:column="40">*<pos:position pos:line="608" pos:column="41"/></modifier></type><name pos:line="608" pos:column="41">url<pos:position pos:line="608" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="608" pos:column="45"/></parameter_list>
<block pos:line="609" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="610" pos:column="3">char<pos:position pos:line="610" pos:column="7"/></name></type> <name><name pos:line="610" pos:column="8">prot<pos:position pos:line="610" pos:column="12"/></name><index pos:line="610" pos:column="12">[<expr><literal type="number" pos:line="610" pos:column="13">16<pos:position pos:line="610" pos:column="15"/></literal></expr>]<pos:position pos:line="610" pos:column="16"/></index></name></decl>;<pos:position pos:line="610" pos:column="17"/></decl_stmt> <comment type="block" pos:line="610" pos:column="18">/* URL protocol string storage */</comment>
  <decl_stmt><decl><type><name pos:line="611" pos:column="3">char<pos:position pos:line="611" pos:column="7"/></name></type> <name pos:line="611" pos:column="8">letter<pos:position pos:line="611" pos:column="14"/></name></decl>;<pos:position pos:line="611" pos:column="15"/></decl_stmt>   <comment type="block" pos:line="611" pos:column="18">/* used for a silly sscanf */</comment>

  <return pos:line="613" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="613" pos:column="10">(<pos:position pos:line="613" pos:column="11"/></operator><literal type="number" pos:line="613" pos:column="11">2<pos:position pos:line="613" pos:column="12"/></literal> <operator pos:line="613" pos:column="13">==<pos:position pos:line="613" pos:column="15"/></operator> <call><name pos:line="613" pos:column="16">sscanf<pos:position pos:line="613" pos:column="22"/></name><argument_list pos:line="613" pos:column="22">(<argument><expr><name pos:line="613" pos:column="23">url<pos:position pos:line="613" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="613" pos:column="28">"%15[^?&amp;/:]://%c"<pos:position pos:line="613" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="613" pos:column="47">prot<pos:position pos:line="613" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="613" pos:column="53">&amp;<pos:position pos:line="613" pos:column="58"/></operator><name pos:line="613" pos:column="54">letter<pos:position pos:line="613" pos:column="60"/></name></expr></argument>)<pos:position pos:line="613" pos:column="61"/></argument_list></call><operator pos:line="613" pos:column="61">)<pos:position pos:line="613" pos:column="62"/></operator></expr> ?<pos:position pos:line="613" pos:column="64"/></condition><then pos:line="613" pos:column="64"> <expr><name pos:line="613" pos:column="65">TRUE<pos:position pos:line="613" pos:column="69"/></name></expr> <pos:position pos:line="613" pos:column="70"/></then><else pos:line="613" pos:column="70">: <expr><name pos:line="613" pos:column="72">FALSE<pos:position pos:line="613" pos:column="77"/></name></expr></else></ternary></expr>;<pos:position pos:line="613" pos:column="78"/></return>
}<pos:position pos:line="614" pos:column="2"/></block></function>

<comment type="block" pos:line="616" pos:column="1">/*
 * Concatenate a relative URL to a base URL making it absolute.
 * URL-encodes any spaces.
 * The returned pointer must be freed by the caller unless NULL
 * (returns NULL on out of memory).
 */</comment>
<function><specifier pos:line="622" pos:column="1">static<pos:position pos:line="622" pos:column="7"/></specifier> <type><name pos:line="622" pos:column="8">char<pos:position pos:line="622" pos:column="12"/></name> <modifier pos:line="622" pos:column="13">*<pos:position pos:line="622" pos:column="14"/></modifier></type><name pos:line="622" pos:column="14">concat_url<pos:position pos:line="622" pos:column="24"/></name><parameter_list pos:line="622" pos:column="24">(<parameter><decl><type><specifier pos:line="622" pos:column="25">const<pos:position pos:line="622" pos:column="30"/></specifier> <name pos:line="622" pos:column="31">char<pos:position pos:line="622" pos:column="35"/></name> <modifier pos:line="622" pos:column="36">*<pos:position pos:line="622" pos:column="37"/></modifier></type><name pos:line="622" pos:column="37">base<pos:position pos:line="622" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="622" pos:column="43">const<pos:position pos:line="622" pos:column="48"/></specifier> <name pos:line="622" pos:column="49">char<pos:position pos:line="622" pos:column="53"/></name> <modifier pos:line="622" pos:column="54">*<pos:position pos:line="622" pos:column="55"/></modifier></type><name pos:line="622" pos:column="55">relurl<pos:position pos:line="622" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="622" pos:column="62"/></parameter_list>
<block pos:line="623" pos:column="1">{
  <comment type="block" format="doxygen" pos:line="624" pos:column="3">/***
   TRY to append this new path to the old URL
   to the right of the host part. Oh crap, this is doomed to cause
   problems in the future...
  */</comment>
  <decl_stmt><decl><type><name pos:line="629" pos:column="3">char<pos:position pos:line="629" pos:column="7"/></name> <modifier pos:line="629" pos:column="8">*<pos:position pos:line="629" pos:column="9"/></modifier></type><name pos:line="629" pos:column="9">newest<pos:position pos:line="629" pos:column="15"/></name></decl>;<pos:position pos:line="629" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="630" pos:column="3">char<pos:position pos:line="630" pos:column="7"/></name> <modifier pos:line="630" pos:column="8">*<pos:position pos:line="630" pos:column="9"/></modifier></type><name pos:line="630" pos:column="9">protsep<pos:position pos:line="630" pos:column="16"/></name></decl>;<pos:position pos:line="630" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="631" pos:column="3">char<pos:position pos:line="631" pos:column="7"/></name> <modifier pos:line="631" pos:column="8">*<pos:position pos:line="631" pos:column="9"/></modifier></type><name pos:line="631" pos:column="9">pathsep<pos:position pos:line="631" pos:column="16"/></name></decl>;<pos:position pos:line="631" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="632" pos:column="3">size_t<pos:position pos:line="632" pos:column="9"/></name></type> <name pos:line="632" pos:column="10">newlen<pos:position pos:line="632" pos:column="16"/></name></decl>;<pos:position pos:line="632" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="634" pos:column="3">const<pos:position pos:line="634" pos:column="8"/></specifier> <name pos:line="634" pos:column="9">char<pos:position pos:line="634" pos:column="13"/></name> <modifier pos:line="634" pos:column="14">*<pos:position pos:line="634" pos:column="15"/></modifier></type><name pos:line="634" pos:column="15">useurl<pos:position pos:line="634" pos:column="21"/></name> <init pos:line="634" pos:column="22">= <expr><name pos:line="634" pos:column="24">relurl<pos:position pos:line="634" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="634" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="635" pos:column="3">size_t<pos:position pos:line="635" pos:column="9"/></name></type> <name pos:line="635" pos:column="10">urllen<pos:position pos:line="635" pos:column="16"/></name></decl>;<pos:position pos:line="635" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="637" pos:column="3">/* we must make our own copy of the URL to play with, as it may
     point to read-only data */</comment>
  <decl_stmt><decl><type><name pos:line="639" pos:column="3">char<pos:position pos:line="639" pos:column="7"/></name> <modifier pos:line="639" pos:column="8">*<pos:position pos:line="639" pos:column="9"/></modifier></type><name pos:line="639" pos:column="9">url_clone<pos:position pos:line="639" pos:column="18"/></name><init pos:line="639" pos:column="18">=<expr><call><name pos:line="639" pos:column="19">strdup<pos:position pos:line="639" pos:column="25"/></name><argument_list pos:line="639" pos:column="25">(<argument><expr><name pos:line="639" pos:column="26">base<pos:position pos:line="639" pos:column="30"/></name></expr></argument>)<pos:position pos:line="639" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="639" pos:column="32"/></decl_stmt>

  <if pos:line="641" pos:column="3">if<condition pos:line="641" pos:column="5">(<expr><operator pos:line="641" pos:column="6">!<pos:position pos:line="641" pos:column="7"/></operator><name pos:line="641" pos:column="7">url_clone<pos:position pos:line="641" pos:column="16"/></name></expr>)<pos:position pos:line="641" pos:column="17"/></condition><then pos:line="641" pos:column="17">
    <block type="pseudo"><return pos:line="642" pos:column="5">return <expr><name pos:line="642" pos:column="12">NULL<pos:position pos:line="642" pos:column="16"/></name></expr>;<pos:position pos:line="642" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="642" pos:column="18">/* skip out of this NOW */</comment>

  <comment type="block" pos:line="644" pos:column="3">/* protsep points to the start of the host name */</comment>
  <expr_stmt><expr><name pos:line="645" pos:column="3">protsep<pos:position pos:line="645" pos:column="10"/></name><operator pos:line="645" pos:column="10">=<pos:position pos:line="645" pos:column="11"/></operator><call><name pos:line="645" pos:column="11">strstr<pos:position pos:line="645" pos:column="17"/></name><argument_list pos:line="645" pos:column="17">(<argument><expr><name pos:line="645" pos:column="18">url_clone<pos:position pos:line="645" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="645" pos:column="29">"//"<pos:position pos:line="645" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="645" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="645" pos:column="35"/></expr_stmt>
  <if pos:line="646" pos:column="3">if<condition pos:line="646" pos:column="5">(<expr><operator pos:line="646" pos:column="6">!<pos:position pos:line="646" pos:column="7"/></operator><name pos:line="646" pos:column="7">protsep<pos:position pos:line="646" pos:column="14"/></name></expr>)<pos:position pos:line="646" pos:column="15"/></condition><then pos:line="646" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="647" pos:column="5">protsep<pos:position pos:line="647" pos:column="12"/></name><operator pos:line="647" pos:column="12">=<pos:position pos:line="647" pos:column="13"/></operator><name pos:line="647" pos:column="13">url_clone<pos:position pos:line="647" pos:column="22"/></name></expr>;<pos:position pos:line="647" pos:column="23"/></expr_stmt></block></then>
  <else pos:line="648" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="649" pos:column="5">protsep<pos:position pos:line="649" pos:column="12"/></name><operator pos:line="649" pos:column="12">+=<pos:position pos:line="649" pos:column="14"/></operator><literal type="number" pos:line="649" pos:column="14">2<pos:position pos:line="649" pos:column="15"/></literal></expr>;<pos:position pos:line="649" pos:column="16"/></expr_stmt></block></else></if> <comment type="block" pos:line="649" pos:column="17">/* pass the slashes */</comment>

  <if pos:line="651" pos:column="3">if<condition pos:line="651" pos:column="5">(<expr><literal type="char" pos:line="651" pos:column="6">'/'<pos:position pos:line="651" pos:column="9"/></literal> <operator pos:line="651" pos:column="10">!=<pos:position pos:line="651" pos:column="12"/></operator> <name><name pos:line="651" pos:column="13">relurl<pos:position pos:line="651" pos:column="19"/></name><index pos:line="651" pos:column="19">[<expr><literal type="number" pos:line="651" pos:column="20">0<pos:position pos:line="651" pos:column="21"/></literal></expr>]<pos:position pos:line="651" pos:column="22"/></index></name></expr>)<pos:position pos:line="651" pos:column="23"/></condition><then pos:line="651" pos:column="23"> <block pos:line="651" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="652" pos:column="5">int<pos:position pos:line="652" pos:column="8"/></name></type> <name pos:line="652" pos:column="9">level<pos:position pos:line="652" pos:column="14"/></name><init pos:line="652" pos:column="14">=<expr><literal type="number" pos:line="652" pos:column="15">0<pos:position pos:line="652" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="652" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="654" pos:column="5">/* First we need to find out if there's a ?-letter in the URL,
       and cut it and the right-side of that off */</comment>
    <expr_stmt><expr><name pos:line="656" pos:column="5">pathsep<pos:position pos:line="656" pos:column="12"/></name> <operator pos:line="656" pos:column="13">=<pos:position pos:line="656" pos:column="14"/></operator> <call><name pos:line="656" pos:column="15">strchr<pos:position pos:line="656" pos:column="21"/></name><argument_list pos:line="656" pos:column="21">(<argument><expr><name pos:line="656" pos:column="22">protsep<pos:position pos:line="656" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="656" pos:column="31">'?'<pos:position pos:line="656" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="656" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="656" pos:column="36"/></expr_stmt>
    <if pos:line="657" pos:column="5">if<condition pos:line="657" pos:column="7">(<expr><name pos:line="657" pos:column="8">pathsep<pos:position pos:line="657" pos:column="15"/></name></expr>)<pos:position pos:line="657" pos:column="16"/></condition><then pos:line="657" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="658" pos:column="7">*<pos:position pos:line="658" pos:column="8"/></operator><name pos:line="658" pos:column="8">pathsep<pos:position pos:line="658" pos:column="15"/></name><operator pos:line="658" pos:column="15">=<pos:position pos:line="658" pos:column="16"/></operator><literal type="number" pos:line="658" pos:column="16">0<pos:position pos:line="658" pos:column="17"/></literal></expr>;<pos:position pos:line="658" pos:column="18"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="660" pos:column="5">/* we have a relative path to append to the last slash if there's one
       available, or if the new URL is just a query string (starts with a
       '?')  we append the new one at the end of the entire currently worked
       out URL */</comment>
    <if pos:line="664" pos:column="5">if<condition pos:line="664" pos:column="7">(<expr><name><name pos:line="664" pos:column="8">useurl<pos:position pos:line="664" pos:column="14"/></name><index pos:line="664" pos:column="14">[<expr><literal type="number" pos:line="664" pos:column="15">0<pos:position pos:line="664" pos:column="16"/></literal></expr>]<pos:position pos:line="664" pos:column="17"/></index></name> <operator pos:line="664" pos:column="18">!=<pos:position pos:line="664" pos:column="20"/></operator> <literal type="char" pos:line="664" pos:column="21">'?'<pos:position pos:line="664" pos:column="24"/></literal></expr>)<pos:position pos:line="664" pos:column="25"/></condition><then pos:line="664" pos:column="25"> <block pos:line="664" pos:column="26">{
      <expr_stmt><expr><name pos:line="665" pos:column="7">pathsep<pos:position pos:line="665" pos:column="14"/></name> <operator pos:line="665" pos:column="15">=<pos:position pos:line="665" pos:column="16"/></operator> <call><name pos:line="665" pos:column="17">strrchr<pos:position pos:line="665" pos:column="24"/></name><argument_list pos:line="665" pos:column="24">(<argument><expr><name pos:line="665" pos:column="25">protsep<pos:position pos:line="665" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="665" pos:column="34">'/'<pos:position pos:line="665" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="665" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="665" pos:column="39"/></expr_stmt>
      <if pos:line="666" pos:column="7">if<condition pos:line="666" pos:column="9">(<expr><name pos:line="666" pos:column="10">pathsep<pos:position pos:line="666" pos:column="17"/></name></expr>)<pos:position pos:line="666" pos:column="18"/></condition><then pos:line="666" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="667" pos:column="9">*<pos:position pos:line="667" pos:column="10"/></operator><name pos:line="667" pos:column="10">pathsep<pos:position pos:line="667" pos:column="17"/></name><operator pos:line="667" pos:column="17">=<pos:position pos:line="667" pos:column="18"/></operator><literal type="number" pos:line="667" pos:column="18">0<pos:position pos:line="667" pos:column="19"/></literal></expr>;<pos:position pos:line="667" pos:column="20"/></expr_stmt></block></then></if>
    }<pos:position pos:line="668" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="670" pos:column="5">/* Check if there's any slash after the host name, and if so, remember
       that position instead */</comment>
    <expr_stmt><expr><name pos:line="672" pos:column="5">pathsep<pos:position pos:line="672" pos:column="12"/></name> <operator pos:line="672" pos:column="13">=<pos:position pos:line="672" pos:column="14"/></operator> <call><name pos:line="672" pos:column="15">strchr<pos:position pos:line="672" pos:column="21"/></name><argument_list pos:line="672" pos:column="21">(<argument><expr><name pos:line="672" pos:column="22">protsep<pos:position pos:line="672" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="672" pos:column="31">'/'<pos:position pos:line="672" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="672" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="672" pos:column="36"/></expr_stmt>
    <if pos:line="673" pos:column="5">if<condition pos:line="673" pos:column="7">(<expr><name pos:line="673" pos:column="8">pathsep<pos:position pos:line="673" pos:column="15"/></name></expr>)<pos:position pos:line="673" pos:column="16"/></condition><then pos:line="673" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="674" pos:column="7">protsep<pos:position pos:line="674" pos:column="14"/></name> <operator pos:line="674" pos:column="15">=<pos:position pos:line="674" pos:column="16"/></operator> <name pos:line="674" pos:column="17">pathsep<pos:position pos:line="674" pos:column="24"/></name><operator pos:line="674" pos:column="24">+<pos:position pos:line="674" pos:column="25"/></operator><literal type="number" pos:line="674" pos:column="25">1<pos:position pos:line="674" pos:column="26"/></literal></expr>;<pos:position pos:line="674" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="675" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="676" pos:column="7">protsep<pos:position pos:line="676" pos:column="14"/></name> <operator pos:line="676" pos:column="15">=<pos:position pos:line="676" pos:column="16"/></operator> <name pos:line="676" pos:column="17">NULL<pos:position pos:line="676" pos:column="21"/></name></expr>;<pos:position pos:line="676" pos:column="22"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="678" pos:column="5">/* now deal with one "./" or any amount of "../" in the newurl
       and act accordingly */</comment>

    <if pos:line="681" pos:column="5">if<condition pos:line="681" pos:column="7">(<expr><operator pos:line="681" pos:column="8">(<pos:position pos:line="681" pos:column="9"/></operator><name><name pos:line="681" pos:column="9">useurl<pos:position pos:line="681" pos:column="15"/></name><index pos:line="681" pos:column="15">[<expr><literal type="number" pos:line="681" pos:column="16">0<pos:position pos:line="681" pos:column="17"/></literal></expr>]<pos:position pos:line="681" pos:column="18"/></index></name> <operator pos:line="681" pos:column="19">==<pos:position pos:line="681" pos:column="21"/></operator> <literal type="char" pos:line="681" pos:column="22">'.'<pos:position pos:line="681" pos:column="25"/></literal><operator pos:line="681" pos:column="25">)<pos:position pos:line="681" pos:column="26"/></operator> <operator pos:line="681" pos:column="27">&amp;&amp;<pos:position pos:line="681" pos:column="37"/></operator> <operator pos:line="681" pos:column="30">(<pos:position pos:line="681" pos:column="31"/></operator><name><name pos:line="681" pos:column="31">useurl<pos:position pos:line="681" pos:column="37"/></name><index pos:line="681" pos:column="37">[<expr><literal type="number" pos:line="681" pos:column="38">1<pos:position pos:line="681" pos:column="39"/></literal></expr>]<pos:position pos:line="681" pos:column="40"/></index></name> <operator pos:line="681" pos:column="41">==<pos:position pos:line="681" pos:column="43"/></operator> <literal type="char" pos:line="681" pos:column="44">'/'<pos:position pos:line="681" pos:column="47"/></literal><operator pos:line="681" pos:column="47">)<pos:position pos:line="681" pos:column="48"/></operator></expr>)<pos:position pos:line="681" pos:column="49"/></condition><then pos:line="681" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="682" pos:column="7">useurl<pos:position pos:line="682" pos:column="13"/></name><operator pos:line="682" pos:column="13">+=<pos:position pos:line="682" pos:column="15"/></operator><literal type="number" pos:line="682" pos:column="15">2<pos:position pos:line="682" pos:column="16"/></literal></expr>;<pos:position pos:line="682" pos:column="17"/></expr_stmt></block></then></if> <comment type="block" pos:line="682" pos:column="18">/* just skip the "./" */</comment>

    <while pos:line="684" pos:column="5">while<condition pos:line="684" pos:column="10">(<expr><operator pos:line="684" pos:column="11">(<pos:position pos:line="684" pos:column="12"/></operator><name><name pos:line="684" pos:column="12">useurl<pos:position pos:line="684" pos:column="18"/></name><index pos:line="684" pos:column="18">[<expr><literal type="number" pos:line="684" pos:column="19">0<pos:position pos:line="684" pos:column="20"/></literal></expr>]<pos:position pos:line="684" pos:column="21"/></index></name> <operator pos:line="684" pos:column="22">==<pos:position pos:line="684" pos:column="24"/></operator> <literal type="char" pos:line="684" pos:column="25">'.'<pos:position pos:line="684" pos:column="28"/></literal><operator pos:line="684" pos:column="28">)<pos:position pos:line="684" pos:column="29"/></operator> <operator pos:line="684" pos:column="30">&amp;&amp;<pos:position pos:line="684" pos:column="40"/></operator>
          <operator pos:line="685" pos:column="11">(<pos:position pos:line="685" pos:column="12"/></operator><name><name pos:line="685" pos:column="12">useurl<pos:position pos:line="685" pos:column="18"/></name><index pos:line="685" pos:column="18">[<expr><literal type="number" pos:line="685" pos:column="19">1<pos:position pos:line="685" pos:column="20"/></literal></expr>]<pos:position pos:line="685" pos:column="21"/></index></name> <operator pos:line="685" pos:column="22">==<pos:position pos:line="685" pos:column="24"/></operator> <literal type="char" pos:line="685" pos:column="25">'.'<pos:position pos:line="685" pos:column="28"/></literal><operator pos:line="685" pos:column="28">)<pos:position pos:line="685" pos:column="29"/></operator> <operator pos:line="685" pos:column="30">&amp;&amp;<pos:position pos:line="685" pos:column="40"/></operator>
          <operator pos:line="686" pos:column="11">(<pos:position pos:line="686" pos:column="12"/></operator><name><name pos:line="686" pos:column="12">useurl<pos:position pos:line="686" pos:column="18"/></name><index pos:line="686" pos:column="18">[<expr><literal type="number" pos:line="686" pos:column="19">2<pos:position pos:line="686" pos:column="20"/></literal></expr>]<pos:position pos:line="686" pos:column="21"/></index></name> <operator pos:line="686" pos:column="22">==<pos:position pos:line="686" pos:column="24"/></operator> <literal type="char" pos:line="686" pos:column="25">'/'<pos:position pos:line="686" pos:column="28"/></literal><operator pos:line="686" pos:column="28">)<pos:position pos:line="686" pos:column="29"/></operator></expr>)<pos:position pos:line="686" pos:column="30"/></condition> <block pos:line="686" pos:column="31">{
      <expr_stmt><expr><name pos:line="687" pos:column="7">level<pos:position pos:line="687" pos:column="12"/></name><operator pos:line="687" pos:column="12">++<pos:position pos:line="687" pos:column="14"/></operator></expr>;<pos:position pos:line="687" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="688" pos:column="7">useurl<pos:position pos:line="688" pos:column="13"/></name><operator pos:line="688" pos:column="13">+=<pos:position pos:line="688" pos:column="15"/></operator><literal type="number" pos:line="688" pos:column="15">3<pos:position pos:line="688" pos:column="16"/></literal></expr>;<pos:position pos:line="688" pos:column="17"/></expr_stmt> <comment type="block" pos:line="688" pos:column="18">/* pass the "../" */</comment>
    }<pos:position pos:line="689" pos:column="6"/></block></while>

    <if pos:line="691" pos:column="5">if<condition pos:line="691" pos:column="7">(<expr><name pos:line="691" pos:column="8">protsep<pos:position pos:line="691" pos:column="15"/></name></expr>)<pos:position pos:line="691" pos:column="16"/></condition><then pos:line="691" pos:column="16"> <block pos:line="691" pos:column="17">{
      <while pos:line="692" pos:column="7">while<condition pos:line="692" pos:column="12">(<expr><name pos:line="692" pos:column="13">level<pos:position pos:line="692" pos:column="18"/></name><operator pos:line="692" pos:column="18">--<pos:position pos:line="692" pos:column="20"/></operator></expr>)<pos:position pos:line="692" pos:column="21"/></condition> <block pos:line="692" pos:column="22">{
        <comment type="block" pos:line="693" pos:column="9">/* cut off one more level from the right of the original URL */</comment>
        <expr_stmt><expr><name pos:line="694" pos:column="9">pathsep<pos:position pos:line="694" pos:column="16"/></name> <operator pos:line="694" pos:column="17">=<pos:position pos:line="694" pos:column="18"/></operator> <call><name pos:line="694" pos:column="19">strrchr<pos:position pos:line="694" pos:column="26"/></name><argument_list pos:line="694" pos:column="26">(<argument><expr><name pos:line="694" pos:column="27">protsep<pos:position pos:line="694" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="694" pos:column="36">'/'<pos:position pos:line="694" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="694" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="694" pos:column="41"/></expr_stmt>
        <if pos:line="695" pos:column="9">if<condition pos:line="695" pos:column="11">(<expr><name pos:line="695" pos:column="12">pathsep<pos:position pos:line="695" pos:column="19"/></name></expr>)<pos:position pos:line="695" pos:column="20"/></condition><then pos:line="695" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="696" pos:column="11">*<pos:position pos:line="696" pos:column="12"/></operator><name pos:line="696" pos:column="12">pathsep<pos:position pos:line="696" pos:column="19"/></name><operator pos:line="696" pos:column="19">=<pos:position pos:line="696" pos:column="20"/></operator><literal type="number" pos:line="696" pos:column="20">0<pos:position pos:line="696" pos:column="21"/></literal></expr>;<pos:position pos:line="696" pos:column="22"/></expr_stmt></block></then>
        <else pos:line="697" pos:column="9">else <block pos:line="697" pos:column="14">{
          <expr_stmt><expr><operator pos:line="698" pos:column="11">*<pos:position pos:line="698" pos:column="12"/></operator><name pos:line="698" pos:column="12">protsep<pos:position pos:line="698" pos:column="19"/></name><operator pos:line="698" pos:column="19">=<pos:position pos:line="698" pos:column="20"/></operator><literal type="number" pos:line="698" pos:column="20">0<pos:position pos:line="698" pos:column="21"/></literal></expr>;<pos:position pos:line="698" pos:column="22"/></expr_stmt>
          <break pos:line="699" pos:column="11">break;<pos:position pos:line="699" pos:column="17"/></break>
        }<pos:position pos:line="700" pos:column="10"/></block></else></if>
      }<pos:position pos:line="701" pos:column="8"/></block></while>
    }<pos:position pos:line="702" pos:column="6"/></block></then></if>
  }<pos:position pos:line="703" pos:column="4"/></block></then>
  <else pos:line="704" pos:column="3">else <block pos:line="704" pos:column="8">{
    <comment type="block" pos:line="705" pos:column="5">/* We got a new absolute path for this server */</comment>

    <if pos:line="707" pos:column="5">if<condition pos:line="707" pos:column="7">(<expr><operator pos:line="707" pos:column="8">(<pos:position pos:line="707" pos:column="9"/></operator><name><name pos:line="707" pos:column="9">relurl<pos:position pos:line="707" pos:column="15"/></name><index pos:line="707" pos:column="15">[<expr><literal type="number" pos:line="707" pos:column="16">0<pos:position pos:line="707" pos:column="17"/></literal></expr>]<pos:position pos:line="707" pos:column="18"/></index></name> <operator pos:line="707" pos:column="19">==<pos:position pos:line="707" pos:column="21"/></operator> <literal type="char" pos:line="707" pos:column="22">'/'<pos:position pos:line="707" pos:column="25"/></literal><operator pos:line="707" pos:column="25">)<pos:position pos:line="707" pos:column="26"/></operator> <operator pos:line="707" pos:column="27">&amp;&amp;<pos:position pos:line="707" pos:column="37"/></operator> <operator pos:line="707" pos:column="30">(<pos:position pos:line="707" pos:column="31"/></operator><name><name pos:line="707" pos:column="31">relurl<pos:position pos:line="707" pos:column="37"/></name><index pos:line="707" pos:column="37">[<expr><literal type="number" pos:line="707" pos:column="38">1<pos:position pos:line="707" pos:column="39"/></literal></expr>]<pos:position pos:line="707" pos:column="40"/></index></name> <operator pos:line="707" pos:column="41">==<pos:position pos:line="707" pos:column="43"/></operator> <literal type="char" pos:line="707" pos:column="44">'/'<pos:position pos:line="707" pos:column="47"/></literal><operator pos:line="707" pos:column="47">)<pos:position pos:line="707" pos:column="48"/></operator></expr>)<pos:position pos:line="707" pos:column="49"/></condition><then pos:line="707" pos:column="49"> <block pos:line="707" pos:column="50">{
      <comment type="block" pos:line="708" pos:column="7">/* the new URL starts with //, just keep the protocol part from the
         original one */</comment>
      <expr_stmt><expr><operator pos:line="710" pos:column="7">*<pos:position pos:line="710" pos:column="8"/></operator><name pos:line="710" pos:column="8">protsep<pos:position pos:line="710" pos:column="15"/></name><operator pos:line="710" pos:column="15">=<pos:position pos:line="710" pos:column="16"/></operator><literal type="number" pos:line="710" pos:column="16">0<pos:position pos:line="710" pos:column="17"/></literal></expr>;<pos:position pos:line="710" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="711" pos:column="7">useurl<pos:position pos:line="711" pos:column="13"/></name> <operator pos:line="711" pos:column="14">=<pos:position pos:line="711" pos:column="15"/></operator> <operator pos:line="711" pos:column="16">&amp;<pos:position pos:line="711" pos:column="21"/></operator><name><name pos:line="711" pos:column="17">relurl<pos:position pos:line="711" pos:column="23"/></name><index pos:line="711" pos:column="23">[<expr><literal type="number" pos:line="711" pos:column="24">2<pos:position pos:line="711" pos:column="25"/></literal></expr>]<pos:position pos:line="711" pos:column="26"/></index></name></expr>;<pos:position pos:line="711" pos:column="27"/></expr_stmt> <comment type="block" pos:line="711" pos:column="28">/* we keep the slashes from the original, so we
                              skip the new ones */</comment>
    }<pos:position pos:line="713" pos:column="6"/></block></then>
    <else pos:line="714" pos:column="5">else <block pos:line="714" pos:column="10">{
      <comment type="block" pos:line="715" pos:column="7">/* cut off the original URL from the first slash, or deal with URLs
         without slash */</comment>
      <expr_stmt><expr><name pos:line="717" pos:column="7">pathsep<pos:position pos:line="717" pos:column="14"/></name> <operator pos:line="717" pos:column="15">=<pos:position pos:line="717" pos:column="16"/></operator> <call><name pos:line="717" pos:column="17">strchr<pos:position pos:line="717" pos:column="23"/></name><argument_list pos:line="717" pos:column="23">(<argument><expr><name pos:line="717" pos:column="24">protsep<pos:position pos:line="717" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="717" pos:column="33">'/'<pos:position pos:line="717" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="717" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="717" pos:column="38"/></expr_stmt>
      <if pos:line="718" pos:column="7">if<condition pos:line="718" pos:column="9">(<expr><name pos:line="718" pos:column="10">pathsep<pos:position pos:line="718" pos:column="17"/></name></expr>)<pos:position pos:line="718" pos:column="18"/></condition><then pos:line="718" pos:column="18"> <block pos:line="718" pos:column="19">{
        <comment type="block" pos:line="719" pos:column="9">/* When people use badly formatted URLs, such as
           "http://www.url.com?dir=/home/daniel" we must not use the first
           slash, if there's a ?-letter before it! */</comment>
        <decl_stmt><decl><type><name pos:line="722" pos:column="9">char<pos:position pos:line="722" pos:column="13"/></name> <modifier pos:line="722" pos:column="14">*<pos:position pos:line="722" pos:column="15"/></modifier></type><name pos:line="722" pos:column="15">sep<pos:position pos:line="722" pos:column="18"/></name> <init pos:line="722" pos:column="19">= <expr><call><name pos:line="722" pos:column="21">strchr<pos:position pos:line="722" pos:column="27"/></name><argument_list pos:line="722" pos:column="27">(<argument><expr><name pos:line="722" pos:column="28">protsep<pos:position pos:line="722" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="722" pos:column="37">'?'<pos:position pos:line="722" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="722" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="722" pos:column="42"/></decl_stmt>
        <if pos:line="723" pos:column="9">if<condition pos:line="723" pos:column="11">(<expr><name pos:line="723" pos:column="12">sep<pos:position pos:line="723" pos:column="15"/></name> <operator pos:line="723" pos:column="16">&amp;&amp;<pos:position pos:line="723" pos:column="26"/></operator> <operator pos:line="723" pos:column="19">(<pos:position pos:line="723" pos:column="20"/></operator><name pos:line="723" pos:column="20">sep<pos:position pos:line="723" pos:column="23"/></name> <operator pos:line="723" pos:column="24">&lt;<pos:position pos:line="723" pos:column="28"/></operator> <name pos:line="723" pos:column="26">pathsep<pos:position pos:line="723" pos:column="33"/></name><operator pos:line="723" pos:column="33">)<pos:position pos:line="723" pos:column="34"/></operator></expr>)<pos:position pos:line="723" pos:column="35"/></condition><then pos:line="723" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="724" pos:column="11">pathsep<pos:position pos:line="724" pos:column="18"/></name> <operator pos:line="724" pos:column="19">=<pos:position pos:line="724" pos:column="20"/></operator> <name pos:line="724" pos:column="21">sep<pos:position pos:line="724" pos:column="24"/></name></expr>;<pos:position pos:line="724" pos:column="25"/></expr_stmt></block></then></if>
        <expr_stmt><expr><operator pos:line="725" pos:column="9">*<pos:position pos:line="725" pos:column="10"/></operator><name pos:line="725" pos:column="10">pathsep<pos:position pos:line="725" pos:column="17"/></name><operator pos:line="725" pos:column="17">=<pos:position pos:line="725" pos:column="18"/></operator><literal type="number" pos:line="725" pos:column="18">0<pos:position pos:line="725" pos:column="19"/></literal></expr>;<pos:position pos:line="725" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="726" pos:column="8"/></block></then>
      <else pos:line="727" pos:column="7">else <block pos:line="727" pos:column="12">{
        <comment type="block" pos:line="728" pos:column="9">/* There was no slash. Now, since we might be operating on a badly
           formatted URL, such as "http://www.url.com?id=2380" which doesn't
           use a slash separator as it is supposed to, we need to check for a
           ?-letter as well! */</comment>
        <expr_stmt><expr><name pos:line="732" pos:column="9">pathsep<pos:position pos:line="732" pos:column="16"/></name> <operator pos:line="732" pos:column="17">=<pos:position pos:line="732" pos:column="18"/></operator> <call><name pos:line="732" pos:column="19">strchr<pos:position pos:line="732" pos:column="25"/></name><argument_list pos:line="732" pos:column="25">(<argument><expr><name pos:line="732" pos:column="26">protsep<pos:position pos:line="732" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="732" pos:column="35">'?'<pos:position pos:line="732" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="732" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="732" pos:column="40"/></expr_stmt>
        <if pos:line="733" pos:column="9">if<condition pos:line="733" pos:column="11">(<expr><name pos:line="733" pos:column="12">pathsep<pos:position pos:line="733" pos:column="19"/></name></expr>)<pos:position pos:line="733" pos:column="20"/></condition><then pos:line="733" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="734" pos:column="11">*<pos:position pos:line="734" pos:column="12"/></operator><name pos:line="734" pos:column="12">pathsep<pos:position pos:line="734" pos:column="19"/></name><operator pos:line="734" pos:column="19">=<pos:position pos:line="734" pos:column="20"/></operator><literal type="number" pos:line="734" pos:column="20">0<pos:position pos:line="734" pos:column="21"/></literal></expr>;<pos:position pos:line="734" pos:column="22"/></expr_stmt></block></then></if>
      }<pos:position pos:line="735" pos:column="8"/></block></else></if>
    }<pos:position pos:line="736" pos:column="6"/></block></else></if>
  }<pos:position pos:line="737" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="739" pos:column="3">/* If the new part contains a space, this is a mighty stupid redirect
     but we still make an effort to do "right". To the left of a '?'
     letter we replace each space with %20 while it is replaced with '+'
     on the right side of the '?' letter.
  */</comment>
  <expr_stmt><expr><name pos:line="744" pos:column="3">newlen<pos:position pos:line="744" pos:column="9"/></name> <operator pos:line="744" pos:column="10">=<pos:position pos:line="744" pos:column="11"/></operator> <call><name pos:line="744" pos:column="12">strlen_url<pos:position pos:line="744" pos:column="22"/></name><argument_list pos:line="744" pos:column="22">(<argument><expr><name pos:line="744" pos:column="23">useurl<pos:position pos:line="744" pos:column="29"/></name></expr></argument>)<pos:position pos:line="744" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="744" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="746" pos:column="3">urllen<pos:position pos:line="746" pos:column="9"/></name> <operator pos:line="746" pos:column="10">=<pos:position pos:line="746" pos:column="11"/></operator> <call><name pos:line="746" pos:column="12">strlen<pos:position pos:line="746" pos:column="18"/></name><argument_list pos:line="746" pos:column="18">(<argument><expr><name pos:line="746" pos:column="19">url_clone<pos:position pos:line="746" pos:column="28"/></name></expr></argument>)<pos:position pos:line="746" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="746" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="748" pos:column="3">newest<pos:position pos:line="748" pos:column="9"/></name> <operator pos:line="748" pos:column="10">=<pos:position pos:line="748" pos:column="11"/></operator> <call><name pos:line="748" pos:column="12">malloc<pos:position pos:line="748" pos:column="18"/></name><argument_list pos:line="748" pos:column="18">(<argument><expr><name pos:line="748" pos:column="19">urllen<pos:position pos:line="748" pos:column="25"/></name> <operator pos:line="748" pos:column="26">+<pos:position pos:line="748" pos:column="27"/></operator> <literal type="number" pos:line="748" pos:column="28">1<pos:position pos:line="748" pos:column="29"/></literal> <operator pos:line="748" pos:column="30">+<pos:position pos:line="748" pos:column="31"/></operator> <comment type="block" pos:line="748" pos:column="32">/* possible slash */</comment>
                  <name pos:line="749" pos:column="19">newlen<pos:position pos:line="749" pos:column="25"/></name> <operator pos:line="749" pos:column="26">+<pos:position pos:line="749" pos:column="27"/></operator> <literal type="number" pos:line="749" pos:column="28">1<pos:position pos:line="749" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="749" pos:column="30">/* zero byte */</comment>)<pos:position pos:line="749" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="749" pos:column="47"/></expr_stmt>

  <if pos:line="751" pos:column="3">if<condition pos:line="751" pos:column="5">(<expr><operator pos:line="751" pos:column="6">!<pos:position pos:line="751" pos:column="7"/></operator><name pos:line="751" pos:column="7">newest<pos:position pos:line="751" pos:column="13"/></name></expr>)<pos:position pos:line="751" pos:column="14"/></condition><then pos:line="751" pos:column="14"> <block pos:line="751" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="752" pos:column="5">free<pos:position pos:line="752" pos:column="9"/></name><argument_list pos:line="752" pos:column="9">(<argument><expr><name pos:line="752" pos:column="10">url_clone<pos:position pos:line="752" pos:column="19"/></name></expr></argument>)<pos:position pos:line="752" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="752" pos:column="21"/></expr_stmt> <comment type="block" pos:line="752" pos:column="22">/* don't leak this */</comment>
    <return pos:line="753" pos:column="5">return <expr><name pos:line="753" pos:column="12">NULL<pos:position pos:line="753" pos:column="16"/></name></expr>;<pos:position pos:line="753" pos:column="17"/></return>
  }<pos:position pos:line="754" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="756" pos:column="3">/* copy over the root url part */</comment>
  <expr_stmt><expr><call><name pos:line="757" pos:column="3">memcpy<pos:position pos:line="757" pos:column="9"/></name><argument_list pos:line="757" pos:column="9">(<argument><expr><name pos:line="757" pos:column="10">newest<pos:position pos:line="757" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="18">url_clone<pos:position pos:line="757" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="29">urllen<pos:position pos:line="757" pos:column="35"/></name></expr></argument>)<pos:position pos:line="757" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="757" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="759" pos:column="3">/* check if we need to append a slash */</comment>
  <if pos:line="760" pos:column="3">if<condition pos:line="760" pos:column="5">(<expr><operator pos:line="760" pos:column="6">(<pos:position pos:line="760" pos:column="7"/></operator><literal type="char" pos:line="760" pos:column="7">'/'<pos:position pos:line="760" pos:column="10"/></literal> <operator pos:line="760" pos:column="11">==<pos:position pos:line="760" pos:column="13"/></operator> <name><name pos:line="760" pos:column="14">useurl<pos:position pos:line="760" pos:column="20"/></name><index pos:line="760" pos:column="20">[<expr><literal type="number" pos:line="760" pos:column="21">0<pos:position pos:line="760" pos:column="22"/></literal></expr>]<pos:position pos:line="760" pos:column="23"/></index></name><operator pos:line="760" pos:column="23">)<pos:position pos:line="760" pos:column="24"/></operator> <operator pos:line="760" pos:column="25">||<pos:position pos:line="760" pos:column="27"/></operator> <operator pos:line="760" pos:column="28">(<pos:position pos:line="760" pos:column="29"/></operator><name pos:line="760" pos:column="29">protsep<pos:position pos:line="760" pos:column="36"/></name> <operator pos:line="760" pos:column="37">&amp;&amp;<pos:position pos:line="760" pos:column="47"/></operator> <operator pos:line="760" pos:column="40">!<pos:position pos:line="760" pos:column="41"/></operator><operator pos:line="760" pos:column="41">*<pos:position pos:line="760" pos:column="42"/></operator><name pos:line="760" pos:column="42">protsep<pos:position pos:line="760" pos:column="49"/></name><operator pos:line="760" pos:column="49">)<pos:position pos:line="760" pos:column="50"/></operator> <operator pos:line="760" pos:column="51">||<pos:position pos:line="760" pos:column="53"/></operator> <operator pos:line="760" pos:column="54">(<pos:position pos:line="760" pos:column="55"/></operator><literal type="char" pos:line="760" pos:column="55">'?'<pos:position pos:line="760" pos:column="58"/></literal> <operator pos:line="760" pos:column="59">==<pos:position pos:line="760" pos:column="61"/></operator> <name><name pos:line="760" pos:column="62">useurl<pos:position pos:line="760" pos:column="68"/></name><index pos:line="760" pos:column="68">[<expr><literal type="number" pos:line="760" pos:column="69">0<pos:position pos:line="760" pos:column="70"/></literal></expr>]<pos:position pos:line="760" pos:column="71"/></index></name><operator pos:line="760" pos:column="71">)<pos:position pos:line="760" pos:column="72"/></operator></expr>)<pos:position pos:line="760" pos:column="73"/></condition><then pos:line="760" pos:column="73">
    <block type="pseudo"><empty_stmt pos:line="761" pos:column="5">;<pos:position pos:line="761" pos:column="6"/></empty_stmt></block></then>
  <else pos:line="762" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="763" pos:column="5">newest<pos:position pos:line="763" pos:column="11"/></name><index pos:line="763" pos:column="11">[<expr><name pos:line="763" pos:column="12">urllen<pos:position pos:line="763" pos:column="18"/></name><operator pos:line="763" pos:column="18">++<pos:position pos:line="763" pos:column="20"/></operator></expr>]<pos:position pos:line="763" pos:column="21"/></index></name><operator pos:line="763" pos:column="21">=<pos:position pos:line="763" pos:column="22"/></operator><literal type="char" pos:line="763" pos:column="22">'/'<pos:position pos:line="763" pos:column="25"/></literal></expr>;<pos:position pos:line="763" pos:column="26"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="765" pos:column="3">/* then append the new piece on the right side */</comment>
  <expr_stmt><expr><call><name pos:line="766" pos:column="3">strcpy_url<pos:position pos:line="766" pos:column="13"/></name><argument_list pos:line="766" pos:column="13">(<argument><expr><operator pos:line="766" pos:column="14">&amp;<pos:position pos:line="766" pos:column="19"/></operator><name><name pos:line="766" pos:column="15">newest<pos:position pos:line="766" pos:column="21"/></name><index pos:line="766" pos:column="21">[<expr><name pos:line="766" pos:column="22">urllen<pos:position pos:line="766" pos:column="28"/></name></expr>]<pos:position pos:line="766" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="766" pos:column="31">useurl<pos:position pos:line="766" pos:column="37"/></name></expr></argument>)<pos:position pos:line="766" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="766" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="768" pos:column="3">free<pos:position pos:line="768" pos:column="7"/></name><argument_list pos:line="768" pos:column="7">(<argument><expr><name pos:line="768" pos:column="8">url_clone<pos:position pos:line="768" pos:column="17"/></name></expr></argument>)<pos:position pos:line="768" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="768" pos:column="19"/></expr_stmt>

  <return pos:line="770" pos:column="3">return <expr><name pos:line="770" pos:column="10">newest<pos:position pos:line="770" pos:column="16"/></name></expr>;<pos:position pos:line="770" pos:column="17"/></return>
}<pos:position pos:line="771" pos:column="2"/></block></function>
<cpp:endif pos:line="772" pos:column="1">#<cpp:directive pos:line="772" pos:column="2">endif<pos:position pos:line="772" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="772" pos:column="8">/* CURL_DISABLE_HTTP */</comment>

<comment type="block" pos:line="774" pos:column="1">/*
 * Curl_follow() handles the URL redirect magic. Pass in the 'newurl' string
 * as given by the remote server and set up the new URL to request.
 */</comment>
<function><type><name pos:line="778" pos:column="1">CURLcode<pos:position pos:line="778" pos:column="9"/></name></type> <name pos:line="778" pos:column="10">Curl_follow<pos:position pos:line="778" pos:column="21"/></name><parameter_list pos:line="778" pos:column="21">(<parameter><decl><type><name><name pos:line="778" pos:column="22">struct<pos:position pos:line="778" pos:column="28"/></name> <name pos:line="778" pos:column="29">Curl_easy<pos:position pos:line="778" pos:column="38"/></name></name> <modifier pos:line="778" pos:column="39">*<pos:position pos:line="778" pos:column="40"/></modifier></type><name pos:line="778" pos:column="40">data<pos:position pos:line="778" pos:column="44"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="779" pos:column="22">char<pos:position pos:line="779" pos:column="26"/></name> <modifier pos:line="779" pos:column="27">*<pos:position pos:line="779" pos:column="28"/></modifier></type><name pos:line="779" pos:column="28">newurl<pos:position pos:line="779" pos:column="34"/></name></decl></parameter>, <comment type="block" pos:line="779" pos:column="36">/* this 'newurl' is the Location: string,
                                      and it must be malloc()ed before passed
                                      here */</comment>
                     <parameter><decl><type><name pos:line="782" pos:column="22">followtype<pos:position pos:line="782" pos:column="32"/></name></type> <name pos:line="782" pos:column="33">type<pos:position pos:line="782" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="782" pos:column="38"/></parameter_list> <comment type="block" pos:line="782" pos:column="39">/* see transfer.h */</comment>
<block pos:line="783" pos:column="1">{
<cpp:ifdef pos:line="784" pos:column="1">#<cpp:directive pos:line="784" pos:column="2">ifdef<pos:position pos:line="784" pos:column="7"/></cpp:directive> <name pos:line="784" pos:column="8">CURL_DISABLE_HTTP<pos:position pos:line="784" pos:column="25"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="785" pos:column="3">(<pos:position pos:line="785" pos:column="4"/></operator><name pos:line="785" pos:column="4">void<pos:position pos:line="785" pos:column="8"/></name><operator pos:line="785" pos:column="8">)<pos:position pos:line="785" pos:column="9"/></operator><name pos:line="785" pos:column="9">data<pos:position pos:line="785" pos:column="13"/></name></expr>;<pos:position pos:line="785" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="786" pos:column="3">(<pos:position pos:line="786" pos:column="4"/></operator><name pos:line="786" pos:column="4">void<pos:position pos:line="786" pos:column="8"/></name><operator pos:line="786" pos:column="8">)<pos:position pos:line="786" pos:column="9"/></operator><name pos:line="786" pos:column="9">newurl<pos:position pos:line="786" pos:column="15"/></name></expr>;<pos:position pos:line="786" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="787" pos:column="3">(<pos:position pos:line="787" pos:column="4"/></operator><name pos:line="787" pos:column="4">void<pos:position pos:line="787" pos:column="8"/></name><operator pos:line="787" pos:column="8">)<pos:position pos:line="787" pos:column="9"/></operator><name pos:line="787" pos:column="9">type<pos:position pos:line="787" pos:column="13"/></name></expr>;<pos:position pos:line="787" pos:column="14"/></expr_stmt>
  <comment type="block" pos:line="788" pos:column="3">/* Location: following will not happen when HTTP is disabled */</comment>
  <return pos:line="789" pos:column="3">return <expr><name pos:line="789" pos:column="10">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="789" pos:column="34"/></name></expr>;<pos:position pos:line="789" pos:column="35"/></return>
<cpp:else pos:line="790" pos:column="1">#<cpp:directive pos:line="790" pos:column="2">else<pos:position pos:line="790" pos:column="6"/></cpp:directive></cpp:else>

  <comment type="block" pos:line="792" pos:column="3">/* Location: redirect */</comment>
  <decl_stmt><decl><type><name pos:line="793" pos:column="3">bool<pos:position pos:line="793" pos:column="7"/></name></type> <name pos:line="793" pos:column="8">disallowport<pos:position pos:line="793" pos:column="20"/></name> <init pos:line="793" pos:column="21">= <expr><name pos:line="793" pos:column="23">FALSE<pos:position pos:line="793" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="793" pos:column="29"/></decl_stmt>

  <if pos:line="795" pos:column="3">if<condition pos:line="795" pos:column="5">(<expr><name pos:line="795" pos:column="6">type<pos:position pos:line="795" pos:column="10"/></name> <operator pos:line="795" pos:column="11">==<pos:position pos:line="795" pos:column="13"/></operator> <name pos:line="795" pos:column="14">FOLLOW_REDIR<pos:position pos:line="795" pos:column="26"/></name></expr>)<pos:position pos:line="795" pos:column="27"/></condition><then pos:line="795" pos:column="27"> <block pos:line="795" pos:column="28">{
    <if pos:line="796" pos:column="5">if<condition pos:line="796" pos:column="7">(<expr><operator pos:line="796" pos:column="8">(<pos:position pos:line="796" pos:column="9"/></operator><name><name pos:line="796" pos:column="9">data<pos:position pos:line="796" pos:column="13"/></name><operator pos:line="796" pos:column="13">-&gt;<pos:position pos:line="796" pos:column="18"/></operator><name pos:line="796" pos:column="15">set<pos:position pos:line="796" pos:column="18"/></name><operator pos:line="796" pos:column="18">.<pos:position pos:line="796" pos:column="19"/></operator><name pos:line="796" pos:column="19">maxredirs<pos:position pos:line="796" pos:column="28"/></name></name> <operator pos:line="796" pos:column="29">!=<pos:position pos:line="796" pos:column="31"/></operator> <operator pos:line="796" pos:column="32">-<pos:position pos:line="796" pos:column="33"/></operator><literal type="number" pos:line="796" pos:column="33">1<pos:position pos:line="796" pos:column="34"/></literal><operator pos:line="796" pos:column="34">)<pos:position pos:line="796" pos:column="35"/></operator> <operator pos:line="796" pos:column="36">&amp;&amp;<pos:position pos:line="796" pos:column="46"/></operator>
        <operator pos:line="797" pos:column="9">(<pos:position pos:line="797" pos:column="10"/></operator><name><name pos:line="797" pos:column="10">data<pos:position pos:line="797" pos:column="14"/></name><operator pos:line="797" pos:column="14">-&gt;<pos:position pos:line="797" pos:column="19"/></operator><name pos:line="797" pos:column="16">set<pos:position pos:line="797" pos:column="19"/></name><operator pos:line="797" pos:column="19">.<pos:position pos:line="797" pos:column="20"/></operator><name pos:line="797" pos:column="20">followlocation<pos:position pos:line="797" pos:column="34"/></name></name> <operator pos:line="797" pos:column="35">&gt;=<pos:position pos:line="797" pos:column="40"/></operator> <name><name pos:line="797" pos:column="38">data<pos:position pos:line="797" pos:column="42"/></name><operator pos:line="797" pos:column="42">-&gt;<pos:position pos:line="797" pos:column="47"/></operator><name pos:line="797" pos:column="44">set<pos:position pos:line="797" pos:column="47"/></name><operator pos:line="797" pos:column="47">.<pos:position pos:line="797" pos:column="48"/></operator><name pos:line="797" pos:column="48">maxredirs<pos:position pos:line="797" pos:column="57"/></name></name><operator pos:line="797" pos:column="57">)<pos:position pos:line="797" pos:column="58"/></operator></expr>)<pos:position pos:line="797" pos:column="59"/></condition><then pos:line="797" pos:column="59"> <block pos:line="797" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="798" pos:column="7">failf<pos:position pos:line="798" pos:column="12"/></name><argument_list pos:line="798" pos:column="12">(<argument><expr><name pos:line="798" pos:column="13">data<pos:position pos:line="798" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="798" pos:column="19">"Maximum (%ld) redirects followed"<pos:position pos:line="798" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="798" pos:column="55">data<pos:position pos:line="798" pos:column="59"/></name><operator pos:line="798" pos:column="59">-&gt;<pos:position pos:line="798" pos:column="64"/></operator><name pos:line="798" pos:column="61">set<pos:position pos:line="798" pos:column="64"/></name><operator pos:line="798" pos:column="64">.<pos:position pos:line="798" pos:column="65"/></operator><name pos:line="798" pos:column="65">maxredirs<pos:position pos:line="798" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="798" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="798" pos:column="76"/></expr_stmt>
      <return pos:line="799" pos:column="7">return <expr><name pos:line="799" pos:column="14">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="799" pos:column="38"/></name></expr>;<pos:position pos:line="799" pos:column="39"/></return>
    }<pos:position pos:line="800" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="802" pos:column="5">/* mark the next request as a followed location: */</comment>
    <expr_stmt><expr><name><name pos:line="803" pos:column="5">data<pos:position pos:line="803" pos:column="9"/></name><operator pos:line="803" pos:column="9">-&gt;<pos:position pos:line="803" pos:column="14"/></operator><name pos:line="803" pos:column="11">state<pos:position pos:line="803" pos:column="16"/></name><operator pos:line="803" pos:column="16">.<pos:position pos:line="803" pos:column="17"/></operator><name pos:line="803" pos:column="17">this_is_a_follow<pos:position pos:line="803" pos:column="33"/></name></name> <operator pos:line="803" pos:column="34">=<pos:position pos:line="803" pos:column="35"/></operator> <name pos:line="803" pos:column="36">TRUE<pos:position pos:line="803" pos:column="40"/></name></expr>;<pos:position pos:line="803" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="805" pos:column="5">data<pos:position pos:line="805" pos:column="9"/></name><operator pos:line="805" pos:column="9">-&gt;<pos:position pos:line="805" pos:column="14"/></operator><name pos:line="805" pos:column="11">set<pos:position pos:line="805" pos:column="14"/></name><operator pos:line="805" pos:column="14">.<pos:position pos:line="805" pos:column="15"/></operator><name pos:line="805" pos:column="15">followlocation<pos:position pos:line="805" pos:column="29"/></name></name><operator pos:line="805" pos:column="29">++<pos:position pos:line="805" pos:column="31"/></operator></expr>;<pos:position pos:line="805" pos:column="32"/></expr_stmt> <comment type="block" pos:line="805" pos:column="33">/* count location-followers */</comment>

    <if pos:line="807" pos:column="5">if<condition pos:line="807" pos:column="7">(<expr><name><name pos:line="807" pos:column="8">data<pos:position pos:line="807" pos:column="12"/></name><operator pos:line="807" pos:column="12">-&gt;<pos:position pos:line="807" pos:column="17"/></operator><name pos:line="807" pos:column="14">set<pos:position pos:line="807" pos:column="17"/></name><operator pos:line="807" pos:column="17">.<pos:position pos:line="807" pos:column="18"/></operator><name pos:line="807" pos:column="18">http_auto_referer<pos:position pos:line="807" pos:column="35"/></name></name></expr>)<pos:position pos:line="807" pos:column="36"/></condition><then pos:line="807" pos:column="36"> <block pos:line="807" pos:column="37">{
      <comment type="block" pos:line="808" pos:column="7">/* We are asked to automatically set the previous URL as the referer
         when we get the next URL. We pick the -&gt;url field, which may or may
         not be 100% correct */</comment>

      <if pos:line="812" pos:column="7">if<condition pos:line="812" pos:column="9">(<expr><name><name pos:line="812" pos:column="10">data<pos:position pos:line="812" pos:column="14"/></name><operator pos:line="812" pos:column="14">-&gt;<pos:position pos:line="812" pos:column="19"/></operator><name pos:line="812" pos:column="16">change<pos:position pos:line="812" pos:column="22"/></name><operator pos:line="812" pos:column="22">.<pos:position pos:line="812" pos:column="23"/></operator><name pos:line="812" pos:column="23">referer_alloc<pos:position pos:line="812" pos:column="36"/></name></name></expr>)<pos:position pos:line="812" pos:column="37"/></condition><then pos:line="812" pos:column="37"> <block pos:line="812" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="813" pos:column="9">Curl_safefree<pos:position pos:line="813" pos:column="22"/></name><argument_list pos:line="813" pos:column="22">(<argument><expr><name><name pos:line="813" pos:column="23">data<pos:position pos:line="813" pos:column="27"/></name><operator pos:line="813" pos:column="27">-&gt;<pos:position pos:line="813" pos:column="32"/></operator><name pos:line="813" pos:column="29">change<pos:position pos:line="813" pos:column="35"/></name><operator pos:line="813" pos:column="35">.<pos:position pos:line="813" pos:column="36"/></operator><name pos:line="813" pos:column="36">referer<pos:position pos:line="813" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="813" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="813" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="814" pos:column="9">data<pos:position pos:line="814" pos:column="13"/></name><operator pos:line="814" pos:column="13">-&gt;<pos:position pos:line="814" pos:column="18"/></operator><name pos:line="814" pos:column="15">change<pos:position pos:line="814" pos:column="21"/></name><operator pos:line="814" pos:column="21">.<pos:position pos:line="814" pos:column="22"/></operator><name pos:line="814" pos:column="22">referer_alloc<pos:position pos:line="814" pos:column="35"/></name></name> <operator pos:line="814" pos:column="36">=<pos:position pos:line="814" pos:column="37"/></operator> <name pos:line="814" pos:column="38">FALSE<pos:position pos:line="814" pos:column="43"/></name></expr>;<pos:position pos:line="814" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="815" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="817" pos:column="7">data<pos:position pos:line="817" pos:column="11"/></name><operator pos:line="817" pos:column="11">-&gt;<pos:position pos:line="817" pos:column="16"/></operator><name pos:line="817" pos:column="13">change<pos:position pos:line="817" pos:column="19"/></name><operator pos:line="817" pos:column="19">.<pos:position pos:line="817" pos:column="20"/></operator><name pos:line="817" pos:column="20">referer<pos:position pos:line="817" pos:column="27"/></name></name> <operator pos:line="817" pos:column="28">=<pos:position pos:line="817" pos:column="29"/></operator> <call><name pos:line="817" pos:column="30">strdup<pos:position pos:line="817" pos:column="36"/></name><argument_list pos:line="817" pos:column="36">(<argument><expr><name><name pos:line="817" pos:column="37">data<pos:position pos:line="817" pos:column="41"/></name><operator pos:line="817" pos:column="41">-&gt;<pos:position pos:line="817" pos:column="46"/></operator><name pos:line="817" pos:column="43">change<pos:position pos:line="817" pos:column="49"/></name><operator pos:line="817" pos:column="49">.<pos:position pos:line="817" pos:column="50"/></operator><name pos:line="817" pos:column="50">url<pos:position pos:line="817" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="817" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="817" pos:column="55"/></expr_stmt>
      <if pos:line="818" pos:column="7">if<condition pos:line="818" pos:column="9">(<expr><operator pos:line="818" pos:column="10">!<pos:position pos:line="818" pos:column="11"/></operator><name><name pos:line="818" pos:column="11">data<pos:position pos:line="818" pos:column="15"/></name><operator pos:line="818" pos:column="15">-&gt;<pos:position pos:line="818" pos:column="20"/></operator><name pos:line="818" pos:column="17">change<pos:position pos:line="818" pos:column="23"/></name><operator pos:line="818" pos:column="23">.<pos:position pos:line="818" pos:column="24"/></operator><name pos:line="818" pos:column="24">referer<pos:position pos:line="818" pos:column="31"/></name></name></expr>)<pos:position pos:line="818" pos:column="32"/></condition><then pos:line="818" pos:column="32">
        <block type="pseudo"><return pos:line="819" pos:column="9">return <expr><name pos:line="819" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="819" pos:column="35"/></name></expr>;<pos:position pos:line="819" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="820" pos:column="7">data<pos:position pos:line="820" pos:column="11"/></name><operator pos:line="820" pos:column="11">-&gt;<pos:position pos:line="820" pos:column="16"/></operator><name pos:line="820" pos:column="13">change<pos:position pos:line="820" pos:column="19"/></name><operator pos:line="820" pos:column="19">.<pos:position pos:line="820" pos:column="20"/></operator><name pos:line="820" pos:column="20">referer_alloc<pos:position pos:line="820" pos:column="33"/></name></name> <operator pos:line="820" pos:column="34">=<pos:position pos:line="820" pos:column="35"/></operator> <name pos:line="820" pos:column="36">TRUE<pos:position pos:line="820" pos:column="40"/></name></expr>;<pos:position pos:line="820" pos:column="41"/></expr_stmt> <comment type="block" pos:line="820" pos:column="42">/* yes, free this later */</comment>
    }<pos:position pos:line="821" pos:column="6"/></block></then></if>
  }<pos:position pos:line="822" pos:column="4"/></block></then></if>

  <if pos:line="824" pos:column="3">if<condition pos:line="824" pos:column="5">(<expr><operator pos:line="824" pos:column="6">!<pos:position pos:line="824" pos:column="7"/></operator><call><name pos:line="824" pos:column="7">is_absolute_url<pos:position pos:line="824" pos:column="22"/></name><argument_list pos:line="824" pos:column="22">(<argument><expr><name pos:line="824" pos:column="23">newurl<pos:position pos:line="824" pos:column="29"/></name></expr></argument>)<pos:position pos:line="824" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="824" pos:column="31"/></condition><then pos:line="824" pos:column="31">  <block pos:line="824" pos:column="33">{
    <comment type="block" format="doxygen" pos:line="825" pos:column="5">/***
     *DANG* this is an RFC 2068 violation. The URL is supposed
     to be absolute and this doesn't seem to be that!
     */</comment>
    <decl_stmt><decl><type><name pos:line="829" pos:column="5">char<pos:position pos:line="829" pos:column="9"/></name> <modifier pos:line="829" pos:column="10">*<pos:position pos:line="829" pos:column="11"/></modifier></type><name pos:line="829" pos:column="11">absolute<pos:position pos:line="829" pos:column="19"/></name> <init pos:line="829" pos:column="20">= <expr><call><name pos:line="829" pos:column="22">concat_url<pos:position pos:line="829" pos:column="32"/></name><argument_list pos:line="829" pos:column="32">(<argument><expr><name><name pos:line="829" pos:column="33">data<pos:position pos:line="829" pos:column="37"/></name><operator pos:line="829" pos:column="37">-&gt;<pos:position pos:line="829" pos:column="42"/></operator><name pos:line="829" pos:column="39">change<pos:position pos:line="829" pos:column="45"/></name><operator pos:line="829" pos:column="45">.<pos:position pos:line="829" pos:column="46"/></operator><name pos:line="829" pos:column="46">url<pos:position pos:line="829" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="829" pos:column="51">newurl<pos:position pos:line="829" pos:column="57"/></name></expr></argument>)<pos:position pos:line="829" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="829" pos:column="59"/></decl_stmt>
    <if pos:line="830" pos:column="5">if<condition pos:line="830" pos:column="7">(<expr><operator pos:line="830" pos:column="8">!<pos:position pos:line="830" pos:column="9"/></operator><name pos:line="830" pos:column="9">absolute<pos:position pos:line="830" pos:column="17"/></name></expr>)<pos:position pos:line="830" pos:column="18"/></condition><then pos:line="830" pos:column="18">
      <block type="pseudo"><return pos:line="831" pos:column="7">return <expr><name pos:line="831" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="831" pos:column="33"/></name></expr>;<pos:position pos:line="831" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="832" pos:column="5">free<pos:position pos:line="832" pos:column="9"/></name><argument_list pos:line="832" pos:column="9">(<argument><expr><name pos:line="832" pos:column="10">newurl<pos:position pos:line="832" pos:column="16"/></name></expr></argument>)<pos:position pos:line="832" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="832" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="833" pos:column="5">newurl<pos:position pos:line="833" pos:column="11"/></name> <operator pos:line="833" pos:column="12">=<pos:position pos:line="833" pos:column="13"/></operator> <name pos:line="833" pos:column="14">absolute<pos:position pos:line="833" pos:column="22"/></name></expr>;<pos:position pos:line="833" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="834" pos:column="4"/></block></then>
  <else pos:line="835" pos:column="3">else <block pos:line="835" pos:column="8">{
    <comment type="block" pos:line="836" pos:column="5">/* The new URL MAY contain space or high byte values, that means a mighty
       stupid redirect URL but we still make an effort to do "right". */</comment>
    <decl_stmt><decl><type><name pos:line="838" pos:column="5">char<pos:position pos:line="838" pos:column="9"/></name> <modifier pos:line="838" pos:column="10">*<pos:position pos:line="838" pos:column="11"/></modifier></type><name pos:line="838" pos:column="11">newest<pos:position pos:line="838" pos:column="17"/></name></decl>;<pos:position pos:line="838" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="839" pos:column="5">size_t<pos:position pos:line="839" pos:column="11"/></name></type> <name pos:line="839" pos:column="12">newlen<pos:position pos:line="839" pos:column="18"/></name> <init pos:line="839" pos:column="19">= <expr><call><name pos:line="839" pos:column="21">strlen_url<pos:position pos:line="839" pos:column="31"/></name><argument_list pos:line="839" pos:column="31">(<argument><expr><name pos:line="839" pos:column="32">newurl<pos:position pos:line="839" pos:column="38"/></name></expr></argument>)<pos:position pos:line="839" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="839" pos:column="40"/></decl_stmt>

    <comment type="block" pos:line="841" pos:column="5">/* This is an absolute URL, don't allow the custom port number */</comment>
    <expr_stmt><expr><name pos:line="842" pos:column="5">disallowport<pos:position pos:line="842" pos:column="17"/></name> <operator pos:line="842" pos:column="18">=<pos:position pos:line="842" pos:column="19"/></operator> <name pos:line="842" pos:column="20">TRUE<pos:position pos:line="842" pos:column="24"/></name></expr>;<pos:position pos:line="842" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="844" pos:column="5">newest<pos:position pos:line="844" pos:column="11"/></name> <operator pos:line="844" pos:column="12">=<pos:position pos:line="844" pos:column="13"/></operator> <call><name pos:line="844" pos:column="14">malloc<pos:position pos:line="844" pos:column="20"/></name><argument_list pos:line="844" pos:column="20">(<argument><expr><name pos:line="844" pos:column="21">newlen<pos:position pos:line="844" pos:column="27"/></name><operator pos:line="844" pos:column="27">+<pos:position pos:line="844" pos:column="28"/></operator><literal type="number" pos:line="844" pos:column="28">1<pos:position pos:line="844" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="844" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="844" pos:column="31"/></expr_stmt> <comment type="block" pos:line="844" pos:column="32">/* get memory for this */</comment>
    <if pos:line="845" pos:column="5">if<condition pos:line="845" pos:column="7">(<expr><operator pos:line="845" pos:column="8">!<pos:position pos:line="845" pos:column="9"/></operator><name pos:line="845" pos:column="9">newest<pos:position pos:line="845" pos:column="15"/></name></expr>)<pos:position pos:line="845" pos:column="16"/></condition><then pos:line="845" pos:column="16">
      <block type="pseudo"><return pos:line="846" pos:column="7">return <expr><name pos:line="846" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="846" pos:column="33"/></name></expr>;<pos:position pos:line="846" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="847" pos:column="5">strcpy_url<pos:position pos:line="847" pos:column="15"/></name><argument_list pos:line="847" pos:column="15">(<argument><expr><name pos:line="847" pos:column="16">newest<pos:position pos:line="847" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="847" pos:column="24">newurl<pos:position pos:line="847" pos:column="30"/></name></expr></argument>)<pos:position pos:line="847" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="847" pos:column="32"/></expr_stmt> <comment type="block" pos:line="847" pos:column="33">/* create a space-free URL */</comment>

    <expr_stmt><expr><call><name pos:line="849" pos:column="5">free<pos:position pos:line="849" pos:column="9"/></name><argument_list pos:line="849" pos:column="9">(<argument><expr><name pos:line="849" pos:column="10">newurl<pos:position pos:line="849" pos:column="16"/></name></expr></argument>)<pos:position pos:line="849" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="849" pos:column="18"/></expr_stmt> <comment type="block" pos:line="849" pos:column="19">/* that was no good */</comment>
    <expr_stmt><expr><name pos:line="850" pos:column="5">newurl<pos:position pos:line="850" pos:column="11"/></name> <operator pos:line="850" pos:column="12">=<pos:position pos:line="850" pos:column="13"/></operator> <name pos:line="850" pos:column="14">newest<pos:position pos:line="850" pos:column="20"/></name></expr>;<pos:position pos:line="850" pos:column="21"/></expr_stmt> <comment type="block" pos:line="850" pos:column="22">/* use this instead now */</comment>

  }<pos:position pos:line="852" pos:column="4"/></block></else></if>

  <if pos:line="854" pos:column="3">if<condition pos:line="854" pos:column="5">(<expr><name pos:line="854" pos:column="6">type<pos:position pos:line="854" pos:column="10"/></name> <operator pos:line="854" pos:column="11">==<pos:position pos:line="854" pos:column="13"/></operator> <name pos:line="854" pos:column="14">FOLLOW_FAKE<pos:position pos:line="854" pos:column="25"/></name></expr>)<pos:position pos:line="854" pos:column="26"/></condition><then pos:line="854" pos:column="26"> <block pos:line="854" pos:column="27">{
    <comment type="block" pos:line="855" pos:column="5">/* we're only figuring out the new url if we would've followed locations
       but now we're done so we can get out! */</comment>
    <expr_stmt><expr><name><name pos:line="857" pos:column="5">data<pos:position pos:line="857" pos:column="9"/></name><operator pos:line="857" pos:column="9">-&gt;<pos:position pos:line="857" pos:column="14"/></operator><name pos:line="857" pos:column="11">info<pos:position pos:line="857" pos:column="15"/></name><operator pos:line="857" pos:column="15">.<pos:position pos:line="857" pos:column="16"/></operator><name pos:line="857" pos:column="16">wouldredirect<pos:position pos:line="857" pos:column="29"/></name></name> <operator pos:line="857" pos:column="30">=<pos:position pos:line="857" pos:column="31"/></operator> <name pos:line="857" pos:column="32">newurl<pos:position pos:line="857" pos:column="38"/></name></expr>;<pos:position pos:line="857" pos:column="39"/></expr_stmt>
    <return pos:line="858" pos:column="5">return <expr><name pos:line="858" pos:column="12">CURLE_OK<pos:position pos:line="858" pos:column="20"/></name></expr>;<pos:position pos:line="858" pos:column="21"/></return>
  }<pos:position pos:line="859" pos:column="4"/></block></then></if>

  <if pos:line="861" pos:column="3">if<condition pos:line="861" pos:column="5">(<expr><name pos:line="861" pos:column="6">disallowport<pos:position pos:line="861" pos:column="18"/></name></expr>)<pos:position pos:line="861" pos:column="19"/></condition><then pos:line="861" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="862" pos:column="5">data<pos:position pos:line="862" pos:column="9"/></name><operator pos:line="862" pos:column="9">-&gt;<pos:position pos:line="862" pos:column="14"/></operator><name pos:line="862" pos:column="11">state<pos:position pos:line="862" pos:column="16"/></name><operator pos:line="862" pos:column="16">.<pos:position pos:line="862" pos:column="17"/></operator><name pos:line="862" pos:column="17">allow_port<pos:position pos:line="862" pos:column="27"/></name></name> <operator pos:line="862" pos:column="28">=<pos:position pos:line="862" pos:column="29"/></operator> <name pos:line="862" pos:column="30">FALSE<pos:position pos:line="862" pos:column="35"/></name></expr>;<pos:position pos:line="862" pos:column="36"/></expr_stmt></block></then></if>

  <if pos:line="864" pos:column="3">if<condition pos:line="864" pos:column="5">(<expr><name><name pos:line="864" pos:column="6">data<pos:position pos:line="864" pos:column="10"/></name><operator pos:line="864" pos:column="10">-&gt;<pos:position pos:line="864" pos:column="15"/></operator><name pos:line="864" pos:column="12">change<pos:position pos:line="864" pos:column="18"/></name><operator pos:line="864" pos:column="18">.<pos:position pos:line="864" pos:column="19"/></operator><name pos:line="864" pos:column="19">url_alloc<pos:position pos:line="864" pos:column="28"/></name></name></expr>)<pos:position pos:line="864" pos:column="29"/></condition><then pos:line="864" pos:column="29"> <block pos:line="864" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="865" pos:column="5">Curl_safefree<pos:position pos:line="865" pos:column="18"/></name><argument_list pos:line="865" pos:column="18">(<argument><expr><name><name pos:line="865" pos:column="19">data<pos:position pos:line="865" pos:column="23"/></name><operator pos:line="865" pos:column="23">-&gt;<pos:position pos:line="865" pos:column="28"/></operator><name pos:line="865" pos:column="25">change<pos:position pos:line="865" pos:column="31"/></name><operator pos:line="865" pos:column="31">.<pos:position pos:line="865" pos:column="32"/></operator><name pos:line="865" pos:column="32">url<pos:position pos:line="865" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="865" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="865" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="866" pos:column="5">data<pos:position pos:line="866" pos:column="9"/></name><operator pos:line="866" pos:column="9">-&gt;<pos:position pos:line="866" pos:column="14"/></operator><name pos:line="866" pos:column="11">change<pos:position pos:line="866" pos:column="17"/></name><operator pos:line="866" pos:column="17">.<pos:position pos:line="866" pos:column="18"/></operator><name pos:line="866" pos:column="18">url_alloc<pos:position pos:line="866" pos:column="27"/></name></name> <operator pos:line="866" pos:column="28">=<pos:position pos:line="866" pos:column="29"/></operator> <name pos:line="866" pos:column="30">FALSE<pos:position pos:line="866" pos:column="35"/></name></expr>;<pos:position pos:line="866" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="867" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="869" pos:column="3">data<pos:position pos:line="869" pos:column="7"/></name><operator pos:line="869" pos:column="7">-&gt;<pos:position pos:line="869" pos:column="12"/></operator><name pos:line="869" pos:column="9">change<pos:position pos:line="869" pos:column="15"/></name><operator pos:line="869" pos:column="15">.<pos:position pos:line="869" pos:column="16"/></operator><name pos:line="869" pos:column="16">url<pos:position pos:line="869" pos:column="19"/></name></name> <operator pos:line="869" pos:column="20">=<pos:position pos:line="869" pos:column="21"/></operator> <name pos:line="869" pos:column="22">newurl<pos:position pos:line="869" pos:column="28"/></name></expr>;<pos:position pos:line="869" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="870" pos:column="3">data<pos:position pos:line="870" pos:column="7"/></name><operator pos:line="870" pos:column="7">-&gt;<pos:position pos:line="870" pos:column="12"/></operator><name pos:line="870" pos:column="9">change<pos:position pos:line="870" pos:column="15"/></name><operator pos:line="870" pos:column="15">.<pos:position pos:line="870" pos:column="16"/></operator><name pos:line="870" pos:column="16">url_alloc<pos:position pos:line="870" pos:column="25"/></name></name> <operator pos:line="870" pos:column="26">=<pos:position pos:line="870" pos:column="27"/></operator> <name pos:line="870" pos:column="28">TRUE<pos:position pos:line="870" pos:column="32"/></name></expr>;<pos:position pos:line="870" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="871" pos:column="3">newurl<pos:position pos:line="871" pos:column="9"/></name> <operator pos:line="871" pos:column="10">=<pos:position pos:line="871" pos:column="11"/></operator> <name pos:line="871" pos:column="12">NULL<pos:position pos:line="871" pos:column="16"/></name></expr>;<pos:position pos:line="871" pos:column="17"/></expr_stmt> <comment type="block" pos:line="871" pos:column="18">/* don't free! */</comment>

  <expr_stmt><expr><call><name pos:line="873" pos:column="3">infof<pos:position pos:line="873" pos:column="8"/></name><argument_list pos:line="873" pos:column="8">(<argument><expr><name pos:line="873" pos:column="9">data<pos:position pos:line="873" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="873" pos:column="15">"Issue another request to this URL: '%s'\n"<pos:position pos:line="873" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="873" pos:column="60">data<pos:position pos:line="873" pos:column="64"/></name><operator pos:line="873" pos:column="64">-&gt;<pos:position pos:line="873" pos:column="69"/></operator><name pos:line="873" pos:column="66">change<pos:position pos:line="873" pos:column="72"/></name><operator pos:line="873" pos:column="72">.<pos:position pos:line="873" pos:column="73"/></operator><name pos:line="873" pos:column="73">url<pos:position pos:line="873" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="873" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="873" pos:column="78"/></expr_stmt>

  <comment type="block" pos:line="875" pos:column="3">/*
   * We get here when the HTTP code is 300-399 (and 401). We need to perform
   * differently based on exactly what return code there was.
   *
   * News from 7.10.6: we can also get here on a 401 or 407, in case we act on
   * a HTTP (proxy-) authentication scheme other than Basic.
   */</comment>
  <switch pos:line="882" pos:column="3">switch<condition pos:line="882" pos:column="9">(<expr><name><name pos:line="882" pos:column="10">data<pos:position pos:line="882" pos:column="14"/></name><operator pos:line="882" pos:column="14">-&gt;<pos:position pos:line="882" pos:column="19"/></operator><name pos:line="882" pos:column="16">info<pos:position pos:line="882" pos:column="20"/></name><operator pos:line="882" pos:column="20">.<pos:position pos:line="882" pos:column="21"/></operator><name pos:line="882" pos:column="21">httpcode<pos:position pos:line="882" pos:column="29"/></name></name></expr>)<pos:position pos:line="882" pos:column="30"/></condition> <block pos:line="882" pos:column="31">{
    <comment type="block" pos:line="883" pos:column="5">/* 401 - Act on a WWW-Authenticate, we keep on moving and do the
       Authorization: XXXX header in the HTTP request code snippet */</comment>
    <comment type="block" pos:line="885" pos:column="5">/* 407 - Act on a Proxy-Authenticate, we keep on moving and do the
       Proxy-Authorization: XXXX header in the HTTP request code snippet */</comment>
    <comment type="block" pos:line="887" pos:column="5">/* 300 - Multiple Choices */</comment>
    <comment type="block" pos:line="888" pos:column="5">/* 306 - Not used */</comment>
    <comment type="block" pos:line="889" pos:column="5">/* 307 - Temporary Redirect */</comment>
  <default pos:line="890" pos:column="3">default:<pos:position pos:line="890" pos:column="11"/></default>  <comment type="block" pos:line="890" pos:column="13">/* for all above (and the unknown ones) */</comment>
    <comment type="block" pos:line="891" pos:column="5">/* Some codes are explicitly mentioned since I've checked RFC2616 and they
     * seem to be OK to POST to.
     */</comment>
    <break pos:line="894" pos:column="5">break;<pos:position pos:line="894" pos:column="11"/></break>
  <case pos:line="895" pos:column="3">case <expr><literal type="number" pos:line="895" pos:column="8">301<pos:position pos:line="895" pos:column="11"/></literal></expr>:<pos:position pos:line="895" pos:column="12"/></case> <comment type="block" pos:line="895" pos:column="13">/* Moved Permanently */</comment>
    <comment type="block" pos:line="896" pos:column="5">/* (quote from RFC7231, section 6.4.2)
     *
     * Note: For historical reasons, a user agent MAY change the request
     * method from POST to GET for the subsequent request.  If this
     * behavior is undesired, the 307 (Temporary Redirect) status code
     * can be used instead.
     *
     * ----
     *
     * Many webservers expect this, so these servers often answers to a POST
     * request with an error page. To be sure that libcurl gets the page that
     * most user agents would get, libcurl has to force GET.
     *
     * This behaviour is forbidden by RFC1945 and the obsolete RFC2616, and
     * can be overridden with CURLOPT_POSTREDIR.
     */</comment>
    <if pos:line="912" pos:column="5">if<condition pos:line="912" pos:column="7">(<expr><operator pos:line="912" pos:column="8">(<pos:position pos:line="912" pos:column="9"/></operator><name><name pos:line="912" pos:column="9">data<pos:position pos:line="912" pos:column="13"/></name><operator pos:line="912" pos:column="13">-&gt;<pos:position pos:line="912" pos:column="18"/></operator><name pos:line="912" pos:column="15">set<pos:position pos:line="912" pos:column="18"/></name><operator pos:line="912" pos:column="18">.<pos:position pos:line="912" pos:column="19"/></operator><name pos:line="912" pos:column="19">httpreq<pos:position pos:line="912" pos:column="26"/></name></name> <operator pos:line="912" pos:column="27">==<pos:position pos:line="912" pos:column="29"/></operator> <name pos:line="912" pos:column="30">HTTPREQ_POST<pos:position pos:line="912" pos:column="42"/></name>
        <operator pos:line="913" pos:column="9">||<pos:position pos:line="913" pos:column="11"/></operator> <name><name pos:line="913" pos:column="12">data<pos:position pos:line="913" pos:column="16"/></name><operator pos:line="913" pos:column="16">-&gt;<pos:position pos:line="913" pos:column="21"/></operator><name pos:line="913" pos:column="18">set<pos:position pos:line="913" pos:column="21"/></name><operator pos:line="913" pos:column="21">.<pos:position pos:line="913" pos:column="22"/></operator><name pos:line="913" pos:column="22">httpreq<pos:position pos:line="913" pos:column="29"/></name></name> <operator pos:line="913" pos:column="30">==<pos:position pos:line="913" pos:column="32"/></operator> <name pos:line="913" pos:column="33">HTTPREQ_POST_FORM<pos:position pos:line="913" pos:column="50"/></name><operator pos:line="913" pos:column="50">)<pos:position pos:line="913" pos:column="51"/></operator>
       <operator pos:line="914" pos:column="8">&amp;&amp;<pos:position pos:line="914" pos:column="18"/></operator> <operator pos:line="914" pos:column="11">!<pos:position pos:line="914" pos:column="12"/></operator><operator pos:line="914" pos:column="12">(<pos:position pos:line="914" pos:column="13"/></operator><name><name pos:line="914" pos:column="13">data<pos:position pos:line="914" pos:column="17"/></name><operator pos:line="914" pos:column="17">-&gt;<pos:position pos:line="914" pos:column="22"/></operator><name pos:line="914" pos:column="19">set<pos:position pos:line="914" pos:column="22"/></name><operator pos:line="914" pos:column="22">.<pos:position pos:line="914" pos:column="23"/></operator><name pos:line="914" pos:column="23">keep_post<pos:position pos:line="914" pos:column="32"/></name></name> <operator pos:line="914" pos:column="33">&amp;<pos:position pos:line="914" pos:column="38"/></operator> <name pos:line="914" pos:column="35">CURL_REDIR_POST_301<pos:position pos:line="914" pos:column="54"/></name><operator pos:line="914" pos:column="54">)<pos:position pos:line="914" pos:column="55"/></operator></expr>)<pos:position pos:line="914" pos:column="56"/></condition><then pos:line="914" pos:column="56"> <block pos:line="914" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="915" pos:column="7">infof<pos:position pos:line="915" pos:column="12"/></name><argument_list pos:line="915" pos:column="12">(<argument><expr><name pos:line="915" pos:column="13">data<pos:position pos:line="915" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="915" pos:column="19">"Switch from POST to GET\n"<pos:position pos:line="915" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="915" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="915" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="916" pos:column="7">data<pos:position pos:line="916" pos:column="11"/></name><operator pos:line="916" pos:column="11">-&gt;<pos:position pos:line="916" pos:column="16"/></operator><name pos:line="916" pos:column="13">set<pos:position pos:line="916" pos:column="16"/></name><operator pos:line="916" pos:column="16">.<pos:position pos:line="916" pos:column="17"/></operator><name pos:line="916" pos:column="17">httpreq<pos:position pos:line="916" pos:column="24"/></name></name> <operator pos:line="916" pos:column="25">=<pos:position pos:line="916" pos:column="26"/></operator> <name pos:line="916" pos:column="27">HTTPREQ_GET<pos:position pos:line="916" pos:column="38"/></name></expr>;<pos:position pos:line="916" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="917" pos:column="6"/></block></then></if>
    <break pos:line="918" pos:column="5">break;<pos:position pos:line="918" pos:column="11"/></break>
  <case pos:line="919" pos:column="3">case <expr><literal type="number" pos:line="919" pos:column="8">302<pos:position pos:line="919" pos:column="11"/></literal></expr>:<pos:position pos:line="919" pos:column="12"/></case> <comment type="block" pos:line="919" pos:column="13">/* Found */</comment>
    <comment type="block" pos:line="920" pos:column="5">/* (quote from RFC7231, section 6.4.3)
     *
     * Note: For historical reasons, a user agent MAY change the request
     * method from POST to GET for the subsequent request.  If this
     * behavior is undesired, the 307 (Temporary Redirect) status code
     * can be used instead.
     *
     * ----
     *
     * Many webservers expect this, so these servers often answers to a POST
     * request with an error page. To be sure that libcurl gets the page that
     * most user agents would get, libcurl has to force GET.
     *
     * This behaviour is forbidden by RFC1945 and the obsolete RFC2616, and
     * can be overridden with CURLOPT_POSTREDIR.
     */</comment>
    <if pos:line="936" pos:column="5">if<condition pos:line="936" pos:column="7">(<expr><operator pos:line="936" pos:column="8">(<pos:position pos:line="936" pos:column="9"/></operator><name><name pos:line="936" pos:column="9">data<pos:position pos:line="936" pos:column="13"/></name><operator pos:line="936" pos:column="13">-&gt;<pos:position pos:line="936" pos:column="18"/></operator><name pos:line="936" pos:column="15">set<pos:position pos:line="936" pos:column="18"/></name><operator pos:line="936" pos:column="18">.<pos:position pos:line="936" pos:column="19"/></operator><name pos:line="936" pos:column="19">httpreq<pos:position pos:line="936" pos:column="26"/></name></name> <operator pos:line="936" pos:column="27">==<pos:position pos:line="936" pos:column="29"/></operator> <name pos:line="936" pos:column="30">HTTPREQ_POST<pos:position pos:line="936" pos:column="42"/></name>
        <operator pos:line="937" pos:column="9">||<pos:position pos:line="937" pos:column="11"/></operator> <name><name pos:line="937" pos:column="12">data<pos:position pos:line="937" pos:column="16"/></name><operator pos:line="937" pos:column="16">-&gt;<pos:position pos:line="937" pos:column="21"/></operator><name pos:line="937" pos:column="18">set<pos:position pos:line="937" pos:column="21"/></name><operator pos:line="937" pos:column="21">.<pos:position pos:line="937" pos:column="22"/></operator><name pos:line="937" pos:column="22">httpreq<pos:position pos:line="937" pos:column="29"/></name></name> <operator pos:line="937" pos:column="30">==<pos:position pos:line="937" pos:column="32"/></operator> <name pos:line="937" pos:column="33">HTTPREQ_POST_FORM<pos:position pos:line="937" pos:column="50"/></name><operator pos:line="937" pos:column="50">)<pos:position pos:line="937" pos:column="51"/></operator>
       <operator pos:line="938" pos:column="8">&amp;&amp;<pos:position pos:line="938" pos:column="18"/></operator> <operator pos:line="938" pos:column="11">!<pos:position pos:line="938" pos:column="12"/></operator><operator pos:line="938" pos:column="12">(<pos:position pos:line="938" pos:column="13"/></operator><name><name pos:line="938" pos:column="13">data<pos:position pos:line="938" pos:column="17"/></name><operator pos:line="938" pos:column="17">-&gt;<pos:position pos:line="938" pos:column="22"/></operator><name pos:line="938" pos:column="19">set<pos:position pos:line="938" pos:column="22"/></name><operator pos:line="938" pos:column="22">.<pos:position pos:line="938" pos:column="23"/></operator><name pos:line="938" pos:column="23">keep_post<pos:position pos:line="938" pos:column="32"/></name></name> <operator pos:line="938" pos:column="33">&amp;<pos:position pos:line="938" pos:column="38"/></operator> <name pos:line="938" pos:column="35">CURL_REDIR_POST_302<pos:position pos:line="938" pos:column="54"/></name><operator pos:line="938" pos:column="54">)<pos:position pos:line="938" pos:column="55"/></operator></expr>)<pos:position pos:line="938" pos:column="56"/></condition><then pos:line="938" pos:column="56"> <block pos:line="938" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="939" pos:column="7">infof<pos:position pos:line="939" pos:column="12"/></name><argument_list pos:line="939" pos:column="12">(<argument><expr><name pos:line="939" pos:column="13">data<pos:position pos:line="939" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="939" pos:column="19">"Switch from POST to GET\n"<pos:position pos:line="939" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="939" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="939" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="940" pos:column="7">data<pos:position pos:line="940" pos:column="11"/></name><operator pos:line="940" pos:column="11">-&gt;<pos:position pos:line="940" pos:column="16"/></operator><name pos:line="940" pos:column="13">set<pos:position pos:line="940" pos:column="16"/></name><operator pos:line="940" pos:column="16">.<pos:position pos:line="940" pos:column="17"/></operator><name pos:line="940" pos:column="17">httpreq<pos:position pos:line="940" pos:column="24"/></name></name> <operator pos:line="940" pos:column="25">=<pos:position pos:line="940" pos:column="26"/></operator> <name pos:line="940" pos:column="27">HTTPREQ_GET<pos:position pos:line="940" pos:column="38"/></name></expr>;<pos:position pos:line="940" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="941" pos:column="6"/></block></then></if>
    <break pos:line="942" pos:column="5">break;<pos:position pos:line="942" pos:column="11"/></break>

  <case pos:line="944" pos:column="3">case <expr><literal type="number" pos:line="944" pos:column="8">303<pos:position pos:line="944" pos:column="11"/></literal></expr>:<pos:position pos:line="944" pos:column="12"/></case> <comment type="block" pos:line="944" pos:column="13">/* See Other */</comment>
    <comment type="block" pos:line="945" pos:column="5">/* Disable both types of POSTs, unless the user explicitely
       asks for POST after POST */</comment>
    <if pos:line="947" pos:column="5">if<condition pos:line="947" pos:column="7">(<expr><name><name pos:line="947" pos:column="8">data<pos:position pos:line="947" pos:column="12"/></name><operator pos:line="947" pos:column="12">-&gt;<pos:position pos:line="947" pos:column="17"/></operator><name pos:line="947" pos:column="14">set<pos:position pos:line="947" pos:column="17"/></name><operator pos:line="947" pos:column="17">.<pos:position pos:line="947" pos:column="18"/></operator><name pos:line="947" pos:column="18">httpreq<pos:position pos:line="947" pos:column="25"/></name></name> <operator pos:line="947" pos:column="26">!=<pos:position pos:line="947" pos:column="28"/></operator> <name pos:line="947" pos:column="29">HTTPREQ_GET<pos:position pos:line="947" pos:column="40"/></name>
      <operator pos:line="948" pos:column="7">&amp;&amp;<pos:position pos:line="948" pos:column="17"/></operator> <operator pos:line="948" pos:column="10">!<pos:position pos:line="948" pos:column="11"/></operator><operator pos:line="948" pos:column="11">(<pos:position pos:line="948" pos:column="12"/></operator><name><name pos:line="948" pos:column="12">data<pos:position pos:line="948" pos:column="16"/></name><operator pos:line="948" pos:column="16">-&gt;<pos:position pos:line="948" pos:column="21"/></operator><name pos:line="948" pos:column="18">set<pos:position pos:line="948" pos:column="21"/></name><operator pos:line="948" pos:column="21">.<pos:position pos:line="948" pos:column="22"/></operator><name pos:line="948" pos:column="22">keep_post<pos:position pos:line="948" pos:column="31"/></name></name> <operator pos:line="948" pos:column="32">&amp;<pos:position pos:line="948" pos:column="37"/></operator> <name pos:line="948" pos:column="34">CURL_REDIR_POST_303<pos:position pos:line="948" pos:column="53"/></name><operator pos:line="948" pos:column="53">)<pos:position pos:line="948" pos:column="54"/></operator></expr>)<pos:position pos:line="948" pos:column="55"/></condition><then pos:line="948" pos:column="55"> <block pos:line="948" pos:column="56">{
      <expr_stmt><expr><name><name pos:line="949" pos:column="7">data<pos:position pos:line="949" pos:column="11"/></name><operator pos:line="949" pos:column="11">-&gt;<pos:position pos:line="949" pos:column="16"/></operator><name pos:line="949" pos:column="13">set<pos:position pos:line="949" pos:column="16"/></name><operator pos:line="949" pos:column="16">.<pos:position pos:line="949" pos:column="17"/></operator><name pos:line="949" pos:column="17">httpreq<pos:position pos:line="949" pos:column="24"/></name></name> <operator pos:line="949" pos:column="25">=<pos:position pos:line="949" pos:column="26"/></operator> <name pos:line="949" pos:column="27">HTTPREQ_GET<pos:position pos:line="949" pos:column="38"/></name></expr>;<pos:position pos:line="949" pos:column="39"/></expr_stmt> <comment type="block" pos:line="949" pos:column="40">/* enforce GET request */</comment>
      <expr_stmt><expr><call><name pos:line="950" pos:column="7">infof<pos:position pos:line="950" pos:column="12"/></name><argument_list pos:line="950" pos:column="12">(<argument><expr><name pos:line="950" pos:column="13">data<pos:position pos:line="950" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="950" pos:column="19">"Disables POST, goes with %s\n"<pos:position pos:line="950" pos:column="50"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="951" pos:column="13">data<pos:position pos:line="951" pos:column="17"/></name><operator pos:line="951" pos:column="17">-&gt;<pos:position pos:line="951" pos:column="22"/></operator><name pos:line="951" pos:column="19">set<pos:position pos:line="951" pos:column="22"/></name><operator pos:line="951" pos:column="22">.<pos:position pos:line="951" pos:column="23"/></operator><name pos:line="951" pos:column="23">opt_no_body<pos:position pos:line="951" pos:column="34"/></name></name></expr>?<pos:position pos:line="951" pos:column="35"/></condition><then><expr><literal type="string" pos:line="951" pos:column="35">"HEAD"<pos:position pos:line="951" pos:column="41"/></literal></expr></then><else pos:line="951" pos:column="41">:<expr><literal type="string" pos:line="951" pos:column="42">"GET"<pos:position pos:line="951" pos:column="47"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="951" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="951" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="952" pos:column="6"/></block></then></if>
    <break pos:line="953" pos:column="5">break;<pos:position pos:line="953" pos:column="11"/></break>
  <case pos:line="954" pos:column="3">case <expr><literal type="number" pos:line="954" pos:column="8">304<pos:position pos:line="954" pos:column="11"/></literal></expr>:<pos:position pos:line="954" pos:column="12"/></case> <comment type="block" pos:line="954" pos:column="13">/* Not Modified */</comment>
    <comment type="block" pos:line="955" pos:column="5">/* 304 means we did a conditional request and it was "Not modified".
     * We shouldn't get any Location: header in this response!
     */</comment>
    <break pos:line="958" pos:column="5">break;<pos:position pos:line="958" pos:column="11"/></break>
  <case pos:line="959" pos:column="3">case <expr><literal type="number" pos:line="959" pos:column="8">305<pos:position pos:line="959" pos:column="11"/></literal></expr>:<pos:position pos:line="959" pos:column="12"/></case> <comment type="block" pos:line="959" pos:column="13">/* Use Proxy */</comment>
    <comment type="block" pos:line="960" pos:column="5">/* (quote from RFC2616, section 10.3.6):
     * "The requested resource MUST be accessed through the proxy given
     * by the Location field. The Location field gives the URI of the
     * proxy.  The recipient is expected to repeat this single request
     * via the proxy. 305 responses MUST only be generated by origin
     * servers."
     */</comment>
    <break pos:line="967" pos:column="5">break;<pos:position pos:line="967" pos:column="11"/></break>
  }<pos:position pos:line="968" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="969" pos:column="3">Curl_pgrsTime<pos:position pos:line="969" pos:column="16"/></name><argument_list pos:line="969" pos:column="16">(<argument><expr><name pos:line="969" pos:column="17">data<pos:position pos:line="969" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="969" pos:column="23">TIMER_REDIRECT<pos:position pos:line="969" pos:column="37"/></name></expr></argument>)<pos:position pos:line="969" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="969" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="970" pos:column="3">Curl_pgrsResetTimesSizes<pos:position pos:line="970" pos:column="27"/></name><argument_list pos:line="970" pos:column="27">(<argument><expr><name pos:line="970" pos:column="28">data<pos:position pos:line="970" pos:column="32"/></name></expr></argument>)<pos:position pos:line="970" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="970" pos:column="34"/></expr_stmt>

  <return pos:line="972" pos:column="3">return <expr><name pos:line="972" pos:column="10">CURLE_OK<pos:position pos:line="972" pos:column="18"/></name></expr>;<pos:position pos:line="972" pos:column="19"/></return>
<cpp:endif pos:line="973" pos:column="1">#<cpp:directive pos:line="973" pos:column="2">endif<pos:position pos:line="973" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="973" pos:column="8">/* CURL_DISABLE_HTTP */</comment>
}<pos:position pos:line="974" pos:column="2"/></block></function>

<comment type="block" pos:line="976" pos:column="1">/* Returns CURLE_OK *and* sets '*url' if a request retry is wanted.

   NOTE: that the *url is malloc()ed. */</comment>
<function><type><name pos:line="979" pos:column="1">CURLcode<pos:position pos:line="979" pos:column="9"/></name></type> <name pos:line="979" pos:column="10">Curl_retry_request<pos:position pos:line="979" pos:column="28"/></name><parameter_list pos:line="979" pos:column="28">(<parameter><decl><type><name><name pos:line="979" pos:column="29">struct<pos:position pos:line="979" pos:column="35"/></name> <name pos:line="979" pos:column="36">connectdata<pos:position pos:line="979" pos:column="47"/></name></name> <modifier pos:line="979" pos:column="48">*<pos:position pos:line="979" pos:column="49"/></modifier></type><name pos:line="979" pos:column="49">conn<pos:position pos:line="979" pos:column="53"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="980" pos:column="29">char<pos:position pos:line="980" pos:column="33"/></name> <modifier pos:line="980" pos:column="34">*<pos:position pos:line="980" pos:column="35"/></modifier><modifier pos:line="980" pos:column="35">*<pos:position pos:line="980" pos:column="36"/></modifier></type><name pos:line="980" pos:column="36">url<pos:position pos:line="980" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="980" pos:column="40"/></parameter_list>
<block pos:line="981" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="982" pos:column="3">struct<pos:position pos:line="982" pos:column="9"/></name> <name pos:line="982" pos:column="10">Curl_easy<pos:position pos:line="982" pos:column="19"/></name></name> <modifier pos:line="982" pos:column="20">*<pos:position pos:line="982" pos:column="21"/></modifier></type><name pos:line="982" pos:column="21">data<pos:position pos:line="982" pos:column="25"/></name> <init pos:line="982" pos:column="26">= <expr><name><name pos:line="982" pos:column="28">conn<pos:position pos:line="982" pos:column="32"/></name><operator pos:line="982" pos:column="32">-&gt;<pos:position pos:line="982" pos:column="37"/></operator><name pos:line="982" pos:column="34">data<pos:position pos:line="982" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="982" pos:column="39"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="984" pos:column="3">*<pos:position pos:line="984" pos:column="4"/></operator><name pos:line="984" pos:column="4">url<pos:position pos:line="984" pos:column="7"/></name> <operator pos:line="984" pos:column="8">=<pos:position pos:line="984" pos:column="9"/></operator> <name pos:line="984" pos:column="10">NULL<pos:position pos:line="984" pos:column="14"/></name></expr>;<pos:position pos:line="984" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="986" pos:column="3">/* if we're talking upload, we can't do the checks below, unless the protocol
     is HTTP as when uploading over HTTP we will still get a response */</comment>
  <if pos:line="988" pos:column="3">if<condition pos:line="988" pos:column="5">(<expr><name><name pos:line="988" pos:column="6">data<pos:position pos:line="988" pos:column="10"/></name><operator pos:line="988" pos:column="10">-&gt;<pos:position pos:line="988" pos:column="15"/></operator><name pos:line="988" pos:column="12">set<pos:position pos:line="988" pos:column="15"/></name><operator pos:line="988" pos:column="15">.<pos:position pos:line="988" pos:column="16"/></operator><name pos:line="988" pos:column="16">upload<pos:position pos:line="988" pos:column="22"/></name></name> <operator pos:line="988" pos:column="23">&amp;&amp;<pos:position pos:line="988" pos:column="33"/></operator>
     <operator pos:line="989" pos:column="6">!<pos:position pos:line="989" pos:column="7"/></operator><operator pos:line="989" pos:column="7">(<pos:position pos:line="989" pos:column="8"/></operator><name><name pos:line="989" pos:column="8">conn<pos:position pos:line="989" pos:column="12"/></name><operator pos:line="989" pos:column="12">-&gt;<pos:position pos:line="989" pos:column="17"/></operator><name pos:line="989" pos:column="14">handler<pos:position pos:line="989" pos:column="21"/></name><operator pos:line="989" pos:column="21">-&gt;<pos:position pos:line="989" pos:column="26"/></operator><name pos:line="989" pos:column="23">protocol<pos:position pos:line="989" pos:column="31"/></name></name><operator pos:line="989" pos:column="31">&amp;<pos:position pos:line="989" pos:column="36"/></operator><operator pos:line="989" pos:column="32">(<pos:position pos:line="989" pos:column="33"/></operator><name pos:line="989" pos:column="33">PROTO_FAMILY_HTTP<pos:position pos:line="989" pos:column="50"/></name><operator pos:line="989" pos:column="50">|<pos:position pos:line="989" pos:column="51"/></operator><name pos:line="989" pos:column="51">CURLPROTO_RTSP<pos:position pos:line="989" pos:column="65"/></name><operator pos:line="989" pos:column="65">)<pos:position pos:line="989" pos:column="66"/></operator><operator pos:line="989" pos:column="66">)<pos:position pos:line="989" pos:column="67"/></operator></expr>)<pos:position pos:line="989" pos:column="68"/></condition><then pos:line="989" pos:column="68">
    <block type="pseudo"><return pos:line="990" pos:column="5">return <expr><name pos:line="990" pos:column="12">CURLE_OK<pos:position pos:line="990" pos:column="20"/></name></expr>;<pos:position pos:line="990" pos:column="21"/></return></block></then></if>

  <if pos:line="992" pos:column="3">if<condition pos:line="992" pos:column="5">(<expr><operator pos:line="992" pos:column="6">(<pos:position pos:line="992" pos:column="7"/></operator><name><name pos:line="992" pos:column="7">data<pos:position pos:line="992" pos:column="11"/></name><operator pos:line="992" pos:column="11">-&gt;<pos:position pos:line="992" pos:column="16"/></operator><name pos:line="992" pos:column="13">req<pos:position pos:line="992" pos:column="16"/></name><operator pos:line="992" pos:column="16">.<pos:position pos:line="992" pos:column="17"/></operator><name pos:line="992" pos:column="17">bytecount<pos:position pos:line="992" pos:column="26"/></name></name> <operator pos:line="992" pos:column="27">+<pos:position pos:line="992" pos:column="28"/></operator> <name><name pos:line="992" pos:column="29">data<pos:position pos:line="992" pos:column="33"/></name><operator pos:line="992" pos:column="33">-&gt;<pos:position pos:line="992" pos:column="38"/></operator><name pos:line="992" pos:column="35">req<pos:position pos:line="992" pos:column="38"/></name><operator pos:line="992" pos:column="38">.<pos:position pos:line="992" pos:column="39"/></operator><name pos:line="992" pos:column="39">headerbytecount<pos:position pos:line="992" pos:column="54"/></name></name> <operator pos:line="992" pos:column="55">==<pos:position pos:line="992" pos:column="57"/></operator> <literal type="number" pos:line="992" pos:column="58">0<pos:position pos:line="992" pos:column="59"/></literal><operator pos:line="992" pos:column="59">)<pos:position pos:line="992" pos:column="60"/></operator> <operator pos:line="992" pos:column="61">&amp;&amp;<pos:position pos:line="992" pos:column="71"/></operator>
     <name><name pos:line="993" pos:column="6">conn<pos:position pos:line="993" pos:column="10"/></name><operator pos:line="993" pos:column="10">-&gt;<pos:position pos:line="993" pos:column="15"/></operator><name pos:line="993" pos:column="12">bits<pos:position pos:line="993" pos:column="16"/></name><operator pos:line="993" pos:column="16">.<pos:position pos:line="993" pos:column="17"/></operator><name pos:line="993" pos:column="17">reuse<pos:position pos:line="993" pos:column="22"/></name></name> <operator pos:line="993" pos:column="23">&amp;&amp;<pos:position pos:line="993" pos:column="33"/></operator>
     <operator pos:line="994" pos:column="6">(<pos:position pos:line="994" pos:column="7"/></operator><name><name pos:line="994" pos:column="7">data<pos:position pos:line="994" pos:column="11"/></name><operator pos:line="994" pos:column="11">-&gt;<pos:position pos:line="994" pos:column="16"/></operator><name pos:line="994" pos:column="13">set<pos:position pos:line="994" pos:column="16"/></name><operator pos:line="994" pos:column="16">.<pos:position pos:line="994" pos:column="17"/></operator><name pos:line="994" pos:column="17">rtspreq<pos:position pos:line="994" pos:column="24"/></name></name> <operator pos:line="994" pos:column="25">!=<pos:position pos:line="994" pos:column="27"/></operator> <name pos:line="994" pos:column="28">RTSPREQ_RECEIVE<pos:position pos:line="994" pos:column="43"/></name><operator pos:line="994" pos:column="43">)<pos:position pos:line="994" pos:column="44"/></operator></expr>)<pos:position pos:line="994" pos:column="45"/></condition><then pos:line="994" pos:column="45"> <block pos:line="994" pos:column="46">{
    <comment type="block" pos:line="995" pos:column="5">/* We didn't get a single byte when we attempted to re-use a
       connection. This might happen if the connection was left alive when we
       were done using it before, but that was closed when we wanted to use it
       again. Bad luck. Retry the same request on a fresh connect! */</comment>
    <expr_stmt><expr><call><name pos:line="999" pos:column="5">infof<pos:position pos:line="999" pos:column="10"/></name><argument_list pos:line="999" pos:column="10">(<argument><expr><name><name pos:line="999" pos:column="11">conn<pos:position pos:line="999" pos:column="15"/></name><operator pos:line="999" pos:column="15">-&gt;<pos:position pos:line="999" pos:column="20"/></operator><name pos:line="999" pos:column="17">data<pos:position pos:line="999" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="999" pos:column="23">"Connection died, retrying a fresh connect\n"<pos:position pos:line="999" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="999" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="999" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="1000" pos:column="5">*<pos:position pos:line="1000" pos:column="6"/></operator><name pos:line="1000" pos:column="6">url<pos:position pos:line="1000" pos:column="9"/></name> <operator pos:line="1000" pos:column="10">=<pos:position pos:line="1000" pos:column="11"/></operator> <call><name pos:line="1000" pos:column="12">strdup<pos:position pos:line="1000" pos:column="18"/></name><argument_list pos:line="1000" pos:column="18">(<argument><expr><name><name pos:line="1000" pos:column="19">conn<pos:position pos:line="1000" pos:column="23"/></name><operator pos:line="1000" pos:column="23">-&gt;<pos:position pos:line="1000" pos:column="28"/></operator><name pos:line="1000" pos:column="25">data<pos:position pos:line="1000" pos:column="29"/></name><operator pos:line="1000" pos:column="29">-&gt;<pos:position pos:line="1000" pos:column="34"/></operator><name pos:line="1000" pos:column="31">change<pos:position pos:line="1000" pos:column="37"/></name><operator pos:line="1000" pos:column="37">.<pos:position pos:line="1000" pos:column="38"/></operator><name pos:line="1000" pos:column="38">url<pos:position pos:line="1000" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="1000" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1000" pos:column="43"/></expr_stmt>
    <if pos:line="1001" pos:column="5">if<condition pos:line="1001" pos:column="7">(<expr><operator pos:line="1001" pos:column="8">!<pos:position pos:line="1001" pos:column="9"/></operator><operator pos:line="1001" pos:column="9">*<pos:position pos:line="1001" pos:column="10"/></operator><name pos:line="1001" pos:column="10">url<pos:position pos:line="1001" pos:column="13"/></name></expr>)<pos:position pos:line="1001" pos:column="14"/></condition><then pos:line="1001" pos:column="14">
      <block type="pseudo"><return pos:line="1002" pos:column="7">return <expr><name pos:line="1002" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="1002" pos:column="33"/></name></expr>;<pos:position pos:line="1002" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="1004" pos:column="5">connclose<pos:position pos:line="1004" pos:column="14"/></name><argument_list pos:line="1004" pos:column="14">(<argument><expr><name pos:line="1004" pos:column="15">conn<pos:position pos:line="1004" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1004" pos:column="21">"retry"<pos:position pos:line="1004" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="1004" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1004" pos:column="30"/></expr_stmt> <comment type="block" pos:line="1004" pos:column="31">/* close this connection */</comment>
    <expr_stmt><expr><name><name pos:line="1005" pos:column="5">conn<pos:position pos:line="1005" pos:column="9"/></name><operator pos:line="1005" pos:column="9">-&gt;<pos:position pos:line="1005" pos:column="14"/></operator><name pos:line="1005" pos:column="11">bits<pos:position pos:line="1005" pos:column="15"/></name><operator pos:line="1005" pos:column="15">.<pos:position pos:line="1005" pos:column="16"/></operator><name pos:line="1005" pos:column="16">retry<pos:position pos:line="1005" pos:column="21"/></name></name> <operator pos:line="1005" pos:column="22">=<pos:position pos:line="1005" pos:column="23"/></operator> <name pos:line="1005" pos:column="24">TRUE<pos:position pos:line="1005" pos:column="28"/></name></expr>;<pos:position pos:line="1005" pos:column="29"/></expr_stmt> <comment type="block" pos:line="1005" pos:column="30">/* mark this as a connection we're about
                                to retry. Marking it this way should
                                prevent i.e HTTP transfers to return
                                error just because nothing has been
                                transferred! */</comment>


    <if pos:line="1012" pos:column="5">if<condition pos:line="1012" pos:column="7">(<expr><name><name pos:line="1012" pos:column="8">conn<pos:position pos:line="1012" pos:column="12"/></name><operator pos:line="1012" pos:column="12">-&gt;<pos:position pos:line="1012" pos:column="17"/></operator><name pos:line="1012" pos:column="14">handler<pos:position pos:line="1012" pos:column="21"/></name><operator pos:line="1012" pos:column="21">-&gt;<pos:position pos:line="1012" pos:column="26"/></operator><name pos:line="1012" pos:column="23">protocol<pos:position pos:line="1012" pos:column="31"/></name></name><operator pos:line="1012" pos:column="31">&amp;<pos:position pos:line="1012" pos:column="36"/></operator><name pos:line="1012" pos:column="32">PROTO_FAMILY_HTTP<pos:position pos:line="1012" pos:column="49"/></name></expr>)<pos:position pos:line="1012" pos:column="50"/></condition><then pos:line="1012" pos:column="50"> <block pos:line="1012" pos:column="51">{
      <decl_stmt><decl><type><name><name pos:line="1013" pos:column="7">struct<pos:position pos:line="1013" pos:column="13"/></name> <name pos:line="1013" pos:column="14">HTTP<pos:position pos:line="1013" pos:column="18"/></name></name> <modifier pos:line="1013" pos:column="19">*<pos:position pos:line="1013" pos:column="20"/></modifier></type><name pos:line="1013" pos:column="20">http<pos:position pos:line="1013" pos:column="24"/></name> <init pos:line="1013" pos:column="25">= <expr><name><name pos:line="1013" pos:column="27">data<pos:position pos:line="1013" pos:column="31"/></name><operator pos:line="1013" pos:column="31">-&gt;<pos:position pos:line="1013" pos:column="36"/></operator><name pos:line="1013" pos:column="33">req<pos:position pos:line="1013" pos:column="36"/></name><operator pos:line="1013" pos:column="36">.<pos:position pos:line="1013" pos:column="37"/></operator><name pos:line="1013" pos:column="37">protop<pos:position pos:line="1013" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="1013" pos:column="44"/></decl_stmt>
      <if pos:line="1014" pos:column="7">if<condition pos:line="1014" pos:column="9">(<expr><name><name pos:line="1014" pos:column="10">http<pos:position pos:line="1014" pos:column="14"/></name><operator pos:line="1014" pos:column="14">-&gt;<pos:position pos:line="1014" pos:column="19"/></operator><name pos:line="1014" pos:column="16">writebytecount<pos:position pos:line="1014" pos:column="30"/></name></name></expr>)<pos:position pos:line="1014" pos:column="31"/></condition><then pos:line="1014" pos:column="31">
        <block type="pseudo"><return pos:line="1015" pos:column="9">return <expr><call><name pos:line="1015" pos:column="16">Curl_readrewind<pos:position pos:line="1015" pos:column="31"/></name><argument_list pos:line="1015" pos:column="31">(<argument><expr><name pos:line="1015" pos:column="32">conn<pos:position pos:line="1015" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1015" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1015" pos:column="38"/></return></block></then></if>
    }<pos:position pos:line="1016" pos:column="6"/></block></then></if>
  }<pos:position pos:line="1017" pos:column="4"/></block></then></if>
  <return pos:line="1018" pos:column="3">return <expr><name pos:line="1018" pos:column="10">CURLE_OK<pos:position pos:line="1018" pos:column="18"/></name></expr>;<pos:position pos:line="1018" pos:column="19"/></return>
}<pos:position pos:line="1019" pos:column="2"/></block></function>

<comment type="block" pos:line="1021" pos:column="1">/*
 * Curl_setup_transfer() is called to setup some basic properties for the
 * upcoming transfer.
 */</comment>
<function><type><name pos:line="1025" pos:column="1">void<pos:position pos:line="1025" pos:column="5"/></name></type>
<name pos:line="1026" pos:column="1">Curl_setup_transfer<pos:position pos:line="1026" pos:column="20"/></name><parameter_list pos:line="1026" pos:column="20">(
  <parameter><decl><type><name><name pos:line="1027" pos:column="3">struct<pos:position pos:line="1027" pos:column="9"/></name> <name pos:line="1027" pos:column="10">connectdata<pos:position pos:line="1027" pos:column="21"/></name></name> <modifier pos:line="1027" pos:column="22">*<pos:position pos:line="1027" pos:column="23"/></modifier></type><name pos:line="1027" pos:column="23">conn<pos:position pos:line="1027" pos:column="27"/></name></decl></parameter>, <comment type="block" pos:line="1027" pos:column="29">/* connection data */</comment>
  <parameter><decl><type><name pos:line="1028" pos:column="3">int<pos:position pos:line="1028" pos:column="6"/></name></type> <name pos:line="1028" pos:column="7">sockindex<pos:position pos:line="1028" pos:column="16"/></name></decl></parameter>,            <comment type="block" pos:line="1028" pos:column="29">/* socket index to read from or -1 */</comment>
  <parameter><decl><type><name pos:line="1029" pos:column="3">curl_off_t<pos:position pos:line="1029" pos:column="13"/></name></type> <name pos:line="1029" pos:column="14">size<pos:position pos:line="1029" pos:column="18"/></name></decl></parameter>,          <comment type="block" pos:line="1029" pos:column="29">/* -1 if unknown at this point */</comment>
  <parameter><decl><type><name pos:line="1030" pos:column="3">bool<pos:position pos:line="1030" pos:column="7"/></name></type> <name pos:line="1030" pos:column="8">getheader<pos:position pos:line="1030" pos:column="17"/></name></decl></parameter>,           <comment type="block" pos:line="1030" pos:column="29">/* TRUE if header parsing is wanted */</comment>
  <parameter><decl><type><name pos:line="1031" pos:column="3">curl_off_t<pos:position pos:line="1031" pos:column="13"/></name> <modifier pos:line="1031" pos:column="14">*<pos:position pos:line="1031" pos:column="15"/></modifier></type><name pos:line="1031" pos:column="15">bytecountp<pos:position pos:line="1031" pos:column="25"/></name></decl></parameter>,   <comment type="block" pos:line="1031" pos:column="29">/* return number of bytes read or NULL */</comment>
  <parameter><decl><type><name pos:line="1032" pos:column="3">int<pos:position pos:line="1032" pos:column="6"/></name></type> <name pos:line="1032" pos:column="7">writesockindex<pos:position pos:line="1032" pos:column="21"/></name></decl></parameter>,       <comment type="block" pos:line="1032" pos:column="29">/* socket index to write to, it may very well be
                               the same we read from. -1 disables */</comment>
  <parameter><decl><type><name pos:line="1034" pos:column="3">curl_off_t<pos:position pos:line="1034" pos:column="13"/></name> <modifier pos:line="1034" pos:column="14">*<pos:position pos:line="1034" pos:column="15"/></modifier></type><name pos:line="1034" pos:column="15">writecountp<pos:position pos:line="1034" pos:column="26"/></name></decl></parameter>   <comment type="block" pos:line="1034" pos:column="29">/* return number of bytes written or NULL */</comment>
  )<pos:position pos:line="1035" pos:column="4"/></parameter_list>
<block pos:line="1036" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="1037" pos:column="3">struct<pos:position pos:line="1037" pos:column="9"/></name> <name pos:line="1037" pos:column="10">Curl_easy<pos:position pos:line="1037" pos:column="19"/></name></name> <modifier pos:line="1037" pos:column="20">*<pos:position pos:line="1037" pos:column="21"/></modifier></type><name pos:line="1037" pos:column="21">data<pos:position pos:line="1037" pos:column="25"/></name></decl>;<pos:position pos:line="1037" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="1038" pos:column="3">struct<pos:position pos:line="1038" pos:column="9"/></name> <name pos:line="1038" pos:column="10">SingleRequest<pos:position pos:line="1038" pos:column="23"/></name></name> <modifier pos:line="1038" pos:column="24">*<pos:position pos:line="1038" pos:column="25"/></modifier></type><name pos:line="1038" pos:column="25">k<pos:position pos:line="1038" pos:column="26"/></name></decl>;<pos:position pos:line="1038" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="1040" pos:column="3">DEBUGASSERT<pos:position pos:line="1040" pos:column="14"/></name><argument_list pos:line="1040" pos:column="14">(<argument><expr><name pos:line="1040" pos:column="15">conn<pos:position pos:line="1040" pos:column="19"/></name> <operator pos:line="1040" pos:column="20">!=<pos:position pos:line="1040" pos:column="22"/></operator> <name pos:line="1040" pos:column="23">NULL<pos:position pos:line="1040" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1040" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1040" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="1042" pos:column="3">data<pos:position pos:line="1042" pos:column="7"/></name> <operator pos:line="1042" pos:column="8">=<pos:position pos:line="1042" pos:column="9"/></operator> <name><name pos:line="1042" pos:column="10">conn<pos:position pos:line="1042" pos:column="14"/></name><operator pos:line="1042" pos:column="14">-&gt;<pos:position pos:line="1042" pos:column="19"/></operator><name pos:line="1042" pos:column="16">data<pos:position pos:line="1042" pos:column="20"/></name></name></expr>;<pos:position pos:line="1042" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="1043" pos:column="3">k<pos:position pos:line="1043" pos:column="4"/></name> <operator pos:line="1043" pos:column="5">=<pos:position pos:line="1043" pos:column="6"/></operator> <operator pos:line="1043" pos:column="7">&amp;<pos:position pos:line="1043" pos:column="12"/></operator><name><name pos:line="1043" pos:column="8">data<pos:position pos:line="1043" pos:column="12"/></name><operator pos:line="1043" pos:column="12">-&gt;<pos:position pos:line="1043" pos:column="17"/></operator><name pos:line="1043" pos:column="14">req<pos:position pos:line="1043" pos:column="17"/></name></name></expr>;<pos:position pos:line="1043" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="1045" pos:column="3">DEBUGASSERT<pos:position pos:line="1045" pos:column="14"/></name><argument_list pos:line="1045" pos:column="14">(<argument><expr><operator pos:line="1045" pos:column="15">(<pos:position pos:line="1045" pos:column="16"/></operator><name pos:line="1045" pos:column="16">sockindex<pos:position pos:line="1045" pos:column="25"/></name> <operator pos:line="1045" pos:column="26">&lt;=<pos:position pos:line="1045" pos:column="31"/></operator> <literal type="number" pos:line="1045" pos:column="29">1<pos:position pos:line="1045" pos:column="30"/></literal><operator pos:line="1045" pos:column="30">)<pos:position pos:line="1045" pos:column="31"/></operator> <operator pos:line="1045" pos:column="32">&amp;&amp;<pos:position pos:line="1045" pos:column="42"/></operator> <operator pos:line="1045" pos:column="35">(<pos:position pos:line="1045" pos:column="36"/></operator><name pos:line="1045" pos:column="36">sockindex<pos:position pos:line="1045" pos:column="45"/></name> <operator pos:line="1045" pos:column="46">&gt;=<pos:position pos:line="1045" pos:column="51"/></operator> <operator pos:line="1045" pos:column="49">-<pos:position pos:line="1045" pos:column="50"/></operator><literal type="number" pos:line="1045" pos:column="50">1<pos:position pos:line="1045" pos:column="51"/></literal><operator pos:line="1045" pos:column="51">)<pos:position pos:line="1045" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="1045" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1045" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="1047" pos:column="3">/* now copy all input parameters */</comment>
  <expr_stmt><expr><name><name pos:line="1048" pos:column="3">conn<pos:position pos:line="1048" pos:column="7"/></name><operator pos:line="1048" pos:column="7">-&gt;<pos:position pos:line="1048" pos:column="12"/></operator><name pos:line="1048" pos:column="9">sockfd<pos:position pos:line="1048" pos:column="15"/></name></name> <operator pos:line="1048" pos:column="16">=<pos:position pos:line="1048" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="1048" pos:column="18">sockindex<pos:position pos:line="1048" pos:column="27"/></name> <operator pos:line="1048" pos:column="28">==<pos:position pos:line="1048" pos:column="30"/></operator> <operator pos:line="1048" pos:column="31">-<pos:position pos:line="1048" pos:column="32"/></operator><literal type="number" pos:line="1048" pos:column="32">1<pos:position pos:line="1048" pos:column="33"/></literal></expr> ?<pos:position pos:line="1048" pos:column="35"/></condition><then pos:line="1048" pos:column="35">
      <expr><name pos:line="1049" pos:column="7">CURL_SOCKET_BAD<pos:position pos:line="1049" pos:column="22"/></name></expr> <pos:position pos:line="1049" pos:column="23"/></then><else pos:line="1049" pos:column="23">: <expr><name><name pos:line="1049" pos:column="25">conn<pos:position pos:line="1049" pos:column="29"/></name><operator pos:line="1049" pos:column="29">-&gt;<pos:position pos:line="1049" pos:column="34"/></operator><name pos:line="1049" pos:column="31">sock<pos:position pos:line="1049" pos:column="35"/></name><index pos:line="1049" pos:column="35">[<expr><name pos:line="1049" pos:column="36">sockindex<pos:position pos:line="1049" pos:column="45"/></name></expr>]<pos:position pos:line="1049" pos:column="46"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="1049" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1050" pos:column="3">conn<pos:position pos:line="1050" pos:column="7"/></name><operator pos:line="1050" pos:column="7">-&gt;<pos:position pos:line="1050" pos:column="12"/></operator><name pos:line="1050" pos:column="9">writesockfd<pos:position pos:line="1050" pos:column="20"/></name></name> <operator pos:line="1050" pos:column="21">=<pos:position pos:line="1050" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="1050" pos:column="23">writesockindex<pos:position pos:line="1050" pos:column="37"/></name> <operator pos:line="1050" pos:column="38">==<pos:position pos:line="1050" pos:column="40"/></operator> <operator pos:line="1050" pos:column="41">-<pos:position pos:line="1050" pos:column="42"/></operator><literal type="number" pos:line="1050" pos:column="42">1<pos:position pos:line="1050" pos:column="43"/></literal></expr> ?<pos:position pos:line="1050" pos:column="45"/></condition><then pos:line="1050" pos:column="45">
      <expr><name pos:line="1051" pos:column="7">CURL_SOCKET_BAD<pos:position pos:line="1051" pos:column="22"/></name></expr></then><else pos:line="1051" pos:column="22">:<expr><name><name pos:line="1051" pos:column="23">conn<pos:position pos:line="1051" pos:column="27"/></name><operator pos:line="1051" pos:column="27">-&gt;<pos:position pos:line="1051" pos:column="32"/></operator><name pos:line="1051" pos:column="29">sock<pos:position pos:line="1051" pos:column="33"/></name><index pos:line="1051" pos:column="33">[<expr><name pos:line="1051" pos:column="34">writesockindex<pos:position pos:line="1051" pos:column="48"/></name></expr>]<pos:position pos:line="1051" pos:column="49"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="1051" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1052" pos:column="3">k<pos:position pos:line="1052" pos:column="4"/></name><operator pos:line="1052" pos:column="4">-&gt;<pos:position pos:line="1052" pos:column="9"/></operator><name pos:line="1052" pos:column="6">getheader<pos:position pos:line="1052" pos:column="15"/></name></name> <operator pos:line="1052" pos:column="16">=<pos:position pos:line="1052" pos:column="17"/></operator> <name pos:line="1052" pos:column="18">getheader<pos:position pos:line="1052" pos:column="27"/></name></expr>;<pos:position pos:line="1052" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="1054" pos:column="3">k<pos:position pos:line="1054" pos:column="4"/></name><operator pos:line="1054" pos:column="4">-&gt;<pos:position pos:line="1054" pos:column="9"/></operator><name pos:line="1054" pos:column="6">size<pos:position pos:line="1054" pos:column="10"/></name></name> <operator pos:line="1054" pos:column="11">=<pos:position pos:line="1054" pos:column="12"/></operator> <name pos:line="1054" pos:column="13">size<pos:position pos:line="1054" pos:column="17"/></name></expr>;<pos:position pos:line="1054" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1055" pos:column="3">k<pos:position pos:line="1055" pos:column="4"/></name><operator pos:line="1055" pos:column="4">-&gt;<pos:position pos:line="1055" pos:column="9"/></operator><name pos:line="1055" pos:column="6">bytecountp<pos:position pos:line="1055" pos:column="16"/></name></name> <operator pos:line="1055" pos:column="17">=<pos:position pos:line="1055" pos:column="18"/></operator> <name pos:line="1055" pos:column="19">bytecountp<pos:position pos:line="1055" pos:column="29"/></name></expr>;<pos:position pos:line="1055" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1056" pos:column="3">k<pos:position pos:line="1056" pos:column="4"/></name><operator pos:line="1056" pos:column="4">-&gt;<pos:position pos:line="1056" pos:column="9"/></operator><name pos:line="1056" pos:column="6">writebytecountp<pos:position pos:line="1056" pos:column="21"/></name></name> <operator pos:line="1056" pos:column="22">=<pos:position pos:line="1056" pos:column="23"/></operator> <name pos:line="1056" pos:column="24">writecountp<pos:position pos:line="1056" pos:column="35"/></name></expr>;<pos:position pos:line="1056" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="1058" pos:column="3">/* The code sequence below is placed in this function just because all
     necessary input is not always known in do_complete() as this function may
     be called after that */</comment>

  <if pos:line="1062" pos:column="3">if<condition pos:line="1062" pos:column="5">(<expr><operator pos:line="1062" pos:column="6">!<pos:position pos:line="1062" pos:column="7"/></operator><name><name pos:line="1062" pos:column="7">k<pos:position pos:line="1062" pos:column="8"/></name><operator pos:line="1062" pos:column="8">-&gt;<pos:position pos:line="1062" pos:column="13"/></operator><name pos:line="1062" pos:column="10">getheader<pos:position pos:line="1062" pos:column="19"/></name></name></expr>)<pos:position pos:line="1062" pos:column="20"/></condition><then pos:line="1062" pos:column="20"> <block pos:line="1062" pos:column="21">{
    <expr_stmt><expr><name><name pos:line="1063" pos:column="5">k<pos:position pos:line="1063" pos:column="6"/></name><operator pos:line="1063" pos:column="6">-&gt;<pos:position pos:line="1063" pos:column="11"/></operator><name pos:line="1063" pos:column="8">header<pos:position pos:line="1063" pos:column="14"/></name></name> <operator pos:line="1063" pos:column="15">=<pos:position pos:line="1063" pos:column="16"/></operator> <name pos:line="1063" pos:column="17">FALSE<pos:position pos:line="1063" pos:column="22"/></name></expr>;<pos:position pos:line="1063" pos:column="23"/></expr_stmt>
    <if pos:line="1064" pos:column="5">if<condition pos:line="1064" pos:column="7">(<expr><name pos:line="1064" pos:column="8">size<pos:position pos:line="1064" pos:column="12"/></name> <operator pos:line="1064" pos:column="13">&gt;<pos:position pos:line="1064" pos:column="17"/></operator> <literal type="number" pos:line="1064" pos:column="15">0<pos:position pos:line="1064" pos:column="16"/></literal></expr>)<pos:position pos:line="1064" pos:column="17"/></condition><then pos:line="1064" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1065" pos:column="7">Curl_pgrsSetDownloadSize<pos:position pos:line="1065" pos:column="31"/></name><argument_list pos:line="1065" pos:column="31">(<argument><expr><name pos:line="1065" pos:column="32">data<pos:position pos:line="1065" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1065" pos:column="38">size<pos:position pos:line="1065" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1065" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1065" pos:column="44"/></expr_stmt></block></then></if>
  }<pos:position pos:line="1066" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="1067" pos:column="3">/* we want header and/or body, if neither then don't do this! */</comment>
  <if pos:line="1068" pos:column="3">if<condition pos:line="1068" pos:column="5">(<expr><name><name pos:line="1068" pos:column="6">k<pos:position pos:line="1068" pos:column="7"/></name><operator pos:line="1068" pos:column="7">-&gt;<pos:position pos:line="1068" pos:column="12"/></operator><name pos:line="1068" pos:column="9">getheader<pos:position pos:line="1068" pos:column="18"/></name></name> <operator pos:line="1068" pos:column="19">||<pos:position pos:line="1068" pos:column="21"/></operator> <operator pos:line="1068" pos:column="22">!<pos:position pos:line="1068" pos:column="23"/></operator><name><name pos:line="1068" pos:column="23">data<pos:position pos:line="1068" pos:column="27"/></name><operator pos:line="1068" pos:column="27">-&gt;<pos:position pos:line="1068" pos:column="32"/></operator><name pos:line="1068" pos:column="29">set<pos:position pos:line="1068" pos:column="32"/></name><operator pos:line="1068" pos:column="32">.<pos:position pos:line="1068" pos:column="33"/></operator><name pos:line="1068" pos:column="33">opt_no_body<pos:position pos:line="1068" pos:column="44"/></name></name></expr>)<pos:position pos:line="1068" pos:column="45"/></condition><then pos:line="1068" pos:column="45"> <block pos:line="1068" pos:column="46">{

    <if pos:line="1070" pos:column="5">if<condition pos:line="1070" pos:column="7">(<expr><name><name pos:line="1070" pos:column="8">conn<pos:position pos:line="1070" pos:column="12"/></name><operator pos:line="1070" pos:column="12">-&gt;<pos:position pos:line="1070" pos:column="17"/></operator><name pos:line="1070" pos:column="14">sockfd<pos:position pos:line="1070" pos:column="20"/></name></name> <operator pos:line="1070" pos:column="21">!=<pos:position pos:line="1070" pos:column="23"/></operator> <name pos:line="1070" pos:column="24">CURL_SOCKET_BAD<pos:position pos:line="1070" pos:column="39"/></name></expr>)<pos:position pos:line="1070" pos:column="40"/></condition><then pos:line="1070" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="1071" pos:column="7">k<pos:position pos:line="1071" pos:column="8"/></name><operator pos:line="1071" pos:column="8">-&gt;<pos:position pos:line="1071" pos:column="13"/></operator><name pos:line="1071" pos:column="10">keepon<pos:position pos:line="1071" pos:column="16"/></name></name> <operator pos:line="1071" pos:column="17">|=<pos:position pos:line="1071" pos:column="19"/></operator> <name pos:line="1071" pos:column="20">KEEP_RECV<pos:position pos:line="1071" pos:column="29"/></name></expr>;<pos:position pos:line="1071" pos:column="30"/></expr_stmt></block></then></if>

    <if pos:line="1073" pos:column="5">if<condition pos:line="1073" pos:column="7">(<expr><name><name pos:line="1073" pos:column="8">conn<pos:position pos:line="1073" pos:column="12"/></name><operator pos:line="1073" pos:column="12">-&gt;<pos:position pos:line="1073" pos:column="17"/></operator><name pos:line="1073" pos:column="14">writesockfd<pos:position pos:line="1073" pos:column="25"/></name></name> <operator pos:line="1073" pos:column="26">!=<pos:position pos:line="1073" pos:column="28"/></operator> <name pos:line="1073" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="1073" pos:column="44"/></name></expr>)<pos:position pos:line="1073" pos:column="45"/></condition><then pos:line="1073" pos:column="45"> <block pos:line="1073" pos:column="46">{
      <decl_stmt><decl><type><name><name pos:line="1074" pos:column="7">struct<pos:position pos:line="1074" pos:column="13"/></name> <name pos:line="1074" pos:column="14">HTTP<pos:position pos:line="1074" pos:column="18"/></name></name> <modifier pos:line="1074" pos:column="19">*<pos:position pos:line="1074" pos:column="20"/></modifier></type><name pos:line="1074" pos:column="20">http<pos:position pos:line="1074" pos:column="24"/></name> <init pos:line="1074" pos:column="25">= <expr><name><name pos:line="1074" pos:column="27">data<pos:position pos:line="1074" pos:column="31"/></name><operator pos:line="1074" pos:column="31">-&gt;<pos:position pos:line="1074" pos:column="36"/></operator><name pos:line="1074" pos:column="33">req<pos:position pos:line="1074" pos:column="36"/></name><operator pos:line="1074" pos:column="36">.<pos:position pos:line="1074" pos:column="37"/></operator><name pos:line="1074" pos:column="37">protop<pos:position pos:line="1074" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="1074" pos:column="44"/></decl_stmt>
      <comment type="block" pos:line="1075" pos:column="7">/* HTTP 1.1 magic:

         Even if we require a 100-return code before uploading data, we might
         need to write data before that since the REQUEST may not have been
         finished sent off just yet.

         Thus, we must check if the request has been sent before we set the
         state info where we wait for the 100-return code
      */</comment>
      <if pos:line="1084" pos:column="7">if<condition pos:line="1084" pos:column="9">(<expr><operator pos:line="1084" pos:column="10">(<pos:position pos:line="1084" pos:column="11"/></operator><name><name pos:line="1084" pos:column="11">data<pos:position pos:line="1084" pos:column="15"/></name><operator pos:line="1084" pos:column="15">-&gt;<pos:position pos:line="1084" pos:column="20"/></operator><name pos:line="1084" pos:column="17">state<pos:position pos:line="1084" pos:column="22"/></name><operator pos:line="1084" pos:column="22">.<pos:position pos:line="1084" pos:column="23"/></operator><name pos:line="1084" pos:column="23">expect100header<pos:position pos:line="1084" pos:column="38"/></name></name><operator pos:line="1084" pos:column="38">)<pos:position pos:line="1084" pos:column="39"/></operator> <operator pos:line="1084" pos:column="40">&amp;&amp;<pos:position pos:line="1084" pos:column="50"/></operator>
         <operator pos:line="1085" pos:column="10">(<pos:position pos:line="1085" pos:column="11"/></operator><name><name pos:line="1085" pos:column="11">conn<pos:position pos:line="1085" pos:column="15"/></name><operator pos:line="1085" pos:column="15">-&gt;<pos:position pos:line="1085" pos:column="20"/></operator><name pos:line="1085" pos:column="17">handler<pos:position pos:line="1085" pos:column="24"/></name><operator pos:line="1085" pos:column="24">-&gt;<pos:position pos:line="1085" pos:column="29"/></operator><name pos:line="1085" pos:column="26">protocol<pos:position pos:line="1085" pos:column="34"/></name></name><operator pos:line="1085" pos:column="34">&amp;<pos:position pos:line="1085" pos:column="39"/></operator><name pos:line="1085" pos:column="35">PROTO_FAMILY_HTTP<pos:position pos:line="1085" pos:column="52"/></name><operator pos:line="1085" pos:column="52">)<pos:position pos:line="1085" pos:column="53"/></operator> <operator pos:line="1085" pos:column="54">&amp;&amp;<pos:position pos:line="1085" pos:column="64"/></operator>
         <operator pos:line="1086" pos:column="10">(<pos:position pos:line="1086" pos:column="11"/></operator><name><name pos:line="1086" pos:column="11">http<pos:position pos:line="1086" pos:column="15"/></name><operator pos:line="1086" pos:column="15">-&gt;<pos:position pos:line="1086" pos:column="20"/></operator><name pos:line="1086" pos:column="17">sending<pos:position pos:line="1086" pos:column="24"/></name></name> <operator pos:line="1086" pos:column="25">==<pos:position pos:line="1086" pos:column="27"/></operator> <name pos:line="1086" pos:column="28">HTTPSEND_BODY<pos:position pos:line="1086" pos:column="41"/></name><operator pos:line="1086" pos:column="41">)<pos:position pos:line="1086" pos:column="42"/></operator></expr>)<pos:position pos:line="1086" pos:column="43"/></condition><then pos:line="1086" pos:column="43"> <block pos:line="1086" pos:column="44">{
        <comment type="block" pos:line="1087" pos:column="9">/* wait with write until we either got 100-continue or a timeout */</comment>
        <expr_stmt><expr><name><name pos:line="1088" pos:column="9">k<pos:position pos:line="1088" pos:column="10"/></name><operator pos:line="1088" pos:column="10">-&gt;<pos:position pos:line="1088" pos:column="15"/></operator><name pos:line="1088" pos:column="12">exp100<pos:position pos:line="1088" pos:column="18"/></name></name> <operator pos:line="1088" pos:column="19">=<pos:position pos:line="1088" pos:column="20"/></operator> <name pos:line="1088" pos:column="21">EXP100_AWAITING_CONTINUE<pos:position pos:line="1088" pos:column="45"/></name></expr>;<pos:position pos:line="1088" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="1089" pos:column="9">k<pos:position pos:line="1089" pos:column="10"/></name><operator pos:line="1089" pos:column="10">-&gt;<pos:position pos:line="1089" pos:column="15"/></operator><name pos:line="1089" pos:column="12">start100<pos:position pos:line="1089" pos:column="20"/></name></name> <operator pos:line="1089" pos:column="21">=<pos:position pos:line="1089" pos:column="22"/></operator> <call><name pos:line="1089" pos:column="23">Curl_tvnow<pos:position pos:line="1089" pos:column="33"/></name><argument_list pos:line="1089" pos:column="33">()<pos:position pos:line="1089" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1089" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="1091" pos:column="9">/* Set a timeout for the multi interface. Add the inaccuracy margin so
           that we don't fire slightly too early and get denied to run. */</comment>
        <expr_stmt><expr><call><name pos:line="1093" pos:column="9">Curl_expire<pos:position pos:line="1093" pos:column="20"/></name><argument_list pos:line="1093" pos:column="20">(<argument><expr><name pos:line="1093" pos:column="21">data<pos:position pos:line="1093" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="1093" pos:column="27">data<pos:position pos:line="1093" pos:column="31"/></name><operator pos:line="1093" pos:column="31">-&gt;<pos:position pos:line="1093" pos:column="36"/></operator><name pos:line="1093" pos:column="33">set<pos:position pos:line="1093" pos:column="36"/></name><operator pos:line="1093" pos:column="36">.<pos:position pos:line="1093" pos:column="37"/></operator><name pos:line="1093" pos:column="37">expect_100_timeout<pos:position pos:line="1093" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="1093" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1093" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="1094" pos:column="8"/></block></then>
      <else pos:line="1095" pos:column="7">else <block pos:line="1095" pos:column="12">{
        <if pos:line="1096" pos:column="9">if<condition pos:line="1096" pos:column="11">(<expr><name><name pos:line="1096" pos:column="12">data<pos:position pos:line="1096" pos:column="16"/></name><operator pos:line="1096" pos:column="16">-&gt;<pos:position pos:line="1096" pos:column="21"/></operator><name pos:line="1096" pos:column="18">state<pos:position pos:line="1096" pos:column="23"/></name><operator pos:line="1096" pos:column="23">.<pos:position pos:line="1096" pos:column="24"/></operator><name pos:line="1096" pos:column="24">expect100header<pos:position pos:line="1096" pos:column="39"/></name></name></expr>)<pos:position pos:line="1096" pos:column="40"/></condition><then pos:line="1096" pos:column="40">
          <comment type="block" pos:line="1097" pos:column="11">/* when we've sent off the rest of the headers, we must await a
             100-continue but first finish sending the request */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="1099" pos:column="11">k<pos:position pos:line="1099" pos:column="12"/></name><operator pos:line="1099" pos:column="12">-&gt;<pos:position pos:line="1099" pos:column="17"/></operator><name pos:line="1099" pos:column="14">exp100<pos:position pos:line="1099" pos:column="20"/></name></name> <operator pos:line="1099" pos:column="21">=<pos:position pos:line="1099" pos:column="22"/></operator> <name pos:line="1099" pos:column="23">EXP100_SENDING_REQUEST<pos:position pos:line="1099" pos:column="45"/></name></expr>;<pos:position pos:line="1099" pos:column="46"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="1101" pos:column="9">/* enable the write bit when we're not waiting for continue */</comment>
        <expr_stmt><expr><name><name pos:line="1102" pos:column="9">k<pos:position pos:line="1102" pos:column="10"/></name><operator pos:line="1102" pos:column="10">-&gt;<pos:position pos:line="1102" pos:column="15"/></operator><name pos:line="1102" pos:column="12">keepon<pos:position pos:line="1102" pos:column="18"/></name></name> <operator pos:line="1102" pos:column="19">|=<pos:position pos:line="1102" pos:column="21"/></operator> <name pos:line="1102" pos:column="22">KEEP_SEND<pos:position pos:line="1102" pos:column="31"/></name></expr>;<pos:position pos:line="1102" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="1103" pos:column="8"/></block></else></if>
    }<pos:position pos:line="1104" pos:column="6"/></block></then></if> <comment type="block" pos:line="1104" pos:column="7">/* if(conn-&gt;writesockfd != CURL_SOCKET_BAD) */</comment>
  }<pos:position pos:line="1105" pos:column="4"/></block></then></if> <comment type="block" pos:line="1105" pos:column="5">/* if(k-&gt;getheader || !data-&gt;set.opt_no_body) */</comment>

}<pos:position pos:line="1107" pos:column="2"/></block></function></block></function></unit>

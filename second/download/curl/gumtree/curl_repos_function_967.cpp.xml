<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_967.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">http2_recv<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">sockindex<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">mem<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">CURLcode<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">err<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">rv<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">http_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">httpc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">httpc<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">sockindex<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt> <comment type="block" pos:line="9" pos:column="20">/* we always do HTTP2 on sockindex 0 */</comment>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">httpc<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">closed<pos:position pos:line="11" pos:column="19"/></name></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
    <comment type="block" pos:line="12" pos:column="5">/* Reset to FALSE to prevent infinite loop in readwrite_data
       function. */</comment>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">httpc<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">closed<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">FALSE<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Nullify here because we call nghttp2_session_send() and they
     might refer to the old buffer. */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">httpc<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">upload_mem<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">httpc<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">upload_len<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name><name pos:line="23" pos:column="6">httpc<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">bodystarted<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">&amp;&amp;<pos:position pos:line="23" pos:column="35"/></operator>
     <name><name pos:line="24" pos:column="6">httpc<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">nread_header_recvbuf<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">&lt;<pos:position pos:line="24" pos:column="38"/></operator> <name><name pos:line="24" pos:column="36">httpc<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">header_recvbuf<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">size_used<pos:position pos:line="24" pos:column="68"/></name></name></expr>)<pos:position pos:line="24" pos:column="69"/></condition><then pos:line="24" pos:column="69"> <block pos:line="24" pos:column="70">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">size_t<pos:position pos:line="25" pos:column="11"/></name></type> <name pos:line="25" pos:column="12">left<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">=
      <expr><name><name pos:line="26" pos:column="7">httpc<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">header_recvbuf<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">size_used<pos:position pos:line="26" pos:column="39"/></name></name> <operator pos:line="26" pos:column="40">-<pos:position pos:line="26" pos:column="41"/></operator> <name><name pos:line="26" pos:column="42">httpc<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">nread_header_recvbuf<pos:position pos:line="26" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">size_t<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">ncopy<pos:position pos:line="27" pos:column="17"/></name> <init pos:line="27" pos:column="18">= <expr><ternary><condition><expr><name pos:line="27" pos:column="20">len<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="26">left<pos:position pos:line="27" pos:column="30"/></name></expr> ?<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32"> <expr><name pos:line="27" pos:column="33">len<pos:position pos:line="27" pos:column="36"/></name></expr> <pos:position pos:line="27" pos:column="37"/></then><else pos:line="27" pos:column="37">: <expr><name pos:line="27" pos:column="39">left<pos:position pos:line="27" pos:column="43"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="27" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">memcpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">mem<pos:position pos:line="28" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="17">httpc<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">header_recvbuf<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">buffer<pos:position pos:line="28" pos:column="46"/></name></name> <operator pos:line="28" pos:column="47">+<pos:position pos:line="28" pos:column="48"/></operator> <name><name pos:line="28" pos:column="49">httpc<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">nread_header_recvbuf<pos:position pos:line="28" pos:column="76"/></name></name></expr></argument>,
           <argument><expr><name pos:line="29" pos:column="12">ncopy<pos:position pos:line="29" pos:column="17"/></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">httpc<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">nread_header_recvbuf<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">+=<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">ncopy<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">ncopy<pos:position pos:line="31" pos:column="17"/></name></expr>;<pos:position pos:line="31" pos:column="18"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name><name pos:line="34" pos:column="6">httpc<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name></name></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18"> <block pos:line="34" pos:column="19">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">nread<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="35" pos:column="13">len<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&lt;<pos:position pos:line="35" pos:column="21"/></operator> <name><name pos:line="35" pos:column="19">httpc<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">datalen<pos:position pos:line="35" pos:column="33"/></name></name></expr> ?<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <expr><name pos:line="35" pos:column="36">len<pos:position pos:line="35" pos:column="39"/></name></expr> <pos:position pos:line="35" pos:column="40"/></then><else pos:line="35" pos:column="40">: <expr><name><name pos:line="35" pos:column="42">httpc<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">datalen<pos:position pos:line="35" pos:column="56"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memcpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">mem<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="17">httpc<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">data<pos:position pos:line="36" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">nread<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">httpc<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">data<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">+=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">nread<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">httpc<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">datalen<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">-=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">nread<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">infof<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name><name pos:line="41" pos:column="11">conn<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">data<pos:position pos:line="41" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"%zu data written\n"<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">nread<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name><name pos:line="42" pos:column="8">httpc<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">datalen<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">==<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28"> <block pos:line="42" pos:column="29">{
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">httpc<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">data<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">NULL<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">httpc<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">datalen<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">nread<pos:position pos:line="46" pos:column="17"/></name></expr>;<pos:position pos:line="46" pos:column="18"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="49" pos:column="3">conn<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">proto<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">httpc<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">mem<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">mem<pos:position pos:line="49" pos:column="30"/></name></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">conn<pos:position pos:line="50" pos:column="7"/></name><operator pos:line="50" pos:column="7">-&gt;<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="9">proto<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">.<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">httpc<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">.<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">len<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">len<pos:position pos:line="50" pos:column="30"/></name></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">infof<pos:position pos:line="52" pos:column="8"/></name><argument_list pos:line="52" pos:column="8">(<argument><expr><name><name pos:line="52" pos:column="9">conn<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">data<pos:position pos:line="52" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="21">"http2_recv: %d bytes buffer\n"<pos:position pos:line="52" pos:column="52"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="53" pos:column="9">conn<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">proto<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">httpc<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">len<pos:position pos:line="53" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name pos:line="55" pos:column="3">nread<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <operator pos:line="55" pos:column="11">(<pos:position pos:line="55" pos:column="12"/></operator><operator pos:line="55" pos:column="12">(<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">Curl_recv<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">*<pos:position pos:line="55" pos:column="23"/></operator><operator pos:line="55" pos:column="23">)<pos:position pos:line="55" pos:column="24"/></operator><name><name pos:line="55" pos:column="24">httpc<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">recv_underlying<pos:position pos:line="55" pos:column="46"/></name></name><operator pos:line="55" pos:column="46">)<pos:position pos:line="55" pos:column="47"/></operator><operator pos:line="55" pos:column="47">(<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="48">conn<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">,<pos:position pos:line="55" pos:column="53"/></operator> <name pos:line="55" pos:column="54">FIRSTSOCKET<pos:position pos:line="55" pos:column="65"/></name><operator pos:line="55" pos:column="65">,<pos:position pos:line="55" pos:column="66"/></operator>
                                               <name><name pos:line="56" pos:column="48">httpc<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">-&gt;<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="55">inbuf<pos:position pos:line="56" pos:column="60"/></name></name><operator pos:line="56" pos:column="60">,<pos:position pos:line="56" pos:column="61"/></operator> <name pos:line="56" pos:column="62">H2_BUFSIZE<pos:position pos:line="56" pos:column="72"/></name><operator pos:line="56" pos:column="72">,<pos:position pos:line="56" pos:column="73"/></operator>
                                               <operator pos:line="57" pos:column="48">&amp;<pos:position pos:line="57" pos:column="53"/></operator><name pos:line="57" pos:column="49">result<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">)<pos:position pos:line="57" pos:column="56"/></operator></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><name pos:line="58" pos:column="6">result<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">==<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">CURLE_AGAIN<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block pos:line="58" pos:column="29">{
    <expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><name pos:line="59" pos:column="6">err<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <name pos:line="59" pos:column="12">result<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">(<expr><name pos:line="63" pos:column="6">nread<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">==<pos:position pos:line="63" pos:column="14"/></operator> <operator pos:line="63" pos:column="15">-<pos:position pos:line="63" pos:column="16"/></operator><literal type="number" pos:line="63" pos:column="16">1<pos:position pos:line="63" pos:column="17"/></literal></expr>)<pos:position pos:line="63" pos:column="18"/></condition><then pos:line="63" pos:column="18"> <block pos:line="63" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">failf<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><name><name pos:line="64" pos:column="11">conn<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">data<pos:position pos:line="64" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="23">"Failed receiving HTTP2 data"<pos:position pos:line="64" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="65" pos:column="5">*<pos:position pos:line="65" pos:column="6"/></operator><name pos:line="65" pos:column="6">err<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <name pos:line="65" pos:column="12">result<pos:position pos:line="65" pos:column="18"/></name></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><literal type="number" pos:line="66" pos:column="12">0<pos:position pos:line="66" pos:column="13"/></literal></expr>;<pos:position pos:line="66" pos:column="14"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">infof<pos:position pos:line="69" pos:column="8"/></name><argument_list pos:line="69" pos:column="8">(<argument><expr><name><name pos:line="69" pos:column="9">conn<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">data<pos:position pos:line="69" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="21">"nread=%zd\n"<pos:position pos:line="69" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="36">nread<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><name pos:line="71" pos:column="6">nread<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">==<pos:position pos:line="71" pos:column="14"/></operator> <literal type="number" pos:line="71" pos:column="15">0<pos:position pos:line="71" pos:column="16"/></literal></expr>)<pos:position pos:line="71" pos:column="17"/></condition><then pos:line="71" pos:column="17"> <block pos:line="71" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">failf<pos:position pos:line="72" pos:column="10"/></name><argument_list pos:line="72" pos:column="10">(<argument><expr><name><name pos:line="72" pos:column="11">conn<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">data<pos:position pos:line="72" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="23">"EOF"<pos:position pos:line="72" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="76" pos:column="3">rv<pos:position pos:line="76" pos:column="5"/></name> <operator pos:line="76" pos:column="6">=<pos:position pos:line="76" pos:column="7"/></operator> <call><name pos:line="76" pos:column="8">nghttp2_session_mem_recv<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><name><name pos:line="76" pos:column="33">httpc<pos:position pos:line="76" pos:column="38"/></name><operator pos:line="76" pos:column="38">-&gt;<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="40">h2<pos:position pos:line="76" pos:column="42"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="77" pos:column="33">(<pos:position pos:line="77" pos:column="34"/></operator><specifier pos:line="77" pos:column="34">const<pos:position pos:line="77" pos:column="39"/></specifier> <name pos:line="77" pos:column="40">uint8_t<pos:position pos:line="77" pos:column="47"/></name> <operator pos:line="77" pos:column="48">*<pos:position pos:line="77" pos:column="49"/></operator><operator pos:line="77" pos:column="49">)<pos:position pos:line="77" pos:column="50"/></operator><name><name pos:line="77" pos:column="50">httpc<pos:position pos:line="77" pos:column="55"/></name><operator pos:line="77" pos:column="55">-&gt;<pos:position pos:line="77" pos:column="60"/></operator><name pos:line="77" pos:column="57">inbuf<pos:position pos:line="77" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="64">nread<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt>

  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">(<expr><call><name pos:line="79" pos:column="6">nghttp2_is_fatal<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><operator pos:line="79" pos:column="23">(<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">int<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">)<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="28">rv<pos:position pos:line="79" pos:column="30"/></name></expr></argument>)<pos:position pos:line="79" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="32"/></condition><then pos:line="79" pos:column="32"> <block pos:line="79" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">failf<pos:position pos:line="80" pos:column="10"/></name><argument_list pos:line="80" pos:column="10">(<argument><expr><name><name pos:line="80" pos:column="11">conn<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">-&gt;<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="17">data<pos:position pos:line="80" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="23">"nghttp2_session_mem_recv() returned %d:%s\n"<pos:position pos:line="80" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name pos:line="81" pos:column="11">rv<pos:position pos:line="81" pos:column="13"/></name></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="15">nghttp2_strerror<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><operator pos:line="81" pos:column="32">(<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="33">int<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">)<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">rv<pos:position pos:line="81" pos:column="39"/></name></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="82" pos:column="5">*<pos:position pos:line="82" pos:column="6"/></operator><name pos:line="82" pos:column="6">err<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <name pos:line="82" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="82" pos:column="28"/></name></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
    <return pos:line="83" pos:column="5">return <expr><literal type="number" pos:line="83" pos:column="12">0<pos:position pos:line="83" pos:column="13"/></literal></expr>;<pos:position pos:line="83" pos:column="14"/></return>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">infof<pos:position pos:line="85" pos:column="8"/></name><argument_list pos:line="85" pos:column="8">(<argument><expr><name><name pos:line="85" pos:column="9">conn<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">-&gt;<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="15">data<pos:position pos:line="85" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="21">"nghttp2_session_mem_recv() returns %zd\n"<pos:position pos:line="85" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="65">rv<pos:position pos:line="85" pos:column="67"/></name></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="69"/></expr_stmt>
  <comment type="block" pos:line="86" pos:column="3">/* Always send pending frames in nghttp2 session, because
     nghttp2_session_mem_recv() may queue new frame */</comment>
  <expr_stmt><expr><name pos:line="88" pos:column="3">rv<pos:position pos:line="88" pos:column="5"/></name> <operator pos:line="88" pos:column="6">=<pos:position pos:line="88" pos:column="7"/></operator> <call><name pos:line="88" pos:column="8">nghttp2_session_send<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">httpc<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">-&gt;<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="36">h2<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
  <if pos:line="89" pos:column="3">if<condition pos:line="89" pos:column="5">(<expr><name pos:line="89" pos:column="6">rv<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">!=<pos:position pos:line="89" pos:column="11"/></operator> <literal type="number" pos:line="89" pos:column="12">0<pos:position pos:line="89" pos:column="13"/></literal></expr>)<pos:position pos:line="89" pos:column="14"/></condition><then pos:line="89" pos:column="14"> <block pos:line="89" pos:column="15">{
    <expr_stmt><expr><operator pos:line="90" pos:column="5">*<pos:position pos:line="90" pos:column="6"/></operator><name pos:line="90" pos:column="6">err<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <name pos:line="90" pos:column="12">CURLE_SEND_ERROR<pos:position pos:line="90" pos:column="28"/></name></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
    <return pos:line="91" pos:column="5">return <expr><literal type="number" pos:line="91" pos:column="12">0<pos:position pos:line="91" pos:column="13"/></literal></expr>;<pos:position pos:line="91" pos:column="14"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
  <if pos:line="93" pos:column="3">if<condition pos:line="93" pos:column="5">(<expr><name pos:line="93" pos:column="6">len<pos:position pos:line="93" pos:column="9"/></name> <operator pos:line="93" pos:column="10">!=<pos:position pos:line="93" pos:column="12"/></operator> <name><name pos:line="93" pos:column="13">httpc<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">-&gt;<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="20">len<pos:position pos:line="93" pos:column="23"/></name></name></expr>)<pos:position pos:line="93" pos:column="24"/></condition><then pos:line="93" pos:column="24"> <block pos:line="93" pos:column="25">{
    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">len<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">-<pos:position pos:line="94" pos:column="17"/></operator> <name><name pos:line="94" pos:column="18">conn<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">proto<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">.<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="30">httpc<pos:position pos:line="94" pos:column="35"/></name><operator pos:line="94" pos:column="35">.<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">len<pos:position pos:line="94" pos:column="39"/></name></name></expr>;<pos:position pos:line="94" pos:column="40"/></return>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="96" pos:column="3">/* If stream is closed, return 0 to signal the http routine to close
     the connection */</comment>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name><name pos:line="98" pos:column="6">httpc<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">closed<pos:position pos:line="98" pos:column="19"/></name></name></expr>)<pos:position pos:line="98" pos:column="20"/></condition><then pos:line="98" pos:column="20"> <block pos:line="98" pos:column="21">{
    <comment type="block" pos:line="99" pos:column="5">/* Reset to FALSE to prevent infinite loop in readwrite_data
       function. */</comment>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">httpc<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">closed<pos:position pos:line="101" pos:column="18"/></name></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <name pos:line="101" pos:column="21">FALSE<pos:position pos:line="101" pos:column="26"/></name></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
    <return pos:line="102" pos:column="5">return <expr><literal type="number" pos:line="102" pos:column="12">0<pos:position pos:line="102" pos:column="13"/></literal></expr>;<pos:position pos:line="102" pos:column="14"/></return>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="104" pos:column="3">*<pos:position pos:line="104" pos:column="4"/></operator><name pos:line="104" pos:column="4">err<pos:position pos:line="104" pos:column="7"/></name> <operator pos:line="104" pos:column="8">=<pos:position pos:line="104" pos:column="9"/></operator> <name pos:line="104" pos:column="10">CURLE_AGAIN<pos:position pos:line="104" pos:column="21"/></name></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
  <return pos:line="105" pos:column="3">return <expr><operator pos:line="105" pos:column="10">-<pos:position pos:line="105" pos:column="11"/></operator><literal type="number" pos:line="105" pos:column="11">1<pos:position pos:line="105" pos:column="12"/></literal></expr>;<pos:position pos:line="105" pos:column="13"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

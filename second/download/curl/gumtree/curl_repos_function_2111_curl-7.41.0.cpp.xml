<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2111_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ossl_connect_step1<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">sockindex<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ciphers<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">SSL_METHOD_QUAL<pos:position pos:line="6" pos:column="18"/></name> <name pos:line="6" pos:column="19">SSL_METHOD<pos:position pos:line="6" pos:column="29"/></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">req_method<pos:position pos:line="6" pos:column="41"/></name> <init pos:line="6" pos:column="42">= <expr><name pos:line="6" pos:column="44">NULL<pos:position pos:line="6" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">void<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">ssl_sessionid<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">X509_LOOKUP<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">lookup<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_socket_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">sockfd<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">conn<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">sock<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">sockindex<pos:position pos:line="9" pos:column="46"/></name></expr>]<pos:position pos:line="9" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">ssl_connect_data<pos:position pos:line="10" pos:column="26"/></name></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier></type><name pos:line="10" pos:column="28">connssl<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator><name><name pos:line="10" pos:column="39">conn<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">ssl<pos:position pos:line="10" pos:column="48"/></name><index pos:line="10" pos:column="48">[<expr><name pos:line="10" pos:column="49">sockindex<pos:position pos:line="10" pos:column="58"/></name></expr>]<pos:position pos:line="10" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">long<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">ctx_options<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">SSL_CTRL_SET_TLSEXT_HOSTNAME<pos:position pos:line="12" pos:column="36"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">bool<pos:position pos:line="13" pos:column="7"/></name></type> <name pos:line="13" pos:column="8">sni<pos:position pos:line="13" pos:column="11"/></name></decl>;<pos:position pos:line="13" pos:column="12"/></decl_stmt>
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">ENABLE_IPV6<pos:position pos:line="14" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">in6_addr<pos:position pos:line="15" pos:column="18"/></name></name></type> <name pos:line="15" pos:column="19">addr<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">struct<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">in_addr<pos:position pos:line="17" pos:column="17"/></name></name></type> <name pos:line="17" pos:column="18">addr<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAS_ALPN<pos:position pos:line="20" pos:column="16"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">unsigned<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">char<pos:position pos:line="21" pos:column="16"/></name></type> <name><name pos:line="21" pos:column="17">protocols<pos:position pos:line="21" pos:column="26"/></name><index pos:line="21" pos:column="26">[<expr><literal type="number" pos:line="21" pos:column="27">128<pos:position pos:line="21" pos:column="30"/></literal></expr>]<pos:position pos:line="21" pos:column="31"/></index></name></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">DEBUGASSERT<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">ssl_connect_1<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">==<pos:position pos:line="24" pos:column="31"/></operator> <name><name pos:line="24" pos:column="32">connssl<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">connecting_state<pos:position pos:line="24" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* Make funny stuff to get random input */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">Curl_ossl_seed<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">data<pos:position pos:line="27" pos:column="22"/></name></expr></argument>)<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">data<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">set<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">ssl<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">certverifyresult<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <operator pos:line="29" pos:column="36">!<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">X509_V_OK<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* check to see if we've been told to use an explicit SSL/TLS version */</comment>

  <switch pos:line="33" pos:column="3">switch<condition pos:line="33" pos:column="9">(<expr><name><name pos:line="33" pos:column="10">data<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">set<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">ssl<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">version<pos:position pos:line="33" pos:column="31"/></name></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition> <block pos:line="33" pos:column="33">{
  <default pos:line="34" pos:column="3">default:<pos:position pos:line="34" pos:column="11"/></default>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="35" pos:column="31"/></name></expr>:<pos:position pos:line="35" pos:column="32"/></case>
  <case pos:line="36" pos:column="3">case <expr><name pos:line="36" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="36" pos:column="29"/></name></expr>:<pos:position pos:line="36" pos:column="30"/></case>
  <case pos:line="37" pos:column="3">case <expr><name pos:line="37" pos:column="8">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="37" pos:column="31"/></name></expr>:<pos:position pos:line="37" pos:column="32"/></case>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="38" pos:column="31"/></name></expr>:<pos:position pos:line="38" pos:column="32"/></case>
  <case pos:line="39" pos:column="3">case <expr><name pos:line="39" pos:column="8">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="39" pos:column="31"/></name></expr>:<pos:position pos:line="39" pos:column="32"/></case>
    <comment type="block" pos:line="40" pos:column="5">/* it will be handled later with the context options */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">req_method<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">SSLv23_client_method<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">()<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">use_sni<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">TRUE<pos:position pos:line="42" pos:column="17"/></name></expr></argument>)<pos:position pos:line="42" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
    <break pos:line="43" pos:column="5">break;<pos:position pos:line="43" pos:column="11"/></break>
  <case pos:line="44" pos:column="3">case <expr><name pos:line="44" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="44" pos:column="29"/></name></expr>:<pos:position pos:line="44" pos:column="30"/></case>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">OPENSSL_NO_SSL2<pos:position pos:line="45" pos:column="23"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">failf<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">data<pos:position pos:line="46" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="17">"OpenSSL was built without SSLv2 support"<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">CURLE_NOT_BUILT_IN<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></return>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">USE_TLS_SRP<pos:position pos:line="49" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name><name pos:line="50" pos:column="8">data<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">set<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">ssl<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">authtype<pos:position pos:line="50" pos:column="30"/></name></name> <operator pos:line="50" pos:column="31">==<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="50" pos:column="50"/></name></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
      <block type="pseudo"><return pos:line="51" pos:column="7">return <expr><name pos:line="51" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></return></block></then></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="53" pos:column="5">req_method<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">SSLv2_client_method<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">()<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">use_sni<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">FALSE<pos:position pos:line="54" pos:column="18"/></name></expr></argument>)<pos:position pos:line="54" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="20"/></expr_stmt>
    <break pos:line="55" pos:column="5">break;<pos:position pos:line="55" pos:column="11"/></break>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
  <case pos:line="57" pos:column="3">case <expr><name pos:line="57" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="57" pos:column="29"/></name></expr>:<pos:position pos:line="57" pos:column="30"/></case>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">USE_TLS_SRP<pos:position pos:line="58" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name><name pos:line="59" pos:column="8">data<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">set<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">ssl<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">.<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">authtype<pos:position pos:line="59" pos:column="30"/></name></name> <operator pos:line="59" pos:column="31">==<pos:position pos:line="59" pos:column="33"/></operator> <name pos:line="59" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="59" pos:column="50"/></name></expr>)<pos:position pos:line="59" pos:column="51"/></condition><then pos:line="59" pos:column="51">
      <block type="pseudo"><return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></return></block></then></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="62" pos:column="5">req_method<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">SSLv3_client_method<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">()<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">use_sni<pos:position pos:line="63" pos:column="12"/></name><argument_list pos:line="63" pos:column="12">(<argument><expr><name pos:line="63" pos:column="13">FALSE<pos:position pos:line="63" pos:column="18"/></name></expr></argument>)<pos:position pos:line="63" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="20"/></expr_stmt>
    <break pos:line="64" pos:column="5">break;<pos:position pos:line="64" pos:column="11"/></break>
  }<pos:position pos:line="65" pos:column="4"/></block></switch>

  <if pos:line="67" pos:column="3">if<condition pos:line="67" pos:column="5">(<expr><name><name pos:line="67" pos:column="6">connssl<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">ctx<pos:position pos:line="67" pos:column="18"/></name></name></expr>)<pos:position pos:line="67" pos:column="19"/></condition><then pos:line="67" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="5">SSL_CTX_free<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name><name pos:line="68" pos:column="18">connssl<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">ctx<pos:position pos:line="68" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">connssl<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">ctx<pos:position pos:line="69" pos:column="15"/></name></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">SSL_CTX_new<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">req_method<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><operator pos:line="71" pos:column="6">!<pos:position pos:line="71" pos:column="7"/></operator><name><name pos:line="71" pos:column="7">connssl<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">ctx<pos:position pos:line="71" pos:column="19"/></name></name></expr>)<pos:position pos:line="71" pos:column="20"/></condition><then pos:line="71" pos:column="20"> <block pos:line="71" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">failf<pos:position pos:line="72" pos:column="10"/></name><argument_list pos:line="72" pos:column="10">(<argument><expr><name pos:line="72" pos:column="11">data<pos:position pos:line="72" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="17">"SSL: couldn't create a context: %s"<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="73" pos:column="11">ERR_error_string<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><call><name pos:line="73" pos:column="28">ERR_peek_error<pos:position pos:line="73" pos:column="42"/></name><argument_list pos:line="73" pos:column="42">()<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">NULL<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><name pos:line="74" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="74" pos:column="31"/></name></expr>;<pos:position pos:line="74" pos:column="32"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">ifdef<pos:position pos:line="77" pos:column="7"/></cpp:directive> <name pos:line="77" pos:column="8">SSL_MODE_RELEASE_BUFFERS<pos:position pos:line="77" pos:column="32"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="78" pos:column="3">SSL_CTX_set_mode<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name><name pos:line="78" pos:column="20">connssl<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">-&gt;<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="29">ctx<pos:position pos:line="78" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">SSL_MODE_RELEASE_BUFFERS<pos:position pos:line="78" pos:column="58"/></name></expr></argument>)<pos:position pos:line="78" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifdef<pos:position pos:line="81" pos:column="7"/></cpp:directive> <name pos:line="81" pos:column="8">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="81" pos:column="33"/></name></cpp:ifdef>
  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><name><name pos:line="82" pos:column="6">data<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">-&gt;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="12">set<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">.<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">fdebug<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">&amp;&amp;<pos:position pos:line="82" pos:column="33"/></operator> <name><name pos:line="82" pos:column="26">data<pos:position pos:line="82" pos:column="30"/></name><operator pos:line="82" pos:column="30">-&gt;<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="32">set<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">.<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="36">verbose<pos:position pos:line="82" pos:column="43"/></name></name></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44"> <block pos:line="82" pos:column="45">{
    <comment type="block" pos:line="83" pos:column="5">/* the SSL trace callback is only used for verbose logging so we only
       inform about failures of setting it */</comment>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><operator pos:line="85" pos:column="8">!<pos:position pos:line="85" pos:column="9"/></operator><call><name pos:line="85" pos:column="9">SSL_CTX_callback_ctrl<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name><name pos:line="85" pos:column="31">connssl<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">-&gt;<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="40">ctx<pos:position pos:line="85" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="45">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="85" pos:column="70"/></name></expr></argument>,
                               <argument><expr><operator pos:line="86" pos:column="32">(<pos:position pos:line="86" pos:column="33"/></operator><call><call><name pos:line="86" pos:column="33">void<pos:position pos:line="86" pos:column="37"/></name> <argument_list pos:line="86" pos:column="38">(<argument><expr><operator pos:line="86" pos:column="39">*<pos:position pos:line="86" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call><argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">void<pos:position pos:line="86" pos:column="46"/></name></expr></argument>)<pos:position pos:line="86" pos:column="47"/></argument_list></call><operator pos:line="86" pos:column="47">)<pos:position pos:line="86" pos:column="48"/></operator><name pos:line="86" pos:column="48">ssl_tls_trace<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="63"/></condition><then pos:line="86" pos:column="63"> <block pos:line="86" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">infof<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">data<pos:position pos:line="87" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="19">"SSL: couldn't set callback!\n"<pos:position pos:line="87" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then>
    <elseif pos:line="89" pos:column="5">else <if pos:line="89" pos:column="10">if<condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><call><name pos:line="89" pos:column="14">SSL_CTX_ctrl<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name><name pos:line="89" pos:column="27">connssl<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">ctx<pos:position pos:line="89" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="41">SSL_CTRL_SET_MSG_CALLBACK_ARG<pos:position pos:line="89" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="72">0<pos:position pos:line="89" pos:column="73"/></literal></expr></argument>,
                          <argument><expr><name pos:line="90" pos:column="27">conn<pos:position pos:line="90" pos:column="31"/></name></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="33"/></condition><then pos:line="90" pos:column="33"> <block pos:line="90" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">infof<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">data<pos:position pos:line="91" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="19">"SSL: couldn't set callback argument!\n"<pos:position pos:line="91" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="93" pos:column="4"/></block></then></if>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="96" pos:column="3">/* OpenSSL contains code to work-around lots of bugs and flaws in various
     SSL-implementations. SSL_CTX_set_options() is used to enabled those
     work-arounds. The man page for this option states that SSL_OP_ALL enables
     all the work-arounds and that "It is usually safe to use SSL_OP_ALL to
     enable the bug workaround options if compatibility with somewhat broken
     implementations is desired."

     The "-no_ticket" option was introduced in Openssl0.9.8j. It's a flag to
     disable "rfc4507bis session ticket support".  rfc4507bis was later turned
     into the proper RFC5077 it seems: http://tools.ietf.org/html/rfc5077

     The enabled extension concerns the session management. I wonder how often
     libcurl stops a connection and then resumes a TLS session. also, sending
     the session data is some overhead. .I suggest that you just use your
     proposed patch (which explicitly disables TICKET).

     If someone writes an application with libcurl and openssl who wants to
     enable the feature, one can do this in the SSL callback.

     SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG option enabling allowed proper
     interoperability with web server Netscape Enterprise Server 2.0.1 which
     was released back in 1996.

     Due to CVE-2010-4180, option SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG has
     become ineffective as of OpenSSL 0.9.8q and 1.0.0c. In order to mitigate
     CVE-2010-4180 when using previous OpenSSL versions we no longer enable
     this option regardless of OpenSSL version and SSL_OP_ALL definition.

     OpenSSL added a work-around for a SSL 3.0/TLS 1.0 CBC vulnerability
     (http://www.openssl.org/~bodo/tls-cbc.txt). In 0.9.6e they added a bit to
     SSL_OP_ALL that _disables_ that work-around despite the fact that
     SSL_OP_ALL is documented to do "rather harmless" workarounds. In order to
     keep the secure work-around, the SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS bit
     must not be set.
  */</comment>

  <expr_stmt><expr><name pos:line="132" pos:column="3">ctx_options<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">=<pos:position pos:line="132" pos:column="16"/></operator> <name pos:line="132" pos:column="17">SSL_OP_ALL<pos:position pos:line="132" pos:column="27"/></name></expr>;<pos:position pos:line="132" pos:column="28"/></expr_stmt>

<cpp:ifdef pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">ifdef<pos:position pos:line="134" pos:column="7"/></cpp:directive> <name pos:line="134" pos:column="8">SSL_OP_NO_TICKET<pos:position pos:line="134" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="135" pos:column="3">ctx_options<pos:position pos:line="135" pos:column="14"/></name> <operator pos:line="135" pos:column="15">|=<pos:position pos:line="135" pos:column="17"/></operator> <name pos:line="135" pos:column="18">SSL_OP_NO_TICKET<pos:position pos:line="135" pos:column="34"/></name></expr>;<pos:position pos:line="135" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">endif<pos:position pos:line="136" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">ifdef<pos:position pos:line="138" pos:column="7"/></cpp:directive> <name pos:line="138" pos:column="8">SSL_OP_NO_COMPRESSION<pos:position pos:line="138" pos:column="29"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="139" pos:column="3">ctx_options<pos:position pos:line="139" pos:column="14"/></name> <operator pos:line="139" pos:column="15">|=<pos:position pos:line="139" pos:column="17"/></operator> <name pos:line="139" pos:column="18">SSL_OP_NO_COMPRESSION<pos:position pos:line="139" pos:column="39"/></name></expr>;<pos:position pos:line="139" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif<pos:position pos:line="140" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">ifdef<pos:position pos:line="142" pos:column="7"/></cpp:directive> <name pos:line="142" pos:column="8">SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG<pos:position pos:line="142" pos:column="47"/></name></cpp:ifdef>
  <comment type="block" pos:line="143" pos:column="3">/* mitigate CVE-2010-4180 */</comment>
  <expr_stmt><expr><name pos:line="144" pos:column="3">ctx_options<pos:position pos:line="144" pos:column="14"/></name> <operator pos:line="144" pos:column="15">&amp;=<pos:position pos:line="144" pos:column="21"/></operator> <operator pos:line="144" pos:column="18">~<pos:position pos:line="144" pos:column="19"/></operator><name pos:line="144" pos:column="19">SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG<pos:position pos:line="144" pos:column="58"/></name></expr>;<pos:position pos:line="144" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifdef<pos:position pos:line="147" pos:column="7"/></cpp:directive> <name pos:line="147" pos:column="8">SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS<pos:position pos:line="147" pos:column="42"/></name></cpp:ifdef>
  <comment type="block" pos:line="148" pos:column="3">/* unless the user explicitly ask to allow the protocol vulnerability we
     use the work-around */</comment>
  <if pos:line="150" pos:column="3">if<condition pos:line="150" pos:column="5">(<expr><operator pos:line="150" pos:column="6">!<pos:position pos:line="150" pos:column="7"/></operator><name><name pos:line="150" pos:column="7">conn<pos:position pos:line="150" pos:column="11"/></name><operator pos:line="150" pos:column="11">-&gt;<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="13">data<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">-&gt;<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="19">set<pos:position pos:line="150" pos:column="22"/></name><operator pos:line="150" pos:column="22">.<pos:position pos:line="150" pos:column="23"/></operator><name pos:line="150" pos:column="23">ssl_enable_beast<pos:position pos:line="150" pos:column="39"/></name></name></expr>)<pos:position pos:line="150" pos:column="40"/></condition><then pos:line="150" pos:column="40">
    <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="5">ctx_options<pos:position pos:line="151" pos:column="16"/></name> <operator pos:line="151" pos:column="17">&amp;=<pos:position pos:line="151" pos:column="23"/></operator> <operator pos:line="151" pos:column="20">~<pos:position pos:line="151" pos:column="21"/></operator><name pos:line="151" pos:column="21">SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS<pos:position pos:line="151" pos:column="55"/></name></expr>;<pos:position pos:line="151" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>

  <switch pos:line="154" pos:column="3">switch<condition pos:line="154" pos:column="9">(<expr><name><name pos:line="154" pos:column="10">data<pos:position pos:line="154" pos:column="14"/></name><operator pos:line="154" pos:column="14">-&gt;<pos:position pos:line="154" pos:column="19"/></operator><name pos:line="154" pos:column="16">set<pos:position pos:line="154" pos:column="19"/></name><operator pos:line="154" pos:column="19">.<pos:position pos:line="154" pos:column="20"/></operator><name pos:line="154" pos:column="20">ssl<pos:position pos:line="154" pos:column="23"/></name><operator pos:line="154" pos:column="23">.<pos:position pos:line="154" pos:column="24"/></operator><name pos:line="154" pos:column="24">version<pos:position pos:line="154" pos:column="31"/></name></name></expr>)<pos:position pos:line="154" pos:column="32"/></condition> <block pos:line="154" pos:column="33">{
  <case pos:line="155" pos:column="3">case <expr><name pos:line="155" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="155" pos:column="29"/></name></expr>:<pos:position pos:line="155" pos:column="30"/></case>
<cpp:ifdef pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">ifdef<pos:position pos:line="156" pos:column="7"/></cpp:directive> <name pos:line="156" pos:column="8">USE_TLS_SRP<pos:position pos:line="156" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="157" pos:column="5">if<condition pos:line="157" pos:column="7">(<expr><name><name pos:line="157" pos:column="8">data<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">set<pos:position pos:line="157" pos:column="17"/></name><operator pos:line="157" pos:column="17">.<pos:position pos:line="157" pos:column="18"/></operator><name pos:line="157" pos:column="18">ssl<pos:position pos:line="157" pos:column="21"/></name><operator pos:line="157" pos:column="21">.<pos:position pos:line="157" pos:column="22"/></operator><name pos:line="157" pos:column="22">authtype<pos:position pos:line="157" pos:column="30"/></name></name> <operator pos:line="157" pos:column="31">==<pos:position pos:line="157" pos:column="33"/></operator> <name pos:line="157" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="157" pos:column="50"/></name></expr>)<pos:position pos:line="157" pos:column="51"/></condition><then pos:line="157" pos:column="51"> <block pos:line="157" pos:column="52">{
      <expr_stmt><expr><call><name pos:line="158" pos:column="7">infof<pos:position pos:line="158" pos:column="12"/></name><argument_list pos:line="158" pos:column="12">(<argument><expr><name pos:line="158" pos:column="13">data<pos:position pos:line="158" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="19">"Set version TLSv1.x for SRP authorisation\n"<pos:position pos:line="158" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if>
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="161" pos:column="5">ctx_options<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">|=<pos:position pos:line="161" pos:column="19"/></operator> <name pos:line="161" pos:column="20">SSL_OP_NO_SSLv2<pos:position pos:line="161" pos:column="35"/></name></expr>;<pos:position pos:line="161" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="162" pos:column="5">ctx_options<pos:position pos:line="162" pos:column="16"/></name> <operator pos:line="162" pos:column="17">|=<pos:position pos:line="162" pos:column="19"/></operator> <name pos:line="162" pos:column="20">SSL_OP_NO_TLSv1<pos:position pos:line="162" pos:column="35"/></name></expr>;<pos:position pos:line="162" pos:column="36"/></expr_stmt>
<cpp:if pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">if<pos:position pos:line="163" pos:column="4"/></cpp:directive> <expr><name pos:line="163" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="163" pos:column="27"/></name> <operator pos:line="163" pos:column="28">&gt;=<pos:position pos:line="163" pos:column="33"/></operator> <literal type="number" pos:line="163" pos:column="31">0x1000100FL<pos:position pos:line="163" pos:column="42"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="164" pos:column="5">ctx_options<pos:position pos:line="164" pos:column="16"/></name> <operator pos:line="164" pos:column="17">|=<pos:position pos:line="164" pos:column="19"/></operator> <name pos:line="164" pos:column="20">SSL_OP_NO_TLSv1_1<pos:position pos:line="164" pos:column="37"/></name></expr>;<pos:position pos:line="164" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="165" pos:column="5">ctx_options<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">|=<pos:position pos:line="165" pos:column="19"/></operator> <name pos:line="165" pos:column="20">SSL_OP_NO_TLSv1_2<pos:position pos:line="165" pos:column="37"/></name></expr>;<pos:position pos:line="165" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">endif<pos:position pos:line="166" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="167" pos:column="5">break;<pos:position pos:line="167" pos:column="11"/></break>

  <case pos:line="169" pos:column="3">case <expr><name pos:line="169" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="169" pos:column="31"/></name></expr>:<pos:position pos:line="169" pos:column="32"/></case>
  <case pos:line="170" pos:column="3">case <expr><name pos:line="170" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="170" pos:column="29"/></name></expr>:<pos:position pos:line="170" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="171" pos:column="5">ctx_options<pos:position pos:line="171" pos:column="16"/></name> <operator pos:line="171" pos:column="17">|=<pos:position pos:line="171" pos:column="19"/></operator> <name pos:line="171" pos:column="20">SSL_OP_NO_SSLv2<pos:position pos:line="171" pos:column="35"/></name></expr>;<pos:position pos:line="171" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="172" pos:column="5">ctx_options<pos:position pos:line="172" pos:column="16"/></name> <operator pos:line="172" pos:column="17">|=<pos:position pos:line="172" pos:column="19"/></operator> <name pos:line="172" pos:column="20">SSL_OP_NO_SSLv3<pos:position pos:line="172" pos:column="35"/></name></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt>
    <break pos:line="173" pos:column="5">break;<pos:position pos:line="173" pos:column="11"/></break>

  <case pos:line="175" pos:column="3">case <expr><name pos:line="175" pos:column="8">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="175" pos:column="31"/></name></expr>:<pos:position pos:line="175" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="176" pos:column="5">ctx_options<pos:position pos:line="176" pos:column="16"/></name> <operator pos:line="176" pos:column="17">|=<pos:position pos:line="176" pos:column="19"/></operator> <name pos:line="176" pos:column="20">SSL_OP_NO_SSLv2<pos:position pos:line="176" pos:column="35"/></name></expr>;<pos:position pos:line="176" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="177" pos:column="5">ctx_options<pos:position pos:line="177" pos:column="16"/></name> <operator pos:line="177" pos:column="17">|=<pos:position pos:line="177" pos:column="19"/></operator> <name pos:line="177" pos:column="20">SSL_OP_NO_SSLv3<pos:position pos:line="177" pos:column="35"/></name></expr>;<pos:position pos:line="177" pos:column="36"/></expr_stmt>
<cpp:if pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">if<pos:position pos:line="178" pos:column="4"/></cpp:directive> <expr><name pos:line="178" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="178" pos:column="27"/></name> <operator pos:line="178" pos:column="28">&gt;=<pos:position pos:line="178" pos:column="33"/></operator> <literal type="number" pos:line="178" pos:column="31">0x1000100FL<pos:position pos:line="178" pos:column="42"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="179" pos:column="5">ctx_options<pos:position pos:line="179" pos:column="16"/></name> <operator pos:line="179" pos:column="17">|=<pos:position pos:line="179" pos:column="19"/></operator> <name pos:line="179" pos:column="20">SSL_OP_NO_TLSv1_1<pos:position pos:line="179" pos:column="37"/></name></expr>;<pos:position pos:line="179" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="180" pos:column="5">ctx_options<pos:position pos:line="180" pos:column="16"/></name> <operator pos:line="180" pos:column="17">|=<pos:position pos:line="180" pos:column="19"/></operator> <name pos:line="180" pos:column="20">SSL_OP_NO_TLSv1_2<pos:position pos:line="180" pos:column="37"/></name></expr>;<pos:position pos:line="180" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">endif<pos:position pos:line="181" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="182" pos:column="5">break;<pos:position pos:line="182" pos:column="11"/></break>

<cpp:if pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">if<pos:position pos:line="184" pos:column="4"/></cpp:directive> <expr><name pos:line="184" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="184" pos:column="27"/></name> <operator pos:line="184" pos:column="28">&gt;=<pos:position pos:line="184" pos:column="33"/></operator> <literal type="number" pos:line="184" pos:column="31">0x1000100FL<pos:position pos:line="184" pos:column="42"/></literal></expr></cpp:if>
  <case pos:line="185" pos:column="3">case <expr><name pos:line="185" pos:column="8">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="185" pos:column="31"/></name></expr>:<pos:position pos:line="185" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="186" pos:column="5">ctx_options<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">|=<pos:position pos:line="186" pos:column="19"/></operator> <name pos:line="186" pos:column="20">SSL_OP_NO_SSLv2<pos:position pos:line="186" pos:column="35"/></name></expr>;<pos:position pos:line="186" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="187" pos:column="5">ctx_options<pos:position pos:line="187" pos:column="16"/></name> <operator pos:line="187" pos:column="17">|=<pos:position pos:line="187" pos:column="19"/></operator> <name pos:line="187" pos:column="20">SSL_OP_NO_SSLv3<pos:position pos:line="187" pos:column="35"/></name></expr>;<pos:position pos:line="187" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="188" pos:column="5">ctx_options<pos:position pos:line="188" pos:column="16"/></name> <operator pos:line="188" pos:column="17">|=<pos:position pos:line="188" pos:column="19"/></operator> <name pos:line="188" pos:column="20">SSL_OP_NO_TLSv1<pos:position pos:line="188" pos:column="35"/></name></expr>;<pos:position pos:line="188" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="189" pos:column="5">ctx_options<pos:position pos:line="189" pos:column="16"/></name> <operator pos:line="189" pos:column="17">|=<pos:position pos:line="189" pos:column="19"/></operator> <name pos:line="189" pos:column="20">SSL_OP_NO_TLSv1_2<pos:position pos:line="189" pos:column="37"/></name></expr>;<pos:position pos:line="189" pos:column="38"/></expr_stmt>
    <break pos:line="190" pos:column="5">break;<pos:position pos:line="190" pos:column="11"/></break>

  <case pos:line="192" pos:column="3">case <expr><name pos:line="192" pos:column="8">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="192" pos:column="31"/></name></expr>:<pos:position pos:line="192" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="193" pos:column="5">ctx_options<pos:position pos:line="193" pos:column="16"/></name> <operator pos:line="193" pos:column="17">|=<pos:position pos:line="193" pos:column="19"/></operator> <name pos:line="193" pos:column="20">SSL_OP_NO_SSLv2<pos:position pos:line="193" pos:column="35"/></name></expr>;<pos:position pos:line="193" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="194" pos:column="5">ctx_options<pos:position pos:line="194" pos:column="16"/></name> <operator pos:line="194" pos:column="17">|=<pos:position pos:line="194" pos:column="19"/></operator> <name pos:line="194" pos:column="20">SSL_OP_NO_SSLv3<pos:position pos:line="194" pos:column="35"/></name></expr>;<pos:position pos:line="194" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="195" pos:column="5">ctx_options<pos:position pos:line="195" pos:column="16"/></name> <operator pos:line="195" pos:column="17">|=<pos:position pos:line="195" pos:column="19"/></operator> <name pos:line="195" pos:column="20">SSL_OP_NO_TLSv1<pos:position pos:line="195" pos:column="35"/></name></expr>;<pos:position pos:line="195" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="196" pos:column="5">ctx_options<pos:position pos:line="196" pos:column="16"/></name> <operator pos:line="196" pos:column="17">|=<pos:position pos:line="196" pos:column="19"/></operator> <name pos:line="196" pos:column="20">SSL_OP_NO_TLSv1_1<pos:position pos:line="196" pos:column="37"/></name></expr>;<pos:position pos:line="196" pos:column="38"/></expr_stmt>
    <break pos:line="197" pos:column="5">break;<pos:position pos:line="197" pos:column="11"/></break>
<cpp:endif pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">endif<pos:position pos:line="198" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifndef pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">ifndef<pos:position pos:line="200" pos:column="8"/></cpp:directive> <name pos:line="200" pos:column="9">OPENSSL_NO_SSL2<pos:position pos:line="200" pos:column="24"/></name></cpp:ifndef>
  <case pos:line="201" pos:column="3">case <expr><name pos:line="201" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="201" pos:column="29"/></name></expr>:<pos:position pos:line="201" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="202" pos:column="5">ctx_options<pos:position pos:line="202" pos:column="16"/></name> <operator pos:line="202" pos:column="17">|=<pos:position pos:line="202" pos:column="19"/></operator> <name pos:line="202" pos:column="20">SSL_OP_NO_SSLv3<pos:position pos:line="202" pos:column="35"/></name></expr>;<pos:position pos:line="202" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="203" pos:column="5">ctx_options<pos:position pos:line="203" pos:column="16"/></name> <operator pos:line="203" pos:column="17">|=<pos:position pos:line="203" pos:column="19"/></operator> <name pos:line="203" pos:column="20">SSL_OP_NO_TLSv1<pos:position pos:line="203" pos:column="35"/></name></expr>;<pos:position pos:line="203" pos:column="36"/></expr_stmt>
<cpp:if pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">if<pos:position pos:line="204" pos:column="4"/></cpp:directive> <expr><name pos:line="204" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="204" pos:column="27"/></name> <operator pos:line="204" pos:column="28">&gt;=<pos:position pos:line="204" pos:column="33"/></operator> <literal type="number" pos:line="204" pos:column="31">0x1000100FL<pos:position pos:line="204" pos:column="42"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="205" pos:column="5">ctx_options<pos:position pos:line="205" pos:column="16"/></name> <operator pos:line="205" pos:column="17">|=<pos:position pos:line="205" pos:column="19"/></operator> <name pos:line="205" pos:column="20">SSL_OP_NO_TLSv1_1<pos:position pos:line="205" pos:column="37"/></name></expr>;<pos:position pos:line="205" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="206" pos:column="5">ctx_options<pos:position pos:line="206" pos:column="16"/></name> <operator pos:line="206" pos:column="17">|=<pos:position pos:line="206" pos:column="19"/></operator> <name pos:line="206" pos:column="20">SSL_OP_NO_TLSv1_2<pos:position pos:line="206" pos:column="37"/></name></expr>;<pos:position pos:line="206" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif<pos:position pos:line="207" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="208" pos:column="5">break;<pos:position pos:line="208" pos:column="11"/></break>
<cpp:endif pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">endif<pos:position pos:line="209" pos:column="7"/></cpp:directive></cpp:endif>

  <default pos:line="211" pos:column="3">default:<pos:position pos:line="211" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="212" pos:column="5">failf<pos:position pos:line="212" pos:column="10"/></name><argument_list pos:line="212" pos:column="10">(<argument><expr><name pos:line="212" pos:column="11">data<pos:position pos:line="212" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="17">"Unsupported SSL protocol version"<pos:position pos:line="212" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="53"/></expr_stmt>
    <return pos:line="213" pos:column="5">return <expr><name pos:line="213" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="213" pos:column="35"/></name></expr>;<pos:position pos:line="213" pos:column="36"/></return>
  }<pos:position pos:line="214" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="216" pos:column="3">SSL_CTX_set_options<pos:position pos:line="216" pos:column="22"/></name><argument_list pos:line="216" pos:column="22">(<argument><expr><name><name pos:line="216" pos:column="23">connssl<pos:position pos:line="216" pos:column="30"/></name><operator pos:line="216" pos:column="30">-&gt;<pos:position pos:line="216" pos:column="35"/></operator><name pos:line="216" pos:column="32">ctx<pos:position pos:line="216" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="37">ctx_options<pos:position pos:line="216" pos:column="48"/></name></expr></argument>)<pos:position pos:line="216" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="50"/></expr_stmt>

<cpp:ifdef pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">ifdef<pos:position pos:line="218" pos:column="7"/></cpp:directive> <name pos:line="218" pos:column="8">USE_NGHTTP2<pos:position pos:line="218" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="219" pos:column="3">if<condition pos:line="219" pos:column="5">(<expr><name><name pos:line="219" pos:column="6">data<pos:position pos:line="219" pos:column="10"/></name><operator pos:line="219" pos:column="10">-&gt;<pos:position pos:line="219" pos:column="15"/></operator><name pos:line="219" pos:column="12">set<pos:position pos:line="219" pos:column="15"/></name><operator pos:line="219" pos:column="15">.<pos:position pos:line="219" pos:column="16"/></operator><name pos:line="219" pos:column="16">httpversion<pos:position pos:line="219" pos:column="27"/></name></name> <operator pos:line="219" pos:column="28">==<pos:position pos:line="219" pos:column="30"/></operator> <name pos:line="219" pos:column="31">CURL_HTTP_VERSION_2_0<pos:position pos:line="219" pos:column="52"/></name></expr>)<pos:position pos:line="219" pos:column="53"/></condition><then pos:line="219" pos:column="53"> <block pos:line="219" pos:column="54">{
<cpp:ifdef pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">ifdef<pos:position pos:line="220" pos:column="7"/></cpp:directive> <name pos:line="220" pos:column="8">HAS_NPN<pos:position pos:line="220" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="221" pos:column="5">if<condition pos:line="221" pos:column="7">(<expr><name><name pos:line="221" pos:column="8">data<pos:position pos:line="221" pos:column="12"/></name><operator pos:line="221" pos:column="12">-&gt;<pos:position pos:line="221" pos:column="17"/></operator><name pos:line="221" pos:column="14">set<pos:position pos:line="221" pos:column="17"/></name><operator pos:line="221" pos:column="17">.<pos:position pos:line="221" pos:column="18"/></operator><name pos:line="221" pos:column="18">ssl_enable_npn<pos:position pos:line="221" pos:column="32"/></name></name></expr>)<pos:position pos:line="221" pos:column="33"/></condition><then pos:line="221" pos:column="33"> <block pos:line="221" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="222" pos:column="7">SSL_CTX_set_next_proto_select_cb<pos:position pos:line="222" pos:column="39"/></name><argument_list pos:line="222" pos:column="39">(<argument><expr><name><name pos:line="222" pos:column="40">connssl<pos:position pos:line="222" pos:column="47"/></name><operator pos:line="222" pos:column="47">-&gt;<pos:position pos:line="222" pos:column="52"/></operator><name pos:line="222" pos:column="49">ctx<pos:position pos:line="222" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="54">select_next_proto_cb<pos:position pos:line="222" pos:column="74"/></name></expr></argument>,
                                       <argument><expr><name pos:line="223" pos:column="40">conn<pos:position pos:line="223" pos:column="44"/></name></expr></argument>)<pos:position pos:line="223" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="224" pos:column="6"/></block></then></if>
<cpp:endif pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">endif<pos:position pos:line="225" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="227" pos:column="1">#<cpp:directive pos:line="227" pos:column="2">ifdef<pos:position pos:line="227" pos:column="7"/></cpp:directive> <name pos:line="227" pos:column="8">HAS_ALPN<pos:position pos:line="227" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="228" pos:column="5">if<condition pos:line="228" pos:column="7">(<expr><name><name pos:line="228" pos:column="8">data<pos:position pos:line="228" pos:column="12"/></name><operator pos:line="228" pos:column="12">-&gt;<pos:position pos:line="228" pos:column="17"/></operator><name pos:line="228" pos:column="14">set<pos:position pos:line="228" pos:column="17"/></name><operator pos:line="228" pos:column="17">.<pos:position pos:line="228" pos:column="18"/></operator><name pos:line="228" pos:column="18">ssl_enable_alpn<pos:position pos:line="228" pos:column="33"/></name></name></expr>)<pos:position pos:line="228" pos:column="34"/></condition><then pos:line="228" pos:column="34"> <block pos:line="228" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="229" pos:column="7">protocols<pos:position pos:line="229" pos:column="16"/></name><index pos:line="229" pos:column="16">[<expr><literal type="number" pos:line="229" pos:column="17">0<pos:position pos:line="229" pos:column="18"/></literal></expr>]<pos:position pos:line="229" pos:column="19"/></index></name> <operator pos:line="229" pos:column="20">=<pos:position pos:line="229" pos:column="21"/></operator> <name pos:line="229" pos:column="22">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="229" pos:column="50"/></name></expr>;<pos:position pos:line="229" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="230" pos:column="7">memcpy<pos:position pos:line="230" pos:column="13"/></name><argument_list pos:line="230" pos:column="13">(<argument><expr><operator pos:line="230" pos:column="14">&amp;<pos:position pos:line="230" pos:column="19"/></operator><name><name pos:line="230" pos:column="15">protocols<pos:position pos:line="230" pos:column="24"/></name><index pos:line="230" pos:column="24">[<expr><literal type="number" pos:line="230" pos:column="25">1<pos:position pos:line="230" pos:column="26"/></literal></expr>]<pos:position pos:line="230" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="29">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="230" pos:column="53"/></name></expr></argument>,
          <argument><expr><name pos:line="231" pos:column="11">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="231" pos:column="39"/></name></expr></argument>)<pos:position pos:line="231" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="41"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="233" pos:column="7">protocols<pos:position pos:line="233" pos:column="16"/></name><index pos:line="233" pos:column="16">[<expr><name pos:line="233" pos:column="17">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="233" pos:column="45"/></name><operator pos:line="233" pos:column="45">+<pos:position pos:line="233" pos:column="46"/></operator><literal type="number" pos:line="233" pos:column="46">1<pos:position pos:line="233" pos:column="47"/></literal></expr>]<pos:position pos:line="233" pos:column="48"/></index></name> <operator pos:line="233" pos:column="49">=<pos:position pos:line="233" pos:column="50"/></operator> <name pos:line="233" pos:column="51">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="233" pos:column="71"/></name></expr>;<pos:position pos:line="233" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="234" pos:column="7">memcpy<pos:position pos:line="234" pos:column="13"/></name><argument_list pos:line="234" pos:column="13">(<argument><expr><operator pos:line="234" pos:column="14">&amp;<pos:position pos:line="234" pos:column="19"/></operator><name><name pos:line="234" pos:column="15">protocols<pos:position pos:line="234" pos:column="24"/></name><index pos:line="234" pos:column="24">[<expr><name pos:line="234" pos:column="25">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="234" pos:column="53"/></name><operator pos:line="234" pos:column="53">+<pos:position pos:line="234" pos:column="54"/></operator><literal type="number" pos:line="234" pos:column="54">2<pos:position pos:line="234" pos:column="55"/></literal></expr>]<pos:position pos:line="234" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="58">ALPN_HTTP_1_1<pos:position pos:line="234" pos:column="71"/></name></expr></argument>,
          <argument><expr><name pos:line="235" pos:column="11">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="235" pos:column="31"/></name></expr></argument>)<pos:position pos:line="235" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="33"/></expr_stmt>

      <comment type="block" pos:line="237" pos:column="7">/* expects length prefixed preference ordered list of protocols in wire
       * format
       */</comment>
      <expr_stmt><expr><call><name pos:line="240" pos:column="7">SSL_CTX_set_alpn_protos<pos:position pos:line="240" pos:column="30"/></name><argument_list pos:line="240" pos:column="30">(<argument><expr><name><name pos:line="240" pos:column="31">connssl<pos:position pos:line="240" pos:column="38"/></name><operator pos:line="240" pos:column="38">-&gt;<pos:position pos:line="240" pos:column="43"/></operator><name pos:line="240" pos:column="40">ctx<pos:position pos:line="240" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="45">protocols<pos:position pos:line="240" pos:column="54"/></name></expr></argument>,
          <argument><expr><name pos:line="241" pos:column="11">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="241" pos:column="39"/></name> <operator pos:line="241" pos:column="40">+<pos:position pos:line="241" pos:column="41"/></operator> <name pos:line="241" pos:column="42">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="241" pos:column="62"/></name> <operator pos:line="241" pos:column="63">+<pos:position pos:line="241" pos:column="64"/></operator> <literal type="number" pos:line="241" pos:column="65">2<pos:position pos:line="241" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="68"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="243" pos:column="7">infof<pos:position pos:line="243" pos:column="12"/></name><argument_list pos:line="243" pos:column="12">(<argument><expr><name pos:line="243" pos:column="13">data<pos:position pos:line="243" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="19">"ALPN, offering %s, %s\n"<pos:position pos:line="243" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="46">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="243" pos:column="70"/></name></expr></argument>,
            <argument><expr><name pos:line="244" pos:column="13">ALPN_HTTP_1_1<pos:position pos:line="244" pos:column="26"/></name></expr></argument>)<pos:position pos:line="244" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="245" pos:column="7">connssl<pos:position pos:line="245" pos:column="14"/></name><operator pos:line="245" pos:column="14">-&gt;<pos:position pos:line="245" pos:column="19"/></operator><name pos:line="245" pos:column="16">asked_for_h2<pos:position pos:line="245" pos:column="28"/></name></name> <operator pos:line="245" pos:column="29">=<pos:position pos:line="245" pos:column="30"/></operator> <name pos:line="245" pos:column="31">TRUE<pos:position pos:line="245" pos:column="35"/></name></expr>;<pos:position pos:line="245" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>
<cpp:endif pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">endif<pos:position pos:line="247" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="248" pos:column="4"/></block></then></if>
<cpp:endif pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">endif<pos:position pos:line="249" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="251" pos:column="3">if<condition pos:line="251" pos:column="5">(<expr><name><name pos:line="251" pos:column="6">data<pos:position pos:line="251" pos:column="10"/></name><operator pos:line="251" pos:column="10">-&gt;<pos:position pos:line="251" pos:column="15"/></operator><name pos:line="251" pos:column="12">set<pos:position pos:line="251" pos:column="15"/></name><operator pos:line="251" pos:column="15">.<pos:position pos:line="251" pos:column="16"/></operator><name pos:line="251" pos:column="16">str<pos:position pos:line="251" pos:column="19"/></name><index pos:line="251" pos:column="19">[<expr><name pos:line="251" pos:column="20">STRING_CERT<pos:position pos:line="251" pos:column="31"/></name></expr>]<pos:position pos:line="251" pos:column="32"/></index></name> <operator pos:line="251" pos:column="33">||<pos:position pos:line="251" pos:column="35"/></operator> <name><name pos:line="251" pos:column="36">data<pos:position pos:line="251" pos:column="40"/></name><operator pos:line="251" pos:column="40">-&gt;<pos:position pos:line="251" pos:column="45"/></operator><name pos:line="251" pos:column="42">set<pos:position pos:line="251" pos:column="45"/></name><operator pos:line="251" pos:column="45">.<pos:position pos:line="251" pos:column="46"/></operator><name pos:line="251" pos:column="46">str<pos:position pos:line="251" pos:column="49"/></name><index pos:line="251" pos:column="49">[<expr><name pos:line="251" pos:column="50">STRING_CERT_TYPE<pos:position pos:line="251" pos:column="66"/></name></expr>]<pos:position pos:line="251" pos:column="67"/></index></name></expr>)<pos:position pos:line="251" pos:column="68"/></condition><then pos:line="251" pos:column="68"> <block pos:line="251" pos:column="69">{
    <if pos:line="252" pos:column="5">if<condition pos:line="252" pos:column="7">(<expr><operator pos:line="252" pos:column="8">!<pos:position pos:line="252" pos:column="9"/></operator><call><name pos:line="252" pos:column="9">cert_stuff<pos:position pos:line="252" pos:column="19"/></name><argument_list pos:line="252" pos:column="19">(<argument><expr><name pos:line="252" pos:column="20">conn<pos:position pos:line="252" pos:column="24"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="253" pos:column="20">connssl<pos:position pos:line="253" pos:column="27"/></name><operator pos:line="253" pos:column="27">-&gt;<pos:position pos:line="253" pos:column="32"/></operator><name pos:line="253" pos:column="29">ctx<pos:position pos:line="253" pos:column="32"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="254" pos:column="20">data<pos:position pos:line="254" pos:column="24"/></name><operator pos:line="254" pos:column="24">-&gt;<pos:position pos:line="254" pos:column="29"/></operator><name pos:line="254" pos:column="26">set<pos:position pos:line="254" pos:column="29"/></name><operator pos:line="254" pos:column="29">.<pos:position pos:line="254" pos:column="30"/></operator><name pos:line="254" pos:column="30">str<pos:position pos:line="254" pos:column="33"/></name><index pos:line="254" pos:column="33">[<expr><name pos:line="254" pos:column="34">STRING_CERT<pos:position pos:line="254" pos:column="45"/></name></expr>]<pos:position pos:line="254" pos:column="46"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="255" pos:column="20">data<pos:position pos:line="255" pos:column="24"/></name><operator pos:line="255" pos:column="24">-&gt;<pos:position pos:line="255" pos:column="29"/></operator><name pos:line="255" pos:column="26">set<pos:position pos:line="255" pos:column="29"/></name><operator pos:line="255" pos:column="29">.<pos:position pos:line="255" pos:column="30"/></operator><name pos:line="255" pos:column="30">str<pos:position pos:line="255" pos:column="33"/></name><index pos:line="255" pos:column="33">[<expr><name pos:line="255" pos:column="34">STRING_CERT_TYPE<pos:position pos:line="255" pos:column="50"/></name></expr>]<pos:position pos:line="255" pos:column="51"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="256" pos:column="20">data<pos:position pos:line="256" pos:column="24"/></name><operator pos:line="256" pos:column="24">-&gt;<pos:position pos:line="256" pos:column="29"/></operator><name pos:line="256" pos:column="26">set<pos:position pos:line="256" pos:column="29"/></name><operator pos:line="256" pos:column="29">.<pos:position pos:line="256" pos:column="30"/></operator><name pos:line="256" pos:column="30">str<pos:position pos:line="256" pos:column="33"/></name><index pos:line="256" pos:column="33">[<expr><name pos:line="256" pos:column="34">STRING_KEY<pos:position pos:line="256" pos:column="44"/></name></expr>]<pos:position pos:line="256" pos:column="45"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="257" pos:column="20">data<pos:position pos:line="257" pos:column="24"/></name><operator pos:line="257" pos:column="24">-&gt;<pos:position pos:line="257" pos:column="29"/></operator><name pos:line="257" pos:column="26">set<pos:position pos:line="257" pos:column="29"/></name><operator pos:line="257" pos:column="29">.<pos:position pos:line="257" pos:column="30"/></operator><name pos:line="257" pos:column="30">str<pos:position pos:line="257" pos:column="33"/></name><index pos:line="257" pos:column="33">[<expr><name pos:line="257" pos:column="34">STRING_KEY_TYPE<pos:position pos:line="257" pos:column="49"/></name></expr>]<pos:position pos:line="257" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="257" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="257" pos:column="52"/></condition><then pos:line="257" pos:column="52"> <block pos:line="257" pos:column="53">{
      <comment type="block" pos:line="258" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <return pos:line="259" pos:column="7">return <expr><name pos:line="259" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="259" pos:column="35"/></name></expr>;<pos:position pos:line="259" pos:column="36"/></return>
    }<pos:position pos:line="260" pos:column="6"/></block></then></if>
  }<pos:position pos:line="261" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="263" pos:column="3">ciphers<pos:position pos:line="263" pos:column="10"/></name> <operator pos:line="263" pos:column="11">=<pos:position pos:line="263" pos:column="12"/></operator> <name><name pos:line="263" pos:column="13">data<pos:position pos:line="263" pos:column="17"/></name><operator pos:line="263" pos:column="17">-&gt;<pos:position pos:line="263" pos:column="22"/></operator><name pos:line="263" pos:column="19">set<pos:position pos:line="263" pos:column="22"/></name><operator pos:line="263" pos:column="22">.<pos:position pos:line="263" pos:column="23"/></operator><name pos:line="263" pos:column="23">str<pos:position pos:line="263" pos:column="26"/></name><index pos:line="263" pos:column="26">[<expr><name pos:line="263" pos:column="27">STRING_SSL_CIPHER_LIST<pos:position pos:line="263" pos:column="49"/></name></expr>]<pos:position pos:line="263" pos:column="50"/></index></name></expr>;<pos:position pos:line="263" pos:column="51"/></expr_stmt>
  <if pos:line="264" pos:column="3">if<condition pos:line="264" pos:column="5">(<expr><operator pos:line="264" pos:column="6">!<pos:position pos:line="264" pos:column="7"/></operator><name pos:line="264" pos:column="7">ciphers<pos:position pos:line="264" pos:column="14"/></name></expr>)<pos:position pos:line="264" pos:column="15"/></condition><then pos:line="264" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="265" pos:column="5">ciphers<pos:position pos:line="265" pos:column="12"/></name> <operator pos:line="265" pos:column="13">=<pos:position pos:line="265" pos:column="14"/></operator> <operator pos:line="265" pos:column="15">(<pos:position pos:line="265" pos:column="16"/></operator><name pos:line="265" pos:column="16">char<pos:position pos:line="265" pos:column="20"/></name> <operator pos:line="265" pos:column="21">*<pos:position pos:line="265" pos:column="22"/></operator><operator pos:line="265" pos:column="22">)<pos:position pos:line="265" pos:column="23"/></operator><name pos:line="265" pos:column="23">DEFAULT_CIPHER_SELECTION<pos:position pos:line="265" pos:column="47"/></name></expr>;<pos:position pos:line="265" pos:column="48"/></expr_stmt></block></then></if>
  <if pos:line="266" pos:column="3">if<condition pos:line="266" pos:column="5">(<expr><operator pos:line="266" pos:column="6">!<pos:position pos:line="266" pos:column="7"/></operator><call><name pos:line="266" pos:column="7">SSL_CTX_set_cipher_list<pos:position pos:line="266" pos:column="30"/></name><argument_list pos:line="266" pos:column="30">(<argument><expr><name><name pos:line="266" pos:column="31">connssl<pos:position pos:line="266" pos:column="38"/></name><operator pos:line="266" pos:column="38">-&gt;<pos:position pos:line="266" pos:column="43"/></operator><name pos:line="266" pos:column="40">ctx<pos:position pos:line="266" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="45">ciphers<pos:position pos:line="266" pos:column="52"/></name></expr></argument>)<pos:position pos:line="266" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="266" pos:column="54"/></condition><then pos:line="266" pos:column="54"> <block pos:line="266" pos:column="55">{
    <expr_stmt><expr><call><name pos:line="267" pos:column="5">failf<pos:position pos:line="267" pos:column="10"/></name><argument_list pos:line="267" pos:column="10">(<argument><expr><name pos:line="267" pos:column="11">data<pos:position pos:line="267" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="17">"failed setting cipher list: %s"<pos:position pos:line="267" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="51">ciphers<pos:position pos:line="267" pos:column="58"/></name></expr></argument>)<pos:position pos:line="267" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="60"/></expr_stmt>
    <return pos:line="268" pos:column="5">return <expr><name pos:line="268" pos:column="12">CURLE_SSL_CIPHER<pos:position pos:line="268" pos:column="28"/></name></expr>;<pos:position pos:line="268" pos:column="29"/></return>
  }<pos:position pos:line="269" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">ifdef<pos:position pos:line="271" pos:column="7"/></cpp:directive> <name pos:line="271" pos:column="8">USE_TLS_SRP<pos:position pos:line="271" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="272" pos:column="3">if<condition pos:line="272" pos:column="5">(<expr><name><name pos:line="272" pos:column="6">data<pos:position pos:line="272" pos:column="10"/></name><operator pos:line="272" pos:column="10">-&gt;<pos:position pos:line="272" pos:column="15"/></operator><name pos:line="272" pos:column="12">set<pos:position pos:line="272" pos:column="15"/></name><operator pos:line="272" pos:column="15">.<pos:position pos:line="272" pos:column="16"/></operator><name pos:line="272" pos:column="16">ssl<pos:position pos:line="272" pos:column="19"/></name><operator pos:line="272" pos:column="19">.<pos:position pos:line="272" pos:column="20"/></operator><name pos:line="272" pos:column="20">authtype<pos:position pos:line="272" pos:column="28"/></name></name> <operator pos:line="272" pos:column="29">==<pos:position pos:line="272" pos:column="31"/></operator> <name pos:line="272" pos:column="32">CURL_TLSAUTH_SRP<pos:position pos:line="272" pos:column="48"/></name></expr>)<pos:position pos:line="272" pos:column="49"/></condition><then pos:line="272" pos:column="49"> <block pos:line="272" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="273" pos:column="5">infof<pos:position pos:line="273" pos:column="10"/></name><argument_list pos:line="273" pos:column="10">(<argument><expr><name pos:line="273" pos:column="11">data<pos:position pos:line="273" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="17">"Using TLS-SRP username: %s\n"<pos:position pos:line="273" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="49">data<pos:position pos:line="273" pos:column="53"/></name><operator pos:line="273" pos:column="53">-&gt;<pos:position pos:line="273" pos:column="58"/></operator><name pos:line="273" pos:column="55">set<pos:position pos:line="273" pos:column="58"/></name><operator pos:line="273" pos:column="58">.<pos:position pos:line="273" pos:column="59"/></operator><name pos:line="273" pos:column="59">ssl<pos:position pos:line="273" pos:column="62"/></name><operator pos:line="273" pos:column="62">.<pos:position pos:line="273" pos:column="63"/></operator><name pos:line="273" pos:column="63">username<pos:position pos:line="273" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="273" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="73"/></expr_stmt>

    <if pos:line="275" pos:column="5">if<condition pos:line="275" pos:column="7">(<expr><operator pos:line="275" pos:column="8">!<pos:position pos:line="275" pos:column="9"/></operator><call><name pos:line="275" pos:column="9">SSL_CTX_set_srp_username<pos:position pos:line="275" pos:column="33"/></name><argument_list pos:line="275" pos:column="33">(<argument><expr><name><name pos:line="275" pos:column="34">connssl<pos:position pos:line="275" pos:column="41"/></name><operator pos:line="275" pos:column="41">-&gt;<pos:position pos:line="275" pos:column="46"/></operator><name pos:line="275" pos:column="43">ctx<pos:position pos:line="275" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="275" pos:column="48">data<pos:position pos:line="275" pos:column="52"/></name><operator pos:line="275" pos:column="52">-&gt;<pos:position pos:line="275" pos:column="57"/></operator><name pos:line="275" pos:column="54">set<pos:position pos:line="275" pos:column="57"/></name><operator pos:line="275" pos:column="57">.<pos:position pos:line="275" pos:column="58"/></operator><name pos:line="275" pos:column="58">ssl<pos:position pos:line="275" pos:column="61"/></name><operator pos:line="275" pos:column="61">.<pos:position pos:line="275" pos:column="62"/></operator><name pos:line="275" pos:column="62">username<pos:position pos:line="275" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="275" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="275" pos:column="72"/></condition><then pos:line="275" pos:column="72"> <block pos:line="275" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="276" pos:column="7">failf<pos:position pos:line="276" pos:column="12"/></name><argument_list pos:line="276" pos:column="12">(<argument><expr><name pos:line="276" pos:column="13">data<pos:position pos:line="276" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="19">"Unable to set SRP user name"<pos:position pos:line="276" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="276" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="50"/></expr_stmt>
      <return pos:line="277" pos:column="7">return <expr><name pos:line="277" pos:column="14">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="277" pos:column="41"/></name></expr>;<pos:position pos:line="277" pos:column="42"/></return>
    }<pos:position pos:line="278" pos:column="6"/></block></then></if>
    <if pos:line="279" pos:column="5">if<condition pos:line="279" pos:column="7">(<expr><operator pos:line="279" pos:column="8">!<pos:position pos:line="279" pos:column="9"/></operator><call><name pos:line="279" pos:column="9">SSL_CTX_set_srp_password<pos:position pos:line="279" pos:column="33"/></name><argument_list pos:line="279" pos:column="33">(<argument><expr><name><name pos:line="279" pos:column="34">connssl<pos:position pos:line="279" pos:column="41"/></name><operator pos:line="279" pos:column="41">-&gt;<pos:position pos:line="279" pos:column="46"/></operator><name pos:line="279" pos:column="43">ctx<pos:position pos:line="279" pos:column="46"/></name></name></expr></argument>,<argument><expr><name><name pos:line="279" pos:column="47">data<pos:position pos:line="279" pos:column="51"/></name><operator pos:line="279" pos:column="51">-&gt;<pos:position pos:line="279" pos:column="56"/></operator><name pos:line="279" pos:column="53">set<pos:position pos:line="279" pos:column="56"/></name><operator pos:line="279" pos:column="56">.<pos:position pos:line="279" pos:column="57"/></operator><name pos:line="279" pos:column="57">ssl<pos:position pos:line="279" pos:column="60"/></name><operator pos:line="279" pos:column="60">.<pos:position pos:line="279" pos:column="61"/></operator><name pos:line="279" pos:column="61">password<pos:position pos:line="279" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="279" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="279" pos:column="71"/></condition><then pos:line="279" pos:column="71"> <block pos:line="279" pos:column="72">{
      <expr_stmt><expr><call><name pos:line="280" pos:column="7">failf<pos:position pos:line="280" pos:column="12"/></name><argument_list pos:line="280" pos:column="12">(<argument><expr><name pos:line="280" pos:column="13">data<pos:position pos:line="280" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="19">"failed setting SRP password"<pos:position pos:line="280" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="280" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="50"/></expr_stmt>
      <return pos:line="281" pos:column="7">return <expr><name pos:line="281" pos:column="14">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="281" pos:column="41"/></name></expr>;<pos:position pos:line="281" pos:column="42"/></return>
    }<pos:position pos:line="282" pos:column="6"/></block></then></if>
    <if pos:line="283" pos:column="5">if<condition pos:line="283" pos:column="7">(<expr><operator pos:line="283" pos:column="8">!<pos:position pos:line="283" pos:column="9"/></operator><name><name pos:line="283" pos:column="9">data<pos:position pos:line="283" pos:column="13"/></name><operator pos:line="283" pos:column="13">-&gt;<pos:position pos:line="283" pos:column="18"/></operator><name pos:line="283" pos:column="15">set<pos:position pos:line="283" pos:column="18"/></name><operator pos:line="283" pos:column="18">.<pos:position pos:line="283" pos:column="19"/></operator><name pos:line="283" pos:column="19">str<pos:position pos:line="283" pos:column="22"/></name><index pos:line="283" pos:column="22">[<expr><name pos:line="283" pos:column="23">STRING_SSL_CIPHER_LIST<pos:position pos:line="283" pos:column="45"/></name></expr>]<pos:position pos:line="283" pos:column="46"/></index></name></expr>)<pos:position pos:line="283" pos:column="47"/></condition><then pos:line="283" pos:column="47"> <block pos:line="283" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="284" pos:column="7">infof<pos:position pos:line="284" pos:column="12"/></name><argument_list pos:line="284" pos:column="12">(<argument><expr><name pos:line="284" pos:column="13">data<pos:position pos:line="284" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="19">"Setting cipher list SRP\n"<pos:position pos:line="284" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="284" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="48"/></expr_stmt>

      <if pos:line="286" pos:column="7">if<condition pos:line="286" pos:column="9">(<expr><operator pos:line="286" pos:column="10">!<pos:position pos:line="286" pos:column="11"/></operator><call><name pos:line="286" pos:column="11">SSL_CTX_set_cipher_list<pos:position pos:line="286" pos:column="34"/></name><argument_list pos:line="286" pos:column="34">(<argument><expr><name><name pos:line="286" pos:column="35">connssl<pos:position pos:line="286" pos:column="42"/></name><operator pos:line="286" pos:column="42">-&gt;<pos:position pos:line="286" pos:column="47"/></operator><name pos:line="286" pos:column="44">ctx<pos:position pos:line="286" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="49">"SRP"<pos:position pos:line="286" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="286" pos:column="56"/></condition><then pos:line="286" pos:column="56"> <block pos:line="286" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="287" pos:column="9">failf<pos:position pos:line="287" pos:column="14"/></name><argument_list pos:line="287" pos:column="14">(<argument><expr><name pos:line="287" pos:column="15">data<pos:position pos:line="287" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="287" pos:column="21">"failed setting SRP cipher list"<pos:position pos:line="287" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="55"/></expr_stmt>
        <return pos:line="288" pos:column="9">return <expr><name pos:line="288" pos:column="16">CURLE_SSL_CIPHER<pos:position pos:line="288" pos:column="32"/></name></expr>;<pos:position pos:line="288" pos:column="33"/></return>
      }<pos:position pos:line="289" pos:column="8"/></block></then></if>
    }<pos:position pos:line="290" pos:column="6"/></block></then></if>
  }<pos:position pos:line="291" pos:column="4"/></block></then></if>
<cpp:endif pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">endif<pos:position pos:line="292" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="293" pos:column="3">if<condition pos:line="293" pos:column="5">(<expr><name><name pos:line="293" pos:column="6">data<pos:position pos:line="293" pos:column="10"/></name><operator pos:line="293" pos:column="10">-&gt;<pos:position pos:line="293" pos:column="15"/></operator><name pos:line="293" pos:column="12">set<pos:position pos:line="293" pos:column="15"/></name><operator pos:line="293" pos:column="15">.<pos:position pos:line="293" pos:column="16"/></operator><name pos:line="293" pos:column="16">str<pos:position pos:line="293" pos:column="19"/></name><index pos:line="293" pos:column="19">[<expr><name pos:line="293" pos:column="20">STRING_SSL_CAFILE<pos:position pos:line="293" pos:column="37"/></name></expr>]<pos:position pos:line="293" pos:column="38"/></index></name> <operator pos:line="293" pos:column="39">||<pos:position pos:line="293" pos:column="41"/></operator> <name><name pos:line="293" pos:column="42">data<pos:position pos:line="293" pos:column="46"/></name><operator pos:line="293" pos:column="46">-&gt;<pos:position pos:line="293" pos:column="51"/></operator><name pos:line="293" pos:column="48">set<pos:position pos:line="293" pos:column="51"/></name><operator pos:line="293" pos:column="51">.<pos:position pos:line="293" pos:column="52"/></operator><name pos:line="293" pos:column="52">str<pos:position pos:line="293" pos:column="55"/></name><index pos:line="293" pos:column="55">[<expr><name pos:line="293" pos:column="56">STRING_SSL_CAPATH<pos:position pos:line="293" pos:column="73"/></name></expr>]<pos:position pos:line="293" pos:column="74"/></index></name></expr>)<pos:position pos:line="293" pos:column="75"/></condition><then pos:line="293" pos:column="75"> <block pos:line="293" pos:column="76">{
    <comment type="block" pos:line="294" pos:column="5">/* tell SSL where to find CA certificates that are used to verify
       the servers certificate. */</comment>
    <if pos:line="296" pos:column="5">if<condition pos:line="296" pos:column="7">(<expr><operator pos:line="296" pos:column="8">!<pos:position pos:line="296" pos:column="9"/></operator><call><name pos:line="296" pos:column="9">SSL_CTX_load_verify_locations<pos:position pos:line="296" pos:column="38"/></name><argument_list pos:line="296" pos:column="38">(<argument><expr><name><name pos:line="296" pos:column="39">connssl<pos:position pos:line="296" pos:column="46"/></name><operator pos:line="296" pos:column="46">-&gt;<pos:position pos:line="296" pos:column="51"/></operator><name pos:line="296" pos:column="48">ctx<pos:position pos:line="296" pos:column="51"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="297" pos:column="40">data<pos:position pos:line="297" pos:column="44"/></name><operator pos:line="297" pos:column="44">-&gt;<pos:position pos:line="297" pos:column="49"/></operator><name pos:line="297" pos:column="46">set<pos:position pos:line="297" pos:column="49"/></name><operator pos:line="297" pos:column="49">.<pos:position pos:line="297" pos:column="50"/></operator><name pos:line="297" pos:column="50">str<pos:position pos:line="297" pos:column="53"/></name><index pos:line="297" pos:column="53">[<expr><name pos:line="297" pos:column="54">STRING_SSL_CAFILE<pos:position pos:line="297" pos:column="71"/></name></expr>]<pos:position pos:line="297" pos:column="72"/></index></name></expr></argument>,
                                       <argument><expr><name><name pos:line="298" pos:column="40">data<pos:position pos:line="298" pos:column="44"/></name><operator pos:line="298" pos:column="44">-&gt;<pos:position pos:line="298" pos:column="49"/></operator><name pos:line="298" pos:column="46">set<pos:position pos:line="298" pos:column="49"/></name><operator pos:line="298" pos:column="49">.<pos:position pos:line="298" pos:column="50"/></operator><name pos:line="298" pos:column="50">str<pos:position pos:line="298" pos:column="53"/></name><index pos:line="298" pos:column="53">[<expr><name pos:line="298" pos:column="54">STRING_SSL_CAPATH<pos:position pos:line="298" pos:column="71"/></name></expr>]<pos:position pos:line="298" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="298" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="298" pos:column="74"/></condition><then pos:line="298" pos:column="74"> <block pos:line="298" pos:column="75">{
      <if pos:line="299" pos:column="7">if<condition pos:line="299" pos:column="9">(<expr><name><name pos:line="299" pos:column="10">data<pos:position pos:line="299" pos:column="14"/></name><operator pos:line="299" pos:column="14">-&gt;<pos:position pos:line="299" pos:column="19"/></operator><name pos:line="299" pos:column="16">set<pos:position pos:line="299" pos:column="19"/></name><operator pos:line="299" pos:column="19">.<pos:position pos:line="299" pos:column="20"/></operator><name pos:line="299" pos:column="20">ssl<pos:position pos:line="299" pos:column="23"/></name><operator pos:line="299" pos:column="23">.<pos:position pos:line="299" pos:column="24"/></operator><name pos:line="299" pos:column="24">verifypeer<pos:position pos:line="299" pos:column="34"/></name></name></expr>)<pos:position pos:line="299" pos:column="35"/></condition><then pos:line="299" pos:column="35"> <block pos:line="299" pos:column="36">{
        <comment type="block" pos:line="300" pos:column="9">/* Fail if we insist on successfully verifying the server. */</comment>
        <expr_stmt><expr><call><name pos:line="301" pos:column="9">failf<pos:position pos:line="301" pos:column="14"/></name><argument_list pos:line="301" pos:column="14">(<argument><expr><name pos:line="301" pos:column="15">data<pos:position pos:line="301" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="301" pos:column="20">"error setting certificate verify locations:\n"<pos:position pos:line="301" pos:column="67"/></literal>
              <literal type="string" pos:line="302" pos:column="15">"  CAfile: %s\n  CApath: %s"<pos:position pos:line="302" pos:column="43"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="303" pos:column="15">data<pos:position pos:line="303" pos:column="19"/></name><operator pos:line="303" pos:column="19">-&gt;<pos:position pos:line="303" pos:column="24"/></operator><name pos:line="303" pos:column="21">set<pos:position pos:line="303" pos:column="24"/></name><operator pos:line="303" pos:column="24">.<pos:position pos:line="303" pos:column="25"/></operator><name pos:line="303" pos:column="25">str<pos:position pos:line="303" pos:column="28"/></name><index pos:line="303" pos:column="28">[<expr><name pos:line="303" pos:column="29">STRING_SSL_CAFILE<pos:position pos:line="303" pos:column="46"/></name></expr>]<pos:position pos:line="303" pos:column="47"/></index></name></expr>?<pos:position pos:line="303" pos:column="48"/></condition><then pos:line="303" pos:column="48">
              <expr><name><name pos:line="304" pos:column="15">data<pos:position pos:line="304" pos:column="19"/></name><operator pos:line="304" pos:column="19">-&gt;<pos:position pos:line="304" pos:column="24"/></operator><name pos:line="304" pos:column="21">set<pos:position pos:line="304" pos:column="24"/></name><operator pos:line="304" pos:column="24">.<pos:position pos:line="304" pos:column="25"/></operator><name pos:line="304" pos:column="25">str<pos:position pos:line="304" pos:column="28"/></name><index pos:line="304" pos:column="28">[<expr><name pos:line="304" pos:column="29">STRING_SSL_CAFILE<pos:position pos:line="304" pos:column="46"/></name></expr>]<pos:position pos:line="304" pos:column="47"/></index></name></expr></then><else pos:line="304" pos:column="47">: <expr><literal type="string" pos:line="304" pos:column="49">"none"<pos:position pos:line="304" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="305" pos:column="15">data<pos:position pos:line="305" pos:column="19"/></name><operator pos:line="305" pos:column="19">-&gt;<pos:position pos:line="305" pos:column="24"/></operator><name pos:line="305" pos:column="21">set<pos:position pos:line="305" pos:column="24"/></name><operator pos:line="305" pos:column="24">.<pos:position pos:line="305" pos:column="25"/></operator><name pos:line="305" pos:column="25">str<pos:position pos:line="305" pos:column="28"/></name><index pos:line="305" pos:column="28">[<expr><name pos:line="305" pos:column="29">STRING_SSL_CAPATH<pos:position pos:line="305" pos:column="46"/></name></expr>]<pos:position pos:line="305" pos:column="47"/></index></name></expr>?<pos:position pos:line="305" pos:column="48"/></condition><then pos:line="305" pos:column="48">
              <expr><name><name pos:line="306" pos:column="15">data<pos:position pos:line="306" pos:column="19"/></name><operator pos:line="306" pos:column="19">-&gt;<pos:position pos:line="306" pos:column="24"/></operator><name pos:line="306" pos:column="21">set<pos:position pos:line="306" pos:column="24"/></name><operator pos:line="306" pos:column="24">.<pos:position pos:line="306" pos:column="25"/></operator><name pos:line="306" pos:column="25">str<pos:position pos:line="306" pos:column="28"/></name><index pos:line="306" pos:column="28">[<expr><name pos:line="306" pos:column="29">STRING_SSL_CAPATH<pos:position pos:line="306" pos:column="46"/></name></expr>]<pos:position pos:line="306" pos:column="47"/></index></name></expr> <pos:position pos:line="306" pos:column="48"/></then><else pos:line="306" pos:column="48">: <expr><literal type="string" pos:line="306" pos:column="50">"none"<pos:position pos:line="306" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="306" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="58"/></expr_stmt>
        <return pos:line="307" pos:column="9">return <expr><name pos:line="307" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="307" pos:column="40"/></name></expr>;<pos:position pos:line="307" pos:column="41"/></return>
      }<pos:position pos:line="308" pos:column="8"/></block></then>
      <else pos:line="309" pos:column="7">else <block pos:line="309" pos:column="12">{
        <comment type="block" pos:line="310" pos:column="9">/* Just continue with a warning if no strict  certificate verification
           is required. */</comment>
        <expr_stmt><expr><call><name pos:line="312" pos:column="9">infof<pos:position pos:line="312" pos:column="14"/></name><argument_list pos:line="312" pos:column="14">(<argument><expr><name pos:line="312" pos:column="15">data<pos:position pos:line="312" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="21">"error setting certificate verify locations,"<pos:position pos:line="312" pos:column="66"/></literal>
              <literal type="string" pos:line="313" pos:column="15">" continuing anyway:\n"<pos:position pos:line="313" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="314" pos:column="8"/></block></else></if>
    }<pos:position pos:line="315" pos:column="6"/></block></then>
    <else pos:line="316" pos:column="5">else <block pos:line="316" pos:column="10">{
      <comment type="block" pos:line="317" pos:column="7">/* Everything is fine. */</comment>
      <expr_stmt><expr><call><name pos:line="318" pos:column="7">infof<pos:position pos:line="318" pos:column="12"/></name><argument_list pos:line="318" pos:column="12">(<argument><expr><name pos:line="318" pos:column="13">data<pos:position pos:line="318" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="318" pos:column="19">"successfully set certificate verify locations:\n"<pos:position pos:line="318" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="319" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="320" pos:column="5">infof<pos:position pos:line="320" pos:column="10"/></name><argument_list pos:line="320" pos:column="10">(<argument><expr><name pos:line="320" pos:column="11">data<pos:position pos:line="320" pos:column="15"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="321" pos:column="11">"  CAfile: %s\n"<pos:position pos:line="321" pos:column="27"/></literal>
          <literal type="string" pos:line="322" pos:column="11">"  CApath: %s\n"<pos:position pos:line="322" pos:column="27"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="323" pos:column="11">data<pos:position pos:line="323" pos:column="15"/></name><operator pos:line="323" pos:column="15">-&gt;<pos:position pos:line="323" pos:column="20"/></operator><name pos:line="323" pos:column="17">set<pos:position pos:line="323" pos:column="20"/></name><operator pos:line="323" pos:column="20">.<pos:position pos:line="323" pos:column="21"/></operator><name pos:line="323" pos:column="21">str<pos:position pos:line="323" pos:column="24"/></name><index pos:line="323" pos:column="24">[<expr><name pos:line="323" pos:column="25">STRING_SSL_CAFILE<pos:position pos:line="323" pos:column="42"/></name></expr>]<pos:position pos:line="323" pos:column="43"/></index></name></expr> ?<pos:position pos:line="323" pos:column="45"/></condition><then pos:line="323" pos:column="45"> <expr><name><name pos:line="323" pos:column="46">data<pos:position pos:line="323" pos:column="50"/></name><operator pos:line="323" pos:column="50">-&gt;<pos:position pos:line="323" pos:column="55"/></operator><name pos:line="323" pos:column="52">set<pos:position pos:line="323" pos:column="55"/></name><operator pos:line="323" pos:column="55">.<pos:position pos:line="323" pos:column="56"/></operator><name pos:line="323" pos:column="56">str<pos:position pos:line="323" pos:column="59"/></name><index pos:line="323" pos:column="59">[<expr><name pos:line="323" pos:column="60">STRING_SSL_CAFILE<pos:position pos:line="323" pos:column="77"/></name></expr>]<pos:position pos:line="323" pos:column="78"/></index></name></expr></then><else pos:line="323" pos:column="78">:
          <expr><literal type="string" pos:line="324" pos:column="11">"none"<pos:position pos:line="324" pos:column="17"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="325" pos:column="11">data<pos:position pos:line="325" pos:column="15"/></name><operator pos:line="325" pos:column="15">-&gt;<pos:position pos:line="325" pos:column="20"/></operator><name pos:line="325" pos:column="17">set<pos:position pos:line="325" pos:column="20"/></name><operator pos:line="325" pos:column="20">.<pos:position pos:line="325" pos:column="21"/></operator><name pos:line="325" pos:column="21">str<pos:position pos:line="325" pos:column="24"/></name><index pos:line="325" pos:column="24">[<expr><name pos:line="325" pos:column="25">STRING_SSL_CAPATH<pos:position pos:line="325" pos:column="42"/></name></expr>]<pos:position pos:line="325" pos:column="43"/></index></name></expr> ?<pos:position pos:line="325" pos:column="45"/></condition><then pos:line="325" pos:column="45"> <expr><name><name pos:line="325" pos:column="46">data<pos:position pos:line="325" pos:column="50"/></name><operator pos:line="325" pos:column="50">-&gt;<pos:position pos:line="325" pos:column="55"/></operator><name pos:line="325" pos:column="52">set<pos:position pos:line="325" pos:column="55"/></name><operator pos:line="325" pos:column="55">.<pos:position pos:line="325" pos:column="56"/></operator><name pos:line="325" pos:column="56">str<pos:position pos:line="325" pos:column="59"/></name><index pos:line="325" pos:column="59">[<expr><name pos:line="325" pos:column="60">STRING_SSL_CAPATH<pos:position pos:line="325" pos:column="77"/></name></expr>]<pos:position pos:line="325" pos:column="78"/></index></name></expr></then><else pos:line="325" pos:column="78">:
          <expr><literal type="string" pos:line="326" pos:column="11">"none"<pos:position pos:line="326" pos:column="17"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="326" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="327" pos:column="4"/></block></then></if>

  <if pos:line="329" pos:column="3">if<condition pos:line="329" pos:column="5">(<expr><name><name pos:line="329" pos:column="6">data<pos:position pos:line="329" pos:column="10"/></name><operator pos:line="329" pos:column="10">-&gt;<pos:position pos:line="329" pos:column="15"/></operator><name pos:line="329" pos:column="12">set<pos:position pos:line="329" pos:column="15"/></name><operator pos:line="329" pos:column="15">.<pos:position pos:line="329" pos:column="16"/></operator><name pos:line="329" pos:column="16">str<pos:position pos:line="329" pos:column="19"/></name><index pos:line="329" pos:column="19">[<expr><name pos:line="329" pos:column="20">STRING_SSL_CRLFILE<pos:position pos:line="329" pos:column="38"/></name></expr>]<pos:position pos:line="329" pos:column="39"/></index></name></expr>)<pos:position pos:line="329" pos:column="40"/></condition><then pos:line="329" pos:column="40"> <block pos:line="329" pos:column="41">{
    <comment type="block" pos:line="330" pos:column="5">/* tell SSL where to find CRL file that is used to check certificate
     * revocation */</comment>
    <expr_stmt><expr><name pos:line="332" pos:column="5">lookup<pos:position pos:line="332" pos:column="11"/></name><operator pos:line="332" pos:column="11">=<pos:position pos:line="332" pos:column="12"/></operator><call><name pos:line="332" pos:column="12">X509_STORE_add_lookup<pos:position pos:line="332" pos:column="33"/></name><argument_list pos:line="332" pos:column="33">(<argument><expr><call><name pos:line="332" pos:column="34">SSL_CTX_get_cert_store<pos:position pos:line="332" pos:column="56"/></name><argument_list pos:line="332" pos:column="56">(<argument><expr><name><name pos:line="332" pos:column="57">connssl<pos:position pos:line="332" pos:column="64"/></name><operator pos:line="332" pos:column="64">-&gt;<pos:position pos:line="332" pos:column="69"/></operator><name pos:line="332" pos:column="66">ctx<pos:position pos:line="332" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="332" pos:column="70"/></argument_list></call></expr></argument>,
                                 <argument><expr><call><name pos:line="333" pos:column="34">X509_LOOKUP_file<pos:position pos:line="333" pos:column="50"/></name><argument_list pos:line="333" pos:column="50">()<pos:position pos:line="333" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="333" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="54"/></expr_stmt>
    <if pos:line="334" pos:column="5">if<condition pos:line="334" pos:column="7">(<expr><operator pos:line="334" pos:column="8">!<pos:position pos:line="334" pos:column="9"/></operator><name pos:line="334" pos:column="9">lookup<pos:position pos:line="334" pos:column="15"/></name> <operator pos:line="334" pos:column="16">||<pos:position pos:line="334" pos:column="18"/></operator>
       <operator pos:line="335" pos:column="8">(<pos:position pos:line="335" pos:column="9"/></operator><operator pos:line="335" pos:column="9">!<pos:position pos:line="335" pos:column="10"/></operator><call><name pos:line="335" pos:column="10">X509_load_crl_file<pos:position pos:line="335" pos:column="28"/></name><argument_list pos:line="335" pos:column="28">(<argument><expr><name pos:line="335" pos:column="29">lookup<pos:position pos:line="335" pos:column="35"/></name></expr></argument>,<argument><expr><name><name pos:line="335" pos:column="36">data<pos:position pos:line="335" pos:column="40"/></name><operator pos:line="335" pos:column="40">-&gt;<pos:position pos:line="335" pos:column="45"/></operator><name pos:line="335" pos:column="42">set<pos:position pos:line="335" pos:column="45"/></name><operator pos:line="335" pos:column="45">.<pos:position pos:line="335" pos:column="46"/></operator><name pos:line="335" pos:column="46">str<pos:position pos:line="335" pos:column="49"/></name><index pos:line="335" pos:column="49">[<expr><name pos:line="335" pos:column="50">STRING_SSL_CRLFILE<pos:position pos:line="335" pos:column="68"/></name></expr>]<pos:position pos:line="335" pos:column="69"/></index></name></expr></argument>,
                            <argument><expr><name pos:line="336" pos:column="29">X509_FILETYPE_PEM<pos:position pos:line="336" pos:column="46"/></name></expr></argument>)<pos:position pos:line="336" pos:column="47"/></argument_list></call><operator pos:line="336" pos:column="47">)<pos:position pos:line="336" pos:column="48"/></operator></expr> )<pos:position pos:line="336" pos:column="50"/></condition><then pos:line="336" pos:column="50"> <block pos:line="336" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="337" pos:column="7">failf<pos:position pos:line="337" pos:column="12"/></name><argument_list pos:line="337" pos:column="12">(<argument><expr><name pos:line="337" pos:column="13">data<pos:position pos:line="337" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="337" pos:column="18">"error loading CRL file: %s"<pos:position pos:line="337" pos:column="46"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="338" pos:column="13">data<pos:position pos:line="338" pos:column="17"/></name><operator pos:line="338" pos:column="17">-&gt;<pos:position pos:line="338" pos:column="22"/></operator><name pos:line="338" pos:column="19">set<pos:position pos:line="338" pos:column="22"/></name><operator pos:line="338" pos:column="22">.<pos:position pos:line="338" pos:column="23"/></operator><name pos:line="338" pos:column="23">str<pos:position pos:line="338" pos:column="26"/></name><index pos:line="338" pos:column="26">[<expr><name pos:line="338" pos:column="27">STRING_SSL_CRLFILE<pos:position pos:line="338" pos:column="45"/></name></expr>]<pos:position pos:line="338" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="338" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="48"/></expr_stmt>
      <return pos:line="339" pos:column="7">return <expr><name pos:line="339" pos:column="14">CURLE_SSL_CRL_BADFILE<pos:position pos:line="339" pos:column="35"/></name></expr>;<pos:position pos:line="339" pos:column="36"/></return>
    }<pos:position pos:line="340" pos:column="6"/></block></then>
    <else pos:line="341" pos:column="5">else <block pos:line="341" pos:column="10">{
      <comment type="block" pos:line="342" pos:column="7">/* Everything is fine. */</comment>
      <expr_stmt><expr><call><name pos:line="343" pos:column="7">infof<pos:position pos:line="343" pos:column="12"/></name><argument_list pos:line="343" pos:column="12">(<argument><expr><name pos:line="343" pos:column="13">data<pos:position pos:line="343" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="343" pos:column="19">"successfully load CRL file:\n"<pos:position pos:line="343" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="344" pos:column="7">X509_STORE_set_flags<pos:position pos:line="344" pos:column="27"/></name><argument_list pos:line="344" pos:column="27">(<argument><expr><call><name pos:line="344" pos:column="28">SSL_CTX_get_cert_store<pos:position pos:line="344" pos:column="50"/></name><argument_list pos:line="344" pos:column="50">(<argument><expr><name><name pos:line="344" pos:column="51">connssl<pos:position pos:line="344" pos:column="58"/></name><operator pos:line="344" pos:column="58">-&gt;<pos:position pos:line="344" pos:column="63"/></operator><name pos:line="344" pos:column="60">ctx<pos:position pos:line="344" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="344" pos:column="64"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="345" pos:column="28">X509_V_FLAG_CRL_CHECK<pos:position pos:line="345" pos:column="49"/></name><operator pos:line="345" pos:column="49">|<pos:position pos:line="345" pos:column="50"/></operator><name pos:line="345" pos:column="50">X509_V_FLAG_CRL_CHECK_ALL<pos:position pos:line="345" pos:column="75"/></name></expr></argument>)<pos:position pos:line="345" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="346" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="347" pos:column="5">infof<pos:position pos:line="347" pos:column="10"/></name><argument_list pos:line="347" pos:column="10">(<argument><expr><name pos:line="347" pos:column="11">data<pos:position pos:line="347" pos:column="15"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="348" pos:column="11">"  CRLfile: %s\n"<pos:position pos:line="348" pos:column="28"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="348" pos:column="30">data<pos:position pos:line="348" pos:column="34"/></name><operator pos:line="348" pos:column="34">-&gt;<pos:position pos:line="348" pos:column="39"/></operator><name pos:line="348" pos:column="36">set<pos:position pos:line="348" pos:column="39"/></name><operator pos:line="348" pos:column="39">.<pos:position pos:line="348" pos:column="40"/></operator><name pos:line="348" pos:column="40">str<pos:position pos:line="348" pos:column="43"/></name><index pos:line="348" pos:column="43">[<expr><name pos:line="348" pos:column="44">STRING_SSL_CRLFILE<pos:position pos:line="348" pos:column="62"/></name></expr>]<pos:position pos:line="348" pos:column="63"/></index></name></expr> ?<pos:position pos:line="348" pos:column="65"/></condition><then pos:line="348" pos:column="65">
          <expr><name><name pos:line="349" pos:column="11">data<pos:position pos:line="349" pos:column="15"/></name><operator pos:line="349" pos:column="15">-&gt;<pos:position pos:line="349" pos:column="20"/></operator><name pos:line="349" pos:column="17">set<pos:position pos:line="349" pos:column="20"/></name><operator pos:line="349" pos:column="20">.<pos:position pos:line="349" pos:column="21"/></operator><name pos:line="349" pos:column="21">str<pos:position pos:line="349" pos:column="24"/></name><index pos:line="349" pos:column="24">[<expr><name pos:line="349" pos:column="25">STRING_SSL_CRLFILE<pos:position pos:line="349" pos:column="43"/></name></expr>]<pos:position pos:line="349" pos:column="44"/></index></name></expr></then><else pos:line="349" pos:column="44">: <expr><literal type="string" pos:line="349" pos:column="46">"none"<pos:position pos:line="349" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="349" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="350" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="352" pos:column="3">/* SSL always tries to verify the peer, this only says whether it should
   * fail to connect if the verification fails, or if it should continue
   * anyway. In the latter case the result of the verification is checked with
   * SSL_get_verify_result() below. */</comment>
  <expr_stmt><expr><call><name pos:line="356" pos:column="3">SSL_CTX_set_verify<pos:position pos:line="356" pos:column="21"/></name><argument_list pos:line="356" pos:column="21">(<argument><expr><name><name pos:line="356" pos:column="22">connssl<pos:position pos:line="356" pos:column="29"/></name><operator pos:line="356" pos:column="29">-&gt;<pos:position pos:line="356" pos:column="34"/></operator><name pos:line="356" pos:column="31">ctx<pos:position pos:line="356" pos:column="34"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="357" pos:column="22">data<pos:position pos:line="357" pos:column="26"/></name><operator pos:line="357" pos:column="26">-&gt;<pos:position pos:line="357" pos:column="31"/></operator><name pos:line="357" pos:column="28">set<pos:position pos:line="357" pos:column="31"/></name><operator pos:line="357" pos:column="31">.<pos:position pos:line="357" pos:column="32"/></operator><name pos:line="357" pos:column="32">ssl<pos:position pos:line="357" pos:column="35"/></name><operator pos:line="357" pos:column="35">.<pos:position pos:line="357" pos:column="36"/></operator><name pos:line="357" pos:column="36">verifypeer<pos:position pos:line="357" pos:column="46"/></name></name></expr>?<pos:position pos:line="357" pos:column="47"/></condition><then><expr><name pos:line="357" pos:column="47">SSL_VERIFY_PEER<pos:position pos:line="357" pos:column="62"/></name></expr></then><else pos:line="357" pos:column="62">:<expr><name pos:line="357" pos:column="63">SSL_VERIFY_NONE<pos:position pos:line="357" pos:column="78"/></name></expr></else></ternary></expr></argument>,
                     <argument><expr><name pos:line="358" pos:column="22">cert_verify_callback<pos:position pos:line="358" pos:column="42"/></name></expr></argument>)<pos:position pos:line="358" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="360" pos:column="3">/* give application a chance to interfere with SSL set up. */</comment>
  <if pos:line="361" pos:column="3">if<condition pos:line="361" pos:column="5">(<expr><name><name pos:line="361" pos:column="6">data<pos:position pos:line="361" pos:column="10"/></name><operator pos:line="361" pos:column="10">-&gt;<pos:position pos:line="361" pos:column="15"/></operator><name pos:line="361" pos:column="12">set<pos:position pos:line="361" pos:column="15"/></name><operator pos:line="361" pos:column="15">.<pos:position pos:line="361" pos:column="16"/></operator><name pos:line="361" pos:column="16">ssl<pos:position pos:line="361" pos:column="19"/></name><operator pos:line="361" pos:column="19">.<pos:position pos:line="361" pos:column="20"/></operator><name pos:line="361" pos:column="20">fsslctx<pos:position pos:line="361" pos:column="27"/></name></name></expr>)<pos:position pos:line="361" pos:column="28"/></condition><then pos:line="361" pos:column="28"> <block pos:line="361" pos:column="29">{
    <expr_stmt><expr><name pos:line="362" pos:column="5">result<pos:position pos:line="362" pos:column="11"/></name> <operator pos:line="362" pos:column="12">=<pos:position pos:line="362" pos:column="13"/></operator> <call pos:line="362" pos:column="14">(<modifier pos:line="362" pos:column="15">*<pos:position pos:line="362" pos:column="16"/></modifier><name><name pos:line="362" pos:column="16">data<pos:position pos:line="362" pos:column="20"/></name><operator pos:line="362" pos:column="20">-&gt;<pos:position pos:line="362" pos:column="25"/></operator><name pos:line="362" pos:column="22">set<pos:position pos:line="362" pos:column="25"/></name><operator pos:line="362" pos:column="25">.<pos:position pos:line="362" pos:column="26"/></operator><name pos:line="362" pos:column="26">ssl<pos:position pos:line="362" pos:column="29"/></name><operator pos:line="362" pos:column="29">.<pos:position pos:line="362" pos:column="30"/></operator><name pos:line="362" pos:column="30">fsslctx<pos:position pos:line="362" pos:column="37"/></name></name>)<argument_list pos:line="362" pos:column="38">(<argument><expr><name pos:line="362" pos:column="39">data<pos:position pos:line="362" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="362" pos:column="45">connssl<pos:position pos:line="362" pos:column="52"/></name><operator pos:line="362" pos:column="52">-&gt;<pos:position pos:line="362" pos:column="57"/></operator><name pos:line="362" pos:column="54">ctx<pos:position pos:line="362" pos:column="57"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="363" pos:column="39">data<pos:position pos:line="363" pos:column="43"/></name><operator pos:line="363" pos:column="43">-&gt;<pos:position pos:line="363" pos:column="48"/></operator><name pos:line="363" pos:column="45">set<pos:position pos:line="363" pos:column="48"/></name><operator pos:line="363" pos:column="48">.<pos:position pos:line="363" pos:column="49"/></operator><name pos:line="363" pos:column="49">ssl<pos:position pos:line="363" pos:column="52"/></name><operator pos:line="363" pos:column="52">.<pos:position pos:line="363" pos:column="53"/></operator><name pos:line="363" pos:column="53">fsslctxp<pos:position pos:line="363" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="363" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="63"/></expr_stmt>
    <if pos:line="364" pos:column="5">if<condition pos:line="364" pos:column="7">(<expr><name pos:line="364" pos:column="8">result<pos:position pos:line="364" pos:column="14"/></name></expr>)<pos:position pos:line="364" pos:column="15"/></condition><then pos:line="364" pos:column="15"> <block pos:line="364" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="365" pos:column="7">failf<pos:position pos:line="365" pos:column="12"/></name><argument_list pos:line="365" pos:column="12">(<argument><expr><name pos:line="365" pos:column="13">data<pos:position pos:line="365" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="365" pos:column="18">"error signaled by ssl ctx callback"<pos:position pos:line="365" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="365" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="56"/></expr_stmt>
      <return pos:line="366" pos:column="7">return <expr><name pos:line="366" pos:column="14">result<pos:position pos:line="366" pos:column="20"/></name></expr>;<pos:position pos:line="366" pos:column="21"/></return>
    }<pos:position pos:line="367" pos:column="6"/></block></then></if>
  }<pos:position pos:line="368" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="370" pos:column="3">/* Lets make an SSL structure */</comment>
  <if pos:line="371" pos:column="3">if<condition pos:line="371" pos:column="5">(<expr><name><name pos:line="371" pos:column="6">connssl<pos:position pos:line="371" pos:column="13"/></name><operator pos:line="371" pos:column="13">-&gt;<pos:position pos:line="371" pos:column="18"/></operator><name pos:line="371" pos:column="15">handle<pos:position pos:line="371" pos:column="21"/></name></name></expr>)<pos:position pos:line="371" pos:column="22"/></condition><then pos:line="371" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="372" pos:column="5">SSL_free<pos:position pos:line="372" pos:column="13"/></name><argument_list pos:line="372" pos:column="13">(<argument><expr><name><name pos:line="372" pos:column="14">connssl<pos:position pos:line="372" pos:column="21"/></name><operator pos:line="372" pos:column="21">-&gt;<pos:position pos:line="372" pos:column="26"/></operator><name pos:line="372" pos:column="23">handle<pos:position pos:line="372" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="31"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="373" pos:column="3">connssl<pos:position pos:line="373" pos:column="10"/></name><operator pos:line="373" pos:column="10">-&gt;<pos:position pos:line="373" pos:column="15"/></operator><name pos:line="373" pos:column="12">handle<pos:position pos:line="373" pos:column="18"/></name></name> <operator pos:line="373" pos:column="19">=<pos:position pos:line="373" pos:column="20"/></operator> <call><name pos:line="373" pos:column="21">SSL_new<pos:position pos:line="373" pos:column="28"/></name><argument_list pos:line="373" pos:column="28">(<argument><expr><name><name pos:line="373" pos:column="29">connssl<pos:position pos:line="373" pos:column="36"/></name><operator pos:line="373" pos:column="36">-&gt;<pos:position pos:line="373" pos:column="41"/></operator><name pos:line="373" pos:column="38">ctx<pos:position pos:line="373" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="373" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="43"/></expr_stmt>
  <if pos:line="374" pos:column="3">if<condition pos:line="374" pos:column="5">(<expr><operator pos:line="374" pos:column="6">!<pos:position pos:line="374" pos:column="7"/></operator><name><name pos:line="374" pos:column="7">connssl<pos:position pos:line="374" pos:column="14"/></name><operator pos:line="374" pos:column="14">-&gt;<pos:position pos:line="374" pos:column="19"/></operator><name pos:line="374" pos:column="16">handle<pos:position pos:line="374" pos:column="22"/></name></name></expr>)<pos:position pos:line="374" pos:column="23"/></condition><then pos:line="374" pos:column="23"> <block pos:line="374" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="375" pos:column="5">failf<pos:position pos:line="375" pos:column="10"/></name><argument_list pos:line="375" pos:column="10">(<argument><expr><name pos:line="375" pos:column="11">data<pos:position pos:line="375" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="375" pos:column="17">"SSL: couldn't create a context (handle)!"<pos:position pos:line="375" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="375" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="61"/></expr_stmt>
    <return pos:line="376" pos:column="5">return <expr><name pos:line="376" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="376" pos:column="31"/></name></expr>;<pos:position pos:line="376" pos:column="32"/></return>
  }<pos:position pos:line="377" pos:column="4"/></block></then></if>

<cpp:if pos:line="379" pos:column="1">#<cpp:directive pos:line="379" pos:column="2">if<pos:position pos:line="379" pos:column="4"/></cpp:directive> <expr><operator pos:line="379" pos:column="5">(<pos:position pos:line="379" pos:column="6"/></operator><name pos:line="379" pos:column="6">OPENSSL_VERSION_NUMBER<pos:position pos:line="379" pos:column="28"/></name> <operator pos:line="379" pos:column="29">&gt;=<pos:position pos:line="379" pos:column="34"/></operator> <literal type="number" pos:line="379" pos:column="32">0x0090808fL<pos:position pos:line="379" pos:column="43"/></literal><operator pos:line="379" pos:column="43">)<pos:position pos:line="379" pos:column="44"/></operator> <operator pos:line="379" pos:column="45">&amp;&amp;<pos:position pos:line="379" pos:column="55"/></operator> <operator pos:line="379" pos:column="48">!<pos:position pos:line="379" pos:column="49"/></operator><call><name pos:line="379" pos:column="49">defined<pos:position pos:line="379" pos:column="56"/></name><argument_list pos:line="379" pos:column="56">(<argument><expr><name pos:line="379" pos:column="57">OPENSSL_NO_TLSEXT<pos:position pos:line="379" pos:column="74"/></name></expr></argument>)<pos:position pos:line="379" pos:column="75"/></argument_list></call> <operator pos:line="379" pos:column="76">&amp;&amp;<pos:position pos:line="379" pos:column="86"/></operator> \
    <operator pos:line="380" pos:column="5">!<pos:position pos:line="380" pos:column="6"/></operator><call><name pos:line="380" pos:column="6">defined<pos:position pos:line="380" pos:column="13"/></name><argument_list pos:line="380" pos:column="13">(<argument><expr><name pos:line="380" pos:column="14">OPENSSL_IS_BORINGSSL<pos:position pos:line="380" pos:column="34"/></name></expr></argument>)<pos:position pos:line="380" pos:column="35"/></argument_list></call></expr></cpp:if>
  <if pos:line="381" pos:column="3">if<condition pos:line="381" pos:column="5">(<expr><name><name pos:line="381" pos:column="6">data<pos:position pos:line="381" pos:column="10"/></name><operator pos:line="381" pos:column="10">-&gt;<pos:position pos:line="381" pos:column="15"/></operator><name pos:line="381" pos:column="12">set<pos:position pos:line="381" pos:column="15"/></name><operator pos:line="381" pos:column="15">.<pos:position pos:line="381" pos:column="16"/></operator><name pos:line="381" pos:column="16">ssl<pos:position pos:line="381" pos:column="19"/></name><operator pos:line="381" pos:column="19">.<pos:position pos:line="381" pos:column="20"/></operator><name pos:line="381" pos:column="20">verifystatus<pos:position pos:line="381" pos:column="32"/></name></name></expr>)<pos:position pos:line="381" pos:column="33"/></condition><then pos:line="381" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="382" pos:column="5">SSL_set_tlsext_status_type<pos:position pos:line="382" pos:column="31"/></name><argument_list pos:line="382" pos:column="31">(<argument><expr><name><name pos:line="382" pos:column="32">connssl<pos:position pos:line="382" pos:column="39"/></name><operator pos:line="382" pos:column="39">-&gt;<pos:position pos:line="382" pos:column="44"/></operator><name pos:line="382" pos:column="41">handle<pos:position pos:line="382" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="382" pos:column="49">TLSEXT_STATUSTYPE_ocsp<pos:position pos:line="382" pos:column="71"/></name></expr></argument>)<pos:position pos:line="382" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="73"/></expr_stmt></block></then></if>
<cpp:endif pos:line="383" pos:column="1">#<cpp:directive pos:line="383" pos:column="2">endif<pos:position pos:line="383" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="385" pos:column="3">SSL_set_connect_state<pos:position pos:line="385" pos:column="24"/></name><argument_list pos:line="385" pos:column="24">(<argument><expr><name><name pos:line="385" pos:column="25">connssl<pos:position pos:line="385" pos:column="32"/></name><operator pos:line="385" pos:column="32">-&gt;<pos:position pos:line="385" pos:column="37"/></operator><name pos:line="385" pos:column="34">handle<pos:position pos:line="385" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="385" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="387" pos:column="3">connssl<pos:position pos:line="387" pos:column="10"/></name><operator pos:line="387" pos:column="10">-&gt;<pos:position pos:line="387" pos:column="15"/></operator><name pos:line="387" pos:column="12">server_cert<pos:position pos:line="387" pos:column="23"/></name></name> <operator pos:line="387" pos:column="24">=<pos:position pos:line="387" pos:column="25"/></operator> <literal type="number" pos:line="387" pos:column="26">0x0<pos:position pos:line="387" pos:column="29"/></literal></expr>;<pos:position pos:line="387" pos:column="30"/></expr_stmt>

<cpp:ifdef pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">ifdef<pos:position pos:line="389" pos:column="7"/></cpp:directive> <name pos:line="389" pos:column="8">SSL_CTRL_SET_TLSEXT_HOSTNAME<pos:position pos:line="389" pos:column="36"/></name></cpp:ifdef>
  <if pos:line="390" pos:column="3">if<condition pos:line="390" pos:column="5">(<expr><operator pos:line="390" pos:column="6">(<pos:position pos:line="390" pos:column="7"/></operator><literal type="number" pos:line="390" pos:column="7">0<pos:position pos:line="390" pos:column="8"/></literal> <operator pos:line="390" pos:column="9">==<pos:position pos:line="390" pos:column="11"/></operator> <call><name pos:line="390" pos:column="12">Curl_inet_pton<pos:position pos:line="390" pos:column="26"/></name><argument_list pos:line="390" pos:column="26">(<argument><expr><name pos:line="390" pos:column="27">AF_INET<pos:position pos:line="390" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="390" pos:column="36">conn<pos:position pos:line="390" pos:column="40"/></name><operator pos:line="390" pos:column="40">-&gt;<pos:position pos:line="390" pos:column="45"/></operator><name pos:line="390" pos:column="42">host<pos:position pos:line="390" pos:column="46"/></name><operator pos:line="390" pos:column="46">.<pos:position pos:line="390" pos:column="47"/></operator><name pos:line="390" pos:column="47">name<pos:position pos:line="390" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="390" pos:column="53">&amp;<pos:position pos:line="390" pos:column="58"/></operator><name pos:line="390" pos:column="54">addr<pos:position pos:line="390" pos:column="58"/></name></expr></argument>)<pos:position pos:line="390" pos:column="59"/></argument_list></call><operator pos:line="390" pos:column="59">)<pos:position pos:line="390" pos:column="60"/></operator> <operator pos:line="390" pos:column="61">&amp;&amp;<pos:position pos:line="390" pos:column="71"/></operator>
<cpp:ifdef pos:line="391" pos:column="1">#<cpp:directive pos:line="391" pos:column="2">ifdef<pos:position pos:line="391" pos:column="7"/></cpp:directive> <name pos:line="391" pos:column="8">ENABLE_IPV6<pos:position pos:line="391" pos:column="19"/></name></cpp:ifdef>
     <operator pos:line="392" pos:column="6">(<pos:position pos:line="392" pos:column="7"/></operator><literal type="number" pos:line="392" pos:column="7">0<pos:position pos:line="392" pos:column="8"/></literal> <operator pos:line="392" pos:column="9">==<pos:position pos:line="392" pos:column="11"/></operator> <call><name pos:line="392" pos:column="12">Curl_inet_pton<pos:position pos:line="392" pos:column="26"/></name><argument_list pos:line="392" pos:column="26">(<argument><expr><name pos:line="392" pos:column="27">AF_INET6<pos:position pos:line="392" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="392" pos:column="37">conn<pos:position pos:line="392" pos:column="41"/></name><operator pos:line="392" pos:column="41">-&gt;<pos:position pos:line="392" pos:column="46"/></operator><name pos:line="392" pos:column="43">host<pos:position pos:line="392" pos:column="47"/></name><operator pos:line="392" pos:column="47">.<pos:position pos:line="392" pos:column="48"/></operator><name pos:line="392" pos:column="48">name<pos:position pos:line="392" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="392" pos:column="54">&amp;<pos:position pos:line="392" pos:column="59"/></operator><name pos:line="392" pos:column="55">addr<pos:position pos:line="392" pos:column="59"/></name></expr></argument>)<pos:position pos:line="392" pos:column="60"/></argument_list></call><operator pos:line="392" pos:column="60">)<pos:position pos:line="392" pos:column="61"/></operator> <operator pos:line="392" pos:column="62">&amp;&amp;<pos:position pos:line="392" pos:column="72"/></operator>
<cpp:endif pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">endif<pos:position pos:line="393" pos:column="7"/></cpp:directive></cpp:endif>
     <name pos:line="394" pos:column="6">sni<pos:position pos:line="394" pos:column="9"/></name> <operator pos:line="394" pos:column="10">&amp;&amp;<pos:position pos:line="394" pos:column="20"/></operator>
     <operator pos:line="395" pos:column="6">!<pos:position pos:line="395" pos:column="7"/></operator><call><name pos:line="395" pos:column="7">SSL_set_tlsext_host_name<pos:position pos:line="395" pos:column="31"/></name><argument_list pos:line="395" pos:column="31">(<argument><expr><name><name pos:line="395" pos:column="32">connssl<pos:position pos:line="395" pos:column="39"/></name><operator pos:line="395" pos:column="39">-&gt;<pos:position pos:line="395" pos:column="44"/></operator><name pos:line="395" pos:column="41">handle<pos:position pos:line="395" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="395" pos:column="49">conn<pos:position pos:line="395" pos:column="53"/></name><operator pos:line="395" pos:column="53">-&gt;<pos:position pos:line="395" pos:column="58"/></operator><name pos:line="395" pos:column="55">host<pos:position pos:line="395" pos:column="59"/></name><operator pos:line="395" pos:column="59">.<pos:position pos:line="395" pos:column="60"/></operator><name pos:line="395" pos:column="60">name<pos:position pos:line="395" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="395" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="395" pos:column="66"/></condition><then pos:line="395" pos:column="66">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="396" pos:column="5">infof<pos:position pos:line="396" pos:column="10"/></name><argument_list pos:line="396" pos:column="10">(<argument><expr><name pos:line="396" pos:column="11">data<pos:position pos:line="396" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="396" pos:column="17">"WARNING: failed to configure server name indication (SNI) "<pos:position pos:line="396" pos:column="77"/></literal>
          <literal type="string" pos:line="397" pos:column="11">"TLS extension\n"<pos:position pos:line="397" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="397" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="30"/></expr_stmt></block></then></if>
<cpp:endif pos:line="398" pos:column="1">#<cpp:directive pos:line="398" pos:column="2">endif<pos:position pos:line="398" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="400" pos:column="3">/* Check if there's a cached ID we can/should use here! */</comment>
  <if pos:line="401" pos:column="3">if<condition pos:line="401" pos:column="5">(<expr><operator pos:line="401" pos:column="6">!<pos:position pos:line="401" pos:column="7"/></operator><call><name pos:line="401" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="401" pos:column="28"/></name><argument_list pos:line="401" pos:column="28">(<argument><expr><name pos:line="401" pos:column="29">conn<pos:position pos:line="401" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="401" pos:column="35">&amp;<pos:position pos:line="401" pos:column="40"/></operator><name pos:line="401" pos:column="36">ssl_sessionid<pos:position pos:line="401" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="51">NULL<pos:position pos:line="401" pos:column="55"/></name></expr></argument>)<pos:position pos:line="401" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="401" pos:column="57"/></condition><then pos:line="401" pos:column="57"> <block pos:line="401" pos:column="58">{
    <comment type="block" pos:line="402" pos:column="5">/* we got a session id, use it! */</comment>
    <if pos:line="403" pos:column="5">if<condition pos:line="403" pos:column="7">(<expr><operator pos:line="403" pos:column="8">!<pos:position pos:line="403" pos:column="9"/></operator><call><name pos:line="403" pos:column="9">SSL_set_session<pos:position pos:line="403" pos:column="24"/></name><argument_list pos:line="403" pos:column="24">(<argument><expr><name><name pos:line="403" pos:column="25">connssl<pos:position pos:line="403" pos:column="32"/></name><operator pos:line="403" pos:column="32">-&gt;<pos:position pos:line="403" pos:column="37"/></operator><name pos:line="403" pos:column="34">handle<pos:position pos:line="403" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="42">ssl_sessionid<pos:position pos:line="403" pos:column="55"/></name></expr></argument>)<pos:position pos:line="403" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="403" pos:column="57"/></condition><then pos:line="403" pos:column="57"> <block pos:line="403" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="404" pos:column="7">failf<pos:position pos:line="404" pos:column="12"/></name><argument_list pos:line="404" pos:column="12">(<argument><expr><name pos:line="404" pos:column="13">data<pos:position pos:line="404" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="404" pos:column="19">"SSL: SSL_set_session failed: %s"<pos:position pos:line="404" pos:column="52"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="405" pos:column="13">ERR_error_string<pos:position pos:line="405" pos:column="29"/></name><argument_list pos:line="405" pos:column="29">(<argument><expr><call><name pos:line="405" pos:column="30">ERR_get_error<pos:position pos:line="405" pos:column="43"/></name><argument_list pos:line="405" pos:column="43">()<pos:position pos:line="405" pos:column="45"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="405" pos:column="46">NULL<pos:position pos:line="405" pos:column="50"/></name></expr></argument>)<pos:position pos:line="405" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="405" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="53"/></expr_stmt>
      <return pos:line="406" pos:column="7">return <expr><name pos:line="406" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="406" pos:column="37"/></name></expr>;<pos:position pos:line="406" pos:column="38"/></return>
    }<pos:position pos:line="407" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="408" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><call><name pos:line="409" pos:column="5">infof<pos:position pos:line="409" pos:column="10"/></name> <argument_list pos:line="409" pos:column="11">(<argument><expr><name pos:line="409" pos:column="12">data<pos:position pos:line="409" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="409" pos:column="18">"SSL re-using session ID\n"<pos:position pos:line="409" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="409" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="410" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="412" pos:column="3">/* pass the raw socket into the SSL layers */</comment>
  <if pos:line="413" pos:column="3">if<condition pos:line="413" pos:column="5">(<expr><operator pos:line="413" pos:column="6">!<pos:position pos:line="413" pos:column="7"/></operator><call><name pos:line="413" pos:column="7">SSL_set_fd<pos:position pos:line="413" pos:column="17"/></name><argument_list pos:line="413" pos:column="17">(<argument><expr><name><name pos:line="413" pos:column="18">connssl<pos:position pos:line="413" pos:column="25"/></name><operator pos:line="413" pos:column="25">-&gt;<pos:position pos:line="413" pos:column="30"/></operator><name pos:line="413" pos:column="27">handle<pos:position pos:line="413" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="413" pos:column="35">(<pos:position pos:line="413" pos:column="36"/></operator><name pos:line="413" pos:column="36">int<pos:position pos:line="413" pos:column="39"/></name><operator pos:line="413" pos:column="39">)<pos:position pos:line="413" pos:column="40"/></operator><name pos:line="413" pos:column="40">sockfd<pos:position pos:line="413" pos:column="46"/></name></expr></argument>)<pos:position pos:line="413" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="413" pos:column="48"/></condition><then pos:line="413" pos:column="48"> <block pos:line="413" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="414" pos:column="5">failf<pos:position pos:line="414" pos:column="10"/></name><argument_list pos:line="414" pos:column="10">(<argument><expr><name pos:line="414" pos:column="11">data<pos:position pos:line="414" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="414" pos:column="17">"SSL: SSL_set_fd failed: %s"<pos:position pos:line="414" pos:column="45"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="415" pos:column="11">ERR_error_string<pos:position pos:line="415" pos:column="27"/></name><argument_list pos:line="415" pos:column="27">(<argument><expr><call><name pos:line="415" pos:column="28">ERR_get_error<pos:position pos:line="415" pos:column="41"/></name><argument_list pos:line="415" pos:column="41">()<pos:position pos:line="415" pos:column="43"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="415" pos:column="44">NULL<pos:position pos:line="415" pos:column="48"/></name></expr></argument>)<pos:position pos:line="415" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="415" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="51"/></expr_stmt>
    <return pos:line="416" pos:column="5">return <expr><name pos:line="416" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="416" pos:column="35"/></name></expr>;<pos:position pos:line="416" pos:column="36"/></return>
  }<pos:position pos:line="417" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="419" pos:column="3">connssl<pos:position pos:line="419" pos:column="10"/></name><operator pos:line="419" pos:column="10">-&gt;<pos:position pos:line="419" pos:column="15"/></operator><name pos:line="419" pos:column="12">connecting_state<pos:position pos:line="419" pos:column="28"/></name></name> <operator pos:line="419" pos:column="29">=<pos:position pos:line="419" pos:column="30"/></operator> <name pos:line="419" pos:column="31">ssl_connect_2<pos:position pos:line="419" pos:column="44"/></name></expr>;<pos:position pos:line="419" pos:column="45"/></expr_stmt>

  <return pos:line="421" pos:column="3">return <expr><name pos:line="421" pos:column="10">CURLE_OK<pos:position pos:line="421" pos:column="18"/></name></expr>;<pos:position pos:line="421" pos:column="19"/></return>
}<pos:position pos:line="422" pos:column="2"/></block></function></unit>

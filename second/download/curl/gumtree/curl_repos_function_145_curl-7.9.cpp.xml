<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_145_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ConnectHTTPProxyTunnel<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">connectdata<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conn<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">tunnelsocket<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">char<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">hostname<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">int<pos:position pos:line="3" pos:column="57"/></name></type> <name pos:line="3" pos:column="58">remote_port<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="70"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">httperror<pos:position pos:line="5" pos:column="16"/></name><init pos:line="5" pos:column="16">=<expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">subversion<pos:position pos:line="6" pos:column="17"/></name><init pos:line="6" pos:column="17">=<expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name><init pos:line="7" pos:column="29">=<expr><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">data<pos:position pos:line="7" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">infof<pos:position pos:line="9" pos:column="8"/></name><argument_list pos:line="9" pos:column="8">(<argument><expr><name pos:line="9" pos:column="9">data<pos:position pos:line="9" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="15">"Establish HTTP proxy tunnel to %s:%d\n"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">hostname<pos:position pos:line="9" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="67">remote_port<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* OK, now send the connect request to the proxy */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_sendf<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">tunnelsocket<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">conn<pos:position pos:line="12" pos:column="32"/></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="13" pos:column="14">"CONNECT %s:%d HTTP/1.0\015\012"<pos:position pos:line="13" pos:column="46"/></literal>
             <literal type="string" pos:line="14" pos:column="14">"%s"<pos:position pos:line="14" pos:column="18"/></literal>
             <literal type="string" pos:line="15" pos:column="14">"%s"<pos:position pos:line="15" pos:column="18"/></literal>
             <literal type="string" pos:line="16" pos:column="14">"\r\n"<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>,
             <argument><expr><name pos:line="17" pos:column="14">hostname<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">remote_port<pos:position pos:line="17" pos:column="35"/></name></expr></argument>,
             <argument><expr><ternary><condition><expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name><name pos:line="18" pos:column="15">conn<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">bits<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">proxy_user_passwd<pos:position pos:line="18" pos:column="43"/></name></name><operator pos:line="18" pos:column="43">)<pos:position pos:line="18" pos:column="44"/></operator></expr>?<pos:position pos:line="18" pos:column="45"/></condition><then><expr><name><name pos:line="18" pos:column="45">conn<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">allocptr<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">proxyuserpwd<pos:position pos:line="18" pos:column="72"/></name></name></expr></then><else pos:line="18" pos:column="72">:<expr><literal type="string" pos:line="18" pos:column="73">""<pos:position pos:line="18" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
             <argument><expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><ternary><condition><expr><name><name pos:line="19" pos:column="15">data<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">set<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">useragent<pos:position pos:line="19" pos:column="34"/></name></name></expr>?<pos:position pos:line="19" pos:column="35"/></condition><then><expr><name><name pos:line="19" pos:column="35">conn<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">allocptr<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">uagent<pos:position pos:line="19" pos:column="56"/></name></name></expr></then><else pos:line="19" pos:column="56">:<expr><literal type="string" pos:line="19" pos:column="57">""<pos:position pos:line="19" pos:column="59"/></literal></expr></else></ternary><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator></expr></argument>
             )<pos:position pos:line="20" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* wait for the proxy to send us a HTTP/1.0 200 OK header */</comment>
  <while pos:line="23" pos:column="3">while<condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">GetLine<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">tunnelsocket<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="31">data<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">state<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">buffer<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">conn<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="57"/></condition> <block pos:line="23" pos:column="58">{
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><literal type="char" pos:line="24" pos:column="8">'\r'<pos:position pos:line="24" pos:column="12"/></literal> <operator pos:line="24" pos:column="13">==<pos:position pos:line="24" pos:column="15"/></operator> <name><name pos:line="24" pos:column="16">data<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">state<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">buffer<pos:position pos:line="24" pos:column="34"/></name><index pos:line="24" pos:column="34">[<expr><literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>]<pos:position pos:line="24" pos:column="37"/></index></name></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38">
      <block type="pseudo"><break pos:line="25" pos:column="7">break;<pos:position pos:line="25" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="25" pos:column="14">/* end of headers */</comment>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">data<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">set<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">verbose<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="7">fprintf<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">set<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">.<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">err<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">"&lt; %s\n"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">data<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">state<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">.<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="52">buffer<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt></block></then></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><literal type="number" pos:line="29" pos:column="8">2<pos:position pos:line="29" pos:column="9"/></literal> <operator pos:line="29" pos:column="10">==<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">sscanf<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">data<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">state<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">buffer<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="40">"HTTP/1.%d %d"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>,
                   <argument><expr><operator pos:line="30" pos:column="20">&amp;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="21">subversion<pos:position pos:line="30" pos:column="31"/></name></expr></argument>,
                   <argument><expr><operator pos:line="31" pos:column="20">&amp;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="21">httperror<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32"> <block pos:line="31" pos:column="33">{
      <empty_stmt pos:line="32" pos:column="7">;<pos:position pos:line="32" pos:column="8"/></empty_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></while>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><literal type="number" pos:line="35" pos:column="6">200<pos:position pos:line="35" pos:column="9"/></literal> <operator pos:line="35" pos:column="10">!=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">httperror<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><literal type="number" pos:line="36" pos:column="8">407<pos:position pos:line="36" pos:column="11"/></literal> <operator pos:line="36" pos:column="12">==<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">httperror<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
      <comment type="block" pos:line="37" pos:column="7">/* Added Nov 6 1998 */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">failf<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">data<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"Proxy requires authorization!"<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="39" pos:column="5">else 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">failf<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">data<pos:position pos:line="40" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="19">"Received error code %d from proxy"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">httperror<pos:position pos:line="40" pos:column="65"/></name></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt></block></else></if>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">CURLE_READ_ERROR<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">infof<pos:position pos:line="44" pos:column="8"/></name> <argument_list pos:line="44" pos:column="9">(<argument><expr><name pos:line="44" pos:column="10">data<pos:position pos:line="44" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="16">"Proxy replied to CONNECT request\n"<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">CURLE_OK<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_572.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_dophase_done<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">connectdata<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">bool<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">connected<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FTP<pos:position pos:line="5" pos:column="13"/></name></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ftp<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">conn<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">proto<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">ftp<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">connected<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">Curl_ftp_nextconnect<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">conn<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt></block></then></if>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">result<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&amp;&amp;<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name><name pos:line="10" pos:column="17">conn<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">sock<pos:position pos:line="10" pos:column="27"/></name><index pos:line="10" pos:column="27">[<expr><name pos:line="10" pos:column="28">SECONDARYSOCKET<pos:position pos:line="10" pos:column="43"/></name></expr>]<pos:position pos:line="10" pos:column="44"/></index></name> <operator pos:line="10" pos:column="45">!=<pos:position pos:line="10" pos:column="47"/></operator> <name pos:line="10" pos:column="48">CURL_SOCKET_BAD<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">)<pos:position pos:line="10" pos:column="64"/></operator></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65"> <block pos:line="10" pos:column="66">{
    <comment type="block" pos:line="11" pos:column="5">/* Failure detected, close the second socket if it was created already */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sclose<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">conn<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">sock<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><name pos:line="12" pos:column="23">SECONDARYSOCKET<pos:position pos:line="12" pos:column="38"/></name></expr>]<pos:position pos:line="12" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">conn<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">sock<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><name pos:line="13" pos:column="16">SECONDARYSOCKET<pos:position pos:line="13" pos:column="31"/></name></expr>]<pos:position pos:line="13" pos:column="32"/></index></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">CURL_SOCKET_BAD<pos:position pos:line="13" pos:column="50"/></name></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">ftp<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">no_transfer<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
    <comment type="block" pos:line="17" pos:column="5">/* no data to transfer */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator><call><name pos:line="18" pos:column="12">Curl_Transfer<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">conn<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="36">-<pos:position pos:line="18" pos:column="37"/></operator><literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">FALSE<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">NULL<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">-<pos:position pos:line="18" pos:column="54"/></operator><literal type="number" pos:line="18" pos:column="54">1<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">NULL<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt></block></then>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if<condition pos:line="19" pos:column="10">(<expr><operator pos:line="19" pos:column="11">!<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">connected<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
    <comment type="block" pos:line="20" pos:column="5">/* since we didn't connect now, we want do_more to get called */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="5">conn<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">bits<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">do_more<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">TRUE<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><name><name pos:line="23" pos:column="3">ftp<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">ctl_valid<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">TRUE<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt> <comment type="block" pos:line="23" pos:column="26">/* seems good */</comment>

  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">result<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

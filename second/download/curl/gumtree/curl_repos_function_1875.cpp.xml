<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1875.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">getinfo_slist<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">SessionHandle<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">data<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">CURLINFO<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">info<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">curl_slist<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">param_slistp<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <union pos:line="4" pos:column="3">union <block pos:line="4" pos:column="9">{<public type="default" pos:line="4" pos:column="10">
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">curl_certinfo<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">to_certinfo<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">curl_slist<pos:position pos:line="6" pos:column="22"/></name></name>    <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">to_slist<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
  <pos:position pos:line="7" pos:column="3"/></public>}<pos:position pos:line="7" pos:column="4"/></block> <decl><name pos:line="7" pos:column="5">ptr<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></union>

  <switch pos:line="9" pos:column="3">switch<condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">info<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition> <block pos:line="9" pos:column="16">{
  <case pos:line="10" pos:column="3">case <expr><name pos:line="10" pos:column="8">CURLINFO_SSL_ENGINES<pos:position pos:line="10" pos:column="28"/></name></expr>:<pos:position pos:line="10" pos:column="29"/></case>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">param_slistp<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">Curl_ssl_engines_list<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">data<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
    <break pos:line="12" pos:column="5">break;<pos:position pos:line="12" pos:column="11"/></break>
  <case pos:line="13" pos:column="3">case <expr><name pos:line="13" pos:column="8">CURLINFO_COOKIELIST<pos:position pos:line="13" pos:column="27"/></name></expr>:<pos:position pos:line="13" pos:column="28"/></case>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">param_slistp<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">Curl_cookie_list<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">data<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <break pos:line="15" pos:column="5">break;<pos:position pos:line="15" pos:column="11"/></break>
  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">CURLINFO_CERTINFO<pos:position pos:line="16" pos:column="25"/></name></expr>:<pos:position pos:line="16" pos:column="26"/></case>
    <comment type="block" pos:line="17" pos:column="5">/* Return the a pointer to the certinfo struct. Not really an slist
       pointer but we can pretend it is here */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ptr<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">.<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">to_certinfo<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name><name pos:line="19" pos:column="24">data<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">info<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">certs<pos:position pos:line="19" pos:column="40"/></name></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">param_slistp<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">ptr<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">to_slist<pos:position pos:line="20" pos:column="33"/></name></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    <break pos:line="21" pos:column="5">break;<pos:position pos:line="21" pos:column="11"/></break>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">CURLINFO_TLS_SESSION<pos:position pos:line="22" pos:column="28"/></name></expr>:<pos:position pos:line="22" pos:column="29"/></case>
    <block pos:line="23" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="24" pos:column="7">struct<pos:position pos:line="24" pos:column="13"/></name> <name pos:line="24" pos:column="14">curl_tlssessioninfo<pos:position pos:line="24" pos:column="33"/></name></name> <modifier pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></modifier><modifier pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></modifier></type><name pos:line="24" pos:column="36">tsip<pos:position pos:line="24" pos:column="40"/></name> <init pos:line="24" pos:column="41">= <expr><operator pos:line="24" pos:column="43">(<pos:position pos:line="24" pos:column="44"/></operator>struct <name pos:line="24" pos:column="51">curl_tlssessioninfo<pos:position pos:line="24" pos:column="70"/></name> <operator pos:line="24" pos:column="71">*<pos:position pos:line="24" pos:column="72"/></operator><operator pos:line="24" pos:column="72">*<pos:position pos:line="24" pos:column="73"/></operator><operator pos:line="24" pos:column="73">)<pos:position pos:line="24" pos:column="74"/></operator>
                                          <name pos:line="25" pos:column="43">param_slistp<pos:position pos:line="25" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="56"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="26" pos:column="7">struct<pos:position pos:line="26" pos:column="13"/></name> <name pos:line="26" pos:column="14">curl_tlssessioninfo<pos:position pos:line="26" pos:column="33"/></name></name> <modifier pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></modifier></type><name pos:line="26" pos:column="35">tsi<pos:position pos:line="26" pos:column="38"/></name> <init pos:line="26" pos:column="39">= <expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name><name pos:line="26" pos:column="42">data<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">tsi<pos:position pos:line="26" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="27" pos:column="7">struct<pos:position pos:line="27" pos:column="13"/></name> <name pos:line="27" pos:column="14">connectdata<pos:position pos:line="27" pos:column="25"/></name></name> <modifier pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></modifier></type><name pos:line="27" pos:column="27">conn<pos:position pos:line="27" pos:column="31"/></name> <init pos:line="27" pos:column="32">= <expr><name><name pos:line="27" pos:column="34">data<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">easy_conn<pos:position pos:line="27" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="50"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">unsigned<pos:position pos:line="28" pos:column="15"/></name> <name pos:line="28" pos:column="16">int<pos:position pos:line="28" pos:column="19"/></name></type> <name pos:line="28" pos:column="20">sockindex<pos:position pos:line="28" pos:column="29"/></name> <init pos:line="28" pos:column="30">= <expr><literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">void<pos:position pos:line="29" pos:column="11"/></name> <modifier pos:line="29" pos:column="12">*<pos:position pos:line="29" pos:column="13"/></modifier></type><name pos:line="29" pos:column="13">internals<pos:position pos:line="29" pos:column="22"/></name> <init pos:line="29" pos:column="23">= <expr><name pos:line="29" pos:column="25">NULL<pos:position pos:line="29" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>

      <expr_stmt><expr><operator pos:line="31" pos:column="7">*<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">tsip<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">tsi<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">tsi<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">backend<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">CURLSSLBACKEND_NONE<pos:position pos:line="32" pos:column="41"/></name></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">tsi<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">internals<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">NULL<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">!<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">conn<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
        <block type="pseudo"><break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="38" pos:column="7">/* Find the active ("in use") SSL connection, if any */</comment>
      <while pos:line="39" pos:column="7">while<condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">sockindex<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">&lt;<pos:position pos:line="39" pos:column="28"/></operator> <sizeof pos:line="39" pos:column="26">sizeof<argument_list pos:line="39" pos:column="32">(<argument><expr><name><name pos:line="39" pos:column="33">conn<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">ssl<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></sizeof> <operator pos:line="39" pos:column="44">/<pos:position pos:line="39" pos:column="45"/></operator> <sizeof pos:line="39" pos:column="46">sizeof<argument_list pos:line="39" pos:column="52">(<argument><expr><name><name pos:line="39" pos:column="53">conn<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">ssl<pos:position pos:line="39" pos:column="62"/></name><index pos:line="39" pos:column="62">[<expr><literal type="number" pos:line="39" pos:column="63">0<pos:position pos:line="39" pos:column="64"/></literal></expr>]<pos:position pos:line="39" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></sizeof><operator pos:line="39" pos:column="66">)<pos:position pos:line="39" pos:column="67"/></operator> <operator pos:line="39" pos:column="68">&amp;&amp;<pos:position pos:line="39" pos:column="78"/></operator>
            <operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">!<pos:position pos:line="40" pos:column="15"/></operator><name><name pos:line="40" pos:column="15">conn<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">ssl<pos:position pos:line="40" pos:column="24"/></name><index pos:line="40" pos:column="24">[<expr><name pos:line="40" pos:column="25">sockindex<pos:position pos:line="40" pos:column="34"/></name></expr>]<pos:position pos:line="40" pos:column="35"/></index></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">use<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">)<pos:position pos:line="40" pos:column="40"/></operator></expr>)<pos:position pos:line="40" pos:column="41"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">sockindex<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">++<pos:position pos:line="41" pos:column="20"/></operator></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt></block></while>

      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><name pos:line="43" pos:column="10">sockindex<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">==<pos:position pos:line="43" pos:column="22"/></operator> <sizeof pos:line="43" pos:column="23">sizeof<argument_list pos:line="43" pos:column="29">(<argument><expr><name><name pos:line="43" pos:column="30">conn<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">ssl<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></sizeof> <operator pos:line="43" pos:column="41">/<pos:position pos:line="43" pos:column="42"/></operator> <sizeof pos:line="43" pos:column="43">sizeof<argument_list pos:line="43" pos:column="49">(<argument><expr><name><name pos:line="43" pos:column="50">conn<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">-&gt;<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="56">ssl<pos:position pos:line="43" pos:column="59"/></name><index pos:line="43" pos:column="59">[<expr><literal type="number" pos:line="43" pos:column="60">0<pos:position pos:line="43" pos:column="61"/></literal></expr>]<pos:position pos:line="43" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></sizeof></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64">
        <block type="pseudo"><break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="44" pos:column="16">/* no SSL session found */</comment>

      <comment type="block" pos:line="46" pos:column="7">/* Return the TLS session information from the relevant backend */</comment>
<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">USE_SSLEAY<pos:position pos:line="47" pos:column="18"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="48" pos:column="7">internals<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name><name pos:line="48" pos:column="19">conn<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">ssl<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><name pos:line="48" pos:column="29">sockindex<pos:position pos:line="48" pos:column="38"/></name></expr>]<pos:position pos:line="48" pos:column="39"/></index></name><operator pos:line="48" pos:column="39">.<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">ctx<pos:position pos:line="48" pos:column="43"/></name></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">USE_GNUTLS<pos:position pos:line="50" pos:column="18"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="51" pos:column="7">internals<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <name><name pos:line="51" pos:column="19">conn<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">ssl<pos:position pos:line="51" pos:column="28"/></name><index pos:line="51" pos:column="28">[<expr><name pos:line="51" pos:column="29">sockindex<pos:position pos:line="51" pos:column="38"/></name></expr>]<pos:position pos:line="51" pos:column="39"/></index></name><operator pos:line="51" pos:column="39">.<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">session<pos:position pos:line="51" pos:column="47"/></name></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">USE_NSS<pos:position pos:line="53" pos:column="15"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="54" pos:column="7">internals<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <name><name pos:line="54" pos:column="19">conn<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">ssl<pos:position pos:line="54" pos:column="28"/></name><index pos:line="54" pos:column="28">[<expr><name pos:line="54" pos:column="29">sockindex<pos:position pos:line="54" pos:column="38"/></name></expr>]<pos:position pos:line="54" pos:column="39"/></index></name><operator pos:line="54" pos:column="39">.<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">handle<pos:position pos:line="54" pos:column="46"/></name></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">USE_GSKIT<pos:position pos:line="56" pos:column="17"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="57" pos:column="7">internals<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name><name pos:line="57" pos:column="19">conn<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">ssl<pos:position pos:line="57" pos:column="28"/></name><index pos:line="57" pos:column="28">[<expr><name pos:line="57" pos:column="29">sockindex<pos:position pos:line="57" pos:column="38"/></name></expr>]<pos:position pos:line="57" pos:column="39"/></index></name><operator pos:line="57" pos:column="39">.<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">handle<pos:position pos:line="57" pos:column="46"/></name></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="59" pos:column="7">if<condition pos:line="59" pos:column="9">(<expr><name pos:line="59" pos:column="10">internals<pos:position pos:line="59" pos:column="19"/></name></expr>)<pos:position pos:line="59" pos:column="20"/></condition><then pos:line="59" pos:column="20"> <block pos:line="59" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">tsi<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">-&gt;<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="14">backend<pos:position pos:line="60" pos:column="21"/></name></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <call><name pos:line="60" pos:column="24">Curl_ssl_backend<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">()<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">tsi<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">internals<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">internals<pos:position pos:line="61" pos:column="35"/></name></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="63" pos:column="7">/* NOTE: For other SSL backends, it is not immediately clear what data
         to return from 'struct ssl_connect_data'; thus, for now we keep the
         backend as CURLSSLBACKEND_NONE in those cases, which should be
         interpreted as "not supported" */</comment>
    }<pos:position pos:line="67" pos:column="6"/></block>
    <break pos:line="68" pos:column="5">break;<pos:position pos:line="68" pos:column="11"/></break>
  <default pos:line="69" pos:column="3">default:<pos:position pos:line="69" pos:column="11"/></default>
    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="70" pos:column="39"/></name></expr>;<pos:position pos:line="70" pos:column="40"/></return>
  }<pos:position pos:line="71" pos:column="4"/></block></switch>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">CURLE_OK<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

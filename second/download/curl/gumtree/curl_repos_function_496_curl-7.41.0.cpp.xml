<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_496_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">errors<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="4" pos:column="3">(<pos:position pos:line="4" pos:column="4"/></operator><name pos:line="4" pos:column="4">void<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">)<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">URL<pos:position pos:line="4" pos:column="12"/></name></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt> <comment type="block" pos:line="4" pos:column="14">/* not used */</comment>

  <expr_stmt><expr><name pos:line="6" pos:column="3">errors<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">+=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">test_unsigned_short_formatting<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">()<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">errors<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">+=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">test_signed_short_formatting<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">()<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">errors<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">+=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">test_unsigned_int_formatting<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">()<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">errors<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">+=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">test_signed_int_formatting<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">()<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">errors<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">+=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">test_unsigned_long_formatting<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">()<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">errors<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">+=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">test_signed_long_formatting<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">()<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">errors<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">+=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">test_curl_off_t_formatting<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">()<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">errors<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></return></block></then>
  <else pos:line="22" pos:column="3">else
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

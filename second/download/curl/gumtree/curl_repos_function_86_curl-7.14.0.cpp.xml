<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_86_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">sslctxfun<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">CURL<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">curl<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">sslctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">void<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">parm<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sslctxparm<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type> <name pos:line="3" pos:column="16">p<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><operator pos:line="3" pos:column="20">(<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">sslctxparm<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator><operator pos:line="3" pos:column="33">)<pos:position pos:line="3" pos:column="34"/></operator> <name pos:line="3" pos:column="35">parm<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">SSL_CTX<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type> <name pos:line="5" pos:column="13">ctx<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><operator pos:line="5" pos:column="19">(<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">SSL_CTX<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">sslctx<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl> ;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">fprintf<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">stderr<pos:position pos:line="6" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="18">"sslctxfun start curl=%p ctx=%p parm=%p\n"<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>,
          <argument><expr><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">void<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><operator pos:line="7" pos:column="18">)<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">curl<pos:position pos:line="7" pos:column="23"/></name></expr></argument>,<argument><expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">void<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="31">)<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">ctx<pos:position pos:line="7" pos:column="35"/></name></expr></argument>,<argument><expr><operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">void<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">p<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">SSL_CTX_set_quiet_shutdown<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">ctx<pos:position pos:line="9" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="9" pos:column="34">1<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">SSL_CTX_set_cipher_list<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">ctx<pos:position pos:line="10" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="31">"RC4-MD5"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">SSL_CTX_set_mode<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">ctx<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">SSL_MODE_AUTO_RETRY<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>

<comment type="block" pos:line="13" pos:column="1">/* one might assume that the cert validaton would not fail when setting this,
   but it still does, see the error handling in the call back */</comment>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">SSL_CTX_set_verify_depth<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">ctx<pos:position pos:line="16" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">SSL_CTX_set_verify<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">ctx<pos:position pos:line="17" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="26">SSL_VERIFY_NONE<pos:position pos:line="17" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="42">NULL<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator><literal type="number" pos:line="19" pos:column="28">0x00907000L<pos:position pos:line="19" pos:column="39"/></literal></expr></cpp:if>
<comment type="block" pos:line="20" pos:column="1">/* in newer openssl versions we can set a parameter for the call back. */</comment>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">fprintf<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">stderr<pos:position pos:line="21" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="18">"This version %s of openssl does not support a parm,"<pos:position pos:line="21" pos:column="71"/></literal>
          <literal type="string" pos:line="22" pos:column="11">" setting global one\n"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">OPENSSL_VERSION_TEXT<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
  <comment type="block" pos:line="23" pos:column="3">/* this is only done to support 0.9.6 version */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">globalparm<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">parm<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>

<comment type="block" pos:line="26" pos:column="1">/* in 0.9.6 the parm is not taken */</comment>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">SSL_CTX_set_cert_verify_callback<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">ctx<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">ssl_app_verify_callback<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">parm<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">fprintf<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">stderr<pos:position pos:line="29" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="18">"sslctxfun end\n"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">CURLE_OK<pos:position pos:line="31" pos:column="18"/></name></expr> ;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

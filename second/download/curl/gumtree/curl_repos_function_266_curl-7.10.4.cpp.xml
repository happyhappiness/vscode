<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_266_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_perform<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">CURLM<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">multi_handle<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">running_handles<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name><init pos:line="3" pos:column="27">=<expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">Curl_multi<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">)<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">multi_handle<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_one_easy<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">easy<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">done<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLMcode<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">result<pos:position pos:line="6" pos:column="19"/></name><init pos:line="6" pos:column="19">=<expr><name pos:line="6" pos:column="20">CURLM_OK<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_message<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">msg<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">connected<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="10" pos:column="3">*<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">running_handles<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt> <comment type="block" pos:line="10" pos:column="25">/* bump this once for every living handle */</comment>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><call><name pos:line="12" pos:column="7">GOOD_MULTI_HANDLE<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">multi<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">easy<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator><name><name pos:line="15" pos:column="8">multi<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">easy<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">next<pos:position pos:line="15" pos:column="24"/></name></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
  <while pos:line="16" pos:column="3">while<condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">easy<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition> <block pos:line="16" pos:column="15">{

<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">MALLOCDEBUG<pos:position pos:line="18" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"HANDLE %p: State: %x\n"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>,
            <argument><expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">char<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">easy<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="27">easy<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">state<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

    <switch pos:line="23" pos:column="5">switch<condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">easy<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">state<pos:position pos:line="23" pos:column="23"/></name></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition> <block pos:line="23" pos:column="25">{
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">CURLM_STATE_INIT<pos:position pos:line="24" pos:column="26"/></name></expr>:<pos:position pos:line="24" pos:column="27"/></case>
      <comment type="block" pos:line="25" pos:column="7">/* init this transfer. */</comment>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">easy<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">result<pos:position pos:line="26" pos:column="19"/></name></name><operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator><call><name pos:line="26" pos:column="20">Curl_pretransfer<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name><name pos:line="26" pos:column="37">easy<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">easy_handle<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>

      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">CURLE_OK<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">==<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">easy<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">result<pos:position pos:line="28" pos:column="34"/></name></name></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
        <comment type="block" pos:line="29" pos:column="9">/* after init, go CONNECT */</comment>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">easy<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">state<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">CURLM_STATE_CONNECT<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">result<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="31" pos:column="42"/></name></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt> 
        
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">easy<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">easy_handle<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">state<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">.<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">used_interface<pos:position pos:line="33" pos:column="48"/></name></name> <operator pos:line="33" pos:column="49">=<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="51">Curl_if_multi<pos:position pos:line="33" pos:column="64"/></name></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">CURLM_STATE_CONNECT<pos:position pos:line="36" pos:column="29"/></name></expr>:<pos:position pos:line="36" pos:column="30"/></case>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><call><name pos:line="37" pos:column="11">Curl_global_host_cache_use<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">easy<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">easy_handle<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57"> <block pos:line="37" pos:column="58">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">easy<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">easy_handle<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">hostcache<pos:position pos:line="38" pos:column="37"/></name></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <call><name pos:line="38" pos:column="40">Curl_global_host_cache_get<pos:position pos:line="38" pos:column="66"/></name><argument_list pos:line="38" pos:column="66">()<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then>
      <else pos:line="40" pos:column="7">else <block pos:line="40" pos:column="12">{
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">multi<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">hostcache<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">==<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="33">NULL<pos:position pos:line="41" pos:column="37"/></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="11">multi<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">hostcache<pos:position pos:line="42" pos:column="27"/></name></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <call><name pos:line="42" pos:column="30">Curl_hash_alloc<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><literal type="number" pos:line="42" pos:column="46">7<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">Curl_freednsinfo<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">easy<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">easy_handle<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">hostcache<pos:position pos:line="44" pos:column="37"/></name></name> <operator pos:line="44" pos:column="38">=<pos:position pos:line="44" pos:column="39"/></operator> <name><name pos:line="44" pos:column="40">multi<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">hostcache<pos:position pos:line="44" pos:column="56"/></name></name></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="45" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="47" pos:column="7">/* Connect. We get a connection identifier filled in. */</comment>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">easy<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">result<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <call><name pos:line="48" pos:column="22">Curl_connect<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name><name pos:line="48" pos:column="35">easy<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">easy_handle<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="54">&amp;<pos:position pos:line="48" pos:column="59"/></operator><name><name pos:line="48" pos:column="55">easy<pos:position pos:line="48" pos:column="59"/></name><operator pos:line="48" pos:column="59">-&gt;<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="61">easy_conn<pos:position pos:line="48" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="72"/></expr_stmt>

      <comment type="block" pos:line="50" pos:column="7">/* after the connect has been sent off, go WAITCONNECT */</comment>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><name pos:line="51" pos:column="10">CURLE_OK<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name><name pos:line="51" pos:column="22">easy<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">result<pos:position pos:line="51" pos:column="34"/></name></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition><then pos:line="51" pos:column="35"> <block pos:line="51" pos:column="36">{
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">easy<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">state<pos:position pos:line="52" pos:column="20"/></name></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">CURLM_STATE_WAITCONNECT<pos:position pos:line="52" pos:column="46"/></name></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">result<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt> 
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>
      <break pos:line="55" pos:column="7">break;<pos:position pos:line="55" pos:column="13"/></break>

    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">CURLM_STATE_WAITCONNECT<pos:position pos:line="57" pos:column="33"/></name></expr>:<pos:position pos:line="57" pos:column="34"/></case>
      <block pos:line="58" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">bool<pos:position pos:line="59" pos:column="13"/></name></type> <name pos:line="59" pos:column="14">connected<pos:position pos:line="59" pos:column="23"/></name></decl>;<pos:position pos:line="59" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">easy<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">result<pos:position pos:line="60" pos:column="21"/></name></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <call><name pos:line="60" pos:column="24">Curl_is_connected<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name><name pos:line="60" pos:column="42">easy<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">-&gt;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="48">easy_conn<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="61" pos:column="42">easy<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">-&gt;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="48">easy_conn<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">firstsocket<pos:position pos:line="61" pos:column="70"/></name></name></expr></argument>,
                                         <argument><expr><operator pos:line="62" pos:column="42">&amp;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="43">connected<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
        <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">(<expr><name pos:line="63" pos:column="12">connected<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="11">easy<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">result<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">Curl_protocol_connect<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">(<argument><expr><name><name pos:line="64" pos:column="48">easy<pos:position pos:line="64" pos:column="52"/></name><operator pos:line="64" pos:column="52">-&gt;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="54">easy_conn<pos:position pos:line="64" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="65">NULL<pos:position pos:line="64" pos:column="69"/></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt></block></then></if>

        <if pos:line="66" pos:column="9">if<condition pos:line="66" pos:column="11">(<expr><name pos:line="66" pos:column="12">CURLE_OK<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">!=<pos:position pos:line="66" pos:column="23"/></operator> <name><name pos:line="66" pos:column="24">easy<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">result<pos:position pos:line="66" pos:column="36"/></name></name></expr>)<pos:position pos:line="66" pos:column="37"/></condition><then pos:line="66" pos:column="37"> <block pos:line="66" pos:column="38">{
          <comment type="block" pos:line="67" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="68" pos:column="11">Curl_disconnect<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name><name pos:line="68" pos:column="27">easy<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">easy_conn<pos:position pos:line="68" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt> <comment type="block" pos:line="68" pos:column="45">/* close the connection */</comment>
          <expr_stmt><expr><name><name pos:line="69" pos:column="11">easy<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">easy_conn<pos:position pos:line="69" pos:column="26"/></name></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <name pos:line="69" pos:column="29">NULL<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>           <comment type="block" pos:line="69" pos:column="45">/* no more connection */</comment>
          <break pos:line="70" pos:column="11">break;<pos:position pos:line="70" pos:column="17"/></break>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>

        <if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><name pos:line="73" pos:column="12">connected<pos:position pos:line="73" pos:column="21"/></name></expr>)<pos:position pos:line="73" pos:column="22"/></condition><then pos:line="73" pos:column="22"> <block pos:line="73" pos:column="23">{
          <comment type="block" pos:line="74" pos:column="11">/* after the connect has completed, go DO */</comment>
          <expr_stmt><expr><name><name pos:line="75" pos:column="11">easy<pos:position pos:line="75" pos:column="15"/></name><operator pos:line="75" pos:column="15">-&gt;<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="17">state<pos:position pos:line="75" pos:column="22"/></name></name> <operator pos:line="75" pos:column="23">=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">CURLM_STATE_DO<pos:position pos:line="75" pos:column="39"/></name></expr>;<pos:position pos:line="75" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><name pos:line="76" pos:column="11">result<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="76" pos:column="44"/></name></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt> 
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
      }<pos:position pos:line="78" pos:column="8"/></block>
      <break pos:line="79" pos:column="7">break;<pos:position pos:line="79" pos:column="13"/></break>

    <case pos:line="81" pos:column="5">case <expr><name pos:line="81" pos:column="10">CURLM_STATE_DO<pos:position pos:line="81" pos:column="24"/></name></expr>:<pos:position pos:line="81" pos:column="25"/></case>
      <comment type="block" pos:line="82" pos:column="7">/* Do the fetch or put request */</comment>
      <expr_stmt><expr><name><name pos:line="83" pos:column="7">easy<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">result<pos:position pos:line="83" pos:column="19"/></name></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <call><name pos:line="83" pos:column="22">Curl_do<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><operator pos:line="83" pos:column="30">&amp;<pos:position pos:line="83" pos:column="35"/></operator><name><name pos:line="83" pos:column="31">easy<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">-&gt;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="37">easy_conn<pos:position pos:line="83" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
      <if pos:line="84" pos:column="7">if<condition pos:line="84" pos:column="9">(<expr><name pos:line="84" pos:column="10">CURLE_OK<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">==<pos:position pos:line="84" pos:column="21"/></operator> <name><name pos:line="84" pos:column="22">easy<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">-&gt;<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="28">result<pos:position pos:line="84" pos:column="34"/></name></name></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{

        <comment type="block" pos:line="86" pos:column="9">/* after do, go PERFORM... or DO_MORE */</comment>
        <if pos:line="87" pos:column="9">if<condition pos:line="87" pos:column="11">(<expr><name><name pos:line="87" pos:column="12">easy<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">easy_conn<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">bits<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">.<pos:position pos:line="87" pos:column="34"/></operator><name pos:line="87" pos:column="34">do_more<pos:position pos:line="87" pos:column="41"/></name></name></expr>)<pos:position pos:line="87" pos:column="42"/></condition><then pos:line="87" pos:column="42"> <block pos:line="87" pos:column="43">{
          <comment type="block" pos:line="88" pos:column="11">/* we're supposed to do more, but we need to sit down, relax
             and wait a little while first */</comment>
          <expr_stmt><expr><name><name pos:line="90" pos:column="11">easy<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">state<pos:position pos:line="90" pos:column="22"/></name></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <name pos:line="90" pos:column="25">CURLM_STATE_DO_MORE<pos:position pos:line="90" pos:column="44"/></name></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><name pos:line="91" pos:column="11">result<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <name pos:line="91" pos:column="20">CURLM_OK<pos:position pos:line="91" pos:column="28"/></name></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then>
        <else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
          <comment type="block" pos:line="94" pos:column="11">/* we're done with the DO, now PERFORM */</comment>
          <expr_stmt><expr><name><name pos:line="95" pos:column="11">easy<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">-&gt;<pos:position pos:line="95" pos:column="20"/></operator><name pos:line="95" pos:column="17">result<pos:position pos:line="95" pos:column="23"/></name></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <call><name pos:line="95" pos:column="26">Curl_readwrite_init<pos:position pos:line="95" pos:column="45"/></name><argument_list pos:line="95" pos:column="45">(<argument><expr><name><name pos:line="95" pos:column="46">easy<pos:position pos:line="95" pos:column="50"/></name><operator pos:line="95" pos:column="50">-&gt;<pos:position pos:line="95" pos:column="55"/></operator><name pos:line="95" pos:column="52">easy_conn<pos:position pos:line="95" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="63"/></expr_stmt>
          <if pos:line="96" pos:column="11">if<condition pos:line="96" pos:column="13">(<expr><name pos:line="96" pos:column="14">CURLE_OK<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">==<pos:position pos:line="96" pos:column="25"/></operator> <name><name pos:line="96" pos:column="26">easy<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">result<pos:position pos:line="96" pos:column="38"/></name></name></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39"> <block pos:line="96" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="97" pos:column="13">easy<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">-&gt;<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="19">state<pos:position pos:line="97" pos:column="24"/></name></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <name pos:line="97" pos:column="27">CURLM_STATE_PERFORM<pos:position pos:line="97" pos:column="46"/></name></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="98" pos:column="13">result<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <name pos:line="98" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="98" pos:column="46"/></name></expr>;<pos:position pos:line="98" pos:column="47"/></expr_stmt> 
          }<pos:position pos:line="99" pos:column="12"/></block></then></if>
        }<pos:position pos:line="100" pos:column="10"/></block></else></if>
      }<pos:position pos:line="101" pos:column="8"/></block></then></if>
      <break pos:line="102" pos:column="7">break;<pos:position pos:line="102" pos:column="13"/></break>

    <case pos:line="104" pos:column="5">case <expr><name pos:line="104" pos:column="10">CURLM_STATE_DO_MORE<pos:position pos:line="104" pos:column="29"/></name></expr>:<pos:position pos:line="104" pos:column="30"/></case>
      <comment type="block" pos:line="105" pos:column="7">/*
       * First, check if we really are ready to do more.
       */</comment>
      <expr_stmt><expr><name><name pos:line="108" pos:column="7">easy<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">-&gt;<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="13">result<pos:position pos:line="108" pos:column="19"/></name></name> <operator pos:line="108" pos:column="20">=<pos:position pos:line="108" pos:column="21"/></operator> <call><name pos:line="108" pos:column="22">Curl_is_connected<pos:position pos:line="108" pos:column="39"/></name><argument_list pos:line="108" pos:column="39">(<argument><expr><name><name pos:line="108" pos:column="40">easy<pos:position pos:line="108" pos:column="44"/></name><operator pos:line="108" pos:column="44">-&gt;<pos:position pos:line="108" pos:column="49"/></operator><name pos:line="108" pos:column="46">easy_conn<pos:position pos:line="108" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="109" pos:column="40">easy<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">-&gt;<pos:position pos:line="109" pos:column="49"/></operator><name pos:line="109" pos:column="46">easy_conn<pos:position pos:line="109" pos:column="55"/></name><operator pos:line="109" pos:column="55">-&gt;<pos:position pos:line="109" pos:column="60"/></operator><name pos:line="109" pos:column="57">secondarysocket<pos:position pos:line="109" pos:column="72"/></name></name></expr></argument>,
                                       <argument><expr><operator pos:line="110" pos:column="40">&amp;<pos:position pos:line="110" pos:column="45"/></operator><name pos:line="110" pos:column="41">connected<pos:position pos:line="110" pos:column="50"/></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
      <if pos:line="111" pos:column="7">if<condition pos:line="111" pos:column="9">(<expr><name pos:line="111" pos:column="10">connected<pos:position pos:line="111" pos:column="19"/></name></expr>)<pos:position pos:line="111" pos:column="20"/></condition><then pos:line="111" pos:column="20"> <block pos:line="111" pos:column="21">{
        <comment type="block" pos:line="112" pos:column="9">/*
         * When we are connected, DO MORE and then go PERFORM
         */</comment>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">easy<pos:position pos:line="115" pos:column="13"/></name><operator pos:line="115" pos:column="13">-&gt;<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="15">result<pos:position pos:line="115" pos:column="21"/></name></name> <operator pos:line="115" pos:column="22">=<pos:position pos:line="115" pos:column="23"/></operator> <call><name pos:line="115" pos:column="24">Curl_do_more<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name><name pos:line="115" pos:column="37">easy<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">easy_conn<pos:position pos:line="115" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>

        <if pos:line="117" pos:column="9">if<condition pos:line="117" pos:column="11">(<expr><name pos:line="117" pos:column="12">CURLE_OK<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">==<pos:position pos:line="117" pos:column="23"/></operator> <name><name pos:line="117" pos:column="24">easy<pos:position pos:line="117" pos:column="28"/></name><operator pos:line="117" pos:column="28">-&gt;<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="30">result<pos:position pos:line="117" pos:column="36"/></name></name></expr>)<pos:position pos:line="117" pos:column="37"/></condition><then pos:line="117" pos:column="37">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="118" pos:column="11">easy<pos:position pos:line="118" pos:column="15"/></name><operator pos:line="118" pos:column="15">-&gt;<pos:position pos:line="118" pos:column="20"/></operator><name pos:line="118" pos:column="17">result<pos:position pos:line="118" pos:column="23"/></name></name> <operator pos:line="118" pos:column="24">=<pos:position pos:line="118" pos:column="25"/></operator> <call><name pos:line="118" pos:column="26">Curl_readwrite_init<pos:position pos:line="118" pos:column="45"/></name><argument_list pos:line="118" pos:column="45">(<argument><expr><name><name pos:line="118" pos:column="46">easy<pos:position pos:line="118" pos:column="50"/></name><operator pos:line="118" pos:column="50">-&gt;<pos:position pos:line="118" pos:column="55"/></operator><name pos:line="118" pos:column="52">easy_conn<pos:position pos:line="118" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="63"/></expr_stmt></block></then></if>

        <if pos:line="120" pos:column="9">if<condition pos:line="120" pos:column="11">(<expr><name pos:line="120" pos:column="12">CURLE_OK<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">==<pos:position pos:line="120" pos:column="23"/></operator> <name><name pos:line="120" pos:column="24">easy<pos:position pos:line="120" pos:column="28"/></name><operator pos:line="120" pos:column="28">-&gt;<pos:position pos:line="120" pos:column="33"/></operator><name pos:line="120" pos:column="30">result<pos:position pos:line="120" pos:column="36"/></name></name></expr>)<pos:position pos:line="120" pos:column="37"/></condition><then pos:line="120" pos:column="37"> <block pos:line="120" pos:column="38">{
          <expr_stmt><expr><name><name pos:line="121" pos:column="11">easy<pos:position pos:line="121" pos:column="15"/></name><operator pos:line="121" pos:column="15">-&gt;<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="17">state<pos:position pos:line="121" pos:column="22"/></name></name> <operator pos:line="121" pos:column="23">=<pos:position pos:line="121" pos:column="24"/></operator> <name pos:line="121" pos:column="25">CURLM_STATE_PERFORM<pos:position pos:line="121" pos:column="44"/></name></expr>;<pos:position pos:line="121" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><name pos:line="122" pos:column="11">result<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <name pos:line="122" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="122" pos:column="44"/></name></expr>;<pos:position pos:line="122" pos:column="45"/></expr_stmt> 
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>
      }<pos:position pos:line="124" pos:column="8"/></block></then></if>
      <break pos:line="125" pos:column="7">break;<pos:position pos:line="125" pos:column="13"/></break>

    <case pos:line="127" pos:column="5">case <expr><name pos:line="127" pos:column="10">CURLM_STATE_PERFORM<pos:position pos:line="127" pos:column="29"/></name></expr>:<pos:position pos:line="127" pos:column="30"/></case>
      <comment type="block" pos:line="128" pos:column="7">/* read/write data if it is ready to do so */</comment>
      <expr_stmt><expr><name><name pos:line="129" pos:column="7">easy<pos:position pos:line="129" pos:column="11"/></name><operator pos:line="129" pos:column="11">-&gt;<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="13">result<pos:position pos:line="129" pos:column="19"/></name></name> <operator pos:line="129" pos:column="20">=<pos:position pos:line="129" pos:column="21"/></operator> <call><name pos:line="129" pos:column="22">Curl_readwrite<pos:position pos:line="129" pos:column="36"/></name><argument_list pos:line="129" pos:column="36">(<argument><expr><name><name pos:line="129" pos:column="37">easy<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">-&gt;<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="43">easy_conn<pos:position pos:line="129" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="54">&amp;<pos:position pos:line="129" pos:column="59"/></operator><name pos:line="129" pos:column="55">done<pos:position pos:line="129" pos:column="59"/></name></expr></argument>)<pos:position pos:line="129" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="61"/></expr_stmt>

      <if pos:line="131" pos:column="7">if<condition pos:line="131" pos:column="9">(<expr><name><name pos:line="131" pos:column="10">easy<pos:position pos:line="131" pos:column="14"/></name><operator pos:line="131" pos:column="14">-&gt;<pos:position pos:line="131" pos:column="19"/></operator><name pos:line="131" pos:column="16">result<pos:position pos:line="131" pos:column="22"/></name></name></expr>)<pos:position pos:line="131" pos:column="23"/></condition><then pos:line="131" pos:column="23">  <block pos:line="131" pos:column="25">{
        <comment type="block" pos:line="132" pos:column="9">/* The transfer phase returned error, we mark the connection to get
         * closed to prevent being re-used. This is becasue we can't
         * possibly know if the connection is in a good shape or not now. */</comment>
        <expr_stmt><expr><name><name pos:line="135" pos:column="9">easy<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">easy_conn<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">-&gt;<pos:position pos:line="135" pos:column="29"/></operator><name pos:line="135" pos:column="26">bits<pos:position pos:line="135" pos:column="30"/></name><operator pos:line="135" pos:column="30">.<pos:position pos:line="135" pos:column="31"/></operator><name pos:line="135" pos:column="31">close<pos:position pos:line="135" pos:column="36"/></name></name> <operator pos:line="135" pos:column="37">=<pos:position pos:line="135" pos:column="38"/></operator> <name pos:line="135" pos:column="39">TRUE<pos:position pos:line="135" pos:column="43"/></name></expr>;<pos:position pos:line="135" pos:column="44"/></expr_stmt>

        <if pos:line="137" pos:column="9">if<condition pos:line="137" pos:column="11">(<expr><operator pos:line="137" pos:column="12">-<pos:position pos:line="137" pos:column="13"/></operator><literal type="number" pos:line="137" pos:column="13">1<pos:position pos:line="137" pos:column="14"/></literal> <operator pos:line="137" pos:column="15">!=<pos:position pos:line="137" pos:column="17"/></operator><name><name pos:line="137" pos:column="17">easy<pos:position pos:line="137" pos:column="21"/></name><operator pos:line="137" pos:column="21">-&gt;<pos:position pos:line="137" pos:column="26"/></operator><name pos:line="137" pos:column="23">easy_conn<pos:position pos:line="137" pos:column="32"/></name><operator pos:line="137" pos:column="32">-&gt;<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="34">secondarysocket<pos:position pos:line="137" pos:column="49"/></name></name></expr>)<pos:position pos:line="137" pos:column="50"/></condition><then pos:line="137" pos:column="50"> <block pos:line="137" pos:column="51">{
          <comment type="block" pos:line="138" pos:column="11">/* if we failed anywhere, we must clean up the secondary socket if
             it was used */</comment>
          <expr_stmt><expr><call><name pos:line="140" pos:column="11">sclose<pos:position pos:line="140" pos:column="17"/></name><argument_list pos:line="140" pos:column="17">(<argument><expr><name><name pos:line="140" pos:column="18">easy<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">easy_conn<pos:position pos:line="140" pos:column="33"/></name><operator pos:line="140" pos:column="33">-&gt;<pos:position pos:line="140" pos:column="38"/></operator><name pos:line="140" pos:column="35">secondarysocket<pos:position pos:line="140" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="141" pos:column="11">easy<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">-&gt;<pos:position pos:line="141" pos:column="20"/></operator><name pos:line="141" pos:column="17">easy_conn<pos:position pos:line="141" pos:column="26"/></name><operator pos:line="141" pos:column="26">-&gt;<pos:position pos:line="141" pos:column="31"/></operator><name pos:line="141" pos:column="28">secondarysocket<pos:position pos:line="141" pos:column="43"/></name></name><operator pos:line="141" pos:column="43">=<pos:position pos:line="141" pos:column="44"/></operator><operator pos:line="141" pos:column="44">-<pos:position pos:line="141" pos:column="45"/></operator><literal type="number" pos:line="141" pos:column="45">1<pos:position pos:line="141" pos:column="46"/></literal></expr>;<pos:position pos:line="141" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">Curl_posttransfer<pos:position pos:line="143" pos:column="26"/></name><argument_list pos:line="143" pos:column="26">(<argument><expr><name><name pos:line="143" pos:column="27">easy<pos:position pos:line="143" pos:column="31"/></name><operator pos:line="143" pos:column="31">-&gt;<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="33">easy_handle<pos:position pos:line="143" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">Curl_done<pos:position pos:line="144" pos:column="18"/></name><argument_list pos:line="144" pos:column="18">(<argument><expr><name><name pos:line="144" pos:column="19">easy<pos:position pos:line="144" pos:column="23"/></name><operator pos:line="144" pos:column="23">-&gt;<pos:position pos:line="144" pos:column="28"/></operator><name pos:line="144" pos:column="25">easy_conn<pos:position pos:line="144" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="145" pos:column="8"/></block></then>

      <comment type="block" pos:line="147" pos:column="7">/* after the transfer is done, go DONE */</comment>
      <elseif pos:line="148" pos:column="7">else <if pos:line="148" pos:column="12">if<condition pos:line="148" pos:column="14">(<expr><name pos:line="148" pos:column="15">TRUE<pos:position pos:line="148" pos:column="19"/></name> <operator pos:line="148" pos:column="20">==<pos:position pos:line="148" pos:column="22"/></operator> <name pos:line="148" pos:column="23">done<pos:position pos:line="148" pos:column="27"/></name></expr>)<pos:position pos:line="148" pos:column="28"/></condition><then pos:line="148" pos:column="28"> <block pos:line="148" pos:column="29">{

        <comment type="block" pos:line="150" pos:column="9">/* call this even if the readwrite function returned error */</comment>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">Curl_posttransfer<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name><name pos:line="151" pos:column="27">easy<pos:position pos:line="151" pos:column="31"/></name><operator pos:line="151" pos:column="31">-&gt;<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="33">easy_handle<pos:position pos:line="151" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="46"/></expr_stmt>

        <comment type="block" pos:line="153" pos:column="9">/* When we follow redirects, must to go back to the CONNECT state */</comment>
        <if pos:line="154" pos:column="9">if<condition pos:line="154" pos:column="11">(<expr><name><name pos:line="154" pos:column="12">easy<pos:position pos:line="154" pos:column="16"/></name><operator pos:line="154" pos:column="16">-&gt;<pos:position pos:line="154" pos:column="21"/></operator><name pos:line="154" pos:column="18">easy_conn<pos:position pos:line="154" pos:column="27"/></name><operator pos:line="154" pos:column="27">-&gt;<pos:position pos:line="154" pos:column="32"/></operator><name pos:line="154" pos:column="29">newurl<pos:position pos:line="154" pos:column="35"/></name></name></expr>)<pos:position pos:line="154" pos:column="36"/></condition><then pos:line="154" pos:column="36"> <block pos:line="154" pos:column="37">{
          <expr_stmt><expr><name><name pos:line="155" pos:column="11">easy<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">-&gt;<pos:position pos:line="155" pos:column="20"/></operator><name pos:line="155" pos:column="17">result<pos:position pos:line="155" pos:column="23"/></name></name> <operator pos:line="155" pos:column="24">=<pos:position pos:line="155" pos:column="25"/></operator> <call><name pos:line="155" pos:column="26">Curl_follow<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><name><name pos:line="155" pos:column="38">easy<pos:position pos:line="155" pos:column="42"/></name><operator pos:line="155" pos:column="42">-&gt;<pos:position pos:line="155" pos:column="47"/></operator><name pos:line="155" pos:column="44">easy_handle<pos:position pos:line="155" pos:column="55"/></name></name></expr></argument>,
                                     <argument><expr><call><name pos:line="156" pos:column="38">strdup<pos:position pos:line="156" pos:column="44"/></name><argument_list pos:line="156" pos:column="44">(<argument><expr><name><name pos:line="156" pos:column="45">easy<pos:position pos:line="156" pos:column="49"/></name><operator pos:line="156" pos:column="49">-&gt;<pos:position pos:line="156" pos:column="54"/></operator><name pos:line="156" pos:column="51">easy_conn<pos:position pos:line="156" pos:column="60"/></name><operator pos:line="156" pos:column="60">-&gt;<pos:position pos:line="156" pos:column="65"/></operator><name pos:line="156" pos:column="62">newurl<pos:position pos:line="156" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="71"/></expr_stmt>
          <if pos:line="157" pos:column="11">if<condition pos:line="157" pos:column="13">(<expr><name pos:line="157" pos:column="14">CURLE_OK<pos:position pos:line="157" pos:column="22"/></name> <operator pos:line="157" pos:column="23">==<pos:position pos:line="157" pos:column="25"/></operator> <name><name pos:line="157" pos:column="26">easy<pos:position pos:line="157" pos:column="30"/></name><operator pos:line="157" pos:column="30">-&gt;<pos:position pos:line="157" pos:column="35"/></operator><name pos:line="157" pos:column="32">result<pos:position pos:line="157" pos:column="38"/></name></name></expr>)<pos:position pos:line="157" pos:column="39"/></condition><then pos:line="157" pos:column="39"> <block pos:line="157" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="158" pos:column="13">easy<pos:position pos:line="158" pos:column="17"/></name><operator pos:line="158" pos:column="17">-&gt;<pos:position pos:line="158" pos:column="22"/></operator><name pos:line="158" pos:column="19">state<pos:position pos:line="158" pos:column="24"/></name></name> <operator pos:line="158" pos:column="25">=<pos:position pos:line="158" pos:column="26"/></operator> <name pos:line="158" pos:column="27">CURLM_STATE_CONNECT<pos:position pos:line="158" pos:column="46"/></name></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="159" pos:column="13">result<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">=<pos:position pos:line="159" pos:column="21"/></operator> <name pos:line="159" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="159" pos:column="46"/></name></expr>;<pos:position pos:line="159" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="160" pos:column="12"/></block></then></if>
        }<pos:position pos:line="161" pos:column="10"/></block></then>
        <else pos:line="162" pos:column="9">else <block pos:line="162" pos:column="14">{
          <expr_stmt><expr><name><name pos:line="163" pos:column="11">easy<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">-&gt;<pos:position pos:line="163" pos:column="20"/></operator><name pos:line="163" pos:column="17">state<pos:position pos:line="163" pos:column="22"/></name></name> <operator pos:line="163" pos:column="23">=<pos:position pos:line="163" pos:column="24"/></operator> <name pos:line="163" pos:column="25">CURLM_STATE_DONE<pos:position pos:line="163" pos:column="41"/></name></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>
          <expr_stmt><expr><name pos:line="164" pos:column="11">result<pos:position pos:line="164" pos:column="17"/></name> <operator pos:line="164" pos:column="18">=<pos:position pos:line="164" pos:column="19"/></operator> <name pos:line="164" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="164" pos:column="44"/></name></expr>;<pos:position pos:line="164" pos:column="45"/></expr_stmt> 
        }<pos:position pos:line="165" pos:column="10"/></block></else></if>
      }<pos:position pos:line="166" pos:column="8"/></block></then></if></elseif></if>
      <break pos:line="167" pos:column="7">break;<pos:position pos:line="167" pos:column="13"/></break>
    <case pos:line="168" pos:column="5">case <expr><name pos:line="168" pos:column="10">CURLM_STATE_DONE<pos:position pos:line="168" pos:column="26"/></name></expr>:<pos:position pos:line="168" pos:column="27"/></case>
      <comment type="block" pos:line="169" pos:column="7">/* post-transfer command */</comment>
      <expr_stmt><expr><name><name pos:line="170" pos:column="7">easy<pos:position pos:line="170" pos:column="11"/></name><operator pos:line="170" pos:column="11">-&gt;<pos:position pos:line="170" pos:column="16"/></operator><name pos:line="170" pos:column="13">result<pos:position pos:line="170" pos:column="19"/></name></name> <operator pos:line="170" pos:column="20">=<pos:position pos:line="170" pos:column="21"/></operator> <call><name pos:line="170" pos:column="22">Curl_done<pos:position pos:line="170" pos:column="31"/></name><argument_list pos:line="170" pos:column="31">(<argument><expr><name><name pos:line="170" pos:column="32">easy<pos:position pos:line="170" pos:column="36"/></name><operator pos:line="170" pos:column="36">-&gt;<pos:position pos:line="170" pos:column="41"/></operator><name pos:line="170" pos:column="38">easy_conn<pos:position pos:line="170" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="49"/></expr_stmt>

      <comment type="block" pos:line="172" pos:column="7">/* after we have DONE what we're supposed to do, go COMPLETED, and
         it doesn't matter what the Curl_done() returned! */</comment>
      <expr_stmt><expr><name><name pos:line="174" pos:column="7">easy<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">-&gt;<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="13">state<pos:position pos:line="174" pos:column="18"/></name></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <name pos:line="174" pos:column="21">CURLM_STATE_COMPLETED<pos:position pos:line="174" pos:column="42"/></name></expr>;<pos:position pos:line="174" pos:column="43"/></expr_stmt>
      <break pos:line="175" pos:column="7">break;<pos:position pos:line="175" pos:column="13"/></break>

    <case pos:line="177" pos:column="5">case <expr><name pos:line="177" pos:column="10">CURLM_STATE_COMPLETED<pos:position pos:line="177" pos:column="31"/></name></expr>:<pos:position pos:line="177" pos:column="32"/></case>
      <comment type="block" pos:line="178" pos:column="7">/* this is a completed transfer, it is likely to still be connected */</comment>

      <comment type="block" pos:line="180" pos:column="7">/* This node should be delinked from the list now and we should post
         an information message that we are complete. */</comment>
      <break pos:line="182" pos:column="7">break;<pos:position pos:line="182" pos:column="13"/></break>
    <default pos:line="183" pos:column="5">default:<pos:position pos:line="183" pos:column="13"/></default>
      <return pos:line="184" pos:column="7">return <expr><name pos:line="184" pos:column="14">CURLM_INTERNAL_ERROR<pos:position pos:line="184" pos:column="34"/></name></expr>;<pos:position pos:line="184" pos:column="35"/></return>
    }<pos:position pos:line="185" pos:column="6"/></block></switch>

    <if pos:line="187" pos:column="5">if<condition pos:line="187" pos:column="7">(<expr><name pos:line="187" pos:column="8">CURLM_STATE_COMPLETED<pos:position pos:line="187" pos:column="29"/></name> <operator pos:line="187" pos:column="30">!=<pos:position pos:line="187" pos:column="32"/></operator> <name><name pos:line="187" pos:column="33">easy<pos:position pos:line="187" pos:column="37"/></name><operator pos:line="187" pos:column="37">-&gt;<pos:position pos:line="187" pos:column="42"/></operator><name pos:line="187" pos:column="39">state<pos:position pos:line="187" pos:column="44"/></name></name></expr>)<pos:position pos:line="187" pos:column="45"/></condition><then pos:line="187" pos:column="45"> <block pos:line="187" pos:column="46">{
      <if pos:line="188" pos:column="7">if<condition pos:line="188" pos:column="9">(<expr><name pos:line="188" pos:column="10">CURLE_OK<pos:position pos:line="188" pos:column="18"/></name> <operator pos:line="188" pos:column="19">!=<pos:position pos:line="188" pos:column="21"/></operator> <name><name pos:line="188" pos:column="22">easy<pos:position pos:line="188" pos:column="26"/></name><operator pos:line="188" pos:column="26">-&gt;<pos:position pos:line="188" pos:column="31"/></operator><name pos:line="188" pos:column="28">result<pos:position pos:line="188" pos:column="34"/></name></name></expr>)<pos:position pos:line="188" pos:column="35"/></condition><then pos:line="188" pos:column="35">
        <comment type="block" pos:line="189" pos:column="9">/*
         * If an error was returned, and we aren't in completed state now,
         * then we go to completed and consider this transfer aborted.  */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="192" pos:column="9">easy<pos:position pos:line="192" pos:column="13"/></name><operator pos:line="192" pos:column="13">-&gt;<pos:position pos:line="192" pos:column="18"/></operator><name pos:line="192" pos:column="15">state<pos:position pos:line="192" pos:column="20"/></name></name> <operator pos:line="192" pos:column="21">=<pos:position pos:line="192" pos:column="22"/></operator> <name pos:line="192" pos:column="23">CURLM_STATE_COMPLETED<pos:position pos:line="192" pos:column="44"/></name></expr>;<pos:position pos:line="192" pos:column="45"/></expr_stmt></block></then>
      <else pos:line="193" pos:column="7">else
        <comment type="block" pos:line="194" pos:column="9">/* this one still lives! */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="195" pos:column="9">(<pos:position pos:line="195" pos:column="10"/></operator><operator pos:line="195" pos:column="10">*<pos:position pos:line="195" pos:column="11"/></operator><name pos:line="195" pos:column="11">running_handles<pos:position pos:line="195" pos:column="26"/></name><operator pos:line="195" pos:column="26">)<pos:position pos:line="195" pos:column="27"/></operator><operator pos:line="195" pos:column="27">++<pos:position pos:line="195" pos:column="29"/></operator></expr>;<pos:position pos:line="195" pos:column="30"/></expr_stmt></block></else></if>
    }<pos:position pos:line="196" pos:column="6"/></block></then></if>

    <if pos:line="198" pos:column="5">if <condition pos:line="198" pos:column="8">(<expr><operator pos:line="198" pos:column="9">(<pos:position pos:line="198" pos:column="10"/></operator><name pos:line="198" pos:column="10">CURLM_STATE_COMPLETED<pos:position pos:line="198" pos:column="31"/></name> <operator pos:line="198" pos:column="32">==<pos:position pos:line="198" pos:column="34"/></operator> <name><name pos:line="198" pos:column="35">easy<pos:position pos:line="198" pos:column="39"/></name><operator pos:line="198" pos:column="39">-&gt;<pos:position pos:line="198" pos:column="44"/></operator><name pos:line="198" pos:column="41">state<pos:position pos:line="198" pos:column="46"/></name></name><operator pos:line="198" pos:column="46">)<pos:position pos:line="198" pos:column="47"/></operator> <operator pos:line="198" pos:column="48">&amp;&amp;<pos:position pos:line="198" pos:column="58"/></operator> <operator pos:line="198" pos:column="51">!<pos:position pos:line="198" pos:column="52"/></operator><name><name pos:line="198" pos:column="52">easy<pos:position pos:line="198" pos:column="56"/></name><operator pos:line="198" pos:column="56">-&gt;<pos:position pos:line="198" pos:column="61"/></operator><name pos:line="198" pos:column="58">msg<pos:position pos:line="198" pos:column="61"/></name></name></expr>)<pos:position pos:line="198" pos:column="62"/></condition><then pos:line="198" pos:column="62"> <block pos:line="198" pos:column="63">{
      <comment type="block" pos:line="199" pos:column="7">/* clear out the usage of the shared DNS cache */</comment>
      <expr_stmt><expr><name><name pos:line="200" pos:column="7">easy<pos:position pos:line="200" pos:column="11"/></name><operator pos:line="200" pos:column="11">-&gt;<pos:position pos:line="200" pos:column="16"/></operator><name pos:line="200" pos:column="13">easy_handle<pos:position pos:line="200" pos:column="24"/></name><operator pos:line="200" pos:column="24">-&gt;<pos:position pos:line="200" pos:column="29"/></operator><name pos:line="200" pos:column="26">hostcache<pos:position pos:line="200" pos:column="35"/></name></name> <operator pos:line="200" pos:column="36">=<pos:position pos:line="200" pos:column="37"/></operator> <name pos:line="200" pos:column="38">NULL<pos:position pos:line="200" pos:column="42"/></name></expr>;<pos:position pos:line="200" pos:column="43"/></expr_stmt>

      <comment type="block" pos:line="202" pos:column="7">/* now add a node to the Curl_message linked list with this info */</comment>
      <expr_stmt><expr><name pos:line="203" pos:column="7">msg<pos:position pos:line="203" pos:column="10"/></name> <operator pos:line="203" pos:column="11">=<pos:position pos:line="203" pos:column="12"/></operator> <operator pos:line="203" pos:column="13">(<pos:position pos:line="203" pos:column="14"/></operator>struct <name pos:line="203" pos:column="21">Curl_message<pos:position pos:line="203" pos:column="33"/></name> <operator pos:line="203" pos:column="34">*<pos:position pos:line="203" pos:column="35"/></operator><operator pos:line="203" pos:column="35">)<pos:position pos:line="203" pos:column="36"/></operator><call><name pos:line="203" pos:column="36">malloc<pos:position pos:line="203" pos:column="42"/></name><argument_list pos:line="203" pos:column="42">(<argument><expr><sizeof pos:line="203" pos:column="43">sizeof<argument_list pos:line="203" pos:column="49">(<argument><expr pos:line="203" pos:column="50">struct <name pos:line="203" pos:column="57">Curl_message<pos:position pos:line="203" pos:column="69"/></name></expr></argument>)<pos:position pos:line="203" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="203" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="72"/></expr_stmt>

      <if pos:line="205" pos:column="7">if<condition pos:line="205" pos:column="9">(<expr><operator pos:line="205" pos:column="10">!<pos:position pos:line="205" pos:column="11"/></operator><name pos:line="205" pos:column="11">msg<pos:position pos:line="205" pos:column="14"/></name></expr>)<pos:position pos:line="205" pos:column="15"/></condition><then pos:line="205" pos:column="15">
        <block type="pseudo"><return pos:line="206" pos:column="9">return <expr><name pos:line="206" pos:column="16">CURLM_OUT_OF_MEMORY<pos:position pos:line="206" pos:column="35"/></name></expr>;<pos:position pos:line="206" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><name><name pos:line="208" pos:column="7">msg<pos:position pos:line="208" pos:column="10"/></name><operator pos:line="208" pos:column="10">-&gt;<pos:position pos:line="208" pos:column="15"/></operator><name pos:line="208" pos:column="12">extmsg<pos:position pos:line="208" pos:column="18"/></name><operator pos:line="208" pos:column="18">.<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="19">msg<pos:position pos:line="208" pos:column="22"/></name></name> <operator pos:line="208" pos:column="23">=<pos:position pos:line="208" pos:column="24"/></operator> <name pos:line="208" pos:column="25">CURLMSG_DONE<pos:position pos:line="208" pos:column="37"/></name></expr>;<pos:position pos:line="208" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="209" pos:column="7">msg<pos:position pos:line="209" pos:column="10"/></name><operator pos:line="209" pos:column="10">-&gt;<pos:position pos:line="209" pos:column="15"/></operator><name pos:line="209" pos:column="12">extmsg<pos:position pos:line="209" pos:column="18"/></name><operator pos:line="209" pos:column="18">.<pos:position pos:line="209" pos:column="19"/></operator><name pos:line="209" pos:column="19">easy_handle<pos:position pos:line="209" pos:column="30"/></name></name> <operator pos:line="209" pos:column="31">=<pos:position pos:line="209" pos:column="32"/></operator> <name><name pos:line="209" pos:column="33">easy<pos:position pos:line="209" pos:column="37"/></name><operator pos:line="209" pos:column="37">-&gt;<pos:position pos:line="209" pos:column="42"/></operator><name pos:line="209" pos:column="39">easy_handle<pos:position pos:line="209" pos:column="50"/></name></name></expr>;<pos:position pos:line="209" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="210" pos:column="7">msg<pos:position pos:line="210" pos:column="10"/></name><operator pos:line="210" pos:column="10">-&gt;<pos:position pos:line="210" pos:column="15"/></operator><name pos:line="210" pos:column="12">extmsg<pos:position pos:line="210" pos:column="18"/></name><operator pos:line="210" pos:column="18">.<pos:position pos:line="210" pos:column="19"/></operator><name pos:line="210" pos:column="19">data<pos:position pos:line="210" pos:column="23"/></name><operator pos:line="210" pos:column="23">.<pos:position pos:line="210" pos:column="24"/></operator><name pos:line="210" pos:column="24">result<pos:position pos:line="210" pos:column="30"/></name></name> <operator pos:line="210" pos:column="31">=<pos:position pos:line="210" pos:column="32"/></operator> <name><name pos:line="210" pos:column="33">easy<pos:position pos:line="210" pos:column="37"/></name><operator pos:line="210" pos:column="37">-&gt;<pos:position pos:line="210" pos:column="42"/></operator><name pos:line="210" pos:column="39">result<pos:position pos:line="210" pos:column="45"/></name></name></expr>;<pos:position pos:line="210" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="211" pos:column="7">msg<pos:position pos:line="211" pos:column="10"/></name><operator pos:line="211" pos:column="10">-&gt;<pos:position pos:line="211" pos:column="15"/></operator><name pos:line="211" pos:column="12">next<pos:position pos:line="211" pos:column="16"/></name></name><operator pos:line="211" pos:column="16">=<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">NULL<pos:position pos:line="211" pos:column="21"/></name></expr>;<pos:position pos:line="211" pos:column="22"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="213" pos:column="7">easy<pos:position pos:line="213" pos:column="11"/></name><operator pos:line="213" pos:column="11">-&gt;<pos:position pos:line="213" pos:column="16"/></operator><name pos:line="213" pos:column="13">msg<pos:position pos:line="213" pos:column="16"/></name></name> <operator pos:line="213" pos:column="17">=<pos:position pos:line="213" pos:column="18"/></operator> <name pos:line="213" pos:column="19">msg<pos:position pos:line="213" pos:column="22"/></name></expr>;<pos:position pos:line="213" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="214" pos:column="7">easy<pos:position pos:line="214" pos:column="11"/></name><operator pos:line="214" pos:column="11">-&gt;<pos:position pos:line="214" pos:column="16"/></operator><name pos:line="214" pos:column="13">msg_num<pos:position pos:line="214" pos:column="20"/></name></name> <operator pos:line="214" pos:column="21">=<pos:position pos:line="214" pos:column="22"/></operator> <literal type="number" pos:line="214" pos:column="23">1<pos:position pos:line="214" pos:column="24"/></literal></expr>;<pos:position pos:line="214" pos:column="25"/></expr_stmt> <comment type="block" pos:line="214" pos:column="26">/* there is one unread message here */</comment>

      <expr_stmt><expr><name><name pos:line="216" pos:column="7">multi<pos:position pos:line="216" pos:column="12"/></name><operator pos:line="216" pos:column="12">-&gt;<pos:position pos:line="216" pos:column="17"/></operator><name pos:line="216" pos:column="14">num_msgs<pos:position pos:line="216" pos:column="22"/></name></name><operator pos:line="216" pos:column="22">++<pos:position pos:line="216" pos:column="24"/></operator></expr>;<pos:position pos:line="216" pos:column="25"/></expr_stmt> <comment type="block" pos:line="216" pos:column="26">/* increase message counter */</comment>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="219" pos:column="5">easy<pos:position pos:line="219" pos:column="9"/></name> <operator pos:line="219" pos:column="10">=<pos:position pos:line="219" pos:column="11"/></operator> <name><name pos:line="219" pos:column="12">easy<pos:position pos:line="219" pos:column="16"/></name><operator pos:line="219" pos:column="16">-&gt;<pos:position pos:line="219" pos:column="21"/></operator><name pos:line="219" pos:column="18">next<pos:position pos:line="219" pos:column="22"/></name></name></expr>;<pos:position pos:line="219" pos:column="23"/></expr_stmt> <comment type="block" pos:line="219" pos:column="24">/* operate on next handle */</comment>
  }<pos:position pos:line="220" pos:column="4"/></block></while>

  <return pos:line="222" pos:column="3">return <expr><name pos:line="222" pos:column="10">result<pos:position pos:line="222" pos:column="16"/></name></expr>;<pos:position pos:line="222" pos:column="17"/></return>
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_30.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_transfer<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">CURL<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">curl<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">UrlData<pos:position pos:line="4" pos:column="17"/></name></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">data<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">curl<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">connectdata<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">c_connect<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">pgrsStartNow<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">data<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

  <do pos:line="9" pos:column="3">do <block pos:line="9" pos:column="6">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">res<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">curl_connect<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">curl<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">CURLconnect<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></operator><operator pos:line="10" pos:column="44">*<pos:position pos:line="10" pos:column="45"/></operator><operator pos:line="10" pos:column="45">)<pos:position pos:line="10" pos:column="46"/></operator><operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="47">c_connect<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name pos:line="11" pos:column="8">res<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">CURLE_OK<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
      <expr_stmt><expr><name pos:line="12" pos:column="7">res<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">curl_do<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">c_connect<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
      <if pos:line="13" pos:column="7">if<condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">res<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">CURLE_OK<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">res<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">_Transfer<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">c_connect<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt> <comment type="block" pos:line="14" pos:column="37">/* now fetch that URL please */</comment>
        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">res<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">CURLE_OK<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
          <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="11">res<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">curl_done<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">c_connect<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt></block></then></if>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>

      <if pos:line="19" pos:column="7">if<condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">res<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">CURLE_OK<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="28">&amp;&amp;<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="31">data<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">newurl<pos:position pos:line="19" pos:column="43"/></name></name></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44"> <block pos:line="19" pos:column="45">{
        <comment type="block" pos:line="20" pos:column="9">/* Location: redirect */</comment>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">prot<pos:position pos:line="21" pos:column="18"/></name><index pos:line="21" pos:column="18">[<expr><literal type="number" pos:line="21" pos:column="19">16<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name></type> <name><name pos:line="22" pos:column="14">path<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><name pos:line="22" pos:column="19">URL_MAX_LENGTH<pos:position pos:line="22" pos:column="33"/></name></expr>]<pos:position pos:line="22" pos:column="34"/></index></name></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>

        <comment type="block" pos:line="24" pos:column="9">/* mark the next request as a followed location: */</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">data<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">bits<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">this_is_a_follow<pos:position pos:line="25" pos:column="36"/></name></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="39">TRUE<pos:position pos:line="25" pos:column="43"/></name></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>

        <if pos:line="27" pos:column="9">if<condition pos:line="27" pos:column="11">(<expr><name><name pos:line="27" pos:column="12">data<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">bits<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">http_auto_referer<pos:position pos:line="27" pos:column="40"/></name></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41"> <block pos:line="27" pos:column="42">{
          <comment type="block" pos:line="28" pos:column="11">/* We are asked to automatically set the previous URL as the
             referer when we get the next URL. We pick the -&gt;url field,
             which may or may not be 100% correct */</comment>

          <if pos:line="32" pos:column="11">if<condition pos:line="32" pos:column="13">(<expr><name><name pos:line="32" pos:column="14">data<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">free_referer<pos:position pos:line="32" pos:column="32"/></name></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33"> <block pos:line="32" pos:column="34">{
            <comment type="block" pos:line="33" pos:column="13">/* If we already have an allocated referer, free this first */</comment>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">free<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name><name pos:line="34" pos:column="18">data<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">referer<pos:position pos:line="34" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
          }<pos:position pos:line="35" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">referer<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">strdup<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><name pos:line="37" pos:column="34">data<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">url<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="38" pos:column="11">data<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">free_referer<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">TRUE<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt> <comment type="block" pos:line="38" pos:column="38">/* yes, free this later */</comment>
          <expr_stmt><expr><name><name pos:line="39" pos:column="11">data<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">bits<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">http_set_referer<pos:position pos:line="39" pos:column="38"/></name></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <name pos:line="39" pos:column="41">TRUE<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt> <comment type="block" pos:line="39" pos:column="47">/* might have been false */</comment>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><literal type="number" pos:line="42" pos:column="12">2<pos:position pos:line="42" pos:column="13"/></literal> <operator pos:line="42" pos:column="14">!=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">sscanf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name><name pos:line="42" pos:column="24">data<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">newurl<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="38">"%15[^:]://%"<pos:position pos:line="42" pos:column="51"/></literal> <name pos:line="42" pos:column="52">URL_MAX_LENGTH_TXT<pos:position pos:line="42" pos:column="70"/></name>
                       <literal type="string" pos:line="43" pos:column="24">"s"<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="29">prot<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">path<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> <block pos:line="43" pos:column="42">{
          <comment type="block" format="doxygen" pos:line="44" pos:column="11">/***
           *DANG* this is an RFC 2068 violation. The URL is supposed
           to be absolute and this doesn't seem to be that!
           ***
           Instead, we have to TRY to append this new path to the old URL
           to the right of the host part. Oh crap, this is doomed to cause
           problems in the future...
          */</comment>
          <decl_stmt><decl><type><name pos:line="52" pos:column="11">char<pos:position pos:line="52" pos:column="15"/></name> <modifier pos:line="52" pos:column="16">*<pos:position pos:line="52" pos:column="17"/></modifier></type><name pos:line="52" pos:column="17">protsep<pos:position pos:line="52" pos:column="24"/></name></decl>;<pos:position pos:line="52" pos:column="25"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="53" pos:column="11">char<pos:position pos:line="53" pos:column="15"/></name> <modifier pos:line="53" pos:column="16">*<pos:position pos:line="53" pos:column="17"/></modifier></type><name pos:line="53" pos:column="17">pathsep<pos:position pos:line="53" pos:column="24"/></name></decl>;<pos:position pos:line="53" pos:column="25"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="54" pos:column="11">char<pos:position pos:line="54" pos:column="15"/></name> <modifier pos:line="54" pos:column="16">*<pos:position pos:line="54" pos:column="17"/></modifier></type><name pos:line="54" pos:column="17">newest<pos:position pos:line="54" pos:column="23"/></name></decl>;<pos:position pos:line="54" pos:column="24"/></decl_stmt>

          <comment type="block" pos:line="56" pos:column="11">/* protsep points to the start of the host name */</comment>
          <expr_stmt><expr><name pos:line="57" pos:column="11">protsep<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator><call><name pos:line="57" pos:column="19">strstr<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name><name pos:line="57" pos:column="26">data<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">-&gt;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="32">url<pos:position pos:line="57" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="37">"//"<pos:position pos:line="57" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
          <if pos:line="58" pos:column="11">if<condition pos:line="58" pos:column="13">(<expr><operator pos:line="58" pos:column="14">!<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">protsep<pos:position pos:line="58" pos:column="22"/></name></expr>)<pos:position pos:line="58" pos:column="23"/></condition><then pos:line="58" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="13">protsep<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator><name><name pos:line="59" pos:column="21">data<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">url<pos:position pos:line="59" pos:column="30"/></name></name></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt></block></then>
          <else pos:line="60" pos:column="11">else <block pos:line="60" pos:column="16">{
            <comment type="block" pos:line="61" pos:column="13">/* TBD: set the port with curl_setopt() */</comment>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">data<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">port<pos:position pos:line="62" pos:column="23"/></name></name><operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator><literal type="number" pos:line="62" pos:column="24">0<pos:position pos:line="62" pos:column="25"/></literal></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt> <comment type="block" pos:line="62" pos:column="27">/* we got a full URL and then we should reset the
                             port number here to re-initiate it later */</comment>
            <expr_stmt><expr><name pos:line="64" pos:column="13">protsep<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">+=<pos:position pos:line="64" pos:column="22"/></operator><literal type="number" pos:line="64" pos:column="22">2<pos:position pos:line="64" pos:column="23"/></literal></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt> <comment type="block" pos:line="64" pos:column="25">/* pass the slashes */</comment>
          }<pos:position pos:line="65" pos:column="12"/></block></else></if>

          <if pos:line="67" pos:column="11">if<condition pos:line="67" pos:column="13">(<expr><literal type="char" pos:line="67" pos:column="14">'/'<pos:position pos:line="67" pos:column="17"/></literal> <operator pos:line="67" pos:column="18">!=<pos:position pos:line="67" pos:column="20"/></operator> <name><name pos:line="67" pos:column="21">data<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">-&gt;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="27">newurl<pos:position pos:line="67" pos:column="33"/></name><index pos:line="67" pos:column="33">[<expr><literal type="number" pos:line="67" pos:column="34">0<pos:position pos:line="67" pos:column="35"/></literal></expr>]<pos:position pos:line="67" pos:column="36"/></index></name></expr>)<pos:position pos:line="67" pos:column="37"/></condition><then pos:line="67" pos:column="37"> <block pos:line="67" pos:column="38">{
            <comment type="block" pos:line="68" pos:column="13">/* First we need to find out if there's a ?-letter in the URL,
               and cut it and the right-side of that off */</comment>
            <expr_stmt><expr><name pos:line="70" pos:column="13">pathsep<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">strrchr<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">protsep<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="40">'?'<pos:position pos:line="70" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>
            <if pos:line="71" pos:column="13">if<condition pos:line="71" pos:column="15">(<expr><name pos:line="71" pos:column="16">pathsep<pos:position pos:line="71" pos:column="23"/></name></expr>)<pos:position pos:line="71" pos:column="24"/></condition><then pos:line="71" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="15">*<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">pathsep<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">=<pos:position pos:line="72" pos:column="24"/></operator><literal type="number" pos:line="72" pos:column="24">0<pos:position pos:line="72" pos:column="25"/></literal></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="74" pos:column="13">/* we have a relative path to append to the last slash if
               there's one available */</comment>
            <expr_stmt><expr><name pos:line="76" pos:column="13">pathsep<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <call><name pos:line="76" pos:column="23">strrchr<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">protsep<pos:position pos:line="76" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="76" pos:column="40">'/'<pos:position pos:line="76" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
            <if pos:line="77" pos:column="13">if<condition pos:line="77" pos:column="15">(<expr><name pos:line="77" pos:column="16">pathsep<pos:position pos:line="77" pos:column="23"/></name></expr>)<pos:position pos:line="77" pos:column="24"/></condition><then pos:line="77" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="78" pos:column="15">*<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="16">pathsep<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator><literal type="number" pos:line="78" pos:column="24">0<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt></block></then></if>
          }<pos:position pos:line="79" pos:column="12"/></block></then>
          <else pos:line="80" pos:column="11">else <block pos:line="80" pos:column="16">{
            <comment type="block" pos:line="81" pos:column="13">/* We got a new absolute path for this server, cut off from the
               first slash */</comment>
            <expr_stmt><expr><name pos:line="83" pos:column="13">pathsep<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">strchr<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">protsep<pos:position pos:line="83" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="83" pos:column="39">'/'<pos:position pos:line="83" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="44"/></expr_stmt>
            <if pos:line="84" pos:column="13">if<condition pos:line="84" pos:column="15">(<expr><name pos:line="84" pos:column="16">pathsep<pos:position pos:line="84" pos:column="23"/></name></expr>)<pos:position pos:line="84" pos:column="24"/></condition><then pos:line="84" pos:column="24">
              <block type="pseudo"><expr_stmt><expr><operator pos:line="85" pos:column="15">*<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="16">pathsep<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator><literal type="number" pos:line="85" pos:column="24">0<pos:position pos:line="85" pos:column="25"/></literal></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt></block></then></if>
          }<pos:position pos:line="86" pos:column="12"/></block></else></if>

          <expr_stmt><expr><name pos:line="88" pos:column="11">newest<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator><operator pos:line="88" pos:column="18">(<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="19">char<pos:position pos:line="88" pos:column="23"/></name> <operator pos:line="88" pos:column="24">*<pos:position pos:line="88" pos:column="25"/></operator><operator pos:line="88" pos:column="25">)<pos:position pos:line="88" pos:column="26"/></operator><call><name pos:line="88" pos:column="26">malloc<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">( <argument><expr><call><name pos:line="88" pos:column="34">strlen<pos:position pos:line="88" pos:column="40"/></name><argument_list pos:line="88" pos:column="40">(<argument><expr><name><name pos:line="88" pos:column="41">data<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">-&gt;<pos:position pos:line="88" pos:column="50"/></operator><name pos:line="88" pos:column="47">url<pos:position pos:line="88" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call> <operator pos:line="88" pos:column="52">+<pos:position pos:line="88" pos:column="53"/></operator>
                                 <literal type="number" pos:line="89" pos:column="34">1<pos:position pos:line="89" pos:column="35"/></literal> <operator pos:line="89" pos:column="36">+<pos:position pos:line="89" pos:column="37"/></operator> <comment type="block" pos:line="89" pos:column="38">/* possible slash */</comment>
                                 <call><name pos:line="90" pos:column="34">strlen<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><name><name pos:line="90" pos:column="41">data<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">-&gt;<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="47">newurl<pos:position pos:line="90" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call> <operator pos:line="90" pos:column="55">+<pos:position pos:line="90" pos:column="56"/></operator> <literal type="number" pos:line="90" pos:column="57">1<pos:position pos:line="90" pos:column="58"/></literal></expr></argument><comment type="block" pos:line="90" pos:column="58">/* zero byte */</comment>)<pos:position pos:line="90" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="75"/></expr_stmt>

          <if pos:line="92" pos:column="11">if<condition pos:line="92" pos:column="13">(<expr><operator pos:line="92" pos:column="14">!<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="15">newest<pos:position pos:line="92" pos:column="21"/></name></expr>)<pos:position pos:line="92" pos:column="22"/></condition><then pos:line="92" pos:column="22">
            <block type="pseudo"><return pos:line="93" pos:column="13">return <expr><name pos:line="93" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="93" pos:column="39"/></name></expr>;<pos:position pos:line="93" pos:column="40"/></return></block></then></if>
          <expr_stmt><expr><call><name pos:line="94" pos:column="11">sprintf<pos:position pos:line="94" pos:column="18"/></name><argument_list pos:line="94" pos:column="18">(<argument><expr><name pos:line="94" pos:column="19">newest<pos:position pos:line="94" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="27">"%s%s%s"<pos:position pos:line="94" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="37">data<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">-&gt;<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="43">url<pos:position pos:line="94" pos:column="46"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="94" pos:column="48">(<pos:position pos:line="94" pos:column="49"/></operator><literal type="char" pos:line="94" pos:column="49">'/'<pos:position pos:line="94" pos:column="52"/></literal> <operator pos:line="94" pos:column="53">==<pos:position pos:line="94" pos:column="55"/></operator> <name><name pos:line="94" pos:column="56">data<pos:position pos:line="94" pos:column="60"/></name><operator pos:line="94" pos:column="60">-&gt;<pos:position pos:line="94" pos:column="65"/></operator><name pos:line="94" pos:column="62">newurl<pos:position pos:line="94" pos:column="68"/></name><index pos:line="94" pos:column="68">[<expr><literal type="number" pos:line="94" pos:column="69">0<pos:position pos:line="94" pos:column="70"/></literal></expr>]<pos:position pos:line="94" pos:column="71"/></index></name><operator pos:line="94" pos:column="71">)<pos:position pos:line="94" pos:column="72"/></operator></expr>?<pos:position pos:line="94" pos:column="73"/></condition><then><expr><literal type="string" pos:line="94" pos:column="73">""<pos:position pos:line="94" pos:column="75"/></literal></expr></then><else pos:line="94" pos:column="75">:<expr><literal type="string" pos:line="94" pos:column="76">"/"<pos:position pos:line="94" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><name><name pos:line="95" pos:column="19">data<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">newurl<pos:position pos:line="95" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="96" pos:column="11">free<pos:position pos:line="96" pos:column="15"/></name><argument_list pos:line="96" pos:column="15">(<argument><expr><name><name pos:line="96" pos:column="16">data<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">-&gt;<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="22">newurl<pos:position pos:line="96" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">newurl<pos:position pos:line="97" pos:column="23"/></name></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <name pos:line="97" pos:column="26">newest<pos:position pos:line="97" pos:column="32"/></name></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then>
        <else pos:line="99" pos:column="9">else <block pos:line="99" pos:column="14">{
          <comment type="block" pos:line="100" pos:column="11">/* This was an absolute URL, clear the port number! */</comment>
          <comment type="block" pos:line="101" pos:column="11">/* TBD: set the port with curl_setopt() */</comment>
          <expr_stmt><expr><name><name pos:line="102" pos:column="11">data<pos:position pos:line="102" pos:column="15"/></name><operator pos:line="102" pos:column="15">-&gt;<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="17">port<pos:position pos:line="102" pos:column="21"/></name></name> <operator pos:line="102" pos:column="22">=<pos:position pos:line="102" pos:column="23"/></operator> <literal type="number" pos:line="102" pos:column="24">0<pos:position pos:line="102" pos:column="25"/></literal></expr>;<pos:position pos:line="102" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></else></if>
      
        <comment type="block" pos:line="105" pos:column="9">/* TBD: set the URL with curl_setopt() */</comment>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">data<pos:position pos:line="106" pos:column="13"/></name><operator pos:line="106" pos:column="13">-&gt;<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="15">url<pos:position pos:line="106" pos:column="18"/></name></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <name><name pos:line="106" pos:column="21">data<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">-&gt;<pos:position pos:line="106" pos:column="30"/></operator><name pos:line="106" pos:column="27">newurl<pos:position pos:line="106" pos:column="33"/></name></name></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">data<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">newurl<pos:position pos:line="107" pos:column="21"/></name></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="24">NULL<pos:position pos:line="107" pos:column="28"/></name></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt> <comment type="block" pos:line="107" pos:column="30">/* don't show! */</comment>

        <comment type="block" pos:line="109" pos:column="9">/* Disable both types of POSTs, since doing a second POST when
           following isn't what anyone would want! */</comment>
        <expr_stmt><expr><name><name pos:line="111" pos:column="9">data<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">-&gt;<pos:position pos:line="111" pos:column="18"/></operator><name pos:line="111" pos:column="15">bits<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">.<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">http_post<pos:position pos:line="111" pos:column="29"/></name></name> <operator pos:line="111" pos:column="30">=<pos:position pos:line="111" pos:column="31"/></operator> <name pos:line="111" pos:column="32">FALSE<pos:position pos:line="111" pos:column="37"/></name></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">data<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">-&gt;<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="15">bits<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">http_formpost<pos:position pos:line="112" pos:column="33"/></name></name> <operator pos:line="112" pos:column="34">=<pos:position pos:line="112" pos:column="35"/></operator> <name pos:line="112" pos:column="36">FALSE<pos:position pos:line="112" pos:column="41"/></name></expr>;<pos:position pos:line="112" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="114" pos:column="9">infof<pos:position pos:line="114" pos:column="14"/></name><argument_list pos:line="114" pos:column="14">(<argument><expr><name pos:line="114" pos:column="15">data<pos:position pos:line="114" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="21">"Follows Location: to new URL: '%s'\n"<pos:position pos:line="114" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="61">data<pos:position pos:line="114" pos:column="65"/></name><operator pos:line="114" pos:column="65">-&gt;<pos:position pos:line="114" pos:column="70"/></operator><name pos:line="114" pos:column="67">url<pos:position pos:line="114" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="72"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="116" pos:column="9">curl_disconnect<pos:position pos:line="116" pos:column="24"/></name><argument_list pos:line="116" pos:column="24">(<argument><expr><name pos:line="116" pos:column="25">c_connect<pos:position pos:line="116" pos:column="34"/></name></expr></argument>)<pos:position pos:line="116" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
        <continue pos:line="117" pos:column="9">continue;<pos:position pos:line="117" pos:column="18"/></continue>
      }<pos:position pos:line="118" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="120" pos:column="7">curl_disconnect<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><name pos:line="120" pos:column="23">c_connect<pos:position pos:line="120" pos:column="32"/></name></expr></argument>)<pos:position pos:line="120" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>
    <break pos:line="122" pos:column="5">break;<pos:position pos:line="122" pos:column="11"/></break> <comment type="block" pos:line="122" pos:column="12">/* it only reaches here when this shouldn't loop */</comment>

  }<pos:position pos:line="124" pos:column="4"/></block> while<condition pos:line="124" pos:column="10">(<expr><literal type="number" pos:line="124" pos:column="11">1<pos:position pos:line="124" pos:column="12"/></literal></expr>)<pos:position pos:line="124" pos:column="13"/></condition>;<pos:position pos:line="124" pos:column="14"/></do> <comment type="block" pos:line="124" pos:column="15">/* loop if Location: */</comment>

  <if pos:line="126" pos:column="3">if<condition pos:line="126" pos:column="5">(<expr><name><name pos:line="126" pos:column="6">data<pos:position pos:line="126" pos:column="10"/></name><operator pos:line="126" pos:column="10">-&gt;<pos:position pos:line="126" pos:column="15"/></operator><name pos:line="126" pos:column="12">newurl<pos:position pos:line="126" pos:column="18"/></name></name></expr>)<pos:position pos:line="126" pos:column="19"/></condition><then pos:line="126" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="5">free<pos:position pos:line="127" pos:column="9"/></name><argument_list pos:line="127" pos:column="9">(<argument><expr><name><name pos:line="127" pos:column="10">data<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">newurl<pos:position pos:line="127" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="24"/></expr_stmt></block></then></if>

  <if pos:line="129" pos:column="3">if<condition pos:line="129" pos:column="5">(<expr><operator pos:line="129" pos:column="6">(<pos:position pos:line="129" pos:column="7"/></operator><name pos:line="129" pos:column="7">CURLE_OK<pos:position pos:line="129" pos:column="15"/></name> <operator pos:line="129" pos:column="16">==<pos:position pos:line="129" pos:column="18"/></operator> <name pos:line="129" pos:column="19">res<pos:position pos:line="129" pos:column="22"/></name><operator pos:line="129" pos:column="22">)<pos:position pos:line="129" pos:column="23"/></operator> <operator pos:line="129" pos:column="24">&amp;&amp;<pos:position pos:line="129" pos:column="34"/></operator> <name><name pos:line="129" pos:column="27">data<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">-&gt;<pos:position pos:line="129" pos:column="36"/></operator><name pos:line="129" pos:column="33">writeinfo<pos:position pos:line="129" pos:column="42"/></name></name></expr>)<pos:position pos:line="129" pos:column="43"/></condition><then pos:line="129" pos:column="43"> <block pos:line="129" pos:column="44">{
    <comment type="block" pos:line="130" pos:column="5">/* Time to output some info to stdout */</comment>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">WriteOut<pos:position pos:line="131" pos:column="13"/></name><argument_list pos:line="131" pos:column="13">(<argument><expr><name pos:line="131" pos:column="14">data<pos:position pos:line="131" pos:column="18"/></name></expr></argument>)<pos:position pos:line="131" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="132" pos:column="4"/></block></then></if>
  <return pos:line="133" pos:column="3">return <expr><name pos:line="133" pos:column="10">res<pos:position pos:line="133" pos:column="13"/></name></expr>;<pos:position pos:line="133" pos:column="14"/></return>
}<pos:position pos:line="134" pos:column="2"/></block></function></unit>

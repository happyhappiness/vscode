<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_512_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>, <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="16">dupe<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">protocol<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name pos:line="5" pos:column="13">CURLE_OK<pos:position pos:line="5" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">global_init<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">CURL_GLOBAL_ALL<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">easy_init<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">curl<pos:position pos:line="9" pos:column="17"/></name></expr></argument>)<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* Test that protocol is properly initialized on curl_easy_init.
  */</comment>

  <expr_stmt><expr><name pos:line="14" pos:column="3">res<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">curl_easy_getinfo<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">curl<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">CURLINFO_PROTOCOL<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="52">&amp;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="53">protocol<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">res<pos:position pos:line="15" pos:column="9"/></name></expr>)<pos:position pos:line="15" pos:column="10"/></condition><then pos:line="15" pos:column="10"> <block pos:line="15" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">stderr<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"%s:%d curl_easy_getinfo() failed with code %d (%s)\n"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="17" pos:column="13">__FILE__<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">__LINE__<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">res<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="38">curl_easy_strerror<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">res<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
    <goto pos:line="18" pos:column="5">goto <name pos:line="18" pos:column="10">test_cleanup<pos:position pos:line="18" pos:column="22"/></name>;<pos:position pos:line="18" pos:column="23"/></goto>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">protocol<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">fprintf<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">stderr<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="21">"%s:%d protocol init failed; expected 0 but is %ld\n"<pos:position pos:line="21" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name pos:line="22" pos:column="13">__FILE__<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">__LINE__<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">protocol<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">res<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">CURLE_FAILED_INIT<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
    <goto pos:line="24" pos:column="5">goto <name pos:line="24" pos:column="10">test_cleanup<pos:position pos:line="24" pos:column="22"/></name>;<pos:position pos:line="24" pos:column="23"/></goto>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">easy_setopt<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">curl<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">CURLOPT_URL<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">URL<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">res<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name pos:line="29" pos:column="9">curl_easy_perform<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">curl<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">res<pos:position pos:line="30" pos:column="9"/></name></expr>)<pos:position pos:line="30" pos:column="10"/></condition><then pos:line="30" pos:column="10"> <block pos:line="30" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">fprintf<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">stderr<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="21">"%s:%d curl_easy_perform() failed with code %d (%s)\n"<pos:position pos:line="31" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="32" pos:column="13">__FILE__<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="23">__LINE__<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">res<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="38">curl_easy_strerror<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><name pos:line="32" pos:column="57">res<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
    <goto pos:line="33" pos:column="5">goto <name pos:line="33" pos:column="10">test_cleanup<pos:position pos:line="33" pos:column="22"/></name>;<pos:position pos:line="33" pos:column="23"/></goto>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="36" pos:column="3">/* Test that a protocol is properly set after receiving an HTTP resource.
  */</comment>

  <expr_stmt><expr><name pos:line="39" pos:column="3">res<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">curl_easy_getinfo<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">curl<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">CURLINFO_PROTOCOL<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="52">&amp;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="53">protocol<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">res<pos:position pos:line="40" pos:column="9"/></name></expr>)<pos:position pos:line="40" pos:column="10"/></condition><then pos:line="40" pos:column="10"> <block pos:line="40" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fprintf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">stderr<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"%s:%d curl_easy_getinfo() failed with code %d (%s)\n"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="42" pos:column="13">__FILE__<pos:position pos:line="42" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="23">__LINE__<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">res<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="38">curl_easy_strerror<pos:position pos:line="42" pos:column="56"/></name><argument_list pos:line="42" pos:column="56">(<argument><expr><name pos:line="42" pos:column="57">res<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>
    <goto pos:line="43" pos:column="5">goto <name pos:line="43" pos:column="10">test_cleanup<pos:position pos:line="43" pos:column="22"/></name>;<pos:position pos:line="43" pos:column="23"/></goto>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">protocol<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">!=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">CURLPROTO_HTTP<pos:position pos:line="45" pos:column="32"/></name></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">fprintf<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">stderr<pos:position pos:line="46" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="21">"%s:%d protocol of http resource is incorrect; "<pos:position pos:line="46" pos:column="69"/></literal>
            <literal type="string" pos:line="47" pos:column="13">"expected %ld but is %ld\n"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>,
            <argument><expr><name pos:line="48" pos:column="13">__FILE__<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="23">__LINE__<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="33">CURLPROTO_HTTP<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">protocol<pos:position pos:line="48" pos:column="57"/></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">res<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <name pos:line="49" pos:column="11">CURLE_HTTP_RETURNED_ERROR<pos:position pos:line="49" pos:column="36"/></name></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
    <goto pos:line="50" pos:column="5">goto <name pos:line="50" pos:column="10">test_cleanup<pos:position pos:line="50" pos:column="22"/></name>;<pos:position pos:line="50" pos:column="23"/></goto>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="53" pos:column="3">/* Test that a protocol is properly initialized on curl_easy_duphandle.
  */</comment>

  <expr_stmt><expr><name pos:line="56" pos:column="3">dupe<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <call><name pos:line="56" pos:column="10">curl_easy_duphandle<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">curl<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><operator pos:line="57" pos:column="6">!<pos:position pos:line="57" pos:column="7"/></operator><name pos:line="57" pos:column="7">dupe<pos:position pos:line="57" pos:column="11"/></name></expr>)<pos:position pos:line="57" pos:column="12"/></condition><then pos:line="57" pos:column="12"> <block pos:line="57" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">fprintf<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">stderr<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="21">"%s:%d curl_easy_duphandle() failed\n"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name pos:line="59" pos:column="13">__FILE__<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="23">__LINE__<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="60" pos:column="5">res<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <name pos:line="60" pos:column="11">CURLE_FAILED_INIT<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
    <goto pos:line="61" pos:column="5">goto <name pos:line="61" pos:column="10">test_cleanup<pos:position pos:line="61" pos:column="22"/></name>;<pos:position pos:line="61" pos:column="23"/></goto>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="64" pos:column="3">res<pos:position pos:line="64" pos:column="6"/></name> <operator pos:line="64" pos:column="7">=<pos:position pos:line="64" pos:column="8"/></operator> <call><name pos:line="64" pos:column="9">curl_easy_getinfo<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">dupe<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="33">CURLINFO_PROTOCOL<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="52">&amp;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="53">protocol<pos:position pos:line="64" pos:column="61"/></name></expr></argument>)<pos:position pos:line="64" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="63"/></expr_stmt>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name pos:line="65" pos:column="6">res<pos:position pos:line="65" pos:column="9"/></name></expr>)<pos:position pos:line="65" pos:column="10"/></condition><then pos:line="65" pos:column="10"> <block pos:line="65" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">fprintf<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">stderr<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="21">"%s:%d curl_easy_getinfo() failed with code %d (%s)\n"<pos:position pos:line="66" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="67" pos:column="13">__FILE__<pos:position pos:line="67" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="23">__LINE__<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">res<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="38">curl_easy_strerror<pos:position pos:line="67" pos:column="56"/></name><argument_list pos:line="67" pos:column="56">(<argument><expr><name pos:line="67" pos:column="57">res<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="63"/></expr_stmt>
    <goto pos:line="68" pos:column="5">goto <name pos:line="68" pos:column="10">test_cleanup<pos:position pos:line="68" pos:column="22"/></name>;<pos:position pos:line="68" pos:column="23"/></goto>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><name pos:line="70" pos:column="6">protocol<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">!=<pos:position pos:line="70" pos:column="17"/></operator> <literal type="number" pos:line="70" pos:column="18">0<pos:position pos:line="70" pos:column="19"/></literal></expr>)<pos:position pos:line="70" pos:column="20"/></condition><then pos:line="70" pos:column="20"> <block pos:line="70" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">fprintf<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">stderr<pos:position pos:line="71" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="21">"%s:%d protocol init failed; expected 0 but is %ld\n"<pos:position pos:line="71" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name pos:line="72" pos:column="13">__FILE__<pos:position pos:line="72" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="23">__LINE__<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="33">protocol<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">res<pos:position pos:line="73" pos:column="8"/></name> <operator pos:line="73" pos:column="9">=<pos:position pos:line="73" pos:column="10"/></operator> <name pos:line="73" pos:column="11">CURLE_FAILED_INIT<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
    <goto pos:line="74" pos:column="5">goto <name pos:line="74" pos:column="10">test_cleanup<pos:position pos:line="74" pos:column="22"/></name>;<pos:position pos:line="74" pos:column="23"/></goto>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="78" pos:column="3">/* Test that a protocol is properly initialized on curl_easy_reset.
  */</comment>

  <expr_stmt><expr><call><name pos:line="81" pos:column="3">curl_easy_reset<pos:position pos:line="81" pos:column="18"/></name><argument_list pos:line="81" pos:column="18">(<argument><expr><name pos:line="81" pos:column="19">curl<pos:position pos:line="81" pos:column="23"/></name></expr></argument>)<pos:position pos:line="81" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="83" pos:column="3">res<pos:position pos:line="83" pos:column="6"/></name> <operator pos:line="83" pos:column="7">=<pos:position pos:line="83" pos:column="8"/></operator> <call><name pos:line="83" pos:column="9">curl_easy_getinfo<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">curl<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">CURLINFO_PROTOCOL<pos:position pos:line="83" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="52">&amp;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="53">protocol<pos:position pos:line="83" pos:column="61"/></name></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="63"/></expr_stmt>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><name pos:line="84" pos:column="6">res<pos:position pos:line="84" pos:column="9"/></name></expr>)<pos:position pos:line="84" pos:column="10"/></condition><then pos:line="84" pos:column="10"> <block pos:line="84" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">fprintf<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">stderr<pos:position pos:line="85" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="21">"%s:%d curl_easy_getinfo() failed with code %d (%s)\n"<pos:position pos:line="85" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name pos:line="86" pos:column="13">__FILE__<pos:position pos:line="86" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="23">__LINE__<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="33">res<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="38">curl_easy_strerror<pos:position pos:line="86" pos:column="56"/></name><argument_list pos:line="86" pos:column="56">(<argument><expr><name pos:line="86" pos:column="57">res<pos:position pos:line="86" pos:column="60"/></name></expr></argument>)<pos:position pos:line="86" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="63"/></expr_stmt>
    <goto pos:line="87" pos:column="5">goto <name pos:line="87" pos:column="10">test_cleanup<pos:position pos:line="87" pos:column="22"/></name>;<pos:position pos:line="87" pos:column="23"/></goto>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>
  <if pos:line="89" pos:column="3">if<condition pos:line="89" pos:column="5">(<expr><name pos:line="89" pos:column="6">protocol<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">!=<pos:position pos:line="89" pos:column="17"/></operator> <literal type="number" pos:line="89" pos:column="18">0<pos:position pos:line="89" pos:column="19"/></literal></expr>)<pos:position pos:line="89" pos:column="20"/></condition><then pos:line="89" pos:column="20"> <block pos:line="89" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">fprintf<pos:position pos:line="90" pos:column="12"/></name><argument_list pos:line="90" pos:column="12">(<argument><expr><name pos:line="90" pos:column="13">stderr<pos:position pos:line="90" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="21">"%s:%d protocol init failed; expected 0 but is %ld\n"<pos:position pos:line="90" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name pos:line="91" pos:column="13">__FILE__<pos:position pos:line="91" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="23">__LINE__<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="33">protocol<pos:position pos:line="91" pos:column="41"/></name></expr></argument>)<pos:position pos:line="91" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">res<pos:position pos:line="92" pos:column="8"/></name> <operator pos:line="92" pos:column="9">=<pos:position pos:line="92" pos:column="10"/></operator> <name pos:line="92" pos:column="11">CURLE_FAILED_INIT<pos:position pos:line="92" pos:column="28"/></name></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
    <goto pos:line="93" pos:column="5">goto <name pos:line="93" pos:column="10">test_cleanup<pos:position pos:line="93" pos:column="22"/></name>;<pos:position pos:line="93" pos:column="23"/></goto>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

<label><name pos:line="96" pos:column="1">test_cleanup<pos:position pos:line="96" pos:column="13"/></name>:<pos:position pos:line="96" pos:column="14"/></label>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">curl_easy_cleanup<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">curl<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">curl_easy_cleanup<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><name pos:line="98" pos:column="21">dupe<pos:position pos:line="98" pos:column="25"/></name></expr></argument>)<pos:position pos:line="98" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">curl_global_cleanup<pos:position pos:line="99" pos:column="22"/></name><argument_list pos:line="99" pos:column="22">()<pos:position pos:line="99" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
  <return pos:line="100" pos:column="3">return <expr><name pos:line="100" pos:column="10">res<pos:position pos:line="100" pos:column="13"/></name></expr>;<pos:position pos:line="100" pos:column="14"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1028_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">Curl_ssl_send<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">sockindex<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">void<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">mem<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="4" pos:column="23">size_t<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">len<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="34"/></parameter_list>
<block pos:line="5" pos:column="1">{
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">USE_SSLEAY<pos:position pos:line="6" pos:column="18"/></name></cpp:ifdef>
  <return pos:line="7" pos:column="3">return <expr><call><name pos:line="7" pos:column="10">Curl_ossl_send<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">conn<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">sockindex<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">mem<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">len<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></return>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">USE_GNUTLS<pos:position pos:line="9" pos:column="18"/></name></cpp:ifdef>
  <return pos:line="10" pos:column="3">return <expr><call><name pos:line="10" pos:column="10">Curl_gtls_send<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">conn<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">sockindex<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">mem<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">len<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></return>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_NSS<pos:position pos:line="12" pos:column="15"/></name></cpp:ifdef>
  <return pos:line="13" pos:column="3">return <expr><call><name pos:line="13" pos:column="10">Curl_nss_send<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">conn<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">sockindex<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">mem<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">len<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></return>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">USE_QSOSSL<pos:position pos:line="15" pos:column="18"/></name></cpp:ifdef>
  <return pos:line="16" pos:column="3">return <expr><call><name pos:line="16" pos:column="10">Curl_qsossl_send<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">conn<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">sockindex<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">mem<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">len<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></return>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="18" pos:column="3">(<pos:position pos:line="18" pos:column="4"/></operator><name pos:line="18" pos:column="4">void<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">)<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name></expr>;<pos:position pos:line="18" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">sockindex<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">(<pos:position pos:line="20" pos:column="4"/></operator><name pos:line="20" pos:column="4">void<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">)<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">mem<pos:position pos:line="20" pos:column="12"/></name></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">(<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">void<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">)<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">len<pos:position pos:line="21" pos:column="12"/></name></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="23" pos:column="8">/* USE_QSOSSL */</comment>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="24" pos:column="8">/* USE_NSS */</comment>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="25" pos:column="8">/* USE_GNUTLS */</comment>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="26" pos:column="8">/* USE_SSLEAY */</comment>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

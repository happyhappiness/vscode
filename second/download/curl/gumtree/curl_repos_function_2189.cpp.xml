<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2189.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">append_cert_to_array<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">SessionHandle<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">unsigned<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">buf<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">size_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">buflen<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="3" pos:column="33">CFMutableArrayRef<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">array<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CFDataRef<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">certdata<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">CFDataCreate<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">kCFAllocatorDefault<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="60">buf<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="65">buflen<pos:position pos:line="5" pos:column="71"/></name></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="73"/></decl_stmt>
    <if pos:line="6" pos:column="5">if<condition pos:line="6" pos:column="7">(<expr><operator pos:line="6" pos:column="8">!<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">certdata<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="7" pos:column="7">failf<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">data<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"SSL: failed to allocate array for CA certificate"<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt>
      <return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">SecCertificateRef<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">cacert<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">=
      <expr><call><name pos:line="12" pos:column="7">SecCertificateCreateWithData<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">kCFAllocatorDefault<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">certdata<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">CFRelease<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">certdata<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">cacert<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">failf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">data<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"SSL: failed to create SecCertificate from CA certificate"<pos:position pos:line="15" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">CURLE_SSL_CACERT<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Check if cacert is valid. */</comment>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">CFStringRef<pos:position pos:line="20" pos:column="16"/></name></type> <name pos:line="20" pos:column="17">subject<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><call><name pos:line="20" pos:column="27">CopyCertSubject<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">cacert<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="51"/></decl_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">subject<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">char<pos:position pos:line="22" pos:column="11"/></name></type> <name><name pos:line="22" pos:column="12">subject_cbuf<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><literal type="number" pos:line="22" pos:column="25">128<pos:position pos:line="22" pos:column="28"/></literal></expr>]<pos:position pos:line="22" pos:column="29"/></index></name></decl>;<pos:position pos:line="22" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">memset<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">subject_cbuf<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="31">128<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><operator pos:line="24" pos:column="10">!<pos:position pos:line="24" pos:column="11"/></operator><call><name pos:line="24" pos:column="11">CFStringGetCString<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">subject<pos:position pos:line="24" pos:column="37"/></name></expr></argument>,
                            <argument><expr><name pos:line="25" pos:column="29">subject_cbuf<pos:position pos:line="25" pos:column="41"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="26" pos:column="29">128<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>,
                            <argument><expr><name pos:line="27" pos:column="29">kCFStringEncodingUTF8<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52"> <block pos:line="27" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">CFRelease<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">cacert<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">failf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">data<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"SSL: invalid CA certificate subject"<pos:position pos:line="29" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">CFRelease<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">subject<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">CFRelease<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">cacert<pos:position pos:line="35" pos:column="23"/></name></expr></argument>)<pos:position pos:line="35" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">failf<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">data<pos:position pos:line="36" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"SSL: invalid CA certificate"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
      <return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">CURLE_SSL_CACERT<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">CFArrayAppendValue<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">array<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">cacert<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">CFRelease<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">cacert<pos:position pos:line="41" pos:column="21"/></name></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">CURLE_OK<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

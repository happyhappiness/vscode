<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1999_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">CookieInfo<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">Curl_cookie_init<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">Curl_easy<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">file<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">CookieInfo<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">inc<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">bool<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">newsession<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="53"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">CookieInfo<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">c<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fp<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">fromfile<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">TRUE<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">line<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">NULL<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">inc<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
    <comment type="block" pos:line="12" pos:column="5">/* we didn't get a struct, create one */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">c<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">calloc<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="19">sizeof<argument_list pos:line="13" pos:column="25">(<argument><expr pos:line="13" pos:column="26">struct <name pos:line="13" pos:column="33">CookieInfo<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">c<pos:position pos:line="14" pos:column="10"/></name></expr>)<pos:position pos:line="14" pos:column="11"/></condition><then pos:line="14" pos:column="11">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="20">/* failed to get memory */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">c<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">filename<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">strdup<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="16" pos:column="26">file<pos:position pos:line="16" pos:column="30"/></name></expr>?<pos:position pos:line="16" pos:column="31"/></condition><then><expr><name pos:line="16" pos:column="31">file<pos:position pos:line="16" pos:column="35"/></name></expr></then><else pos:line="16" pos:column="35">:<expr><literal type="string" pos:line="16" pos:column="36">"none"<pos:position pos:line="16" pos:column="42"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt> <comment type="block" pos:line="16" pos:column="45">/* copy the name just in case */</comment>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name><name pos:line="17" pos:column="9">c<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">filename<pos:position pos:line="17" pos:column="20"/></name></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
      <block type="pseudo"><goto pos:line="18" pos:column="7">goto <name pos:line="18" pos:column="12">fail<pos:position pos:line="18" pos:column="16"/></name>;<pos:position pos:line="18" pos:column="17"/></goto></block></then></if> <comment type="block" pos:line="18" pos:column="18">/* failed to get memory */</comment>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else <block pos:line="20" pos:column="8">{
    <comment type="block" pos:line="21" pos:column="5">/* we got an already existing one, use that */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">c<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">inc<pos:position pos:line="22" pos:column="12"/></name></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">c<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">running<pos:position pos:line="24" pos:column="13"/></name></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">FALSE<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt> <comment type="block" pos:line="24" pos:column="23">/* this is not running, this is init */</comment>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">file<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">&amp;&amp;<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><call><name pos:line="26" pos:column="15">strcmp<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">file<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"-"<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">fp<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <name pos:line="27" pos:column="10">stdin<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">fromfile<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">FALSE<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then>
  <elseif pos:line="30" pos:column="3">else <if pos:line="30" pos:column="8">if<condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">file<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&amp;&amp;<pos:position pos:line="30" pos:column="26"/></operator> <operator pos:line="30" pos:column="19">!<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">file<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
    <comment type="block" pos:line="31" pos:column="5">/* points to a "" string */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">fp<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <name pos:line="32" pos:column="10">NULL<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if></elseif>
  <else pos:line="34" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">fp<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <ternary><condition><expr><name pos:line="35" pos:column="10">file<pos:position pos:line="35" pos:column="14"/></name></expr>?<pos:position pos:line="35" pos:column="15"/></condition><then><expr><call><name pos:line="35" pos:column="15">fopen<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">file<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="27">FOPEN_READTEXT<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr></then><else pos:line="35" pos:column="42">:<expr><name pos:line="35" pos:column="43">NULL<pos:position pos:line="35" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="37" pos:column="3">c<pos:position pos:line="37" pos:column="4"/></name><operator pos:line="37" pos:column="4">-&gt;<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="6">newsession<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">newsession<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt> <comment type="block" pos:line="37" pos:column="31">/* new session? */</comment>

  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name pos:line="39" pos:column="6">fp<pos:position pos:line="39" pos:column="8"/></name></expr>)<pos:position pos:line="39" pos:column="9"/></condition><then pos:line="39" pos:column="9"> <block pos:line="39" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name> <modifier pos:line="40" pos:column="10">*<pos:position pos:line="40" pos:column="11"/></modifier></type><name pos:line="40" pos:column="11">lineptr<pos:position pos:line="40" pos:column="18"/></name></decl>;<pos:position pos:line="40" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">bool<pos:position pos:line="41" pos:column="9"/></name></type> <name pos:line="41" pos:column="10">headerline<pos:position pos:line="41" pos:column="20"/></name></decl>;<pos:position pos:line="41" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">line<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">malloc<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">MAX_COOKIE_LINE<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><operator pos:line="44" pos:column="8">!<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">line<pos:position pos:line="44" pos:column="13"/></name></expr>)<pos:position pos:line="44" pos:column="14"/></condition><then pos:line="44" pos:column="14">
      <block type="pseudo"><goto pos:line="45" pos:column="7">goto <name pos:line="45" pos:column="12">fail<pos:position pos:line="45" pos:column="16"/></name>;<pos:position pos:line="45" pos:column="17"/></goto></block></then></if>
    <while pos:line="46" pos:column="5">while<condition pos:line="46" pos:column="10">(<expr><call><name pos:line="46" pos:column="11">get_line<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">line<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">MAX_COOKIE_LINE<pos:position pos:line="46" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">fp<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="47"/></condition> <block pos:line="46" pos:column="48">{
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><call><name pos:line="47" pos:column="10">checkprefix<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><literal type="string" pos:line="47" pos:column="22">"Set-Cookie:"<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="37">line<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43"> <block pos:line="47" pos:column="44">{
        <comment type="block" pos:line="48" pos:column="9">/* This is a cookie line, get it! */</comment>
        <expr_stmt><expr><name pos:line="49" pos:column="9">lineptr<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <operator pos:line="49" pos:column="19">&amp;<pos:position pos:line="49" pos:column="24"/></operator><name><name pos:line="49" pos:column="20">line<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><literal type="number" pos:line="49" pos:column="25">11<pos:position pos:line="49" pos:column="27"/></literal></expr>]<pos:position pos:line="49" pos:column="28"/></index></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">headerline<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">TRUE<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then>
      <else pos:line="52" pos:column="7">else <block pos:line="52" pos:column="12">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">lineptr<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">line<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">headerline<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">FALSE<pos:position pos:line="54" pos:column="27"/></name></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></else></if>
      <while pos:line="56" pos:column="7">while<condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">lineptr<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">&amp;&amp;<pos:position pos:line="56" pos:column="32"/></operator> <call><name pos:line="56" pos:column="25">ISBLANK<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">lineptr<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="43"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="9">lineptr<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">++<pos:position pos:line="57" pos:column="18"/></operator></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt></block></while>

      <expr_stmt><expr><call><name pos:line="59" pos:column="7">Curl_cookie_add<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">data<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">c<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="32">headerline<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">lineptr<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="53">NULL<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">NULL<pos:position pos:line="59" pos:column="63"/></name></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">free<pos:position pos:line="61" pos:column="9"/></name><argument_list pos:line="61" pos:column="9">(<argument><expr><name pos:line="61" pos:column="10">line<pos:position pos:line="61" pos:column="14"/></name></expr></argument>)<pos:position pos:line="61" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt> <comment type="block" pos:line="61" pos:column="17">/* free the line buffer */</comment>

    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><name pos:line="63" pos:column="8">fromfile<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="7">fclose<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">fp<pos:position pos:line="64" pos:column="16"/></name></expr></argument>)<pos:position pos:line="64" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt></block></then></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="67" pos:column="3">c<pos:position pos:line="67" pos:column="4"/></name><operator pos:line="67" pos:column="4">-&gt;<pos:position pos:line="67" pos:column="9"/></operator><name pos:line="67" pos:column="6">running<pos:position pos:line="67" pos:column="13"/></name></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">TRUE<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt>          <comment type="block" pos:line="67" pos:column="31">/* now, we're running */</comment>

  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">c<pos:position pos:line="69" pos:column="11"/></name></expr>;<pos:position pos:line="69" pos:column="12"/></return>

<label><name pos:line="71" pos:column="1">fail<pos:position pos:line="71" pos:column="5"/></name>:<pos:position pos:line="71" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">free<pos:position pos:line="72" pos:column="7"/></name><argument_list pos:line="72" pos:column="7">(<argument><expr><name pos:line="72" pos:column="8">line<pos:position pos:line="72" pos:column="12"/></name></expr></argument>)<pos:position pos:line="72" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="14"/></expr_stmt>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><operator pos:line="73" pos:column="6">!<pos:position pos:line="73" pos:column="7"/></operator><name pos:line="73" pos:column="7">inc<pos:position pos:line="73" pos:column="10"/></name></expr>)<pos:position pos:line="73" pos:column="11"/></condition><then pos:line="73" pos:column="11">
    <comment type="block" pos:line="74" pos:column="5">/* Only clean up if we allocated it here, as the original could still be in
     * use by a share handle */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="5">Curl_cookie_cleanup<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">c<pos:position pos:line="76" pos:column="26"/></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt></block></then></if>
  <if pos:line="77" pos:column="3">if<condition pos:line="77" pos:column="5">(<expr><name pos:line="77" pos:column="6">fromfile<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">&amp;&amp;<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="18">fp<pos:position pos:line="77" pos:column="20"/></name></expr>)<pos:position pos:line="77" pos:column="21"/></condition><then pos:line="77" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="5">fclose<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">fp<pos:position pos:line="78" pos:column="14"/></name></expr></argument>)<pos:position pos:line="78" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt></block></then></if>
  <return pos:line="79" pos:column="3">return <expr><name pos:line="79" pos:column="10">NULL<pos:position pos:line="79" pos:column="14"/></name></expr>;<pos:position pos:line="79" pos:column="15"/></return> <comment type="block" pos:line="79" pos:column="16">/* out of memory */</comment>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_892.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_sndbufset<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">curl_socket_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">sockfd<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">val<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">CURL_MAX_WRITE_SIZE<pos:position pos:line="3" pos:column="32"/></name> <operator pos:line="3" pos:column="33">+<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="35">32<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">curval<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">curlen<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><sizeof pos:line="5" pos:column="16">sizeof<argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">curval<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">DWORD<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">majorVersion<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">6<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="8" pos:column="3">static<pos:position pos:line="8" pos:column="9"/></specifier> <type><name pos:line="8" pos:column="10">int<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">detectOsState<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">DETECT_OS_NONE<pos:position pos:line="8" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">detectOsState<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">DETECT_OS_NONE<pos:position pos:line="10" pos:column="37"/></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38"> <block pos:line="10" pos:column="39">{
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><operator pos:line="11" pos:column="5">!<pos:position pos:line="11" pos:column="6"/></operator><call><name pos:line="11" pos:column="6">defined<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">_WIN32_WINNT<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call> <operator pos:line="11" pos:column="28">||<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="31">!<pos:position pos:line="11" pos:column="32"/></operator><call><name pos:line="11" pos:column="32">defined<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">_WIN32_WINNT_WIN2K<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call> <operator pos:line="11" pos:column="60">||<pos:position pos:line="11" pos:column="62"/></operator> \
    <operator pos:line="12" pos:column="5">(<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">_WIN32_WINNT<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="21">_WIN32_WINNT_WIN2K<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">OSVERSIONINFO<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">osver<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memset<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">&amp;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="13">osver<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="23">sizeof<argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">osver<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">osver<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">.<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">dwOSVersionInfoSize<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <sizeof pos:line="16" pos:column="33">sizeof<argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">osver<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">detectOsState<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">DETECT_OS_PREVISTA<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><call><name pos:line="19" pos:column="8">GetVersionEx<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">osver<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <block pos:line="19" pos:column="30">{
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name><name pos:line="20" pos:column="10">osver<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">dwMajorVersion<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">&gt;=<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="34">majorVersion<pos:position pos:line="20" pos:column="46"/></name></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">detectOsState<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">DETECT_OS_VISTA_OR_LATER<pos:position pos:line="21" pos:column="49"/></name></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">ULONGLONG<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">majorVersionMask<pos:position pos:line="24" pos:column="31"/></name></decl>;<pos:position pos:line="24" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">OSVERSIONINFOEX<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">osver<pos:position pos:line="25" pos:column="26"/></name></decl>;<pos:position pos:line="25" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">memset<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><operator pos:line="27" pos:column="12">&amp;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="13">osver<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">0<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="23">sizeof<argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">osver<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">osver<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">.<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">dwOSVersionInfoSize<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <sizeof pos:line="28" pos:column="33">sizeof<argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">osver<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">osver<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">.<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">dwMajorVersion<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">majorVersion<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">majorVersionMask<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">VerSetConditionMask<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">VER_MAJORVERSION<pos:position pos:line="30" pos:column="63"/></name></expr></argument>,
                                           <argument><expr><name pos:line="31" pos:column="44">VER_GREATER_EQUAL<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>

    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><call><name pos:line="33" pos:column="8">VerifyVersionInfo<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="27">osver<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">VER_MAJORVERSION<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">majorVersionMask<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">detectOsState<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">DETECT_OS_VISTA_OR_LATER<pos:position pos:line="34" pos:column="47"/></name></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="35" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">detectOsState<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">DETECT_OS_PREVISTA<pos:position pos:line="36" pos:column="41"/></name></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt></block></else></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">detectOsState<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">==<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">DETECT_OS_VISTA_OR_LATER<pos:position pos:line="40" pos:column="47"/></name></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
    <block type="pseudo"><return pos:line="41" pos:column="5">return;<pos:position pos:line="41" pos:column="12"/></return></block></then></if>

  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><call><name pos:line="43" pos:column="6">getsockopt<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">sockfd<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="25">SOL_SOCKET<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">SO_SNDBUF<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">(<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">char<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">*<pos:position pos:line="43" pos:column="55"/></operator><operator pos:line="43" pos:column="55">)<pos:position pos:line="43" pos:column="56"/></operator><operator pos:line="43" pos:column="56">&amp;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="57">curval<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="65">&amp;<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="66">curlen<pos:position pos:line="43" pos:column="72"/></name></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call> <operator pos:line="43" pos:column="74">==<pos:position pos:line="43" pos:column="76"/></operator> <literal type="number" pos:line="43" pos:column="77">0<pos:position pos:line="43" pos:column="78"/></literal></expr>)<pos:position pos:line="43" pos:column="79"/></condition><then pos:line="43" pos:column="79">
    <block type="pseudo"><if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">curval<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&gt;<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="17">val<pos:position pos:line="44" pos:column="20"/></name></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
      <block type="pseudo"><return pos:line="45" pos:column="7">return;<pos:position pos:line="45" pos:column="14"/></return></block></then></if></block></then></if>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">setsockopt<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">sockfd<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="22">SOL_SOCKET<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">SO_SNDBUF<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="45">(<pos:position pos:line="47" pos:column="46"/></operator><specifier pos:line="47" pos:column="46">const<pos:position pos:line="47" pos:column="51"/></specifier> <name pos:line="47" pos:column="52">char<pos:position pos:line="47" pos:column="56"/></name> <operator pos:line="47" pos:column="57">*<pos:position pos:line="47" pos:column="58"/></operator><operator pos:line="47" pos:column="58">)<pos:position pos:line="47" pos:column="59"/></operator><operator pos:line="47" pos:column="59">&amp;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="60">val<pos:position pos:line="47" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="65">sizeof<argument_list pos:line="47" pos:column="71">(<argument><expr><name pos:line="47" pos:column="72">val<pos:position pos:line="47" pos:column="75"/></name></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1298_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ntlm_wb_response<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">connectdata<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">input<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">curlntlm<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">state<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">malloc<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">NTLM_BUFSIZE<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len_in<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">strlen<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">input<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="34">len_out<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">buf<pos:position pos:line="7" pos:column="10"/></name></expr>)<pos:position pos:line="7" pos:column="11"/></condition><then pos:line="7" pos:column="11">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>

  <while pos:line="10" pos:column="3">while<condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">len_in<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&gt;<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>)<pos:position pos:line="10" pos:column="20"/></condition> <block pos:line="10" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ssize_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">written<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><call><name pos:line="11" pos:column="23">swrite<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">conn<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">ntlm_auth_hlpr_socket<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="59">input<pos:position pos:line="11" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="66">len_in<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">written<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <operator pos:line="12" pos:column="19">-<pos:position pos:line="12" pos:column="20"/></operator><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
      <comment type="block" pos:line="13" pos:column="7">/* Interrupted by a signal, retry it */</comment>
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">(<expr><name pos:line="14" pos:column="10">errno<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">EINTR<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
        <block type="pseudo"><continue pos:line="15" pos:column="9">continue;<pos:position pos:line="15" pos:column="18"/></continue></block></then></if>
      <comment type="block" pos:line="16" pos:column="7">/* write failed if other errors happen */</comment>
      <goto pos:line="17" pos:column="7">goto <name pos:line="17" pos:column="12">done<pos:position pos:line="17" pos:column="16"/></name>;<pos:position pos:line="17" pos:column="17"/></goto>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">input<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">+=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">written<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">len_in<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">-=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">written<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></while>
  <comment type="block" pos:line="22" pos:column="3">/* Read one line */</comment>
  <while pos:line="23" pos:column="3">while<condition pos:line="23" pos:column="8">(<expr><literal type="number" pos:line="23" pos:column="9">1<pos:position pos:line="23" pos:column="10"/></literal></expr>)<pos:position pos:line="23" pos:column="11"/></condition> <block pos:line="23" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">ssize_t<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">size<pos:position pos:line="24" pos:column="17"/></name></decl>;<pos:position pos:line="24" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">newbuf<pos:position pos:line="25" pos:column="17"/></name></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">size<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">sread<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name><name pos:line="27" pos:column="18">conn<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">ntlm_auth_hlpr_socket<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">buf<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">+<pos:position pos:line="27" pos:column="52"/></operator> <name pos:line="27" pos:column="53">len_out<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">NTLM_BUFSIZE<pos:position pos:line="27" pos:column="74"/></name></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">size<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">==<pos:position pos:line="28" pos:column="15"/></operator> <operator pos:line="28" pos:column="16">-<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
      <if pos:line="29" pos:column="7">if<condition pos:line="29" pos:column="9">(<expr><name pos:line="29" pos:column="10">errno<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">==<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">EINTR<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25">
        <block type="pseudo"><continue pos:line="30" pos:column="9">continue;<pos:position pos:line="30" pos:column="18"/></continue></block></then></if>
      <goto pos:line="31" pos:column="7">goto <name pos:line="31" pos:column="12">done<pos:position pos:line="31" pos:column="16"/></name>;<pos:position pos:line="31" pos:column="17"/></goto>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if<condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">size<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23">
      <block type="pseudo"><goto pos:line="34" pos:column="7">goto <name pos:line="34" pos:column="12">done<pos:position pos:line="34" pos:column="16"/></name>;<pos:position pos:line="34" pos:column="17"/></goto></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="36" pos:column="5">len_out<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">+=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">size<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name><name pos:line="37" pos:column="8">buf<pos:position pos:line="37" pos:column="11"/></name><index pos:line="37" pos:column="11">[<expr><name pos:line="37" pos:column="12">len_out<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">-<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">1<pos:position pos:line="37" pos:column="23"/></literal></expr>]<pos:position pos:line="37" pos:column="24"/></index></name> <operator pos:line="37" pos:column="25">==<pos:position pos:line="37" pos:column="27"/></operator> <literal type="char" pos:line="37" pos:column="28">'\n'<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33"> <block pos:line="37" pos:column="34">{
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">buf<pos:position pos:line="38" pos:column="10"/></name><index pos:line="38" pos:column="10">[<expr><name pos:line="38" pos:column="11">len_out<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">-<pos:position pos:line="38" pos:column="20"/></operator> <literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>]<pos:position pos:line="38" pos:column="23"/></index></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="char" pos:line="38" pos:column="26">'\0'<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
      <break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="41" pos:column="5">newbuf<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">Curl_saferealloc<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">buf<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">len_out<pos:position pos:line="41" pos:column="43"/></name> <operator pos:line="41" pos:column="44">+<pos:position pos:line="41" pos:column="45"/></operator> <name pos:line="41" pos:column="46">NTLM_BUFSIZE<pos:position pos:line="41" pos:column="58"/></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><operator pos:line="42" pos:column="8">!<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">newbuf<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">buf<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">newbuf<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></while>

  <comment type="block" pos:line="48" pos:column="3">/* Samba/winbind installed but not configured */</comment>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name pos:line="49" pos:column="6">state<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">==<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">NTLMSTATE_TYPE1<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">&amp;&amp;<pos:position pos:line="49" pos:column="41"/></operator>
     <name pos:line="50" pos:column="6">len_out<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">==<pos:position pos:line="50" pos:column="16"/></operator> <literal type="number" pos:line="50" pos:column="17">3<pos:position pos:line="50" pos:column="18"/></literal> <operator pos:line="50" pos:column="19">&amp;&amp;<pos:position pos:line="50" pos:column="29"/></operator>
     <name><name pos:line="51" pos:column="6">buf<pos:position pos:line="51" pos:column="9"/></name><index pos:line="51" pos:column="9">[<expr><literal type="number" pos:line="51" pos:column="10">0<pos:position pos:line="51" pos:column="11"/></literal></expr>]<pos:position pos:line="51" pos:column="12"/></index></name> <operator pos:line="51" pos:column="13">==<pos:position pos:line="51" pos:column="15"/></operator> <literal type="char" pos:line="51" pos:column="16">'P'<pos:position pos:line="51" pos:column="19"/></literal> <operator pos:line="51" pos:column="20">&amp;&amp;<pos:position pos:line="51" pos:column="30"/></operator> <name><name pos:line="51" pos:column="23">buf<pos:position pos:line="51" pos:column="26"/></name><index pos:line="51" pos:column="26">[<expr><literal type="number" pos:line="51" pos:column="27">1<pos:position pos:line="51" pos:column="28"/></literal></expr>]<pos:position pos:line="51" pos:column="29"/></index></name> <operator pos:line="51" pos:column="30">==<pos:position pos:line="51" pos:column="32"/></operator> <literal type="char" pos:line="51" pos:column="33">'W'<pos:position pos:line="51" pos:column="36"/></literal></expr>)<pos:position pos:line="51" pos:column="37"/></condition><then pos:line="51" pos:column="37">
    <block type="pseudo"><goto pos:line="52" pos:column="5">goto <name pos:line="52" pos:column="10">done<pos:position pos:line="52" pos:column="14"/></name>;<pos:position pos:line="52" pos:column="15"/></goto></block></then></if>
  <comment type="block" pos:line="53" pos:column="3">/* invalid response */</comment>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">len_out<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">&lt;<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="16">4<pos:position pos:line="54" pos:column="17"/></literal></expr>)<pos:position pos:line="54" pos:column="18"/></condition><then pos:line="54" pos:column="18">
    <block type="pseudo"><goto pos:line="55" pos:column="5">goto <name pos:line="55" pos:column="10">done<pos:position pos:line="55" pos:column="14"/></name>;<pos:position pos:line="55" pos:column="15"/></goto></block></then></if>
  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name pos:line="56" pos:column="6">state<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">==<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">NTLMSTATE_TYPE1<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">&amp;&amp;<pos:position pos:line="56" pos:column="41"/></operator>
     <operator pos:line="57" pos:column="6">(<pos:position pos:line="57" pos:column="7"/></operator><name><name pos:line="57" pos:column="7">buf<pos:position pos:line="57" pos:column="10"/></name><index pos:line="57" pos:column="10">[<expr><literal type="number" pos:line="57" pos:column="11">0<pos:position pos:line="57" pos:column="12"/></literal></expr>]<pos:position pos:line="57" pos:column="13"/></index></name><operator pos:line="57" pos:column="13">!=<pos:position pos:line="57" pos:column="15"/></operator><literal type="char" pos:line="57" pos:column="15">'Y'<pos:position pos:line="57" pos:column="18"/></literal> <operator pos:line="57" pos:column="19">||<pos:position pos:line="57" pos:column="21"/></operator> <name><name pos:line="57" pos:column="22">buf<pos:position pos:line="57" pos:column="25"/></name><index pos:line="57" pos:column="25">[<expr><literal type="number" pos:line="57" pos:column="26">1<pos:position pos:line="57" pos:column="27"/></literal></expr>]<pos:position pos:line="57" pos:column="28"/></index></name><operator pos:line="57" pos:column="28">!=<pos:position pos:line="57" pos:column="30"/></operator><literal type="char" pos:line="57" pos:column="30">'R'<pos:position pos:line="57" pos:column="33"/></literal> <operator pos:line="57" pos:column="34">||<pos:position pos:line="57" pos:column="36"/></operator> <name><name pos:line="57" pos:column="37">buf<pos:position pos:line="57" pos:column="40"/></name><index pos:line="57" pos:column="40">[<expr><literal type="number" pos:line="57" pos:column="41">2<pos:position pos:line="57" pos:column="42"/></literal></expr>]<pos:position pos:line="57" pos:column="43"/></index></name><operator pos:line="57" pos:column="43">!=<pos:position pos:line="57" pos:column="45"/></operator><literal type="char" pos:line="57" pos:column="45">' '<pos:position pos:line="57" pos:column="48"/></literal><operator pos:line="57" pos:column="48">)<pos:position pos:line="57" pos:column="49"/></operator></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50">
    <block type="pseudo"><goto pos:line="58" pos:column="5">goto <name pos:line="58" pos:column="10">done<pos:position pos:line="58" pos:column="14"/></name>;<pos:position pos:line="58" pos:column="15"/></goto></block></then></if>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">state<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">==<pos:position pos:line="59" pos:column="14"/></operator> <name pos:line="59" pos:column="15">NTLMSTATE_TYPE2<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">&amp;&amp;<pos:position pos:line="59" pos:column="41"/></operator>
     <operator pos:line="60" pos:column="6">(<pos:position pos:line="60" pos:column="7"/></operator><name><name pos:line="60" pos:column="7">buf<pos:position pos:line="60" pos:column="10"/></name><index pos:line="60" pos:column="10">[<expr><literal type="number" pos:line="60" pos:column="11">0<pos:position pos:line="60" pos:column="12"/></literal></expr>]<pos:position pos:line="60" pos:column="13"/></index></name><operator pos:line="60" pos:column="13">!=<pos:position pos:line="60" pos:column="15"/></operator><literal type="char" pos:line="60" pos:column="15">'K'<pos:position pos:line="60" pos:column="18"/></literal> <operator pos:line="60" pos:column="19">||<pos:position pos:line="60" pos:column="21"/></operator> <name><name pos:line="60" pos:column="22">buf<pos:position pos:line="60" pos:column="25"/></name><index pos:line="60" pos:column="25">[<expr><literal type="number" pos:line="60" pos:column="26">1<pos:position pos:line="60" pos:column="27"/></literal></expr>]<pos:position pos:line="60" pos:column="28"/></index></name><operator pos:line="60" pos:column="28">!=<pos:position pos:line="60" pos:column="30"/></operator><literal type="char" pos:line="60" pos:column="30">'K'<pos:position pos:line="60" pos:column="33"/></literal> <operator pos:line="60" pos:column="34">||<pos:position pos:line="60" pos:column="36"/></operator> <name><name pos:line="60" pos:column="37">buf<pos:position pos:line="60" pos:column="40"/></name><index pos:line="60" pos:column="40">[<expr><literal type="number" pos:line="60" pos:column="41">2<pos:position pos:line="60" pos:column="42"/></literal></expr>]<pos:position pos:line="60" pos:column="43"/></index></name><operator pos:line="60" pos:column="43">!=<pos:position pos:line="60" pos:column="45"/></operator><literal type="char" pos:line="60" pos:column="45">' '<pos:position pos:line="60" pos:column="48"/></literal><operator pos:line="60" pos:column="48">)<pos:position pos:line="60" pos:column="49"/></operator> <operator pos:line="60" pos:column="50">&amp;&amp;<pos:position pos:line="60" pos:column="60"/></operator>
     <operator pos:line="61" pos:column="6">(<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">buf<pos:position pos:line="61" pos:column="10"/></name><index pos:line="61" pos:column="10">[<expr><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal></expr>]<pos:position pos:line="61" pos:column="13"/></index></name><operator pos:line="61" pos:column="13">!=<pos:position pos:line="61" pos:column="15"/></operator><literal type="char" pos:line="61" pos:column="15">'A'<pos:position pos:line="61" pos:column="18"/></literal> <operator pos:line="61" pos:column="19">||<pos:position pos:line="61" pos:column="21"/></operator> <name><name pos:line="61" pos:column="22">buf<pos:position pos:line="61" pos:column="25"/></name><index pos:line="61" pos:column="25">[<expr><literal type="number" pos:line="61" pos:column="26">1<pos:position pos:line="61" pos:column="27"/></literal></expr>]<pos:position pos:line="61" pos:column="28"/></index></name><operator pos:line="61" pos:column="28">!=<pos:position pos:line="61" pos:column="30"/></operator><literal type="char" pos:line="61" pos:column="30">'F'<pos:position pos:line="61" pos:column="33"/></literal> <operator pos:line="61" pos:column="34">||<pos:position pos:line="61" pos:column="36"/></operator> <name><name pos:line="61" pos:column="37">buf<pos:position pos:line="61" pos:column="40"/></name><index pos:line="61" pos:column="40">[<expr><literal type="number" pos:line="61" pos:column="41">2<pos:position pos:line="61" pos:column="42"/></literal></expr>]<pos:position pos:line="61" pos:column="43"/></index></name><operator pos:line="61" pos:column="43">!=<pos:position pos:line="61" pos:column="45"/></operator><literal type="char" pos:line="61" pos:column="45">' '<pos:position pos:line="61" pos:column="48"/></literal><operator pos:line="61" pos:column="48">)<pos:position pos:line="61" pos:column="49"/></operator></expr>)<pos:position pos:line="61" pos:column="50"/></condition><then pos:line="61" pos:column="50">
    <block type="pseudo"><goto pos:line="62" pos:column="5">goto <name pos:line="62" pos:column="10">done<pos:position pos:line="62" pos:column="14"/></name>;<pos:position pos:line="62" pos:column="15"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="64" pos:column="3">conn<pos:position pos:line="64" pos:column="7"/></name><operator pos:line="64" pos:column="7">-&gt;<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="9">response_header<pos:position pos:line="64" pos:column="24"/></name></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <call><name pos:line="64" pos:column="27">aprintf<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><literal type="string" pos:line="64" pos:column="35">"NTLM %.*s"<pos:position pos:line="64" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="48">len_out<pos:position pos:line="64" pos:column="55"/></name> <operator pos:line="64" pos:column="56">-<pos:position pos:line="64" pos:column="57"/></operator> <literal type="number" pos:line="64" pos:column="58">4<pos:position pos:line="64" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="61">buf<pos:position pos:line="64" pos:column="64"/></name> <operator pos:line="64" pos:column="65">+<pos:position pos:line="64" pos:column="66"/></operator> <literal type="number" pos:line="64" pos:column="67">3<pos:position pos:line="64" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">free<pos:position pos:line="65" pos:column="7"/></name><argument_list pos:line="65" pos:column="7">(<argument><expr><name pos:line="65" pos:column="8">buf<pos:position pos:line="65" pos:column="11"/></name></expr></argument>)<pos:position pos:line="65" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="13"/></expr_stmt>
  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">CURLE_OK<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></return>
<label><name pos:line="67" pos:column="1">done<pos:position pos:line="67" pos:column="5"/></name>:<pos:position pos:line="67" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">free<pos:position pos:line="68" pos:column="7"/></name><argument_list pos:line="68" pos:column="7">(<argument><expr><name pos:line="68" pos:column="8">buf<pos:position pos:line="68" pos:column="11"/></name></expr></argument>)<pos:position pos:line="68" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="13"/></expr_stmt>
  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

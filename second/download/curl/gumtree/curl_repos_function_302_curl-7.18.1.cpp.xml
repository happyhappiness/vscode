<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_302_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">GlobCode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">glob_range<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">URLGlob<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">glob<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pattern<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">pos<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">amount<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* processes a range expression with the point behind the opening '['
     - char range: e.g. "a-z]", "B-Q]"
     - num range: e.g. "0-9]", "17-2000]"
     - num range with leading zeros: e.g. "001-999]"
     expression is checked for well-formedness and collected until the next ']'
  */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">URLPattern<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">pat<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">wordamount<pos:position pos:line="12" pos:column="17"/></name><init pos:line="12" pos:column="17">=<expr><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name pos:line="13" pos:column="8">sep<pos:position pos:line="13" pos:column="11"/></name></decl>;<pos:position pos:line="13" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">sep2<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">step<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">rc<pos:position pos:line="16" pos:column="9"/></name></decl>;<pos:position pos:line="16" pos:column="10"/></decl_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">pat<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">URLPattern<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator><operator pos:line="18" pos:column="22">&amp;<pos:position pos:line="18" pos:column="27"/></operator><name><name pos:line="18" pos:column="23">glob<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">pattern<pos:position pos:line="18" pos:column="36"/></name><index pos:line="18" pos:column="36">[<expr><name><name pos:line="18" pos:column="37">glob<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">size<pos:position pos:line="18" pos:column="47"/></name></name> <operator pos:line="18" pos:column="48">/<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">2<pos:position pos:line="18" pos:column="51"/></literal></expr>]<pos:position pos:line="18" pos:column="52"/></index></name></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
  <comment type="block" pos:line="19" pos:column="3">/* patterns 0,1,2,... correspond to size=1,3,5,... */</comment>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">++<pos:position pos:line="20" pos:column="5"/></operator><name><name pos:line="20" pos:column="5">glob<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">size<pos:position pos:line="20" pos:column="15"/></name></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">ISALPHA<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><operator pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">pattern<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{         <comment type="block" pos:line="22" pos:column="36">/* character range detected */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name></type> <name pos:line="23" pos:column="10">min_c<pos:position pos:line="23" pos:column="15"/></name></decl>;<pos:position pos:line="23" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name></type> <name pos:line="24" pos:column="10">max_c<pos:position pos:line="24" pos:column="15"/></name></decl>;<pos:position pos:line="24" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">pat<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">type<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">UPTCharRange<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rc<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">sscanf<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">pattern<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="26">"%c-%c%c%d%c"<pos:position pos:line="27" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="42">min_c<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="49">&amp;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="50">max_c<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="57">&amp;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="58">sep<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="63">&amp;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="64">step<pos:position pos:line="27" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="70">&amp;<pos:position pos:line="27" pos:column="75"/></operator><name pos:line="27" pos:column="71">sep2<pos:position pos:line="27" pos:column="75"/></name></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="77"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">rc<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">&lt;<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="15">3<pos:position pos:line="28" pos:column="16"/></literal><operator pos:line="28" pos:column="16">)<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">||<pos:position pos:line="28" pos:column="20"/></operator> <operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">min_c<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&gt;=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="31">max_c<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="38">||<pos:position pos:line="28" pos:column="40"/></operator> <operator pos:line="28" pos:column="41">(<pos:position pos:line="28" pos:column="42"/></operator><operator pos:line="28" pos:column="42">(<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">max_c<pos:position pos:line="28" pos:column="48"/></name> <operator pos:line="28" pos:column="49">-<pos:position pos:line="28" pos:column="50"/></operator> <name pos:line="28" pos:column="51">min_c<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">)<pos:position pos:line="28" pos:column="57"/></operator> <operator pos:line="28" pos:column="58">&gt;<pos:position pos:line="28" pos:column="62"/></operator> <operator pos:line="28" pos:column="60">(<pos:position pos:line="28" pos:column="61"/></operator><literal type="char" pos:line="28" pos:column="61">'z'<pos:position pos:line="28" pos:column="64"/></literal> <operator pos:line="28" pos:column="65">-<pos:position pos:line="28" pos:column="66"/></operator> <literal type="char" pos:line="28" pos:column="67">'a'<pos:position pos:line="28" pos:column="70"/></literal><operator pos:line="28" pos:column="70">)<pos:position pos:line="28" pos:column="71"/></operator><operator pos:line="28" pos:column="71">)<pos:position pos:line="28" pos:column="72"/></operator></expr>)<pos:position pos:line="28" pos:column="73"/></condition><then pos:line="28" pos:column="73"> <block pos:line="28" pos:column="74">{
      <comment type="block" pos:line="29" pos:column="7">/* the pattern is not well-formed */</comment>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">snprintf<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name><name pos:line="30" pos:column="16">glob<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">errormsg<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="32">sizeof<argument_list pos:line="30" pos:column="38">(<argument><expr><name><name pos:line="30" pos:column="39">glob<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">errormsg<pos:position pos:line="30" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="31" pos:column="16">"error: bad range specification after pos %d\n"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">pos<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">GLOB_ERROR<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* check the (first) separating character */</comment>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><operator pos:line="36" pos:column="8">(<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">sep<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">!=<pos:position pos:line="36" pos:column="15"/></operator> <literal type="char" pos:line="36" pos:column="16">']'<pos:position pos:line="36" pos:column="19"/></literal><operator pos:line="36" pos:column="19">)<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">&amp;&amp;<pos:position pos:line="36" pos:column="31"/></operator> <operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">sep<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">!=<pos:position pos:line="36" pos:column="31"/></operator> <literal type="char" pos:line="36" pos:column="32">':'<pos:position pos:line="36" pos:column="35"/></literal><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37"> <block pos:line="36" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">snprintf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name><name pos:line="37" pos:column="16">glob<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">errormsg<pos:position pos:line="37" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="32">sizeof<argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">glob<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">errormsg<pos:position pos:line="37" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="38" pos:column="16">"error: unsupported character (%c) after range at pos %d\n"<pos:position pos:line="38" pos:column="75"/></literal></expr></argument>,
               <argument><expr><name pos:line="39" pos:column="16">sep<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="21">pos<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
      <return pos:line="40" pos:column="7">return <expr><name pos:line="40" pos:column="14">GLOB_ERROR<pos:position pos:line="40" pos:column="24"/></name></expr>;<pos:position pos:line="40" pos:column="25"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* if there was a ":[num]" thing, use that as step or else use 1 */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">pat<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">content<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">.<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">CharRange<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">step<pos:position pos:line="44" pos:column="32"/></name></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator>
      <ternary><condition><expr><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><operator pos:line="45" pos:column="8">(<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="9">sep<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">==<pos:position pos:line="45" pos:column="15"/></operator> <literal type="char" pos:line="45" pos:column="16">':'<pos:position pos:line="45" pos:column="19"/></literal><operator pos:line="45" pos:column="19">)<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">&amp;&amp;<pos:position pos:line="45" pos:column="31"/></operator> <operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">rc<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">==<pos:position pos:line="45" pos:column="30"/></operator> <literal type="number" pos:line="45" pos:column="31">5<pos:position pos:line="45" pos:column="32"/></literal><operator pos:line="45" pos:column="32">)<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">&amp;&amp;<pos:position pos:line="45" pos:column="44"/></operator> <operator pos:line="45" pos:column="37">(<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">sep2<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">==<pos:position pos:line="45" pos:column="45"/></operator> <literal type="char" pos:line="45" pos:column="46">']'<pos:position pos:line="45" pos:column="49"/></literal><operator pos:line="45" pos:column="49">)<pos:position pos:line="45" pos:column="50"/></operator><operator pos:line="45" pos:column="50">)<pos:position pos:line="45" pos:column="51"/></operator></expr>?<pos:position pos:line="45" pos:column="52"/></condition><then><expr><name pos:line="45" pos:column="52">step<pos:position pos:line="45" pos:column="56"/></name></expr></then><else pos:line="45" pos:column="56">:<expr><literal type="number" pos:line="45" pos:column="57">1<pos:position pos:line="45" pos:column="58"/></literal></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">pat<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">content<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">.<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">CharRange<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">ptr_c<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <name><name pos:line="47" pos:column="36">pat<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">content<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">.<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="49">CharRange<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">.<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="59">min_c<pos:position pos:line="47" pos:column="64"/></name></name> <operator pos:line="47" pos:column="65">=<pos:position pos:line="47" pos:column="66"/></operator> <name pos:line="47" pos:column="67">min_c<pos:position pos:line="47" pos:column="72"/></name></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">pat<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">-&gt;<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="10">content<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">CharRange<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">.<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">max_c<pos:position pos:line="48" pos:column="33"/></name></name> <operator pos:line="48" pos:column="34">=<pos:position pos:line="48" pos:column="35"/></operator> <name pos:line="48" pos:column="36">max_c<pos:position pos:line="48" pos:column="41"/></name></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then>
  <elseif pos:line="50" pos:column="3">else <if pos:line="50" pos:column="8">if <condition pos:line="50" pos:column="11">(<expr><call><name pos:line="50" pos:column="12">ISDIGIT<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><operator pos:line="50" pos:column="20">*<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">pattern<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30"> <block pos:line="50" pos:column="31">{ <comment type="block" pos:line="50" pos:column="33">/* numeric range detected */</comment>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">int<pos:position pos:line="51" pos:column="8"/></name></type> <name pos:line="51" pos:column="9">min_n<pos:position pos:line="51" pos:column="14"/></name></decl>;<pos:position pos:line="51" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="52" pos:column="5">int<pos:position pos:line="52" pos:column="8"/></name></type> <name pos:line="52" pos:column="9">max_n<pos:position pos:line="52" pos:column="14"/></name></decl>;<pos:position pos:line="52" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="54" pos:column="5">pat<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">type<pos:position pos:line="54" pos:column="14"/></name></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">UPTNumRange<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">pat<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">content<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">.<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">NumRange<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">.<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="27">padlength<pos:position pos:line="55" pos:column="36"/></name></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <literal type="number" pos:line="55" pos:column="39">0<pos:position pos:line="55" pos:column="40"/></literal></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="57" pos:column="5">rc<pos:position pos:line="57" pos:column="7"/></name> <operator pos:line="57" pos:column="8">=<pos:position pos:line="57" pos:column="9"/></operator> <call><name pos:line="57" pos:column="10">sscanf<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">pattern<pos:position pos:line="57" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="26">"%d-%d%c%d%c"<pos:position pos:line="57" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="41">&amp;<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="42">min_n<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="49">&amp;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="50">max_n<pos:position pos:line="57" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="57">&amp;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="58">sep<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="63">&amp;<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="64">step<pos:position pos:line="57" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="70">&amp;<pos:position pos:line="57" pos:column="75"/></operator><name pos:line="57" pos:column="71">sep2<pos:position pos:line="57" pos:column="75"/></name></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="77"/></expr_stmt>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">(<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">rc<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">&lt;<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="15">2<pos:position pos:line="59" pos:column="16"/></literal><operator pos:line="59" pos:column="16">)<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">||<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">min_n<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">&gt;<pos:position pos:line="59" pos:column="32"/></operator> <name pos:line="59" pos:column="30">max_n<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">)<pos:position pos:line="59" pos:column="36"/></operator></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37"> <block pos:line="59" pos:column="38">{
      <comment type="block" pos:line="60" pos:column="7">/* the pattern is not well-formed */</comment>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">snprintf<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><name><name pos:line="61" pos:column="16">glob<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">errormsg<pos:position pos:line="61" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="32">sizeof<argument_list pos:line="61" pos:column="38">(<argument><expr><name><name pos:line="61" pos:column="39">glob<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">-&gt;<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="45">errormsg<pos:position pos:line="61" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="62" pos:column="16">"error: bad range specification after pos %d\n"<pos:position pos:line="62" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="65">pos<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="70"/></expr_stmt>
      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">GLOB_ERROR<pos:position pos:line="63" pos:column="24"/></name></expr>;<pos:position pos:line="63" pos:column="25"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">pat<pos:position pos:line="65" pos:column="8"/></name><operator pos:line="65" pos:column="8">-&gt;<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="10">content<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">.<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">NumRange<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">.<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">ptr_n<pos:position pos:line="65" pos:column="32"/></name></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator>  <name><name pos:line="65" pos:column="36">pat<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">-&gt;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="41">content<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">.<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="49">NumRange<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">.<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="58">min_n<pos:position pos:line="65" pos:column="63"/></name></name> <operator pos:line="65" pos:column="64">=<pos:position pos:line="65" pos:column="65"/></operator> <name pos:line="65" pos:column="66">min_n<pos:position pos:line="65" pos:column="71"/></name></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">pat<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">-&gt;<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="10">content<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">NumRange<pos:position pos:line="66" pos:column="26"/></name><operator pos:line="66" pos:column="26">.<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">max_n<pos:position pos:line="66" pos:column="32"/></name></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">max_n<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="68" pos:column="5">/* if there was a ":[num]" thing, use that as step or else use 1 */</comment>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">pat<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">content<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">.<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">NumRange<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">.<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">step<pos:position pos:line="69" pos:column="31"/></name></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator>
      <ternary><condition><expr><operator pos:line="70" pos:column="7">(<pos:position pos:line="70" pos:column="8"/></operator><operator pos:line="70" pos:column="8">(<pos:position pos:line="70" pos:column="9"/></operator><name pos:line="70" pos:column="9">sep<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">==<pos:position pos:line="70" pos:column="15"/></operator> <literal type="char" pos:line="70" pos:column="16">':'<pos:position pos:line="70" pos:column="19"/></literal><operator pos:line="70" pos:column="19">)<pos:position pos:line="70" pos:column="20"/></operator> <operator pos:line="70" pos:column="21">&amp;&amp;<pos:position pos:line="70" pos:column="31"/></operator> <operator pos:line="70" pos:column="24">(<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="25">rc<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">==<pos:position pos:line="70" pos:column="30"/></operator> <literal type="number" pos:line="70" pos:column="31">5<pos:position pos:line="70" pos:column="32"/></literal><operator pos:line="70" pos:column="32">)<pos:position pos:line="70" pos:column="33"/></operator> <operator pos:line="70" pos:column="34">&amp;&amp;<pos:position pos:line="70" pos:column="44"/></operator> <operator pos:line="70" pos:column="37">(<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">sep2<pos:position pos:line="70" pos:column="42"/></name> <operator pos:line="70" pos:column="43">==<pos:position pos:line="70" pos:column="45"/></operator> <literal type="char" pos:line="70" pos:column="46">']'<pos:position pos:line="70" pos:column="49"/></literal><operator pos:line="70" pos:column="49">)<pos:position pos:line="70" pos:column="50"/></operator><operator pos:line="70" pos:column="50">)<pos:position pos:line="70" pos:column="51"/></operator></expr>?<pos:position pos:line="70" pos:column="52"/></condition><then><expr><name pos:line="70" pos:column="52">step<pos:position pos:line="70" pos:column="56"/></name></expr></then><else pos:line="70" pos:column="56">:<expr><literal type="number" pos:line="70" pos:column="57">1<pos:position pos:line="70" pos:column="58"/></literal></expr></else></ternary></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">*<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">pattern<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">==<pos:position pos:line="72" pos:column="20"/></operator> <literal type="char" pos:line="72" pos:column="21">'0'<pos:position pos:line="72" pos:column="24"/></literal></expr>)<pos:position pos:line="72" pos:column="25"/></condition><then pos:line="72" pos:column="25"> <block pos:line="72" pos:column="26">{              <comment type="block" pos:line="72" pos:column="41">/* leading zero specified */</comment>
      <expr_stmt><expr><name pos:line="73" pos:column="7">c<pos:position pos:line="73" pos:column="8"/></name> <operator pos:line="73" pos:column="9">=<pos:position pos:line="73" pos:column="10"/></operator> <name pos:line="73" pos:column="11">pattern<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></expr_stmt>
      <while pos:line="74" pos:column="7">while <condition pos:line="74" pos:column="13">(<expr><call><name pos:line="74" pos:column="14">ISDIGIT<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><operator pos:line="74" pos:column="22">*<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">c<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="26"/></condition> <block pos:line="74" pos:column="27">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">c<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">++<pos:position pos:line="75" pos:column="12"/></operator></expr>;<pos:position pos:line="75" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="76" pos:column="9">++<pos:position pos:line="76" pos:column="11"/></operator><name><name pos:line="76" pos:column="11">pat<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">content<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">NumRange<pos:position pos:line="76" pos:column="32"/></name><operator pos:line="76" pos:column="32">.<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="33">padlength<pos:position pos:line="76" pos:column="42"/></name></name></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt> <comment type="block" pos:line="76" pos:column="44">/* padding length is set for all
                                              instances of this pattern */</comment>
      }<pos:position pos:line="78" pos:column="8"/></block></while>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

  }<pos:position pos:line="81" pos:column="4"/></block></then></if></elseif>
  <else pos:line="82" pos:column="3">else <block pos:line="82" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">snprintf<pos:position pos:line="83" pos:column="13"/></name><argument_list pos:line="83" pos:column="13">(<argument><expr><name><name pos:line="83" pos:column="14">glob<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">errormsg<pos:position pos:line="83" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="30">sizeof<argument_list pos:line="83" pos:column="36">(<argument><expr><name><name pos:line="83" pos:column="37">glob<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">-&gt;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="43">errormsg<pos:position pos:line="83" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></sizeof></expr></argument>,
             <argument><expr><literal type="string" pos:line="84" pos:column="14">"illegal character in range specification at pos %d\n"<pos:position pos:line="84" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="70">pos<pos:position pos:line="84" pos:column="73"/></name></expr></argument>)<pos:position pos:line="84" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="75"/></expr_stmt>
    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">GLOB_ERROR<pos:position pos:line="85" pos:column="22"/></name></expr>;<pos:position pos:line="85" pos:column="23"/></return>
  }<pos:position pos:line="86" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="88" pos:column="3">c<pos:position pos:line="88" pos:column="4"/></name> <operator pos:line="88" pos:column="5">=<pos:position pos:line="88" pos:column="6"/></operator> <operator pos:line="88" pos:column="7">(<pos:position pos:line="88" pos:column="8"/></operator><name pos:line="88" pos:column="8">char<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">*<pos:position pos:line="88" pos:column="13"/></operator><operator pos:line="88" pos:column="13">)<pos:position pos:line="88" pos:column="14"/></operator><call><name pos:line="88" pos:column="14">strchr<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">pattern<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="88" pos:column="30">']'<pos:position pos:line="88" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt> <comment type="block" pos:line="88" pos:column="36">/* continue after next ']' */</comment>
  <if pos:line="89" pos:column="3">if<condition pos:line="89" pos:column="5">(<expr><name pos:line="89" pos:column="6">c<pos:position pos:line="89" pos:column="7"/></name></expr>)<pos:position pos:line="89" pos:column="8"/></condition><then pos:line="89" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="5">c<pos:position pos:line="90" pos:column="6"/></name><operator pos:line="90" pos:column="6">++<pos:position pos:line="90" pos:column="8"/></operator></expr>;<pos:position pos:line="90" pos:column="9"/></expr_stmt></block></then>
  <else pos:line="91" pos:column="3">else <block pos:line="91" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">snprintf<pos:position pos:line="92" pos:column="13"/></name><argument_list pos:line="92" pos:column="13">(<argument><expr><name><name pos:line="92" pos:column="14">glob<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">errormsg<pos:position pos:line="92" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="30">sizeof<argument_list pos:line="92" pos:column="36">(<argument><expr><name><name pos:line="92" pos:column="37">glob<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">-&gt;<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="43">errormsg<pos:position pos:line="92" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="54">"missing ']'"<pos:position pos:line="92" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="69"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><name pos:line="93" pos:column="12">GLOB_ERROR<pos:position pos:line="93" pos:column="22"/></name></expr>;<pos:position pos:line="93" pos:column="23"/></return> <comment type="block" pos:line="93" pos:column="24">/* missing ']' */</comment>
  }<pos:position pos:line="94" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="96" pos:column="3">/* always check for a literal (may be "") between patterns */</comment>

  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name pos:line="98" pos:column="6">GLOB_ERROR<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">==<pos:position pos:line="98" pos:column="19"/></operator> <call><name pos:line="98" pos:column="20">glob_word<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name pos:line="98" pos:column="30">glob<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="36">c<pos:position pos:line="98" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="39">pos<pos:position pos:line="98" pos:column="42"/></name> <operator pos:line="98" pos:column="43">+<pos:position pos:line="98" pos:column="44"/></operator> <operator pos:line="98" pos:column="45">(<pos:position pos:line="98" pos:column="46"/></operator><name pos:line="98" pos:column="46">c<pos:position pos:line="98" pos:column="47"/></name> <operator pos:line="98" pos:column="48">-<pos:position pos:line="98" pos:column="49"/></operator> <name pos:line="98" pos:column="50">pattern<pos:position pos:line="98" pos:column="57"/></name><operator pos:line="98" pos:column="57">)<pos:position pos:line="98" pos:column="58"/></operator></expr></argument>, <argument><expr><operator pos:line="98" pos:column="60">&amp;<pos:position pos:line="98" pos:column="65"/></operator><name pos:line="98" pos:column="61">wordamount<pos:position pos:line="98" pos:column="71"/></name></expr></argument>)<pos:position pos:line="98" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="73"/></condition><then pos:line="98" pos:column="73">
    <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="5">wordamount<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <literal type="number" pos:line="99" pos:column="18">1<pos:position pos:line="99" pos:column="19"/></literal></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt></block></then></if>

  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><name><name pos:line="101" pos:column="6">pat<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">type<pos:position pos:line="101" pos:column="15"/></name></name> <operator pos:line="101" pos:column="16">==<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="19">UPTCharRange<pos:position pos:line="101" pos:column="31"/></name></expr>)<pos:position pos:line="101" pos:column="32"/></condition><then pos:line="101" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="102" pos:column="5">*<pos:position pos:line="102" pos:column="6"/></operator><name pos:line="102" pos:column="6">amount<pos:position pos:line="102" pos:column="12"/></name> <operator pos:line="102" pos:column="13">=<pos:position pos:line="102" pos:column="14"/></operator> <operator pos:line="102" pos:column="15">(<pos:position pos:line="102" pos:column="16"/></operator><name><name pos:line="102" pos:column="16">pat<pos:position pos:line="102" pos:column="19"/></name><operator pos:line="102" pos:column="19">-&gt;<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="21">content<pos:position pos:line="102" pos:column="28"/></name><operator pos:line="102" pos:column="28">.<pos:position pos:line="102" pos:column="29"/></operator><name pos:line="102" pos:column="29">CharRange<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">.<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="39">max_c<pos:position pos:line="102" pos:column="44"/></name></name> <operator pos:line="102" pos:column="45">-<pos:position pos:line="102" pos:column="46"/></operator>
               <name><name pos:line="103" pos:column="16">pat<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">-&gt;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="21">content<pos:position pos:line="103" pos:column="28"/></name><operator pos:line="103" pos:column="28">.<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="29">CharRange<pos:position pos:line="103" pos:column="38"/></name><operator pos:line="103" pos:column="38">.<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="39">min_c<pos:position pos:line="103" pos:column="44"/></name></name> <operator pos:line="103" pos:column="45">+<pos:position pos:line="103" pos:column="46"/></operator> <literal type="number" pos:line="103" pos:column="47">1<pos:position pos:line="103" pos:column="48"/></literal><operator pos:line="103" pos:column="48">)<pos:position pos:line="103" pos:column="49"/></operator> <operator pos:line="103" pos:column="50">*<pos:position pos:line="103" pos:column="51"/></operator>
      <name pos:line="104" pos:column="7">wordamount<pos:position pos:line="104" pos:column="17"/></name></expr>;<pos:position pos:line="104" pos:column="18"/></expr_stmt></block></then>
  <else pos:line="105" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="106" pos:column="5">*<pos:position pos:line="106" pos:column="6"/></operator><name pos:line="106" pos:column="6">amount<pos:position pos:line="106" pos:column="12"/></name> <operator pos:line="106" pos:column="13">=<pos:position pos:line="106" pos:column="14"/></operator> <operator pos:line="106" pos:column="15">(<pos:position pos:line="106" pos:column="16"/></operator><name><name pos:line="106" pos:column="16">pat<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">-&gt;<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="21">content<pos:position pos:line="106" pos:column="28"/></name><operator pos:line="106" pos:column="28">.<pos:position pos:line="106" pos:column="29"/></operator><name pos:line="106" pos:column="29">NumRange<pos:position pos:line="106" pos:column="37"/></name><operator pos:line="106" pos:column="37">.<pos:position pos:line="106" pos:column="38"/></operator><name pos:line="106" pos:column="38">max_n<pos:position pos:line="106" pos:column="43"/></name></name> <operator pos:line="106" pos:column="44">-<pos:position pos:line="106" pos:column="45"/></operator>
               <name><name pos:line="107" pos:column="16">pat<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">-&gt;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="21">content<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">.<pos:position pos:line="107" pos:column="29"/></operator><name pos:line="107" pos:column="29">NumRange<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">.<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="38">min_n<pos:position pos:line="107" pos:column="43"/></name></name> <operator pos:line="107" pos:column="44">+<pos:position pos:line="107" pos:column="45"/></operator> <literal type="number" pos:line="107" pos:column="46">1<pos:position pos:line="107" pos:column="47"/></literal><operator pos:line="107" pos:column="47">)<pos:position pos:line="107" pos:column="48"/></operator> <operator pos:line="107" pos:column="49">*<pos:position pos:line="107" pos:column="50"/></operator> <name pos:line="107" pos:column="51">wordamount<pos:position pos:line="107" pos:column="61"/></name></expr>;<pos:position pos:line="107" pos:column="62"/></expr_stmt></block></else></if>

  <return pos:line="109" pos:column="3">return <expr><name pos:line="109" pos:column="10">GLOB_OK<pos:position pos:line="109" pos:column="17"/></name></expr>;<pos:position pos:line="109" pos:column="18"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

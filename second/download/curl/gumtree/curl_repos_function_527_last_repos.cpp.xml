<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_527_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">c<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">m<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">running<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">start_test_timing<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">()<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">global_init<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">CURL_GLOBAL_ALL<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">easy_init<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">c<pos:position pos:line="12" pos:column="14"/></name></expr></argument>)<pos:position pos:line="12" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">easy_setopt<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">c<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="18">CURLOPT_URL<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">URL<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">multi_init<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">m<pos:position pos:line="16" pos:column="15"/></name></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">multi_add_handle<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">m<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">c<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>

  <for pos:line="20" pos:column="3">for<control pos:line="20" pos:column="6">(<init pos:line="20" pos:column="7">;<pos:position pos:line="20" pos:column="8"/></init><condition pos:line="20" pos:column="8">;<pos:position pos:line="20" pos:column="9"/></condition><incr/>)<pos:position pos:line="20" pos:column="10"/></control> <block pos:line="20" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">struct<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">timeval<pos:position pos:line="21" pos:column="19"/></name></name></type> <name pos:line="21" pos:column="20">timeout<pos:position pos:line="21" pos:column="27"/></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">fd_set<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">fdread<pos:position pos:line="22" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="20">fdwrite<pos:position pos:line="22" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="29">fdexcep<pos:position pos:line="22" pos:column="36"/></name></decl>;<pos:position pos:line="22" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">maxfd<pos:position pos:line="23" pos:column="14"/></name> <init pos:line="23" pos:column="15">= <expr><operator pos:line="23" pos:column="17">-<pos:position pos:line="23" pos:column="18"/></operator><literal type="number" pos:line="23" pos:column="18">99<pos:position pos:line="23" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">timeout<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">tv_sec<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">timeout<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">tv_usec<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">100000L<pos:position pos:line="26" pos:column="30"/></literal></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt> <comment type="block" pos:line="26" pos:column="32">/* 100 ms */</comment>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">multi_perform<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">m<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="22">&amp;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="23">running<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">abort_on_test_timeout<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">()<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><operator pos:line="32" pos:column="8">!<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">running<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17">
      <block type="pseudo"><break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="33" pos:column="14">/* done */</comment>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">FD_ZERO<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><operator pos:line="35" pos:column="13">&amp;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="14">fdread<pos:position pos:line="35" pos:column="20"/></name></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FD_ZERO<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><operator pos:line="36" pos:column="13">&amp;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="14">fdwrite<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">FD_ZERO<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><operator pos:line="37" pos:column="13">&amp;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="14">fdexcep<pos:position pos:line="37" pos:column="21"/></name></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">multi_fdset<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">m<pos:position pos:line="39" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="20">&amp;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="21">fdread<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="29">&amp;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="30">fdwrite<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="39">&amp;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="40">fdexcep<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="49">&amp;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="50">maxfd<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">select_test<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">maxfd<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">+<pos:position pos:line="43" pos:column="24"/></operator> <literal type="number" pos:line="43" pos:column="25">1<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="29">fdread<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="37">&amp;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="38">fdwrite<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="47">&amp;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="48">fdexcep<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="57">&amp;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="58">timeout<pos:position pos:line="43" pos:column="65"/></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">abort_on_test_timeout<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">()<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></for>

<label><name pos:line="48" pos:column="1">test_cleanup<pos:position pos:line="48" pos:column="13"/></name>:<pos:position pos:line="48" pos:column="14"/></label>

  <comment type="block" pos:line="50" pos:column="3">/* proper cleanup sequence - type PA */</comment>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">curl_multi_remove_handle<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">m<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="31">c<pos:position pos:line="52" pos:column="32"/></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">curl_multi_cleanup<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">m<pos:position pos:line="53" pos:column="23"/></name></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">curl_easy_cleanup<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">c<pos:position pos:line="54" pos:column="22"/></name></expr></argument>)<pos:position pos:line="54" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">curl_global_cleanup<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">()<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>

  <return pos:line="57" pos:column="3">return <expr><name pos:line="57" pos:column="10">res<pos:position pos:line="57" pos:column="13"/></name></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

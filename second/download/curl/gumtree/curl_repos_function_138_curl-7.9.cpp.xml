<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_138_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="3" pos:column="5">0<pos:position pos:line="3" pos:column="6"/></literal></expr></cpp:if>
  char *testargs[]={
    "name1 = data in number one",
    "name2 = number two data",
    "test = @upload"
  };
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">nextarg<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">HttpPost<pos:position pos:line="12" pos:column="18"/></name></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type><name pos:line="12" pos:column="20">httppost<pos:position pos:line="12" pos:column="28"/></name><init pos:line="12" pos:column="28">=<expr><name pos:line="12" pos:column="29">NULL<pos:position pos:line="12" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">HttpPost<pos:position pos:line="13" pos:column="18"/></name></name> <modifier pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></modifier></type><name pos:line="13" pos:column="20">last_post<pos:position pos:line="13" pos:column="29"/></name><init pos:line="13" pos:column="29">=<expr><name pos:line="13" pos:column="30">NULL<pos:position pos:line="13" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">HttpPost<pos:position pos:line="14" pos:column="18"/></name></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type><name pos:line="14" pos:column="20">post<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">size<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">nread<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">buffer<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><literal type="number" pos:line="17" pos:column="15">4096<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="19" pos:column="3">struct<pos:position pos:line="19" pos:column="9"/></name> <name pos:line="19" pos:column="10">FormData<pos:position pos:line="19" pos:column="18"/></name></name> <modifier pos:line="19" pos:column="19">*<pos:position pos:line="19" pos:column="20"/></modifier></type><name pos:line="19" pos:column="20">form<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="20" pos:column="3">struct<pos:position pos:line="20" pos:column="9"/></name> <name pos:line="20" pos:column="10">Form<pos:position pos:line="20" pos:column="14"/></name></name></type> <name pos:line="20" pos:column="15">formread<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>

  <for pos:line="22" pos:column="3">for<control pos:line="22" pos:column="6">(<init><expr><name pos:line="22" pos:column="7">i<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator><literal type="number" pos:line="22" pos:column="9">1<pos:position pos:line="22" pos:column="10"/></literal></expr>;<pos:position pos:line="22" pos:column="11"/></init> <condition><expr><name pos:line="22" pos:column="12">i<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">&lt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">argc<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></condition> <incr><expr><name pos:line="22" pos:column="20">i<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="24"/></control> <block pos:line="22" pos:column="25">{

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">( <expr><call><name pos:line="24" pos:column="9">FormParse<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">( <argument><expr><name><name pos:line="24" pos:column="20">argv<pos:position pos:line="24" pos:column="24"/></name><index pos:line="24" pos:column="24">[<expr><name pos:line="24" pos:column="25">i<pos:position pos:line="24" pos:column="26"/></name></expr>]<pos:position pos:line="24" pos:column="27"/></index></name></expr></argument>,
		   <argument><expr><operator pos:line="25" pos:column="20">&amp;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="21">httppost<pos:position pos:line="25" pos:column="29"/></name></expr></argument>,
		   <argument><expr><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="21">last_post<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">fprintf<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">stderr<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"Illegally formatted input field: '%s'!\n"<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="28" pos:column="15">argv<pos:position pos:line="28" pos:column="19"/></name><index pos:line="28" pos:column="19">[<expr><name pos:line="28" pos:column="20">i<pos:position pos:line="28" pos:column="21"/></name></expr>]<pos:position pos:line="28" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><literal type="number" pos:line="29" pos:column="14">1<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="33" pos:column="3">form<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator><call><name pos:line="33" pos:column="8">Curl_getFormData<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">httppost<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="36">size<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">Curl_FormInit<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><operator pos:line="35" pos:column="17">&amp;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="18">formread<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">form<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>

  <do pos:line="37" pos:column="3">do <block pos:line="37" pos:column="6">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">nread<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">Curl_FormReader<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">buffer<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="37">1<pos:position pos:line="38" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="40">sizeof<argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">buffer<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></sizeof></expr></argument>,
                            <argument><expr><operator pos:line="39" pos:column="29">(<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">FILE<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">*<pos:position pos:line="39" pos:column="36"/></operator><operator pos:line="39" pos:column="36">)<pos:position pos:line="39" pos:column="37"/></operator><operator pos:line="39" pos:column="37">&amp;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="38">formread<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">-<pos:position pos:line="41" pos:column="9"/></operator><literal type="number" pos:line="41" pos:column="9">1<pos:position pos:line="41" pos:column="10"/></literal> <operator pos:line="41" pos:column="11">==<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">nread<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
      <block type="pseudo"><break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">fwrite<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">buffer<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">nread<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="27">1<pos:position pos:line="43" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">stderr<pos:position pos:line="43" pos:column="36"/></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block> while<condition pos:line="44" pos:column="10">(<expr><literal type="number" pos:line="44" pos:column="11">1<pos:position pos:line="44" pos:column="12"/></literal></expr>)<pos:position pos:line="44" pos:column="13"/></condition>;<pos:position pos:line="44" pos:column="14"/></do>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">fprintf<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">stderr<pos:position pos:line="46" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="19">"size: %d\n"<pos:position pos:line="46" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">size<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><literal type="number" pos:line="48" pos:column="10">0<pos:position pos:line="48" pos:column="11"/></literal></expr>;<pos:position pos:line="48" pos:column="12"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

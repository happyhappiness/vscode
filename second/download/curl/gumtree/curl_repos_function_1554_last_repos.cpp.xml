<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1554_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_send_write<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_write<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">msg<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">(<pos:position pos:line="3" pos:column="28"/></operator>struct <name pos:line="3" pos:column="35">smb_write<pos:position pos:line="3" pos:column="44"/></name> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name><name pos:line="3" pos:column="47">conn<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">-&gt;<pos:position pos:line="3" pos:column="56"/></operator><name pos:line="3" pos:column="53">data<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">-&gt;<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="59">state<pos:position pos:line="3" pos:column="64"/></name><operator pos:line="3" pos:column="64">.<pos:position pos:line="3" pos:column="65"/></operator><name pos:line="3" pos:column="65">uploadbuffer<pos:position pos:line="3" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="78"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smb_request<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">req<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name><name pos:line="4" pos:column="29">conn<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">data<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">req<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">protop<pos:position pos:line="4" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_off_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">offset<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">conn<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">data<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">req<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">offset<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_off_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">upload_size<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">req<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">size<pos:position pos:line="7" pos:column="48"/></name></name> <operator pos:line="7" pos:column="49">-<pos:position pos:line="7" pos:column="50"/></operator> <name><name pos:line="7" pos:column="51">conn<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">data<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">-&gt;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="63">req<pos:position pos:line="7" pos:column="66"/></name><operator pos:line="7" pos:column="66">.<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="67">bytecount<pos:position pos:line="7" pos:column="76"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="77"/></decl_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">upload_size<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&gt;=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">MAX_PAYLOAD_SIZE<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">-<pos:position pos:line="8" pos:column="39"/></operator> <literal type="number" pos:line="8" pos:column="40">1<pos:position pos:line="8" pos:column="41"/></literal></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <comment type="block" pos:line="8" pos:column="43">/* There is one byte of padding */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">upload_size<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">MAX_PAYLOAD_SIZE<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">-<pos:position pos:line="9" pos:column="37"/></operator> <literal type="number" pos:line="9" pos:column="38">1<pos:position pos:line="9" pos:column="39"/></literal></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">msg<pos:position pos:line="11" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="18">sizeof<argument_list pos:line="11" pos:column="24">(<argument><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">msg<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">msg<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">word_count<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">SMB_WC_WRITE_ANDX<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">msg<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">andx<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">command<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">SMB_COM_NO_ANDX_COMMAND<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">msg<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">fid<pos:position pos:line="14" pos:column="11"/></name></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">smb_swap16<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name><name pos:line="14" pos:column="25">req<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">fid<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">msg<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">offset<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">smb_swap32<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">unsigned<pos:position pos:line="15" pos:column="37"/></name> <name pos:line="15" pos:column="38">int<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">offset<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">msg<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">offset_high<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">smb_swap32<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><call pos:line="16" pos:column="33">(<name pos:line="16" pos:column="34">unsigned<pos:position pos:line="16" pos:column="42"/></name> <name pos:line="16" pos:column="43">int<pos:position pos:line="16" pos:column="46"/></name>) <argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">offset<pos:position pos:line="16" pos:column="55"/></name> <operator pos:line="16" pos:column="56">&gt;&gt;<pos:position pos:line="16" pos:column="61"/></operator> <literal type="number" pos:line="16" pos:column="59">32<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">msg<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">data_length<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">smb_swap16<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">(<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">unsigned<pos:position pos:line="17" pos:column="42"/></name> <name pos:line="17" pos:column="43">short<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="50">upload_size<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">msg<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">data_offset<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">smb_swap16<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><sizeof pos:line="18" pos:column="33">sizeof<argument_list pos:line="18" pos:column="39">(<argument><expr><operator pos:line="18" pos:column="40">*<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">msg<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></sizeof> <operator pos:line="18" pos:column="46">-<pos:position pos:line="18" pos:column="47"/></operator> sizeof<operator pos:line="18" pos:column="54">(<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="55">unsigned<pos:position pos:line="18" pos:column="63"/></name> <name pos:line="18" pos:column="64">int<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">)<pos:position pos:line="18" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">msg<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">byte_count<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">smb_swap16<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><call pos:line="19" pos:column="32">(<name pos:line="19" pos:column="33">unsigned<pos:position pos:line="19" pos:column="41"/></name> <name pos:line="19" pos:column="42">short<pos:position pos:line="19" pos:column="47"/></name>) <argument_list pos:line="19" pos:column="49">(<argument><expr><name pos:line="19" pos:column="50">upload_size<pos:position pos:line="19" pos:column="61"/></name> <operator pos:line="19" pos:column="62">+<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">1<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">smb_format_message<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">conn<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name><name pos:line="21" pos:column="29">msg<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">h<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">SMB_COM_WRITE_ANDX<pos:position pos:line="21" pos:column="55"/></name></expr></argument>,
                     <argument><expr><sizeof pos:line="22" pos:column="22">sizeof<argument_list pos:line="22" pos:column="28">(<argument><expr><operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">msg<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></sizeof> <operator pos:line="22" pos:column="35">-<pos:position pos:line="22" pos:column="36"/></operator> <sizeof pos:line="22" pos:column="37">sizeof<argument_list pos:line="22" pos:column="43">(<argument><expr><name><name pos:line="22" pos:column="44">msg<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">h<pos:position pos:line="22" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></sizeof> <operator pos:line="22" pos:column="52">+<pos:position pos:line="22" pos:column="53"/></operator> <operator pos:line="22" pos:column="54">(<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">size_t<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">)<pos:position pos:line="22" pos:column="62"/></operator> <name pos:line="22" pos:column="63">upload_size<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt>

  <return pos:line="24" pos:column="3">return <expr><call><name pos:line="24" pos:column="10">smb_send<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">conn<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="25">sizeof<argument_list pos:line="24" pos:column="31">(<argument><expr><operator pos:line="24" pos:column="32">*<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">msg<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="24" pos:column="39">(<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">size_t<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="48">upload_size<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

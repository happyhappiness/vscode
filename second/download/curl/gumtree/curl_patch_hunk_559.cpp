 "              nsspem.so)  is  available  then  PEM files may be loaded. If you\n"
 "              want to use a file from the current directory, please precede it\n"
 "              with \"./\" prefix, in order to avoid confusion with a nickname.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --cert-type <type>\n"
-"              (SSL)  Tells curl what certificate type the provided certificate\n"
+"       --engine <name>\n"
+"              Select  the  OpenSSL crypto engine to use for cipher operations.\n"
+, stdout);
+ fputs(
+"              Use --engine list  to  print  a  list  of  build-time  supported\n"
+"              engines.  Note  that  not  all  (or  none) of the engines may be\n"
+"              available at run-time.\n"
+"\n"
+"       --environment\n"
+"              (RISC OS ONLY) Sets a range of environment variables, using  the\n"
+"              names the -w option supports, to allow easier extraction of use-\n"
+"              ful information after having run curl.\n"
+"\n"
+"       --egd-file <file>\n"
 , stdout);
  fputs(
+"              (SSL) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
+"              socket.  The  socket  is  used to seed the random engine for SSL\n"
+"              connections. See also the --random-file option.\n"
+"\n"
+"       --cert-type <type>\n"
+"              (SSL) Tells curl what certificate type the provided  certificate\n"
 "              is in. PEM, DER and ENG are recognized types.  If not specified,\n"
 "              PEM is assumed.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --cacert <CA certificate>\n"
 "              (SSL) Tells curl to use the specified certificate file to verify\n"
-"              the peer. The file may contain  multiple  CA  certificates.  The\n"
-"              certificate(s)  must be in PEM format. Normally curl is built to\n"
-, stdout);
- fputs(
+"              the  peer.  The  file  may contain multiple CA certificates. The\n"
+"              certificate(s) must be in PEM format. Normally curl is built  to\n"
 "              use a default file for this, so this option is typically used to\n"
 "              alter that default file.\n"
 "\n"
-"              curl  recognizes the environment variable named 'CURL_CA_BUNDLE'\n"
-"              if it is set, and uses the given path as a path  to  a  CA  cert\n"
+, stdout);
+ fputs(
+"              curl recognizes the environment variable named  'CURL_CA_BUNDLE'\n"
+"              if  it  is  set,  and uses the given path as a path to a CA cert\n"
 "              bundle. This option overrides that variable.\n"
 "\n"
-"              The  windows  version  of  curl will automatically look for a CA\n"
+"              The windows version of curl will automatically  look  for  a  CA\n"
 "              certs file named 'curl-ca-bundle.crt', either in the same direc-\n"
-, stdout);
- fputs(
 "              tory as curl.exe, or in the Current Working Directory, or in any\n"
 "              folder along your PATH.\n"
 "\n"
-"              If curl is built against the NSS SSL library  then  this  option\n"
-"              tells  curl the nickname of the CA certificate to use within the\n"
-"              NSS database defined by the environment variable SSL_DIR (or  by\n"
-"              default  /etc/pki/nssdb).   If  the NSS PEM PKCS#11 module (lib-\n"
 , stdout);
  fputs(
+"              If  curl  is  built against the NSS SSL library then this option\n"
+"              tells curl the nickname of the CA certificate to use within  the\n"
+"              NSS  database defined by the environment variable SSL_DIR (or by\n"
+"              default /etc/pki/nssdb).  If the NSS PEM  PKCS#11  module  (lib-\n"
 "              nsspem.so) is available then PEM files may be loaded.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+, stdout);
+ fputs(
 "       --capath <CA certificate directory>\n"
-"              (SSL) Tells curl to use the specified certificate  directory  to\n"
-"              verify  the peer. The certificates must be in PEM format, and if\n"
+"              (SSL)  Tells  curl to use the specified certificate directory to\n"
+"              verify the peer. The certificates must be in PEM format, and  if\n"
 "              curl is built against OpenSSL, the directory must have been pro-\n"
+"              cessed using the c_rehash utility supplied with  OpenSSL.  Using\n"
+"              --capath  can allow OpenSSL-powered curl to make SSL-connections\n"
 , stdout);
  fputs(
-"              cessed  using  the c_rehash utility supplied with OpenSSL. Using\n"
-"              --capath can allow OpenSSL-powered curl to make  SSL-connections\n"
-"              much  more  efficiently than using --cacert if the --cacert file\n"
+"              much more efficiently than using --cacert if the  --cacert  file\n"
 "              contains many CA certificates.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -f/--fail\n"
-"              (HTTP) Fail silently (no output at all) on server  errors.  This\n"
+"       -f, --fail\n"
+"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
+"              is mostly done to better enable scripts etc to better deal  with\n"
+"              failed  attempts.  In  normal  cases when a HTTP server fails to\n"
 , stdout);
  fputs(
-"              is  mostly done to better enable scripts etc to better deal with\n"
-"              failed attempts. In normal cases when a  HTTP  server  fails  to\n"
-"              deliver  a  document,  it  returns  an  HTML document stating so\n"
-"              (which often also describes why and more). This flag  will  pre-\n"
+"              deliver a document, it  returns  an  HTML  document  stating  so\n"
+"              (which  often  also describes why and more). This flag will pre-\n"
 "              vent curl from outputting that and return error 22.\n"
 "\n"
-"              This  method is not fail-safe and there are occasions where non-\n"
+"              This method is not fail-safe and there are occasions where  non-\n"
+"              successful  response  codes  will  slip through, especially when\n"
+"              authentication is involved (response codes 401 and 407).\n"
+"\n"
+"       -F, --form <name=content>\n"
 , stdout);
  fputs(
-"              successful response codes will  slip  through,  especially  when\n"
-"              authentication is involved (response codes 401 and 407).\n"
+"              (HTTP) This lets curl emulate a filled-in form in which  a  user\n"
+"              has  pressed  the  submit  button. This causes curl to POST data\n"
+"              using the  Content-Type  multipart/form-data  according  to  RFC\n"
+"              2388.  This  enables uploading of binary files etc. To force the\n"
+"              'content' part to be a file, prefix the  file  name  with  an  @\n"
+"              sign.  To just get the content part from a file, prefix the file\n"
+, stdout);
+ fputs(
+"              name with the symbol <. The difference between @ and <  is  then\n"
+"              that  @  makes a file get attached in the post as a file upload,\n"
+"              while the < makes a text field and just  get  the  contents  for\n"
+"              that text field from a file.\n"
+"\n"
+"              Example,  to send your password file to the server, where 'pass-\n"
+"              word' is the name of the form-field to which /etc/passwd will be\n"
+"              the input:\n"
+"\n"
+, stdout);
+ fputs(
+"              curl -F password=@/etc/passwd www.mypasswords.com\n"
+"\n"
+"              To read content from stdin instead of a file, use - as the file-\n"
+"              name. This goes for both @ and < constructs.\n"
+"\n"
+"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
+"              'type=', in a manner similar to:\n"
+"\n"
+"              curl -F \"web=@index.html;type=text/html\" url.com\n"
+"\n"
+"              or\n"
+"\n"
+"              curl -F \"name=daniel;type=text/foo\" url.com\n"
+"\n"
+, stdout);
+ fputs(
+"              You  can  also explicitly change the name field of a file upload\n"
+"              part by setting filename=, like this:\n"
+"\n"
+"              curl -F \"file=@localfile;filename=nameinpost\" url.com\n"
+"\n"
+"              See further examples and details in the MANUAL.\n"
+"\n"
+"              This option can be used multiple times.\n"
 "\n"
 "       --ftp-account [data]\n"
 "              (FTP) When an FTP server asks for \"account data\" after user name\n"
-"              and password has been provided, this data is sent off using  the\n"
+, stdout);
+ fputs(
+"              and  password has been provided, this data is sent off using the\n"
 "              ACCT command. (Added in 7.13.0)\n"
 "\n"
-"              If  this option is used twice, the second will override the pre-\n"
+"              If this option is used twice, the second will override the  pre-\n"
 "              vious use.\n"
 "\n"
+"       --ftp-alternative-to-user <command>\n"
+"              (FTP)  If  authenticating with the USER and PASS commands fails,\n"
+"              send this  command.   When  connecting  to  Tumbleweed's  Secure\n"
 , stdout);
  fputs(
+"              Transport  server  over  FTPS  using a client certificate, using\n"
+"              \"SITE AUTH\" will tell the server to retrieve the  username  from\n"
+"              the certificate. (Added in 7.15.5)\n"
+"\n"
 "       --ftp-create-dirs\n"
-"              (FTP/SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
-"              doesn't  currently exist on the server, the standard behavior of\n"
+"              (FTP/SFTP)  When  an  FTP or SFTP URL/operation uses a path that\n"
+"              doesn't currently exist on the server, the standard behavior  of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
+, stdout);
+ fputs(
 "              create missing directories.\n"
 "\n"
 "       --ftp-method [method]\n"
-"              (FTP)  Control  what method curl should use to reach a file on a\n"
-"              FTP(S) server. The method argument should be one of the  follow-\n"
-, stdout);
- fputs(
+"              (FTP) Control what method curl should use to reach a file  on  a\n"
+"              FTP(S)  server. The method argument should be one of the follow-\n"
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
-"                     curl  does  a  single CWD operation for each path part in\n"
-"                     the given URL. For deep hierarchies this means very  many\n"
-"                     commands.  This  is  how RFC 1738 says it should be done.\n"
-"                     This is the default but the slowest behavior.\n"
-"\n"
-"              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
+"                     curl does a single CWD operation for each  path  part  in\n"
+"                     the  given URL. For deep hierarchies this means very many\n"
 , stdout);
  fputs(
+"                     commands. This is how RFC 1738 says it  should  be  done.\n"
+"                     This is the default but the slowest behavior.\n"
+"\n"
+"              nocwd  curl  does  no  CWD at all. curl will do SIZE, RETR, STOR\n"
 "                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
-"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
-"                     case). This is somewhat  more  standards  compliant  than\n"
+, stdout);
+ fputs(
+"                     operates on the file \"normally\"  (like  in  the  multicwd\n"
+"                     case).  This  is  somewhat  more standards compliant than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "       (Added in 7.15.1)\n"
 "\n"
+"       --ftp-pasv\n"
+"              (FTP) Use passive mode for the data connection. Passive  is  the\n"
+"              internal  default behavior, but using this option can be used to\n"
 , stdout);
  fputs(
-"       --ftp-pasv\n"
-"              (FTP)  Use  passive mode for the data connection. Passive is the\n"
-"              internal default behavior, but using this option can be used  to\n"
 "              override a previous -P/-ftp-port option. (Added in 7.11.0)\n"
 "\n"
-"              If  this option is used several times, the following occurrences\n"
-"              make no difference. Undoing an  enforced  passive  really  isn't\n"
-"              doable  but  you must then instead enforce the correct -P/--ftp-\n"
-, stdout);
- fputs(
+"              If this option is used several times, the following  occurrences\n"
+"              make  no  difference.  Undoing  an enforced passive really isn't\n"
+"              doable but you must then instead enforce the correct -P,  --ftp-\n"
 "              port again.\n"
 "\n"
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
 "\n"
-"       --ftp-alternative-to-user <command>\n"
-"              (FTP)  If  authenticating with the USER and PASS commands fails,\n"
-"              send this  command.   When  connecting  to  Tumbleweed's  Secure\n"
-"              Transport  server  over  FTPS  using a client certificate, using\n"
+"       --ftp-skip-pasv-ip\n"
 , stdout);
  fputs(
-"              \"SITE AUTH\" will tell the server to retrieve the  username  from\n"
-"              the certificate. (Added in 7.15.5)\n"
-"\n"
-"       --ftp-skip-pasv-ip\n"
 "              (FTP) Tell curl to not use the IP address the server suggests in\n"
-"              its response to curl's PASV command when curl connects the  data\n"
-"              connection.  Instead  curl  will  re-use  the same IP address it\n"
+"              its  response to curl's PASV command when curl connects the data\n"
+"              connection. Instead curl will re-use  the  same  IP  address  it\n"
 "              already uses for the control connection. (Added in 7.14.2)\n"
 "\n"
-, stdout);
- fputs(
-"              This option has no effect if PORT, EPRT or EPSV is used  instead\n"
+"              This  option has no effect if PORT, EPRT or EPSV is used instead\n"
 "              of PASV.\n"
 "\n"
 "       --ftp-pret\n"
-"              (FTP)  Tell  curl to send a PRET command before PASV (and EPSV).\n"
-"              Certain FTP servers, mainly drftpd,  require  this  non-standard\n"
-"              command  for  directory  listings as well as up and downloads in\n"
-"              PASV mode.  (Added in 7.20.x)\n"
-"\n"
-"       --ssl  (FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for  the  connection.\n"
-, stdout);
- fputs(
-"              Reverts to a non-secure connection if the server doesn't support\n"
-"              SSL/TLS.  See also --ftp-ssl-control and --ssl-reqd for  differ-\n"
-"              ent levels of encryption required. (Added in 7.20.0)\n"
-"\n"
-"              This  option  was  formerly known as --ftp-ssl (Added in 7.11.0)\n"
-"              and that can still be used but will be removed in a future  ver-\n"
-"              sion.\n"
-"\n"
-"       --ftp-ssl-control\n"
-, stdout);
- fputs(
-"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
-"              Allows secure authentication, but non-encrypted  data  transfers\n"
-"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
-"              port SSL/TLS.  (Added in 7.16.0)\n"
-"\n"
-"       --ssl-reqd\n"
-"              (FTP, POP3, IMAP, SMTP)  Require  SSL/TLS  for  the  connection.\n"
-"              Terminates the connection if the server doesn't support SSL/TLS.\n"
-"              (Added in 7.20.0)\n"
-"\n"
 , stdout);
  fputs(
-"              This option was  formerly  known  as  --ftp-ssl-reqd  (added  in\n"
-"              7.15.5)  and  that  can  still  be used but will be removed in a\n"
-"              future version.\n"
+"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
+"              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
+"              command for directory listings as well as up  and  downloads  in\n"
+"              PASV mode.  (Added in 7.20.x)\n"
 "\n"
 "       --ftp-ssl-ccc\n"
-"              (FTP) Use CCC (Clear Command Channel)  Shuts  down  the  SSL/TLS\n"
+"              (FTP)  Use  CCC  (Clear  Command Channel) Shuts down the SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
-"              munication will be unencrypted. This allows NAT routers to  fol-\n"
 , stdout);
  fputs(
+"              munication  will be unencrypted. This allows NAT routers to fol-\n"
 "              low the FTP transaction. The default mode is passive. See --ftp-\n"
 "              ssl-ccc-mode for other modes.  (Added in 7.16.1)\n"
 "\n"
 "       --ftp-ssl-ccc-mode [active/passive]\n"
-"              (FTP) Use CCC (Clear Command Channel) Sets  the  CCC  mode.  The\n"
-"              passive  mode  will  not initiate the shutdown, but instead wait\n"
-"              for the server to do it, and will not reply to the shutdown from\n"
+"              (FTP)  Use  CCC  (Clear  Command Channel) Sets the CCC mode. The\n"
+"              passive mode will not initiate the shutdown,  but  instead  wait\n"
 , stdout);
  fputs(
+"              for the server to do it, and will not reply to the shutdown from\n"
 "              the server. The active mode initiates the shutdown and waits for\n"
 "              a reply from the server.  (Added in 7.16.2)\n"
 "\n"
-"       -F/--form <name=content>\n"
-"              (HTTP) This lets curl emulate a filled-in form in which  a  user\n"
-"              has  pressed  the  submit  button. This causes curl to POST data\n"
-"              using the  Content-Type  multipart/form-data  according  to  RFC\n"
-"              2388.  This  enables uploading of binary files etc. To force the\n"
-, stdout);
- fputs(
-"              'content' part to be a file, prefix the  file  name  with  an  @\n"
-"              sign.  To just get the content part from a file, prefix the file\n"
-"              name with the symbol <. The difference between @ and <  is  then\n"
-"              that  @  makes a file get attached in the post as a file upload,\n"
-"              while the < makes a text field and just  get  the  contents  for\n"
-"              that text field from a file.\n"
-"\n"
-, stdout);
- fputs(
-"              Example,  to send your password file to the server, where 'pass-\n"
-"              word' is the name of the form-field to which /etc/passwd will be\n"
-"              the input:\n"
-"\n"
-"              curl -F password=@/etc/passwd www.mypasswords.com\n"
-"\n"
-"              To read content from stdin instead of a file, use - as the file-\n"
-"              name. This goes for both @ and < constructs.\n"
-"\n"
-"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
-, stdout);
- fputs(
-"              'type=', in a manner similar to:\n"
-"\n"
-"              curl -F \"web=@index.html;type=text/html\" url.com\n"
-"\n"
-"              or\n"
-"\n"
-"              curl -F \"name=daniel;type=text/foo\" url.com\n"
-"\n"
-"              You  can  also explicitly change the name field of a file upload\n"
-"              part by setting filename=, like this:\n"
-"\n"
-"              curl -F \"file=@localfile;filename=nameinpost\" url.com\n"
-"\n"
-"              See further examples and details in the MANUAL.\n"
-"\n"
+"       --ftp-ssl-control\n"
+"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
+"              Allows secure authentication, but non-encrypted  data  transfers\n"
+"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
 , stdout);
  fputs(
-"              This option can be used multiple times.\n"
+"              port SSL/TLS.  (Added in 7.16.0) that can still be used but will\n"
+"              be removed in a future version.\n"
 "\n"
 "       --form-string <name=string>\n"
-"              (HTTP) Similar to --form except that the value  string  for  the\n"
-"              named  parameter  is used literally. Leading '@' and '<' charac-\n"
+"              (HTTP)  Similar  to  --form except that the value string for the\n"
+"              named parameter is used literally. Leading '@' and  '<'  charac-\n"
 "              ters, and the ';type=' string in the value have no special mean-\n"
 "              ing. Use this in preference to --form if there's any possibility\n"
-"              that the string value may accidentally trigger the  '@'  or  '<'\n"
 , stdout);
  fputs(
+"              that  the  string  value may accidentally trigger the '@' or '<'\n"
 "              features of --form.\n"
 "\n"
-"       -g/--globoff\n"
+"       -g, --globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
-"              this option, you can specify URLs that contain the letters  {}[]\n"
-"              without  having them being interpreted by curl itself. Note that\n"
-"              these letters are not normal legal URL contents but they  should\n"
-"              be encoded according to the URI standard.\n"
-"\n"
-"       -G/--get\n"
+"              this  option, you can specify URLs that contain the letters {}[]\n"
+"              without having them being interpreted by curl itself. Note  that\n"
+"              these  letters are not normal legal URL contents but they should\n"
 , stdout);
  fputs(
-"              When  used,  this  option  will  make  all  data  specified with\n"
-"              -d/--data or --data-binary to be used  in  a  HTTP  GET  request\n"
-"              instead  of  the  POST request that otherwise would be used. The\n"
-"              data will be appended to the URL with a '?' separator.\n"
+"              be encoded according to the URI standard.\n"
 "\n"
-"              If used in combination with -I, the POST data  will  instead  be\n"
-"              appended to the URL with a HEAD request.\n"
+"       -G, --get\n"
+"              When used, this option will make all  data  specified  with  -d,\n"
+"              --data or --data-binary to be used in a HTTP GET request instead\n"
+"              of the POST request that otherwise would be used. The data  will\n"
+"              be appended to the URL with a '?' separator.\n"
 "\n"
+"              If  used  in  combination with -I, the POST data will instead be\n"
 , stdout);
  fputs(
-"              If  this option is used several times, the following occurrences\n"
-"              make no difference. This is because undoing a GET  doesn't  make\n"
-"              sense,  but  you  should  then  instead  enforce the alternative\n"
-"              method you prefer.\n"
+"              appended to the URL with a HEAD request.\n"
 "\n"
-"       -h/--help\n"
-"              Usage help.\n"
+"              If this option is used several times, the following  occurrences\n"
+"              make  no  difference. This is because undoing a GET doesn't make\n"
+"              sense, but you  should  then  instead  enforce  the  alternative\n"
+"              method you prefer.\n"
 "\n"
-"       -H/--header <header>\n"
-"              (HTTP) Extra header to use when getting  a  web  page.  You  may\n"
+"       -H, --header <header>\n"
+"              (HTTP)  Extra  header  to  use  when getting a web page. You may\n"
 , stdout);
  fputs(
 "              specify any number of extra headers. Note that if you should add\n"
-"              a custom header that has the same name as one  of  the  internal\n"
-"              ones  curl  would  use,  your externally set header will be used\n"
+"              a  custom  header  that has the same name as one of the internal\n"
+"              ones curl would use, your externally set  header  will  be  used\n"
 "              instead of the internal one. This allows you to make even trick-\n"
-"              ier  stuff  than  curl would normally do. You should not replace\n"
-"              internally set  headers  without  knowing  perfectly  well  what\n"
+"              ier stuff than curl would normally do. You  should  not  replace\n"
+"              internally  set  headers  without  knowing  perfectly  well what\n"
 , stdout);
  fputs(
-"              you're  doing. Remove an internal header by giving a replacement\n"
-"              without content on the right  side  of  the  colon,  as  in:  -H\n"
+"              you're doing. Remove an internal header by giving a  replacement\n"
+"              without  content  on  the  right  side  of  the colon, as in: -H\n"
 "              \"Host:\".\n"
 "\n"
-"              curl  will  make  sure  that each header you add/replace is sent\n"
+"              curl will make sure that each header  you  add/replace  is  sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
 , stdout);
  fputs(
-"              See also the -A/--user-agent and -e/--referer options.\n"
+"              See also the -A, --user-agent and -e, --referer options.\n"
 "\n"
-"              This option can be used  multiple  times  to  add/replace/remove\n"
+"              This  option  can  be  used multiple times to add/replace/remove\n"
 "              multiple headers.\n"
 "\n"
 "       --hostpubmd5 <md5>\n"
-"              Pass  a  string  containing  32  hexadecimal  digits. The string\n"
-"              should be the 128 bit MD5 checksum of the remote  host's  public\n"
-"              key,  curl  will  refuse the connection with the host unless the\n"
+"              Pass a string  containing  32  hexadecimal  digits.  The  string\n"
+"              should  be  the 128 bit MD5 checksum of the remote host's public\n"
+"              key, curl will refuse the connection with the  host  unless  the\n"
 , stdout);
  fputs(
-"              md5sums match. This option is only for SCP and  SFTP  transfers.\n"
+"              md5sums  match.  This option is only for SCP and SFTP transfers.\n"
 "              (Added in 7.17.1)\n"
 "\n"
 "       --ignore-content-length\n"
-"              (HTTP)  Ignore  the  Content-Length header. This is particularly\n"
-"              useful for servers running Apache 1.x, which will report  incor-\n"
+"              (HTTP) Ignore the Content-Length header.  This  is  particularly\n"
+"              useful  for servers running Apache 1.x, which will report incor-\n"
 "              rect Content-Length for files larger than 2 gigabytes.\n"
 "\n"
-"       -i/--include\n"
-"              (HTTP)  Include  the  HTTP-header in the output. The HTTP-header\n"
+"       -i, --include\n"
+"              (HTTP) Include the HTTP-header in the  output.  The  HTTP-header\n"
 , stdout);
  fputs(
-"              includes things like server-name, date of  the  document,  HTTP-\n"
+"              includes  things  like  server-name, date of the document, HTTP-\n"
 "              version and more...\n"
 "\n"
+"       -I, --head\n"
+"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
+"              the  command  HEAD which this uses to get nothing but the header\n"
+"              of a document. When used on a FTP or FILE  file,  curl  displays\n"
+"              the file size and last modification time only.\n"
+"\n"
 "       --interface <name>\n"
+, stdout);
+ fputs(
 "              Perform  an operation using a specified interface. You can enter\n"
 "              interface name, IP address or host name. An example  could  look\n"
 "              like:\n"
 "\n"
 "               curl --interface eth0:1 http://www.netscape.com/\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       -I/--head\n"
-, stdout);
- fputs(
-"              (HTTP/FTP/FILE) Fetch the HTTP-header only! HTTP-servers feature\n"
-"              the command HEAD which this uses to get nothing but  the  header\n"
-"              of  a  document.  When used on a FTP or FILE file, curl displays\n"
-"              the file size and last modification time only.\n"
-"\n"
-"       -j/--junk-session-cookies\n"
+"       -j, --junk-session-cookies\n"
 "              (HTTP) When curl is told to read cookies from a given file, this\n"
-"              option  will  make  it  discard all \"session cookies\". This will\n"
 , stdout);
  fputs(
-"              basically have the same effect as if a new session  is  started.\n"
-"              Typical  browsers  always  discard  session cookies when they're\n"
+"              option will make it discard all  \"session  cookies\".  This  will\n"
+"              basically  have  the same effect as if a new session is started.\n"
+"              Typical browsers always discard  session  cookies  when  they're\n"
 "              closed down.\n"
 "\n"
-"       -J/--remote-header-name\n"
-"              (HTTP) This option tells the -O/--remote-name option to use  the\n"
+"       -J, --remote-header-name\n"
+"              (HTTP) This option tells the -O, --remote-name option to use the\n"
 "              server-specified   Content-Disposition   filename   instead   of\n"
-"              extracting a filename from the URL.\n"
-"\n"
-"       -k/--insecure\n"
 , stdout);
  fputs(
-"              (SSL) This option explicitly allows curl to  perform  \"insecure\"\n"
+"              extracting a filename from the URL.\n"
+"\n"
+"       -k, --insecure\n"
+"              (SSL)  This  option explicitly allows curl to perform \"insecure\"\n"
 "              SSL connections and transfers. All SSL connections are attempted\n"
-"              to be made secure by using the CA certificate  bundle  installed\n"
-"              by  default.  This  makes  all connections considered \"insecure\"\n"
-"              fail unless -k/--insecure is used.\n"
+"              to  be  made secure by using the CA certificate bundle installed\n"
+"              by default. This makes  all  connections  considered  \"insecure\"\n"
+"              fail unless -k, --insecure is used.\n"
 "\n"
-"              See    this    online    resource    for    further     details:\n"
+, stdout);
+ fputs(
+"              See     this    online    resource    for    further    details:\n"
 "              http://curl.haxx.se/docs/sslcerts.html\n"
+"\n"
+"       -K, --config <config file>\n"
+"              Specify which config file to read curl arguments from. The  con-\n"
+"              fig  file  is a text file in which command line arguments can be\n"
+"              written which then will be used as if they were written  on  the\n"
+"              actual command line. Options and their parameters must be speci-\n"
+, stdout);
+ fputs(
+"              fied on the same config  file  line,  separated  by  whitespace,\n"
+"              colon,  the equals sign or any combination thereof (however, the\n"
+"              preferred separator is the equals sign). If the parameter is  to\n"
+"              contain  whitespace,  the  parameter  must  be  enclosed  within\n"
+"              quotes. Within double quotes, the following escape sequences are\n"
+"              available:  \\\\, \\\", \\t, \\n, \\r and \\v. A backslash preceding any\n"
+, stdout);
+ fputs(
+"              other letter is ignored. If the first column of a config line is\n"
+"              a  '#' character, the rest of the line will be treated as a com-\n"
+"              ment. Only write one option per  physical  line  in  the  config\n"
+"              file.\n"
+"\n"
+"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
+"              the file from stdin.\n"
+"\n"
+"              Note that to be able to specify a URL in the  config  file,  you\n"
+, stdout);
+ fputs(
+"              need  to  specify  it  using the --url option, and not by simply\n"
+"              writing the URL on its own line. So, it could  look  similar  to\n"
+"              this:\n"
+"\n"
+"              url = \"http://curl.haxx.se/docs/\"\n"
+"\n"
+"              Long  option  names  can  optionally be given in the config file\n"
+"              without the initial double dashes.\n"
+"\n"
+"              When curl is invoked, it always (unless -q is used) checks for a\n"
+, stdout);
+ fputs(
+"              default  config  file  and  uses it if found. The default config\n"
+"              file is checked for in the following places in this order:\n"
+"\n"
+"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
+"              CURL_HOME and then the HOME environment variables. Failing that,\n"
+"              it uses getpwuid() on UNIX-like systems (which returns the  home\n"
+"              dir  given the current user in your system). On Windows, it then\n"
 , stdout);
  fputs(
+"              checks for the APPDATA variable, or as a last resort the '%USER-\n"
+"              PROFILE%\\Application Data'.\n"
+"\n"
+"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
+"              checks for one in the same dir the curl executable is placed. On\n"
+"              UNIX-like  systems,  it will simply try to load .curlrc from the\n"
+"              determined home dir.\n"
+"\n"
+"              # --- Example file ---\n"
+"              # this is a comment\n"
+, stdout);
+ fputs(
+"              url = \"curl.haxx.se\"\n"
+"              output = \"curlhere.html\"\n"
+"              user-agent = \"superagent/1.0\"\n"
+"\n"
+"              # and fetch another URL too\n"
+"              url = \"curl.haxx.se/docs/manpage.html\"\n"
+"              -O\n"
+"              referer = \"http://nowhereatall.com/\"\n"
+"              # --- End of example file ---\n"
+"\n"
+"              This option can be used multiple times to load  multiple  config\n"
+"              files.\n"
 "\n"
 "       --keepalive-time <seconds>\n"
+, stdout);
+ fputs(
 "              This  option  sets  the  time  a connection needs to remain idle\n"
 "              before sending keepalive probes and the time between  individual\n"
 "              keepalive probes. It is currently effective on operating systems\n"
 "              offering  the  TCP_KEEPIDLE  and  TCP_KEEPINTVL  socket  options\n"
 "              (meaning  Linux, recent AIX, HP-UX and more). This option has no\n"
 "              effect if --no-keepalive is used. (Added in 7.18.0)\n"

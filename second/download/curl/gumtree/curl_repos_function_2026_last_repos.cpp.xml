<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2026_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_getinfo<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">Curl_easy<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">data<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">CURLINFO<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">info<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="62">...<pos:position pos:line="1" pos:column="65"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">arg<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">param_longp<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">double<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">param_doublep<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_off_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">param_offt<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">param_charp<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curl_slist<pos:position pos:line="8" pos:column="20"/></name></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier><modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">param_slistp<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name pos:line="8" pos:column="38">NULL<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_socket_t<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">param_socketp<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">type<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">CURLcode<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">CURLE_UNKNOWN_OPTION<pos:position pos:line="11" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">data<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">va_start<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">arg<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="17">info<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">type<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name pos:line="18" pos:column="10">CURLINFO_TYPEMASK<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="30">(<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">int<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">info<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
  <switch pos:line="19" pos:column="3">switch<condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">type<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition> <block pos:line="19" pos:column="16">{
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">CURLINFO_STRING<pos:position pos:line="20" pos:column="23"/></name></expr>:<pos:position pos:line="20" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="21" pos:column="5">param_charp<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">va_arg<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">arg<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><specifier pos:line="21" pos:column="31">const<pos:position pos:line="21" pos:column="36"/></specifier> <name pos:line="21" pos:column="37">char<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">*<pos:position pos:line="21" pos:column="43"/></operator><operator pos:line="21" pos:column="43">*<pos:position pos:line="21" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><name pos:line="22" pos:column="8">param_charp<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">result<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">getinfo_char<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">data<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">info<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">param_charp<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></then></if>
    <break pos:line="24" pos:column="5">break;<pos:position pos:line="24" pos:column="11"/></break>
  <case pos:line="25" pos:column="3">case <expr><name pos:line="25" pos:column="8">CURLINFO_LONG<pos:position pos:line="25" pos:column="21"/></name></expr>:<pos:position pos:line="25" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="26" pos:column="5">param_longp<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">va_arg<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">arg<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">long<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">*<pos:position pos:line="26" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">param_longp<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">result<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">getinfo_long<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">data<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">info<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">param_longp<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt></block></then></if>
    <break pos:line="29" pos:column="5">break;<pos:position pos:line="29" pos:column="11"/></break>
  <case pos:line="30" pos:column="3">case <expr><name pos:line="30" pos:column="8">CURLINFO_DOUBLE<pos:position pos:line="30" pos:column="23"/></name></expr>:<pos:position pos:line="30" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="31" pos:column="5">param_doublep<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">va_arg<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">arg<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">double<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">*<pos:position pos:line="31" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">param_doublep<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">result<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">getinfo_double<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">data<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">info<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">param_doublep<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt></block></then></if>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURLINFO_OFF_T<pos:position pos:line="35" pos:column="22"/></name></expr>:<pos:position pos:line="35" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="36" pos:column="5">param_offt<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">va_arg<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">arg<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">curl_off_t<pos:position pos:line="36" pos:column="40"/></name> <operator pos:line="36" pos:column="41">*<pos:position pos:line="36" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">param_offt<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">result<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">getinfo_offt<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">data<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">info<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">param_offt<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></then></if>
    <break pos:line="39" pos:column="5">break;<pos:position pos:line="39" pos:column="11"/></break>
  <case pos:line="40" pos:column="3">case <expr><name pos:line="40" pos:column="8">CURLINFO_SLIST<pos:position pos:line="40" pos:column="22"/></name></expr>:<pos:position pos:line="40" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="41" pos:column="5">param_slistp<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">va_arg<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">arg<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr pos:line="41" pos:column="32">struct <name pos:line="41" pos:column="39">curl_slist<pos:position pos:line="41" pos:column="49"/></name> <operator pos:line="41" pos:column="50">*<pos:position pos:line="41" pos:column="51"/></operator><operator pos:line="41" pos:column="51">*<pos:position pos:line="41" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name pos:line="42" pos:column="8">param_slistp<pos:position pos:line="42" pos:column="20"/></name></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">result<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">getinfo_slist<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">data<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="36">info<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">param_slistp<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></then></if>
    <break pos:line="44" pos:column="5">break;<pos:position pos:line="44" pos:column="11"/></break>
  <case pos:line="45" pos:column="3">case <expr><name pos:line="45" pos:column="8">CURLINFO_SOCKET<pos:position pos:line="45" pos:column="23"/></name></expr>:<pos:position pos:line="45" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="46" pos:column="5">param_socketp<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">va_arg<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">arg<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">curl_socket_t<pos:position pos:line="46" pos:column="46"/></name> <operator pos:line="46" pos:column="47">*<pos:position pos:line="46" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">param_socketp<pos:position pos:line="47" pos:column="21"/></name></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">result<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">getinfo_socket<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">data<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">info<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">param_socketp<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then></if>
    <break pos:line="49" pos:column="5">break;<pos:position pos:line="49" pos:column="11"/></break>
  <default pos:line="50" pos:column="3">default:<pos:position pos:line="50" pos:column="11"/></default>
    <break pos:line="51" pos:column="5">break;<pos:position pos:line="51" pos:column="11"/></break>
  }<pos:position pos:line="52" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">va_end<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name pos:line="54" pos:column="10">arg<pos:position pos:line="54" pos:column="13"/></name></expr></argument>)<pos:position pos:line="54" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>

  <return pos:line="56" pos:column="3">return <expr><name pos:line="56" pos:column="10">result<pos:position pos:line="56" pos:column="16"/></name></expr>;<pos:position pos:line="56" pos:column="17"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_902_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_nextconnect<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">connectdata<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name><init pos:line="3" pos:column="29">=<expr><name><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ftp_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ftpc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">ftpc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* the ftp struct is inited in ftp_connect() */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">FTP<pos:position pos:line="8" pos:column="13"/></name></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">ftp<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">state<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">proto<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">ftp<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUGF<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><call><name pos:line="10" pos:column="10">infof<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">data<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="22">"DO-MORE phase starts\n"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">ftp<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">transfer<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">&lt;=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="23">FTPTRANSFER_INFO<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <block pos:line="12" pos:column="41">{
    <comment type="block" pos:line="13" pos:column="5">/* a transfer is about to take place, or if not a file name was given
       so we'll do a SIZE on it later and then we need the right TYPE first */</comment>

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name><name pos:line="16" pos:column="8">data<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">set<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">upload<pos:position pos:line="16" pos:column="24"/></name></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">result<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">ftp_nb_type<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">conn<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="34">data<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">set<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">.<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">prefer_ascii<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">FTP_STOR_TYPE<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">result<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">result<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
      <comment type="block" pos:line="22" pos:column="7">/* download */</comment>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">ftp<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">downloadsize<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <operator pos:line="23" pos:column="27">-<pos:position pos:line="23" pos:column="28"/></operator><literal type="number" pos:line="23" pos:column="28">1<pos:position pos:line="23" pos:column="29"/></literal></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt> <comment type="block" pos:line="23" pos:column="31">/* unknown as of yet */</comment>

      <expr_stmt><expr><name pos:line="25" pos:column="7">result<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">ftp_range<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">conn<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><name pos:line="26" pos:column="10">result<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17">
        <block type="pseudo"><empty_stmt pos:line="27" pos:column="9">;<pos:position pos:line="27" pos:column="10"/></empty_stmt></block></then>
      <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if<condition pos:line="28" pos:column="14">(<expr><name><name pos:line="28" pos:column="15">data<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">set<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">ftp_list_only<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">||<pos:position pos:line="28" pos:column="41"/></operator> <operator pos:line="28" pos:column="42">!<pos:position pos:line="28" pos:column="43"/></operator><name><name pos:line="28" pos:column="43">ftpc<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">file<pos:position pos:line="28" pos:column="53"/></name></name></expr>)<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54"> <block pos:line="28" pos:column="55">{
        <comment type="block" pos:line="29" pos:column="9">/* The specified path ends with a slash, and therefore we think this
           is a directory that is requested, use LIST. But before that we
           need to set ASCII transfer mode. */</comment>

        <comment type="block" pos:line="33" pos:column="9">/* But only if a body transfer was requested. */</comment>
        <if pos:line="34" pos:column="9">if<condition pos:line="34" pos:column="11">(<expr><name><name pos:line="34" pos:column="12">ftp<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">transfer<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">==<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">FTPTRANSFER_BODY<pos:position pos:line="34" pos:column="45"/></name></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
          <expr_stmt><expr><name pos:line="35" pos:column="11">result<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">ftp_nb_type<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">conn<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">FTP_LIST_TYPE<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
          <if pos:line="36" pos:column="11">if<condition pos:line="36" pos:column="13">(<expr><name pos:line="36" pos:column="14">result<pos:position pos:line="36" pos:column="20"/></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">result<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="39" pos:column="9">/* otherwise just fall through */</comment>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if></elseif>
      <else pos:line="41" pos:column="7">else <block pos:line="41" pos:column="12">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">result<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">ftp_nb_type<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">conn<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="36">data<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">set<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">.<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="46">prefer_ascii<pos:position pos:line="42" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">FTP_RETR_TYPE<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="75"/></expr_stmt>
        <if pos:line="43" pos:column="9">if<condition pos:line="43" pos:column="11">(<expr><name pos:line="43" pos:column="12">result<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19">
          <block type="pseudo"><return pos:line="44" pos:column="11">return <expr><name pos:line="44" pos:column="18">result<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="45" pos:column="8"/></block></else></if>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">result<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">ftp_easy_statemach<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">conn<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><operator pos:line="50" pos:column="6">(<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">result<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">==<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">CURLE_OK<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">)<pos:position pos:line="50" pos:column="26"/></operator> <operator pos:line="50" pos:column="27">&amp;&amp;<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name><name pos:line="50" pos:column="31">ftp<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">transfer<pos:position pos:line="50" pos:column="44"/></name></name> <operator pos:line="50" pos:column="45">!=<pos:position pos:line="50" pos:column="47"/></operator> <name pos:line="50" pos:column="48">FTPTRANSFER_BODY<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">)<pos:position pos:line="50" pos:column="65"/></operator></expr>)<pos:position pos:line="50" pos:column="66"/></condition><then pos:line="50" pos:column="66">
    <comment type="block" pos:line="51" pos:column="5">/* no data to transfer. FIX: it feels like a kludge to have this here
       too! */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="5">result<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">Curl_setup_transfer<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">conn<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="40">-<pos:position pos:line="53" pos:column="41"/></operator><literal type="number" pos:line="53" pos:column="41">1<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="44">-<pos:position pos:line="53" pos:column="45"/></operator><literal type="number" pos:line="53" pos:column="45">1<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">FALSE<pos:position pos:line="53" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">NULL<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="61">-<pos:position pos:line="53" pos:column="62"/></operator><literal type="number" pos:line="53" pos:column="62">1<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">NULL<pos:position pos:line="53" pos:column="69"/></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="55" pos:column="3">/* end of transfer */</comment>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">DEBUGF<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><call><name pos:line="56" pos:column="10">infof<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">data<pos:position pos:line="56" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="22">"DO-MORE phase ends with %d\n"<pos:position pos:line="56" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">result<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="63"/></expr_stmt>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">result<pos:position pos:line="58" pos:column="16"/></name></expr>;<pos:position pos:line="58" pos:column="17"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

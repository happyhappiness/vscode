<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1608_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multi_getsock<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_easy<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">curl_socket_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">socks<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="48">/* points to numsocks number
                                                  of sockets */</comment>
                         <parameter><decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">numsocks<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="39"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <comment type="block" pos:line="6" pos:column="3">/* If the pipe broke, or if there's no connection left for this easy handle,
     then we MUST bail out now with no bitmask set. The no connection case can
     happen when this is called from curl_multi_remove_handle() =&gt;
     singlesocket() =&gt; multi_getsock().
  */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">data<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">state<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">pipe_broke<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">||<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">!<pos:position pos:line="11" pos:column="33"/></operator><name><name pos:line="11" pos:column="33">data<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">easy_conn<pos:position pos:line="11" pos:column="48"/></name></name></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">data<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">mstate<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">&gt;<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="21">CURLM_STATE_CONNECT<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">&amp;&amp;<pos:position pos:line="14" pos:column="51"/></operator>
     <name><name pos:line="15" pos:column="6">data<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">mstate<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="21">CURLM_STATE_COMPLETED<pos:position pos:line="15" pos:column="42"/></name></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
    <comment type="block" pos:line="16" pos:column="5">/* Set up ownership correctly */</comment>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">data<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">easy_conn<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">data<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">data<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <switch pos:line="20" pos:column="3">switch<condition pos:line="20" pos:column="9">(<expr><name><name pos:line="20" pos:column="10">data<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">mstate<pos:position pos:line="20" pos:column="22"/></name></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition> <block pos:line="20" pos:column="24">{
  <default pos:line="21" pos:column="3">default:<pos:position pos:line="21" pos:column="11"/></default>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="22" pos:column="5">0<pos:position pos:line="22" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="22" pos:column="7">/* switch back on these cases to get the compiler to check for all enums
         to be present */</comment>
  case CURLM_STATE_TOOFAST:  <comment type="block" pos:line="24" pos:column="30">/* returns 0, so will not select. */</comment>
  case CURLM_STATE_COMPLETED:
  case CURLM_STATE_MSGSENT:
  case CURLM_STATE_INIT:
  case CURLM_STATE_CONNECT:
  case CURLM_STATE_WAITDO:
  case CURLM_STATE_DONE:
  case CURLM_STATE_LAST:
    <comment type="block" pos:line="32" pos:column="5">/* this will get called with CURLM_STATE_COMPLETED when a handle is
       removed */</comment>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="35" pos:column="5">return <expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></return>

  <case pos:line="37" pos:column="3">case <expr><name pos:line="37" pos:column="8">CURLM_STATE_WAITRESOLVE<pos:position pos:line="37" pos:column="31"/></name></expr>:<pos:position pos:line="37" pos:column="32"/></case>
    <return pos:line="38" pos:column="5">return <expr><call><name pos:line="38" pos:column="12">Curl_resolver_getsock<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">data<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">easy_conn<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">socks<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">numsocks<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></return>

  <case pos:line="40" pos:column="3">case <expr><name pos:line="40" pos:column="8">CURLM_STATE_PROTOCONNECT<pos:position pos:line="40" pos:column="32"/></name></expr>:<pos:position pos:line="40" pos:column="33"/></case>
  <case pos:line="41" pos:column="3">case <expr><name pos:line="41" pos:column="8">CURLM_STATE_SENDPROTOCONNECT<pos:position pos:line="41" pos:column="36"/></name></expr>:<pos:position pos:line="41" pos:column="37"/></case>
    <return pos:line="42" pos:column="5">return <expr><call><name pos:line="42" pos:column="12">Curl_protocol_getsock<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name><name pos:line="42" pos:column="34">data<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">easy_conn<pos:position pos:line="42" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">socks<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="58">numsocks<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></return>

  <case pos:line="44" pos:column="3">case <expr><name pos:line="44" pos:column="8">CURLM_STATE_DO<pos:position pos:line="44" pos:column="22"/></name></expr>:<pos:position pos:line="44" pos:column="23"/></case>
  <case pos:line="45" pos:column="3">case <expr><name pos:line="45" pos:column="8">CURLM_STATE_DOING<pos:position pos:line="45" pos:column="25"/></name></expr>:<pos:position pos:line="45" pos:column="26"/></case>
    <return pos:line="46" pos:column="5">return <expr><call><name pos:line="46" pos:column="12">Curl_doing_getsock<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name><name pos:line="46" pos:column="31">data<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">easy_conn<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">socks<pos:position pos:line="46" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">numsocks<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></return>

  <case pos:line="48" pos:column="3">case <expr><name pos:line="48" pos:column="8">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="48" pos:column="36"/></name></expr>:<pos:position pos:line="48" pos:column="37"/></case>
    <return pos:line="49" pos:column="5">return <expr><call><name pos:line="49" pos:column="12">waitproxyconnect_getsock<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name><name pos:line="49" pos:column="37">data<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">easy_conn<pos:position pos:line="49" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">socks<pos:position pos:line="49" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="61">numsocks<pos:position pos:line="49" pos:column="69"/></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="71"/></return>

  <case pos:line="51" pos:column="3">case <expr><name pos:line="51" pos:column="8">CURLM_STATE_WAITCONNECT<pos:position pos:line="51" pos:column="31"/></name></expr>:<pos:position pos:line="51" pos:column="32"/></case>
    <return pos:line="52" pos:column="5">return <expr><call><name pos:line="52" pos:column="12">waitconnect_getsock<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name><name pos:line="52" pos:column="32">data<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">easy_conn<pos:position pos:line="52" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">socks<pos:position pos:line="52" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="56">numsocks<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></return>

  <case pos:line="54" pos:column="3">case <expr><name pos:line="54" pos:column="8">CURLM_STATE_DO_MORE<pos:position pos:line="54" pos:column="27"/></name></expr>:<pos:position pos:line="54" pos:column="28"/></case>
    <return pos:line="55" pos:column="5">return <expr><call><name pos:line="55" pos:column="12">domore_getsock<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name><name pos:line="55" pos:column="27">data<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">easy_conn<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">socks<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="51">numsocks<pos:position pos:line="55" pos:column="59"/></name></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></return>

  <case pos:line="57" pos:column="3">case <expr><name pos:line="57" pos:column="8">CURLM_STATE_DO_DONE<pos:position pos:line="57" pos:column="27"/></name></expr>:<pos:position pos:line="57" pos:column="28"/></case> <comment type="block" pos:line="57" pos:column="29">/* since is set after DO is completed, we switch
                               to waiting for the same as the *PERFORM
                               states */</comment>
  <case pos:line="60" pos:column="3">case <expr><name pos:line="60" pos:column="8">CURLM_STATE_PERFORM<pos:position pos:line="60" pos:column="27"/></name></expr>:<pos:position pos:line="60" pos:column="28"/></case>
  <case pos:line="61" pos:column="3">case <expr><name pos:line="61" pos:column="8">CURLM_STATE_WAITPERFORM<pos:position pos:line="61" pos:column="31"/></name></expr>:<pos:position pos:line="61" pos:column="32"/></case>
    <return pos:line="62" pos:column="5">return <expr><call><name pos:line="62" pos:column="12">Curl_single_getsock<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">data<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">easy_conn<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">socks<pos:position pos:line="62" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">numsocks<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="66"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></switch>

}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_466_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">once<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">URL<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">bool<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">oldstyle<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">CURLE_OK<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_mime<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">mime<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_mimepart<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">part<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">WriteThis<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">pooh<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">WriteThis<pos:position pos:line="9" pos:column="19"/></name></name></type> <name pos:line="9" pos:column="20">pooh2<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_off_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">datasize<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">pooh<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">readptr<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">data<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
<cpp:ifndef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifndef<pos:position pos:line="13" pos:column="8"/></cpp:directive> <name pos:line="13" pos:column="9">LIB645<pos:position pos:line="13" pos:column="15"/></name></cpp:ifndef>
  <expr_stmt><expr><name pos:line="14" pos:column="3">datasize<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">curl_off_t<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator><call><name pos:line="14" pos:column="26">strlen<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">data<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">pooh<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">.<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">sizeleft<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">datasize<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">curl<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">curl_easy_init<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">curl<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">stderr<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">curl_global_cleanup<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">mime<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">curl_mime_init<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">curl<pos:position pos:line="25" pos:column="29"/></name></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">mime<pos:position pos:line="26" pos:column="11"/></name></expr>)<pos:position pos:line="26" pos:column="12"/></condition><then pos:line="26" pos:column="12"> <block pos:line="26" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">stderr<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"curl_mime_init() failed\n"<pos:position pos:line="27" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">curl_easy_cleanup<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">curl<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">curl_global_cleanup<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">()<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">part<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">curl_mime_addpart<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">mime<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">!<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">part<pos:position pos:line="34" pos:column="11"/></name></expr>)<pos:position pos:line="34" pos:column="12"/></condition><then pos:line="34" pos:column="12"> <block pos:line="34" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">fprintf<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">stderr<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="21">"curl_mime_addpart(1) failed\n"<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">curl_mime_free<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">mime<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">curl_easy_cleanup<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">curl<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">curl_global_cleanup<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">()<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="42" pos:column="3">/* Fill in the file upload part */</comment>
  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><name pos:line="43" pos:column="6">oldstyle<pos:position pos:line="43" pos:column="14"/></name></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15"> <block pos:line="43" pos:column="16">{
    <expr_stmt><expr><name pos:line="44" pos:column="5">res<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">curl_mime_name<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">part<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"sendfile"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
    <if pos:line="45" pos:column="5">if<condition pos:line="45" pos:column="7">(<expr><operator pos:line="45" pos:column="8">!<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="9">res<pos:position pos:line="45" pos:column="12"/></name></expr>)<pos:position pos:line="45" pos:column="13"/></condition><then pos:line="45" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">res<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">curl_mime_data_cb<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">part<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">datasize<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">read_callback<pos:position pos:line="46" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="47" pos:column="31">NULL<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="37">NULL<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="43">&amp;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="44">pooh<pos:position pos:line="47" pos:column="48"/></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt></block></then></if>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><operator pos:line="48" pos:column="8">!<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="9">res<pos:position pos:line="48" pos:column="12"/></name></expr>)<pos:position pos:line="48" pos:column="13"/></condition><then pos:line="48" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">res<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">curl_mime_filename<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">part<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="38">"postit2.c"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></then>
  <else pos:line="51" pos:column="3">else <block pos:line="51" pos:column="8">{
    <comment type="block" pos:line="52" pos:column="5">/* new style */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">res<pos:position pos:line="53" pos:column="8"/></name> <operator pos:line="53" pos:column="9">=<pos:position pos:line="53" pos:column="10"/></operator> <call><name pos:line="53" pos:column="11">curl_mime_name<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">part<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="32">"sendfile alternative"<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">res<pos:position pos:line="54" pos:column="12"/></name></expr>)<pos:position pos:line="54" pos:column="13"/></condition><then pos:line="54" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="7">res<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">curl_mime_data_cb<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">part<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">datasize<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">read_callback<pos:position pos:line="55" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="56" pos:column="31">NULL<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">NULL<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="43">&amp;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="44">pooh<pos:position pos:line="56" pos:column="48"/></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt></block></then></if>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><operator pos:line="57" pos:column="8">!<pos:position pos:line="57" pos:column="9"/></operator><name pos:line="57" pos:column="9">res<pos:position pos:line="57" pos:column="12"/></name></expr>)<pos:position pos:line="57" pos:column="13"/></condition><then pos:line="57" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">res<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">curl_mime_filename<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">(<argument><expr><name pos:line="58" pos:column="32">part<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="38">"file name 2"<pos:position pos:line="58" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block></else></if>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name pos:line="61" pos:column="6">res<pos:position pos:line="61" pos:column="9"/></name></expr>)<pos:position pos:line="61" pos:column="10"/></condition><then pos:line="61" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">printf<pos:position pos:line="62" pos:column="11"/></name><argument_list pos:line="62" pos:column="11">(<argument><expr><literal type="string" pos:line="62" pos:column="12">"curl_mime_xxx(1) = %s\n"<pos:position pos:line="62" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="39">curl_easy_strerror<pos:position pos:line="62" pos:column="57"/></name><argument_list pos:line="62" pos:column="57">(<argument><expr><name pos:line="62" pos:column="58">res<pos:position pos:line="62" pos:column="61"/></name></expr></argument>)<pos:position pos:line="62" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Now add the same data with another name and make it not look like
     a file upload but still using the callback */</comment>

  <expr_stmt><expr><name><name pos:line="67" pos:column="3">pooh2<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">.<pos:position pos:line="67" pos:column="9"/></operator><name pos:line="67" pos:column="9">readptr<pos:position pos:line="67" pos:column="16"/></name></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">data<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
<cpp:ifndef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifndef<pos:position pos:line="68" pos:column="8"/></cpp:directive> <name pos:line="68" pos:column="9">LIB645<pos:position pos:line="68" pos:column="15"/></name></cpp:ifndef>
  <expr_stmt><expr><name pos:line="69" pos:column="3">datasize<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <operator pos:line="69" pos:column="14">(<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="15">curl_off_t<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">)<pos:position pos:line="69" pos:column="26"/></operator><call><name pos:line="69" pos:column="26">strlen<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">data<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">pooh2<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">.<pos:position pos:line="71" pos:column="9"/></operator><name pos:line="71" pos:column="9">sizeleft<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">datasize<pos:position pos:line="71" pos:column="28"/></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="73" pos:column="3">part<pos:position pos:line="73" pos:column="7"/></name> <operator pos:line="73" pos:column="8">=<pos:position pos:line="73" pos:column="9"/></operator> <call><name pos:line="73" pos:column="10">curl_mime_addpart<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">mime<pos:position pos:line="73" pos:column="32"/></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
  <if pos:line="74" pos:column="3">if<condition pos:line="74" pos:column="5">(<expr><operator pos:line="74" pos:column="6">!<pos:position pos:line="74" pos:column="7"/></operator><name pos:line="74" pos:column="7">part<pos:position pos:line="74" pos:column="11"/></name></expr>)<pos:position pos:line="74" pos:column="12"/></condition><then pos:line="74" pos:column="12"> <block pos:line="74" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">fprintf<pos:position pos:line="75" pos:column="12"/></name><argument_list pos:line="75" pos:column="12">(<argument><expr><name pos:line="75" pos:column="13">stderr<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="21">"curl_mime_addpart(2) failed\n"<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">curl_mime_free<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">mime<pos:position pos:line="76" pos:column="24"/></name></expr></argument>)<pos:position pos:line="76" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">curl_easy_cleanup<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">curl<pos:position pos:line="77" pos:column="27"/></name></expr></argument>)<pos:position pos:line="77" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">curl_global_cleanup<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">()<pos:position pos:line="78" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="81" pos:column="3">/* Fill in the file upload part */</comment>
  <expr_stmt><expr><name pos:line="82" pos:column="3">res<pos:position pos:line="82" pos:column="6"/></name> <operator pos:line="82" pos:column="7">=<pos:position pos:line="82" pos:column="8"/></operator> <call><name pos:line="82" pos:column="9">curl_mime_name<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">part<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="30">"callbackdata"<pos:position pos:line="82" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="46"/></expr_stmt>
  <if pos:line="83" pos:column="3">if<condition pos:line="83" pos:column="5">(<expr><operator pos:line="83" pos:column="6">!<pos:position pos:line="83" pos:column="7"/></operator><name pos:line="83" pos:column="7">res<pos:position pos:line="83" pos:column="10"/></name></expr>)<pos:position pos:line="83" pos:column="11"/></condition><then pos:line="83" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="5">res<pos:position pos:line="84" pos:column="8"/></name> <operator pos:line="84" pos:column="9">=<pos:position pos:line="84" pos:column="10"/></operator> <call><name pos:line="84" pos:column="11">curl_mime_data_cb<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">part<pos:position pos:line="84" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="35">datasize<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">read_callback<pos:position pos:line="84" pos:column="58"/></name></expr></argument>,
                            <argument><expr><name pos:line="85" pos:column="29">NULL<pos:position pos:line="85" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="35">NULL<pos:position pos:line="85" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="41">&amp;<pos:position pos:line="85" pos:column="46"/></operator><name pos:line="85" pos:column="42">pooh2<pos:position pos:line="85" pos:column="47"/></name></expr></argument>)<pos:position pos:line="85" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><name pos:line="87" pos:column="6">res<pos:position pos:line="87" pos:column="9"/></name></expr>)<pos:position pos:line="87" pos:column="10"/></condition><then pos:line="87" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="5">printf<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><literal type="string" pos:line="88" pos:column="12">"curl_mime_xxx(2) = %s\n"<pos:position pos:line="88" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="39">curl_easy_strerror<pos:position pos:line="88" pos:column="57"/></name><argument_list pos:line="88" pos:column="57">(<argument><expr><name pos:line="88" pos:column="58">res<pos:position pos:line="88" pos:column="61"/></name></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="64"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="90" pos:column="3">part<pos:position pos:line="90" pos:column="7"/></name> <operator pos:line="90" pos:column="8">=<pos:position pos:line="90" pos:column="9"/></operator> <call><name pos:line="90" pos:column="10">curl_mime_addpart<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name pos:line="90" pos:column="28">mime<pos:position pos:line="90" pos:column="32"/></name></expr></argument>)<pos:position pos:line="90" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="34"/></expr_stmt>
  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">(<expr><operator pos:line="91" pos:column="6">!<pos:position pos:line="91" pos:column="7"/></operator><name pos:line="91" pos:column="7">part<pos:position pos:line="91" pos:column="11"/></name></expr>)<pos:position pos:line="91" pos:column="12"/></condition><then pos:line="91" pos:column="12"> <block pos:line="91" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">fprintf<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">stderr<pos:position pos:line="92" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="21">"curl_mime_addpart(3) failed\n"<pos:position pos:line="92" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">curl_mime_free<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">mime<pos:position pos:line="93" pos:column="24"/></name></expr></argument>)<pos:position pos:line="93" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">curl_easy_cleanup<pos:position pos:line="94" pos:column="22"/></name><argument_list pos:line="94" pos:column="22">(<argument><expr><name pos:line="94" pos:column="23">curl<pos:position pos:line="94" pos:column="27"/></name></expr></argument>)<pos:position pos:line="94" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">curl_global_cleanup<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">()<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
    <return pos:line="96" pos:column="5">return <expr><name pos:line="96" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="96" pos:column="30"/></name></expr>;<pos:position pos:line="96" pos:column="31"/></return>
  }<pos:position pos:line="97" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="99" pos:column="3">/* Fill in the filename field */</comment>
  <expr_stmt><expr><name pos:line="100" pos:column="3">res<pos:position pos:line="100" pos:column="6"/></name> <operator pos:line="100" pos:column="7">=<pos:position pos:line="100" pos:column="8"/></operator> <call><name pos:line="100" pos:column="9">curl_mime_name<pos:position pos:line="100" pos:column="23"/></name><argument_list pos:line="100" pos:column="23">(<argument><expr><name pos:line="100" pos:column="24">part<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="30">"filename"<pos:position pos:line="100" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="42"/></expr_stmt>
  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><operator pos:line="101" pos:column="6">!<pos:position pos:line="101" pos:column="7"/></operator><name pos:line="101" pos:column="7">res<pos:position pos:line="101" pos:column="10"/></name></expr>)<pos:position pos:line="101" pos:column="11"/></condition><then pos:line="101" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="5">res<pos:position pos:line="102" pos:column="8"/></name> <operator pos:line="102" pos:column="9">=<pos:position pos:line="102" pos:column="10"/></operator> <call><name pos:line="102" pos:column="11">curl_mime_data<pos:position pos:line="102" pos:column="25"/></name><argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">part<pos:position pos:line="102" pos:column="30"/></name></expr></argument>,
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="103" pos:column="29"/></name></cpp:ifdef>
                         <comment type="block" pos:line="104" pos:column="26">/* ASCII representation with escape
                            sequences for non-ASCII platforms */</comment>
                         <argument><expr><literal type="string" pos:line="106" pos:column="26">"\x70\x6f\x73\x74\x69\x74\x32\x2e\x63"<pos:position pos:line="106" pos:column="64"/></literal></expr></argument>,
<cpp:else pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">else<pos:position pos:line="107" pos:column="6"/></cpp:directive></cpp:else>
                          <argument><expr><literal type="string" pos:line="108" pos:column="27">"postit2.c"<pos:position pos:line="108" pos:column="38"/></literal></expr></argument>,
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
                          <argument><expr><name pos:line="110" pos:column="27">CURL_ZERO_TERMINATED<pos:position pos:line="110" pos:column="47"/></name></expr></argument>)<pos:position pos:line="110" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><name pos:line="112" pos:column="6">res<pos:position pos:line="112" pos:column="9"/></name></expr>)<pos:position pos:line="112" pos:column="10"/></condition><then pos:line="112" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="5">printf<pos:position pos:line="113" pos:column="11"/></name><argument_list pos:line="113" pos:column="11">(<argument><expr><literal type="string" pos:line="113" pos:column="12">"curl_mime_xxx(3) = %s\n"<pos:position pos:line="113" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="39">curl_easy_strerror<pos:position pos:line="113" pos:column="57"/></name><argument_list pos:line="113" pos:column="57">(<argument><expr><name pos:line="113" pos:column="58">res<pos:position pos:line="113" pos:column="61"/></name></expr></argument>)<pos:position pos:line="113" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="113" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="64"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="115" pos:column="3">/* Fill in a submit field too */</comment>
  <expr_stmt><expr><name pos:line="116" pos:column="3">part<pos:position pos:line="116" pos:column="7"/></name> <operator pos:line="116" pos:column="8">=<pos:position pos:line="116" pos:column="9"/></operator> <call><name pos:line="116" pos:column="10">curl_mime_addpart<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">mime<pos:position pos:line="116" pos:column="32"/></name></expr></argument>)<pos:position pos:line="116" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="34"/></expr_stmt>
  <if pos:line="117" pos:column="3">if<condition pos:line="117" pos:column="5">(<expr><operator pos:line="117" pos:column="6">!<pos:position pos:line="117" pos:column="7"/></operator><name pos:line="117" pos:column="7">part<pos:position pos:line="117" pos:column="11"/></name></expr>)<pos:position pos:line="117" pos:column="12"/></condition><then pos:line="117" pos:column="12"> <block pos:line="117" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">fprintf<pos:position pos:line="118" pos:column="12"/></name><argument_list pos:line="118" pos:column="12">(<argument><expr><name pos:line="118" pos:column="13">stderr<pos:position pos:line="118" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="21">"curl_mime_addpart(4) failed\n"<pos:position pos:line="118" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">curl_mime_free<pos:position pos:line="119" pos:column="19"/></name><argument_list pos:line="119" pos:column="19">(<argument><expr><name pos:line="119" pos:column="20">mime<pos:position pos:line="119" pos:column="24"/></name></expr></argument>)<pos:position pos:line="119" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="120" pos:column="5">curl_easy_cleanup<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><name pos:line="120" pos:column="23">curl<pos:position pos:line="120" pos:column="27"/></name></expr></argument>)<pos:position pos:line="120" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">curl_global_cleanup<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">()<pos:position pos:line="121" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="27"/></expr_stmt>
    <return pos:line="122" pos:column="5">return <expr><name pos:line="122" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="122" pos:column="30"/></name></expr>;<pos:position pos:line="122" pos:column="31"/></return>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="124" pos:column="3">res<pos:position pos:line="124" pos:column="6"/></name> <operator pos:line="124" pos:column="7">=<pos:position pos:line="124" pos:column="8"/></operator> <call><name pos:line="124" pos:column="9">curl_mime_name<pos:position pos:line="124" pos:column="23"/></name><argument_list pos:line="124" pos:column="23">(<argument><expr><name pos:line="124" pos:column="24">part<pos:position pos:line="124" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="30">"submit"<pos:position pos:line="124" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>
  <if pos:line="125" pos:column="3">if<condition pos:line="125" pos:column="5">(<expr><operator pos:line="125" pos:column="6">!<pos:position pos:line="125" pos:column="7"/></operator><name pos:line="125" pos:column="7">res<pos:position pos:line="125" pos:column="10"/></name></expr>)<pos:position pos:line="125" pos:column="11"/></condition><then pos:line="125" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="5">res<pos:position pos:line="126" pos:column="8"/></name> <operator pos:line="126" pos:column="9">=<pos:position pos:line="126" pos:column="10"/></operator> <call><name pos:line="126" pos:column="11">curl_mime_data<pos:position pos:line="126" pos:column="25"/></name><argument_list pos:line="126" pos:column="25">(<argument><expr><name pos:line="126" pos:column="26">part<pos:position pos:line="126" pos:column="30"/></name></expr></argument>,
<cpp:ifdef pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">ifdef<pos:position pos:line="127" pos:column="7"/></cpp:directive> <name pos:line="127" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="127" pos:column="29"/></name></cpp:ifdef>
                         <comment type="block" pos:line="128" pos:column="26">/* ASCII representation with escape
                            sequences for non-ASCII platforms */</comment>
                         <argument><expr><literal type="string" pos:line="130" pos:column="26">"\x73\x65\x6e\x64"<pos:position pos:line="130" pos:column="44"/></literal></expr></argument>,
<cpp:else pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">else<pos:position pos:line="131" pos:column="6"/></cpp:directive></cpp:else>
                          <argument><expr><literal type="string" pos:line="132" pos:column="27">"send"<pos:position pos:line="132" pos:column="33"/></literal></expr></argument>,
<cpp:endif pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">endif<pos:position pos:line="133" pos:column="7"/></cpp:directive></cpp:endif>
                          <argument><expr><name pos:line="134" pos:column="27">CURL_ZERO_TERMINATED<pos:position pos:line="134" pos:column="47"/></name></expr></argument>)<pos:position pos:line="134" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="136" pos:column="3">if<condition pos:line="136" pos:column="5">(<expr><name pos:line="136" pos:column="6">res<pos:position pos:line="136" pos:column="9"/></name></expr>)<pos:position pos:line="136" pos:column="10"/></condition><then pos:line="136" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="5">printf<pos:position pos:line="137" pos:column="11"/></name><argument_list pos:line="137" pos:column="11">(<argument><expr><literal type="string" pos:line="137" pos:column="12">"curl_mime_xxx(4) = %s\n"<pos:position pos:line="137" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="39">curl_easy_strerror<pos:position pos:line="137" pos:column="57"/></name><argument_list pos:line="137" pos:column="57">(<argument><expr><name pos:line="137" pos:column="58">res<pos:position pos:line="137" pos:column="61"/></name></expr></argument>)<pos:position pos:line="137" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="64"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="139" pos:column="3">part<pos:position pos:line="139" pos:column="7"/></name> <operator pos:line="139" pos:column="8">=<pos:position pos:line="139" pos:column="9"/></operator> <call><name pos:line="139" pos:column="10">curl_mime_addpart<pos:position pos:line="139" pos:column="27"/></name><argument_list pos:line="139" pos:column="27">(<argument><expr><name pos:line="139" pos:column="28">mime<pos:position pos:line="139" pos:column="32"/></name></expr></argument>)<pos:position pos:line="139" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="34"/></expr_stmt>
  <if pos:line="140" pos:column="3">if<condition pos:line="140" pos:column="5">(<expr><operator pos:line="140" pos:column="6">!<pos:position pos:line="140" pos:column="7"/></operator><name pos:line="140" pos:column="7">part<pos:position pos:line="140" pos:column="11"/></name></expr>)<pos:position pos:line="140" pos:column="12"/></condition><then pos:line="140" pos:column="12"> <block pos:line="140" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">fprintf<pos:position pos:line="141" pos:column="12"/></name><argument_list pos:line="141" pos:column="12">(<argument><expr><name pos:line="141" pos:column="13">stderr<pos:position pos:line="141" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="21">"curl_mime_addpart(5) failed\n"<pos:position pos:line="141" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">curl_mime_free<pos:position pos:line="142" pos:column="19"/></name><argument_list pos:line="142" pos:column="19">(<argument><expr><name pos:line="142" pos:column="20">mime<pos:position pos:line="142" pos:column="24"/></name></expr></argument>)<pos:position pos:line="142" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="143" pos:column="5">curl_easy_cleanup<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><name pos:line="143" pos:column="23">curl<pos:position pos:line="143" pos:column="27"/></name></expr></argument>)<pos:position pos:line="143" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="144" pos:column="5">curl_global_cleanup<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">()<pos:position pos:line="144" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="27"/></expr_stmt>
    <return pos:line="145" pos:column="5">return <expr><name pos:line="145" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="145" pos:column="30"/></name></expr>;<pos:position pos:line="145" pos:column="31"/></return>
  }<pos:position pos:line="146" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="147" pos:column="3">res<pos:position pos:line="147" pos:column="6"/></name> <operator pos:line="147" pos:column="7">=<pos:position pos:line="147" pos:column="8"/></operator> <call><name pos:line="147" pos:column="9">curl_mime_name<pos:position pos:line="147" pos:column="23"/></name><argument_list pos:line="147" pos:column="23">(<argument><expr><name pos:line="147" pos:column="24">part<pos:position pos:line="147" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="30">"somename"<pos:position pos:line="147" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="42"/></expr_stmt>
  <if pos:line="148" pos:column="3">if<condition pos:line="148" pos:column="5">(<expr><operator pos:line="148" pos:column="6">!<pos:position pos:line="148" pos:column="7"/></operator><name pos:line="148" pos:column="7">res<pos:position pos:line="148" pos:column="10"/></name></expr>)<pos:position pos:line="148" pos:column="11"/></condition><then pos:line="148" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="149" pos:column="5">res<pos:position pos:line="149" pos:column="8"/></name> <operator pos:line="149" pos:column="9">=<pos:position pos:line="149" pos:column="10"/></operator> <call><name pos:line="149" pos:column="11">curl_mime_filename<pos:position pos:line="149" pos:column="29"/></name><argument_list pos:line="149" pos:column="29">(<argument><expr><name pos:line="149" pos:column="30">part<pos:position pos:line="149" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="36">"somefile.txt"<pos:position pos:line="149" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="52"/></expr_stmt></block></then></if>
  <if pos:line="150" pos:column="3">if<condition pos:line="150" pos:column="5">(<expr><operator pos:line="150" pos:column="6">!<pos:position pos:line="150" pos:column="7"/></operator><name pos:line="150" pos:column="7">res<pos:position pos:line="150" pos:column="10"/></name></expr>)<pos:position pos:line="150" pos:column="11"/></condition><then pos:line="150" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="5">res<pos:position pos:line="151" pos:column="8"/></name> <operator pos:line="151" pos:column="9">=<pos:position pos:line="151" pos:column="10"/></operator> <call><name pos:line="151" pos:column="11">curl_mime_data<pos:position pos:line="151" pos:column="25"/></name><argument_list pos:line="151" pos:column="25">(<argument><expr><name pos:line="151" pos:column="26">part<pos:position pos:line="151" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="32">"blah blah"<pos:position pos:line="151" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="45">9<pos:position pos:line="151" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="48"/></expr_stmt></block></then></if>

  <if pos:line="153" pos:column="3">if<condition pos:line="153" pos:column="5">(<expr><name pos:line="153" pos:column="6">res<pos:position pos:line="153" pos:column="9"/></name></expr>)<pos:position pos:line="153" pos:column="10"/></condition><then pos:line="153" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="5">printf<pos:position pos:line="154" pos:column="11"/></name><argument_list pos:line="154" pos:column="11">(<argument><expr><literal type="string" pos:line="154" pos:column="12">"curl_mime_xxx(5) = %s\n"<pos:position pos:line="154" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="154" pos:column="39">curl_easy_strerror<pos:position pos:line="154" pos:column="57"/></name><argument_list pos:line="154" pos:column="57">(<argument><expr><name pos:line="154" pos:column="58">res<pos:position pos:line="154" pos:column="61"/></name></expr></argument>)<pos:position pos:line="154" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="154" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="64"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="156" pos:column="3">/* First set the URL that is about to receive our POST. */</comment>
  <expr_stmt><expr><call><name pos:line="157" pos:column="3">test_setopt<pos:position pos:line="157" pos:column="14"/></name><argument_list pos:line="157" pos:column="14">(<argument><expr><name pos:line="157" pos:column="15">curl<pos:position pos:line="157" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="21">CURLOPT_URL<pos:position pos:line="157" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="34">URL<pos:position pos:line="157" pos:column="37"/></name></expr></argument>)<pos:position pos:line="157" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="159" pos:column="3">/* send a multi-part mimepost */</comment>
  <expr_stmt><expr><call><name pos:line="160" pos:column="3">test_setopt<pos:position pos:line="160" pos:column="14"/></name><argument_list pos:line="160" pos:column="14">(<argument><expr><name pos:line="160" pos:column="15">curl<pos:position pos:line="160" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="21">CURLOPT_MIMEPOST<pos:position pos:line="160" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="39">mime<pos:position pos:line="160" pos:column="43"/></name></expr></argument>)<pos:position pos:line="160" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="162" pos:column="3">/* get verbose debug output please */</comment>
  <expr_stmt><expr><call><name pos:line="163" pos:column="3">test_setopt<pos:position pos:line="163" pos:column="14"/></name><argument_list pos:line="163" pos:column="14">(<argument><expr><name pos:line="163" pos:column="15">curl<pos:position pos:line="163" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="21">CURLOPT_VERBOSE<pos:position pos:line="163" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="38">1L<pos:position pos:line="163" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="165" pos:column="3">/* include headers in the output */</comment>
  <expr_stmt><expr><call><name pos:line="166" pos:column="3">test_setopt<pos:position pos:line="166" pos:column="14"/></name><argument_list pos:line="166" pos:column="14">(<argument><expr><name pos:line="166" pos:column="15">curl<pos:position pos:line="166" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="21">CURLOPT_HEADER<pos:position pos:line="166" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="37">1L<pos:position pos:line="166" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="168" pos:column="3">/* Perform the request, res will get the return code */</comment>
  <expr_stmt><expr><name pos:line="169" pos:column="3">res<pos:position pos:line="169" pos:column="6"/></name> <operator pos:line="169" pos:column="7">=<pos:position pos:line="169" pos:column="8"/></operator> <call><name pos:line="169" pos:column="9">curl_easy_perform<pos:position pos:line="169" pos:column="26"/></name><argument_list pos:line="169" pos:column="26">(<argument><expr><name pos:line="169" pos:column="27">curl<pos:position pos:line="169" pos:column="31"/></name></expr></argument>)<pos:position pos:line="169" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="33"/></expr_stmt>

<label><name pos:line="171" pos:column="1">test_cleanup<pos:position pos:line="171" pos:column="13"/></name>:<pos:position pos:line="171" pos:column="14"/></label>

  <comment type="block" pos:line="173" pos:column="3">/* always cleanup */</comment>
  <expr_stmt><expr><call><name pos:line="174" pos:column="3">curl_easy_cleanup<pos:position pos:line="174" pos:column="20"/></name><argument_list pos:line="174" pos:column="20">(<argument><expr><name pos:line="174" pos:column="21">curl<pos:position pos:line="174" pos:column="25"/></name></expr></argument>)<pos:position pos:line="174" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="176" pos:column="3">/* now cleanup the mimepost structure */</comment>
  <expr_stmt><expr><call><name pos:line="177" pos:column="3">curl_mime_free<pos:position pos:line="177" pos:column="17"/></name><argument_list pos:line="177" pos:column="17">(<argument><expr><name pos:line="177" pos:column="18">mime<pos:position pos:line="177" pos:column="22"/></name></expr></argument>)<pos:position pos:line="177" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="24"/></expr_stmt>

  <return pos:line="179" pos:column="3">return <expr><name pos:line="179" pos:column="10">res<pos:position pos:line="179" pos:column="13"/></name></expr>;<pos:position pos:line="179" pos:column="14"/></return>
}<pos:position pos:line="180" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2242_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">Curl_rand<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">SessionHandle<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">r<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">unsigned<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">int<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">randseed<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">bool<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">seeded<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">FALSE<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">CURLDEBUG<pos:position pos:line="7" pos:column="17"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">force_entropy<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><call><name pos:line="8" pos:column="25">getenv<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><literal type="string" pos:line="8" pos:column="32">"CURL_ENTROPY"<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">force_entropy<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20"> <block pos:line="9" pos:column="21">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">!<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">seeded<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">size_t<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">elen<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><call><name pos:line="11" pos:column="21">strlen<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">force_entropy<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">size_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">clen<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><sizeof pos:line="12" pos:column="21">sizeof<argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">randseed<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="13" pos:column="7">size_t<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">min<pos:position pos:line="13" pos:column="17"/></name> <init pos:line="13" pos:column="18">= <expr><ternary><condition><expr><name pos:line="13" pos:column="20">elen<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&lt;<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="27">clen<pos:position pos:line="13" pos:column="31"/></name></expr> ?<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <expr><name pos:line="13" pos:column="34">elen<pos:position pos:line="13" pos:column="38"/></name></expr> <pos:position pos:line="13" pos:column="39"/></then><else pos:line="13" pos:column="39">: <expr><name pos:line="13" pos:column="41">clen<pos:position pos:line="13" pos:column="45"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">memcpy<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">)<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">randseed<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">force_entropy<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">min<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">seeded<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">TRUE<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="7">randseed<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">++<pos:position pos:line="18" pos:column="17"/></operator></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt></block></else></if>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">randseed<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="23" pos:column="3">/* data may be NULL! */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><call><name pos:line="24" pos:column="7">Curl_ssl_random<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">data<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="29">(<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">unsigned<pos:position pos:line="24" pos:column="38"/></name> <name pos:line="24" pos:column="39">char<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">*<pos:position pos:line="24" pos:column="45"/></operator><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator><operator pos:line="24" pos:column="46">&amp;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="47">r<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="50">sizeof<argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">r<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">r<pos:position pos:line="25" pos:column="13"/></name></expr>;<pos:position pos:line="25" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* If Curl_ssl_random() returns non-zero it couldn't offer randomness and we
     instead perform a "best effort" */</comment>

<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">RANDOM_FILE<pos:position pos:line="30" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">seeded<pos:position pos:line="31" pos:column="13"/></name></expr>)<pos:position pos:line="31" pos:column="14"/></condition><then pos:line="31" pos:column="14"> <block pos:line="31" pos:column="15">{
    <comment type="block" pos:line="32" pos:column="5">/* if there's a random file to read a seed from, use it */</comment>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">fd<pos:position pos:line="33" pos:column="11"/></name> <init pos:line="33" pos:column="12">= <expr><call><name pos:line="33" pos:column="14">open<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">RANDOM_FILE<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">O_RDONLY<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="42"/></decl_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">fd<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">&gt;<pos:position pos:line="34" pos:column="15"/></operator> <operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16"> <block pos:line="34" pos:column="17">{
      <comment type="block" pos:line="35" pos:column="7">/* read random data into the randseed variable */</comment>
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">ssize_t<pos:position pos:line="36" pos:column="14"/></name></type> <name pos:line="36" pos:column="15">nread<pos:position pos:line="36" pos:column="20"/></name> <init pos:line="36" pos:column="21">= <expr><call><name pos:line="36" pos:column="23">read<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">fd<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="32">&amp;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="33">randseed<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="43">sizeof<argument_list pos:line="36" pos:column="49">(<argument><expr><name pos:line="36" pos:column="50">randseed<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="61"/></decl_stmt>
      <if pos:line="37" pos:column="7">if<condition pos:line="37" pos:column="9">(<expr><name pos:line="37" pos:column="10">nread<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">==<pos:position pos:line="37" pos:column="18"/></operator> <sizeof pos:line="37" pos:column="19">sizeof<argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">randseed<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></sizeof></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="9">seeded<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">TRUE<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">close<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">fd<pos:position pos:line="39" pos:column="15"/></name></expr></argument>)<pos:position pos:line="39" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><operator pos:line="44" pos:column="6">!<pos:position pos:line="44" pos:column="7"/></operator><name pos:line="44" pos:column="7">seeded<pos:position pos:line="44" pos:column="13"/></name></expr>)<pos:position pos:line="44" pos:column="14"/></condition><then pos:line="44" pos:column="14"> <block pos:line="44" pos:column="15">{
    <decl_stmt><decl><type><name><name pos:line="45" pos:column="5">struct<pos:position pos:line="45" pos:column="11"/></name> <name pos:line="45" pos:column="12">timeval<pos:position pos:line="45" pos:column="19"/></name></name></type> <name pos:line="45" pos:column="20">now<pos:position pos:line="45" pos:column="23"/></name> <init pos:line="45" pos:column="24">= <expr><call><name pos:line="45" pos:column="26">curlx_tvnow<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">()<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">infof<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">data<pos:position pos:line="46" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="17">"WARNING: Using weak random seed\n"<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">randseed<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">+=<pos:position pos:line="47" pos:column="16"/></operator> <operator pos:line="47" pos:column="17">(<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">unsigned<pos:position pos:line="47" pos:column="26"/></name> <name pos:line="47" pos:column="27">int<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">)<pos:position pos:line="47" pos:column="31"/></operator><name><name pos:line="47" pos:column="31">now<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">.<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">tv_usec<pos:position pos:line="47" pos:column="42"/></name></name> <operator pos:line="47" pos:column="43">+<pos:position pos:line="47" pos:column="44"/></operator> <operator pos:line="47" pos:column="45">(<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">unsigned<pos:position pos:line="47" pos:column="54"/></name> <name pos:line="47" pos:column="55">int<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">)<pos:position pos:line="47" pos:column="59"/></operator><name><name pos:line="47" pos:column="59">now<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">.<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="63">tv_sec<pos:position pos:line="47" pos:column="69"/></name></name></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">randseed<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">randseed<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">*<pos:position pos:line="48" pos:column="26"/></operator> <literal type="number" pos:line="48" pos:column="27">1103515245<pos:position pos:line="48" pos:column="37"/></literal> <operator pos:line="48" pos:column="38">+<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="40">12345<pos:position pos:line="48" pos:column="45"/></literal></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">randseed<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">randseed<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">*<pos:position pos:line="49" pos:column="26"/></operator> <literal type="number" pos:line="49" pos:column="27">1103515245<pos:position pos:line="49" pos:column="37"/></literal> <operator pos:line="49" pos:column="38">+<pos:position pos:line="49" pos:column="39"/></operator> <literal type="number" pos:line="49" pos:column="40">12345<pos:position pos:line="49" pos:column="45"/></literal></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">randseed<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <name pos:line="50" pos:column="16">randseed<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator> <literal type="number" pos:line="50" pos:column="27">1103515245<pos:position pos:line="50" pos:column="37"/></literal> <operator pos:line="50" pos:column="38">+<pos:position pos:line="50" pos:column="39"/></operator> <literal type="number" pos:line="50" pos:column="40">12345<pos:position pos:line="50" pos:column="45"/></literal></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">seeded<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <name pos:line="51" pos:column="14">TRUE<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/* Return an unsigned 32-bit pseudo-random number. */</comment>
  <expr_stmt><expr><name pos:line="55" pos:column="3">r<pos:position pos:line="55" pos:column="4"/></name> <operator pos:line="55" pos:column="5">=<pos:position pos:line="55" pos:column="6"/></operator> <name pos:line="55" pos:column="7">randseed<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="18">randseed<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">*<pos:position pos:line="55" pos:column="28"/></operator> <literal type="number" pos:line="55" pos:column="29">1103515245<pos:position pos:line="55" pos:column="39"/></literal> <operator pos:line="55" pos:column="40">+<pos:position pos:line="55" pos:column="41"/></operator> <literal type="number" pos:line="55" pos:column="42">12345<pos:position pos:line="55" pos:column="47"/></literal></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>
  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">r<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">&lt;&lt;<pos:position pos:line="56" pos:column="21"/></operator> <literal type="number" pos:line="56" pos:column="16">16<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">)<pos:position pos:line="56" pos:column="19"/></operator> <operator pos:line="56" pos:column="20">|<pos:position pos:line="56" pos:column="21"/></operator> <operator pos:line="56" pos:column="22">(<pos:position pos:line="56" pos:column="23"/></operator><operator pos:line="56" pos:column="23">(<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">r<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">&gt;&gt;<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="29">16<pos:position pos:line="56" pos:column="31"/></literal><operator pos:line="56" pos:column="31">)<pos:position pos:line="56" pos:column="32"/></operator> <operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator> <literal type="number" pos:line="56" pos:column="35">0xFFFF<pos:position pos:line="56" pos:column="41"/></literal><operator pos:line="56" pos:column="41">)<pos:position pos:line="56" pos:column="42"/></operator></expr>;<pos:position pos:line="56" pos:column="43"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

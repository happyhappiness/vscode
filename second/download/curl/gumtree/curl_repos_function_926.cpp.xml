<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_926.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_gss_log_error<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">SessionHandle<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">OM_uint32<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">status<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">prefix<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">OM_uint32<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">maj_stat<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">OM_uint32<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">min_stat<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">OM_uint32<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">msg_ctx<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gss_buffer_desc<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">status_string<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buf<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><literal type="number" pos:line="8" pos:column="12">1024<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">len<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">snprintf<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">buf<pos:position pos:line="11" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="17">sizeof<argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">buf<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"%s"<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">prefix<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">len<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">strlen<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">buf<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <do pos:line="13" pos:column="3">do <block pos:line="13" pos:column="6">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">maj_stat<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">gss_display_status<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">min_stat<pos:position pos:line="14" pos:column="44"/></name></expr></argument>,
                                  <argument><expr><name pos:line="15" pos:column="35">status<pos:position pos:line="15" pos:column="41"/></name></expr></argument>,
                                  <argument><expr><name pos:line="16" pos:column="35">GSS_C_MECH_CODE<pos:position pos:line="16" pos:column="50"/></name></expr></argument>,
                                  <argument><expr><name pos:line="17" pos:column="35">GSS_C_NO_OID<pos:position pos:line="17" pos:column="47"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">msg_ctx<pos:position pos:line="18" pos:column="43"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="19" pos:column="35">&amp;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="36">status_string<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><sizeof pos:line="20" pos:column="8">sizeof<argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">buf<pos:position pos:line="20" pos:column="18"/></name></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></sizeof> <operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="22">len<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">+<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="28">status_string<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">length<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">+<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">1<pos:position pos:line="20" pos:column="52"/></literal></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">snprintf<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">buf<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">+<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">len<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="27">sizeof<argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">buf<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></sizeof> <operator pos:line="21" pos:column="39">-<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">len<pos:position pos:line="21" pos:column="44"/></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="22" pos:column="9">": %s"<pos:position pos:line="22" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">char<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator><name><name pos:line="22" pos:column="24">status_string<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">value<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">len<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">+=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">status_string<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">length<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">gss_release_buffer<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">min_stat<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="36">status_string<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block> while<condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">!<pos:position pos:line="26" pos:column="12"/></operator><call><name pos:line="26" pos:column="12">GSS_ERROR<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">maj_stat<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call> <operator pos:line="26" pos:column="32">&amp;&amp;<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="35">msg_ctx<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">!=<pos:position pos:line="26" pos:column="45"/></operator> <literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr>)<pos:position pos:line="26" pos:column="48"/></condition>;<pos:position pos:line="26" pos:column="49"/></do>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">infof<pos:position pos:line="28" pos:column="8"/></name><argument_list pos:line="28" pos:column="8">(<argument><expr><name pos:line="28" pos:column="9">data<pos:position pos:line="28" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="15">"%s\n"<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="23">buf<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

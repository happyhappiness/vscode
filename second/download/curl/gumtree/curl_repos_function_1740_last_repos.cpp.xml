<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1740_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Curl_addrinfo<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">Curl_resolver_getaddrinfo<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">connectdata<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">conn<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">hostname<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">port<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="4" pos:column="42">int<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">waitp<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="53"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">bufp<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">in_addr<pos:position pos:line="8" pos:column="17"/></name></name></type> <name pos:line="8" pos:column="18">in<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">family<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">PF_INET<pos:position pos:line="9" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">ENABLE_IPV6<pos:position pos:line="10" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="10" pos:column="20">/* CURLRES_IPV6 */</comment>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">in6_addr<pos:position pos:line="11" pos:column="18"/></name></name></type> <name pos:line="11" pos:column="19">in6<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="12" pos:column="8">/* CURLRES_IPV6 */</comment>

  <expr_stmt><expr><operator pos:line="14" pos:column="3">*<pos:position pos:line="14" pos:column="4"/></operator><name pos:line="14" pos:column="4">waitp<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt> <comment type="block" pos:line="14" pos:column="15">/* default to synchronous response */</comment>

  <comment type="block" pos:line="16" pos:column="3">/* First check if this is an IPv4 address string */</comment>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><call><name pos:line="17" pos:column="6">Curl_inet_pton<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">AF_INET<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">hostname<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="40">&amp;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="41">in<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">&gt;<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
    <comment type="block" pos:line="18" pos:column="5">/* This is a dotted IP address 123.123.123.123-style */</comment>
    <return pos:line="19" pos:column="5">return <expr><call><name pos:line="19" pos:column="12">Curl_ip2addr<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">AF_INET<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="34">&amp;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="35">in<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">hostname<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">port<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">ENABLE_IPV6<pos:position pos:line="22" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="22" pos:column="20">/* CURLRES_IPV6 */</comment>
  <comment type="block" pos:line="23" pos:column="3">/* Otherwise, check if this is an IPv6 address string */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><call><name pos:line="24" pos:column="6">Curl_inet_pton<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">AF_INET6<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">hostname<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">in6<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call> <operator pos:line="24" pos:column="48">&gt;<pos:position pos:line="24" pos:column="52"/></operator> <literal type="number" pos:line="24" pos:column="50">0<pos:position pos:line="24" pos:column="51"/></literal></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
    <comment type="block" pos:line="25" pos:column="5">/* This must be an IPv6 address literal.  */</comment>
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><call><name pos:line="26" pos:column="12">Curl_ip2addr<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">AF_INET6<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">in6<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">hostname<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">port<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></return></block></then></if>

  <switch pos:line="28" pos:column="3">switch<condition pos:line="28" pos:column="9">(<expr><name><name pos:line="28" pos:column="10">conn<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">ip_version<pos:position pos:line="28" pos:column="26"/></name></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition> <block pos:line="28" pos:column="28">{
  <default pos:line="29" pos:column="3">default:<pos:position pos:line="29" pos:column="11"/></default>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">ARES_VERSION<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&gt;=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="21">0x010601<pos:position pos:line="30" pos:column="29"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="31" pos:column="5">family<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">PF_UNSPEC<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt> <comment type="block" pos:line="31" pos:column="25">/* supported by c-ares since 1.6.1, so for older
                           c-ares versions this just falls through and defaults
                           to PF_INET */</comment>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
  <case pos:line="36" pos:column="3">case <expr><name pos:line="36" pos:column="8">CURL_IPRESOLVE_V4<pos:position pos:line="36" pos:column="25"/></name></expr>:<pos:position pos:line="36" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="37" pos:column="5">family<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">PF_INET<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    <break pos:line="38" pos:column="5">break;<pos:position pos:line="38" pos:column="11"/></break>
  <case pos:line="39" pos:column="3">case <expr><name pos:line="39" pos:column="8">CURL_IPRESOLVE_V6<pos:position pos:line="39" pos:column="25"/></name></expr>:<pos:position pos:line="39" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="40" pos:column="5">family<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">PF_INET6<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>
  }<pos:position pos:line="42" pos:column="4"/></block></switch>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="43" pos:column="8">/* CURLRES_IPV6 */</comment>

  <expr_stmt><expr><name pos:line="45" pos:column="3">bufp<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">=<pos:position pos:line="45" pos:column="9"/></operator> <call><name pos:line="45" pos:column="10">strdup<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">hostname<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">bufp<pos:position pos:line="46" pos:column="10"/></name></expr>)<pos:position pos:line="46" pos:column="11"/></condition><then pos:line="46" pos:column="11"> <block pos:line="46" pos:column="12">{
    <decl_stmt><decl><type><name><name pos:line="47" pos:column="5">struct<pos:position pos:line="47" pos:column="11"/></name> <name pos:line="47" pos:column="12">ResolverResults<pos:position pos:line="47" pos:column="27"/></name></name> <modifier pos:line="47" pos:column="28">*<pos:position pos:line="47" pos:column="29"/></modifier></type><name pos:line="47" pos:column="29">res<pos:position pos:line="47" pos:column="32"/></name> <init pos:line="47" pos:column="33">= <expr><name pos:line="47" pos:column="35">NULL<pos:position pos:line="47" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">free<pos:position pos:line="48" pos:column="9"/></name><argument_list pos:line="48" pos:column="9">(<argument><expr><name><name pos:line="48" pos:column="10">conn<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">async<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">.<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">hostname<pos:position pos:line="48" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">conn<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">async<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">.<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">hostname<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">bufp<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">conn<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">async<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">port<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">port<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">conn<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">async<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">done<pos:position pos:line="51" pos:column="21"/></name></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">FALSE<pos:position pos:line="51" pos:column="29"/></name></expr>;<pos:position pos:line="51" pos:column="30"/></expr_stmt>   <comment type="block" pos:line="51" pos:column="33">/* not done */</comment>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">conn<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">async<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">.<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">status<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="26">0<pos:position pos:line="52" pos:column="27"/></literal></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>     <comment type="block" pos:line="52" pos:column="33">/* clear */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">conn<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">async<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">dns<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">NULL<pos:position pos:line="53" pos:column="27"/></name></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>     <comment type="block" pos:line="53" pos:column="33">/* clear */</comment>
    <expr_stmt><expr><name pos:line="54" pos:column="5">res<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">=<pos:position pos:line="54" pos:column="10"/></operator> <call><name pos:line="54" pos:column="11">calloc<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><sizeof pos:line="54" pos:column="18">sizeof<argument_list pos:line="54" pos:column="24">(<argument><expr pos:line="54" pos:column="25">struct <name pos:line="54" pos:column="32">ResolverResults<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="50">1<pos:position pos:line="54" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="53"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">res<pos:position pos:line="55" pos:column="12"/></name></expr>)<pos:position pos:line="55" pos:column="13"/></condition><then pos:line="55" pos:column="13"> <block pos:line="55" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">free<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><name><name pos:line="56" pos:column="12">conn<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">async<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">hostname<pos:position pos:line="56" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">conn<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">async<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">hostname<pos:position pos:line="57" pos:column="27"/></name></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <name pos:line="57" pos:column="30">NULL<pos:position pos:line="57" pos:column="34"/></name></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
      <return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">NULL<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">conn<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">async<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">.<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">os_specific<pos:position pos:line="60" pos:column="28"/></name></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <name pos:line="60" pos:column="31">res<pos:position pos:line="60" pos:column="34"/></name></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* initial status - failed */</comment>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">res<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">last_status<pos:position pos:line="63" pos:column="21"/></name></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">ARES_ENOTFOUND<pos:position pos:line="63" pos:column="38"/></name></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">ENABLE_IPV6<pos:position pos:line="64" pos:column="19"/></name></cpp:ifdef> <comment type="block" pos:line="64" pos:column="20">/* CURLRES_IPV6 */</comment>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name pos:line="65" pos:column="8">family<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">==<pos:position pos:line="65" pos:column="17"/></operator> <name pos:line="65" pos:column="18">PF_UNSPEC<pos:position pos:line="65" pos:column="27"/></name></expr>)<pos:position pos:line="65" pos:column="28"/></condition><then pos:line="65" pos:column="28"> <block pos:line="65" pos:column="29">{
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><call><name pos:line="66" pos:column="10">Curl_ipv6works<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">()<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27"> <block pos:line="66" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">res<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">num_pending<pos:position pos:line="67" pos:column="25"/></name></name> <operator pos:line="67" pos:column="26">=<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="28">2<pos:position pos:line="67" pos:column="29"/></literal></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* areschannel is already setup in the Curl_open() function */</comment>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">ares_gethostbyname<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><operator pos:line="70" pos:column="28">(<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="29">ares_channel<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">)<pos:position pos:line="70" pos:column="42"/></operator><name><name pos:line="70" pos:column="42">data<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">state<pos:position pos:line="70" pos:column="53"/></name><operator pos:line="70" pos:column="53">.<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="54">resolver<pos:position pos:line="70" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="64">hostname<pos:position pos:line="70" pos:column="72"/></name></expr></argument>,
                            <argument><expr><name pos:line="71" pos:column="29">PF_INET<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">query_completed_cb<pos:position pos:line="71" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="58">conn<pos:position pos:line="71" pos:column="62"/></name></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ares_gethostbyname<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><operator pos:line="72" pos:column="28">(<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">ares_channel<pos:position pos:line="72" pos:column="41"/></name><operator pos:line="72" pos:column="41">)<pos:position pos:line="72" pos:column="42"/></operator><name><name pos:line="72" pos:column="42">data<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-&gt;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="48">state<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">.<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="54">resolver<pos:position pos:line="72" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="64">hostname<pos:position pos:line="72" pos:column="72"/></name></expr></argument>,
                            <argument><expr><name pos:line="73" pos:column="29">PF_INET6<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">query_completed_cb<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">conn<pos:position pos:line="73" pos:column="63"/></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="74" pos:column="8"/></block></then>
      <else pos:line="75" pos:column="7">else <block pos:line="75" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">res<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">num_pending<pos:position pos:line="76" pos:column="25"/></name></name> <operator pos:line="76" pos:column="26">=<pos:position pos:line="76" pos:column="27"/></operator> <literal type="number" pos:line="76" pos:column="28">1<pos:position pos:line="76" pos:column="29"/></literal></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="78" pos:column="9">/* areschannel is already setup in the Curl_open() function */</comment>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">ares_gethostbyname<pos:position pos:line="79" pos:column="27"/></name><argument_list pos:line="79" pos:column="27">(<argument><expr><operator pos:line="79" pos:column="28">(<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="29">ares_channel<pos:position pos:line="79" pos:column="41"/></name><operator pos:line="79" pos:column="41">)<pos:position pos:line="79" pos:column="42"/></operator><name><name pos:line="79" pos:column="42">data<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">state<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">.<pos:position pos:line="79" pos:column="54"/></operator><name pos:line="79" pos:column="54">resolver<pos:position pos:line="79" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="64">hostname<pos:position pos:line="79" pos:column="72"/></name></expr></argument>,
                            <argument><expr><name pos:line="80" pos:column="29">PF_INET<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="38">query_completed_cb<pos:position pos:line="80" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="58">conn<pos:position pos:line="80" pos:column="62"/></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></else></if>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <else pos:line="83" pos:column="5">else
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="84" pos:column="8">/* CURLRES_IPV6 */</comment>
    <block pos:line="85" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="86" pos:column="7">res<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">-&gt;<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="12">num_pending<pos:position pos:line="86" pos:column="23"/></name></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <literal type="number" pos:line="86" pos:column="26">1<pos:position pos:line="86" pos:column="27"/></literal></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="88" pos:column="7">/* areschannel is already setup in the Curl_open() function */</comment>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">ares_gethostbyname<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><operator pos:line="89" pos:column="26">(<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="27">ares_channel<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">)<pos:position pos:line="89" pos:column="40"/></operator><name><name pos:line="89" pos:column="40">data<pos:position pos:line="89" pos:column="44"/></name><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="46">state<pos:position pos:line="89" pos:column="51"/></name><operator pos:line="89" pos:column="51">.<pos:position pos:line="89" pos:column="52"/></operator><name pos:line="89" pos:column="52">resolver<pos:position pos:line="89" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="62">hostname<pos:position pos:line="89" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="72">family<pos:position pos:line="89" pos:column="78"/></name></expr></argument>,
                         <argument><expr><name pos:line="90" pos:column="26">query_completed_cb<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">conn<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="93" pos:column="5">*<pos:position pos:line="93" pos:column="6"/></operator><name pos:line="93" pos:column="6">waitp<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <literal type="number" pos:line="93" pos:column="14">1<pos:position pos:line="93" pos:column="15"/></literal></expr>;<pos:position pos:line="93" pos:column="16"/></expr_stmt> <comment type="block" pos:line="93" pos:column="17">/* expect asynchronous response */</comment>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>
  <return pos:line="95" pos:column="3">return <expr><name pos:line="95" pos:column="10">NULL<pos:position pos:line="95" pos:column="14"/></name></expr>;<pos:position pos:line="95" pos:column="15"/></return> <comment type="block" pos:line="95" pos:column="16">/* no struct yet */</comment>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

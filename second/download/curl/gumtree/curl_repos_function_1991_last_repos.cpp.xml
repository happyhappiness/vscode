<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1991_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pathmatch<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">cookie_path<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">request_uri<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">cookie_path_len<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">uri_path_len<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">uri_path<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">pos<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">ret<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><name pos:line="7" pos:column="14">FALSE<pos:position pos:line="7" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* cookie_path must not have last '/' separator. ex: /sample */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">cookie_path_len<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">strlen<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">cookie_path<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><literal type="number" pos:line="11" pos:column="6">1<pos:position pos:line="11" pos:column="7"/></literal> <operator pos:line="11" pos:column="8">==<pos:position pos:line="11" pos:column="10"/></operator> <name pos:line="11" pos:column="11">cookie_path_len<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
    <comment type="block" pos:line="12" pos:column="5">/* cookie_path must be '/' */</comment>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">TRUE<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">uri_path<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">strdup<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">request_uri<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">uri_path<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">FALSE<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="19" pos:column="3">pos<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">strchr<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">uri_path<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="26">'?'<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">pos<pos:position pos:line="20" pos:column="9"/></name></expr>)<pos:position pos:line="20" pos:column="10"/></condition><then pos:line="20" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">pos<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <literal type="number" pos:line="21" pos:column="12">0x0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* #-fragments are already cut off! */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><literal type="number" pos:line="24" pos:column="6">0<pos:position pos:line="24" pos:column="7"/></literal> <operator pos:line="24" pos:column="8">==<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">strlen<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">uri_path<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call> <operator pos:line="24" pos:column="28">||<pos:position pos:line="24" pos:column="30"/></operator> <name><name pos:line="24" pos:column="31">uri_path<pos:position pos:line="24" pos:column="39"/></name><index pos:line="24" pos:column="39">[<expr><literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal></expr>]<pos:position pos:line="24" pos:column="42"/></index></name> <operator pos:line="24" pos:column="43">!=<pos:position pos:line="24" pos:column="45"/></operator> <literal type="char" pos:line="24" pos:column="46">'/'<pos:position pos:line="24" pos:column="49"/></literal></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">uri_path<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">uri_path<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">strdup<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><literal type="string" pos:line="26" pos:column="23">"/"<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">uri_path<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">FALSE<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></return></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* here, RFC6265 5.1.4 says
     4. Output the characters of the uri-path from the first character up
        to, but not including, the right-most %x2F ("/").
     but URL path /hoge?fuga=xxx means /hoge/index.cgi?fuga=xxx in some site
     without redirect.
     Ignore this algorithm because /hoge is uri path for this case
     (uri path is not /).
   */</comment>

  <expr_stmt><expr><name pos:line="40" pos:column="3">uri_path_len<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">strlen<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">uri_path<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name pos:line="42" pos:column="6">uri_path_len<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="21">cookie_path_len<pos:position pos:line="42" pos:column="36"/></name></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">ret<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">=<pos:position pos:line="43" pos:column="10"/></operator> <name pos:line="43" pos:column="11">FALSE<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>
    <goto pos:line="44" pos:column="5">goto <name pos:line="44" pos:column="10">pathmatched<pos:position pos:line="44" pos:column="21"/></name>;<pos:position pos:line="44" pos:column="22"/></goto>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* not using checkprefix() because matching should be case-sensitive */</comment>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><call><name pos:line="48" pos:column="6">strncmp<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">cookie_path<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">uri_path<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">cookie_path_len<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54"> <block pos:line="48" pos:column="55">{
    <expr_stmt><expr><name pos:line="49" pos:column="5">ret<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <name pos:line="49" pos:column="11">FALSE<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
    <goto pos:line="50" pos:column="5">goto <name pos:line="50" pos:column="10">pathmatched<pos:position pos:line="50" pos:column="21"/></name>;<pos:position pos:line="50" pos:column="22"/></goto>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="53" pos:column="3">/* The cookie-path and the uri-path are identical. */</comment>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">cookie_path_len<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">==<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">uri_path_len<pos:position pos:line="54" pos:column="37"/></name></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38"> <block pos:line="54" pos:column="39">{
    <expr_stmt><expr><name pos:line="55" pos:column="5">ret<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <name pos:line="55" pos:column="11">TRUE<pos:position pos:line="55" pos:column="15"/></name></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>
    <goto pos:line="56" pos:column="5">goto <name pos:line="56" pos:column="10">pathmatched<pos:position pos:line="56" pos:column="21"/></name>;<pos:position pos:line="56" pos:column="22"/></goto>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* here, cookie_path_len &lt; url_path_len */</comment>
  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name><name pos:line="60" pos:column="6">uri_path<pos:position pos:line="60" pos:column="14"/></name><index pos:line="60" pos:column="14">[<expr><name pos:line="60" pos:column="15">cookie_path_len<pos:position pos:line="60" pos:column="30"/></name></expr>]<pos:position pos:line="60" pos:column="31"/></index></name> <operator pos:line="60" pos:column="32">==<pos:position pos:line="60" pos:column="34"/></operator> <literal type="char" pos:line="60" pos:column="35">'/'<pos:position pos:line="60" pos:column="38"/></literal></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
    <expr_stmt><expr><name pos:line="61" pos:column="5">ret<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <name pos:line="61" pos:column="11">TRUE<pos:position pos:line="61" pos:column="15"/></name></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>
    <goto pos:line="62" pos:column="5">goto <name pos:line="62" pos:column="10">pathmatched<pos:position pos:line="62" pos:column="21"/></name>;<pos:position pos:line="62" pos:column="22"/></goto>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="65" pos:column="3">ret<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">=<pos:position pos:line="65" pos:column="8"/></operator> <name pos:line="65" pos:column="9">FALSE<pos:position pos:line="65" pos:column="14"/></name></expr>;<pos:position pos:line="65" pos:column="15"/></expr_stmt>

<label><name pos:line="67" pos:column="1">pathmatched<pos:position pos:line="67" pos:column="12"/></name>:<pos:position pos:line="67" pos:column="13"/></label>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">free<pos:position pos:line="68" pos:column="7"/></name><argument_list pos:line="68" pos:column="7">(<argument><expr><name pos:line="68" pos:column="8">uri_path<pos:position pos:line="68" pos:column="16"/></name></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">ret<pos:position pos:line="69" pos:column="13"/></name></expr>;<pos:position pos:line="69" pos:column="14"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_12_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">headerfile<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">pCertFile<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="string" pos:line="7" pos:column="27">"testcert.pem"<pos:position pos:line="7" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">pCACertFile<pos:position pos:line="8" pos:column="26"/></name><init pos:line="8" pos:column="26">=<expr><literal type="string" pos:line="8" pos:column="27">"cacert.pem"<pos:position pos:line="8" pos:column="39"/></literal>

  <specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">pKeyName<pos:position pos:line="10" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">pKeyType<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">pEngine<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_ENGINE<pos:position pos:line="15" pos:column="15"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="16" pos:column="3">pKeyName<pos:position pos:line="16" pos:column="11"/></name>  <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="string" pos:line="16" pos:column="15">"rsa_test"<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">pKeyType<pos:position pos:line="17" pos:column="11"/></name>  <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="string" pos:line="17" pos:column="15">"ENG"<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">pEngine<pos:position pos:line="18" pos:column="10"/></name>   <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="string" pos:line="18" pos:column="15">"chil"<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>            <comment type="block" pos:line="18" pos:column="34">/* for nChiper HSM... */</comment>
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="20" pos:column="3">pKeyName<pos:position pos:line="20" pos:column="11"/></name>  <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"testkey.pem"<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">pKeyType<pos:position pos:line="21" pos:column="11"/></name>  <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="string" pos:line="21" pos:column="15">"PEM"<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">pEngine<pos:position pos:line="22" pos:column="10"/></name>   <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><specifier pos:line="25" pos:column="3">const<pos:position pos:line="25" pos:column="8"/></specifier> <name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">pPassphrase<pos:position pos:line="25" pos:column="26"/></name> <init pos:line="25" pos:column="27">= <expr><name pos:line="25" pos:column="29">NULL<pos:position pos:line="25" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">headerfile<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">fopen<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><literal type="string" pos:line="27" pos:column="22">"dumpit"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="32">"w"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">curl_global_init<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="31" pos:column="3">curl<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">curl_easy_init<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">()<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name pos:line="32" pos:column="6">curl<pos:position pos:line="32" pos:column="10"/></name></expr>)<pos:position pos:line="32" pos:column="11"/></condition><then pos:line="32" pos:column="11"> <block pos:line="32" pos:column="12">{
    <comment type="block" pos:line="33" pos:column="5">/* what call to write: */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">curl_easy_setopt<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">curl<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">CURLOPT_URL<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="41">"HTTPS://your.favourite.ssl.site"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_easy_setopt<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">curl<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">CURLOPT_WRITEHEADER<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">headerfile<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>

    <while pos:line="37" pos:column="5">while<condition pos:line="37" pos:column="10">(<expr><literal type="number" pos:line="37" pos:column="11">1<pos:position pos:line="37" pos:column="12"/></literal></expr>)<pos:position pos:line="37" pos:column="13"/></condition>                    <comment type="block" pos:line="37" pos:column="33">/* do some ugly short cut... */</comment>
    <block pos:line="38" pos:column="5">{
       <if pos:line="39" pos:column="8">if <condition pos:line="39" pos:column="11">(<expr><name pos:line="39" pos:column="12">pEngine<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20">             <comment type="block" pos:line="39" pos:column="33">/* use crypto engine */</comment>
       <block pos:line="40" pos:column="8">{
          <if pos:line="41" pos:column="11">if <condition pos:line="41" pos:column="14">(<expr><call><name pos:line="41" pos:column="15">curl_easy_setopt<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">curl<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">CURLOPT_SSLENGINE<pos:position pos:line="41" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="41" pos:column="56">pEngine<pos:position pos:line="41" pos:column="63"/></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call> <operator pos:line="41" pos:column="65">!=<pos:position pos:line="41" pos:column="67"/></operator> <name pos:line="41" pos:column="68">CURLE_OK<pos:position pos:line="41" pos:column="76"/></name></expr>)<pos:position pos:line="41" pos:column="77"/></condition><then pos:line="41" pos:column="77">
          <block pos:line="42" pos:column="11">{                     <comment type="block" pos:line="42" pos:column="33">/* load the crypto engine */</comment>
             <expr_stmt><expr><call><name pos:line="43" pos:column="14">fprintf<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">stderr<pos:position pos:line="43" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="29">"can't set crypto engine\n"<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
             <break pos:line="44" pos:column="14">break;<pos:position pos:line="44" pos:column="20"/></break>
          }<pos:position pos:line="45" pos:column="12"/></block></then></if>
          <if pos:line="46" pos:column="11">if <condition pos:line="46" pos:column="14">(<expr><call><name pos:line="46" pos:column="15">curl_easy_setopt<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">curl<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">CURLOPT_SSLENGINE_DEFAULT<pos:position pos:line="46" pos:column="63"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="46" pos:column="64">1<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call> <operator pos:line="46" pos:column="67">!=<pos:position pos:line="46" pos:column="69"/></operator> <name pos:line="46" pos:column="70">CURLE_OK<pos:position pos:line="46" pos:column="78"/></name></expr>)<pos:position pos:line="46" pos:column="79"/></condition><then pos:line="46" pos:column="79">
          <block pos:line="47" pos:column="11">{                     <comment type="block" pos:line="47" pos:column="33">/* set the crypto engine as default */</comment>
                                <comment type="block" pos:line="48" pos:column="33">/* only needed for the first time you load
                                   a engine in a curl object... */</comment>
             <expr_stmt><expr><call><name pos:line="50" pos:column="14">fprintf<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">stderr<pos:position pos:line="50" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="29">"can't set crypto engine as default\n"<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
             <break pos:line="51" pos:column="14">break;<pos:position pos:line="51" pos:column="20"/></break>
          }<pos:position pos:line="52" pos:column="12"/></block></then></if>
       }<pos:position pos:line="53" pos:column="9"/></block></then></if>
                                <comment type="block" pos:line="54" pos:column="33">/* cert is stored PEM coded in file... */</comment>
                                <comment type="block" pos:line="55" pos:column="33">/* since PEM is default, we needn't set it for PEM */</comment>
       <expr_stmt><expr><call><name pos:line="56" pos:column="8">curl_easy_setopt<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">curl<pos:position pos:line="56" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="30">CURLOPT_SSLCERTTYPE<pos:position pos:line="56" pos:column="49"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="50">"PEM"<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
                                <comment type="block" pos:line="57" pos:column="33">/* set the cert for client authentication */</comment>
       <expr_stmt><expr><call><name pos:line="58" pos:column="8">curl_easy_setopt<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">curl<pos:position pos:line="58" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="58" pos:column="30">CURLOPT_SSLCERT<pos:position pos:line="58" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="58" pos:column="46">pCertFile<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
                                <comment type="block" pos:line="59" pos:column="33">/* sorry, for engine we must set the passphrase
                                   (if the key has one...) */</comment>
       <if pos:line="61" pos:column="8">if <condition pos:line="61" pos:column="11">(<expr><name pos:line="61" pos:column="12">pPassphrase<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="11">curl_easy_setopt<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">curl<pos:position pos:line="62" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="33">CURLOPT_SSLKEYPASSWD<pos:position pos:line="62" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="54">pPassphrase<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt></block></then></if>
                                <comment type="block" pos:line="63" pos:column="33">/* if we use a key stored in a crypto engine,
                                   we must set the key type to "ENG" */</comment>
       <expr_stmt><expr><call><name pos:line="65" pos:column="8">curl_easy_setopt<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">curl<pos:position pos:line="65" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="65" pos:column="30">CURLOPT_SSLKEYTYPE<pos:position pos:line="65" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="65" pos:column="49">pKeyType<pos:position pos:line="65" pos:column="57"/></name></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="59"/></expr_stmt>
                                <comment type="block" pos:line="66" pos:column="33">/* set the private key (file or ID in engine) */</comment>
       <expr_stmt><expr><call><name pos:line="67" pos:column="8">curl_easy_setopt<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">curl<pos:position pos:line="67" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="30">CURLOPT_SSLKEY<pos:position pos:line="67" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="45">pKeyName<pos:position pos:line="67" pos:column="53"/></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="55"/></expr_stmt>
                                <comment type="block" pos:line="68" pos:column="33">/* set the file with the certs vaildating the server */</comment>
       <expr_stmt><expr><call><name pos:line="69" pos:column="8">curl_easy_setopt<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">curl<pos:position pos:line="69" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="69" pos:column="30">CURLOPT_CAINFO<pos:position pos:line="69" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="69" pos:column="45">pCACertFile<pos:position pos:line="69" pos:column="56"/></name></expr></argument>)<pos:position pos:line="69" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="58"/></expr_stmt>
                                <comment type="block" pos:line="70" pos:column="33">/* disconnect if we can't validate server's cert */</comment>
       <expr_stmt><expr><call><name pos:line="71" pos:column="8">curl_easy_setopt<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">curl<pos:position pos:line="71" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="71" pos:column="30">CURLOPT_SSL_VERIFYPEER<pos:position pos:line="71" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="71" pos:column="53">1<pos:position pos:line="71" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>
       
       <expr_stmt><expr><name pos:line="73" pos:column="8">res<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">curl_easy_perform<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">curl<pos:position pos:line="73" pos:column="36"/></name></expr></argument>)<pos:position pos:line="73" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="38"/></expr_stmt>
       <break pos:line="74" pos:column="8">break;<pos:position pos:line="74" pos:column="14"/></break>                   <comment type="block" pos:line="74" pos:column="33">/* we are done... */</comment>
    }<pos:position pos:line="75" pos:column="6"/></block></while>
    <comment type="block" pos:line="76" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">curl_easy_cleanup<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">curl<pos:position pos:line="77" pos:column="27"/></name></expr></argument>)<pos:position pos:line="77" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">curl_global_cleanup<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">()<pos:position pos:line="80" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>

  <return pos:line="82" pos:column="3">return <expr><literal type="number" pos:line="82" pos:column="10">0<pos:position pos:line="82" pos:column="11"/></literal></expr>;<pos:position pos:line="82" pos:column="12"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1929_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_done<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">CURLcode<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">status<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">bool<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">premature<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FTP<pos:position pos:line="5" pos:column="13"/></name></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ftp<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">req<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">protop<pos:position pos:line="5" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ftp_conn<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ftpc<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">&amp;<pos:position pos:line="6" pos:column="32"/></operator><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">proto<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">ftpc<pos:position pos:line="6" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">pingpong<pos:position pos:line="7" pos:column="18"/></name></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">pp<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator><name><name pos:line="7" pos:column="26">ftpc<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">pp<pos:position pos:line="7" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">nread<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ftpcode<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">CURLE_OK<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">path<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">path_to_use<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><name><name pos:line="12" pos:column="29">data<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">state<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">.<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">path<pos:position pos:line="12" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">ftp<pos:position pos:line="14" pos:column="10"/></name></expr>)<pos:position pos:line="14" pos:column="11"/></condition><then pos:line="14" pos:column="11">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">CURLE_OK<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

  <switch pos:line="17" pos:column="3">switch<condition pos:line="17" pos:column="9">(<expr><name pos:line="17" pos:column="10">status<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition> <block pos:line="17" pos:column="18">{
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">CURLE_BAD_DOWNLOAD_RESUME<pos:position pos:line="18" pos:column="33"/></name></expr>:<pos:position pos:line="18" pos:column="34"/></case>
  <case pos:line="19" pos:column="3">case <expr><name pos:line="19" pos:column="8">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="19" pos:column="34"/></name></expr>:<pos:position pos:line="19" pos:column="35"/></case>
  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">CURLE_FTP_PORT_FAILED<pos:position pos:line="20" pos:column="29"/></name></expr>:<pos:position pos:line="20" pos:column="30"/></case>
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">CURLE_FTP_ACCEPT_FAILED<pos:position pos:line="21" pos:column="31"/></name></expr>:<pos:position pos:line="21" pos:column="32"/></case>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">CURLE_FTP_ACCEPT_TIMEOUT<pos:position pos:line="22" pos:column="32"/></name></expr>:<pos:position pos:line="22" pos:column="33"/></case>
  <case pos:line="23" pos:column="3">case <expr><name pos:line="23" pos:column="8">CURLE_FTP_COULDNT_SET_TYPE<pos:position pos:line="23" pos:column="34"/></name></expr>:<pos:position pos:line="23" pos:column="35"/></case>
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="24" pos:column="35"/></name></expr>:<pos:position pos:line="24" pos:column="36"/></case>
  <case pos:line="25" pos:column="3">case <expr><name pos:line="25" pos:column="8">CURLE_PARTIAL_FILE<pos:position pos:line="25" pos:column="26"/></name></expr>:<pos:position pos:line="25" pos:column="27"/></case>
  <case pos:line="26" pos:column="3">case <expr><name pos:line="26" pos:column="8">CURLE_UPLOAD_FAILED<pos:position pos:line="26" pos:column="27"/></name></expr>:<pos:position pos:line="26" pos:column="28"/></case>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="27" pos:column="34"/></name></expr>:<pos:position pos:line="27" pos:column="35"/></case>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CURLE_FILESIZE_EXCEEDED<pos:position pos:line="28" pos:column="31"/></name></expr>:<pos:position pos:line="28" pos:column="32"/></case>
  <case pos:line="29" pos:column="3">case <expr><name pos:line="29" pos:column="8">CURLE_REMOTE_FILE_NOT_FOUND<pos:position pos:line="29" pos:column="35"/></name></expr>:<pos:position pos:line="29" pos:column="36"/></case>
  <case pos:line="30" pos:column="3">case <expr><name pos:line="30" pos:column="8">CURLE_WRITE_ERROR<pos:position pos:line="30" pos:column="25"/></name></expr>:<pos:position pos:line="30" pos:column="26"/></case>
    <comment type="block" pos:line="31" pos:column="5">/* the connection stays alive fine even though this happened */</comment>
    <comment type="block" pos:line="32" pos:column="5">/* fall-through */</comment>
  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">CURLE_OK<pos:position pos:line="33" pos:column="16"/></name></expr>:<pos:position pos:line="33" pos:column="17"/></case> <comment type="block" pos:line="33" pos:column="18">/* doesn't affect the control connection's status */</comment>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">premature<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
      <block type="pseudo"><break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* until we cope better with prematurely ended requests, let them
     * fallback as if in complete failure */</comment>
    <comment type="block" pos:line="39" pos:column="5">/* FALLTHROUGH */</comment>
  <default pos:line="40" pos:column="3">default:<pos:position pos:line="40" pos:column="11"/></default>       <comment type="block" pos:line="40" pos:column="18">/* by default, an error means the control connection is
                    wedged and should not be used anymore */</comment>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">ftpc<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">ctl_valid<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">FALSE<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">ftpc<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">cwdfail<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">TRUE<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt> <comment type="block" pos:line="43" pos:column="27">/* set this TRUE to prevent us to remember the
                             current path, as this connection is going */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">connclose<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">conn<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"FTP ended with bad error code"<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">result<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">status<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>      <comment type="block" pos:line="46" pos:column="27">/* use the already set error code */</comment>
    <break pos:line="47" pos:column="5">break;<pos:position pos:line="47" pos:column="11"/></break>
  }<pos:position pos:line="48" pos:column="4"/></block></switch>

  <comment type="block" pos:line="50" pos:column="3">/* now store a copy of the directory we are in */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">free<pos:position pos:line="51" pos:column="7"/></name><argument_list pos:line="51" pos:column="7">(<argument><expr><name><name pos:line="51" pos:column="8">ftpc<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">prevpath<pos:position pos:line="51" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">data<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">set<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">.<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">wildcardmatch<pos:position pos:line="53" pos:column="29"/></name></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30"> <block pos:line="53" pos:column="31">{
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name><name pos:line="54" pos:column="8">data<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">set<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">.<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">chunk_end<pos:position pos:line="54" pos:column="27"/></name></name> <operator pos:line="54" pos:column="28">&amp;&amp;<pos:position pos:line="54" pos:column="38"/></operator> <name><name pos:line="54" pos:column="31">ftpc<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">file<pos:position pos:line="54" pos:column="41"/></name></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42"> <block pos:line="54" pos:column="43">{
      <expr_stmt><expr><call><name><name pos:line="55" pos:column="7">data<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">set<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">.<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">chunk_end<pos:position pos:line="55" pos:column="26"/></name></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name><name pos:line="55" pos:column="27">data<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">wildcard<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">.<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">customptr<pos:position pos:line="55" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">ftpc<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">known_filesize<pos:position pos:line="57" pos:column="25"/></name></name> <operator pos:line="57" pos:column="26">=<pos:position pos:line="57" pos:column="27"/></operator> <operator pos:line="57" pos:column="28">-<pos:position pos:line="57" pos:column="29"/></operator><literal type="number" pos:line="57" pos:column="29">1<pos:position pos:line="57" pos:column="30"/></literal></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><operator pos:line="60" pos:column="6">!<pos:position pos:line="60" pos:column="7"/></operator><name pos:line="60" pos:column="7">result<pos:position pos:line="60" pos:column="13"/></name></expr>)<pos:position pos:line="60" pos:column="14"/></condition><then pos:line="60" pos:column="14">
    <comment type="block" pos:line="61" pos:column="5">/* get the "raw" path */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="5">result<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">Curl_urldecode<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">data<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">path_to_use<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="48">0<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="51">&amp;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="52">path<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">NULL<pos:position pos:line="62" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="64">FALSE<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></expr_stmt></block></then></if>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">(<expr><name pos:line="63" pos:column="6">result<pos:position pos:line="63" pos:column="12"/></name></expr>)<pos:position pos:line="63" pos:column="13"/></condition><then pos:line="63" pos:column="13"> <block pos:line="63" pos:column="14">{
    <comment type="block" pos:line="64" pos:column="5">/* We can limp along anyway (and should try to since we may already be in
     * the error path) */</comment>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">ftpc<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">-&gt;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="11">ctl_valid<pos:position pos:line="66" pos:column="20"/></name></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">FALSE<pos:position pos:line="66" pos:column="28"/></name></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt> <comment type="block" pos:line="66" pos:column="30">/* mark control connection as bad */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">connclose<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><name pos:line="67" pos:column="15">conn<pos:position pos:line="67" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="21">"FTP: out of memory!"<pos:position pos:line="67" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="44"/></expr_stmt> <comment type="block" pos:line="67" pos:column="45">/* mark for connection closure */</comment>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">ftpc<pos:position pos:line="68" pos:column="9"/></name><operator pos:line="68" pos:column="9">-&gt;<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="11">prevpath<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="22">NULL<pos:position pos:line="68" pos:column="26"/></name></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt> <comment type="block" pos:line="68" pos:column="28">/* no path remembering */</comment>
  }<pos:position pos:line="69" pos:column="4"/></block></then>
  <else pos:line="70" pos:column="3">else <block pos:line="70" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">size_t<pos:position pos:line="71" pos:column="11"/></name></type> <name pos:line="71" pos:column="12">flen<pos:position pos:line="71" pos:column="16"/></name> <init pos:line="71" pos:column="17">= <expr><ternary><condition><expr><name><name pos:line="71" pos:column="19">ftpc<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">file<pos:position pos:line="71" pos:column="29"/></name></name></expr>?<pos:position pos:line="71" pos:column="30"/></condition><then><expr><call><name pos:line="71" pos:column="30">strlen<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name><name pos:line="71" pos:column="37">ftpc<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">-&gt;<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="43">file<pos:position pos:line="71" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr></then><else pos:line="71" pos:column="48">:<expr><literal type="number" pos:line="71" pos:column="49">0<pos:position pos:line="71" pos:column="50"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="71" pos:column="51"/></decl_stmt> <comment type="block" pos:line="71" pos:column="52">/* file is "raw" already */</comment>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">size_t<pos:position pos:line="72" pos:column="11"/></name></type> <name pos:line="72" pos:column="12">dlen<pos:position pos:line="72" pos:column="16"/></name> <init pos:line="72" pos:column="17">= <expr><call><name pos:line="72" pos:column="19">strlen<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">path<pos:position pos:line="72" pos:column="30"/></name></expr></argument>)<pos:position pos:line="72" pos:column="31"/></argument_list></call><operator pos:line="72" pos:column="31">-<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="32">flen<pos:position pos:line="72" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="37"/></decl_stmt>
    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><operator pos:line="73" pos:column="8">!<pos:position pos:line="73" pos:column="9"/></operator><name><name pos:line="73" pos:column="9">ftpc<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">cwdfail<pos:position pos:line="73" pos:column="22"/></name></name></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23"> <block pos:line="73" pos:column="24">{
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">ftpc<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">prevmethod<pos:position pos:line="74" pos:column="23"/></name></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <name><name pos:line="74" pos:column="26">data<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">set<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">.<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="36">ftp_filemethod<pos:position pos:line="74" pos:column="50"/></name></name></expr>;<pos:position pos:line="74" pos:column="51"/></expr_stmt>
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">(<expr><name pos:line="75" pos:column="10">dlen<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">&amp;&amp;<pos:position pos:line="75" pos:column="25"/></operator> <operator pos:line="75" pos:column="18">(<pos:position pos:line="75" pos:column="19"/></operator><name><name pos:line="75" pos:column="19">data<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">-&gt;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="25">set<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">.<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">ftp_filemethod<pos:position pos:line="75" pos:column="43"/></name></name> <operator pos:line="75" pos:column="44">!=<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="47">FTPFILE_NOCWD<pos:position pos:line="75" pos:column="60"/></name><operator pos:line="75" pos:column="60">)<pos:position pos:line="75" pos:column="61"/></operator></expr>)<pos:position pos:line="75" pos:column="62"/></condition><then pos:line="75" pos:column="62"> <block pos:line="75" pos:column="63">{
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">ftpc<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">prevpath<pos:position pos:line="76" pos:column="23"/></name></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">path<pos:position pos:line="76" pos:column="30"/></name></expr>;<pos:position pos:line="76" pos:column="31"/></expr_stmt>
        <if pos:line="77" pos:column="9">if<condition pos:line="77" pos:column="11">(<expr><name pos:line="77" pos:column="12">flen<pos:position pos:line="77" pos:column="16"/></name></expr>)<pos:position pos:line="77" pos:column="17"/></condition><then pos:line="77" pos:column="17">
          <comment type="block" pos:line="78" pos:column="11">/* if 'path' is not the whole string */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="11">ftpc<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">-&gt;<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="17">prevpath<pos:position pos:line="79" pos:column="25"/></name><index pos:line="79" pos:column="25">[<expr><name pos:line="79" pos:column="26">dlen<pos:position pos:line="79" pos:column="30"/></name></expr>]<pos:position pos:line="79" pos:column="31"/></index></name> <operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator> <literal type="number" pos:line="79" pos:column="34">0<pos:position pos:line="79" pos:column="35"/></literal></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt></block></then></if> <comment type="block" pos:line="79" pos:column="37">/* terminate */</comment>
      }<pos:position pos:line="80" pos:column="8"/></block></then>
      <else pos:line="81" pos:column="7">else <block pos:line="81" pos:column="12">{
        <comment type="block" pos:line="82" pos:column="9">/* we never changed dir */</comment>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">ftpc<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">prevpath<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <call><name pos:line="83" pos:column="26">strdup<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><literal type="string" pos:line="83" pos:column="33">""<pos:position pos:line="83" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">free<pos:position pos:line="84" pos:column="13"/></name><argument_list pos:line="84" pos:column="13">(<argument><expr><name pos:line="84" pos:column="14">path<pos:position pos:line="84" pos:column="18"/></name></expr></argument>)<pos:position pos:line="84" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="85" pos:column="8"/></block></else></if>
      <if pos:line="86" pos:column="7">if<condition pos:line="86" pos:column="9">(<expr><name><name pos:line="86" pos:column="10">ftpc<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">prevpath<pos:position pos:line="86" pos:column="24"/></name></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="9">infof<pos:position pos:line="87" pos:column="14"/></name><argument_list pos:line="87" pos:column="14">(<argument><expr><name pos:line="87" pos:column="15">data<pos:position pos:line="87" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="21">"Remembering we are in dir \"%s\"\n"<pos:position pos:line="87" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="59">ftpc<pos:position pos:line="87" pos:column="63"/></name><operator pos:line="87" pos:column="63">-&gt;<pos:position pos:line="87" pos:column="68"/></operator><name pos:line="87" pos:column="65">prevpath<pos:position pos:line="87" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="75"/></expr_stmt></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then>
    <else pos:line="89" pos:column="5">else <block pos:line="89" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">ftpc<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">prevpath<pos:position pos:line="90" pos:column="21"/></name></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <name pos:line="90" pos:column="24">NULL<pos:position pos:line="90" pos:column="28"/></name></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt> <comment type="block" pos:line="90" pos:column="30">/* no path */</comment>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">free<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name pos:line="91" pos:column="12">path<pos:position pos:line="91" pos:column="16"/></name></expr></argument>)<pos:position pos:line="91" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>
  }<pos:position pos:line="93" pos:column="4"/></block></else></if>
  <comment type="block" pos:line="94" pos:column="3">/* free the dir tree and file parts */</comment>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">freedirs<pos:position pos:line="95" pos:column="11"/></name><argument_list pos:line="95" pos:column="11">(<argument><expr><name pos:line="95" pos:column="12">ftpc<pos:position pos:line="95" pos:column="16"/></name></expr></argument>)<pos:position pos:line="95" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="97" pos:column="3">/* shut down the socket to inform the server we're done */</comment>

<cpp:ifdef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifdef<pos:position pos:line="99" pos:column="7"/></cpp:directive> <name pos:line="99" pos:column="8">_WIN32_WCE<pos:position pos:line="99" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">shutdown<pos:position pos:line="100" pos:column="11"/></name><argument_list pos:line="100" pos:column="11">(<argument><expr><name><name pos:line="100" pos:column="12">conn<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">sock<pos:position pos:line="100" pos:column="22"/></name><index pos:line="100" pos:column="22">[<expr><name pos:line="100" pos:column="23">SECONDARYSOCKET<pos:position pos:line="100" pos:column="38"/></name></expr>]<pos:position pos:line="100" pos:column="39"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="41">2<pos:position pos:line="100" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>  <comment type="block" pos:line="100" pos:column="46">/* SD_BOTH */</comment>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><name><name pos:line="103" pos:column="6">conn<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">sock<pos:position pos:line="103" pos:column="16"/></name><index pos:line="103" pos:column="16">[<expr><name pos:line="103" pos:column="17">SECONDARYSOCKET<pos:position pos:line="103" pos:column="32"/></name></expr>]<pos:position pos:line="103" pos:column="33"/></index></name> <operator pos:line="103" pos:column="34">!=<pos:position pos:line="103" pos:column="36"/></operator> <name pos:line="103" pos:column="37">CURL_SOCKET_BAD<pos:position pos:line="103" pos:column="52"/></name></expr>)<pos:position pos:line="103" pos:column="53"/></condition><then pos:line="103" pos:column="53"> <block pos:line="103" pos:column="54">{
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><operator pos:line="104" pos:column="8">!<pos:position pos:line="104" pos:column="9"/></operator><name pos:line="104" pos:column="9">result<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">&amp;&amp;<pos:position pos:line="104" pos:column="26"/></operator> <name><name pos:line="104" pos:column="19">ftpc<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">-&gt;<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="25">dont_check<pos:position pos:line="104" pos:column="35"/></name></name> <operator pos:line="104" pos:column="36">&amp;&amp;<pos:position pos:line="104" pos:column="46"/></operator> <name><name pos:line="104" pos:column="39">data<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">-&gt;<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="45">req<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">.<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="49">maxdownload<pos:position pos:line="104" pos:column="60"/></name></name> <operator pos:line="104" pos:column="61">&gt;<pos:position pos:line="104" pos:column="65"/></operator> <literal type="number" pos:line="104" pos:column="63">0<pos:position pos:line="104" pos:column="64"/></literal></expr>)<pos:position pos:line="104" pos:column="65"/></condition><then pos:line="104" pos:column="65"> <block pos:line="104" pos:column="66">{
      <comment type="block" pos:line="105" pos:column="7">/* partial download completed */</comment>
      <expr_stmt><expr><name pos:line="106" pos:column="7">result<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">=<pos:position pos:line="106" pos:column="15"/></operator> <call><name pos:line="106" pos:column="16">Curl_pp_sendf<pos:position pos:line="106" pos:column="29"/></name><argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">pp<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="34">"%s"<pos:position pos:line="106" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="40">"ABOR"<pos:position pos:line="106" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
      <if pos:line="107" pos:column="7">if<condition pos:line="107" pos:column="9">(<expr><name pos:line="107" pos:column="10">result<pos:position pos:line="107" pos:column="16"/></name></expr>)<pos:position pos:line="107" pos:column="17"/></condition><then pos:line="107" pos:column="17"> <block pos:line="107" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">failf<pos:position pos:line="108" pos:column="14"/></name><argument_list pos:line="108" pos:column="14">(<argument><expr><name pos:line="108" pos:column="15">data<pos:position pos:line="108" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="21">"Failure sending ABOR command: %s"<pos:position pos:line="108" pos:column="55"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="109" pos:column="15">curl_easy_strerror<pos:position pos:line="109" pos:column="33"/></name><argument_list pos:line="109" pos:column="33">(<argument><expr><name pos:line="109" pos:column="34">result<pos:position pos:line="109" pos:column="40"/></name></expr></argument>)<pos:position pos:line="109" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="110" pos:column="9">ftpc<pos:position pos:line="110" pos:column="13"/></name><operator pos:line="110" pos:column="13">-&gt;<pos:position pos:line="110" pos:column="18"/></operator><name pos:line="110" pos:column="15">ctl_valid<pos:position pos:line="110" pos:column="24"/></name></name> <operator pos:line="110" pos:column="25">=<pos:position pos:line="110" pos:column="26"/></operator> <name pos:line="110" pos:column="27">FALSE<pos:position pos:line="110" pos:column="32"/></name></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt> <comment type="block" pos:line="110" pos:column="34">/* mark control connection as bad */</comment>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">connclose<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><name pos:line="111" pos:column="19">conn<pos:position pos:line="111" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="25">"ABOR command failed"<pos:position pos:line="111" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt> <comment type="block" pos:line="111" pos:column="49">/* connection closure */</comment>
      }<pos:position pos:line="112" pos:column="8"/></block></then></if>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><name><name pos:line="115" pos:column="8">conn<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">-&gt;<pos:position pos:line="115" pos:column="17"/></operator><name pos:line="115" pos:column="14">ssl<pos:position pos:line="115" pos:column="17"/></name><index pos:line="115" pos:column="17">[<expr><name pos:line="115" pos:column="18">SECONDARYSOCKET<pos:position pos:line="115" pos:column="33"/></name></expr>]<pos:position pos:line="115" pos:column="34"/></index></name><operator pos:line="115" pos:column="34">.<pos:position pos:line="115" pos:column="35"/></operator><name pos:line="115" pos:column="35">use<pos:position pos:line="115" pos:column="38"/></name></expr>)<pos:position pos:line="115" pos:column="39"/></condition><then pos:line="115" pos:column="39"> <block pos:line="115" pos:column="40">{
      <comment type="block" pos:line="116" pos:column="7">/* The secondary socket is using SSL so we must close down that part
         first before we close the socket for real */</comment>
      <expr_stmt><expr><call><name pos:line="118" pos:column="7">Curl_ssl_close<pos:position pos:line="118" pos:column="21"/></name><argument_list pos:line="118" pos:column="21">(<argument><expr><name pos:line="118" pos:column="22">conn<pos:position pos:line="118" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="28">SECONDARYSOCKET<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="45"/></expr_stmt>

      <comment type="block" pos:line="120" pos:column="7">/* Note that we keep "use" set to TRUE since that (next) connection is
         still requested to use SSL */</comment>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">close_secondarysocket<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name pos:line="123" pos:column="27">conn<pos:position pos:line="123" pos:column="31"/></name></expr></argument>)<pos:position pos:line="123" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="124" pos:column="4"/></block></then></if>

  <if pos:line="126" pos:column="3">if<condition pos:line="126" pos:column="5">(<expr><operator pos:line="126" pos:column="6">!<pos:position pos:line="126" pos:column="7"/></operator><name pos:line="126" pos:column="7">result<pos:position pos:line="126" pos:column="13"/></name> <operator pos:line="126" pos:column="14">&amp;&amp;<pos:position pos:line="126" pos:column="24"/></operator> <operator pos:line="126" pos:column="17">(<pos:position pos:line="126" pos:column="18"/></operator><name><name pos:line="126" pos:column="18">ftp<pos:position pos:line="126" pos:column="21"/></name><operator pos:line="126" pos:column="21">-&gt;<pos:position pos:line="126" pos:column="26"/></operator><name pos:line="126" pos:column="23">transfer<pos:position pos:line="126" pos:column="31"/></name></name> <operator pos:line="126" pos:column="32">==<pos:position pos:line="126" pos:column="34"/></operator> <name pos:line="126" pos:column="35">FTPTRANSFER_BODY<pos:position pos:line="126" pos:column="51"/></name><operator pos:line="126" pos:column="51">)<pos:position pos:line="126" pos:column="52"/></operator> <operator pos:line="126" pos:column="53">&amp;&amp;<pos:position pos:line="126" pos:column="63"/></operator> <name><name pos:line="126" pos:column="56">ftpc<pos:position pos:line="126" pos:column="60"/></name><operator pos:line="126" pos:column="60">-&gt;<pos:position pos:line="126" pos:column="65"/></operator><name pos:line="126" pos:column="62">ctl_valid<pos:position pos:line="126" pos:column="71"/></name></name> <operator pos:line="126" pos:column="72">&amp;&amp;<pos:position pos:line="126" pos:column="82"/></operator>
     <name><name pos:line="127" pos:column="6">pp<pos:position pos:line="127" pos:column="8"/></name><operator pos:line="127" pos:column="8">-&gt;<pos:position pos:line="127" pos:column="13"/></operator><name pos:line="127" pos:column="10">pending_resp<pos:position pos:line="127" pos:column="22"/></name></name> <operator pos:line="127" pos:column="23">&amp;&amp;<pos:position pos:line="127" pos:column="33"/></operator> <operator pos:line="127" pos:column="26">!<pos:position pos:line="127" pos:column="27"/></operator><name pos:line="127" pos:column="27">premature<pos:position pos:line="127" pos:column="36"/></name></expr>)<pos:position pos:line="127" pos:column="37"/></condition><then pos:line="127" pos:column="37"> <block pos:line="127" pos:column="38">{
    <comment type="block" pos:line="128" pos:column="5">/*
     * Let's see what the server says about the transfer we just performed,
     * but lower the timeout as sometimes this connection has died while the
     * data has been transferred. This happens when doing through NATs etc that
     * abandon old silent connections.
     */</comment>
    <decl_stmt><decl><type><name pos:line="134" pos:column="5">long<pos:position pos:line="134" pos:column="9"/></name></type> <name pos:line="134" pos:column="10">old_time<pos:position pos:line="134" pos:column="18"/></name> <init pos:line="134" pos:column="19">= <expr><name><name pos:line="134" pos:column="21">pp<pos:position pos:line="134" pos:column="23"/></name><operator pos:line="134" pos:column="23">-&gt;<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="25">response_time<pos:position pos:line="134" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="134" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="136" pos:column="5">pp<pos:position pos:line="136" pos:column="7"/></name><operator pos:line="136" pos:column="7">-&gt;<pos:position pos:line="136" pos:column="12"/></operator><name pos:line="136" pos:column="9">response_time<pos:position pos:line="136" pos:column="22"/></name></name> <operator pos:line="136" pos:column="23">=<pos:position pos:line="136" pos:column="24"/></operator> <literal type="number" pos:line="136" pos:column="25">60<pos:position pos:line="136" pos:column="27"/></literal><operator pos:line="136" pos:column="27">*<pos:position pos:line="136" pos:column="28"/></operator><literal type="number" pos:line="136" pos:column="28">1000<pos:position pos:line="136" pos:column="32"/></literal></expr>;<pos:position pos:line="136" pos:column="33"/></expr_stmt> <comment type="block" pos:line="136" pos:column="34">/* give it only a minute for now */</comment>
    <expr_stmt><expr><name><name pos:line="137" pos:column="5">pp<pos:position pos:line="137" pos:column="7"/></name><operator pos:line="137" pos:column="7">-&gt;<pos:position pos:line="137" pos:column="12"/></operator><name pos:line="137" pos:column="9">response<pos:position pos:line="137" pos:column="17"/></name></name> <operator pos:line="137" pos:column="18">=<pos:position pos:line="137" pos:column="19"/></operator> <call><name pos:line="137" pos:column="20">Curl_tvnow<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">()<pos:position pos:line="137" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="33"/></expr_stmt> <comment type="block" pos:line="137" pos:column="34">/* timeout relative now */</comment>

    <expr_stmt><expr><name pos:line="139" pos:column="5">result<pos:position pos:line="139" pos:column="11"/></name> <operator pos:line="139" pos:column="12">=<pos:position pos:line="139" pos:column="13"/></operator> <call><name pos:line="139" pos:column="14">Curl_GetFTPResponse<pos:position pos:line="139" pos:column="33"/></name><argument_list pos:line="139" pos:column="33">(<argument><expr><operator pos:line="139" pos:column="34">&amp;<pos:position pos:line="139" pos:column="39"/></operator><name pos:line="139" pos:column="35">nread<pos:position pos:line="139" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="42">conn<pos:position pos:line="139" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="48">&amp;<pos:position pos:line="139" pos:column="53"/></operator><name pos:line="139" pos:column="49">ftpcode<pos:position pos:line="139" pos:column="56"/></name></expr></argument>)<pos:position pos:line="139" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="141" pos:column="5">pp<pos:position pos:line="141" pos:column="7"/></name><operator pos:line="141" pos:column="7">-&gt;<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="9">response_time<pos:position pos:line="141" pos:column="22"/></name></name> <operator pos:line="141" pos:column="23">=<pos:position pos:line="141" pos:column="24"/></operator> <name pos:line="141" pos:column="25">old_time<pos:position pos:line="141" pos:column="33"/></name></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt> <comment type="block" pos:line="141" pos:column="35">/* set this back to previous value */</comment>

    <if pos:line="143" pos:column="5">if<condition pos:line="143" pos:column="7">(<expr><operator pos:line="143" pos:column="8">!<pos:position pos:line="143" pos:column="9"/></operator><name pos:line="143" pos:column="9">nread<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">&amp;&amp;<pos:position pos:line="143" pos:column="25"/></operator> <operator pos:line="143" pos:column="18">(<pos:position pos:line="143" pos:column="19"/></operator><name pos:line="143" pos:column="19">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="143" pos:column="43"/></name> <operator pos:line="143" pos:column="44">==<pos:position pos:line="143" pos:column="46"/></operator> <name pos:line="143" pos:column="47">result<pos:position pos:line="143" pos:column="53"/></name><operator pos:line="143" pos:column="53">)<pos:position pos:line="143" pos:column="54"/></operator></expr>)<pos:position pos:line="143" pos:column="55"/></condition><then pos:line="143" pos:column="55"> <block pos:line="143" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="144" pos:column="7">failf<pos:position pos:line="144" pos:column="12"/></name><argument_list pos:line="144" pos:column="12">(<argument><expr><name pos:line="144" pos:column="13">data<pos:position pos:line="144" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="19">"control connection looks dead"<pos:position pos:line="144" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="145" pos:column="7">ftpc<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">-&gt;<pos:position pos:line="145" pos:column="16"/></operator><name pos:line="145" pos:column="13">ctl_valid<pos:position pos:line="145" pos:column="22"/></name></name> <operator pos:line="145" pos:column="23">=<pos:position pos:line="145" pos:column="24"/></operator> <name pos:line="145" pos:column="25">FALSE<pos:position pos:line="145" pos:column="30"/></name></expr>;<pos:position pos:line="145" pos:column="31"/></expr_stmt> <comment type="block" pos:line="145" pos:column="32">/* mark control connection as bad */</comment>
      <expr_stmt><expr><call><name pos:line="146" pos:column="7">connclose<pos:position pos:line="146" pos:column="16"/></name><argument_list pos:line="146" pos:column="16">(<argument><expr><name pos:line="146" pos:column="17">conn<pos:position pos:line="146" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="23">"Timeout or similar in FTP DONE operation"<pos:position pos:line="146" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="67"/></expr_stmt> <comment type="block" pos:line="146" pos:column="68">/* close */</comment>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <if pos:line="149" pos:column="5">if<condition pos:line="149" pos:column="7">(<expr><name pos:line="149" pos:column="8">result<pos:position pos:line="149" pos:column="14"/></name></expr>)<pos:position pos:line="149" pos:column="15"/></condition><then pos:line="149" pos:column="15">
      <block type="pseudo"><return pos:line="150" pos:column="7">return <expr><name pos:line="150" pos:column="14">result<pos:position pos:line="150" pos:column="20"/></name></expr>;<pos:position pos:line="150" pos:column="21"/></return></block></then></if>

    <if pos:line="152" pos:column="5">if<condition pos:line="152" pos:column="7">(<expr><name><name pos:line="152" pos:column="8">ftpc<pos:position pos:line="152" pos:column="12"/></name><operator pos:line="152" pos:column="12">-&gt;<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="14">dont_check<pos:position pos:line="152" pos:column="24"/></name></name> <operator pos:line="152" pos:column="25">&amp;&amp;<pos:position pos:line="152" pos:column="35"/></operator> <name><name pos:line="152" pos:column="28">data<pos:position pos:line="152" pos:column="32"/></name><operator pos:line="152" pos:column="32">-&gt;<pos:position pos:line="152" pos:column="37"/></operator><name pos:line="152" pos:column="34">req<pos:position pos:line="152" pos:column="37"/></name><operator pos:line="152" pos:column="37">.<pos:position pos:line="152" pos:column="38"/></operator><name pos:line="152" pos:column="38">maxdownload<pos:position pos:line="152" pos:column="49"/></name></name> <operator pos:line="152" pos:column="50">&gt;<pos:position pos:line="152" pos:column="54"/></operator> <literal type="number" pos:line="152" pos:column="52">0<pos:position pos:line="152" pos:column="53"/></literal></expr>)<pos:position pos:line="152" pos:column="54"/></condition><then pos:line="152" pos:column="54"> <block pos:line="152" pos:column="55">{
      <comment type="block" pos:line="153" pos:column="7">/* we have just sent ABOR and there is no reliable way to check if it was
       * successful or not; we have to close the connection now */</comment>
      <expr_stmt><expr><call><name pos:line="155" pos:column="7">infof<pos:position pos:line="155" pos:column="12"/></name><argument_list pos:line="155" pos:column="12">(<argument><expr><name pos:line="155" pos:column="13">data<pos:position pos:line="155" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="19">"partial download completed, closing connection\n"<pos:position pos:line="155" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="156" pos:column="7">connclose<pos:position pos:line="156" pos:column="16"/></name><argument_list pos:line="156" pos:column="16">(<argument><expr><name pos:line="156" pos:column="17">conn<pos:position pos:line="156" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="23">"Partial download with no ability to check"<pos:position pos:line="156" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="68"/></expr_stmt>
      <return pos:line="157" pos:column="7">return <expr><name pos:line="157" pos:column="14">result<pos:position pos:line="157" pos:column="20"/></name></expr>;<pos:position pos:line="157" pos:column="21"/></return>
    }<pos:position pos:line="158" pos:column="6"/></block></then></if>

    <if pos:line="160" pos:column="5">if<condition pos:line="160" pos:column="7">(<expr><operator pos:line="160" pos:column="8">!<pos:position pos:line="160" pos:column="9"/></operator><name><name pos:line="160" pos:column="9">ftpc<pos:position pos:line="160" pos:column="13"/></name><operator pos:line="160" pos:column="13">-&gt;<pos:position pos:line="160" pos:column="18"/></operator><name pos:line="160" pos:column="15">dont_check<pos:position pos:line="160" pos:column="25"/></name></name></expr>)<pos:position pos:line="160" pos:column="26"/></condition><then pos:line="160" pos:column="26"> <block pos:line="160" pos:column="27">{
      <comment type="block" pos:line="161" pos:column="7">/* 226 Transfer complete, 250 Requested file action okay, completed. */</comment>
      <if pos:line="162" pos:column="7">if<condition pos:line="162" pos:column="9">(<expr><operator pos:line="162" pos:column="10">(<pos:position pos:line="162" pos:column="11"/></operator><name pos:line="162" pos:column="11">ftpcode<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">!=<pos:position pos:line="162" pos:column="21"/></operator> <literal type="number" pos:line="162" pos:column="22">226<pos:position pos:line="162" pos:column="25"/></literal><operator pos:line="162" pos:column="25">)<pos:position pos:line="162" pos:column="26"/></operator> <operator pos:line="162" pos:column="27">&amp;&amp;<pos:position pos:line="162" pos:column="37"/></operator> <operator pos:line="162" pos:column="30">(<pos:position pos:line="162" pos:column="31"/></operator><name pos:line="162" pos:column="31">ftpcode<pos:position pos:line="162" pos:column="38"/></name> <operator pos:line="162" pos:column="39">!=<pos:position pos:line="162" pos:column="41"/></operator> <literal type="number" pos:line="162" pos:column="42">250<pos:position pos:line="162" pos:column="45"/></literal><operator pos:line="162" pos:column="45">)<pos:position pos:line="162" pos:column="46"/></operator></expr>)<pos:position pos:line="162" pos:column="47"/></condition><then pos:line="162" pos:column="47"> <block pos:line="162" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="163" pos:column="9">failf<pos:position pos:line="163" pos:column="14"/></name><argument_list pos:line="163" pos:column="14">(<argument><expr><name pos:line="163" pos:column="15">data<pos:position pos:line="163" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="21">"server did not report OK, got %d"<pos:position pos:line="163" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="57">ftpcode<pos:position pos:line="163" pos:column="64"/></name></expr></argument>)<pos:position pos:line="163" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="164" pos:column="9">result<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">=<pos:position pos:line="164" pos:column="17"/></operator> <name pos:line="164" pos:column="18">CURLE_PARTIAL_FILE<pos:position pos:line="164" pos:column="36"/></name></expr>;<pos:position pos:line="164" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="165" pos:column="8"/></block></then></if>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if>
  }<pos:position pos:line="167" pos:column="4"/></block></then></if>

  <if pos:line="169" pos:column="3">if<condition pos:line="169" pos:column="5">(<expr><name pos:line="169" pos:column="6">result<pos:position pos:line="169" pos:column="12"/></name> <operator pos:line="169" pos:column="13">||<pos:position pos:line="169" pos:column="15"/></operator> <name pos:line="169" pos:column="16">premature<pos:position pos:line="169" pos:column="25"/></name></expr>)<pos:position pos:line="169" pos:column="26"/></condition><then pos:line="169" pos:column="26">
    <comment type="block" pos:line="170" pos:column="5">/* the response code from the transfer showed an error already so no
       use checking further */</comment>
    <block type="pseudo"><empty_stmt pos:line="172" pos:column="5">;<pos:position pos:line="172" pos:column="6"/></empty_stmt></block></then>
  <elseif pos:line="173" pos:column="3">else <if pos:line="173" pos:column="8">if<condition pos:line="173" pos:column="10">(<expr><name><name pos:line="173" pos:column="11">data<pos:position pos:line="173" pos:column="15"/></name><operator pos:line="173" pos:column="15">-&gt;<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="17">set<pos:position pos:line="173" pos:column="20"/></name><operator pos:line="173" pos:column="20">.<pos:position pos:line="173" pos:column="21"/></operator><name pos:line="173" pos:column="21">upload<pos:position pos:line="173" pos:column="27"/></name></name></expr>)<pos:position pos:line="173" pos:column="28"/></condition><then pos:line="173" pos:column="28"> <block pos:line="173" pos:column="29">{
    <if pos:line="174" pos:column="5">if<condition pos:line="174" pos:column="7">(<expr><operator pos:line="174" pos:column="8">(<pos:position pos:line="174" pos:column="9"/></operator><operator pos:line="174" pos:column="9">-<pos:position pos:line="174" pos:column="10"/></operator><literal type="number" pos:line="174" pos:column="10">1<pos:position pos:line="174" pos:column="11"/></literal> <operator pos:line="174" pos:column="12">!=<pos:position pos:line="174" pos:column="14"/></operator> <name><name pos:line="174" pos:column="15">data<pos:position pos:line="174" pos:column="19"/></name><operator pos:line="174" pos:column="19">-&gt;<pos:position pos:line="174" pos:column="24"/></operator><name pos:line="174" pos:column="21">state<pos:position pos:line="174" pos:column="26"/></name><operator pos:line="174" pos:column="26">.<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="27">infilesize<pos:position pos:line="174" pos:column="37"/></name></name><operator pos:line="174" pos:column="37">)<pos:position pos:line="174" pos:column="38"/></operator> <operator pos:line="174" pos:column="39">&amp;&amp;<pos:position pos:line="174" pos:column="49"/></operator>
       <operator pos:line="175" pos:column="8">(<pos:position pos:line="175" pos:column="9"/></operator><name><name pos:line="175" pos:column="9">data<pos:position pos:line="175" pos:column="13"/></name><operator pos:line="175" pos:column="13">-&gt;<pos:position pos:line="175" pos:column="18"/></operator><name pos:line="175" pos:column="15">state<pos:position pos:line="175" pos:column="20"/></name><operator pos:line="175" pos:column="20">.<pos:position pos:line="175" pos:column="21"/></operator><name pos:line="175" pos:column="21">infilesize<pos:position pos:line="175" pos:column="31"/></name></name> <operator pos:line="175" pos:column="32">!=<pos:position pos:line="175" pos:column="34"/></operator> <operator pos:line="175" pos:column="35">*<pos:position pos:line="175" pos:column="36"/></operator><name><name pos:line="175" pos:column="36">ftp<pos:position pos:line="175" pos:column="39"/></name><operator pos:line="175" pos:column="39">-&gt;<pos:position pos:line="175" pos:column="44"/></operator><name pos:line="175" pos:column="41">bytecountp<pos:position pos:line="175" pos:column="51"/></name></name><operator pos:line="175" pos:column="51">)<pos:position pos:line="175" pos:column="52"/></operator> <operator pos:line="175" pos:column="53">&amp;&amp;<pos:position pos:line="175" pos:column="63"/></operator>
       <operator pos:line="176" pos:column="8">!<pos:position pos:line="176" pos:column="9"/></operator><name><name pos:line="176" pos:column="9">data<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">set<pos:position pos:line="176" pos:column="18"/></name><operator pos:line="176" pos:column="18">.<pos:position pos:line="176" pos:column="19"/></operator><name pos:line="176" pos:column="19">crlf<pos:position pos:line="176" pos:column="23"/></name></name> <operator pos:line="176" pos:column="24">&amp;&amp;<pos:position pos:line="176" pos:column="34"/></operator>
       <operator pos:line="177" pos:column="8">(<pos:position pos:line="177" pos:column="9"/></operator><name><name pos:line="177" pos:column="9">ftp<pos:position pos:line="177" pos:column="12"/></name><operator pos:line="177" pos:column="12">-&gt;<pos:position pos:line="177" pos:column="17"/></operator><name pos:line="177" pos:column="14">transfer<pos:position pos:line="177" pos:column="22"/></name></name> <operator pos:line="177" pos:column="23">==<pos:position pos:line="177" pos:column="25"/></operator> <name pos:line="177" pos:column="26">FTPTRANSFER_BODY<pos:position pos:line="177" pos:column="42"/></name><operator pos:line="177" pos:column="42">)<pos:position pos:line="177" pos:column="43"/></operator></expr>)<pos:position pos:line="177" pos:column="44"/></condition><then pos:line="177" pos:column="44"> <block pos:line="177" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="178" pos:column="7">failf<pos:position pos:line="178" pos:column="12"/></name><argument_list pos:line="178" pos:column="12">(<argument><expr><name pos:line="178" pos:column="13">data<pos:position pos:line="178" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="19">"Uploaded unaligned file size (%"<pos:position pos:line="178" pos:column="52"/></literal> <name pos:line="178" pos:column="53">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="178" pos:column="75"/></name>
            <literal type="string" pos:line="179" pos:column="13">" out of %"<pos:position pos:line="179" pos:column="24"/></literal> <name pos:line="179" pos:column="25">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="179" pos:column="47"/></name> <literal type="string" pos:line="179" pos:column="48">" bytes)"<pos:position pos:line="179" pos:column="57"/></literal></expr></argument>,
            <argument><expr><operator pos:line="180" pos:column="13">*<pos:position pos:line="180" pos:column="14"/></operator><name><name pos:line="180" pos:column="14">ftp<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">-&gt;<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="19">bytecountp<pos:position pos:line="180" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="31">data<pos:position pos:line="180" pos:column="35"/></name><operator pos:line="180" pos:column="35">-&gt;<pos:position pos:line="180" pos:column="40"/></operator><name pos:line="180" pos:column="37">state<pos:position pos:line="180" pos:column="42"/></name><operator pos:line="180" pos:column="42">.<pos:position pos:line="180" pos:column="43"/></operator><name pos:line="180" pos:column="43">infilesize<pos:position pos:line="180" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="181" pos:column="7">result<pos:position pos:line="181" pos:column="13"/></name> <operator pos:line="181" pos:column="14">=<pos:position pos:line="181" pos:column="15"/></operator> <name pos:line="181" pos:column="16">CURLE_PARTIAL_FILE<pos:position pos:line="181" pos:column="34"/></name></expr>;<pos:position pos:line="181" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>
  }<pos:position pos:line="183" pos:column="4"/></block></then></if></elseif>
  <else pos:line="184" pos:column="3">else <block pos:line="184" pos:column="8">{
    <if pos:line="185" pos:column="5">if<condition pos:line="185" pos:column="7">(<expr><operator pos:line="185" pos:column="8">(<pos:position pos:line="185" pos:column="9"/></operator><operator pos:line="185" pos:column="9">-<pos:position pos:line="185" pos:column="10"/></operator><literal type="number" pos:line="185" pos:column="10">1<pos:position pos:line="185" pos:column="11"/></literal> <operator pos:line="185" pos:column="12">!=<pos:position pos:line="185" pos:column="14"/></operator> <name><name pos:line="185" pos:column="15">data<pos:position pos:line="185" pos:column="19"/></name><operator pos:line="185" pos:column="19">-&gt;<pos:position pos:line="185" pos:column="24"/></operator><name pos:line="185" pos:column="21">req<pos:position pos:line="185" pos:column="24"/></name><operator pos:line="185" pos:column="24">.<pos:position pos:line="185" pos:column="25"/></operator><name pos:line="185" pos:column="25">size<pos:position pos:line="185" pos:column="29"/></name></name><operator pos:line="185" pos:column="29">)<pos:position pos:line="185" pos:column="30"/></operator> <operator pos:line="185" pos:column="31">&amp;&amp;<pos:position pos:line="185" pos:column="41"/></operator>
       <operator pos:line="186" pos:column="8">(<pos:position pos:line="186" pos:column="9"/></operator><name><name pos:line="186" pos:column="9">data<pos:position pos:line="186" pos:column="13"/></name><operator pos:line="186" pos:column="13">-&gt;<pos:position pos:line="186" pos:column="18"/></operator><name pos:line="186" pos:column="15">req<pos:position pos:line="186" pos:column="18"/></name><operator pos:line="186" pos:column="18">.<pos:position pos:line="186" pos:column="19"/></operator><name pos:line="186" pos:column="19">size<pos:position pos:line="186" pos:column="23"/></name></name> <operator pos:line="186" pos:column="24">!=<pos:position pos:line="186" pos:column="26"/></operator> <operator pos:line="186" pos:column="27">*<pos:position pos:line="186" pos:column="28"/></operator><name><name pos:line="186" pos:column="28">ftp<pos:position pos:line="186" pos:column="31"/></name><operator pos:line="186" pos:column="31">-&gt;<pos:position pos:line="186" pos:column="36"/></operator><name pos:line="186" pos:column="33">bytecountp<pos:position pos:line="186" pos:column="43"/></name></name><operator pos:line="186" pos:column="43">)<pos:position pos:line="186" pos:column="44"/></operator> <operator pos:line="186" pos:column="45">&amp;&amp;<pos:position pos:line="186" pos:column="55"/></operator>
<cpp:ifdef pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">ifdef<pos:position pos:line="187" pos:column="7"/></cpp:directive> <name pos:line="187" pos:column="8">CURL_DO_LINEEND_CONV<pos:position pos:line="187" pos:column="28"/></name></cpp:ifdef>
       <comment type="block" pos:line="188" pos:column="8">/* Most FTP servers don't adjust their file SIZE response for CRLFs, so
        * we'll check to see if the discrepancy can be explained by the number
        * of CRLFs we've changed to LFs.
        */</comment>
       <operator pos:line="192" pos:column="8">(<pos:position pos:line="192" pos:column="9"/></operator><operator pos:line="192" pos:column="9">(<pos:position pos:line="192" pos:column="10"/></operator><name><name pos:line="192" pos:column="10">data<pos:position pos:line="192" pos:column="14"/></name><operator pos:line="192" pos:column="14">-&gt;<pos:position pos:line="192" pos:column="19"/></operator><name pos:line="192" pos:column="16">req<pos:position pos:line="192" pos:column="19"/></name><operator pos:line="192" pos:column="19">.<pos:position pos:line="192" pos:column="20"/></operator><name pos:line="192" pos:column="20">size<pos:position pos:line="192" pos:column="24"/></name></name> <operator pos:line="192" pos:column="25">+<pos:position pos:line="192" pos:column="26"/></operator> <name><name pos:line="192" pos:column="27">data<pos:position pos:line="192" pos:column="31"/></name><operator pos:line="192" pos:column="31">-&gt;<pos:position pos:line="192" pos:column="36"/></operator><name pos:line="192" pos:column="33">state<pos:position pos:line="192" pos:column="38"/></name><operator pos:line="192" pos:column="38">.<pos:position pos:line="192" pos:column="39"/></operator><name pos:line="192" pos:column="39">crlf_conversions<pos:position pos:line="192" pos:column="55"/></name></name><operator pos:line="192" pos:column="55">)<pos:position pos:line="192" pos:column="56"/></operator> <operator pos:line="192" pos:column="57">!=<pos:position pos:line="192" pos:column="59"/></operator>
        <operator pos:line="193" pos:column="9">*<pos:position pos:line="193" pos:column="10"/></operator><name><name pos:line="193" pos:column="10">ftp<pos:position pos:line="193" pos:column="13"/></name><operator pos:line="193" pos:column="13">-&gt;<pos:position pos:line="193" pos:column="18"/></operator><name pos:line="193" pos:column="15">bytecountp<pos:position pos:line="193" pos:column="25"/></name></name><operator pos:line="193" pos:column="25">)<pos:position pos:line="193" pos:column="26"/></operator> <operator pos:line="193" pos:column="27">&amp;&amp;<pos:position pos:line="193" pos:column="37"/></operator>
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif<pos:position pos:line="194" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="194" pos:column="8">/* CURL_DO_LINEEND_CONV */</comment>
       <operator pos:line="195" pos:column="8">(<pos:position pos:line="195" pos:column="9"/></operator><name><name pos:line="195" pos:column="9">data<pos:position pos:line="195" pos:column="13"/></name><operator pos:line="195" pos:column="13">-&gt;<pos:position pos:line="195" pos:column="18"/></operator><name pos:line="195" pos:column="15">req<pos:position pos:line="195" pos:column="18"/></name><operator pos:line="195" pos:column="18">.<pos:position pos:line="195" pos:column="19"/></operator><name pos:line="195" pos:column="19">maxdownload<pos:position pos:line="195" pos:column="30"/></name></name> <operator pos:line="195" pos:column="31">!=<pos:position pos:line="195" pos:column="33"/></operator> <operator pos:line="195" pos:column="34">*<pos:position pos:line="195" pos:column="35"/></operator><name><name pos:line="195" pos:column="35">ftp<pos:position pos:line="195" pos:column="38"/></name><operator pos:line="195" pos:column="38">-&gt;<pos:position pos:line="195" pos:column="43"/></operator><name pos:line="195" pos:column="40">bytecountp<pos:position pos:line="195" pos:column="50"/></name></name><operator pos:line="195" pos:column="50">)<pos:position pos:line="195" pos:column="51"/></operator></expr>)<pos:position pos:line="195" pos:column="52"/></condition><then pos:line="195" pos:column="52"> <block pos:line="195" pos:column="53">{
      <expr_stmt><expr><call><name pos:line="196" pos:column="7">failf<pos:position pos:line="196" pos:column="12"/></name><argument_list pos:line="196" pos:column="12">(<argument><expr><name pos:line="196" pos:column="13">data<pos:position pos:line="196" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="19">"Received only partial file: %"<pos:position pos:line="196" pos:column="50"/></literal> <name pos:line="196" pos:column="51">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="196" pos:column="73"/></name>
            <literal type="string" pos:line="197" pos:column="13">" bytes"<pos:position pos:line="197" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="197" pos:column="23">*<pos:position pos:line="197" pos:column="24"/></operator><name><name pos:line="197" pos:column="24">ftp<pos:position pos:line="197" pos:column="27"/></name><operator pos:line="197" pos:column="27">-&gt;<pos:position pos:line="197" pos:column="32"/></operator><name pos:line="197" pos:column="29">bytecountp<pos:position pos:line="197" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="198" pos:column="7">result<pos:position pos:line="198" pos:column="13"/></name> <operator pos:line="198" pos:column="14">=<pos:position pos:line="198" pos:column="15"/></operator> <name pos:line="198" pos:column="16">CURLE_PARTIAL_FILE<pos:position pos:line="198" pos:column="34"/></name></expr>;<pos:position pos:line="198" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="199" pos:column="6"/></block></then>
    <elseif pos:line="200" pos:column="5">else <if pos:line="200" pos:column="10">if<condition pos:line="200" pos:column="12">(<expr><operator pos:line="200" pos:column="13">!<pos:position pos:line="200" pos:column="14"/></operator><name><name pos:line="200" pos:column="14">ftpc<pos:position pos:line="200" pos:column="18"/></name><operator pos:line="200" pos:column="18">-&gt;<pos:position pos:line="200" pos:column="23"/></operator><name pos:line="200" pos:column="20">dont_check<pos:position pos:line="200" pos:column="30"/></name></name> <operator pos:line="200" pos:column="31">&amp;&amp;<pos:position pos:line="200" pos:column="41"/></operator>
            <operator pos:line="201" pos:column="13">!<pos:position pos:line="201" pos:column="14"/></operator><operator pos:line="201" pos:column="14">*<pos:position pos:line="201" pos:column="15"/></operator><name><name pos:line="201" pos:column="15">ftp<pos:position pos:line="201" pos:column="18"/></name><operator pos:line="201" pos:column="18">-&gt;<pos:position pos:line="201" pos:column="23"/></operator><name pos:line="201" pos:column="20">bytecountp<pos:position pos:line="201" pos:column="30"/></name></name> <operator pos:line="201" pos:column="31">&amp;&amp;<pos:position pos:line="201" pos:column="41"/></operator>
            <operator pos:line="202" pos:column="13">(<pos:position pos:line="202" pos:column="14"/></operator><name><name pos:line="202" pos:column="14">data<pos:position pos:line="202" pos:column="18"/></name><operator pos:line="202" pos:column="18">-&gt;<pos:position pos:line="202" pos:column="23"/></operator><name pos:line="202" pos:column="20">req<pos:position pos:line="202" pos:column="23"/></name><operator pos:line="202" pos:column="23">.<pos:position pos:line="202" pos:column="24"/></operator><name pos:line="202" pos:column="24">size<pos:position pos:line="202" pos:column="28"/></name></name><operator pos:line="202" pos:column="28">&gt;<pos:position pos:line="202" pos:column="32"/></operator><literal type="number" pos:line="202" pos:column="29">0<pos:position pos:line="202" pos:column="30"/></literal><operator pos:line="202" pos:column="30">)<pos:position pos:line="202" pos:column="31"/></operator></expr>)<pos:position pos:line="202" pos:column="32"/></condition><then pos:line="202" pos:column="32"> <block pos:line="202" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="203" pos:column="7">failf<pos:position pos:line="203" pos:column="12"/></name><argument_list pos:line="203" pos:column="12">(<argument><expr><name pos:line="203" pos:column="13">data<pos:position pos:line="203" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="19">"No data was received!"<pos:position pos:line="203" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="204" pos:column="7">result<pos:position pos:line="204" pos:column="13"/></name> <operator pos:line="204" pos:column="14">=<pos:position pos:line="204" pos:column="15"/></operator> <name pos:line="204" pos:column="16">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="204" pos:column="43"/></name></expr>;<pos:position pos:line="204" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="205" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="206" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="208" pos:column="3">/* clear these for next connection */</comment>
  <expr_stmt><expr><name><name pos:line="209" pos:column="3">ftp<pos:position pos:line="209" pos:column="6"/></name><operator pos:line="209" pos:column="6">-&gt;<pos:position pos:line="209" pos:column="11"/></operator><name pos:line="209" pos:column="8">transfer<pos:position pos:line="209" pos:column="16"/></name></name> <operator pos:line="209" pos:column="17">=<pos:position pos:line="209" pos:column="18"/></operator> <name pos:line="209" pos:column="19">FTPTRANSFER_BODY<pos:position pos:line="209" pos:column="35"/></name></expr>;<pos:position pos:line="209" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="210" pos:column="3">ftpc<pos:position pos:line="210" pos:column="7"/></name><operator pos:line="210" pos:column="7">-&gt;<pos:position pos:line="210" pos:column="12"/></operator><name pos:line="210" pos:column="9">dont_check<pos:position pos:line="210" pos:column="19"/></name></name> <operator pos:line="210" pos:column="20">=<pos:position pos:line="210" pos:column="21"/></operator> <name pos:line="210" pos:column="22">FALSE<pos:position pos:line="210" pos:column="27"/></name></expr>;<pos:position pos:line="210" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="212" pos:column="3">/* Send any post-transfer QUOTE strings? */</comment>
  <if pos:line="213" pos:column="3">if<condition pos:line="213" pos:column="5">(<expr><operator pos:line="213" pos:column="6">!<pos:position pos:line="213" pos:column="7"/></operator><name pos:line="213" pos:column="7">status<pos:position pos:line="213" pos:column="13"/></name> <operator pos:line="213" pos:column="14">&amp;&amp;<pos:position pos:line="213" pos:column="24"/></operator> <operator pos:line="213" pos:column="17">!<pos:position pos:line="213" pos:column="18"/></operator><name pos:line="213" pos:column="18">result<pos:position pos:line="213" pos:column="24"/></name> <operator pos:line="213" pos:column="25">&amp;&amp;<pos:position pos:line="213" pos:column="35"/></operator> <operator pos:line="213" pos:column="28">!<pos:position pos:line="213" pos:column="29"/></operator><name pos:line="213" pos:column="29">premature<pos:position pos:line="213" pos:column="38"/></name> <operator pos:line="213" pos:column="39">&amp;&amp;<pos:position pos:line="213" pos:column="49"/></operator> <name><name pos:line="213" pos:column="42">data<pos:position pos:line="213" pos:column="46"/></name><operator pos:line="213" pos:column="46">-&gt;<pos:position pos:line="213" pos:column="51"/></operator><name pos:line="213" pos:column="48">set<pos:position pos:line="213" pos:column="51"/></name><operator pos:line="213" pos:column="51">.<pos:position pos:line="213" pos:column="52"/></operator><name pos:line="213" pos:column="52">postquote<pos:position pos:line="213" pos:column="61"/></name></name></expr>)<pos:position pos:line="213" pos:column="62"/></condition><then pos:line="213" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><name pos:line="214" pos:column="5">result<pos:position pos:line="214" pos:column="11"/></name> <operator pos:line="214" pos:column="12">=<pos:position pos:line="214" pos:column="13"/></operator> <call><name pos:line="214" pos:column="14">ftp_sendquote<pos:position pos:line="214" pos:column="27"/></name><argument_list pos:line="214" pos:column="27">(<argument><expr><name pos:line="214" pos:column="28">conn<pos:position pos:line="214" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="34">data<pos:position pos:line="214" pos:column="38"/></name><operator pos:line="214" pos:column="38">-&gt;<pos:position pos:line="214" pos:column="43"/></operator><name pos:line="214" pos:column="40">set<pos:position pos:line="214" pos:column="43"/></name><operator pos:line="214" pos:column="43">.<pos:position pos:line="214" pos:column="44"/></operator><name pos:line="214" pos:column="44">postquote<pos:position pos:line="214" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="55"/></expr_stmt></block></then></if>

  <return pos:line="216" pos:column="3">return <expr><name pos:line="216" pos:column="10">result<pos:position pos:line="216" pos:column="16"/></name></expr>;<pos:position pos:line="216" pos:column="17"/></return>
}<pos:position pos:line="217" pos:column="2"/></block></function></unit>

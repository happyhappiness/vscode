<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1935_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_do_more<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">completep<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_easy<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">data<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ftp_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ftpc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">ftpc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bool<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">connected<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">FALSE<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">complete<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">FALSE<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* the ftp struct is inited in ftp_connect() */</comment>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">FTP<pos:position pos:line="10" pos:column="13"/></name></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">ftp<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name><name pos:line="10" pos:column="21">data<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">req<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">protop<pos:position pos:line="10" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* if the second connection isn't done yet, wait for it */</comment>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name><name pos:line="13" pos:column="7">conn<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">bits<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">tcpconnect<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><name pos:line="13" pos:column="29">SECONDARYSOCKET<pos:position pos:line="13" pos:column="44"/></name></expr>]<pos:position pos:line="13" pos:column="45"/></index></name></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><call><name pos:line="14" pos:column="8">Curl_connect_ongoing<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">conn<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
      <comment type="block" pos:line="15" pos:column="7">/* As we're in TUNNEL_CONNECT state now, we know the proxy name and port
         aren't used so we blank their arguments. TODO: make this nicer */</comment>
      <expr_stmt><expr><name pos:line="17" pos:column="7">result<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">Curl_proxyCONNECT<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">conn<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">SECONDARYSOCKET<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">NULL<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="63">0<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

      <return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">result<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">result<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">Curl_is_connected<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">conn<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">SECONDARYSOCKET<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="55">&amp;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="56">connected<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Ready to do more? */</comment>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name pos:line="25" pos:column="8">connected<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">DEBUGF<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><call><name pos:line="26" pos:column="14">infof<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">data<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="26">"DO-MORE connected phase starts\n"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
      <if pos:line="29" pos:column="7">if<condition pos:line="29" pos:column="9">(<expr><name pos:line="29" pos:column="10">result<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&amp;&amp;<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="20">(<pos:position pos:line="29" pos:column="21"/></operator><name><name pos:line="29" pos:column="21">ftpc<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">count1<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">==<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">completep<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <operator pos:line="30" pos:column="22">-<pos:position pos:line="30" pos:column="23"/></operator><literal type="number" pos:line="30" pos:column="23">1<pos:position pos:line="30" pos:column="24"/></literal></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt> <comment type="block" pos:line="30" pos:column="26">/* go back to DOING please */</comment>
        <comment type="block" pos:line="31" pos:column="9">/* this is a EPSV connect failing, try PASV instead */</comment>
        <return pos:line="32" pos:column="9">return <expr><call><name pos:line="32" pos:column="16">ftp_epsv_disable<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">conn<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></return>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
      <return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">result<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="38" pos:column="3">result<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">Curl_proxy_connect<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">conn<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">SECONDARYSOCKET<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name pos:line="39" pos:column="6">result<pos:position pos:line="39" pos:column="12"/></name></expr>)<pos:position pos:line="39" pos:column="13"/></condition><then pos:line="39" pos:column="13">
    <block type="pseudo"><return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">result<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></return></block></then></if>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><call><name pos:line="42" pos:column="6">CONNECT_SECONDARYSOCKET_PROXY_SSL<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">()<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
    <block type="pseudo"><return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">result<pos:position pos:line="43" pos:column="18"/></name></expr>;<pos:position pos:line="43" pos:column="19"/></return></block></then></if>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name><name pos:line="45" pos:column="6">conn<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">bits<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">.<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">tunnel_proxy<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">&amp;&amp;<pos:position pos:line="45" pos:column="40"/></operator> <name><name pos:line="45" pos:column="33">conn<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">bits<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">.<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">httpproxy<pos:position pos:line="45" pos:column="53"/></name></name> <operator pos:line="45" pos:column="54">&amp;&amp;<pos:position pos:line="45" pos:column="64"/></operator>
     <call><name pos:line="46" pos:column="6">Curl_connect_ongoing<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">conn<pos:position pos:line="46" pos:column="31"/></name></expr></argument>)<pos:position pos:line="46" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">result<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return></block></then></if>


  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><name><name pos:line="50" pos:column="6">ftpc<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">state<pos:position pos:line="50" pos:column="17"/></name></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block pos:line="50" pos:column="19">{
    <comment type="block" pos:line="51" pos:column="5">/* already in a state so skip the initial commands.
       They are only done to kickstart the do_more state */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">result<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">ftp_multi_statemach<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">conn<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="40">&amp;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="41">complete<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="55" pos:column="5">*<pos:position pos:line="55" pos:column="6"/></operator><name pos:line="55" pos:column="6">completep<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <operator pos:line="55" pos:column="18">(<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">int<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">)<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">complete<pos:position pos:line="55" pos:column="31"/></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* if we got an error or if we don't wait for a data connection return
       immediately */</comment>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">result<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">||<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">(<pos:position pos:line="59" pos:column="19"/></operator><name><name pos:line="59" pos:column="19">ftpc<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">wait_data_conn<pos:position pos:line="59" pos:column="39"/></name></name> <operator pos:line="59" pos:column="40">!=<pos:position pos:line="59" pos:column="42"/></operator> <name pos:line="59" pos:column="43">TRUE<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">)<pos:position pos:line="59" pos:column="48"/></operator></expr>)<pos:position pos:line="59" pos:column="49"/></condition><then pos:line="59" pos:column="49">
      <block type="pseudo"><return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">result<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></return></block></then></if>

    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name><name pos:line="62" pos:column="8">ftpc<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">wait_data_conn<pos:position pos:line="62" pos:column="28"/></name></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
      <comment type="block" pos:line="63" pos:column="7">/* if we reach the end of the FTP state machine here, *complete will be
         TRUE but so is ftpc-&gt;wait_data_conn, which says we need to wait for
         the data connection and therefore we're not actually complete */</comment>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="7">*<pos:position pos:line="66" pos:column="8"/></operator><name pos:line="66" pos:column="8">completep<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">(<expr><name><name pos:line="69" pos:column="6">ftp<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">transfer<pos:position pos:line="69" pos:column="19"/></name></name> <operator pos:line="69" pos:column="20">&lt;=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="23">FTPTRANSFER_INFO<pos:position pos:line="69" pos:column="39"/></name></expr>)<pos:position pos:line="69" pos:column="40"/></condition><then pos:line="69" pos:column="40"> <block pos:line="69" pos:column="41">{
    <comment type="block" pos:line="70" pos:column="5">/* a transfer is about to take place, or if not a file name was given
       so we'll do a SIZE on it later and then we need the right TYPE first */</comment>

    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><name><name pos:line="73" pos:column="8">ftpc<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">wait_data_conn<pos:position pos:line="73" pos:column="28"/></name></name> <operator pos:line="73" pos:column="29">==<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="32">TRUE<pos:position pos:line="73" pos:column="36"/></name></expr>)<pos:position pos:line="73" pos:column="37"/></condition><then pos:line="73" pos:column="37"> <block pos:line="73" pos:column="38">{
      <decl_stmt><decl><type><name pos:line="74" pos:column="7">bool<pos:position pos:line="74" pos:column="11"/></name></type> <name pos:line="74" pos:column="12">serv_conned<pos:position pos:line="74" pos:column="23"/></name></decl>;<pos:position pos:line="74" pos:column="24"/></decl_stmt>

      <expr_stmt><expr><name pos:line="76" pos:column="7">result<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <call><name pos:line="76" pos:column="16">ReceivedServerConnect<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">conn<pos:position pos:line="76" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="44">&amp;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="45">serv_conned<pos:position pos:line="76" pos:column="56"/></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
      <if pos:line="77" pos:column="7">if<condition pos:line="77" pos:column="9">(<expr><name pos:line="77" pos:column="10">result<pos:position pos:line="77" pos:column="16"/></name></expr>)<pos:position pos:line="77" pos:column="17"/></condition><then pos:line="77" pos:column="17">
        <block type="pseudo"><return pos:line="78" pos:column="9">return <expr><name pos:line="78" pos:column="16">result<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></return></block></then></if> <comment type="block" pos:line="78" pos:column="24">/* Failed to accept data connection */</comment>

      <if pos:line="80" pos:column="7">if<condition pos:line="80" pos:column="9">(<expr><name pos:line="80" pos:column="10">serv_conned<pos:position pos:line="80" pos:column="21"/></name></expr>)<pos:position pos:line="80" pos:column="22"/></condition><then pos:line="80" pos:column="22"> <block pos:line="80" pos:column="23">{
        <comment type="block" pos:line="81" pos:column="9">/* It looks data connection is established */</comment>
        <expr_stmt><expr><name pos:line="82" pos:column="9">result<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <call><name pos:line="82" pos:column="18">AcceptServerConnect<pos:position pos:line="82" pos:column="37"/></name><argument_list pos:line="82" pos:column="37">(<argument><expr><name pos:line="82" pos:column="38">conn<pos:position pos:line="82" pos:column="42"/></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">ftpc<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">wait_data_conn<pos:position pos:line="83" pos:column="29"/></name></name> <operator pos:line="83" pos:column="30">=<pos:position pos:line="83" pos:column="31"/></operator> <name pos:line="83" pos:column="32">FALSE<pos:position pos:line="83" pos:column="37"/></name></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
        <if pos:line="84" pos:column="9">if<condition pos:line="84" pos:column="11">(<expr><operator pos:line="84" pos:column="12">!<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="13">result<pos:position pos:line="84" pos:column="19"/></name></expr>)<pos:position pos:line="84" pos:column="20"/></condition><then pos:line="84" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="11">result<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <call><name pos:line="85" pos:column="20">InitiateTransfer<pos:position pos:line="85" pos:column="36"/></name><argument_list pos:line="85" pos:column="36">(<argument><expr><name pos:line="85" pos:column="37">conn<pos:position pos:line="85" pos:column="41"/></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt></block></then></if>

        <if pos:line="87" pos:column="9">if<condition pos:line="87" pos:column="11">(<expr><name pos:line="87" pos:column="12">result<pos:position pos:line="87" pos:column="18"/></name></expr>)<pos:position pos:line="87" pos:column="19"/></condition><then pos:line="87" pos:column="19">
          <block type="pseudo"><return pos:line="88" pos:column="11">return <expr><name pos:line="88" pos:column="18">result<pos:position pos:line="88" pos:column="24"/></name></expr>;<pos:position pos:line="88" pos:column="25"/></return></block></then></if>

        <expr_stmt><expr><operator pos:line="90" pos:column="9">*<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">completep<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">=<pos:position pos:line="90" pos:column="21"/></operator> <literal type="number" pos:line="90" pos:column="22">1<pos:position pos:line="90" pos:column="23"/></literal></expr>;<pos:position pos:line="90" pos:column="24"/></expr_stmt> <comment type="block" pos:line="90" pos:column="25">/* this state is now complete when the server has
                           connected back to us */</comment>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></then>
    <elseif pos:line="94" pos:column="5">else <if pos:line="94" pos:column="10">if<condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">data<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">set<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">.<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="23">upload<pos:position pos:line="94" pos:column="29"/></name></name></expr>)<pos:position pos:line="94" pos:column="30"/></condition><then pos:line="94" pos:column="30"> <block pos:line="94" pos:column="31">{
      <expr_stmt><expr><name pos:line="95" pos:column="7">result<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">ftp_nb_type<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">conn<pos:position pos:line="95" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="34">data<pos:position pos:line="95" pos:column="38"/></name><operator pos:line="95" pos:column="38">-&gt;<pos:position pos:line="95" pos:column="43"/></operator><name pos:line="95" pos:column="40">set<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">.<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="44">prefer_ascii<pos:position pos:line="95" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="58">FTP_STOR_TYPE<pos:position pos:line="95" pos:column="71"/></name></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="73"/></expr_stmt>
      <if pos:line="96" pos:column="7">if<condition pos:line="96" pos:column="9">(<expr><name pos:line="96" pos:column="10">result<pos:position pos:line="96" pos:column="16"/></name></expr>)<pos:position pos:line="96" pos:column="17"/></condition><then pos:line="96" pos:column="17">
        <block type="pseudo"><return pos:line="97" pos:column="9">return <expr><name pos:line="97" pos:column="16">result<pos:position pos:line="97" pos:column="22"/></name></expr>;<pos:position pos:line="97" pos:column="23"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="99" pos:column="7">result<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <call><name pos:line="99" pos:column="16">ftp_multi_statemach<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">conn<pos:position pos:line="99" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="42">&amp;<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="43">complete<pos:position pos:line="99" pos:column="51"/></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="53"/></expr_stmt>
      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><name><name pos:line="100" pos:column="10">ftpc<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">wait_data_conn<pos:position pos:line="100" pos:column="30"/></name></name></expr>)<pos:position pos:line="100" pos:column="31"/></condition><then pos:line="100" pos:column="31">
        <comment type="block" pos:line="101" pos:column="9">/* if we reach the end of the FTP state machine here, *complete will be
           TRUE but so is ftpc-&gt;wait_data_conn, which says we need to wait for
           the data connection and therefore we're not actually complete */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="104" pos:column="9">*<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">completep<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">=<pos:position pos:line="104" pos:column="21"/></operator> <literal type="number" pos:line="104" pos:column="22">0<pos:position pos:line="104" pos:column="23"/></literal></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt></block></then>
      <else pos:line="105" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">completep<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <operator pos:line="106" pos:column="22">(<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="23">int<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">)<pos:position pos:line="106" pos:column="27"/></operator><name pos:line="106" pos:column="27">complete<pos:position pos:line="106" pos:column="35"/></name></expr>;<pos:position pos:line="106" pos:column="36"/></expr_stmt></block></else></if>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if></elseif>
    <else pos:line="108" pos:column="5">else <block pos:line="108" pos:column="10">{
      <comment type="block" pos:line="109" pos:column="7">/* download */</comment>
      <expr_stmt><expr><name><name pos:line="110" pos:column="7">ftp<pos:position pos:line="110" pos:column="10"/></name><operator pos:line="110" pos:column="10">-&gt;<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="12">downloadsize<pos:position pos:line="110" pos:column="24"/></name></name> <operator pos:line="110" pos:column="25">=<pos:position pos:line="110" pos:column="26"/></operator> <operator pos:line="110" pos:column="27">-<pos:position pos:line="110" pos:column="28"/></operator><literal type="number" pos:line="110" pos:column="28">1<pos:position pos:line="110" pos:column="29"/></literal></expr>;<pos:position pos:line="110" pos:column="30"/></expr_stmt> <comment type="block" pos:line="110" pos:column="31">/* unknown as of yet */</comment>

      <expr_stmt><expr><name pos:line="112" pos:column="7">result<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <call><name pos:line="112" pos:column="16">ftp_range<pos:position pos:line="112" pos:column="25"/></name><argument_list pos:line="112" pos:column="25">(<argument><expr><name pos:line="112" pos:column="26">conn<pos:position pos:line="112" pos:column="30"/></name></expr></argument>)<pos:position pos:line="112" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="32"/></expr_stmt>
      <if pos:line="113" pos:column="7">if<condition pos:line="113" pos:column="9">(<expr><name pos:line="113" pos:column="10">result<pos:position pos:line="113" pos:column="16"/></name></expr>)<pos:position pos:line="113" pos:column="17"/></condition><then pos:line="113" pos:column="17">
        <block type="pseudo"><empty_stmt pos:line="114" pos:column="9">;<pos:position pos:line="114" pos:column="10"/></empty_stmt></block></then>
      <elseif pos:line="115" pos:column="7">else <if pos:line="115" pos:column="12">if<condition pos:line="115" pos:column="14">(<expr><name><name pos:line="115" pos:column="15">data<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">set<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">ftp_list_only<pos:position pos:line="115" pos:column="38"/></name></name> <operator pos:line="115" pos:column="39">||<pos:position pos:line="115" pos:column="41"/></operator> <operator pos:line="115" pos:column="42">!<pos:position pos:line="115" pos:column="43"/></operator><name><name pos:line="115" pos:column="43">ftpc<pos:position pos:line="115" pos:column="47"/></name><operator pos:line="115" pos:column="47">-&gt;<pos:position pos:line="115" pos:column="52"/></operator><name pos:line="115" pos:column="49">file<pos:position pos:line="115" pos:column="53"/></name></name></expr>)<pos:position pos:line="115" pos:column="54"/></condition><then pos:line="115" pos:column="54"> <block pos:line="115" pos:column="55">{
        <comment type="block" pos:line="116" pos:column="9">/* The specified path ends with a slash, and therefore we think this
           is a directory that is requested, use LIST. But before that we
           need to set ASCII transfer mode. */</comment>

        <comment type="block" pos:line="120" pos:column="9">/* But only if a body transfer was requested. */</comment>
        <if pos:line="121" pos:column="9">if<condition pos:line="121" pos:column="11">(<expr><name><name pos:line="121" pos:column="12">ftp<pos:position pos:line="121" pos:column="15"/></name><operator pos:line="121" pos:column="15">-&gt;<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="17">transfer<pos:position pos:line="121" pos:column="25"/></name></name> <operator pos:line="121" pos:column="26">==<pos:position pos:line="121" pos:column="28"/></operator> <name pos:line="121" pos:column="29">FTPTRANSFER_BODY<pos:position pos:line="121" pos:column="45"/></name></expr>)<pos:position pos:line="121" pos:column="46"/></condition><then pos:line="121" pos:column="46"> <block pos:line="121" pos:column="47">{
          <expr_stmt><expr><name pos:line="122" pos:column="11">result<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <call><name pos:line="122" pos:column="20">ftp_nb_type<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><name pos:line="122" pos:column="32">conn<pos:position pos:line="122" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="38">TRUE<pos:position pos:line="122" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="44">FTP_LIST_TYPE<pos:position pos:line="122" pos:column="57"/></name></expr></argument>)<pos:position pos:line="122" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="59"/></expr_stmt>
          <if pos:line="123" pos:column="11">if<condition pos:line="123" pos:column="13">(<expr><name pos:line="123" pos:column="14">result<pos:position pos:line="123" pos:column="20"/></name></expr>)<pos:position pos:line="123" pos:column="21"/></condition><then pos:line="123" pos:column="21">
            <block type="pseudo"><return pos:line="124" pos:column="13">return <expr><name pos:line="124" pos:column="20">result<pos:position pos:line="124" pos:column="26"/></name></expr>;<pos:position pos:line="124" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="125" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="126" pos:column="9">/* otherwise just fall through */</comment>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if></elseif>
      <else pos:line="128" pos:column="7">else <block pos:line="128" pos:column="12">{
        <expr_stmt><expr><name pos:line="129" pos:column="9">result<pos:position pos:line="129" pos:column="15"/></name> <operator pos:line="129" pos:column="16">=<pos:position pos:line="129" pos:column="17"/></operator> <call><name pos:line="129" pos:column="18">ftp_nb_type<pos:position pos:line="129" pos:column="29"/></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">conn<pos:position pos:line="129" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="36">data<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">-&gt;<pos:position pos:line="129" pos:column="45"/></operator><name pos:line="129" pos:column="42">set<pos:position pos:line="129" pos:column="45"/></name><operator pos:line="129" pos:column="45">.<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="46">prefer_ascii<pos:position pos:line="129" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="60">FTP_RETR_TYPE<pos:position pos:line="129" pos:column="73"/></name></expr></argument>)<pos:position pos:line="129" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="75"/></expr_stmt>
        <if pos:line="130" pos:column="9">if<condition pos:line="130" pos:column="11">(<expr><name pos:line="130" pos:column="12">result<pos:position pos:line="130" pos:column="18"/></name></expr>)<pos:position pos:line="130" pos:column="19"/></condition><then pos:line="130" pos:column="19">
          <block type="pseudo"><return pos:line="131" pos:column="11">return <expr><name pos:line="131" pos:column="18">result<pos:position pos:line="131" pos:column="24"/></name></expr>;<pos:position pos:line="131" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="132" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="134" pos:column="7">result<pos:position pos:line="134" pos:column="13"/></name> <operator pos:line="134" pos:column="14">=<pos:position pos:line="134" pos:column="15"/></operator> <call><name pos:line="134" pos:column="16">ftp_multi_statemach<pos:position pos:line="134" pos:column="35"/></name><argument_list pos:line="134" pos:column="35">(<argument><expr><name pos:line="134" pos:column="36">conn<pos:position pos:line="134" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="42">&amp;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="43">complete<pos:position pos:line="134" pos:column="51"/></name></expr></argument>)<pos:position pos:line="134" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="135" pos:column="7">*<pos:position pos:line="135" pos:column="8"/></operator><name pos:line="135" pos:column="8">completep<pos:position pos:line="135" pos:column="17"/></name> <operator pos:line="135" pos:column="18">=<pos:position pos:line="135" pos:column="19"/></operator> <operator pos:line="135" pos:column="20">(<pos:position pos:line="135" pos:column="21"/></operator><name pos:line="135" pos:column="21">int<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">)<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="25">complete<pos:position pos:line="135" pos:column="33"/></name></expr>;<pos:position pos:line="135" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></else></if>
    <return pos:line="137" pos:column="5">return <expr><name pos:line="137" pos:column="12">result<pos:position pos:line="137" pos:column="18"/></name></expr>;<pos:position pos:line="137" pos:column="19"/></return>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if>

  <if pos:line="140" pos:column="3">if<condition pos:line="140" pos:column="5">(<expr><operator pos:line="140" pos:column="6">!<pos:position pos:line="140" pos:column="7"/></operator><name pos:line="140" pos:column="7">result<pos:position pos:line="140" pos:column="13"/></name> <operator pos:line="140" pos:column="14">&amp;&amp;<pos:position pos:line="140" pos:column="24"/></operator> <operator pos:line="140" pos:column="17">(<pos:position pos:line="140" pos:column="18"/></operator><name><name pos:line="140" pos:column="18">ftp<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">-&gt;<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="23">transfer<pos:position pos:line="140" pos:column="31"/></name></name> <operator pos:line="140" pos:column="32">!=<pos:position pos:line="140" pos:column="34"/></operator> <name pos:line="140" pos:column="35">FTPTRANSFER_BODY<pos:position pos:line="140" pos:column="51"/></name><operator pos:line="140" pos:column="51">)<pos:position pos:line="140" pos:column="52"/></operator></expr>)<pos:position pos:line="140" pos:column="53"/></condition><then pos:line="140" pos:column="53">
    <comment type="block" pos:line="141" pos:column="5">/* no data to transfer. FIX: it feels like a kludge to have this here
       too! */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="5">Curl_setup_transfer<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name pos:line="143" pos:column="25">conn<pos:position pos:line="143" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="31">-<pos:position pos:line="143" pos:column="32"/></operator><literal type="number" pos:line="143" pos:column="32">1<pos:position pos:line="143" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="143" pos:column="35">-<pos:position pos:line="143" pos:column="36"/></operator><literal type="number" pos:line="143" pos:column="36">1<pos:position pos:line="143" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="39">FALSE<pos:position pos:line="143" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="46">NULL<pos:position pos:line="143" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="52">-<pos:position pos:line="143" pos:column="53"/></operator><literal type="number" pos:line="143" pos:column="53">1<pos:position pos:line="143" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="56">NULL<pos:position pos:line="143" pos:column="60"/></name></expr></argument>)<pos:position pos:line="143" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="62"/></expr_stmt></block></then></if>

  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><operator pos:line="145" pos:column="6">!<pos:position pos:line="145" pos:column="7"/></operator><name><name pos:line="145" pos:column="7">ftpc<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">-&gt;<pos:position pos:line="145" pos:column="16"/></operator><name pos:line="145" pos:column="13">wait_data_conn<pos:position pos:line="145" pos:column="27"/></name></name></expr>)<pos:position pos:line="145" pos:column="28"/></condition><then pos:line="145" pos:column="28"> <block pos:line="145" pos:column="29">{
    <comment type="block" pos:line="146" pos:column="5">/* no waiting for the data connection so this is now complete */</comment>
    <expr_stmt><expr><operator pos:line="147" pos:column="5">*<pos:position pos:line="147" pos:column="6"/></operator><name pos:line="147" pos:column="6">completep<pos:position pos:line="147" pos:column="15"/></name> <operator pos:line="147" pos:column="16">=<pos:position pos:line="147" pos:column="17"/></operator> <literal type="number" pos:line="147" pos:column="18">1<pos:position pos:line="147" pos:column="19"/></literal></expr>;<pos:position pos:line="147" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">DEBUGF<pos:position pos:line="148" pos:column="11"/></name><argument_list pos:line="148" pos:column="11">(<argument><expr><call><name pos:line="148" pos:column="12">infof<pos:position pos:line="148" pos:column="17"/></name><argument_list pos:line="148" pos:column="17">(<argument><expr><name pos:line="148" pos:column="18">data<pos:position pos:line="148" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="24">"DO-MORE phase ends with %d\n"<pos:position pos:line="148" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="148" pos:column="56">(<pos:position pos:line="148" pos:column="57"/></operator><name pos:line="148" pos:column="57">int<pos:position pos:line="148" pos:column="60"/></name><operator pos:line="148" pos:column="60">)<pos:position pos:line="148" pos:column="61"/></operator><name pos:line="148" pos:column="61">result<pos:position pos:line="148" pos:column="67"/></name></expr></argument>)<pos:position pos:line="148" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="149" pos:column="4"/></block></then></if>

  <return pos:line="151" pos:column="3">return <expr><name pos:line="151" pos:column="10">result<pos:position pos:line="151" pos:column="16"/></name></expr>;<pos:position pos:line="151" pos:column="17"/></return>
}<pos:position pos:line="152" pos:column="2"/></block></function></unit>

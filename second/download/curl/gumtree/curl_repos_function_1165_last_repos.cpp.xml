<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1165_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_perform_fetch<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">IMAP<pos:position pos:line="4" pos:column="14"/></name></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">imap<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">data<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">req<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">.<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">protop<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Check we have a UID */</comment>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name><name pos:line="7" pos:column="7">imap<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">uid<pos:position pos:line="7" pos:column="16"/></name></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">failf<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name><name pos:line="8" pos:column="11">conn<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">data<pos:position pos:line="8" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"Cannot FETCH without a UID."<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Send the FETCH command */</comment>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">imap<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">partial<pos:position pos:line="13" pos:column="19"/></name></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">result<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">imap_sendf<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">conn<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"FETCH %s BODY[%s]&lt;%s&gt;"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="15" pos:column="25">imap<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">uid<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>,
                        <argument><expr><ternary><condition><expr><name><name pos:line="16" pos:column="25">imap<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">section<pos:position pos:line="16" pos:column="38"/></name></name></expr> ?<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <expr><name><name pos:line="16" pos:column="41">imap<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">section<pos:position pos:line="16" pos:column="54"/></name></name></expr> <pos:position pos:line="16" pos:column="55"/></then><else pos:line="16" pos:column="55">: <expr><literal type="string" pos:line="16" pos:column="57">""<pos:position pos:line="16" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
                        <argument><expr><name><name pos:line="17" pos:column="25">imap<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">partial<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">result<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">imap_sendf<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">conn<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"FETCH %s BODY[%s]"<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="20" pos:column="25">imap<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">uid<pos:position pos:line="20" pos:column="34"/></name></name></expr></argument>,
                        <argument><expr><ternary><condition><expr><name><name pos:line="21" pos:column="25">imap<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">section<pos:position pos:line="21" pos:column="38"/></name></name></expr> ?<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40"> <expr><name><name pos:line="21" pos:column="41">imap<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">section<pos:position pos:line="21" pos:column="54"/></name></name></expr> <pos:position pos:line="21" pos:column="55"/></then><else pos:line="21" pos:column="55">: <expr><literal type="string" pos:line="21" pos:column="57">""<pos:position pos:line="21" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt></block></else></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">result<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition><then pos:line="23" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">state<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">conn<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="17">IMAP_FETCH<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">result<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

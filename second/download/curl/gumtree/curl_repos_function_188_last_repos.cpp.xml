<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_188_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">url_fgets<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">ptr<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">size_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">size<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">URL_FILE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">file<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">want<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">size<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">-<pos:position pos:line="3" pos:column="23"/></operator> <literal type="number" pos:line="3" pos:column="24">1<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt><comment type="block" pos:line="3" pos:column="26">/* always need to leave room for zero termination */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">loop<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <switch pos:line="6" pos:column="3">switch<condition pos:line="6" pos:column="9">(<expr><name><name pos:line="6" pos:column="10">file<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">type<pos:position pos:line="6" pos:column="20"/></name></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">CFTYPE_FILE<pos:position pos:line="7" pos:column="19"/></name></expr>:<pos:position pos:line="7" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="8" pos:column="5">ptr<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">fgets<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">ptr<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">int<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">size<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="33">file<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">handle<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">file<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
    <break pos:line="9" pos:column="5">break;<pos:position pos:line="9" pos:column="11"/></break>

  <case pos:line="11" pos:column="3">case <expr><name pos:line="11" pos:column="8">CFTYPE_CURL<pos:position pos:line="11" pos:column="19"/></name></expr>:<pos:position pos:line="11" pos:column="20"/></case>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fill_buffer<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">file<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">want<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* check if there's data in the buffer - if not fill either errored or
     * EOF */</comment>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">!<pos:position pos:line="16" pos:column="9"/></operator><name><name pos:line="16" pos:column="9">file<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">buffer_pos<pos:position pos:line="16" pos:column="25"/></name></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* ensure only available data is considered */</comment>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name><name pos:line="20" pos:column="8">file<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">buffer_pos<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">&lt;<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="27">want<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">want<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">file<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">buffer_pos<pos:position pos:line="21" pos:column="30"/></name></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/*buffer contains data */</comment>
    <comment type="block" pos:line="24" pos:column="5">/* look for newline or eof */</comment>
    <for pos:line="25" pos:column="5">for<control pos:line="25" pos:column="8">(<init><expr><name pos:line="25" pos:column="9">loop<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></init> <condition><expr><name pos:line="25" pos:column="19">loop<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="26">want<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></condition> <incr><expr><name pos:line="25" pos:column="32">loop<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="39"/></control> <block pos:line="25" pos:column="40">{
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><name><name pos:line="26" pos:column="10">file<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">buffer<pos:position pos:line="26" pos:column="22"/></name><index pos:line="26" pos:column="22">[<expr><name pos:line="26" pos:column="23">loop<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name> <operator pos:line="26" pos:column="29">==<pos:position pos:line="26" pos:column="31"/></operator> <literal type="char" pos:line="26" pos:column="32">'\n'<pos:position pos:line="26" pos:column="36"/></literal></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37"> <block pos:line="26" pos:column="38">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">want<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">loop<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">+<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">1<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt><comment type="block" pos:line="27" pos:column="25">/* include newline */</comment>
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <comment type="block" pos:line="32" pos:column="5">/* xfer data to caller */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memcpy<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">ptr<pos:position pos:line="33" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="17">file<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">buffer<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">want<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">ptr<pos:position pos:line="34" pos:column="8"/></name><index pos:line="34" pos:column="8">[<expr><name pos:line="34" pos:column="9">want<pos:position pos:line="34" pos:column="13"/></name></expr>]<pos:position pos:line="34" pos:column="14"/></index></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt><comment type="block" pos:line="34" pos:column="19">/* always null terminate */</comment>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">use_buffer<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">file<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="22">want<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>

    <break pos:line="38" pos:column="5">break;<pos:position pos:line="38" pos:column="11"/></break>

  <default pos:line="40" pos:column="3">default:<pos:position pos:line="40" pos:column="11"/></default> <comment type="block" pos:line="40" pos:column="12">/* unknown or supported type - oh dear */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">ptr<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <name pos:line="41" pos:column="11">NULL<pos:position pos:line="41" pos:column="15"/></name></expr>;<pos:position pos:line="41" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">errno<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name pos:line="42" pos:column="13">EBADF<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
    <break pos:line="43" pos:column="5">break;<pos:position pos:line="43" pos:column="11"/></break>
  }<pos:position pos:line="44" pos:column="4"/></block></switch>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">ptr<pos:position pos:line="46" pos:column="13"/></name></expr>;<pos:position pos:line="46" pos:column="14"/></return><comment type="block" pos:line="46" pos:column="14">/*success */</comment>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

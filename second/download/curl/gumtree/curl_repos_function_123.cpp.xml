<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_123.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">ftp_connect<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">connectdata<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">conn<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* this is FTP and no proxy */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">nread<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">UrlData<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">data<pos:position pos:line="5" pos:column="23"/></name><init pos:line="5" pos:column="23">=<expr><name><name pos:line="5" pos:column="24">conn<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">data<pos:position pos:line="5" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">buffer<pos:position pos:line="6" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt> <comment type="block" pos:line="6" pos:column="29">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">FTP<pos:position pos:line="7" pos:column="13"/></name></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ftp<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">myalarm<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt> <comment type="block" pos:line="9" pos:column="15">/* switch off the alarm stuff */</comment>

  <expr_stmt><expr><name pos:line="11" pos:column="3">ftp<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator>struct <name pos:line="11" pos:column="17">FTP<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator><call><name pos:line="11" pos:column="23">malloc<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><sizeof pos:line="11" pos:column="30">sizeof<argument_list pos:line="11" pos:column="36">(<argument><expr pos:line="11" pos:column="37">struct <name pos:line="11" pos:column="44">FTP<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">ftp<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">ftp<pos:position pos:line="15" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="18">sizeof<argument_list pos:line="15" pos:column="24">(<argument><expr pos:line="15" pos:column="25">struct <name pos:line="15" pos:column="32">FTP<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">data<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">proto<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">ftp<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">ftp<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* get some initial data into the ftp struct */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">ftp<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">bytecountp<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name><name pos:line="19" pos:column="22">conn<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">bytecount<pos:position pos:line="19" pos:column="37"/></name></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">ftp<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">user<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name><name pos:line="20" pos:column="15">data<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">user<pos:position pos:line="20" pos:column="25"/></name></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">ftp<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">passwd<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name><name pos:line="21" pos:column="17">data<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">passwd<pos:position pos:line="21" pos:column="29"/></name></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* The first thing we do is wait for the "220*" line: */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">nread<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">GetLastResponse<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name><name pos:line="24" pos:column="27">data<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">firstsocket<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">buf<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">conn<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">nread<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">&lt;<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></return></block></then></if>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><call><name pos:line="27" pos:column="6">strncmp<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">buf<pos:position pos:line="27" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="19">"220"<pos:position pos:line="27" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="26">3<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29"> <block pos:line="27" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">failf<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">data<pos:position pos:line="28" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="17">"This doesn't seem like a nice ftp-server response"<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURLE_FTP_WEIRD_SERVER_REPLY<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* send USER */</comment>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sendf<pos:position pos:line="33" pos:column="8"/></name><argument_list pos:line="33" pos:column="8">(<argument><expr><name><name pos:line="33" pos:column="9">data<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">firstsocket<pos:position pos:line="33" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">data<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"USER %s\r\n"<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">ftp<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">user<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* wait for feedback */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">nread<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">GetLastResponse<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name><name pos:line="36" pos:column="27">data<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">firstsocket<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">buf<pos:position pos:line="36" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">conn<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name pos:line="37" pos:column="6">nread<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">&lt;<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></return></block></then></if>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><operator pos:line="40" pos:column="6">!<pos:position pos:line="40" pos:column="7"/></operator><call><name pos:line="40" pos:column="7">strncmp<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">buf<pos:position pos:line="40" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="20">"530"<pos:position pos:line="40" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="27">3<pos:position pos:line="40" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30"> <block pos:line="40" pos:column="31">{
    <comment type="block" pos:line="41" pos:column="5">/* 530 User ... access denied
       (the server denies to log the specified user) */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">failf<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">data<pos:position pos:line="43" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="17">"Access denied: %s"<pos:position pos:line="43" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="38">&amp;<pos:position pos:line="43" pos:column="43"/></operator><name><name pos:line="43" pos:column="39">buf<pos:position pos:line="43" pos:column="42"/></name><index pos:line="43" pos:column="42">[<expr><literal type="number" pos:line="43" pos:column="43">4<pos:position pos:line="43" pos:column="44"/></literal></expr>]<pos:position pos:line="43" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">CURLE_FTP_ACCESS_DENIED<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then>
  <elseif pos:line="46" pos:column="3">else <if pos:line="46" pos:column="8">if<condition pos:line="46" pos:column="10">(<expr><operator pos:line="46" pos:column="11">!<pos:position pos:line="46" pos:column="12"/></operator><call><name pos:line="46" pos:column="12">strncmp<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">buf<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"331"<pos:position pos:line="46" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="32">3<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35"> <block pos:line="46" pos:column="36">{
    <comment type="block" pos:line="47" pos:column="5">/* 331 Password required for ...
       (the server requires to send the user's password too) */</comment>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">sendf<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name><name pos:line="49" pos:column="11">data<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">firstsocket<pos:position pos:line="49" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">data<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"PASS %s\r\n"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="51">ftp<pos:position pos:line="49" pos:column="54"/></name><operator pos:line="49" pos:column="54">-&gt;<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="56">passwd<pos:position pos:line="49" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">nread<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">GetLastResponse<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name><name pos:line="50" pos:column="29">data<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">firstsocket<pos:position pos:line="50" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="48">buf<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">conn<pos:position pos:line="50" pos:column="57"/></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><name pos:line="51" pos:column="8">nread<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">&lt;<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></return></block></then></if>

    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><call><name pos:line="54" pos:column="9">strncmp<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">buf<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="22">"530"<pos:position pos:line="54" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="29">3<pos:position pos:line="54" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32"> <block pos:line="54" pos:column="33">{
      <comment type="block" pos:line="55" pos:column="7">/* 530 Login incorrect.
         (the username and/or the password are incorrect) */</comment>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">failf<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">data<pos:position pos:line="57" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="19">"the username and/or the password are incorrect"<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
      <return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">CURLE_FTP_USER_PASSWORD_INCORRECT<pos:position pos:line="58" pos:column="47"/></name></expr>;<pos:position pos:line="58" pos:column="48"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then>
    <elseif pos:line="60" pos:column="5">else <if pos:line="60" pos:column="10">if<condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><call><name pos:line="60" pos:column="14">strncmp<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">buf<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="27">"230"<pos:position pos:line="60" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="34">3<pos:position pos:line="60" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="37"/></condition><then pos:line="60" pos:column="37"> <block pos:line="60" pos:column="38">{
      <comment type="block" pos:line="61" pos:column="7">/* 230 User ... logged in.
         (user successfully logged in) */</comment>
        
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">infof<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"We have successfully logged in\n"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if></elseif>
    <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">failf<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">data<pos:position pos:line="67" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="19">"Odd return code after PASS"<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><name pos:line="68" pos:column="14">CURLE_FTP_WEIRD_PASS_REPLY<pos:position pos:line="68" pos:column="40"/></name></expr>;<pos:position pos:line="68" pos:column="41"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="71" pos:column="3">else <if pos:line="71" pos:column="8">if<condition pos:line="71" pos:column="10">(<expr><operator pos:line="71" pos:column="11">!<pos:position pos:line="71" pos:column="12"/></operator> <call><name pos:line="71" pos:column="13">strncmp<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">buf<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="26">"230"<pos:position pos:line="71" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="33">3<pos:position pos:line="71" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="36"/></condition><then pos:line="71" pos:column="36"> <block pos:line="71" pos:column="37">{
    <comment type="block" pos:line="72" pos:column="5">/* 230 User ... logged in.
       (the user logged in without password) */</comment>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">infof<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">data<pos:position pos:line="74" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="17">"We have successfully logged in\n"<pos:position pos:line="74" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if></elseif>
  <else pos:line="76" pos:column="3">else <block pos:line="76" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">failf<pos:position pos:line="77" pos:column="10"/></name><argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">data<pos:position pos:line="77" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="17">"Odd return code after USER"<pos:position pos:line="77" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
    <return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">CURLE_FTP_WEIRD_USER_REPLY<pos:position pos:line="78" pos:column="38"/></name></expr>;<pos:position pos:line="78" pos:column="39"/></return>
  }<pos:position pos:line="79" pos:column="4"/></block></else></if>

  <return pos:line="81" pos:column="3">return <expr><name pos:line="81" pos:column="10">CURLE_OK<pos:position pos:line="81" pos:column="18"/></name></expr>;<pos:position pos:line="81" pos:column="19"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

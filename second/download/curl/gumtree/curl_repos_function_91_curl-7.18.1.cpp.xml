<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_91_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">remsock<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">SockInfo<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">f<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">f<pos:position pos:line="3" pos:column="9"/></name></expr>)<pos:position pos:line="3" pos:column="10"/></condition><then pos:line="3" pos:column="10"> <block pos:line="3" pos:column="11">{ <return pos:line="3" pos:column="13">return;<pos:position pos:line="3" pos:column="20"/></return> }<pos:position pos:line="3" pos:column="22"/></block></then></if>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name><name pos:line="4" pos:column="7">f<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">-&gt;<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="10">evset<pos:position pos:line="4" pos:column="15"/></name></name></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16"> <block pos:line="4" pos:column="17">{ <expr_stmt><expr><call><name pos:line="4" pos:column="19">event_del<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">f<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">ev<pos:position pos:line="4" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt> }<pos:position pos:line="4" pos:column="39"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">free<pos:position pos:line="5" pos:column="7"/></name><argument_list pos:line="5" pos:column="7">(<argument><expr><name pos:line="5" pos:column="8">f<pos:position pos:line="5" pos:column="9"/></name></expr></argument>)<pos:position pos:line="5" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="11"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_951_curl-7.18.1.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Cookie<pos:position pos:line="1" pos:column="14"/></name></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">Curl_cookie_getlist<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">CookieInfo<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">c<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">host<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">path<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="3" pos:column="36">bool<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">secure<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Cookie<pos:position pos:line="5" pos:column="16"/></name></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">newco<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Cookie<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">co<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">time_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">now<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call><name pos:line="7" pos:column="16">time<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Cookie<pos:position pos:line="8" pos:column="16"/></name></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">mainco<pos:position pos:line="8" pos:column="24"/></name><init pos:line="8" pos:column="24">=<expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">c<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">||<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><name><name pos:line="10" pos:column="13">c<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">cookies<pos:position pos:line="10" pos:column="23"/></name></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="11" pos:column="18">/* no cookie struct or no cookies in the struct */</comment>

  <expr_stmt><expr><name pos:line="13" pos:column="3">co<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <name><name pos:line="13" pos:column="8">c<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">cookies<pos:position pos:line="13" pos:column="18"/></name></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>

  <while pos:line="15" pos:column="3">while<condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">co<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition> <block pos:line="15" pos:column="13">{
    <comment type="block" pos:line="16" pos:column="5">/* only process this cookie if it is not expired or had no expire
       date AND that if the cookie requires we're secure we must only
       continue if we are! */</comment>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">( <expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">co<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">expires<pos:position pos:line="19" pos:column="21"/></name></name><operator pos:line="19" pos:column="21">&lt;=<pos:position pos:line="19" pos:column="26"/></operator><literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal> <operator pos:line="19" pos:column="25">||<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><name><name pos:line="19" pos:column="29">co<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">expires<pos:position pos:line="19" pos:column="40"/></name></name><operator pos:line="19" pos:column="40">&gt;<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="42">now<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="48">&amp;&amp;<pos:position pos:line="19" pos:column="58"/></operator>
        <operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="20" pos:column="10">co<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">secure<pos:position pos:line="20" pos:column="20"/></name></name></expr>?<pos:position pos:line="20" pos:column="21"/></condition><then><expr><name pos:line="20" pos:column="21">secure<pos:position pos:line="20" pos:column="27"/></name></expr></then><else pos:line="20" pos:column="27">:<expr><name pos:line="20" pos:column="28">TRUE<pos:position pos:line="20" pos:column="32"/></name></expr></else></ternary><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator></expr> )<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{

      <comment type="block" pos:line="22" pos:column="7">/* now check if the domain is correct */</comment>
      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">!<pos:position pos:line="23" pos:column="11"/></operator><name><name pos:line="23" pos:column="11">co<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">domain<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">||<pos:position pos:line="23" pos:column="24"/></operator>
         <operator pos:line="24" pos:column="10">(<pos:position pos:line="24" pos:column="11"/></operator><name><name pos:line="24" pos:column="11">co<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">tailmatch<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="28">tailmatch<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">co<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">domain<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">host<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator> <operator pos:line="24" pos:column="57">||<pos:position pos:line="24" pos:column="59"/></operator>
         <operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><operator pos:line="25" pos:column="11">!<pos:position pos:line="25" pos:column="12"/></operator><name><name pos:line="25" pos:column="12">co<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">tailmatch<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">&amp;&amp;<pos:position pos:line="25" pos:column="36"/></operator> <call><name pos:line="25" pos:column="29">strequal<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">host<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="44">co<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">domain<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call><operator pos:line="25" pos:column="55">)<pos:position pos:line="25" pos:column="56"/></operator></expr> )<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58"> <block pos:line="25" pos:column="59">{
        <comment type="block" pos:line="26" pos:column="9">/* the right part of the host matches the domain stuff in the
           cookie data */</comment>

        <comment type="block" pos:line="29" pos:column="9">/* now check the left part of the path with the cookies path
           requirement */</comment>
        <if pos:line="31" pos:column="9">if<condition pos:line="31" pos:column="11">(<expr><operator pos:line="31" pos:column="12">!<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="13">co<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">path<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">||<pos:position pos:line="31" pos:column="24"/></operator>
           <comment type="block" pos:line="32" pos:column="12">/* not using checkprefix() because matching should be
              case-sensitive */</comment>
           <operator pos:line="34" pos:column="12">!<pos:position pos:line="34" pos:column="13"/></operator><call><name pos:line="34" pos:column="13">strncmp<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name><name pos:line="34" pos:column="21">co<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">path<pos:position pos:line="34" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">path<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="37">strlen<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name><name pos:line="34" pos:column="44">co<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">path<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr> )<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56"> <block pos:line="34" pos:column="57">{

          <comment type="block" pos:line="36" pos:column="11">/* and now, we know this is a match and we should create an
             entry for the return-linked-list */</comment>

          <expr_stmt><expr><name pos:line="39" pos:column="11">newco<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <operator pos:line="39" pos:column="19">(<pos:position pos:line="39" pos:column="20"/></operator>struct <name pos:line="39" pos:column="27">Cookie<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><operator pos:line="39" pos:column="35">)<pos:position pos:line="39" pos:column="36"/></operator><call><name pos:line="39" pos:column="36">malloc<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><sizeof pos:line="39" pos:column="43">sizeof<argument_list pos:line="39" pos:column="49">(<argument><expr pos:line="39" pos:column="50">struct <name pos:line="39" pos:column="57">Cookie<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
          <if pos:line="40" pos:column="11">if<condition pos:line="40" pos:column="13">(<expr><name pos:line="40" pos:column="14">newco<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
            <comment type="block" pos:line="41" pos:column="13">/* first, copy the whole source cookie: */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">memcpy<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">newco<pos:position pos:line="42" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="27">co<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="31">sizeof<argument_list pos:line="42" pos:column="37">(<argument><expr pos:line="42" pos:column="38">struct <name pos:line="42" pos:column="45">Cookie<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>

            <comment type="block" pos:line="44" pos:column="13">/* then modify our next */</comment>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">newco<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">next<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">mainco<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>

            <comment type="block" pos:line="47" pos:column="13">/* point the main to us */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">mainco<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">newco<pos:position pos:line="48" pos:column="27"/></name></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
          }<pos:position pos:line="49" pos:column="12"/></block></then>
          <else pos:line="50" pos:column="11">else <block pos:line="50" pos:column="16">{
            <comment type="block" pos:line="51" pos:column="13">/* failure, clear up the allocated chain and return NULL */</comment>
            <while pos:line="52" pos:column="13">while<condition pos:line="52" pos:column="18">(<expr><name pos:line="52" pos:column="19">mainco<pos:position pos:line="52" pos:column="25"/></name></expr>)<pos:position pos:line="52" pos:column="26"/></condition> <block pos:line="52" pos:column="27">{
              <expr_stmt><expr><name pos:line="53" pos:column="15">co<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name><name pos:line="53" pos:column="20">mainco<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">next<pos:position pos:line="53" pos:column="32"/></name></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="54" pos:column="15">free<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">mainco<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
              <expr_stmt><expr><name pos:line="55" pos:column="15">mainco<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">co<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></while>

            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">NULL<pos:position pos:line="58" pos:column="24"/></name></expr>;<pos:position pos:line="58" pos:column="25"/></return>
          }<pos:position pos:line="59" pos:column="12"/></block></else></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="63" pos:column="5">co<pos:position pos:line="63" pos:column="7"/></name> <operator pos:line="63" pos:column="8">=<pos:position pos:line="63" pos:column="9"/></operator> <name><name pos:line="63" pos:column="10">co<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">next<pos:position pos:line="63" pos:column="18"/></name></name></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></while>

  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">mainco<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return> <comment type="block" pos:line="66" pos:column="18">/* return the new list */</comment>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

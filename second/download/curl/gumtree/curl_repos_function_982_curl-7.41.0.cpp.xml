<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_982_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_negotiate<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">bool<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">proxy<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">negotiatedata<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">neg_ctx<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><ternary><condition><expr><name pos:line="3" pos:column="35">proxy<pos:position pos:line="3" pos:column="40"/></name></expr>?<pos:position pos:line="3" pos:column="41"/></condition><then><expr><operator pos:line="3" pos:column="41">&amp;<pos:position pos:line="3" pos:column="46"/></operator><name><name pos:line="3" pos:column="42">conn<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">-&gt;<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="48">data<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">-&gt;<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="54">state<pos:position pos:line="3" pos:column="59"/></name><operator pos:line="3" pos:column="59">.<pos:position pos:line="3" pos:column="60"/></operator><name pos:line="3" pos:column="60">proxyneg<pos:position pos:line="3" pos:column="68"/></name></name></expr></then><else pos:line="3" pos:column="68">:
    <expr><operator pos:line="4" pos:column="5">&amp;<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="6">conn<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">data<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">state<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">negotiate<pos:position pos:line="4" pos:column="33"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">encoded<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">userp<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">OM_uint32<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">discard_st<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">result<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">Curl_base64_encode<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">conn<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">data<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="12" pos:column="31">neg_ctx<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">output_token<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">.<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">value<pos:position pos:line="12" pos:column="58"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="13" pos:column="31">neg_ctx<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">output_token<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">length<pos:position pos:line="13" pos:column="59"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="32">encoded<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="42">len<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">result<pos:position pos:line="15" pos:column="12"/></name></expr>)<pos:position pos:line="15" pos:column="13"/></condition><then pos:line="15" pos:column="13"> <block pos:line="15" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">gss_release_buffer<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="25">discard_st<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name><name pos:line="16" pos:column="38">neg_ctx<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">output_token<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">neg_ctx<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">output_token<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">value<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">NULL<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">neg_ctx<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">output_token<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">length<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">result<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">encoded<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">||<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">!<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">len<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">gss_release_buffer<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">discard_st<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name><name pos:line="23" pos:column="38">neg_ctx<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">output_token<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">neg_ctx<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">output_token<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">value<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">neg_ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">output_token<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">.<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">length<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">userp<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">aprintf<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><literal type="string" pos:line="29" pos:column="19">"%sAuthorization: Negotiate %s\r\n"<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="56">proxy<pos:position pos:line="29" pos:column="61"/></name></expr> ?<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63"> <expr><literal type="string" pos:line="29" pos:column="64">"Proxy-"<pos:position pos:line="29" pos:column="72"/></literal></expr> <pos:position pos:line="29" pos:column="73"/></then><else pos:line="29" pos:column="73">: <expr><literal type="string" pos:line="29" pos:column="75">""<pos:position pos:line="29" pos:column="77"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><name pos:line="30" pos:column="19">encoded<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">proxy<pos:position pos:line="31" pos:column="11"/></name></expr>)<pos:position pos:line="31" pos:column="12"/></condition><then pos:line="31" pos:column="12"> <block pos:line="31" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">Curl_safefree<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">conn<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">allocptr<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">proxyuserpwd<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">conn<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">allocptr<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">proxyuserpwd<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">userp<pos:position pos:line="33" pos:column="40"/></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then>
  <else pos:line="35" pos:column="3">else <block pos:line="35" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">Curl_safefree<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name><name pos:line="36" pos:column="19">conn<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">allocptr<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">.<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">userpwd<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">conn<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">allocptr<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">userpwd<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">userp<pos:position pos:line="37" pos:column="35"/></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">Curl_safefree<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name pos:line="40" pos:column="17">encoded<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

  <return pos:line="42" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="42" pos:column="10">(<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">userp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">==<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">NULL<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">)<pos:position pos:line="42" pos:column="25"/></operator></expr> ?<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <expr><name pos:line="42" pos:column="28">CURLE_OUT_OF_MEMORY<pos:position pos:line="42" pos:column="47"/></name></expr> <pos:position pos:line="42" pos:column="48"/></then><else pos:line="42" pos:column="48">: <expr><name pos:line="42" pos:column="50">CURLE_OK<pos:position pos:line="42" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="59"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

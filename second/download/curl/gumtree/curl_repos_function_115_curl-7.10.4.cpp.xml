<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_115_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">checkhttpprefix<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">SessionHandle<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">data<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">s<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="31"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">curl_slist<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">head<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">data<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">set<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">http200aliases<pos:position pos:line="5" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><name pos:line="7" pos:column="10">head<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition> <block pos:line="7" pos:column="16">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">checkprefix<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">head<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">data<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">s<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><name pos:line="9" pos:column="14">TRUE<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">head<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name><name pos:line="10" pos:column="12">head<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">next<pos:position pos:line="10" pos:column="22"/></name></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></while>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><call><name pos:line="13" pos:column="6">checkprefix<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><literal type="string" pos:line="13" pos:column="18">"HTTP/"<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">s<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">TRUE<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">FALSE<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

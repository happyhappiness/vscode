<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_424_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">getpass_r<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">prompt<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buffer<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">buflen<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">printf<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="string" pos:line="4" pos:column="10">"%s"<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="16">prompt<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
 
  <for pos:line="6" pos:column="3">for<control pos:line="6" pos:column="6">(<init><expr><name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator><literal type="number" pos:line="6" pos:column="9">0<pos:position pos:line="6" pos:column="10"/></literal></expr>;<pos:position pos:line="6" pos:column="11"/></init> <condition><expr><name pos:line="6" pos:column="12">i<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">&lt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">buflen<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></condition> <incr><expr><name pos:line="6" pos:column="22">i<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">++<pos:position pos:line="6" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="26"/></control> <block pos:line="6" pos:column="27">{
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">buffer<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">i<pos:position pos:line="7" pos:column="13"/></name></expr>]<pos:position pos:line="7" pos:column="14"/></index></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">getch<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><name><name pos:line="8" pos:column="10">buffer<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name></expr>]<pos:position pos:line="8" pos:column="19"/></index></name> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <literal type="char" pos:line="8" pos:column="23">'\r'<pos:position pos:line="8" pos:column="27"/></literal></expr> )<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">buffer<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name></expr>]<pos:position pos:line="9" pos:column="16"/></index></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
      <break pos:line="10" pos:column="7">break;<pos:position pos:line="10" pos:column="13"/></break>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
  }<pos:position pos:line="12" pos:column="4"/></block></for>
  <comment type="block" pos:line="13" pos:column="3">/* if user didn't hit ENTER, terminate buffer */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">i<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">==<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">buflen<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="5">buffer<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><name pos:line="15" pos:column="12">buflen<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-<pos:position pos:line="15" pos:column="19"/></operator><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr>]<pos:position pos:line="15" pos:column="21"/></index></name><operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt></block></then></if>

  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">buffer<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return> <comment type="block" pos:line="17" pos:column="18">/* we always return success */</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2450_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">gskit_connect_step3<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">sockindex<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_easy<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">data<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ssl_connect_data<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">connssl<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator><name><name pos:line="4" pos:column="39">conn<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">ssl<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><name pos:line="4" pos:column="49">sockindex<pos:position pos:line="4" pos:column="58"/></name></expr>]<pos:position pos:line="4" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">gsk_cert_data_elem<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">cdev<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">cdec<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">gsk_cert_data_elem<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">p<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">cert<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><specifier pos:line="8" pos:column="23">const<pos:position pos:line="8" pos:column="28"/></specifier> <name pos:line="8" pos:column="29">char<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">NULL<pos:position pos:line="8" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">certend<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">ptr<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">CURLcode<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">result<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* SSL handshake done: gather certificate info and verify host. */</comment>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><call><name pos:line="16" pos:column="6">gskit_status<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">data<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="25">gsk_attribute_get_cert_info<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name><name pos:line="16" pos:column="53">BACKEND<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">-&gt;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="62">handle<pos:position pos:line="16" pos:column="68"/></name></name></expr></argument>,
                                                    <argument><expr><name pos:line="17" pos:column="53">GSK_PARTNER_CERT_INFO<pos:position pos:line="17" pos:column="74"/></name></expr></argument>,
                                                    <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">cdev<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="60">&amp;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="61">cdec<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="string" pos:line="19" pos:column="19">"gsk_attribute_get_cert_info()"<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="19" pos:column="75"/></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call> <operator pos:line="19" pos:column="77">==<pos:position pos:line="19" pos:column="79"/></operator>
     <name pos:line="20" pos:column="6">CURLE_OK<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15"> <block pos:line="20" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">infof<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">data<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="17">"Server certificate:\n"<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">p<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">cdev<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
    <for pos:line="23" pos:column="5">for<control pos:line="23" pos:column="8">(<init><expr><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></init> <condition><expr><name pos:line="23" pos:column="16">i<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">++<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">&lt;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="22">cdec<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></condition> <incr><expr><name pos:line="23" pos:column="28">p<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">++<pos:position pos:line="23" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="32"/></control>
      <block type="pseudo"><switch pos:line="24" pos:column="7">switch<condition pos:line="24" pos:column="13">(<expr><name><name pos:line="24" pos:column="14">p<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">cert_data_id<pos:position pos:line="24" pos:column="29"/></name></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition> <block pos:line="24" pos:column="31">{
      <case pos:line="25" pos:column="7">case <expr><name pos:line="25" pos:column="12">CERT_BODY_DER<pos:position pos:line="25" pos:column="25"/></name></expr>:<pos:position pos:line="25" pos:column="26"/></case>
        <expr_stmt><expr><name pos:line="26" pos:column="9">cert<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name><name pos:line="26" pos:column="16">p<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">cert_data_p<pos:position pos:line="26" pos:column="30"/></name></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">certend<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">cert<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">cdev<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">cert_data_l<pos:position pos:line="27" pos:column="43"/></name></name></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
      <case pos:line="29" pos:column="7">case <expr><name pos:line="29" pos:column="12">CERT_DN_PRINTABLE<pos:position pos:line="29" pos:column="29"/></name></expr>:<pos:position pos:line="29" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">infof<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">data<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="21">"\t subject: %.*s\n"<pos:position pos:line="30" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">p<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">-&gt;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="46">cert_data_l<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="59">p<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-&gt;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="62">cert_data_p<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
      <case pos:line="32" pos:column="7">case <expr><name pos:line="32" pos:column="12">CERT_ISSUER_DN_PRINTABLE<pos:position pos:line="32" pos:column="36"/></name></expr>:<pos:position pos:line="32" pos:column="37"/></case>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">infof<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">data<pos:position pos:line="33" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="21">"\t issuer: %.*s\n"<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="42">p<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">cert_data_l<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">p<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">cert_data_p<pos:position pos:line="33" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
      <case pos:line="35" pos:column="7">case <expr><name pos:line="35" pos:column="12">CERT_VALID_FROM<pos:position pos:line="35" pos:column="27"/></name></expr>:<pos:position pos:line="35" pos:column="28"/></case>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">infof<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">data<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="21">"\t start date: %.*s\n"<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">p<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">cert_data_l<pos:position pos:line="36" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="62">p<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">-&gt;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="65">cert_data_p<pos:position pos:line="36" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="78"/></expr_stmt>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>
      <case pos:line="38" pos:column="7">case <expr><name pos:line="38" pos:column="12">CERT_VALID_TO<pos:position pos:line="38" pos:column="25"/></name></expr>:<pos:position pos:line="38" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">infof<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">data<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"\t expire date: %.*s\n"<pos:position pos:line="39" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="47">p<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">cert_data_l<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="63">p<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">-&gt;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="66">cert_data_p<pos:position pos:line="39" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="79"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block></switch></block></for>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="44" pos:column="3">/* Verify host. */</comment>
  <expr_stmt><expr><name pos:line="45" pos:column="3">result<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name pos:line="45" pos:column="12">Curl_verifyhost<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">conn<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">cert<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">certend<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">result<pos:position pos:line="46" pos:column="12"/></name></expr>)<pos:position pos:line="46" pos:column="13"/></condition><then pos:line="46" pos:column="13">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">result<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="49" pos:column="3">/* The only place GSKit can get the whole CA chain is a validation
     callback where no user data pointer is available. Therefore it's not
     possible to copy this chain into our structures for CAINFO.
     However the server certificate may be available, thus we can return
     info about it. */</comment>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name><name pos:line="54" pos:column="6">data<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">set<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">ssl<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">certinfo<pos:position pos:line="54" pos:column="28"/></name></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <block pos:line="54" pos:column="30">{
    <expr_stmt><expr><name pos:line="55" pos:column="5">result<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">Curl_ssl_init_certinfo<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">data<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="43">1<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name pos:line="56" pos:column="8">result<pos:position pos:line="56" pos:column="14"/></name></expr>)<pos:position pos:line="56" pos:column="15"/></condition><then pos:line="56" pos:column="15">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">result<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></return></block></then></if>

    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">cert<pos:position pos:line="59" pos:column="12"/></name></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13"> <block pos:line="59" pos:column="14">{
      <expr_stmt><expr><name pos:line="60" pos:column="7">result<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <call><name pos:line="60" pos:column="16">Curl_extract_certinfo<pos:position pos:line="60" pos:column="37"/></name><argument_list pos:line="60" pos:column="37">(<argument><expr><name pos:line="60" pos:column="38">conn<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="44">0<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="47">cert<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">certend<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><name pos:line="61" pos:column="10">result<pos:position pos:line="61" pos:column="16"/></name></expr>)<pos:position pos:line="61" pos:column="17"/></condition><then pos:line="61" pos:column="17">
        <block type="pseudo"><return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">result<pos:position pos:line="62" pos:column="22"/></name></expr>;<pos:position pos:line="62" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="66" pos:column="3">/* Check pinned public key. */</comment>
  <expr_stmt><expr><name pos:line="67" pos:column="3">ptr<pos:position pos:line="67" pos:column="6"/></name> <operator pos:line="67" pos:column="7">=<pos:position pos:line="67" pos:column="8"/></operator> <ternary><condition><expr><call><name pos:line="67" pos:column="9">SSL_IS_PROXY<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">()<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr> ?<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25"> <expr><name><name pos:line="67" pos:column="26">data<pos:position pos:line="67" pos:column="30"/></name><operator pos:line="67" pos:column="30">-&gt;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="32">set<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">.<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="36">str<pos:position pos:line="67" pos:column="39"/></name><index pos:line="67" pos:column="39">[<expr><name pos:line="67" pos:column="40">STRING_SSL_PINNEDPUBLICKEY_PROXY<pos:position pos:line="67" pos:column="72"/></name></expr>]<pos:position pos:line="67" pos:column="73"/></index></name></expr> <pos:position pos:line="67" pos:column="74"/></then><else pos:line="67" pos:column="74">:
                         <expr><name><name pos:line="68" pos:column="26">data<pos:position pos:line="68" pos:column="30"/></name><operator pos:line="68" pos:column="30">-&gt;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="32">set<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">.<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="36">str<pos:position pos:line="68" pos:column="39"/></name><index pos:line="68" pos:column="39">[<expr><name pos:line="68" pos:column="40">STRING_SSL_PINNEDPUBLICKEY_ORIG<pos:position pos:line="68" pos:column="71"/></name></expr>]<pos:position pos:line="68" pos:column="72"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="68" pos:column="73"/></expr_stmt>
  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">(<expr><operator pos:line="69" pos:column="6">!<pos:position pos:line="69" pos:column="7"/></operator><name pos:line="69" pos:column="7">result<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">&amp;&amp;<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="17">ptr<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21"> <block pos:line="69" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">curl_X509certificate<pos:position pos:line="70" pos:column="25"/></name></type> <name pos:line="70" pos:column="26">x509<pos:position pos:line="70" pos:column="30"/></name></decl>;<pos:position pos:line="70" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">curl_asn1Element<pos:position pos:line="71" pos:column="21"/></name> <modifier pos:line="71" pos:column="22">*<pos:position pos:line="71" pos:column="23"/></modifier></type><name pos:line="71" pos:column="23">p<pos:position pos:line="71" pos:column="24"/></name></decl>;<pos:position pos:line="71" pos:column="25"/></decl_stmt>

    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><call><name pos:line="73" pos:column="8">Curl_parseX509<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><operator pos:line="73" pos:column="23">&amp;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="24">x509<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">cert<pos:position pos:line="73" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="36">certend<pos:position pos:line="73" pos:column="43"/></name></expr></argument>)<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="45"/></condition><then pos:line="73" pos:column="45">
      <block type="pseudo"><return pos:line="74" pos:column="7">return <expr><name pos:line="74" pos:column="14">CURLE_SSL_PINNEDPUBKEYNOTMATCH<pos:position pos:line="74" pos:column="44"/></name></expr>;<pos:position pos:line="74" pos:column="45"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="75" pos:column="5">p<pos:position pos:line="75" pos:column="6"/></name> <operator pos:line="75" pos:column="7">=<pos:position pos:line="75" pos:column="8"/></operator> <operator pos:line="75" pos:column="9">&amp;<pos:position pos:line="75" pos:column="14"/></operator><name><name pos:line="75" pos:column="10">x509<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">.<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="15">subjectPublicKeyInfo<pos:position pos:line="75" pos:column="35"/></name></name></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">result<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">=<pos:position pos:line="76" pos:column="13"/></operator> <call><name pos:line="76" pos:column="14">Curl_pin_peer_pubkey<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">data<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">ptr<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="46">p<pos:position pos:line="76" pos:column="47"/></name><operator pos:line="76" pos:column="47">-&gt;<pos:position pos:line="76" pos:column="52"/></operator><name pos:line="76" pos:column="49">header<pos:position pos:line="76" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="57">p<pos:position pos:line="76" pos:column="58"/></name><operator pos:line="76" pos:column="58">-&gt;<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="60">end<pos:position pos:line="76" pos:column="63"/></name></name> <operator pos:line="76" pos:column="64">-<pos:position pos:line="76" pos:column="65"/></operator> <name><name pos:line="76" pos:column="66">p<pos:position pos:line="76" pos:column="67"/></name><operator pos:line="76" pos:column="67">-&gt;<pos:position pos:line="76" pos:column="72"/></operator><name pos:line="76" pos:column="69">header<pos:position pos:line="76" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">(<expr><name pos:line="77" pos:column="8">result<pos:position pos:line="77" pos:column="14"/></name></expr>)<pos:position pos:line="77" pos:column="15"/></condition><then pos:line="77" pos:column="15"> <block pos:line="77" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">failf<pos:position pos:line="78" pos:column="12"/></name><argument_list pos:line="78" pos:column="12">(<argument><expr><name pos:line="78" pos:column="13">data<pos:position pos:line="78" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="19">"SSL: public key does not match pinned public key!"<pos:position pos:line="78" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="72"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><name pos:line="79" pos:column="14">result<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="83" pos:column="3">connssl<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">connecting_state<pos:position pos:line="83" pos:column="28"/></name></name> <operator pos:line="83" pos:column="29">=<pos:position pos:line="83" pos:column="30"/></operator> <name pos:line="83" pos:column="31">ssl_connect_done<pos:position pos:line="83" pos:column="47"/></name></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
  <return pos:line="84" pos:column="3">return <expr><name pos:line="84" pos:column="10">CURLE_OK<pos:position pos:line="84" pos:column="18"/></name></expr>;<pos:position pos:line="84" pos:column="19"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

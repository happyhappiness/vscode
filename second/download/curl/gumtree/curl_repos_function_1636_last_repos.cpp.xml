<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1636_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_expire<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">Curl_easy<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">data<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">time_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">milli<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">expire_id<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">id<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">multi<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curltime<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">nowp<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">data<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">state<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">expiretime<pos:position pos:line="4" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curltime<pos:position pos:line="6" pos:column="18"/></name></name></type> <name pos:line="6" pos:column="19">set<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* this is only interesting while there is still an associated multi struct
     remaining! */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">multi<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUGASSERT<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">id<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&lt;<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="20">EXPIRE_LAST<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">set<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">Curl_tvnow<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">set<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">tv_sec<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">+=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">milli<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">/<pos:position pos:line="16" pos:column="23"/></operator><literal type="number" pos:line="16" pos:column="23">1000<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">set<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">tv_usec<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">+=<pos:position pos:line="17" pos:column="17"/></operator> <call pos:line="17" pos:column="18">(<name pos:line="17" pos:column="19">unsigned<pos:position pos:line="17" pos:column="27"/></name> <name pos:line="17" pos:column="28">int<pos:position pos:line="17" pos:column="31"/></name>)<argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">milli<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">%<pos:position pos:line="17" pos:column="39"/></operator><literal type="number" pos:line="17" pos:column="39">1000<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call><operator pos:line="17" pos:column="44">*<pos:position pos:line="17" pos:column="45"/></operator><literal type="number" pos:line="17" pos:column="45">1000<pos:position pos:line="17" pos:column="49"/></literal></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name><name pos:line="19" pos:column="6">set<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">.<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">tv_usec<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">&gt;=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="21">1000000<pos:position pos:line="19" pos:column="28"/></literal></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <block pos:line="19" pos:column="30">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">set<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">tv_sec<pos:position pos:line="20" pos:column="15"/></name></name><operator pos:line="20" pos:column="15">++<pos:position pos:line="20" pos:column="17"/></operator></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">set<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">tv_usec<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">-=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">1000000<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Remove any timer with the same id just in case. */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">multi_deltimeout<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">data<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">id<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Add it to the timer list.  It must stay in the list until it has expired
     in case we need to recompute the minimum timer later. */</comment>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">multi_addtimeout<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">data<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">set<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">id<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name><name pos:line="31" pos:column="6">nowp<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">tv_sec<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">||<pos:position pos:line="31" pos:column="21"/></operator> <name><name pos:line="31" pos:column="22">nowp<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">tv_usec<pos:position pos:line="31" pos:column="35"/></name></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block pos:line="31" pos:column="37">{
    <comment type="block" pos:line="32" pos:column="5">/* This means that the struct is added as a node in the splay tree.
       Compare if the new time is earlier, and only remove-old/add-new if it
       is. */</comment>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">time_t<pos:position pos:line="35" pos:column="11"/></name></type> <name pos:line="35" pos:column="12">diff<pos:position pos:line="35" pos:column="16"/></name> <init pos:line="35" pos:column="17">= <expr><call><name pos:line="35" pos:column="19">curlx_tvdiff<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">set<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="37">*<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">nowp<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="44"/></decl_stmt>

    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">diff<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">&gt;<pos:position pos:line="37" pos:column="17"/></operator> <literal type="number" pos:line="37" pos:column="15">0<pos:position pos:line="37" pos:column="16"/></literal></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17"> <block pos:line="37" pos:column="18">{
      <comment type="block" pos:line="38" pos:column="7">/* The current splay tree entry is sooner than this new expiry time.
         We don't need to update our splay tree entry. */</comment>
      <return pos:line="40" pos:column="7">return;<pos:position pos:line="40" pos:column="14"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* Since this is an updated time, we must remove the previous entry from
       the splay tree first and then re-add the new value */</comment>
    <expr_stmt><expr><name pos:line="45" pos:column="5">rc<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">=<pos:position pos:line="45" pos:column="9"/></operator> <call><name pos:line="45" pos:column="10">Curl_splayremovebyaddr<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name><name pos:line="45" pos:column="33">multi<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">timetree<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="46" pos:column="33">&amp;<pos:position pos:line="46" pos:column="38"/></operator><name><name pos:line="46" pos:column="34">data<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">state<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">.<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">timenode<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name><name pos:line="47" pos:column="34">multi<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">timetree<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">rc<pos:position pos:line="48" pos:column="10"/></name></expr>)<pos:position pos:line="48" pos:column="11"/></condition><then pos:line="48" pos:column="11">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="7">infof<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">data<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"Internal error removing splay node = %d\n"<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="64">rc<pos:position pos:line="49" pos:column="66"/></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* Indicate that we are in the splay tree and insert the new timer expiry
     value since it is our local minimum. */</comment>
  <expr_stmt><expr><operator pos:line="54" pos:column="3">*<pos:position pos:line="54" pos:column="4"/></operator><name pos:line="54" pos:column="4">nowp<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">=<pos:position pos:line="54" pos:column="10"/></operator> <name pos:line="54" pos:column="11">set<pos:position pos:line="54" pos:column="14"/></name></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">data<pos:position pos:line="55" pos:column="7"/></name><operator pos:line="55" pos:column="7">-&gt;<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="9">state<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">timenode<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">payload<pos:position pos:line="55" pos:column="31"/></name></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">data<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">multi<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">-&gt;<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="10">timetree<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">Curl_splayinsert<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><operator pos:line="56" pos:column="38">*<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">nowp<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">multi<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">-&gt;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="52">timetree<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="57" pos:column="38">&amp;<pos:position pos:line="57" pos:column="43"/></operator><name><name pos:line="57" pos:column="39">data<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">-&gt;<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="45">state<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">.<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">timenode<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

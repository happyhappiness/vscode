<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2329_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_gssapi_user_message<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">Curl_easy<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">data<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">userp<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="3" pos:column="47">const<pos:position pos:line="3" pos:column="52"/></specifier> <name pos:line="3" pos:column="53">char<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">passwdp<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="4" pos:column="47">const<pos:position pos:line="4" pos:column="52"/></specifier> <name pos:line="4" pos:column="53">char<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">service<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="5" pos:column="47">const<pos:position pos:line="5" pos:column="52"/></specifier> <name pos:line="5" pos:column="53">char<pos:position pos:line="5" pos:column="57"/></name> <modifier pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></modifier></type><name pos:line="5" pos:column="59">host<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="6" pos:column="47">const<pos:position pos:line="6" pos:column="52"/></specifier> <name pos:line="6" pos:column="53">bool<pos:position pos:line="6" pos:column="57"/></name></type> <name pos:line="6" pos:column="58">mutual_auth<pos:position pos:line="6" pos:column="69"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="7" pos:column="47">const<pos:position pos:line="7" pos:column="52"/></specifier> <name pos:line="7" pos:column="53">char<pos:position pos:line="7" pos:column="57"/></name> <modifier pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></modifier></type><name pos:line="7" pos:column="59">chlg64<pos:position pos:line="7" pos:column="65"/></name></decl></parameter>,
                                              <parameter><decl><type><name><name pos:line="8" pos:column="47">struct<pos:position pos:line="8" pos:column="53"/></name> <name pos:line="8" pos:column="54">kerberos5data<pos:position pos:line="8" pos:column="67"/></name></name> <modifier pos:line="8" pos:column="68">*<pos:position pos:line="8" pos:column="69"/></modifier></type><name pos:line="8" pos:column="69">krb5<pos:position pos:line="8" pos:column="73"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="9" pos:column="47">char<pos:position pos:line="9" pos:column="51"/></name> <modifier pos:line="9" pos:column="52">*<pos:position pos:line="9" pos:column="53"/></modifier><modifier pos:line="9" pos:column="53">*<pos:position pos:line="9" pos:column="54"/></modifier></type><name pos:line="9" pos:column="54">outptr<pos:position pos:line="9" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="9" pos:column="62">size_t<pos:position pos:line="9" pos:column="68"/></name> <modifier pos:line="9" pos:column="69">*<pos:position pos:line="9" pos:column="70"/></modifier></type><name pos:line="9" pos:column="70">outlen<pos:position pos:line="9" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="77"/></parameter_list>
<block pos:line="10" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">CURLcode<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">CURLE_OK<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">chlglen<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">chlg<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">OM_uint32<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">major_status<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">OM_uint32<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">minor_status<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">OM_uint32<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">unused_status<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">gss_buffer_desc<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">spn_token<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><name pos:line="17" pos:column="31">GSS_C_EMPTY_BUFFER<pos:position pos:line="17" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">gss_buffer_desc<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">input_token<pos:position pos:line="18" pos:column="30"/></name> <init pos:line="18" pos:column="31">= <expr><name pos:line="18" pos:column="33">GSS_C_EMPTY_BUFFER<pos:position pos:line="18" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">gss_buffer_desc<pos:position pos:line="19" pos:column="18"/></name></type> <name pos:line="19" pos:column="19">output_token<pos:position pos:line="19" pos:column="31"/></name> <init pos:line="19" pos:column="32">= <expr><name pos:line="19" pos:column="34">GSS_C_EMPTY_BUFFER<pos:position pos:line="19" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="53"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="21" pos:column="3">(<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">void<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">)<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">userp<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="22" pos:column="3">(<pos:position pos:line="22" pos:column="4"/></operator><name pos:line="22" pos:column="4">void<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">)<pos:position pos:line="22" pos:column="9"/></operator> <name pos:line="22" pos:column="10">passwdp<pos:position pos:line="22" pos:column="17"/></name></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">krb5<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">spn<pos:position pos:line="24" pos:column="16"/></name></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
    <comment type="block" pos:line="25" pos:column="5">/* Generate our SPN */</comment>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">spn<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><call><name pos:line="26" pos:column="17">Curl_auth_build_spn<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">service<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">NULL<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">host<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="58"/></decl_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">spn<pos:position pos:line="27" pos:column="12"/></name></expr>)<pos:position pos:line="27" pos:column="13"/></condition><then pos:line="27" pos:column="13">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* Populate the SPN structure */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">spn_token<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">value<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">spn<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">spn_token<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">length<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">strlen<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">spn<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Import the SPN */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">major_status<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">gss_import_name<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><operator pos:line="35" pos:column="36">&amp;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="37">minor_status<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="52">spn_token<pos:position pos:line="35" pos:column="61"/></name></expr></argument>,
                                   <argument><expr><name pos:line="36" pos:column="36">GSS_C_NT_HOSTBASED_SERVICE<pos:position pos:line="36" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="64">&amp;<pos:position pos:line="36" pos:column="69"/></operator><name><name pos:line="36" pos:column="65">krb5<pos:position pos:line="36" pos:column="69"/></name><operator pos:line="36" pos:column="69">-&gt;<pos:position pos:line="36" pos:column="74"/></operator><name pos:line="36" pos:column="71">spn<pos:position pos:line="36" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><call><name pos:line="37" pos:column="8">GSS_ERROR<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">major_status<pos:position pos:line="37" pos:column="30"/></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">Curl_gss_log_error<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">data<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="32">"gss_import_name() failed: "<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>,
                         <argument><expr><name pos:line="39" pos:column="26">major_status<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">minor_status<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="41" pos:column="7">free<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">spn<pos:position pos:line="41" pos:column="15"/></name></expr></argument>)<pos:position pos:line="41" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>

      <return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">free<pos:position pos:line="46" pos:column="9"/></name><argument_list pos:line="46" pos:column="9">(<argument><expr><name pos:line="46" pos:column="10">spn<pos:position pos:line="46" pos:column="13"/></name></expr></argument>)<pos:position pos:line="46" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name pos:line="49" pos:column="6">chlg64<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&amp;&amp;<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="16">*<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">chlg64<pos:position pos:line="49" pos:column="23"/></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
    <comment type="block" pos:line="50" pos:column="5">/* Decode the base-64 encoded challenge message */</comment>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><operator pos:line="51" pos:column="8">*<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">chlg64<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <literal type="char" pos:line="51" pos:column="19">'='<pos:position pos:line="51" pos:column="22"/></literal></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23"> <block pos:line="51" pos:column="24">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">result<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">Curl_base64_decode<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">chlg64<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="44">chlg<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="50">&amp;<pos:position pos:line="52" pos:column="55"/></operator><name pos:line="52" pos:column="51">chlglen<pos:position pos:line="52" pos:column="58"/></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><name pos:line="53" pos:column="10">result<pos:position pos:line="53" pos:column="16"/></name></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17">
        <block type="pseudo"><return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">result<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/* Ensure we have a valid challenge message */</comment>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">!<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">chlg<pos:position pos:line="58" pos:column="13"/></name></expr>)<pos:position pos:line="58" pos:column="14"/></condition><then pos:line="58" pos:column="14"> <block pos:line="58" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">infof<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><name pos:line="59" pos:column="13">data<pos:position pos:line="59" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="19">"GSSAPI handshake failure (empty challenge message)\n"<pos:position pos:line="59" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>

      <return pos:line="61" pos:column="7">return <expr><name pos:line="61" pos:column="14">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="61" pos:column="40"/></name></expr>;<pos:position pos:line="61" pos:column="41"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* Setup the challenge "input" security buffer */</comment>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">input_token<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">.<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">value<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">chlg<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">input_token<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">.<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">length<pos:position pos:line="66" pos:column="23"/></name></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">chlglen<pos:position pos:line="66" pos:column="33"/></name></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="69" pos:column="3">major_status<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">Curl_gss_init_sec_context<pos:position pos:line="69" pos:column="43"/></name><argument_list pos:line="69" pos:column="43">(<argument><expr><name pos:line="69" pos:column="44">data<pos:position pos:line="69" pos:column="48"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="70" pos:column="44">&amp;<pos:position pos:line="70" pos:column="49"/></operator><name pos:line="70" pos:column="45">minor_status<pos:position pos:line="70" pos:column="57"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="71" pos:column="44">&amp;<pos:position pos:line="71" pos:column="49"/></operator><name><name pos:line="71" pos:column="45">krb5<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">-&gt;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="51">context<pos:position pos:line="71" pos:column="58"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="72" pos:column="44">krb5<pos:position pos:line="72" pos:column="48"/></name><operator pos:line="72" pos:column="48">-&gt;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="50">spn<pos:position pos:line="72" pos:column="53"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="73" pos:column="44">&amp;<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="45">Curl_krb5_mech_oid<pos:position pos:line="73" pos:column="63"/></name></expr></argument>,
                                           <argument><expr><name pos:line="74" pos:column="44">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="74" pos:column="69"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">input_token<pos:position pos:line="75" pos:column="56"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="76" pos:column="44">&amp;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="45">output_token<pos:position pos:line="76" pos:column="57"/></name></expr></argument>,
                                           <argument><expr><name pos:line="77" pos:column="44">mutual_auth<pos:position pos:line="77" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><name pos:line="78" pos:column="44">NULL<pos:position pos:line="78" pos:column="48"/></name></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="80" pos:column="3">/* Free the decoded challenge as it is not required anymore */</comment>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">free<pos:position pos:line="81" pos:column="7"/></name><argument_list pos:line="81" pos:column="7">(<argument><expr><name><name pos:line="81" pos:column="8">input_token<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">value<pos:position pos:line="81" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>

  <if pos:line="83" pos:column="3">if<condition pos:line="83" pos:column="5">(<expr><call><name pos:line="83" pos:column="6">GSS_ERROR<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">major_status<pos:position pos:line="83" pos:column="28"/></name></expr></argument>)<pos:position pos:line="83" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="30"/></condition><then pos:line="83" pos:column="30"> <block pos:line="83" pos:column="31">{
    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">(<expr><name><name pos:line="84" pos:column="8">output_token<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">.<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="21">value<pos:position pos:line="84" pos:column="26"/></name></name></expr>)<pos:position pos:line="84" pos:column="27"/></condition><then pos:line="84" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="7">gss_release_buffer<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><operator pos:line="85" pos:column="26">&amp;<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="27">unused_status<pos:position pos:line="85" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="42">&amp;<pos:position pos:line="85" pos:column="47"/></operator><name pos:line="85" pos:column="43">output_token<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">Curl_gss_log_error<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">data<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="30">"gss_init_sec_context() failed: "<pos:position pos:line="87" pos:column="63"/></literal></expr></argument>,
                       <argument><expr><name pos:line="88" pos:column="24">major_status<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">minor_status<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>

    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="90" pos:column="28"/></name></expr>;<pos:position pos:line="90" pos:column="29"/></return>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

  <if pos:line="93" pos:column="3">if<condition pos:line="93" pos:column="5">(<expr><name><name pos:line="93" pos:column="6">output_token<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">.<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">value<pos:position pos:line="93" pos:column="24"/></name></name> <operator pos:line="93" pos:column="25">&amp;&amp;<pos:position pos:line="93" pos:column="35"/></operator> <name><name pos:line="93" pos:column="28">output_token<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">.<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="41">length<pos:position pos:line="93" pos:column="47"/></name></name></expr>)<pos:position pos:line="93" pos:column="48"/></condition><then pos:line="93" pos:column="48"> <block pos:line="93" pos:column="49">{
    <comment type="block" pos:line="94" pos:column="5">/* Base64 encode the response */</comment>
    <expr_stmt><expr><name pos:line="95" pos:column="5">result<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <call><name pos:line="95" pos:column="14">Curl_base64_encode<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><name pos:line="95" pos:column="33">data<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="39">(<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="40">char<pos:position pos:line="95" pos:column="44"/></name> <operator pos:line="95" pos:column="45">*<pos:position pos:line="95" pos:column="46"/></operator><operator pos:line="95" pos:column="46">)<pos:position pos:line="95" pos:column="47"/></operator> <name><name pos:line="95" pos:column="48">output_token<pos:position pos:line="95" pos:column="60"/></name><operator pos:line="95" pos:column="60">.<pos:position pos:line="95" pos:column="61"/></operator><name pos:line="95" pos:column="61">value<pos:position pos:line="95" pos:column="66"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="96" pos:column="33">output_token<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">.<pos:position pos:line="96" pos:column="46"/></operator><name pos:line="96" pos:column="46">length<pos:position pos:line="96" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">outptr<pos:position pos:line="96" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="62">outlen<pos:position pos:line="96" pos:column="68"/></name></expr></argument>)<pos:position pos:line="96" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="98" pos:column="5">gss_release_buffer<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><operator pos:line="98" pos:column="24">&amp;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="25">unused_status<pos:position pos:line="98" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="40">&amp;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="41">output_token<pos:position pos:line="98" pos:column="53"/></name></expr></argument>)<pos:position pos:line="98" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="99" pos:column="4"/></block></then>
  <elseif pos:line="100" pos:column="3">else <if pos:line="100" pos:column="8">if<condition pos:line="100" pos:column="10">(<expr><name pos:line="100" pos:column="11">mutual_auth<pos:position pos:line="100" pos:column="22"/></name></expr>)<pos:position pos:line="100" pos:column="23"/></condition><then pos:line="100" pos:column="23"> <block pos:line="100" pos:column="24">{
    <expr_stmt><expr><operator pos:line="101" pos:column="5">*<pos:position pos:line="101" pos:column="6"/></operator><name pos:line="101" pos:column="6">outptr<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <call><name pos:line="101" pos:column="15">strdup<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">(<argument><expr><literal type="string" pos:line="101" pos:column="22">""<pos:position pos:line="101" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="26"/></expr_stmt>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><operator pos:line="102" pos:column="8">!<pos:position pos:line="102" pos:column="9"/></operator><operator pos:line="102" pos:column="9">*<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">outptr<pos:position pos:line="102" pos:column="16"/></name></expr>)<pos:position pos:line="102" pos:column="17"/></condition><then pos:line="102" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="7">result<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="103" pos:column="35"/></name></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="106" pos:column="3">return <expr><name pos:line="106" pos:column="10">result<pos:position pos:line="106" pos:column="16"/></name></expr>;<pos:position pos:line="106" pos:column="17"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

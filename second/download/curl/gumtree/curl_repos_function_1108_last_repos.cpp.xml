<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1108_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">http2_handle_stream_close<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">connectdata<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">conn<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="2" pos:column="42">struct<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">Curl_easy<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">data<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="3" pos:column="42">struct<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">HTTP<pos:position pos:line="3" pos:column="53"/></name></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">stream<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="63">CURLcode<pos:position pos:line="3" pos:column="71"/></name> <modifier pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></modifier></type><name pos:line="3" pos:column="73">err<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="77"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">trailer_pos<pos:position pos:line="5" pos:column="20"/></name></decl>, <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="23">trailer_end<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">http_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">httpc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">httpc<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">httpc<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">pause_stream_id<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="32">stream<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">stream_id<pos:position pos:line="9" pos:column="49"/></name></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">httpc<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">pause_stream_id<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUGASSERT<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">httpc<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">drain_total<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">&gt;=<pos:position pos:line="13" pos:column="39"/></operator> <name><name pos:line="13" pos:column="37">data<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">state<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">.<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">drain<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">httpc<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">drain_total<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">-=<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="25">data<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">state<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">drain<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">data<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">state<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">.<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">drain<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">httpc<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">pause_stream_id<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34"> <block pos:line="17" pos:column="35">{
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><call><name pos:line="18" pos:column="8">h2_process_pending_input<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">data<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">httpc<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">err<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call> <operator pos:line="18" pos:column="51">!=<pos:position pos:line="18" pos:column="53"/></operator> <literal type="number" pos:line="18" pos:column="54">0<pos:position pos:line="18" pos:column="55"/></literal></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
      <return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">-<pos:position pos:line="19" pos:column="15"/></operator><literal type="number" pos:line="19" pos:column="15">1<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">DEBUGASSERT<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">data<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">state<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">drain<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Reset to FALSE to prevent infinite loop in readwrite_data function. */</comment>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">stream<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">closed<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">FALSE<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name><name pos:line="27" pos:column="6">stream<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">error_code<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">!=<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="28">NGHTTP2_NO_ERROR<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">failf<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">data<pos:position pos:line="28" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="17">"HTTP/2 stream %u was not closed cleanly: %s (err %d)"<pos:position pos:line="28" pos:column="71"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="29" pos:column="11">stream<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">stream_id<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="30">Curl_http2_strerror<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name><name pos:line="29" pos:column="50">stream<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">error_code<pos:position pos:line="29" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr></argument>,
          <argument><expr><name><name pos:line="30" pos:column="11">stream<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">error_code<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">err<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">CURLE_HTTP2_STREAM<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name><name pos:line="35" pos:column="7">stream<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">bodystarted<pos:position pos:line="35" pos:column="26"/></name></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27"> <block pos:line="35" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">failf<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">data<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="17">"HTTP/2 stream %u was closed cleanly, but before getting "<pos:position pos:line="36" pos:column="75"/></literal>
          <literal type="string" pos:line="37" pos:column="11">" all response header fields, teated as error"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="38" pos:column="11">stream<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">stream_id<pos:position pos:line="38" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">err<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name pos:line="39" pos:column="12">CURLE_HTTP2_STREAM<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">1<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><name><name pos:line="43" pos:column="6">stream<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">trailer_recvbuf<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">&amp;&amp;<pos:position pos:line="43" pos:column="40"/></operator> <name><name pos:line="43" pos:column="33">stream<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">trailer_recvbuf<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">buffer<pos:position pos:line="43" pos:column="64"/></name></name></expr>)<pos:position pos:line="43" pos:column="65"/></condition><then pos:line="43" pos:column="65"> <block pos:line="43" pos:column="66">{
    <expr_stmt><expr><name pos:line="44" pos:column="5">trailer_pos<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name><name pos:line="44" pos:column="19">stream<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">trailer_recvbuf<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">buffer<pos:position pos:line="44" pos:column="50"/></name></name></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">trailer_end<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">trailer_pos<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">+<pos:position pos:line="45" pos:column="32"/></operator> <name><name pos:line="45" pos:column="33">stream<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">trailer_recvbuf<pos:position pos:line="45" pos:column="56"/></name><operator pos:line="45" pos:column="56">-&gt;<pos:position pos:line="45" pos:column="61"/></operator><name pos:line="45" pos:column="58">size_used<pos:position pos:line="45" pos:column="67"/></name></name></expr>;<pos:position pos:line="45" pos:column="68"/></expr_stmt>

    <for pos:line="47" pos:column="5">for<control pos:line="47" pos:column="8">(<init pos:line="47" pos:column="9">;<pos:position pos:line="47" pos:column="10"/></init> <condition><expr><name pos:line="47" pos:column="11">trailer_pos<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">&lt;<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="25">trailer_end<pos:position pos:line="47" pos:column="36"/></name></expr>;<pos:position pos:line="47" pos:column="37"/></condition><incr/>)<pos:position pos:line="47" pos:column="38"/></control> <block pos:line="47" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">uint32_t<pos:position pos:line="48" pos:column="15"/></name></type> <name pos:line="48" pos:column="16">n<pos:position pos:line="48" pos:column="17"/></name></decl>;<pos:position pos:line="48" pos:column="18"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">memcpy<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><operator pos:line="49" pos:column="14">&amp;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="15">n<pos:position pos:line="49" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="18">trailer_pos<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="31">sizeof<argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">n<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">trailer_pos<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">+=<pos:position pos:line="50" pos:column="21"/></operator> <sizeof pos:line="50" pos:column="22">sizeof<argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">n<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>

      <expr_stmt><expr><name pos:line="52" pos:column="7">result<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">Curl_client_write<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">conn<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">CLIENTWRITE_HEADER<pos:position pos:line="52" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="60">trailer_pos<pos:position pos:line="52" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="73">n<pos:position pos:line="52" pos:column="74"/></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><name pos:line="53" pos:column="10">result<pos:position pos:line="53" pos:column="16"/></name></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17"> <block pos:line="53" pos:column="18">{
        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">err<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <name pos:line="54" pos:column="16">result<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">-<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">1<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></return>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="58" pos:column="7">trailer_pos<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">+=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">n<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">+<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></for>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="62" pos:column="3">stream<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">close_handled<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">TRUE<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">DEBUGF<pos:position pos:line="64" pos:column="9"/></name><argument_list pos:line="64" pos:column="9">(<argument><expr><call><name pos:line="64" pos:column="10">infof<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">data<pos:position pos:line="64" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="22">"http2_recv returns 0, http2_handle_stream_close\n"<pos:position pos:line="64" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="76"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><literal type="number" pos:line="65" pos:column="10">0<pos:position pos:line="65" pos:column="11"/></literal></expr>;<pos:position pos:line="65" pos:column="12"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

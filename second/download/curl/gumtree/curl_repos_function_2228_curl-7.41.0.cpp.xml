<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2228_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_axtls_connect_nonblocking<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">connectdata<pos:position pos:line="2" pos:column="23"/></name></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">conn<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">sockindex<pos:position pos:line="3" pos:column="18"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">done<pos:position pos:line="4" pos:column="15"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="16"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">conn_step<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ssl_fcn_return<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>

 <expr_stmt><expr><operator pos:line="10" pos:column="2">*<pos:position pos:line="10" pos:column="3"/></operator><name pos:line="10" pos:column="3">done<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <name pos:line="10" pos:column="10">FALSE<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
  <comment type="block" pos:line="11" pos:column="3">/* connectdata is calloc'd and connecting_state is only changed in this
     function, so this is safe, as the state is effectively initialized. */</comment>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">conn<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">ssl<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><name pos:line="13" pos:column="16">sockindex<pos:position pos:line="13" pos:column="25"/></name></expr>]<pos:position pos:line="13" pos:column="26"/></index></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">connecting_state<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">==<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">ssl_connect_1<pos:position pos:line="13" pos:column="60"/></name></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">conn_step<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">connect_prep<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">conn<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">sockindex<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">conn_step<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">!=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">CURLE_OK<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">Curl_axtls_close<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">conn<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">sockindex<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">conn_step<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">ssl<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><name pos:line="19" pos:column="15">sockindex<pos:position pos:line="19" pos:column="24"/></name></expr>]<pos:position pos:line="19" pos:column="25"/></index></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">connecting_state<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">ssl_connect_2<pos:position pos:line="19" pos:column="58"/></name></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">conn<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">ssl<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><name pos:line="22" pos:column="16">sockindex<pos:position pos:line="22" pos:column="25"/></name></expr>]<pos:position pos:line="22" pos:column="26"/></index></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">connecting_state<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">==<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">ssl_connect_2<pos:position pos:line="22" pos:column="60"/></name></expr>)<pos:position pos:line="22" pos:column="61"/></condition><then pos:line="22" pos:column="61"> <block pos:line="22" pos:column="62">{
    <comment type="block" pos:line="23" pos:column="5">/* Check to make sure handshake was ok. */</comment>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><call><name pos:line="24" pos:column="8">ssl_handshake_status<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name><name pos:line="24" pos:column="29">conn<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">ssl<pos:position pos:line="24" pos:column="38"/></name><index pos:line="24" pos:column="38">[<expr><name pos:line="24" pos:column="39">sockindex<pos:position pos:line="24" pos:column="48"/></name></expr>]<pos:position pos:line="24" pos:column="49"/></index></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">ssl<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call> <operator pos:line="24" pos:column="55">!=<pos:position pos:line="24" pos:column="57"/></operator> <name pos:line="24" pos:column="58">SSL_OK<pos:position pos:line="24" pos:column="64"/></name></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65"> <block pos:line="24" pos:column="66">{
      <comment type="block" pos:line="25" pos:column="7">/* Loop to perform more work in between sleeps. This is work around the
         fact that axtls does not expose any knowledge about when work needs
         to be performed. This can save ~25% of time on SSL handshakes. */</comment>
      <for pos:line="28" pos:column="7">for<control pos:line="28" pos:column="10">(<init><expr><name pos:line="28" pos:column="11">i<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">0<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></init> <condition><expr><name pos:line="28" pos:column="16">i<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator><literal type="number" pos:line="28" pos:column="18">5<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></condition> <incr><expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">++<pos:position pos:line="28" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="25"/></control> <block pos:line="28" pos:column="26">{
        <expr_stmt><expr><name pos:line="29" pos:column="9">ssl_fcn_return<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">ssl_read<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name><name pos:line="29" pos:column="35">conn<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">ssl<pos:position pos:line="29" pos:column="44"/></name><index pos:line="29" pos:column="44">[<expr><name pos:line="29" pos:column="45">sockindex<pos:position pos:line="29" pos:column="54"/></name></expr>]<pos:position pos:line="29" pos:column="55"/></index></name><operator pos:line="29" pos:column="55">.<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="56">ssl<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="61">NULL<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
        <if pos:line="30" pos:column="9">if<condition pos:line="30" pos:column="11">(<expr><name pos:line="30" pos:column="12">ssl_fcn_return<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&lt;<pos:position pos:line="30" pos:column="31"/></operator> <literal type="number" pos:line="30" pos:column="29">0<pos:position pos:line="30" pos:column="30"/></literal></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
          <expr_stmt><expr><call><name pos:line="31" pos:column="11">Curl_axtls_close<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">conn<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">sockindex<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="32" pos:column="11">ssl_display_error<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">ssl_fcn_return<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt> <comment type="block" pos:line="32" pos:column="46">/* goes to stdout. */</comment>
          <return pos:line="33" pos:column="11">return <expr><call><name pos:line="33" pos:column="18">map_error_to_curl<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">ssl_fcn_return<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">CURLE_OK<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></for>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">infof<pos:position pos:line="38" pos:column="10"/></name> <argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">conn<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">data<pos:position pos:line="38" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="24">"handshake completed successfully\n"<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">conn<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">ssl<pos:position pos:line="39" pos:column="14"/></name><index pos:line="39" pos:column="14">[<expr><name pos:line="39" pos:column="15">sockindex<pos:position pos:line="39" pos:column="24"/></name></expr>]<pos:position pos:line="39" pos:column="25"/></index></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">connecting_state<pos:position pos:line="39" pos:column="42"/></name> <operator pos:line="39" pos:column="43">=<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="45">ssl_connect_3<pos:position pos:line="39" pos:column="58"/></name></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name><name pos:line="42" pos:column="6">conn<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">ssl<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><name pos:line="42" pos:column="16">sockindex<pos:position pos:line="42" pos:column="25"/></name></expr>]<pos:position pos:line="42" pos:column="26"/></index></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">connecting_state<pos:position pos:line="42" pos:column="43"/></name> <operator pos:line="42" pos:column="44">==<pos:position pos:line="42" pos:column="46"/></operator> <name pos:line="42" pos:column="47">ssl_connect_3<pos:position pos:line="42" pos:column="60"/></name></expr>)<pos:position pos:line="42" pos:column="61"/></condition><then pos:line="42" pos:column="61"> <block pos:line="42" pos:column="62">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">conn_step<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <call><name pos:line="43" pos:column="17">connect_finish<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">conn<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">sockindex<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">conn_step<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">!=<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">CURLE_OK<pos:position pos:line="44" pos:column="29"/></name></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30"> <block pos:line="44" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">Curl_axtls_close<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">conn<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">sockindex<pos:position pos:line="45" pos:column="39"/></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
      <return pos:line="46" pos:column="7">return <expr><name pos:line="46" pos:column="14">conn_step<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* Reset connect state */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">conn<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">ssl<pos:position pos:line="50" pos:column="14"/></name><index pos:line="50" pos:column="14">[<expr><name pos:line="50" pos:column="15">sockindex<pos:position pos:line="50" pos:column="24"/></name></expr>]<pos:position pos:line="50" pos:column="25"/></index></name><operator pos:line="50" pos:column="25">.<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">connecting_state<pos:position pos:line="50" pos:column="42"/></name> <operator pos:line="50" pos:column="43">=<pos:position pos:line="50" pos:column="44"/></operator> <name pos:line="50" pos:column="45">ssl_connect_1<pos:position pos:line="50" pos:column="58"/></name></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">done<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">TRUE<pos:position pos:line="52" pos:column="17"/></name></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">CURLE_OK<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* Unrecognized state.  Things are very bad. */</comment>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">conn<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">-&gt;<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="9">ssl<pos:position pos:line="57" pos:column="12"/></name><index pos:line="57" pos:column="12">[<expr><name pos:line="57" pos:column="13">sockindex<pos:position pos:line="57" pos:column="22"/></name></expr>]<pos:position pos:line="57" pos:column="23"/></index></name><operator pos:line="57" pos:column="23">.<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">state<pos:position pos:line="57" pos:column="29"/></name>  <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">ssl_connection_none<pos:position pos:line="57" pos:column="52"/></name></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="58" pos:column="3">conn<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">-&gt;<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="9">ssl<pos:position pos:line="58" pos:column="12"/></name><index pos:line="58" pos:column="12">[<expr><name pos:line="58" pos:column="13">sockindex<pos:position pos:line="58" pos:column="22"/></name></expr>]<pos:position pos:line="58" pos:column="23"/></index></name><operator pos:line="58" pos:column="23">.<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">connecting_state<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">=<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">ssl_connect_1<pos:position pos:line="58" pos:column="56"/></name></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
  <comment type="block" pos:line="59" pos:column="3">/* Return value perhaps not strictly correct, but distinguishes the issue.*/</comment>
  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

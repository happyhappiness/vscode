<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_738_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">write_pidfile<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">filename<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">pidfile<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">pid<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">pid<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">long<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">getpid<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">()<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">pidfile<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">fopen<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">filename<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="29">"wb"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">pidfile<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">logmsg<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="string" pos:line="9" pos:column="12">"Couldn't write pid file: %s %s"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">filename<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="56">strerror<pos:position pos:line="9" pos:column="64"/></name><argument_list pos:line="9" pos:column="64">(<argument><expr><name pos:line="9" pos:column="65">errno<pos:position pos:line="9" pos:column="70"/></name></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return> <comment type="block" pos:line="10" pos:column="15">/* fail */</comment>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">fprintf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">pidfile<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="20">"%ld\n"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">pid<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">fclose<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">pidfile<pos:position pos:line="13" pos:column="17"/></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">logmsg<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><literal type="string" pos:line="14" pos:column="10">"Wrote pid %ld to %s"<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">pid<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">filename<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">1<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return> <comment type="block" pos:line="15" pos:column="13">/* success */</comment>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_389.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">char<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">a<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[]<pos:position pos:line="3" pos:column="20"/></index></name> <init pos:line="3" pos:column="21">= <expr><block pos:line="3" pos:column="23">{<expr><literal type="number" pos:line="3" pos:column="24">0x9c<pos:position pos:line="3" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="30">0x26<pos:position pos:line="3" pos:column="34"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="36">0x4b<pos:position pos:line="3" pos:column="40"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="42">0x3d<pos:position pos:line="3" pos:column="46"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="48">0x49<pos:position pos:line="3" pos:column="52"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="54">0x4<pos:position pos:line="3" pos:column="57"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="59">0xa1<pos:position pos:line="3" pos:column="63"/></literal></expr>, <expr><literal type="number" pos:line="3" pos:column="65">0x1<pos:position pos:line="3" pos:column="68"/></literal></expr>,
                       <expr><literal type="number" pos:line="4" pos:column="24">0xe0<pos:position pos:line="4" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="30">0xd8<pos:position pos:line="4" pos:column="34"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="36">0x7c<pos:position pos:line="4" pos:column="40"/></literal></expr>,  <expr><literal type="number" pos:line="4" pos:column="43">0x20<pos:position pos:line="4" pos:column="47"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="49">0xb7<pos:position pos:line="4" pos:column="53"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="55">0xef<pos:position pos:line="4" pos:column="59"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="61">0x53<pos:position pos:line="4" pos:column="65"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="67">0x29<pos:position pos:line="4" pos:column="71"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="73">0xfa<pos:position pos:line="4" pos:column="77"/></literal></expr>,
                       <expr><literal type="number" pos:line="5" pos:column="24">0x1d<pos:position pos:line="5" pos:column="28"/></literal></expr>, <expr><literal type="number" pos:line="5" pos:column="30">0x57<pos:position pos:line="5" pos:column="34"/></literal></expr>, <expr><literal type="number" pos:line="5" pos:column="36">0xe1<pos:position pos:line="5" pos:column="40"/></literal></expr>}<pos:position pos:line="5" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURL<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">easy<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">asize<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">s<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">URL<pos:position pos:line="10" pos:column="12"/></name></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">easy<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">curl_easy_init<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">()<pos:position pos:line="12" pos:column="31"/></argument_list></call><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">fprintf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">stderr<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"curl_easy_init() failed\n"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">asize<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">int<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator><sizeof pos:line="17" pos:column="16">sizeof<argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">a<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">s<pos:position pos:line="19" pos:column="4"/></name> <operator pos:line="19" pos:column="5">=<pos:position pos:line="19" pos:column="6"/></operator> <call><name pos:line="19" pos:column="7">curl_easy_escape<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">easy<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">char<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">a<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">asize<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">s<pos:position pos:line="21" pos:column="7"/></name></expr>)<pos:position pos:line="21" pos:column="8"/></condition><then pos:line="21" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">printf<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="string" pos:line="22" pos:column="12">"%s\n"<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">s<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt></block></then></if>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">s<pos:position pos:line="24" pos:column="7"/></name></expr>)<pos:position pos:line="24" pos:column="8"/></condition><then pos:line="24" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">curl_free<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name pos:line="25" pos:column="15">s<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">curl_easy_cleanup<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">easy<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>

  <return pos:line="29" pos:column="3">return <expr><literal type="number" pos:line="29" pos:column="10">0<pos:position pos:line="29" pos:column="11"/></literal></expr>;<pos:position pos:line="29" pos:column="12"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2192_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">darwinssl_connect_step3<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">connectdata<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">conn<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">sockindex<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssl_connect_data<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">connssl<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><operator pos:line="6" pos:column="38">&amp;<pos:position pos:line="6" pos:column="43"/></operator><name><name pos:line="6" pos:column="39">conn<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">ssl<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><name pos:line="6" pos:column="49">sockindex<pos:position pos:line="6" pos:column="58"/></name></expr>]<pos:position pos:line="6" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CFStringRef<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">server_cert_summary<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">server_cert_summary_c<pos:position pos:line="8" pos:column="29"/></name><index pos:line="8" pos:column="29">[<expr><literal type="number" pos:line="8" pos:column="30">128<pos:position pos:line="8" pos:column="33"/></literal></expr>]<pos:position pos:line="8" pos:column="34"/></index></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CFArrayRef<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">server_certs<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">SecCertificateRef<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">server_cert<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">OSStatus<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">err<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">CFIndex<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">i<pos:position pos:line="12" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="14">count<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">SecTrustRef<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">trust<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* There is no step 3!
   * Well, okay, if verbose mode is on, let's print the details of the
   * server certificates. */</comment>
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">CURL_BUILD_MAC_10_7<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">||<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">CURL_BUILD_IOS<pos:position pos:line="18" pos:column="42"/></name></expr></cpp:if>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">CURL_BUILD_IOS<pos:position pos:line="19" pos:column="19"/></name></expr></cpp:if>
<cpp:pragma pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">pragma<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">unused<pos:position pos:line="20" pos:column="15"/></name><name pos:line="20" pos:column="15">(<pos:position pos:line="20" pos:column="16"/></name><name pos:line="20" pos:column="16">server_certs<pos:position pos:line="20" pos:column="28"/></name><name pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></name></cpp:pragma>
  <expr_stmt><expr><name pos:line="21" pos:column="3">err<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">SSLCopyPeerTrust<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name><name pos:line="21" pos:column="26">connssl<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">ssl_ctx<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">trust<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
  <comment type="block" pos:line="22" pos:column="3">/* For some reason, SSLCopyPeerTrust() can return noErr and yet return
     a null trust, so be on guard for that: */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">err<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">==<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">noErr<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&amp;&amp;<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="22">trust<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">count<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">SecTrustGetCertificateCount<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">trust<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
    <for pos:line="26" pos:column="5">for<control pos:line="26" pos:column="8">(<init><expr><name pos:line="26" pos:column="9">i<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0L<pos:position pos:line="26" pos:column="15"/></literal></expr> ;<pos:position pos:line="26" pos:column="17"/></init> <condition><expr><name pos:line="26" pos:column="18">i<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&lt;<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="22">count<pos:position pos:line="26" pos:column="27"/></name></expr> ;<pos:position pos:line="26" pos:column="29"/></condition> <incr><expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">++<pos:position pos:line="26" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="34"/></control> <block pos:line="26" pos:column="35">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">server_cert<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">SecTrustGetCertificateAtIndex<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><name pos:line="27" pos:column="51">trust<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">i<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">server_cert_summary<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">CopyCertSubject<pos:position pos:line="28" pos:column="44"/></name><argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">server_cert<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">memset<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">server_cert_summary_c<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="40">128<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><call><name pos:line="30" pos:column="10">CFStringGetCString<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">server_cert_summary<pos:position pos:line="30" pos:column="48"/></name></expr></argument>,
                            <argument><expr><name pos:line="31" pos:column="29">server_cert_summary_c<pos:position pos:line="31" pos:column="50"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="32" pos:column="29">128<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>,
                            <argument><expr><name pos:line="33" pos:column="29">kCFStringEncodingUTF8<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52"> <block pos:line="33" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">infof<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">data<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"Server certificate: %s\n"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">server_cert_summary_c<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">CFRelease<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">server_cert_summary<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">CFRelease<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">trust<pos:position pos:line="38" pos:column="20"/></name></expr></argument>)<pos:position pos:line="38" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
<cpp:else pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">else<pos:position pos:line="40" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="41" pos:column="3">/* SSLCopyPeerCertificates() is deprecated as of Mountain Lion.
     The function SecTrustGetCertificateAtIndex() is officially present
     in Lion, but it is unfortunately also present in Snow Leopard as
     private API and doesn't work as expected. So we have to look for
     a different symbol to make sure this code is only executed under
     Lion or later. */</comment>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><name pos:line="47" pos:column="6">SecTrustEvaluateAsync<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">!=<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">NULL<pos:position pos:line="47" pos:column="35"/></name></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36"> <block pos:line="47" pos:column="37">{
<cpp:pragma pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">pragma<pos:position pos:line="48" pos:column="8"/></cpp:directive> <name pos:line="48" pos:column="9">unused<pos:position pos:line="48" pos:column="15"/></name><name pos:line="48" pos:column="15">(<pos:position pos:line="48" pos:column="16"/></name><name pos:line="48" pos:column="16">server_certs<pos:position pos:line="48" pos:column="28"/></name><name pos:line="48" pos:column="28">)<pos:position pos:line="48" pos:column="29"/></name></cpp:pragma>
    <expr_stmt><expr><name pos:line="49" pos:column="5">err<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">SSLCopyPeerTrust<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name><name pos:line="49" pos:column="28">connssl<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">-&gt;<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="37">ssl_ctx<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="46">&amp;<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="47">trust<pos:position pos:line="49" pos:column="52"/></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="50" pos:column="5">/* For some reason, SSLCopyPeerTrust() can return noErr and yet return
       a null trust, so be on guard for that: */</comment>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><name pos:line="52" pos:column="8">err<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">==<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">noErr<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">&amp;&amp;<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="24">trust<pos:position pos:line="52" pos:column="29"/></name></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30"> <block pos:line="52" pos:column="31">{
      <expr_stmt><expr><name pos:line="53" pos:column="7">count<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">SecTrustGetCertificateCount<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">trust<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
      <for pos:line="54" pos:column="7">for<control pos:line="54" pos:column="10">(<init><expr><name pos:line="54" pos:column="11">i<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="15">0L<pos:position pos:line="54" pos:column="17"/></literal></expr> ;<pos:position pos:line="54" pos:column="19"/></init> <condition><expr><name pos:line="54" pos:column="20">i<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">&lt;<pos:position pos:line="54" pos:column="26"/></operator> <name pos:line="54" pos:column="24">count<pos:position pos:line="54" pos:column="29"/></name></expr> ;<pos:position pos:line="54" pos:column="31"/></condition> <incr><expr><name pos:line="54" pos:column="32">i<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">++<pos:position pos:line="54" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="36"/></control> <block pos:line="54" pos:column="37">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">server_cert<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">SecTrustGetCertificateAtIndex<pos:position pos:line="55" pos:column="52"/></name><argument_list pos:line="55" pos:column="52">(<argument><expr><name pos:line="55" pos:column="53">trust<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="60">i<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">server_cert_summary<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <call><name pos:line="56" pos:column="31">CopyCertSubject<pos:position pos:line="56" pos:column="46"/></name><argument_list pos:line="56" pos:column="46">(<argument><expr><name pos:line="56" pos:column="47">server_cert<pos:position pos:line="56" pos:column="58"/></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">memset<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">server_cert_summary_c<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="39">0<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="42">128<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
        <if pos:line="58" pos:column="9">if<condition pos:line="58" pos:column="11">(<expr><call><name pos:line="58" pos:column="12">CFStringGetCString<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">server_cert_summary<pos:position pos:line="58" pos:column="50"/></name></expr></argument>,
                              <argument><expr><name pos:line="59" pos:column="31">server_cert_summary_c<pos:position pos:line="59" pos:column="52"/></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="60" pos:column="31">128<pos:position pos:line="60" pos:column="34"/></literal></expr></argument>,
                              <argument><expr><name pos:line="61" pos:column="31">kCFStringEncodingUTF8<pos:position pos:line="61" pos:column="52"/></name></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54"> <block pos:line="61" pos:column="55">{
          <expr_stmt><expr><call><name pos:line="62" pos:column="11">infof<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">data<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="23">"Server certificate: %s\n"<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">server_cert_summary_c<pos:position pos:line="62" pos:column="72"/></name></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">CFRelease<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">server_cert_summary<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="65" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">CFRelease<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">trust<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then>
  <else pos:line="69" pos:column="3">else <block pos:line="69" pos:column="8">{
<cpp:if pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">if<pos:position pos:line="70" pos:column="4"/></cpp:directive> <expr><name pos:line="70" pos:column="5">CURL_SUPPORT_MAC_10_8<pos:position pos:line="70" pos:column="26"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="71" pos:column="5">err<pos:position pos:line="71" pos:column="8"/></name> <operator pos:line="71" pos:column="9">=<pos:position pos:line="71" pos:column="10"/></operator> <call><name pos:line="71" pos:column="11">SSLCopyPeerCertificates<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name><name pos:line="71" pos:column="35">connssl<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">-&gt;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="44">ssl_ctx<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="53">&amp;<pos:position pos:line="71" pos:column="58"/></operator><name pos:line="71" pos:column="54">server_certs<pos:position pos:line="71" pos:column="66"/></name></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt>
    <comment type="block" pos:line="72" pos:column="5">/* Just in case SSLCopyPeerCertificates() returns null too... */</comment>
    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><name pos:line="73" pos:column="8">err<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">==<pos:position pos:line="73" pos:column="14"/></operator> <name pos:line="73" pos:column="15">noErr<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&amp;&amp;<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="24">server_certs<pos:position pos:line="73" pos:column="36"/></name></expr>)<pos:position pos:line="73" pos:column="37"/></condition><then pos:line="73" pos:column="37"> <block pos:line="73" pos:column="38">{
      <expr_stmt><expr><name pos:line="74" pos:column="7">count<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">CFArrayGetCount<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">server_certs<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>
      <for pos:line="75" pos:column="7">for<control pos:line="75" pos:column="10">(<init><expr><name pos:line="75" pos:column="11">i<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <literal type="number" pos:line="75" pos:column="15">0L<pos:position pos:line="75" pos:column="17"/></literal></expr> ;<pos:position pos:line="75" pos:column="19"/></init> <condition><expr><name pos:line="75" pos:column="20">i<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">&lt;<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="24">count<pos:position pos:line="75" pos:column="29"/></name></expr> ;<pos:position pos:line="75" pos:column="31"/></condition> <incr><expr><name pos:line="75" pos:column="32">i<pos:position pos:line="75" pos:column="33"/></name><operator pos:line="75" pos:column="33">++<pos:position pos:line="75" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="36"/></control> <block pos:line="75" pos:column="37">{
        <expr_stmt><expr><name pos:line="76" pos:column="9">server_cert<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="23">(<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">SecCertificateRef<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">)<pos:position pos:line="76" pos:column="42"/></operator><call><name pos:line="76" pos:column="42">CFArrayGetValueAtIndex<pos:position pos:line="76" pos:column="64"/></name><argument_list pos:line="76" pos:column="64">(<argument><expr><name pos:line="76" pos:column="65">server_certs<pos:position pos:line="76" pos:column="77"/></name></expr></argument>,
                                                                <argument><expr><name pos:line="77" pos:column="65">i<pos:position pos:line="77" pos:column="66"/></name></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><name pos:line="79" pos:column="9">server_cert_summary<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <call><name pos:line="79" pos:column="31">CopyCertSubject<pos:position pos:line="79" pos:column="46"/></name><argument_list pos:line="79" pos:column="46">(<argument><expr><name pos:line="79" pos:column="47">server_cert<pos:position pos:line="79" pos:column="58"/></name></expr></argument>)<pos:position pos:line="79" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">memset<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">server_cert_summary_c<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="39">0<pos:position pos:line="80" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="42">128<pos:position pos:line="80" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="47"/></expr_stmt>
        <if pos:line="81" pos:column="9">if<condition pos:line="81" pos:column="11">(<expr><call><name pos:line="81" pos:column="12">CFStringGetCString<pos:position pos:line="81" pos:column="30"/></name><argument_list pos:line="81" pos:column="30">(<argument><expr><name pos:line="81" pos:column="31">server_cert_summary<pos:position pos:line="81" pos:column="50"/></name></expr></argument>,
                              <argument><expr><name pos:line="82" pos:column="31">server_cert_summary_c<pos:position pos:line="82" pos:column="52"/></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="83" pos:column="31">128<pos:position pos:line="83" pos:column="34"/></literal></expr></argument>,
                              <argument><expr><name pos:line="84" pos:column="31">kCFStringEncodingUTF8<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="54"/></condition><then pos:line="84" pos:column="54"> <block pos:line="84" pos:column="55">{
          <expr_stmt><expr><call><name pos:line="85" pos:column="11">infof<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">data<pos:position pos:line="85" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="23">"Server certificate: %s\n"<pos:position pos:line="85" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="51">server_cert_summary_c<pos:position pos:line="85" pos:column="72"/></name></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">CFRelease<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><name pos:line="87" pos:column="19">server_cert_summary<pos:position pos:line="87" pos:column="38"/></name></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="88" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">CFRelease<pos:position pos:line="89" pos:column="16"/></name><argument_list pos:line="89" pos:column="16">(<argument><expr><name pos:line="89" pos:column="17">server_certs<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="91" pos:column="8">/* CURL_SUPPORT_MAC_10_8 */</comment>
  }<pos:position pos:line="92" pos:column="4"/></block></else></if>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="93" pos:column="8">/* CURL_BUILD_IOS */</comment>
<cpp:else pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">else<pos:position pos:line="94" pos:column="6"/></cpp:directive></cpp:else>
<cpp:pragma pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">pragma<pos:position pos:line="95" pos:column="8"/></cpp:directive> <name pos:line="95" pos:column="9">unused<pos:position pos:line="95" pos:column="15"/></name><name pos:line="95" pos:column="15">(<pos:position pos:line="95" pos:column="16"/></name><name pos:line="95" pos:column="16">trust<pos:position pos:line="95" pos:column="21"/></name><name pos:line="95" pos:column="21">)<pos:position pos:line="95" pos:column="22"/></name></cpp:pragma>
  <expr_stmt><expr><name pos:line="96" pos:column="3">err<pos:position pos:line="96" pos:column="6"/></name> <operator pos:line="96" pos:column="7">=<pos:position pos:line="96" pos:column="8"/></operator> <call><name pos:line="96" pos:column="9">SSLCopyPeerCertificates<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name><name pos:line="96" pos:column="33">connssl<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">-&gt;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="42">ssl_ctx<pos:position pos:line="96" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="51">&amp;<pos:position pos:line="96" pos:column="56"/></operator><name pos:line="96" pos:column="52">server_certs<pos:position pos:line="96" pos:column="64"/></name></expr></argument>)<pos:position pos:line="96" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="66"/></expr_stmt>
  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><name pos:line="97" pos:column="6">err<pos:position pos:line="97" pos:column="9"/></name> <operator pos:line="97" pos:column="10">==<pos:position pos:line="97" pos:column="12"/></operator> <name pos:line="97" pos:column="13">noErr<pos:position pos:line="97" pos:column="18"/></name></expr>)<pos:position pos:line="97" pos:column="19"/></condition><then pos:line="97" pos:column="19"> <block pos:line="97" pos:column="20">{
    <expr_stmt><expr><name pos:line="98" pos:column="5">count<pos:position pos:line="98" pos:column="10"/></name> <operator pos:line="98" pos:column="11">=<pos:position pos:line="98" pos:column="12"/></operator> <call><name pos:line="98" pos:column="13">CFArrayGetCount<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">server_certs<pos:position pos:line="98" pos:column="41"/></name></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="43"/></expr_stmt>
    <for pos:line="99" pos:column="5">for<control pos:line="99" pos:column="8">(<init><expr><name pos:line="99" pos:column="9">i<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <literal type="number" pos:line="99" pos:column="13">0L<pos:position pos:line="99" pos:column="15"/></literal></expr> ;<pos:position pos:line="99" pos:column="17"/></init> <condition><expr><name pos:line="99" pos:column="18">i<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">&lt;<pos:position pos:line="99" pos:column="24"/></operator> <name pos:line="99" pos:column="22">count<pos:position pos:line="99" pos:column="27"/></name></expr> ;<pos:position pos:line="99" pos:column="29"/></condition> <incr><expr><name pos:line="99" pos:column="30">i<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">++<pos:position pos:line="99" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="99" pos:column="34"/></control> <block pos:line="99" pos:column="35">{
      <expr_stmt><expr><name pos:line="100" pos:column="7">server_cert<pos:position pos:line="100" pos:column="18"/></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <operator pos:line="100" pos:column="21">(<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">SecCertificateRef<pos:position pos:line="100" pos:column="39"/></name><operator pos:line="100" pos:column="39">)<pos:position pos:line="100" pos:column="40"/></operator><call><name pos:line="100" pos:column="40">CFArrayGetValueAtIndex<pos:position pos:line="100" pos:column="62"/></name><argument_list pos:line="100" pos:column="62">(<argument><expr><name pos:line="100" pos:column="63">server_certs<pos:position pos:line="100" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="77">i<pos:position pos:line="100" pos:column="78"/></name></expr></argument>)<pos:position pos:line="100" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name pos:line="101" pos:column="7">server_cert_summary<pos:position pos:line="101" pos:column="26"/></name> <operator pos:line="101" pos:column="27">=<pos:position pos:line="101" pos:column="28"/></operator> <call><name pos:line="101" pos:column="29">CopyCertSubject<pos:position pos:line="101" pos:column="44"/></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">server_cert<pos:position pos:line="101" pos:column="56"/></name></expr></argument>)<pos:position pos:line="101" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="102" pos:column="7">memset<pos:position pos:line="102" pos:column="13"/></name><argument_list pos:line="102" pos:column="13">(<argument><expr><name pos:line="102" pos:column="14">server_cert_summary_c<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="37">0<pos:position pos:line="102" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="40">128<pos:position pos:line="102" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="45"/></expr_stmt>
      <if pos:line="103" pos:column="7">if<condition pos:line="103" pos:column="9">(<expr><call><name pos:line="103" pos:column="10">CFStringGetCString<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">server_cert_summary<pos:position pos:line="103" pos:column="48"/></name></expr></argument>,
                            <argument><expr><name pos:line="104" pos:column="29">server_cert_summary_c<pos:position pos:line="104" pos:column="50"/></name></expr></argument>,
                            <argument><expr><literal type="number" pos:line="105" pos:column="29">128<pos:position pos:line="105" pos:column="32"/></literal></expr></argument>,
                            <argument><expr><name pos:line="106" pos:column="29">kCFStringEncodingUTF8<pos:position pos:line="106" pos:column="50"/></name></expr></argument>)<pos:position pos:line="106" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="52"/></condition><then pos:line="106" pos:column="52"> <block pos:line="106" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">infof<pos:position pos:line="107" pos:column="14"/></name><argument_list pos:line="107" pos:column="14">(<argument><expr><name pos:line="107" pos:column="15">data<pos:position pos:line="107" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="21">"Server certificate: %s\n"<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">server_cert_summary_c<pos:position pos:line="107" pos:column="70"/></name></expr></argument>)<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">CFRelease<pos:position pos:line="109" pos:column="16"/></name><argument_list pos:line="109" pos:column="16">(<argument><expr><name pos:line="109" pos:column="17">server_cert_summary<pos:position pos:line="109" pos:column="36"/></name></expr></argument>)<pos:position pos:line="109" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">CFRelease<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><name pos:line="111" pos:column="15">server_certs<pos:position pos:line="111" pos:column="27"/></name></expr></argument>)<pos:position pos:line="111" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="113" pos:column="8">/* CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS */</comment>

  <expr_stmt><expr><name><name pos:line="115" pos:column="3">connssl<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">-&gt;<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="12">connecting_state<pos:position pos:line="115" pos:column="28"/></name></name> <operator pos:line="115" pos:column="29">=<pos:position pos:line="115" pos:column="30"/></operator> <name pos:line="115" pos:column="31">ssl_connect_done<pos:position pos:line="115" pos:column="47"/></name></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
  <return pos:line="116" pos:column="3">return <expr><name pos:line="116" pos:column="10">CURLE_OK<pos:position pos:line="116" pos:column="18"/></name></expr>;<pos:position pos:line="116" pos:column="19"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

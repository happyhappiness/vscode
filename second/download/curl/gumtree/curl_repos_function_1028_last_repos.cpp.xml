<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1028_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_easy_unescape<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_easy<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">string<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">length<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">olen<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">str<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">length<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">&gt;=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">inputlen<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">length<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">outputlen<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">CURLcode<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">res<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><call><name pos:line="8" pos:column="20">Curl_urldecode<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">data<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">string<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">inputlen<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="59">&amp;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="60">str<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="65">&amp;<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="66">outputlen<pos:position pos:line="8" pos:column="75"/></name></expr></argument>,
                                  <argument><expr><name pos:line="9" pos:column="35">FALSE<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">res<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
      <block type="pseudo"><return pos:line="11" pos:column="7">return <expr><name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">olen<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13"> <block pos:line="13" pos:column="14">{
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">(<expr><name pos:line="14" pos:column="10">outputlen<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&lt;=<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">size_t<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">INT_MAX<pos:position pos:line="14" pos:column="39"/></name></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">olen<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">curlx_uztosi<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">outputlen<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></then>
      <else pos:line="16" pos:column="7">else
        <comment type="block" pos:line="17" pos:column="9">/* too large to return in an int, fail! */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">Curl_safefree<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">str<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt></block></else></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">str<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

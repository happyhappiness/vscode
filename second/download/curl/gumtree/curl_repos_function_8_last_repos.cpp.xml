<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_8_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">hd<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">file_info<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">file<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">url<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">argc<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">&lt;<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="13">3<pos:position pos:line="11" pos:column="14"/></literal></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">file<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <name><name pos:line="14" pos:column="10">argv<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal></expr>]<pos:position pos:line="14" pos:column="17"/></index></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">url<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <name><name pos:line="15" pos:column="9">argv<pos:position pos:line="15" pos:column="13"/></name><index pos:line="15" pos:column="13">[<expr><literal type="number" pos:line="15" pos:column="14">2<pos:position pos:line="15" pos:column="15"/></literal></expr>]<pos:position pos:line="15" pos:column="16"/></index></name></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* get the file size of the local file */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">hd<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <call><name pos:line="18" pos:column="8">open<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">file<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="19">O_RDONLY<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fstat<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name pos:line="19" pos:column="9">hd<pos:position pos:line="19" pos:column="11"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="14">file_info<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* In windows, this will init the winsock stuff */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">curl_global_init<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* get a curl handle */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">curl<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">curl_easy_init<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">()<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">curl<pos:position pos:line="26" pos:column="10"/></name></expr>)<pos:position pos:line="26" pos:column="11"/></condition><then pos:line="26" pos:column="11"> <block pos:line="26" pos:column="12">{
    <comment type="block" pos:line="27" pos:column="5">/* we want to use our own read function */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">curl_easy_setopt<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">curl<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">CURLOPT_READFUNCTION<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">read_callback<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* which file to upload */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">curl_easy_setopt<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">curl<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">CURLOPT_READDATA<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="46">(<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">void<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">*<pos:position pos:line="31" pos:column="53"/></operator><operator pos:line="31" pos:column="53">)<pos:position pos:line="31" pos:column="54"/></operator><operator pos:line="31" pos:column="54">&amp;<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="55">hd<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* set the ioctl function */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">curl_easy_setopt<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">curl<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">CURLOPT_IOCTLFUNCTION<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">my_ioctl<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* pass the file descriptor to the ioctl callback as well */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">curl_easy_setopt<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">curl<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">CURLOPT_IOCTLDATA<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">(<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="48">void<pos:position pos:line="37" pos:column="52"/></name> <operator pos:line="37" pos:column="53">*<pos:position pos:line="37" pos:column="54"/></operator><operator pos:line="37" pos:column="54">)<pos:position pos:line="37" pos:column="55"/></operator><operator pos:line="37" pos:column="55">&amp;<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="56">hd<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* enable "uploading" (which means PUT when doing HTTP) */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">curl_easy_setopt<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">curl<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="28">CURLOPT_UPLOAD<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="44">1L<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* specify target URL, and note that this URL should also include a file
       name, not only a directory (as you can do with GTP uploads) */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">curl_easy_setopt<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">curl<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">CURLOPT_URL<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="41">url<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* and give the size of the upload, this supports large file sizes
       on systems that have general support for it */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">curl_easy_setopt<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">curl<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="48" pos:column="52"/></name></expr></argument>,
                     <argument><expr><operator pos:line="49" pos:column="22">(<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">curl_off_t<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">)<pos:position pos:line="49" pos:column="34"/></operator><name><name pos:line="49" pos:column="34">file_info<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">.<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="44">st_size<pos:position pos:line="49" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="51" pos:column="5">/* tell libcurl we can use "any" auth, which lets the lib pick one, but it
       also costs one extra round-trip and possibly sending of all the PUT
       data twice!!! */</comment>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">curl_easy_setopt<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">curl<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">CURLOPT_HTTPAUTH<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="46">(<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">long<pos:position pos:line="54" pos:column="51"/></name><operator pos:line="54" pos:column="51">)<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="52">CURLAUTH_ANY<pos:position pos:line="54" pos:column="64"/></name></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* set user name and password for the authentication */</comment>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">curl_easy_setopt<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">curl<pos:position pos:line="57" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="28">CURLOPT_USERPWD<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="45">"user:password"<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* Now run off and do what you've been told! */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">res<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <call><name pos:line="60" pos:column="11">curl_easy_perform<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">curl<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="61" pos:column="5">/* Check for errors */</comment>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name pos:line="62" pos:column="8">res<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">!=<pos:position pos:line="62" pos:column="14"/></operator> <name pos:line="62" pos:column="15">CURLE_OK<pos:position pos:line="62" pos:column="23"/></name></expr>)<pos:position pos:line="62" pos:column="24"/></condition><then pos:line="62" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="7">fprintf<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><expr><name pos:line="63" pos:column="15">stderr<pos:position pos:line="63" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="63" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="64" pos:column="15">curl_easy_strerror<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">res<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">curl_easy_cleanup<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">curl<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">close<pos:position pos:line="69" pos:column="8"/></name><argument_list pos:line="69" pos:column="8">(<argument><expr><name pos:line="69" pos:column="9">hd<pos:position pos:line="69" pos:column="11"/></name></expr></argument>)<pos:position pos:line="69" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="13"/></expr_stmt> <comment type="block" pos:line="69" pos:column="14">/* close the local file */</comment>

  <expr_stmt><expr><call><name pos:line="71" pos:column="3">curl_global_cleanup<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">()<pos:position pos:line="71" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
  <return pos:line="72" pos:column="3">return <expr><literal type="number" pos:line="72" pos:column="10">0<pos:position pos:line="72" pos:column="11"/></literal></expr>;<pos:position pos:line="72" pos:column="12"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

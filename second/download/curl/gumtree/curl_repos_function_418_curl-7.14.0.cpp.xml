<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_418_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">long<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ConnectionStore<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">SessionHandle<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">data<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                <parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">connectdata<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">conn<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">i<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <for pos:line="6" pos:column="3">for<control pos:line="6" pos:column="6">(<init><expr><name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator><literal type="number" pos:line="6" pos:column="9">0<pos:position pos:line="6" pos:column="10"/></literal></expr>;<pos:position pos:line="6" pos:column="11"/></init> <condition><expr><name pos:line="6" pos:column="12">i<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">&lt;<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">state<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">numconnects<pos:position pos:line="6" pos:column="38"/></name></name></expr>;<pos:position pos:line="6" pos:column="39"/></condition> <incr><expr><name pos:line="6" pos:column="40">i<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">++<pos:position pos:line="6" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="44"/></control> <block pos:line="6" pos:column="45">{
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name><name pos:line="7" pos:column="9">data<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">state<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">connects<pos:position pos:line="7" pos:column="29"/></name><index pos:line="7" pos:column="29">[<expr><name pos:line="7" pos:column="30">i<pos:position pos:line="7" pos:column="31"/></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
      <block type="pseudo"><break pos:line="8" pos:column="7">break;<pos:position pos:line="8" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">i<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">==<pos:position pos:line="10" pos:column="10"/></operator> <name><name pos:line="10" pos:column="11">data<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">state<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">numconnects<pos:position pos:line="10" pos:column="34"/></name></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <block pos:line="10" pos:column="36">{
    <comment type="block" pos:line="11" pos:column="5">/* there was no room available, kill one */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">i<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">ConnectionKillOne<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">data<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">infof<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">data<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="17">"Connection (#%d) was killed to make room\n"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">i<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">-<pos:position pos:line="16" pos:column="7"/></operator><literal type="number" pos:line="16" pos:column="7">1<pos:position pos:line="16" pos:column="8"/></literal> <operator pos:line="16" pos:column="9">!=<pos:position pos:line="16" pos:column="11"/></operator> <name pos:line="16" pos:column="12">i<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
    <comment type="block" pos:line="17" pos:column="5">/* only do this if a true index was returned, if -1 was returned there
       is no room in the cache for an unknown reason and we cannot store
       this there. */</comment>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">data<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">state<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">connects<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><name pos:line="20" pos:column="26">i<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">conn<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt> <comment type="block" pos:line="20" pos:column="37">/* fill in this */</comment>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">conn<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">connectindex<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">i<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt> <comment type="block" pos:line="21" pos:column="29">/* make the child know where the pointer to this
                               particular data is stored */</comment>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name></expr>;<pos:position pos:line="24" pos:column="12"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

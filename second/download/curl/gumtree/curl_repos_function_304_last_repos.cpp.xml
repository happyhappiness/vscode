<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_304_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">set_thread_string<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">localkey_t<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">key<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">s<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">cp<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">s<pos:position pos:line="8" pos:column="8"/></name></expr>)<pos:position pos:line="8" pos:column="9"/></condition><then pos:line="8" pos:column="9">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">char<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">i<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">strlen<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">s<pos:position pos:line="11" pos:column="15"/></name></expr></argument>)<pos:position pos:line="11" pos:column="16"/></argument_list></call> <operator pos:line="11" pos:column="17">+<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">cp<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">Curl_thread_buffer<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">key<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">MAX_CONV_EXPANSION<pos:position pos:line="12" pos:column="50"/></name> <operator pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">i<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">+<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="57">1<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">cp<pos:position pos:line="14" pos:column="8"/></name></expr>)<pos:position pos:line="14" pos:column="9"/></condition><then pos:line="14" pos:column="9"> <block pos:line="14" pos:column="10">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">i<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">QadrtConvertE2A<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">cp<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">s<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">MAX_CONV_EXPANSION<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">*<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">i<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">i<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">cp<pos:position pos:line="16" pos:column="7"/></name><index pos:line="16" pos:column="7">[<expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name></expr>]<pos:position pos:line="16" pos:column="10"/></index></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="char" pos:line="16" pos:column="13">'\0'<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">cp<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

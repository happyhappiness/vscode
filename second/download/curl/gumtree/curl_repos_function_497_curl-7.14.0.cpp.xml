<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_497_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_freeaddrinfo<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">Curl_addrinfo<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ai<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Curl_addrinfo<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">next<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* walk over the list and free all entries */</comment>
  <while pos:line="6" pos:column="3">while<condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">ai<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition> <block pos:line="6" pos:column="13">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">next<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name><name pos:line="7" pos:column="12">ai<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">ai_next<pos:position pos:line="7" pos:column="23"/></name></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">free<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">ai<pos:position pos:line="8" pos:column="12"/></name></expr></argument>)<pos:position pos:line="8" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">ai<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <name pos:line="9" pos:column="10">next<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></while>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1186_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_done<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">CURLcode<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">status<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">bool<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">premature<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">IMAP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">imap<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">data<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">req<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">protop<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">premature<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">imap<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">CURLE_OK<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">status<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13"> <block pos:line="13" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">connclose<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">conn<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"IMAP done with bad status"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt> <comment type="block" pos:line="14" pos:column="51">/* marked for closure */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">result<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">status<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>         <comment type="block" pos:line="15" pos:column="30">/* use the already set error code */</comment>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <elseif pos:line="17" pos:column="3">else <if pos:line="17" pos:column="8">if<condition pos:line="17" pos:column="10">(<expr><operator pos:line="17" pos:column="11">!<pos:position pos:line="17" pos:column="12"/></operator><name><name pos:line="17" pos:column="12">data<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">set<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">connect_only<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">&amp;&amp;<pos:position pos:line="17" pos:column="45"/></operator> <operator pos:line="17" pos:column="38">!<pos:position pos:line="17" pos:column="39"/></operator><name><name pos:line="17" pos:column="39">imap<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">custom<pos:position pos:line="17" pos:column="51"/></name></name> <operator pos:line="17" pos:column="52">&amp;&amp;<pos:position pos:line="17" pos:column="62"/></operator>
          <operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name><name pos:line="18" pos:column="12">imap<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">uid<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">||<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="25">data<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">set<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">upload<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">||<pos:position pos:line="18" pos:column="44"/></operator>
          <name><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">set<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">mimepost<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">kind<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">!=<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">MIMEKIND_NONE<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">)<pos:position pos:line="19" pos:column="52"/></operator></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <block pos:line="19" pos:column="54">{
    <comment type="block" pos:line="20" pos:column="5">/* Handle responses after FETCH or APPEND transfer has finished */</comment>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">!<pos:position pos:line="21" pos:column="9"/></operator><name><name pos:line="21" pos:column="9">data<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">set<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">upload<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">&amp;&amp;<pos:position pos:line="21" pos:column="36"/></operator> <name><name pos:line="21" pos:column="29">data<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">set<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">mimepost<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">.<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">kind<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">==<pos:position pos:line="21" pos:column="55"/></operator> <name pos:line="21" pos:column="56">MIMEKIND_NONE<pos:position pos:line="21" pos:column="69"/></name></expr>)<pos:position pos:line="21" pos:column="70"/></condition><then pos:line="21" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">state<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">IMAP_FETCH_FINAL<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
      <comment type="block" pos:line="24" pos:column="7">/* End the APPEND command first by sending an empty line */</comment>
      <expr_stmt><expr><name pos:line="25" pos:column="7">result<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">Curl_pp_sendf<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name><name pos:line="25" pos:column="31">conn<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">proto<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">imapc<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">.<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">pp<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="53">"%s"<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="59">""<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">!<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">result<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">state<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">conn<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">IMAP_APPEND_FINAL<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="30" pos:column="5">/* Run the state-machine

       TODO: when the multi interface is used, this _really_ should be using
       the imap_multi_statemach function but we have no general support for
       non-blocking DONE operations!
    */</comment>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><operator pos:line="36" pos:column="8">!<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">result<pos:position pos:line="36" pos:column="15"/></name></expr>)<pos:position pos:line="36" pos:column="16"/></condition><then pos:line="36" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">result<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">imap_block_statemach<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">conn<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="40" pos:column="3">/* Cleanup our per-request based variables */</comment>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">Curl_safefree<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name><name pos:line="41" pos:column="17">imap<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">mailbox<pos:position pos:line="41" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">Curl_safefree<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">imap<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">uidvalidity<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">Curl_safefree<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name><name pos:line="43" pos:column="17">imap<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">uid<pos:position pos:line="43" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">Curl_safefree<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name><name pos:line="44" pos:column="17">imap<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">section<pos:position pos:line="44" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">Curl_safefree<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">imap<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">partial<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">Curl_safefree<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name><name pos:line="46" pos:column="17">imap<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">query<pos:position pos:line="46" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">Curl_safefree<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">imap<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">custom<pos:position pos:line="47" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">Curl_safefree<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">imap<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">custom_params<pos:position pos:line="48" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="50" pos:column="3">/* Clear the transfer mode for the next request */</comment>
  <expr_stmt><expr><name><name pos:line="51" pos:column="3">imap<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">-&gt;<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="9">transfer<pos:position pos:line="51" pos:column="17"/></name></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">FTPTRANSFER_BODY<pos:position pos:line="51" pos:column="36"/></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>

  <return pos:line="53" pos:column="3">return <expr><name pos:line="53" pos:column="10">result<pos:position pos:line="53" pos:column="16"/></name></expr>;<pos:position pos:line="53" pos:column="17"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

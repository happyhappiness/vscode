<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_719_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">CreateConnection<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">SessionHandle<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">data<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">connectdata<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">in_connect<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">Curl_dns_entry<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier><modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">addr<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="4" pos:column="34">bool<pos:position pos:line="4" pos:column="38"/></name> <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier></type><name pos:line="4" pos:column="40">async<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">tmp<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name><init pos:line="8" pos:column="18">=<expr><name pos:line="8" pos:column="19">CURLE_OK<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">connectdata<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">conn<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">connectdata<pos:position pos:line="10" pos:column="21"/></name></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">conn_temp<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">urllen<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">Curl_dns_entry<pos:position pos:line="12" pos:column="24"/></name></name> <modifier pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></modifier></type><name pos:line="12" pos:column="26">hostaddr<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">HAVE_ALARM<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="28">!<pos:position pos:line="13" pos:column="29"/></operator><call><name pos:line="13" pos:column="29">defined<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">USE_ARES<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">unsigned<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">int<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">prev_alarm<pos:position pos:line="14" pos:column="26"/></name><init pos:line="14" pos:column="26">=<expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name></type> <name pos:line="16" pos:column="8">endbracket<pos:position pos:line="16" pos:column="18"/></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">user<pos:position pos:line="17" pos:column="12"/></name><index pos:line="17" pos:column="12">[<expr><name pos:line="17" pos:column="13">MAX_CURL_USER_LENGTH<pos:position pos:line="17" pos:column="33"/></name></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name></type> <name><name pos:line="18" pos:column="8">passwd<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><name pos:line="18" pos:column="15">MAX_CURL_PASSWORD_LENGTH<pos:position pos:line="18" pos:column="39"/></name></expr>]<pos:position pos:line="18" pos:column="40"/></index></name></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name></decl>;<pos:position pos:line="19" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">bool<pos:position pos:line="20" pos:column="7"/></name></type> <name pos:line="20" pos:column="8">reuse<pos:position pos:line="20" pos:column="13"/></name></decl>;<pos:position pos:line="20" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">char<pos:position pos:line="21" pos:column="7"/></name> <modifier pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></modifier></type><name pos:line="21" pos:column="9">proxy<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>

<cpp:ifndef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifndef<pos:position pos:line="23" pos:column="8"/></cpp:directive> <name pos:line="23" pos:column="9">USE_ARES<pos:position pos:line="23" pos:column="17"/></name></cpp:ifndef>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SIGALRM<pos:position pos:line="24" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">HAVE_SIGACTION<pos:position pos:line="25" pos:column="22"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="26" pos:column="3">struct<pos:position pos:line="26" pos:column="9"/></name> <name pos:line="26" pos:column="10">sigaction<pos:position pos:line="26" pos:column="19"/></name></name></type> <name pos:line="26" pos:column="20">keep_sigact<pos:position pos:line="26" pos:column="31"/></name></decl>;<pos:position pos:line="26" pos:column="32"/></decl_stmt>   <comment type="block" pos:line="26" pos:column="35">/* store the old struct here */</comment>
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">bool<pos:position pos:line="27" pos:column="7"/></name></type> <name pos:line="27" pos:column="8">keep_copysig<pos:position pos:line="27" pos:column="20"/></name><init pos:line="27" pos:column="20">=<expr><name pos:line="27" pos:column="21">FALSE<pos:position pos:line="27" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="27"/></decl_stmt>        <comment type="block" pos:line="27" pos:column="35">/* did copy it? */</comment>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_SIGNAL<pos:position pos:line="29" pos:column="19"/></name></cpp:ifdef>
  <function_decl><type><name pos:line="30" pos:column="3">void<pos:position pos:line="30" pos:column="7"/></name></type> (<modifier pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></modifier><name pos:line="30" pos:column="10">keep_sigact<pos:position pos:line="30" pos:column="21"/></name>)<parameter_list pos:line="30" pos:column="22">(<parameter><decl><type><name pos:line="30" pos:column="23">int<pos:position pos:line="30" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="30" pos:column="27"/></parameter_list>;<pos:position pos:line="30" pos:column="28"/></function_decl>       <comment type="block" pos:line="30" pos:column="35">/* store the old handler here */</comment>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="31" pos:column="8">/* HAVE_SIGNAL */</comment>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* HAVE_SIGACTION */</comment>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="33" pos:column="8">/* SIGALRM */</comment>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="34" pos:column="8">/* USE_ARES */</comment>

  <expr_stmt><expr><operator pos:line="36" pos:column="3">*<pos:position pos:line="36" pos:column="4"/></operator><name pos:line="36" pos:column="4">addr<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">NULL<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt> <comment type="block" pos:line="36" pos:column="17">/* nothing yet */</comment>
  <expr_stmt><expr><operator pos:line="37" pos:column="3">*<pos:position pos:line="37" pos:column="4"/></operator><name pos:line="37" pos:column="4">async<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">FALSE<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="39" pos:column="3">/*************************************************************
   * Check input data
   *************************************************************/</comment>

  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><operator pos:line="43" pos:column="6">!<pos:position pos:line="43" pos:column="7"/></operator><name><name pos:line="43" pos:column="7">data<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">change<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">url<pos:position pos:line="43" pos:column="23"/></name></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition><then pos:line="43" pos:column="24">
    <block type="pseudo"><return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="44" pos:column="31"/></name></expr>;<pos:position pos:line="44" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="46" pos:column="3">/* First, split up the current URL in parts so that we can use the
     parts for checking against the already present connections. In order
     to not have to modify everything at once, we allocate a temporary
     connection data struct and fill in for comparison purposes. */</comment>

  <expr_stmt><expr><name pos:line="51" pos:column="3">conn<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">=<pos:position pos:line="51" pos:column="9"/></operator> <operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator>struct <name pos:line="51" pos:column="18">connectdata<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></operator><operator pos:line="51" pos:column="31">)<pos:position pos:line="51" pos:column="32"/></operator><call><name pos:line="51" pos:column="32">calloc<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><literal type="number" pos:line="51" pos:column="39">1<pos:position pos:line="51" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="42">sizeof<argument_list pos:line="51" pos:column="48">(<argument><expr pos:line="51" pos:column="49">struct <name pos:line="51" pos:column="56">connectdata<pos:position pos:line="51" pos:column="67"/></name></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><operator pos:line="52" pos:column="6">!<pos:position pos:line="52" pos:column="7"/></operator><name pos:line="52" pos:column="7">conn<pos:position pos:line="52" pos:column="11"/></name></expr>)<pos:position pos:line="52" pos:column="12"/></condition><then pos:line="52" pos:column="12"> <block pos:line="52" pos:column="13">{
    <expr_stmt><expr><operator pos:line="53" pos:column="5">*<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">in_connect<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">NULL<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt> <comment type="block" pos:line="53" pos:column="25">/* clear the pointer */</comment>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="56" pos:column="3">/* We must set the return variable as soon as possible, so that our
     parent can cleanup any possible allocs we may have done before
     any failure */</comment>
  <expr_stmt><expr><operator pos:line="59" pos:column="3">*<pos:position pos:line="59" pos:column="4"/></operator><name pos:line="59" pos:column="4">in_connect<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">conn<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="61" pos:column="3">conn<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">handler<pos:position pos:line="61" pos:column="16"/></name></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <operator pos:line="61" pos:column="19">&amp;<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="20">Curl_handler_dummy<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="61" pos:column="41">/* Be sure we have a handler defined
                                           already from start to avoid NULL
                                           situations and checks */</comment>

  <comment type="block" pos:line="65" pos:column="3">/* and we setup a few fields in case we end up actually using this struct */</comment>

  <expr_stmt><expr><name><name pos:line="67" pos:column="3">conn<pos:position pos:line="67" pos:column="7"/></name><operator pos:line="67" pos:column="7">-&gt;<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="9">data<pos:position pos:line="67" pos:column="13"/></name></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">data<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt> <comment type="block" pos:line="67" pos:column="22">/* Setup the association between this connection
                        and the SessionHandle */</comment>

  <expr_stmt><expr><name><name pos:line="70" pos:column="3">conn<pos:position pos:line="70" pos:column="7"/></name><operator pos:line="70" pos:column="7">-&gt;<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="9">sock<pos:position pos:line="70" pos:column="13"/></name><index pos:line="70" pos:column="13">[<expr><name pos:line="70" pos:column="14">FIRSTSOCKET<pos:position pos:line="70" pos:column="25"/></name></expr>]<pos:position pos:line="70" pos:column="26"/></index></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="70" pos:column="44"/></name></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>     <comment type="block" pos:line="70" pos:column="50">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">conn<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">sock<pos:position pos:line="71" pos:column="13"/></name><index pos:line="71" pos:column="13">[<expr><name pos:line="71" pos:column="14">SECONDARYSOCKET<pos:position pos:line="71" pos:column="29"/></name></expr>]<pos:position pos:line="71" pos:column="30"/></index></name> <operator pos:line="71" pos:column="31">=<pos:position pos:line="71" pos:column="32"/></operator> <name pos:line="71" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="71" pos:column="48"/></name></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt> <comment type="block" pos:line="71" pos:column="50">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="72" pos:column="3">conn<pos:position pos:line="72" pos:column="7"/></name><operator pos:line="72" pos:column="7">-&gt;<pos:position pos:line="72" pos:column="12"/></operator><name pos:line="72" pos:column="9">connectindex<pos:position pos:line="72" pos:column="21"/></name></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <operator pos:line="72" pos:column="24">-<pos:position pos:line="72" pos:column="25"/></operator><literal type="number" pos:line="72" pos:column="25">1<pos:position pos:line="72" pos:column="26"/></literal></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="72" pos:column="31">/* no index */</comment>

  <expr_stmt><expr><name><name pos:line="74" pos:column="3">conn<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">proxytype<pos:position pos:line="74" pos:column="18"/></name></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <name><name pos:line="74" pos:column="21">data<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">-&gt;<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="27">set<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">.<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="31">proxytype<pos:position pos:line="74" pos:column="40"/></name></name></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt> <comment type="block" pos:line="74" pos:column="42">/* type */</comment>
  <expr_stmt><expr><name><name pos:line="75" pos:column="3">conn<pos:position pos:line="75" pos:column="7"/></name><operator pos:line="75" pos:column="7">-&gt;<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="9">bits<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">.<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">proxy<pos:position pos:line="75" pos:column="19"/></name></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <call pos:line="75" pos:column="22">(<name pos:line="75" pos:column="23">bool<pos:position pos:line="75" pos:column="27"/></name>)<argument_list pos:line="75" pos:column="28">(<argument><expr><name><name pos:line="75" pos:column="29">data<pos:position pos:line="75" pos:column="33"/></name><operator pos:line="75" pos:column="33">-&gt;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="35">set<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">.<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="39">str<pos:position pos:line="75" pos:column="42"/></name><index pos:line="75" pos:column="42">[<expr><name pos:line="75" pos:column="43">STRING_PROXY<pos:position pos:line="75" pos:column="55"/></name></expr>]<pos:position pos:line="75" pos:column="56"/></index></name> <operator pos:line="75" pos:column="57">&amp;&amp;<pos:position pos:line="75" pos:column="67"/></operator>
                            <operator pos:line="76" pos:column="29">*<pos:position pos:line="76" pos:column="30"/></operator><name><name pos:line="76" pos:column="30">data<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">-&gt;<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="36">set<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">.<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="40">str<pos:position pos:line="76" pos:column="43"/></name><index pos:line="76" pos:column="43">[<expr><name pos:line="76" pos:column="44">STRING_PROXY<pos:position pos:line="76" pos:column="56"/></name></expr>]<pos:position pos:line="76" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="77" pos:column="3">conn<pos:position pos:line="77" pos:column="7"/></name><operator pos:line="77" pos:column="7">-&gt;<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="9">bits<pos:position pos:line="77" pos:column="13"/></name><operator pos:line="77" pos:column="13">.<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">httpproxy<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <call pos:line="77" pos:column="26">(<name pos:line="77" pos:column="27">bool<pos:position pos:line="77" pos:column="31"/></name>)<argument_list pos:line="77" pos:column="32">(<argument><expr><name><name pos:line="77" pos:column="33">conn<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">-&gt;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="39">bits<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">.<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="44">proxy<pos:position pos:line="77" pos:column="49"/></name></name>
                                <operator pos:line="78" pos:column="33">&amp;&amp;<pos:position pos:line="78" pos:column="43"/></operator> <operator pos:line="78" pos:column="36">(<pos:position pos:line="78" pos:column="37"/></operator><name><name pos:line="78" pos:column="37">conn<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">proxytype<pos:position pos:line="78" pos:column="52"/></name></name> <operator pos:line="78" pos:column="53">==<pos:position pos:line="78" pos:column="55"/></operator> <name pos:line="78" pos:column="56">CURLPROXY_HTTP<pos:position pos:line="78" pos:column="70"/></name><operator pos:line="78" pos:column="70">)<pos:position pos:line="78" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="73"/></expr_stmt>


  <comment type="block" pos:line="81" pos:column="3">/* Default protocol-independent behavior doesn't support persistent
     connections, so we set this to force-close. Protocols that support
     this need to set this to FALSE in their "curl_do" functions. */</comment>
  <expr_stmt><expr><name><name pos:line="84" pos:column="3">conn<pos:position pos:line="84" pos:column="7"/></name><operator pos:line="84" pos:column="7">-&gt;<pos:position pos:line="84" pos:column="12"/></operator><name pos:line="84" pos:column="9">bits<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">.<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">close<pos:position pos:line="84" pos:column="19"/></name></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <name pos:line="84" pos:column="22">TRUE<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="86" pos:column="3">conn<pos:position pos:line="86" pos:column="7"/></name><operator pos:line="86" pos:column="7">-&gt;<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="9">readchannel_inuse<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <name pos:line="86" pos:column="29">FALSE<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="87" pos:column="3">conn<pos:position pos:line="87" pos:column="7"/></name><operator pos:line="87" pos:column="7">-&gt;<pos:position pos:line="87" pos:column="12"/></operator><name pos:line="87" pos:column="9">writechannel_inuse<pos:position pos:line="87" pos:column="27"/></name></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <name pos:line="87" pos:column="30">FALSE<pos:position pos:line="87" pos:column="35"/></name></expr>;<pos:position pos:line="87" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="89" pos:column="3">conn<pos:position pos:line="89" pos:column="7"/></name><operator pos:line="89" pos:column="7">-&gt;<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="9">read_pos<pos:position pos:line="89" pos:column="17"/></name></name> <operator pos:line="89" pos:column="18">=<pos:position pos:line="89" pos:column="19"/></operator> <literal type="number" pos:line="89" pos:column="20">0<pos:position pos:line="89" pos:column="21"/></literal></expr>;<pos:position pos:line="89" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="90" pos:column="3">conn<pos:position pos:line="90" pos:column="7"/></name><operator pos:line="90" pos:column="7">-&gt;<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="9">buf_len<pos:position pos:line="90" pos:column="16"/></name></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <literal type="number" pos:line="90" pos:column="19">0<pos:position pos:line="90" pos:column="20"/></literal></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="92" pos:column="3">/* Store creation time to help future close decision making */</comment>
  <expr_stmt><expr><name><name pos:line="93" pos:column="3">conn<pos:position pos:line="93" pos:column="7"/></name><operator pos:line="93" pos:column="7">-&gt;<pos:position pos:line="93" pos:column="12"/></operator><name pos:line="93" pos:column="9">created<pos:position pos:line="93" pos:column="16"/></name></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <call><name pos:line="93" pos:column="19">Curl_tvnow<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">()<pos:position pos:line="93" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="95" pos:column="3">conn<pos:position pos:line="95" pos:column="7"/></name><operator pos:line="95" pos:column="7">-&gt;<pos:position pos:line="95" pos:column="12"/></operator><name pos:line="95" pos:column="9">bits<pos:position pos:line="95" pos:column="13"/></name><operator pos:line="95" pos:column="13">.<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">user_passwd<pos:position pos:line="95" pos:column="25"/></name></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <call pos:line="95" pos:column="28">(<name pos:line="95" pos:column="29">bool<pos:position pos:line="95" pos:column="33"/></name>)<argument_list pos:line="95" pos:column="34">(<argument><expr><name pos:line="95" pos:column="35">NULL<pos:position pos:line="95" pos:column="39"/></name> <operator pos:line="95" pos:column="40">!=<pos:position pos:line="95" pos:column="42"/></operator> <name><name pos:line="95" pos:column="43">data<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-&gt;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="49">set<pos:position pos:line="95" pos:column="52"/></name><operator pos:line="95" pos:column="52">.<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="53">str<pos:position pos:line="95" pos:column="56"/></name><index pos:line="95" pos:column="56">[<expr><name pos:line="95" pos:column="57">STRING_USERPWD<pos:position pos:line="95" pos:column="71"/></name></expr>]<pos:position pos:line="95" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="96" pos:column="3">conn<pos:position pos:line="96" pos:column="7"/></name><operator pos:line="96" pos:column="7">-&gt;<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="9">bits<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">.<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="14">proxy_user_passwd<pos:position pos:line="96" pos:column="31"/></name></name> <operator pos:line="96" pos:column="32">=<pos:position pos:line="96" pos:column="33"/></operator> <call pos:line="96" pos:column="34">(<name pos:line="96" pos:column="35">bool<pos:position pos:line="96" pos:column="39"/></name>)<argument_list pos:line="96" pos:column="40">(<argument><expr><name pos:line="96" pos:column="41">NULL<pos:position pos:line="96" pos:column="45"/></name> <operator pos:line="96" pos:column="46">!=<pos:position pos:line="96" pos:column="48"/></operator> <name><name pos:line="96" pos:column="49">data<pos:position pos:line="96" pos:column="53"/></name><operator pos:line="96" pos:column="53">-&gt;<pos:position pos:line="96" pos:column="58"/></operator><name pos:line="96" pos:column="55">set<pos:position pos:line="96" pos:column="58"/></name><operator pos:line="96" pos:column="58">.<pos:position pos:line="96" pos:column="59"/></operator><name pos:line="96" pos:column="59">str<pos:position pos:line="96" pos:column="62"/></name><index pos:line="96" pos:column="62">[<expr><name pos:line="96" pos:column="63">STRING_PROXYUSERPWD<pos:position pos:line="96" pos:column="82"/></name></expr>]<pos:position pos:line="96" pos:column="83"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="97" pos:column="3">conn<pos:position pos:line="97" pos:column="7"/></name><operator pos:line="97" pos:column="7">-&gt;<pos:position pos:line="97" pos:column="12"/></operator><name pos:line="97" pos:column="9">bits<pos:position pos:line="97" pos:column="13"/></name><operator pos:line="97" pos:column="13">.<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="14">tunnel_proxy<pos:position pos:line="97" pos:column="26"/></name></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <name><name pos:line="97" pos:column="29">data<pos:position pos:line="97" pos:column="33"/></name><operator pos:line="97" pos:column="33">-&gt;<pos:position pos:line="97" pos:column="38"/></operator><name pos:line="97" pos:column="35">set<pos:position pos:line="97" pos:column="38"/></name><operator pos:line="97" pos:column="38">.<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="39">tunnel_thru_httpproxy<pos:position pos:line="97" pos:column="60"/></name></name></expr>;<pos:position pos:line="97" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="98" pos:column="3">conn<pos:position pos:line="98" pos:column="7"/></name><operator pos:line="98" pos:column="7">-&gt;<pos:position pos:line="98" pos:column="12"/></operator><name pos:line="98" pos:column="9">bits<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">.<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">ftp_use_epsv<pos:position pos:line="98" pos:column="26"/></name></name> <operator pos:line="98" pos:column="27">=<pos:position pos:line="98" pos:column="28"/></operator> <name><name pos:line="98" pos:column="29">data<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">-&gt;<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="35">set<pos:position pos:line="98" pos:column="38"/></name><operator pos:line="98" pos:column="38">.<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="39">ftp_use_epsv<pos:position pos:line="98" pos:column="51"/></name></name></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="99" pos:column="3">conn<pos:position pos:line="99" pos:column="7"/></name><operator pos:line="99" pos:column="7">-&gt;<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="9">bits<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">.<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">ftp_use_eprt<pos:position pos:line="99" pos:column="26"/></name></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name><name pos:line="99" pos:column="29">data<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">-&gt;<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="35">set<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">.<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="39">ftp_use_eprt<pos:position pos:line="99" pos:column="51"/></name></name></expr>;<pos:position pos:line="99" pos:column="52"/></expr_stmt>

  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><name><name pos:line="101" pos:column="6">data<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">multi<pos:position pos:line="101" pos:column="17"/></name></name> <operator pos:line="101" pos:column="18">&amp;&amp;<pos:position pos:line="101" pos:column="28"/></operator> <call><name pos:line="101" pos:column="21">Curl_multi_canPipeline<pos:position pos:line="101" pos:column="43"/></name><argument_list pos:line="101" pos:column="43">(<argument><expr><name><name pos:line="101" pos:column="44">data<pos:position pos:line="101" pos:column="48"/></name><operator pos:line="101" pos:column="48">-&gt;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="50">multi<pos:position pos:line="101" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call> <operator pos:line="101" pos:column="57">&amp;&amp;<pos:position pos:line="101" pos:column="67"/></operator>
      <operator pos:line="102" pos:column="7">!<pos:position pos:line="102" pos:column="8"/></operator><name><name pos:line="102" pos:column="8">conn<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">-&gt;<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="14">master_buffer<pos:position pos:line="102" pos:column="27"/></name></name></expr>)<pos:position pos:line="102" pos:column="28"/></condition><then pos:line="102" pos:column="28"> <block pos:line="102" pos:column="29">{
    <comment type="block" pos:line="103" pos:column="5">/* Allocate master_buffer to be used for pipelining */</comment>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">conn<pos:position pos:line="104" pos:column="9"/></name><operator pos:line="104" pos:column="9">-&gt;<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="11">master_buffer<pos:position pos:line="104" pos:column="24"/></name></name> <operator pos:line="104" pos:column="25">=<pos:position pos:line="104" pos:column="26"/></operator> <call><name pos:line="104" pos:column="27">calloc<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name pos:line="104" pos:column="34">BUFSIZE<pos:position pos:line="104" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="43">sizeof <argument_list pos:line="104" pos:column="50">(<argument><expr><name pos:line="104" pos:column="51">char<pos:position pos:line="104" pos:column="55"/></name></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="104" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
    <if pos:line="105" pos:column="5">if<condition pos:line="105" pos:column="7">(<expr><operator pos:line="105" pos:column="8">!<pos:position pos:line="105" pos:column="9"/></operator><name><name pos:line="105" pos:column="9">conn<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">-&gt;<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="15">master_buffer<pos:position pos:line="105" pos:column="28"/></name></name></expr>)<pos:position pos:line="105" pos:column="29"/></condition><then pos:line="105" pos:column="29">
      <block type="pseudo"><return pos:line="106" pos:column="7">return <expr><name pos:line="106" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="106" pos:column="33"/></name></expr>;<pos:position pos:line="106" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="109" pos:column="3">/* Initialize the pipeline lists */</comment>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">conn<pos:position pos:line="110" pos:column="7"/></name><operator pos:line="110" pos:column="7">-&gt;<pos:position pos:line="110" pos:column="12"/></operator><name pos:line="110" pos:column="9">send_pipe<pos:position pos:line="110" pos:column="18"/></name></name> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <call><name pos:line="110" pos:column="21">Curl_llist_alloc<pos:position pos:line="110" pos:column="37"/></name><argument_list pos:line="110" pos:column="37">(<argument><expr><operator pos:line="110" pos:column="38">(<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="39">curl_llist_dtor<pos:position pos:line="110" pos:column="54"/></name><operator pos:line="110" pos:column="54">)<pos:position pos:line="110" pos:column="55"/></operator> <name pos:line="110" pos:column="56">llist_dtor<pos:position pos:line="110" pos:column="66"/></name></expr></argument>)<pos:position pos:line="110" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">conn<pos:position pos:line="111" pos:column="7"/></name><operator pos:line="111" pos:column="7">-&gt;<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="9">recv_pipe<pos:position pos:line="111" pos:column="18"/></name></name> <operator pos:line="111" pos:column="19">=<pos:position pos:line="111" pos:column="20"/></operator> <call><name pos:line="111" pos:column="21">Curl_llist_alloc<pos:position pos:line="111" pos:column="37"/></name><argument_list pos:line="111" pos:column="37">(<argument><expr><operator pos:line="111" pos:column="38">(<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="39">curl_llist_dtor<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">)<pos:position pos:line="111" pos:column="55"/></operator> <name pos:line="111" pos:column="56">llist_dtor<pos:position pos:line="111" pos:column="66"/></name></expr></argument>)<pos:position pos:line="111" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="112" pos:column="3">conn<pos:position pos:line="112" pos:column="7"/></name><operator pos:line="112" pos:column="7">-&gt;<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="9">pend_pipe<pos:position pos:line="112" pos:column="18"/></name></name> <operator pos:line="112" pos:column="19">=<pos:position pos:line="112" pos:column="20"/></operator> <call><name pos:line="112" pos:column="21">Curl_llist_alloc<pos:position pos:line="112" pos:column="37"/></name><argument_list pos:line="112" pos:column="37">(<argument><expr><operator pos:line="112" pos:column="38">(<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="39">curl_llist_dtor<pos:position pos:line="112" pos:column="54"/></name><operator pos:line="112" pos:column="54">)<pos:position pos:line="112" pos:column="55"/></operator> <name pos:line="112" pos:column="56">llist_dtor<pos:position pos:line="112" pos:column="66"/></name></expr></argument>)<pos:position pos:line="112" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="68"/></expr_stmt>
  <if pos:line="113" pos:column="3">if<condition pos:line="113" pos:column="5">(<expr><operator pos:line="113" pos:column="6">!<pos:position pos:line="113" pos:column="7"/></operator><name><name pos:line="113" pos:column="7">conn<pos:position pos:line="113" pos:column="11"/></name><operator pos:line="113" pos:column="11">-&gt;<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="13">send_pipe<pos:position pos:line="113" pos:column="22"/></name></name> <operator pos:line="113" pos:column="23">||<pos:position pos:line="113" pos:column="25"/></operator> <operator pos:line="113" pos:column="26">!<pos:position pos:line="113" pos:column="27"/></operator><name><name pos:line="113" pos:column="27">conn<pos:position pos:line="113" pos:column="31"/></name><operator pos:line="113" pos:column="31">-&gt;<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="33">recv_pipe<pos:position pos:line="113" pos:column="42"/></name></name> <operator pos:line="113" pos:column="43">||<pos:position pos:line="113" pos:column="45"/></operator> <operator pos:line="113" pos:column="46">!<pos:position pos:line="113" pos:column="47"/></operator><name><name pos:line="113" pos:column="47">conn<pos:position pos:line="113" pos:column="51"/></name><operator pos:line="113" pos:column="51">-&gt;<pos:position pos:line="113" pos:column="56"/></operator><name pos:line="113" pos:column="53">pend_pipe<pos:position pos:line="113" pos:column="62"/></name></name></expr>)<pos:position pos:line="113" pos:column="63"/></condition><then pos:line="113" pos:column="63">
    <block type="pseudo"><return pos:line="114" pos:column="5">return <expr><name pos:line="114" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="114" pos:column="31"/></name></expr>;<pos:position pos:line="114" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="116" pos:column="3">/* This initing continues below, see the comment "Continue connectdata
   * initialization here" */</comment>

  <comment type="block" format="doxygen" pos:line="119" pos:column="3">/***********************************************************
   * We need to allocate memory to store the path in. We get the size of the
   * full URL to be sure, and we need to make it at least 256 bytes since
   * other parts of the code will rely on this fact
   ***********************************************************/</comment>
<cpp:define pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">define<pos:position pos:line="124" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="124" pos:column="9">LEAST_PATH_ALLOC<pos:position pos:line="124" pos:column="25"/></name></cpp:macro> <cpp:value pos:line="124" pos:column="26">256<pos:position pos:line="124" pos:column="29"/></cpp:value></cpp:define>
  <expr_stmt><expr><name pos:line="125" pos:column="3">urllen<pos:position pos:line="125" pos:column="9"/></name><operator pos:line="125" pos:column="9">=<pos:position pos:line="125" pos:column="10"/></operator><call><name pos:line="125" pos:column="10">strlen<pos:position pos:line="125" pos:column="16"/></name><argument_list pos:line="125" pos:column="16">(<argument><expr><name><name pos:line="125" pos:column="17">data<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">-&gt;<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="23">change<pos:position pos:line="125" pos:column="29"/></name><operator pos:line="125" pos:column="29">.<pos:position pos:line="125" pos:column="30"/></operator><name pos:line="125" pos:column="30">url<pos:position pos:line="125" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt>
  <if pos:line="126" pos:column="3">if<condition pos:line="126" pos:column="5">(<expr><name pos:line="126" pos:column="6">urllen<pos:position pos:line="126" pos:column="12"/></name> <operator pos:line="126" pos:column="13">&lt;<pos:position pos:line="126" pos:column="17"/></operator> <name pos:line="126" pos:column="15">LEAST_PATH_ALLOC<pos:position pos:line="126" pos:column="31"/></name></expr>)<pos:position pos:line="126" pos:column="32"/></condition><then pos:line="126" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="5">urllen<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">=<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="12">LEAST_PATH_ALLOC<pos:position pos:line="127" pos:column="28"/></name></expr>;<pos:position pos:line="127" pos:column="29"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="129" pos:column="3">/* Free the old buffer */</comment>
  <expr_stmt><expr><call><name pos:line="130" pos:column="3">Curl_safefree<pos:position pos:line="130" pos:column="16"/></name><argument_list pos:line="130" pos:column="16">(<argument><expr><name><name pos:line="130" pos:column="17">data<pos:position pos:line="130" pos:column="21"/></name><operator pos:line="130" pos:column="21">-&gt;<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="23">state<pos:position pos:line="130" pos:column="28"/></name><operator pos:line="130" pos:column="28">.<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="29">pathbuffer<pos:position pos:line="130" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="132" pos:column="3">/*
   * We malloc() the buffers below urllen+2 to make room for to possibilities:
   * 1 - an extra terminating zero
   * 2 - an extra slash (in case a syntax like "www.host.com?moo" is used)
   */</comment>

  <expr_stmt><expr><name><name pos:line="138" pos:column="3">data<pos:position pos:line="138" pos:column="7"/></name><operator pos:line="138" pos:column="7">-&gt;<pos:position pos:line="138" pos:column="12"/></operator><name pos:line="138" pos:column="9">state<pos:position pos:line="138" pos:column="14"/></name><operator pos:line="138" pos:column="14">.<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="15">pathbuffer<pos:position pos:line="138" pos:column="25"/></name></name><operator pos:line="138" pos:column="25">=<pos:position pos:line="138" pos:column="26"/></operator><operator pos:line="138" pos:column="26">(<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="27">char<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">*<pos:position pos:line="138" pos:column="33"/></operator><operator pos:line="138" pos:column="33">)<pos:position pos:line="138" pos:column="34"/></operator><call><name pos:line="138" pos:column="34">malloc<pos:position pos:line="138" pos:column="40"/></name><argument_list pos:line="138" pos:column="40">(<argument><expr><name pos:line="138" pos:column="41">urllen<pos:position pos:line="138" pos:column="47"/></name><operator pos:line="138" pos:column="47">+<pos:position pos:line="138" pos:column="48"/></operator><literal type="number" pos:line="138" pos:column="48">2<pos:position pos:line="138" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="51"/></expr_stmt>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">(<expr><name pos:line="139" pos:column="6">NULL<pos:position pos:line="139" pos:column="10"/></name> <operator pos:line="139" pos:column="11">==<pos:position pos:line="139" pos:column="13"/></operator> <name><name pos:line="139" pos:column="14">data<pos:position pos:line="139" pos:column="18"/></name><operator pos:line="139" pos:column="18">-&gt;<pos:position pos:line="139" pos:column="23"/></operator><name pos:line="139" pos:column="20">state<pos:position pos:line="139" pos:column="25"/></name><operator pos:line="139" pos:column="25">.<pos:position pos:line="139" pos:column="26"/></operator><name pos:line="139" pos:column="26">pathbuffer<pos:position pos:line="139" pos:column="36"/></name></name></expr>)<pos:position pos:line="139" pos:column="37"/></condition><then pos:line="139" pos:column="37">
    <block type="pseudo"><return pos:line="140" pos:column="5">return <expr><name pos:line="140" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="140" pos:column="31"/></name></expr>;<pos:position pos:line="140" pos:column="32"/></return></block></then></if> <comment type="block" pos:line="140" pos:column="33">/* really bad error */</comment>
  <expr_stmt><expr><name><name pos:line="141" pos:column="3">data<pos:position pos:line="141" pos:column="7"/></name><operator pos:line="141" pos:column="7">-&gt;<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="9">state<pos:position pos:line="141" pos:column="14"/></name><operator pos:line="141" pos:column="14">.<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="15">path<pos:position pos:line="141" pos:column="19"/></name></name> <operator pos:line="141" pos:column="20">=<pos:position pos:line="141" pos:column="21"/></operator> <name><name pos:line="141" pos:column="22">data<pos:position pos:line="141" pos:column="26"/></name><operator pos:line="141" pos:column="26">-&gt;<pos:position pos:line="141" pos:column="31"/></operator><name pos:line="141" pos:column="28">state<pos:position pos:line="141" pos:column="33"/></name><operator pos:line="141" pos:column="33">.<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="34">pathbuffer<pos:position pos:line="141" pos:column="44"/></name></name></expr>;<pos:position pos:line="141" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="143" pos:column="3">conn<pos:position pos:line="143" pos:column="7"/></name><operator pos:line="143" pos:column="7">-&gt;<pos:position pos:line="143" pos:column="12"/></operator><name pos:line="143" pos:column="9">host<pos:position pos:line="143" pos:column="13"/></name><operator pos:line="143" pos:column="13">.<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="14">rawalloc<pos:position pos:line="143" pos:column="22"/></name></name><operator pos:line="143" pos:column="22">=<pos:position pos:line="143" pos:column="23"/></operator><operator pos:line="143" pos:column="23">(<pos:position pos:line="143" pos:column="24"/></operator><name pos:line="143" pos:column="24">char<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">*<pos:position pos:line="143" pos:column="30"/></operator><operator pos:line="143" pos:column="30">)<pos:position pos:line="143" pos:column="31"/></operator><call><name pos:line="143" pos:column="31">malloc<pos:position pos:line="143" pos:column="37"/></name><argument_list pos:line="143" pos:column="37">(<argument><expr><name pos:line="143" pos:column="38">urllen<pos:position pos:line="143" pos:column="44"/></name><operator pos:line="143" pos:column="44">+<pos:position pos:line="143" pos:column="45"/></operator><literal type="number" pos:line="143" pos:column="45">2<pos:position pos:line="143" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="48"/></expr_stmt>
  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><name pos:line="144" pos:column="6">NULL<pos:position pos:line="144" pos:column="10"/></name> <operator pos:line="144" pos:column="11">==<pos:position pos:line="144" pos:column="13"/></operator> <name><name pos:line="144" pos:column="14">conn<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">-&gt;<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="20">host<pos:position pos:line="144" pos:column="24"/></name><operator pos:line="144" pos:column="24">.<pos:position pos:line="144" pos:column="25"/></operator><name pos:line="144" pos:column="25">rawalloc<pos:position pos:line="144" pos:column="33"/></name></name></expr>)<pos:position pos:line="144" pos:column="34"/></condition><then pos:line="144" pos:column="34">
    <block type="pseudo"><return pos:line="145" pos:column="5">return <expr><name pos:line="145" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="145" pos:column="31"/></name></expr>;<pos:position pos:line="145" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="147" pos:column="3">conn<pos:position pos:line="147" pos:column="7"/></name><operator pos:line="147" pos:column="7">-&gt;<pos:position pos:line="147" pos:column="12"/></operator><name pos:line="147" pos:column="9">host<pos:position pos:line="147" pos:column="13"/></name><operator pos:line="147" pos:column="13">.<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">name<pos:position pos:line="147" pos:column="18"/></name></name> <operator pos:line="147" pos:column="19">=<pos:position pos:line="147" pos:column="20"/></operator> <name><name pos:line="147" pos:column="21">conn<pos:position pos:line="147" pos:column="25"/></name><operator pos:line="147" pos:column="25">-&gt;<pos:position pos:line="147" pos:column="30"/></operator><name pos:line="147" pos:column="27">host<pos:position pos:line="147" pos:column="31"/></name><operator pos:line="147" pos:column="31">.<pos:position pos:line="147" pos:column="32"/></operator><name pos:line="147" pos:column="32">rawalloc<pos:position pos:line="147" pos:column="40"/></name></name></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="148" pos:column="3">conn<pos:position pos:line="148" pos:column="7"/></name><operator pos:line="148" pos:column="7">-&gt;<pos:position pos:line="148" pos:column="12"/></operator><name pos:line="148" pos:column="9">host<pos:position pos:line="148" pos:column="13"/></name><operator pos:line="148" pos:column="13">.<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="14">name<pos:position pos:line="148" pos:column="18"/></name><index pos:line="148" pos:column="18">[<expr><literal type="number" pos:line="148" pos:column="19">0<pos:position pos:line="148" pos:column="20"/></literal></expr>]<pos:position pos:line="148" pos:column="21"/></index></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <literal type="number" pos:line="148" pos:column="24">0<pos:position pos:line="148" pos:column="25"/></literal></expr>;<pos:position pos:line="148" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="150" pos:column="3">result<pos:position pos:line="150" pos:column="9"/></name> <operator pos:line="150" pos:column="10">=<pos:position pos:line="150" pos:column="11"/></operator> <call><name pos:line="150" pos:column="12">ParseURLAndFillConnection<pos:position pos:line="150" pos:column="37"/></name><argument_list pos:line="150" pos:column="37">(<argument><expr><name pos:line="150" pos:column="38">data<pos:position pos:line="150" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="44">conn<pos:position pos:line="150" pos:column="48"/></name></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><name pos:line="151" pos:column="6">result<pos:position pos:line="151" pos:column="12"/></name> <operator pos:line="151" pos:column="13">!=<pos:position pos:line="151" pos:column="15"/></operator> <name pos:line="151" pos:column="16">CURLE_OK<pos:position pos:line="151" pos:column="24"/></name></expr>)<pos:position pos:line="151" pos:column="25"/></condition><then pos:line="151" pos:column="25"> <block pos:line="151" pos:column="26">{
      <return pos:line="152" pos:column="7">return <expr><name pos:line="152" pos:column="14">result<pos:position pos:line="152" pos:column="20"/></name></expr>;<pos:position pos:line="152" pos:column="21"/></return>
  }<pos:position pos:line="153" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="155" pos:column="3">/*************************************************************
   * Take care of proxy authentication stuff
   *************************************************************/</comment>
  <if pos:line="158" pos:column="3">if<condition pos:line="158" pos:column="5">(<expr><name><name pos:line="158" pos:column="6">conn<pos:position pos:line="158" pos:column="10"/></name><operator pos:line="158" pos:column="10">-&gt;<pos:position pos:line="158" pos:column="15"/></operator><name pos:line="158" pos:column="12">bits<pos:position pos:line="158" pos:column="16"/></name><operator pos:line="158" pos:column="16">.<pos:position pos:line="158" pos:column="17"/></operator><name pos:line="158" pos:column="17">proxy_user_passwd<pos:position pos:line="158" pos:column="34"/></name></name></expr>)<pos:position pos:line="158" pos:column="35"/></condition><then pos:line="158" pos:column="35"> <block pos:line="158" pos:column="36">{
    <expr_stmt><expr><name pos:line="159" pos:column="5">result<pos:position pos:line="159" pos:column="11"/></name> <operator pos:line="159" pos:column="12">=<pos:position pos:line="159" pos:column="13"/></operator> <call><name pos:line="159" pos:column="14">parse_proxy_auth<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name pos:line="159" pos:column="31">data<pos:position pos:line="159" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="37">conn<pos:position pos:line="159" pos:column="41"/></name></expr></argument>)<pos:position pos:line="159" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="43"/></expr_stmt>
    <if pos:line="160" pos:column="5">if<condition pos:line="160" pos:column="7">(<expr><name pos:line="160" pos:column="8">result<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">!=<pos:position pos:line="160" pos:column="17"/></operator> <name pos:line="160" pos:column="18">CURLE_OK<pos:position pos:line="160" pos:column="26"/></name></expr>)<pos:position pos:line="160" pos:column="27"/></condition><then pos:line="160" pos:column="27">
        <block type="pseudo"><return pos:line="161" pos:column="9">return <expr><name pos:line="161" pos:column="16">result<pos:position pos:line="161" pos:column="22"/></name></expr>;<pos:position pos:line="161" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="164" pos:column="3">/*************************************************************
   * Detect what (if any) proxy to use
   *************************************************************/</comment>
  <if pos:line="167" pos:column="3">if<condition pos:line="167" pos:column="5">(<expr><name><name pos:line="167" pos:column="6">data<pos:position pos:line="167" pos:column="10"/></name><operator pos:line="167" pos:column="10">-&gt;<pos:position pos:line="167" pos:column="15"/></operator><name pos:line="167" pos:column="12">set<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">.<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="16">str<pos:position pos:line="167" pos:column="19"/></name><index pos:line="167" pos:column="19">[<expr><name pos:line="167" pos:column="20">STRING_PROXY<pos:position pos:line="167" pos:column="32"/></name></expr>]<pos:position pos:line="167" pos:column="33"/></index></name></expr>)<pos:position pos:line="167" pos:column="34"/></condition><then pos:line="167" pos:column="34"> <block pos:line="167" pos:column="35">{
    <expr_stmt><expr><name pos:line="168" pos:column="5">proxy<pos:position pos:line="168" pos:column="10"/></name> <operator pos:line="168" pos:column="11">=<pos:position pos:line="168" pos:column="12"/></operator> <call><name pos:line="168" pos:column="13">strdup<pos:position pos:line="168" pos:column="19"/></name><argument_list pos:line="168" pos:column="19">(<argument><expr><name><name pos:line="168" pos:column="20">data<pos:position pos:line="168" pos:column="24"/></name><operator pos:line="168" pos:column="24">-&gt;<pos:position pos:line="168" pos:column="29"/></operator><name pos:line="168" pos:column="26">set<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">.<pos:position pos:line="168" pos:column="30"/></operator><name pos:line="168" pos:column="30">str<pos:position pos:line="168" pos:column="33"/></name><index pos:line="168" pos:column="33">[<expr><name pos:line="168" pos:column="34">STRING_PROXY<pos:position pos:line="168" pos:column="46"/></name></expr>]<pos:position pos:line="168" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="168" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="169" pos:column="5">/* if global proxy is set, this is it */</comment>
    <if pos:line="170" pos:column="5">if<condition pos:line="170" pos:column="7">(<expr><name pos:line="170" pos:column="8">NULL<pos:position pos:line="170" pos:column="12"/></name> <operator pos:line="170" pos:column="13">==<pos:position pos:line="170" pos:column="15"/></operator> <name pos:line="170" pos:column="16">proxy<pos:position pos:line="170" pos:column="21"/></name></expr>)<pos:position pos:line="170" pos:column="22"/></condition><then pos:line="170" pos:column="22"> <block pos:line="170" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="171" pos:column="7">failf<pos:position pos:line="171" pos:column="12"/></name><argument_list pos:line="171" pos:column="12">(<argument><expr><name pos:line="171" pos:column="13">data<pos:position pos:line="171" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="19">"memory shortage"<pos:position pos:line="171" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="38"/></expr_stmt>
      <return pos:line="172" pos:column="7">return <expr><name pos:line="172" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="172" pos:column="33"/></name></expr>;<pos:position pos:line="172" pos:column="34"/></return>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if>
  }<pos:position pos:line="174" pos:column="4"/></block></then></if>

  <if pos:line="176" pos:column="3">if<condition pos:line="176" pos:column="5">(<expr><operator pos:line="176" pos:column="6">!<pos:position pos:line="176" pos:column="7"/></operator><name pos:line="176" pos:column="7">proxy<pos:position pos:line="176" pos:column="12"/></name></expr>)<pos:position pos:line="176" pos:column="13"/></condition><then pos:line="176" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="177" pos:column="5">proxy<pos:position pos:line="177" pos:column="10"/></name> <operator pos:line="177" pos:column="11">=<pos:position pos:line="177" pos:column="12"/></operator> <call><name pos:line="177" pos:column="13">detect_proxy<pos:position pos:line="177" pos:column="25"/></name><argument_list pos:line="177" pos:column="25">(<argument><expr><name pos:line="177" pos:column="26">conn<pos:position pos:line="177" pos:column="30"/></name></expr></argument>)<pos:position pos:line="177" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="32"/></expr_stmt></block></then></if>
  <if pos:line="178" pos:column="3">if<condition pos:line="178" pos:column="5">(<expr><name pos:line="178" pos:column="6">proxy<pos:position pos:line="178" pos:column="11"/></name> <operator pos:line="178" pos:column="12">&amp;&amp;<pos:position pos:line="178" pos:column="22"/></operator> <operator pos:line="178" pos:column="15">!<pos:position pos:line="178" pos:column="16"/></operator><operator pos:line="178" pos:column="16">*<pos:position pos:line="178" pos:column="17"/></operator><name pos:line="178" pos:column="17">proxy<pos:position pos:line="178" pos:column="22"/></name></expr>)<pos:position pos:line="178" pos:column="23"/></condition><then pos:line="178" pos:column="23"> <block pos:line="178" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="179" pos:column="5">free<pos:position pos:line="179" pos:column="9"/></name><argument_list pos:line="179" pos:column="9">(<argument><expr><name pos:line="179" pos:column="10">proxy<pos:position pos:line="179" pos:column="15"/></name></expr></argument>)<pos:position pos:line="179" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="17"/></expr_stmt>  <comment type="block" pos:line="179" pos:column="19">/* Don't bother with an empty proxy string */</comment>
    <expr_stmt><expr><name pos:line="180" pos:column="5">proxy<pos:position pos:line="180" pos:column="10"/></name> <operator pos:line="180" pos:column="11">=<pos:position pos:line="180" pos:column="12"/></operator> <name pos:line="180" pos:column="13">NULL<pos:position pos:line="180" pos:column="17"/></name></expr>;<pos:position pos:line="180" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="181" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="182" pos:column="3">/* proxy must be freed later unless NULL */</comment>

  <comment type="block" format="doxygen" pos:line="184" pos:column="3">/*************************************************************
   * No protocol part in URL was used, add it!
   *************************************************************/</comment>
  <if pos:line="187" pos:column="3">if<condition pos:line="187" pos:column="5">(<expr><name><name pos:line="187" pos:column="6">conn<pos:position pos:line="187" pos:column="10"/></name><operator pos:line="187" pos:column="10">-&gt;<pos:position pos:line="187" pos:column="15"/></operator><name pos:line="187" pos:column="12">protocol<pos:position pos:line="187" pos:column="20"/></name></name><operator pos:line="187" pos:column="20">&amp;<pos:position pos:line="187" pos:column="25"/></operator><name pos:line="187" pos:column="21">PROT_MISSING<pos:position pos:line="187" pos:column="33"/></name></expr>)<pos:position pos:line="187" pos:column="34"/></condition><then pos:line="187" pos:column="34"> <block pos:line="187" pos:column="35">{
    <comment type="block" pos:line="188" pos:column="5">/* We're guessing prefixes here and if we're told to use a proxy or if
       we're gonna follow a Location: later or... then we need the protocol
       part added so that we have a valid URL. */</comment>
    <decl_stmt><decl><type><name pos:line="191" pos:column="5">char<pos:position pos:line="191" pos:column="9"/></name> <modifier pos:line="191" pos:column="10">*<pos:position pos:line="191" pos:column="11"/></modifier></type><name pos:line="191" pos:column="11">reurl<pos:position pos:line="191" pos:column="16"/></name></decl>;<pos:position pos:line="191" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="193" pos:column="5">reurl<pos:position pos:line="193" pos:column="10"/></name> <operator pos:line="193" pos:column="11">=<pos:position pos:line="193" pos:column="12"/></operator> <call><name pos:line="193" pos:column="13">aprintf<pos:position pos:line="193" pos:column="20"/></name><argument_list pos:line="193" pos:column="20">(<argument><expr><literal type="string" pos:line="193" pos:column="21">"%s://%s"<pos:position pos:line="193" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="32">conn<pos:position pos:line="193" pos:column="36"/></name><operator pos:line="193" pos:column="36">-&gt;<pos:position pos:line="193" pos:column="41"/></operator><name pos:line="193" pos:column="38">protostr<pos:position pos:line="193" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="48">data<pos:position pos:line="193" pos:column="52"/></name><operator pos:line="193" pos:column="52">-&gt;<pos:position pos:line="193" pos:column="57"/></operator><name pos:line="193" pos:column="54">change<pos:position pos:line="193" pos:column="60"/></name><operator pos:line="193" pos:column="60">.<pos:position pos:line="193" pos:column="61"/></operator><name pos:line="193" pos:column="61">url<pos:position pos:line="193" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="66"/></expr_stmt>

    <if pos:line="195" pos:column="5">if<condition pos:line="195" pos:column="7">(<expr><operator pos:line="195" pos:column="8">!<pos:position pos:line="195" pos:column="9"/></operator><name pos:line="195" pos:column="9">reurl<pos:position pos:line="195" pos:column="14"/></name></expr>)<pos:position pos:line="195" pos:column="15"/></condition><then pos:line="195" pos:column="15"> <block pos:line="195" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="196" pos:column="7">Curl_safefree<pos:position pos:line="196" pos:column="20"/></name><argument_list pos:line="196" pos:column="20">(<argument><expr><name pos:line="196" pos:column="21">proxy<pos:position pos:line="196" pos:column="26"/></name></expr></argument>)<pos:position pos:line="196" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="28"/></expr_stmt>
      <return pos:line="197" pos:column="7">return <expr><name pos:line="197" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="197" pos:column="33"/></name></expr>;<pos:position pos:line="197" pos:column="34"/></return>
    }<pos:position pos:line="198" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="200" pos:column="5">data<pos:position pos:line="200" pos:column="9"/></name><operator pos:line="200" pos:column="9">-&gt;<pos:position pos:line="200" pos:column="14"/></operator><name pos:line="200" pos:column="11">change<pos:position pos:line="200" pos:column="17"/></name><operator pos:line="200" pos:column="17">.<pos:position pos:line="200" pos:column="18"/></operator><name pos:line="200" pos:column="18">url<pos:position pos:line="200" pos:column="21"/></name></name> <operator pos:line="200" pos:column="22">=<pos:position pos:line="200" pos:column="23"/></operator> <name pos:line="200" pos:column="24">reurl<pos:position pos:line="200" pos:column="29"/></name></expr>;<pos:position pos:line="200" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="201" pos:column="5">data<pos:position pos:line="201" pos:column="9"/></name><operator pos:line="201" pos:column="9">-&gt;<pos:position pos:line="201" pos:column="14"/></operator><name pos:line="201" pos:column="11">change<pos:position pos:line="201" pos:column="17"/></name><operator pos:line="201" pos:column="17">.<pos:position pos:line="201" pos:column="18"/></operator><name pos:line="201" pos:column="18">url_alloc<pos:position pos:line="201" pos:column="27"/></name></name> <operator pos:line="201" pos:column="28">=<pos:position pos:line="201" pos:column="29"/></operator> <name pos:line="201" pos:column="30">TRUE<pos:position pos:line="201" pos:column="34"/></name></expr>;<pos:position pos:line="201" pos:column="35"/></expr_stmt> <comment type="block" pos:line="201" pos:column="36">/* free this later */</comment>
    <expr_stmt><expr><name><name pos:line="202" pos:column="5">conn<pos:position pos:line="202" pos:column="9"/></name><operator pos:line="202" pos:column="9">-&gt;<pos:position pos:line="202" pos:column="14"/></operator><name pos:line="202" pos:column="11">protocol<pos:position pos:line="202" pos:column="19"/></name></name> <operator pos:line="202" pos:column="20">&amp;=<pos:position pos:line="202" pos:column="26"/></operator> <operator pos:line="202" pos:column="23">~<pos:position pos:line="202" pos:column="24"/></operator><name pos:line="202" pos:column="24">PROT_MISSING<pos:position pos:line="202" pos:column="36"/></name></expr>;<pos:position pos:line="202" pos:column="37"/></expr_stmt> <comment type="block" pos:line="202" pos:column="38">/* switch that one off again */</comment>
  }<pos:position pos:line="203" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="205" pos:column="3">/*************************************************************
   * Setup internals depending on protocol
   *************************************************************/</comment>
  <expr_stmt><expr><name pos:line="208" pos:column="3">result<pos:position pos:line="208" pos:column="9"/></name> <operator pos:line="208" pos:column="10">=<pos:position pos:line="208" pos:column="11"/></operator> <call><name pos:line="208" pos:column="12">setup_connection_internals<pos:position pos:line="208" pos:column="38"/></name><argument_list pos:line="208" pos:column="38">(<argument><expr><name pos:line="208" pos:column="39">data<pos:position pos:line="208" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="45">conn<pos:position pos:line="208" pos:column="49"/></name></expr></argument>)<pos:position pos:line="208" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="51"/></expr_stmt>
  <if pos:line="209" pos:column="3">if<condition pos:line="209" pos:column="5">(<expr><name pos:line="209" pos:column="6">result<pos:position pos:line="209" pos:column="12"/></name> <operator pos:line="209" pos:column="13">!=<pos:position pos:line="209" pos:column="15"/></operator> <name pos:line="209" pos:column="16">CURLE_OK<pos:position pos:line="209" pos:column="24"/></name></expr>)<pos:position pos:line="209" pos:column="25"/></condition><then pos:line="209" pos:column="25"> <block pos:line="209" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="210" pos:column="5">Curl_safefree<pos:position pos:line="210" pos:column="18"/></name><argument_list pos:line="210" pos:column="18">(<argument><expr><name pos:line="210" pos:column="19">proxy<pos:position pos:line="210" pos:column="24"/></name></expr></argument>)<pos:position pos:line="210" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="26"/></expr_stmt>
    <return pos:line="211" pos:column="5">return <expr><name pos:line="211" pos:column="12">result<pos:position pos:line="211" pos:column="18"/></name></expr>;<pos:position pos:line="211" pos:column="19"/></return>
  }<pos:position pos:line="212" pos:column="4"/></block></then></if>


  <comment type="block" format="doxygen" pos:line="215" pos:column="3">/***********************************************************************
   * If this is supposed to use a proxy, we need to figure out the proxy
   * host name, so that we can re-use an existing connection
   * that may exist registered to the same proxy host.
   ***********************************************************************/</comment>
  <if pos:line="220" pos:column="3">if<condition pos:line="220" pos:column="5">(<expr><name pos:line="220" pos:column="6">proxy<pos:position pos:line="220" pos:column="11"/></name></expr>)<pos:position pos:line="220" pos:column="12"/></condition><then pos:line="220" pos:column="12"> <block pos:line="220" pos:column="13">{
    <expr_stmt><expr><name pos:line="221" pos:column="5">result<pos:position pos:line="221" pos:column="11"/></name> <operator pos:line="221" pos:column="12">=<pos:position pos:line="221" pos:column="13"/></operator> <call><name pos:line="221" pos:column="14">parse_proxy<pos:position pos:line="221" pos:column="25"/></name><argument_list pos:line="221" pos:column="25">(<argument><expr><name pos:line="221" pos:column="26">data<pos:position pos:line="221" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="32">conn<pos:position pos:line="221" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="38">proxy<pos:position pos:line="221" pos:column="43"/></name></expr></argument>)<pos:position pos:line="221" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="45"/></expr_stmt>
    <comment type="block" pos:line="222" pos:column="5">/* parse_proxy has freed the proxy string, so don't try to use it again */</comment>
    <expr_stmt><expr><name pos:line="223" pos:column="5">proxy<pos:position pos:line="223" pos:column="10"/></name> <operator pos:line="223" pos:column="11">=<pos:position pos:line="223" pos:column="12"/></operator> <name pos:line="223" pos:column="13">NULL<pos:position pos:line="223" pos:column="17"/></name></expr>;<pos:position pos:line="223" pos:column="18"/></expr_stmt>
    <if pos:line="224" pos:column="5">if<condition pos:line="224" pos:column="7">(<expr><name pos:line="224" pos:column="8">result<pos:position pos:line="224" pos:column="14"/></name> <operator pos:line="224" pos:column="15">!=<pos:position pos:line="224" pos:column="17"/></operator> <name pos:line="224" pos:column="18">CURLE_OK<pos:position pos:line="224" pos:column="26"/></name></expr>)<pos:position pos:line="224" pos:column="27"/></condition><then pos:line="224" pos:column="27">
      <block type="pseudo"><return pos:line="225" pos:column="7">return <expr><name pos:line="225" pos:column="14">result<pos:position pos:line="225" pos:column="20"/></name></expr>;<pos:position pos:line="225" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="226" pos:column="4"/></block></then></if>


  <comment type="block" format="doxygen" pos:line="229" pos:column="3">/***********************************************************************
   * file: is a special case in that it doesn't need a network connection
   ***********************************************************************/</comment>
<cpp:ifndef pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">ifndef<pos:position pos:line="232" pos:column="8"/></cpp:directive> <name pos:line="232" pos:column="9">CURL_DISABLE_FILE<pos:position pos:line="232" pos:column="26"/></name></cpp:ifndef>
  <if pos:line="233" pos:column="3">if<condition pos:line="233" pos:column="5">(<expr><name><name pos:line="233" pos:column="6">conn<pos:position pos:line="233" pos:column="10"/></name><operator pos:line="233" pos:column="10">-&gt;<pos:position pos:line="233" pos:column="15"/></operator><name pos:line="233" pos:column="12">protocol<pos:position pos:line="233" pos:column="20"/></name></name> <operator pos:line="233" pos:column="21">&amp;<pos:position pos:line="233" pos:column="26"/></operator> <name pos:line="233" pos:column="23">PROT_FILE<pos:position pos:line="233" pos:column="32"/></name></expr>)<pos:position pos:line="233" pos:column="33"/></condition><then pos:line="233" pos:column="33"> <block pos:line="233" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="234" pos:column="5">bool<pos:position pos:line="234" pos:column="9"/></name></type> <name pos:line="234" pos:column="10">done<pos:position pos:line="234" pos:column="14"/></name></decl>;<pos:position pos:line="234" pos:column="15"/></decl_stmt>
    <comment type="block" pos:line="235" pos:column="5">/* this is supposed to be the connect function so we better at least check
       that the file is present here! */</comment>
    <expr_stmt><expr><call><name pos:line="237" pos:column="5">DEBUGASSERT<pos:position pos:line="237" pos:column="16"/></name><argument_list pos:line="237" pos:column="16">(<argument><expr><name><name pos:line="237" pos:column="17">conn<pos:position pos:line="237" pos:column="21"/></name><operator pos:line="237" pos:column="21">-&gt;<pos:position pos:line="237" pos:column="26"/></operator><name pos:line="237" pos:column="23">handler<pos:position pos:line="237" pos:column="30"/></name><operator pos:line="237" pos:column="30">-&gt;<pos:position pos:line="237" pos:column="35"/></operator><name pos:line="237" pos:column="32">connect_it<pos:position pos:line="237" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="237" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="238" pos:column="5">result<pos:position pos:line="238" pos:column="11"/></name> <operator pos:line="238" pos:column="12">=<pos:position pos:line="238" pos:column="13"/></operator> <call><name><name pos:line="238" pos:column="14">conn<pos:position pos:line="238" pos:column="18"/></name><operator pos:line="238" pos:column="18">-&gt;<pos:position pos:line="238" pos:column="23"/></operator><name pos:line="238" pos:column="20">handler<pos:position pos:line="238" pos:column="27"/></name><operator pos:line="238" pos:column="27">-&gt;<pos:position pos:line="238" pos:column="32"/></operator><name pos:line="238" pos:column="29">connect_it<pos:position pos:line="238" pos:column="39"/></name></name><argument_list pos:line="238" pos:column="39">(<argument><expr><name pos:line="238" pos:column="40">conn<pos:position pos:line="238" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="46">&amp;<pos:position pos:line="238" pos:column="51"/></operator><name pos:line="238" pos:column="47">done<pos:position pos:line="238" pos:column="51"/></name></expr></argument>)<pos:position pos:line="238" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="240" pos:column="5">/* Setup a "faked" transfer that'll do nothing */</comment>
    <if pos:line="241" pos:column="5">if<condition pos:line="241" pos:column="7">(<expr><name pos:line="241" pos:column="8">CURLE_OK<pos:position pos:line="241" pos:column="16"/></name> <operator pos:line="241" pos:column="17">==<pos:position pos:line="241" pos:column="19"/></operator> <name pos:line="241" pos:column="20">result<pos:position pos:line="241" pos:column="26"/></name></expr>)<pos:position pos:line="241" pos:column="27"/></condition><then pos:line="241" pos:column="27"> <block pos:line="241" pos:column="28">{
      <expr_stmt><expr><name><name pos:line="242" pos:column="7">conn<pos:position pos:line="242" pos:column="11"/></name><operator pos:line="242" pos:column="11">-&gt;<pos:position pos:line="242" pos:column="16"/></operator><name pos:line="242" pos:column="13">data<pos:position pos:line="242" pos:column="17"/></name></name> <operator pos:line="242" pos:column="18">=<pos:position pos:line="242" pos:column="19"/></operator> <name pos:line="242" pos:column="20">data<pos:position pos:line="242" pos:column="24"/></name></expr>;<pos:position pos:line="242" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="243" pos:column="7">conn<pos:position pos:line="243" pos:column="11"/></name><operator pos:line="243" pos:column="11">-&gt;<pos:position pos:line="243" pos:column="16"/></operator><name pos:line="243" pos:column="13">bits<pos:position pos:line="243" pos:column="17"/></name><operator pos:line="243" pos:column="17">.<pos:position pos:line="243" pos:column="18"/></operator><name pos:line="243" pos:column="18">tcpconnect<pos:position pos:line="243" pos:column="28"/></name></name> <operator pos:line="243" pos:column="29">=<pos:position pos:line="243" pos:column="30"/></operator> <name pos:line="243" pos:column="31">TRUE<pos:position pos:line="243" pos:column="35"/></name></expr>;<pos:position pos:line="243" pos:column="36"/></expr_stmt> <comment type="block" pos:line="243" pos:column="37">/* we are "connected */</comment>

      <expr_stmt><expr><call><name pos:line="245" pos:column="7">ConnectionStore<pos:position pos:line="245" pos:column="22"/></name><argument_list pos:line="245" pos:column="22">(<argument><expr><name pos:line="245" pos:column="23">data<pos:position pos:line="245" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="29">conn<pos:position pos:line="245" pos:column="33"/></name></expr></argument>)<pos:position pos:line="245" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="35"/></expr_stmt>

      <expr_stmt><expr><name pos:line="247" pos:column="7">result<pos:position pos:line="247" pos:column="13"/></name> <operator pos:line="247" pos:column="14">=<pos:position pos:line="247" pos:column="15"/></operator> <call><name pos:line="247" pos:column="16">setup_range<pos:position pos:line="247" pos:column="27"/></name><argument_list pos:line="247" pos:column="27">(<argument><expr><name pos:line="247" pos:column="28">data<pos:position pos:line="247" pos:column="32"/></name></expr></argument>)<pos:position pos:line="247" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="34"/></expr_stmt>
      <if pos:line="248" pos:column="7">if<condition pos:line="248" pos:column="9">(<expr><name pos:line="248" pos:column="10">result<pos:position pos:line="248" pos:column="16"/></name></expr>)<pos:position pos:line="248" pos:column="17"/></condition><then pos:line="248" pos:column="17"> <block pos:line="248" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="249" pos:column="9">DEBUGASSERT<pos:position pos:line="249" pos:column="20"/></name><argument_list pos:line="249" pos:column="20">(<argument><expr><name><name pos:line="249" pos:column="21">conn<pos:position pos:line="249" pos:column="25"/></name><operator pos:line="249" pos:column="25">-&gt;<pos:position pos:line="249" pos:column="30"/></operator><name pos:line="249" pos:column="27">handler<pos:position pos:line="249" pos:column="34"/></name><operator pos:line="249" pos:column="34">-&gt;<pos:position pos:line="249" pos:column="39"/></operator><name pos:line="249" pos:column="36">done<pos:position pos:line="249" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="249" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="42"/></expr_stmt>
        <comment type="block" pos:line="250" pos:column="9">/* we ignore the return code for the protocol-specific DONE */</comment>
        <expr_stmt><expr><operator pos:line="251" pos:column="9">(<pos:position pos:line="251" pos:column="10"/></operator><name pos:line="251" pos:column="10">void<pos:position pos:line="251" pos:column="14"/></name><operator pos:line="251" pos:column="14">)<pos:position pos:line="251" pos:column="15"/></operator><call><name><name pos:line="251" pos:column="15">conn<pos:position pos:line="251" pos:column="19"/></name><operator pos:line="251" pos:column="19">-&gt;<pos:position pos:line="251" pos:column="24"/></operator><name pos:line="251" pos:column="21">handler<pos:position pos:line="251" pos:column="28"/></name><operator pos:line="251" pos:column="28">-&gt;<pos:position pos:line="251" pos:column="33"/></operator><name pos:line="251" pos:column="30">done<pos:position pos:line="251" pos:column="34"/></name></name><argument_list pos:line="251" pos:column="34">(<argument><expr><name pos:line="251" pos:column="35">conn<pos:position pos:line="251" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="41">result<pos:position pos:line="251" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="49">FALSE<pos:position pos:line="251" pos:column="54"/></name></expr></argument>)<pos:position pos:line="251" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="56"/></expr_stmt>
        <return pos:line="252" pos:column="9">return <expr><name pos:line="252" pos:column="16">result<pos:position pos:line="252" pos:column="22"/></name></expr>;<pos:position pos:line="252" pos:column="23"/></return>
      }<pos:position pos:line="253" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="255" pos:column="7">result<pos:position pos:line="255" pos:column="13"/></name> <operator pos:line="255" pos:column="14">=<pos:position pos:line="255" pos:column="15"/></operator> <call><name pos:line="255" pos:column="16">Curl_setup_transfer<pos:position pos:line="255" pos:column="35"/></name><argument_list pos:line="255" pos:column="35">(<argument><expr><name pos:line="255" pos:column="36">conn<pos:position pos:line="255" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="255" pos:column="42">-<pos:position pos:line="255" pos:column="43"/></operator><literal type="number" pos:line="255" pos:column="43">1<pos:position pos:line="255" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="255" pos:column="46">-<pos:position pos:line="255" pos:column="47"/></operator><literal type="number" pos:line="255" pos:column="47">1<pos:position pos:line="255" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="50">FALSE<pos:position pos:line="255" pos:column="55"/></name></expr></argument>,
                                   <argument><expr><name pos:line="256" pos:column="36">NULL<pos:position pos:line="256" pos:column="40"/></name></expr></argument>, <comment type="block" pos:line="256" pos:column="42">/* no download */</comment>
                                   <argument><expr><operator pos:line="257" pos:column="36">-<pos:position pos:line="257" pos:column="37"/></operator><literal type="number" pos:line="257" pos:column="37">1<pos:position pos:line="257" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="257" pos:column="40">NULL<pos:position pos:line="257" pos:column="44"/></name></expr></argument>)<pos:position pos:line="257" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="46"/></expr_stmt> <comment type="block" pos:line="257" pos:column="47">/* no upload */</comment>
    }<pos:position pos:line="258" pos:column="6"/></block></then></if>

    <return pos:line="260" pos:column="5">return <expr><name pos:line="260" pos:column="12">result<pos:position pos:line="260" pos:column="18"/></name></expr>;<pos:position pos:line="260" pos:column="19"/></return>
  }<pos:position pos:line="261" pos:column="4"/></block></then></if>
<cpp:endif pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">endif<pos:position pos:line="262" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" format="doxygen" pos:line="264" pos:column="3">/*************************************************************
   * If the protocol is using SSL and HTTP proxy is used, we set
   * the tunnel_proxy bit.
   *************************************************************/</comment>
  <if pos:line="268" pos:column="3">if<condition pos:line="268" pos:column="5">(<expr><operator pos:line="268" pos:column="6">(<pos:position pos:line="268" pos:column="7"/></operator><name><name pos:line="268" pos:column="7">conn<pos:position pos:line="268" pos:column="11"/></name><operator pos:line="268" pos:column="11">-&gt;<pos:position pos:line="268" pos:column="16"/></operator><name pos:line="268" pos:column="13">protocol<pos:position pos:line="268" pos:column="21"/></name></name><operator pos:line="268" pos:column="21">&amp;<pos:position pos:line="268" pos:column="26"/></operator><name pos:line="268" pos:column="22">PROT_SSL<pos:position pos:line="268" pos:column="30"/></name><operator pos:line="268" pos:column="30">)<pos:position pos:line="268" pos:column="31"/></operator> <operator pos:line="268" pos:column="32">&amp;&amp;<pos:position pos:line="268" pos:column="42"/></operator> <name><name pos:line="268" pos:column="35">conn<pos:position pos:line="268" pos:column="39"/></name><operator pos:line="268" pos:column="39">-&gt;<pos:position pos:line="268" pos:column="44"/></operator><name pos:line="268" pos:column="41">bits<pos:position pos:line="268" pos:column="45"/></name><operator pos:line="268" pos:column="45">.<pos:position pos:line="268" pos:column="46"/></operator><name pos:line="268" pos:column="46">httpproxy<pos:position pos:line="268" pos:column="55"/></name></name></expr>)<pos:position pos:line="268" pos:column="56"/></condition><then pos:line="268" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="269" pos:column="5">conn<pos:position pos:line="269" pos:column="9"/></name><operator pos:line="269" pos:column="9">-&gt;<pos:position pos:line="269" pos:column="14"/></operator><name pos:line="269" pos:column="11">bits<pos:position pos:line="269" pos:column="15"/></name><operator pos:line="269" pos:column="15">.<pos:position pos:line="269" pos:column="16"/></operator><name pos:line="269" pos:column="16">tunnel_proxy<pos:position pos:line="269" pos:column="28"/></name></name> <operator pos:line="269" pos:column="29">=<pos:position pos:line="269" pos:column="30"/></operator> <name pos:line="269" pos:column="31">TRUE<pos:position pos:line="269" pos:column="35"/></name></expr>;<pos:position pos:line="269" pos:column="36"/></expr_stmt></block></then></if>

  <comment type="block" format="doxygen" pos:line="271" pos:column="3">/*************************************************************
   * Take care of user and password authentication stuff
   *************************************************************/</comment>

  <comment type="block" pos:line="275" pos:column="3">/*
   * Inputs: data-&gt;set.userpwd   (CURLOPT_USERPWD)
   *         data-&gt;set.fpasswd   (CURLOPT_PASSWDFUNCTION)
   *         data-&gt;set.use_netrc (CURLOPT_NETRC)
   *         conn-&gt;host.name
   *         netrc file
   *         hard-coded defaults
   *
   * Outputs: (almost :- all currently undefined)
   *          conn-&gt;bits.user_passwd  - non-zero if non-default passwords exist
   *          conn-&gt;user              - non-zero length if defined
   *          conn-&gt;passwd            -   ditto
   *          conn-&gt;host.name          - remove user name and password
   */</comment>

  <comment type="block" pos:line="290" pos:column="3">/* At this point, we're hoping all the other special cases have
   * been taken care of, so conn-&gt;host.name is at most
   *    [user[:password]]@]hostname
   *
   * We need somewhere to put the embedded details, so do that first.
   */</comment>

  <expr_stmt><expr><name><name pos:line="297" pos:column="3">user<pos:position pos:line="297" pos:column="7"/></name><index pos:line="297" pos:column="7">[<expr><literal type="number" pos:line="297" pos:column="8">0<pos:position pos:line="297" pos:column="9"/></literal></expr>]<pos:position pos:line="297" pos:column="10"/></index></name> <operator pos:line="297" pos:column="11">=<pos:position pos:line="297" pos:column="12"/></operator><literal type="number" pos:line="297" pos:column="12">0<pos:position pos:line="297" pos:column="13"/></literal></expr>;<pos:position pos:line="297" pos:column="14"/></expr_stmt>   <comment type="block" pos:line="297" pos:column="17">/* to make everything well-defined */</comment>
  <expr_stmt><expr><name><name pos:line="298" pos:column="3">passwd<pos:position pos:line="298" pos:column="9"/></name><index pos:line="298" pos:column="9">[<expr><literal type="number" pos:line="298" pos:column="10">0<pos:position pos:line="298" pos:column="11"/></literal></expr>]<pos:position pos:line="298" pos:column="12"/></index></name><operator pos:line="298" pos:column="12">=<pos:position pos:line="298" pos:column="13"/></operator><literal type="number" pos:line="298" pos:column="13">0<pos:position pos:line="298" pos:column="14"/></literal></expr>;<pos:position pos:line="298" pos:column="15"/></expr_stmt>

  <if pos:line="300" pos:column="3">if<condition pos:line="300" pos:column="5">(<expr><name><name pos:line="300" pos:column="6">conn<pos:position pos:line="300" pos:column="10"/></name><operator pos:line="300" pos:column="10">-&gt;<pos:position pos:line="300" pos:column="15"/></operator><name pos:line="300" pos:column="12">protocol<pos:position pos:line="300" pos:column="20"/></name></name> <operator pos:line="300" pos:column="21">&amp;<pos:position pos:line="300" pos:column="26"/></operator> <operator pos:line="300" pos:column="23">(<pos:position pos:line="300" pos:column="24"/></operator><name pos:line="300" pos:column="24">PROT_FTP<pos:position pos:line="300" pos:column="32"/></name><operator pos:line="300" pos:column="32">|<pos:position pos:line="300" pos:column="33"/></operator><name pos:line="300" pos:column="33">PROT_HTTP<pos:position pos:line="300" pos:column="42"/></name><operator pos:line="300" pos:column="42">|<pos:position pos:line="300" pos:column="43"/></operator><name pos:line="300" pos:column="43">PROT_SCP<pos:position pos:line="300" pos:column="51"/></name><operator pos:line="300" pos:column="51">|<pos:position pos:line="300" pos:column="52"/></operator><name pos:line="300" pos:column="52">PROT_SFTP<pos:position pos:line="300" pos:column="61"/></name><operator pos:line="300" pos:column="61">)<pos:position pos:line="300" pos:column="62"/></operator></expr>)<pos:position pos:line="300" pos:column="63"/></condition><then pos:line="300" pos:column="63"> <block pos:line="300" pos:column="64">{
    <comment type="block" pos:line="301" pos:column="5">/* This is a FTP, HTTP, SCP or SFTP URL, we will now try to extract the
     * possible user+password pair in a string like:
     * ftp://user:password@ftp.my.site:8021/README */</comment>
    <decl_stmt><decl><type><name pos:line="304" pos:column="5">char<pos:position pos:line="304" pos:column="9"/></name> <modifier pos:line="304" pos:column="10">*<pos:position pos:line="304" pos:column="11"/></modifier></type><name pos:line="304" pos:column="11">ptr<pos:position pos:line="304" pos:column="14"/></name><init pos:line="304" pos:column="14">=<expr><call><name pos:line="304" pos:column="15">strchr<pos:position pos:line="304" pos:column="21"/></name><argument_list pos:line="304" pos:column="21">(<argument><expr><name><name pos:line="304" pos:column="22">conn<pos:position pos:line="304" pos:column="26"/></name><operator pos:line="304" pos:column="26">-&gt;<pos:position pos:line="304" pos:column="31"/></operator><name pos:line="304" pos:column="28">host<pos:position pos:line="304" pos:column="32"/></name><operator pos:line="304" pos:column="32">.<pos:position pos:line="304" pos:column="33"/></operator><name pos:line="304" pos:column="33">name<pos:position pos:line="304" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="304" pos:column="39">'@'<pos:position pos:line="304" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="304" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="305" pos:column="5">char<pos:position pos:line="305" pos:column="9"/></name> <modifier pos:line="305" pos:column="10">*<pos:position pos:line="305" pos:column="11"/></modifier></type><name pos:line="305" pos:column="11">userpass<pos:position pos:line="305" pos:column="19"/></name> <init pos:line="305" pos:column="20">= <expr><name><name pos:line="305" pos:column="22">conn<pos:position pos:line="305" pos:column="26"/></name><operator pos:line="305" pos:column="26">-&gt;<pos:position pos:line="305" pos:column="31"/></operator><name pos:line="305" pos:column="28">host<pos:position pos:line="305" pos:column="32"/></name><operator pos:line="305" pos:column="32">.<pos:position pos:line="305" pos:column="33"/></operator><name pos:line="305" pos:column="33">name<pos:position pos:line="305" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="305" pos:column="38"/></decl_stmt>
    <if pos:line="306" pos:column="5">if<condition pos:line="306" pos:column="7">(<expr><name pos:line="306" pos:column="8">ptr<pos:position pos:line="306" pos:column="11"/></name> <operator pos:line="306" pos:column="12">!=<pos:position pos:line="306" pos:column="14"/></operator> <name pos:line="306" pos:column="15">NULL<pos:position pos:line="306" pos:column="19"/></name></expr>)<pos:position pos:line="306" pos:column="20"/></condition><then pos:line="306" pos:column="20"> <block pos:line="306" pos:column="21">{
      <comment type="block" pos:line="307" pos:column="7">/* there's a user+password given here, to the left of the @ */</comment>

      <expr_stmt><expr><name><name pos:line="309" pos:column="7">conn<pos:position pos:line="309" pos:column="11"/></name><operator pos:line="309" pos:column="11">-&gt;<pos:position pos:line="309" pos:column="16"/></operator><name pos:line="309" pos:column="13">host<pos:position pos:line="309" pos:column="17"/></name><operator pos:line="309" pos:column="17">.<pos:position pos:line="309" pos:column="18"/></operator><name pos:line="309" pos:column="18">name<pos:position pos:line="309" pos:column="22"/></name></name> <operator pos:line="309" pos:column="23">=<pos:position pos:line="309" pos:column="24"/></operator> <operator pos:line="309" pos:column="25">++<pos:position pos:line="309" pos:column="27"/></operator><name pos:line="309" pos:column="27">ptr<pos:position pos:line="309" pos:column="30"/></name></expr>;<pos:position pos:line="309" pos:column="31"/></expr_stmt>

      <comment type="block" pos:line="311" pos:column="7">/* So the hostname is sane.  Only bother interpreting the
       * results if we could care.  It could still be wasted
       * work because it might be overtaken by the programmatically
       * set user/passwd, but doing that first adds more cases here :-(
       */</comment>

      <if pos:line="317" pos:column="7">if<condition pos:line="317" pos:column="9">(<expr><name><name pos:line="317" pos:column="10">data<pos:position pos:line="317" pos:column="14"/></name><operator pos:line="317" pos:column="14">-&gt;<pos:position pos:line="317" pos:column="19"/></operator><name pos:line="317" pos:column="16">set<pos:position pos:line="317" pos:column="19"/></name><operator pos:line="317" pos:column="19">.<pos:position pos:line="317" pos:column="20"/></operator><name pos:line="317" pos:column="20">use_netrc<pos:position pos:line="317" pos:column="29"/></name></name> <operator pos:line="317" pos:column="30">!=<pos:position pos:line="317" pos:column="32"/></operator> <name pos:line="317" pos:column="33">CURL_NETRC_REQUIRED<pos:position pos:line="317" pos:column="52"/></name></expr>)<pos:position pos:line="317" pos:column="53"/></condition><then pos:line="317" pos:column="53"> <block pos:line="317" pos:column="54">{
        <comment type="block" pos:line="318" pos:column="9">/* We could use the one in the URL */</comment>

        <expr_stmt><expr><name><name pos:line="320" pos:column="9">conn<pos:position pos:line="320" pos:column="13"/></name><operator pos:line="320" pos:column="13">-&gt;<pos:position pos:line="320" pos:column="18"/></operator><name pos:line="320" pos:column="15">bits<pos:position pos:line="320" pos:column="19"/></name><operator pos:line="320" pos:column="19">.<pos:position pos:line="320" pos:column="20"/></operator><name pos:line="320" pos:column="20">user_passwd<pos:position pos:line="320" pos:column="31"/></name></name> <operator pos:line="320" pos:column="32">=<pos:position pos:line="320" pos:column="33"/></operator> <literal type="number" pos:line="320" pos:column="34">1<pos:position pos:line="320" pos:column="35"/></literal></expr>;<pos:position pos:line="320" pos:column="36"/></expr_stmt> <comment type="block" pos:line="320" pos:column="37">/* enable user+password */</comment>

        <if pos:line="322" pos:column="9">if<condition pos:line="322" pos:column="11">(<expr><operator pos:line="322" pos:column="12">*<pos:position pos:line="322" pos:column="13"/></operator><name pos:line="322" pos:column="13">userpass<pos:position pos:line="322" pos:column="21"/></name> <operator pos:line="322" pos:column="22">!=<pos:position pos:line="322" pos:column="24"/></operator> <literal type="char" pos:line="322" pos:column="25">':'<pos:position pos:line="322" pos:column="28"/></literal></expr>)<pos:position pos:line="322" pos:column="29"/></condition><then pos:line="322" pos:column="29"> <block pos:line="322" pos:column="30">{
          <comment type="block" pos:line="323" pos:column="11">/* the name is given, get user+password */</comment>
          <expr_stmt><expr><call><name pos:line="324" pos:column="11">sscanf<pos:position pos:line="324" pos:column="17"/></name><argument_list pos:line="324" pos:column="17">(<argument><expr><name pos:line="324" pos:column="18">userpass<pos:position pos:line="324" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="28">"%"<pos:position pos:line="324" pos:column="31"/></literal> <name pos:line="324" pos:column="32">MAX_CURL_USER_LENGTH_TXT<pos:position pos:line="324" pos:column="56"/></name> <literal type="string" pos:line="324" pos:column="57">"[^:@]:"<pos:position pos:line="324" pos:column="65"/></literal>
                 <literal type="string" pos:line="325" pos:column="18">"%"<pos:position pos:line="325" pos:column="21"/></literal> <name pos:line="325" pos:column="22">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="325" pos:column="50"/></name> <literal type="string" pos:line="325" pos:column="51">"[^@]"<pos:position pos:line="325" pos:column="57"/></literal></expr></argument>,
                 <argument><expr><name pos:line="326" pos:column="18">user<pos:position pos:line="326" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="24">passwd<pos:position pos:line="326" pos:column="30"/></name></expr></argument>)<pos:position pos:line="326" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="327" pos:column="10"/></block></then>
        <else pos:line="328" pos:column="9">else
          <comment type="block" pos:line="329" pos:column="11">/* no name given, get the password only */</comment>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="330" pos:column="11">sscanf<pos:position pos:line="330" pos:column="17"/></name><argument_list pos:line="330" pos:column="17">(<argument><expr><name pos:line="330" pos:column="18">userpass<pos:position pos:line="330" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="28">":%"<pos:position pos:line="330" pos:column="32"/></literal> <name pos:line="330" pos:column="33">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="330" pos:column="61"/></name> <literal type="string" pos:line="330" pos:column="62">"[^@]"<pos:position pos:line="330" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="330" pos:column="70">passwd<pos:position pos:line="330" pos:column="76"/></name></expr></argument>)<pos:position pos:line="330" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="78"/></expr_stmt></block></else></if>

        <if pos:line="332" pos:column="9">if<condition pos:line="332" pos:column="11">(<expr><name><name pos:line="332" pos:column="12">user<pos:position pos:line="332" pos:column="16"/></name><index pos:line="332" pos:column="16">[<expr><literal type="number" pos:line="332" pos:column="17">0<pos:position pos:line="332" pos:column="18"/></literal></expr>]<pos:position pos:line="332" pos:column="19"/></index></name></expr>)<pos:position pos:line="332" pos:column="20"/></condition><then pos:line="332" pos:column="20"> <block pos:line="332" pos:column="21">{
          <decl_stmt><decl><type><name pos:line="333" pos:column="11">char<pos:position pos:line="333" pos:column="15"/></name> <modifier pos:line="333" pos:column="16">*<pos:position pos:line="333" pos:column="17"/></modifier></type><name pos:line="333" pos:column="17">newname<pos:position pos:line="333" pos:column="24"/></name><init pos:line="333" pos:column="24">=<expr><call><name pos:line="333" pos:column="25">curl_easy_unescape<pos:position pos:line="333" pos:column="43"/></name><argument_list pos:line="333" pos:column="43">(<argument><expr><name pos:line="333" pos:column="44">data<pos:position pos:line="333" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="50">user<pos:position pos:line="333" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="333" pos:column="56">0<pos:position pos:line="333" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="333" pos:column="59">NULL<pos:position pos:line="333" pos:column="63"/></name></expr></argument>)<pos:position pos:line="333" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="333" pos:column="65"/></decl_stmt>
          <if pos:line="334" pos:column="11">if<condition pos:line="334" pos:column="13">(<expr><operator pos:line="334" pos:column="14">!<pos:position pos:line="334" pos:column="15"/></operator><name pos:line="334" pos:column="15">newname<pos:position pos:line="334" pos:column="22"/></name></expr>)<pos:position pos:line="334" pos:column="23"/></condition><then pos:line="334" pos:column="23">
            <block type="pseudo"><return pos:line="335" pos:column="13">return <expr><name pos:line="335" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="335" pos:column="39"/></name></expr>;<pos:position pos:line="335" pos:column="40"/></return></block></then></if>
          <if pos:line="336" pos:column="11">if<condition pos:line="336" pos:column="13">(<expr><call><name pos:line="336" pos:column="14">strlen<pos:position pos:line="336" pos:column="20"/></name><argument_list pos:line="336" pos:column="20">(<argument><expr><name pos:line="336" pos:column="21">newname<pos:position pos:line="336" pos:column="28"/></name></expr></argument>)<pos:position pos:line="336" pos:column="29"/></argument_list></call> <operator pos:line="336" pos:column="30">&lt;<pos:position pos:line="336" pos:column="34"/></operator> <sizeof pos:line="336" pos:column="32">sizeof<argument_list pos:line="336" pos:column="38">(<argument><expr><name pos:line="336" pos:column="39">user<pos:position pos:line="336" pos:column="43"/></name></expr></argument>)<pos:position pos:line="336" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="336" pos:column="45"/></condition><then pos:line="336" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="337" pos:column="13">strcpy<pos:position pos:line="337" pos:column="19"/></name><argument_list pos:line="337" pos:column="19">(<argument><expr><name pos:line="337" pos:column="20">user<pos:position pos:line="337" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="26">newname<pos:position pos:line="337" pos:column="33"/></name></expr></argument>)<pos:position pos:line="337" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="35"/></expr_stmt></block></then></if>

          <comment type="block" pos:line="339" pos:column="11">/* if the new name is longer than accepted, then just use
             the unconverted name, it'll be wrong but what the heck */</comment>
          <expr_stmt><expr><call><name pos:line="341" pos:column="11">free<pos:position pos:line="341" pos:column="15"/></name><argument_list pos:line="341" pos:column="15">(<argument><expr><name pos:line="341" pos:column="16">newname<pos:position pos:line="341" pos:column="23"/></name></expr></argument>)<pos:position pos:line="341" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="342" pos:column="10"/></block></then></if>
        <if pos:line="343" pos:column="9">if<condition pos:line="343" pos:column="11">(<expr><name><name pos:line="343" pos:column="12">passwd<pos:position pos:line="343" pos:column="18"/></name><index pos:line="343" pos:column="18">[<expr><literal type="number" pos:line="343" pos:column="19">0<pos:position pos:line="343" pos:column="20"/></literal></expr>]<pos:position pos:line="343" pos:column="21"/></index></name></expr>)<pos:position pos:line="343" pos:column="22"/></condition><then pos:line="343" pos:column="22"> <block pos:line="343" pos:column="23">{
          <comment type="block" pos:line="344" pos:column="11">/* we have a password found in the URL, decode it! */</comment>
          <decl_stmt><decl><type><name pos:line="345" pos:column="11">char<pos:position pos:line="345" pos:column="15"/></name> <modifier pos:line="345" pos:column="16">*<pos:position pos:line="345" pos:column="17"/></modifier></type><name pos:line="345" pos:column="17">newpasswd<pos:position pos:line="345" pos:column="26"/></name><init pos:line="345" pos:column="26">=<expr><call><name pos:line="345" pos:column="27">curl_easy_unescape<pos:position pos:line="345" pos:column="45"/></name><argument_list pos:line="345" pos:column="45">(<argument><expr><name pos:line="345" pos:column="46">data<pos:position pos:line="345" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="52">passwd<pos:position pos:line="345" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="345" pos:column="60">0<pos:position pos:line="345" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="63">NULL<pos:position pos:line="345" pos:column="67"/></name></expr></argument>)<pos:position pos:line="345" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="345" pos:column="69"/></decl_stmt>
          <if pos:line="346" pos:column="11">if<condition pos:line="346" pos:column="13">(<expr><operator pos:line="346" pos:column="14">!<pos:position pos:line="346" pos:column="15"/></operator><name pos:line="346" pos:column="15">newpasswd<pos:position pos:line="346" pos:column="24"/></name></expr>)<pos:position pos:line="346" pos:column="25"/></condition><then pos:line="346" pos:column="25">
            <block type="pseudo"><return pos:line="347" pos:column="13">return <expr><name pos:line="347" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="347" pos:column="39"/></name></expr>;<pos:position pos:line="347" pos:column="40"/></return></block></then></if>
          <if pos:line="348" pos:column="11">if<condition pos:line="348" pos:column="13">(<expr><call><name pos:line="348" pos:column="14">strlen<pos:position pos:line="348" pos:column="20"/></name><argument_list pos:line="348" pos:column="20">(<argument><expr><name pos:line="348" pos:column="21">newpasswd<pos:position pos:line="348" pos:column="30"/></name></expr></argument>)<pos:position pos:line="348" pos:column="31"/></argument_list></call> <operator pos:line="348" pos:column="32">&lt;<pos:position pos:line="348" pos:column="36"/></operator> <sizeof pos:line="348" pos:column="34">sizeof<argument_list pos:line="348" pos:column="40">(<argument><expr><name pos:line="348" pos:column="41">passwd<pos:position pos:line="348" pos:column="47"/></name></expr></argument>)<pos:position pos:line="348" pos:column="48"/></argument_list></sizeof></expr>)<pos:position pos:line="348" pos:column="49"/></condition><then pos:line="348" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="349" pos:column="13">strcpy<pos:position pos:line="349" pos:column="19"/></name><argument_list pos:line="349" pos:column="19">(<argument><expr><name pos:line="349" pos:column="20">passwd<pos:position pos:line="349" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="28">newpasswd<pos:position pos:line="349" pos:column="37"/></name></expr></argument>)<pos:position pos:line="349" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="39"/></expr_stmt></block></then></if>

          <expr_stmt><expr><call><name pos:line="351" pos:column="11">free<pos:position pos:line="351" pos:column="15"/></name><argument_list pos:line="351" pos:column="15">(<argument><expr><name pos:line="351" pos:column="16">newpasswd<pos:position pos:line="351" pos:column="25"/></name></expr></argument>)<pos:position pos:line="351" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="352" pos:column="10"/></block></then></if>
      }<pos:position pos:line="353" pos:column="8"/></block></then></if>
    }<pos:position pos:line="354" pos:column="6"/></block></then></if>
  }<pos:position pos:line="355" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="357" pos:column="3">/*************************************************************
   * Figure out the remote port number
   *
   * No matter if we use a proxy or not, we have to figure out the remote
   * port number of various reasons.
   *
   * To be able to detect port number flawlessly, we must not confuse them
   * IPv6-specified addresses in the [0::1] style. (RFC2732)
   *
   * The conn-&gt;host.name is currently [user:passwd@]host[:port] where host
   * could be a hostname, IPv4 address or IPv6 address.
   *************************************************************/</comment>
  <if pos:line="369" pos:column="3">if<condition pos:line="369" pos:column="5">(<expr><operator pos:line="369" pos:column="6">(<pos:position pos:line="369" pos:column="7"/></operator><literal type="number" pos:line="369" pos:column="7">1<pos:position pos:line="369" pos:column="8"/></literal> <operator pos:line="369" pos:column="9">==<pos:position pos:line="369" pos:column="11"/></operator> <call><name pos:line="369" pos:column="12">sscanf<pos:position pos:line="369" pos:column="18"/></name><argument_list pos:line="369" pos:column="18">(<argument><expr><name><name pos:line="369" pos:column="19">conn<pos:position pos:line="369" pos:column="23"/></name><operator pos:line="369" pos:column="23">-&gt;<pos:position pos:line="369" pos:column="28"/></operator><name pos:line="369" pos:column="25">host<pos:position pos:line="369" pos:column="29"/></name><operator pos:line="369" pos:column="29">.<pos:position pos:line="369" pos:column="30"/></operator><name pos:line="369" pos:column="30">name<pos:position pos:line="369" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="36">"[%*39[0-9a-fA-F:.]%c"<pos:position pos:line="369" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="369" pos:column="60">&amp;<pos:position pos:line="369" pos:column="65"/></operator><name pos:line="369" pos:column="61">endbracket<pos:position pos:line="369" pos:column="71"/></name></expr></argument>)<pos:position pos:line="369" pos:column="72"/></argument_list></call><operator pos:line="369" pos:column="72">)<pos:position pos:line="369" pos:column="73"/></operator> <operator pos:line="369" pos:column="74">&amp;&amp;<pos:position pos:line="369" pos:column="84"/></operator>
     <operator pos:line="370" pos:column="6">(<pos:position pos:line="370" pos:column="7"/></operator><literal type="char" pos:line="370" pos:column="7">']'<pos:position pos:line="370" pos:column="10"/></literal> <operator pos:line="370" pos:column="11">==<pos:position pos:line="370" pos:column="13"/></operator> <name pos:line="370" pos:column="14">endbracket<pos:position pos:line="370" pos:column="24"/></name><operator pos:line="370" pos:column="24">)<pos:position pos:line="370" pos:column="25"/></operator></expr>)<pos:position pos:line="370" pos:column="26"/></condition><then pos:line="370" pos:column="26"> <block pos:line="370" pos:column="27">{
    <comment type="block" pos:line="371" pos:column="5">/* this is a RFC2732-style specified IP-address */</comment>
    <expr_stmt><expr><name><name pos:line="372" pos:column="5">conn<pos:position pos:line="372" pos:column="9"/></name><operator pos:line="372" pos:column="9">-&gt;<pos:position pos:line="372" pos:column="14"/></operator><name pos:line="372" pos:column="11">bits<pos:position pos:line="372" pos:column="15"/></name><operator pos:line="372" pos:column="15">.<pos:position pos:line="372" pos:column="16"/></operator><name pos:line="372" pos:column="16">ipv6_ip<pos:position pos:line="372" pos:column="23"/></name></name> <operator pos:line="372" pos:column="24">=<pos:position pos:line="372" pos:column="25"/></operator> <name pos:line="372" pos:column="26">TRUE<pos:position pos:line="372" pos:column="30"/></name></expr>;<pos:position pos:line="372" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="374" pos:column="5">conn<pos:position pos:line="374" pos:column="9"/></name><operator pos:line="374" pos:column="9">-&gt;<pos:position pos:line="374" pos:column="14"/></operator><name pos:line="374" pos:column="11">host<pos:position pos:line="374" pos:column="15"/></name><operator pos:line="374" pos:column="15">.<pos:position pos:line="374" pos:column="16"/></operator><name pos:line="374" pos:column="16">name<pos:position pos:line="374" pos:column="20"/></name></name><operator pos:line="374" pos:column="20">++<pos:position pos:line="374" pos:column="22"/></operator></expr>;<pos:position pos:line="374" pos:column="23"/></expr_stmt> <comment type="block" pos:line="374" pos:column="24">/* pass the starting bracket */</comment>
    <expr_stmt><expr><name pos:line="375" pos:column="5">tmp<pos:position pos:line="375" pos:column="8"/></name> <operator pos:line="375" pos:column="9">=<pos:position pos:line="375" pos:column="10"/></operator> <call><name pos:line="375" pos:column="11">strchr<pos:position pos:line="375" pos:column="17"/></name><argument_list pos:line="375" pos:column="17">(<argument><expr><name><name pos:line="375" pos:column="18">conn<pos:position pos:line="375" pos:column="22"/></name><operator pos:line="375" pos:column="22">-&gt;<pos:position pos:line="375" pos:column="27"/></operator><name pos:line="375" pos:column="24">host<pos:position pos:line="375" pos:column="28"/></name><operator pos:line="375" pos:column="28">.<pos:position pos:line="375" pos:column="29"/></operator><name pos:line="375" pos:column="29">name<pos:position pos:line="375" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="375" pos:column="35">']'<pos:position pos:line="375" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="375" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="376" pos:column="5">*<pos:position pos:line="376" pos:column="6"/></operator><name pos:line="376" pos:column="6">tmp<pos:position pos:line="376" pos:column="9"/></name> <operator pos:line="376" pos:column="10">=<pos:position pos:line="376" pos:column="11"/></operator> <literal type="number" pos:line="376" pos:column="12">0<pos:position pos:line="376" pos:column="13"/></literal></expr>;<pos:position pos:line="376" pos:column="14"/></expr_stmt> <comment type="block" pos:line="376" pos:column="15">/* zero terminate */</comment>
    <expr_stmt><expr><name pos:line="377" pos:column="5">tmp<pos:position pos:line="377" pos:column="8"/></name><operator pos:line="377" pos:column="8">++<pos:position pos:line="377" pos:column="10"/></operator></expr>;<pos:position pos:line="377" pos:column="11"/></expr_stmt> <comment type="block" pos:line="377" pos:column="12">/* pass the ending bracket */</comment>
    <if pos:line="378" pos:column="5">if<condition pos:line="378" pos:column="7">(<expr><literal type="char" pos:line="378" pos:column="8">':'<pos:position pos:line="378" pos:column="11"/></literal> <operator pos:line="378" pos:column="12">!=<pos:position pos:line="378" pos:column="14"/></operator> <operator pos:line="378" pos:column="15">*<pos:position pos:line="378" pos:column="16"/></operator><name pos:line="378" pos:column="16">tmp<pos:position pos:line="378" pos:column="19"/></name></expr>)<pos:position pos:line="378" pos:column="20"/></condition><then pos:line="378" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="379" pos:column="7">tmp<pos:position pos:line="379" pos:column="10"/></name> <operator pos:line="379" pos:column="11">=<pos:position pos:line="379" pos:column="12"/></operator> <name pos:line="379" pos:column="13">NULL<pos:position pos:line="379" pos:column="17"/></name></expr>;<pos:position pos:line="379" pos:column="18"/></expr_stmt></block></then></if> <comment type="block" pos:line="379" pos:column="19">/* no port number available */</comment>
  }<pos:position pos:line="380" pos:column="4"/></block></then>
  <else pos:line="381" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="382" pos:column="5">tmp<pos:position pos:line="382" pos:column="8"/></name> <operator pos:line="382" pos:column="9">=<pos:position pos:line="382" pos:column="10"/></operator> <call><name pos:line="382" pos:column="11">strrchr<pos:position pos:line="382" pos:column="18"/></name><argument_list pos:line="382" pos:column="18">(<argument><expr><name><name pos:line="382" pos:column="19">conn<pos:position pos:line="382" pos:column="23"/></name><operator pos:line="382" pos:column="23">-&gt;<pos:position pos:line="382" pos:column="28"/></operator><name pos:line="382" pos:column="25">host<pos:position pos:line="382" pos:column="29"/></name><operator pos:line="382" pos:column="29">.<pos:position pos:line="382" pos:column="30"/></operator><name pos:line="382" pos:column="30">name<pos:position pos:line="382" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="382" pos:column="36">':'<pos:position pos:line="382" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="41"/></expr_stmt></block></else></if>

  <if pos:line="384" pos:column="3">if<condition pos:line="384" pos:column="5">(<expr><name><name pos:line="384" pos:column="6">data<pos:position pos:line="384" pos:column="10"/></name><operator pos:line="384" pos:column="10">-&gt;<pos:position pos:line="384" pos:column="15"/></operator><name pos:line="384" pos:column="12">set<pos:position pos:line="384" pos:column="15"/></name><operator pos:line="384" pos:column="15">.<pos:position pos:line="384" pos:column="16"/></operator><name pos:line="384" pos:column="16">use_port<pos:position pos:line="384" pos:column="24"/></name></name> <operator pos:line="384" pos:column="25">&amp;&amp;<pos:position pos:line="384" pos:column="35"/></operator> <name><name pos:line="384" pos:column="28">data<pos:position pos:line="384" pos:column="32"/></name><operator pos:line="384" pos:column="32">-&gt;<pos:position pos:line="384" pos:column="37"/></operator><name pos:line="384" pos:column="34">state<pos:position pos:line="384" pos:column="39"/></name><operator pos:line="384" pos:column="39">.<pos:position pos:line="384" pos:column="40"/></operator><name pos:line="384" pos:column="40">allow_port<pos:position pos:line="384" pos:column="50"/></name></name></expr>)<pos:position pos:line="384" pos:column="51"/></condition><then pos:line="384" pos:column="51"> <block pos:line="384" pos:column="52">{
    <comment type="block" pos:line="385" pos:column="5">/* if set, we use this and ignore the port possibly given in the URL */</comment>
    <expr_stmt><expr><name><name pos:line="386" pos:column="5">conn<pos:position pos:line="386" pos:column="9"/></name><operator pos:line="386" pos:column="9">-&gt;<pos:position pos:line="386" pos:column="14"/></operator><name pos:line="386" pos:column="11">remote_port<pos:position pos:line="386" pos:column="22"/></name></name> <operator pos:line="386" pos:column="23">=<pos:position pos:line="386" pos:column="24"/></operator> <operator pos:line="386" pos:column="25">(<pos:position pos:line="386" pos:column="26"/></operator><name pos:line="386" pos:column="26">unsigned<pos:position pos:line="386" pos:column="34"/></name> <name pos:line="386" pos:column="35">short<pos:position pos:line="386" pos:column="40"/></name><operator pos:line="386" pos:column="40">)<pos:position pos:line="386" pos:column="41"/></operator><name><name pos:line="386" pos:column="41">data<pos:position pos:line="386" pos:column="45"/></name><operator pos:line="386" pos:column="45">-&gt;<pos:position pos:line="386" pos:column="50"/></operator><name pos:line="386" pos:column="47">set<pos:position pos:line="386" pos:column="50"/></name><operator pos:line="386" pos:column="50">.<pos:position pos:line="386" pos:column="51"/></operator><name pos:line="386" pos:column="51">use_port<pos:position pos:line="386" pos:column="59"/></name></name></expr>;<pos:position pos:line="386" pos:column="60"/></expr_stmt>
    <if pos:line="387" pos:column="5">if<condition pos:line="387" pos:column="7">(<expr><name pos:line="387" pos:column="8">tmp<pos:position pos:line="387" pos:column="11"/></name></expr>)<pos:position pos:line="387" pos:column="12"/></condition><then pos:line="387" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="388" pos:column="7">*<pos:position pos:line="388" pos:column="8"/></operator><name pos:line="388" pos:column="8">tmp<pos:position pos:line="388" pos:column="11"/></name> <operator pos:line="388" pos:column="12">=<pos:position pos:line="388" pos:column="13"/></operator> <literal type="char" pos:line="388" pos:column="14">'\0'<pos:position pos:line="388" pos:column="18"/></literal></expr>;<pos:position pos:line="388" pos:column="19"/></expr_stmt></block></then></if> <comment type="block" pos:line="388" pos:column="20">/* cut off the name there anyway - if there was a port
                      number - since the port number is to be ignored! */</comment>
    <if pos:line="390" pos:column="5">if<condition pos:line="390" pos:column="7">(<expr><name><name pos:line="390" pos:column="8">conn<pos:position pos:line="390" pos:column="12"/></name><operator pos:line="390" pos:column="12">-&gt;<pos:position pos:line="390" pos:column="17"/></operator><name pos:line="390" pos:column="14">bits<pos:position pos:line="390" pos:column="18"/></name><operator pos:line="390" pos:column="18">.<pos:position pos:line="390" pos:column="19"/></operator><name pos:line="390" pos:column="19">httpproxy<pos:position pos:line="390" pos:column="28"/></name></name></expr>)<pos:position pos:line="390" pos:column="29"/></condition><then pos:line="390" pos:column="29"> <block pos:line="390" pos:column="30">{
      <comment type="block" pos:line="391" pos:column="7">/* we need to create new URL with the new port number */</comment>
      <decl_stmt><decl><type><name pos:line="392" pos:column="7">char<pos:position pos:line="392" pos:column="11"/></name> <modifier pos:line="392" pos:column="12">*<pos:position pos:line="392" pos:column="13"/></modifier></type><name pos:line="392" pos:column="13">url<pos:position pos:line="392" pos:column="16"/></name></decl>;<pos:position pos:line="392" pos:column="17"/></decl_stmt>

      <expr_stmt><expr><name pos:line="394" pos:column="7">url<pos:position pos:line="394" pos:column="10"/></name> <operator pos:line="394" pos:column="11">=<pos:position pos:line="394" pos:column="12"/></operator> <call><name pos:line="394" pos:column="13">aprintf<pos:position pos:line="394" pos:column="20"/></name><argument_list pos:line="394" pos:column="20">(<argument><expr><literal type="string" pos:line="394" pos:column="21">"%s://%s:%d%s"<pos:position pos:line="394" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="394" pos:column="37">conn<pos:position pos:line="394" pos:column="41"/></name><operator pos:line="394" pos:column="41">-&gt;<pos:position pos:line="394" pos:column="46"/></operator><name pos:line="394" pos:column="43">protostr<pos:position pos:line="394" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="394" pos:column="53">conn<pos:position pos:line="394" pos:column="57"/></name><operator pos:line="394" pos:column="57">-&gt;<pos:position pos:line="394" pos:column="62"/></operator><name pos:line="394" pos:column="59">host<pos:position pos:line="394" pos:column="63"/></name><operator pos:line="394" pos:column="63">.<pos:position pos:line="394" pos:column="64"/></operator><name pos:line="394" pos:column="64">name<pos:position pos:line="394" pos:column="68"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="395" pos:column="21">conn<pos:position pos:line="395" pos:column="25"/></name><operator pos:line="395" pos:column="25">-&gt;<pos:position pos:line="395" pos:column="30"/></operator><name pos:line="395" pos:column="27">remote_port<pos:position pos:line="395" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="395" pos:column="40">data<pos:position pos:line="395" pos:column="44"/></name><operator pos:line="395" pos:column="44">-&gt;<pos:position pos:line="395" pos:column="49"/></operator><name pos:line="395" pos:column="46">state<pos:position pos:line="395" pos:column="51"/></name><operator pos:line="395" pos:column="51">.<pos:position pos:line="395" pos:column="52"/></operator><name pos:line="395" pos:column="52">path<pos:position pos:line="395" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="395" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="58"/></expr_stmt>
      <if pos:line="396" pos:column="7">if<condition pos:line="396" pos:column="9">(<expr><operator pos:line="396" pos:column="10">!<pos:position pos:line="396" pos:column="11"/></operator><name pos:line="396" pos:column="11">url<pos:position pos:line="396" pos:column="14"/></name></expr>)<pos:position pos:line="396" pos:column="15"/></condition><then pos:line="396" pos:column="15">
        <block type="pseudo"><return pos:line="397" pos:column="9">return <expr><name pos:line="397" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="397" pos:column="35"/></name></expr>;<pos:position pos:line="397" pos:column="36"/></return></block></then></if>

      <if pos:line="399" pos:column="7">if<condition pos:line="399" pos:column="9">(<expr><name><name pos:line="399" pos:column="10">data<pos:position pos:line="399" pos:column="14"/></name><operator pos:line="399" pos:column="14">-&gt;<pos:position pos:line="399" pos:column="19"/></operator><name pos:line="399" pos:column="16">change<pos:position pos:line="399" pos:column="22"/></name><operator pos:line="399" pos:column="22">.<pos:position pos:line="399" pos:column="23"/></operator><name pos:line="399" pos:column="23">url_alloc<pos:position pos:line="399" pos:column="32"/></name></name></expr>)<pos:position pos:line="399" pos:column="33"/></condition><then pos:line="399" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="400" pos:column="9">free<pos:position pos:line="400" pos:column="13"/></name><argument_list pos:line="400" pos:column="13">(<argument><expr><name><name pos:line="400" pos:column="14">data<pos:position pos:line="400" pos:column="18"/></name><operator pos:line="400" pos:column="18">-&gt;<pos:position pos:line="400" pos:column="23"/></operator><name pos:line="400" pos:column="20">change<pos:position pos:line="400" pos:column="26"/></name><operator pos:line="400" pos:column="26">.<pos:position pos:line="400" pos:column="27"/></operator><name pos:line="400" pos:column="27">url<pos:position pos:line="400" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="400" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="32"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name><name pos:line="402" pos:column="7">data<pos:position pos:line="402" pos:column="11"/></name><operator pos:line="402" pos:column="11">-&gt;<pos:position pos:line="402" pos:column="16"/></operator><name pos:line="402" pos:column="13">change<pos:position pos:line="402" pos:column="19"/></name><operator pos:line="402" pos:column="19">.<pos:position pos:line="402" pos:column="20"/></operator><name pos:line="402" pos:column="20">url<pos:position pos:line="402" pos:column="23"/></name></name> <operator pos:line="402" pos:column="24">=<pos:position pos:line="402" pos:column="25"/></operator> <name pos:line="402" pos:column="26">url<pos:position pos:line="402" pos:column="29"/></name></expr>;<pos:position pos:line="402" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="403" pos:column="7">data<pos:position pos:line="403" pos:column="11"/></name><operator pos:line="403" pos:column="11">-&gt;<pos:position pos:line="403" pos:column="16"/></operator><name pos:line="403" pos:column="13">change<pos:position pos:line="403" pos:column="19"/></name><operator pos:line="403" pos:column="19">.<pos:position pos:line="403" pos:column="20"/></operator><name pos:line="403" pos:column="20">url_alloc<pos:position pos:line="403" pos:column="29"/></name></name> <operator pos:line="403" pos:column="30">=<pos:position pos:line="403" pos:column="31"/></operator> <name pos:line="403" pos:column="32">TRUE<pos:position pos:line="403" pos:column="36"/></name></expr>;<pos:position pos:line="403" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="404" pos:column="6"/></block></then></if>
  }<pos:position pos:line="405" pos:column="4"/></block></then>
  <elseif pos:line="406" pos:column="3">else <if pos:line="406" pos:column="8">if<condition pos:line="406" pos:column="10">(<expr><name pos:line="406" pos:column="11">tmp<pos:position pos:line="406" pos:column="14"/></name></expr>)<pos:position pos:line="406" pos:column="15"/></condition><then pos:line="406" pos:column="15"> <block pos:line="406" pos:column="16">{
    <comment type="block" pos:line="407" pos:column="5">/* no CURLOPT_PORT given, extract the one from the URL */</comment>

    <decl_stmt><decl><type><name pos:line="409" pos:column="5">char<pos:position pos:line="409" pos:column="9"/></name> <modifier pos:line="409" pos:column="10">*<pos:position pos:line="409" pos:column="11"/></modifier></type><name pos:line="409" pos:column="11">rest<pos:position pos:line="409" pos:column="15"/></name></decl>;<pos:position pos:line="409" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="410" pos:column="5">unsigned<pos:position pos:line="410" pos:column="13"/></name> <name pos:line="410" pos:column="14">long<pos:position pos:line="410" pos:column="18"/></name></type> <name pos:line="410" pos:column="19">port<pos:position pos:line="410" pos:column="23"/></name></decl>;<pos:position pos:line="410" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="412" pos:column="5">port<pos:position pos:line="412" pos:column="9"/></name><operator pos:line="412" pos:column="9">=<pos:position pos:line="412" pos:column="10"/></operator><call><name pos:line="412" pos:column="10">strtoul<pos:position pos:line="412" pos:column="17"/></name><argument_list pos:line="412" pos:column="17">(<argument><expr><name pos:line="412" pos:column="18">tmp<pos:position pos:line="412" pos:column="21"/></name><operator pos:line="412" pos:column="21">+<pos:position pos:line="412" pos:column="22"/></operator><literal type="number" pos:line="412" pos:column="22">1<pos:position pos:line="412" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="412" pos:column="25">&amp;<pos:position pos:line="412" pos:column="30"/></operator><name pos:line="412" pos:column="26">rest<pos:position pos:line="412" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="412" pos:column="32">10<pos:position pos:line="412" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="412" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="412" pos:column="38">/* Port number must be decimal */</comment>

    <if pos:line="414" pos:column="5">if<condition pos:line="414" pos:column="7">(<expr><name pos:line="414" pos:column="8">rest<pos:position pos:line="414" pos:column="12"/></name> <operator pos:line="414" pos:column="13">!=<pos:position pos:line="414" pos:column="15"/></operator> <operator pos:line="414" pos:column="16">(<pos:position pos:line="414" pos:column="17"/></operator><name pos:line="414" pos:column="17">tmp<pos:position pos:line="414" pos:column="20"/></name><operator pos:line="414" pos:column="20">+<pos:position pos:line="414" pos:column="21"/></operator><literal type="number" pos:line="414" pos:column="21">1<pos:position pos:line="414" pos:column="22"/></literal><operator pos:line="414" pos:column="22">)<pos:position pos:line="414" pos:column="23"/></operator> <operator pos:line="414" pos:column="24">&amp;&amp;<pos:position pos:line="414" pos:column="34"/></operator> <operator pos:line="414" pos:column="27">*<pos:position pos:line="414" pos:column="28"/></operator><name pos:line="414" pos:column="28">rest<pos:position pos:line="414" pos:column="32"/></name> <operator pos:line="414" pos:column="33">==<pos:position pos:line="414" pos:column="35"/></operator> <literal type="char" pos:line="414" pos:column="36">'\0'<pos:position pos:line="414" pos:column="40"/></literal></expr>)<pos:position pos:line="414" pos:column="41"/></condition><then pos:line="414" pos:column="41"> <block pos:line="414" pos:column="42">{
      <comment type="block" pos:line="415" pos:column="7">/* The colon really did have only digits after it,
       * so it is either a port number or a mistake */</comment>

      <if pos:line="418" pos:column="7">if<condition pos:line="418" pos:column="9">(<expr><name pos:line="418" pos:column="10">port<pos:position pos:line="418" pos:column="14"/></name> <operator pos:line="418" pos:column="15">&gt;<pos:position pos:line="418" pos:column="19"/></operator> <literal type="number" pos:line="418" pos:column="17">0xffff<pos:position pos:line="418" pos:column="23"/></literal></expr>)<pos:position pos:line="418" pos:column="24"/></condition><then pos:line="418" pos:column="24"> <block pos:line="418" pos:column="25">{   <comment type="block" pos:line="418" pos:column="29">/* Single unix standard says port numbers are
                              * 16 bits long */</comment>
        <expr_stmt><expr><call><name pos:line="420" pos:column="9">failf<pos:position pos:line="420" pos:column="14"/></name><argument_list pos:line="420" pos:column="14">(<argument><expr><name pos:line="420" pos:column="15">data<pos:position pos:line="420" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="420" pos:column="21">"Port number too large: %lu"<pos:position pos:line="420" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="420" pos:column="51">port<pos:position pos:line="420" pos:column="55"/></name></expr></argument>)<pos:position pos:line="420" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="57"/></expr_stmt>
        <return pos:line="421" pos:column="9">return <expr><name pos:line="421" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="421" pos:column="35"/></name></expr>;<pos:position pos:line="421" pos:column="36"/></return>
      }<pos:position pos:line="422" pos:column="8"/></block></then></if>

      <expr_stmt><expr><operator pos:line="424" pos:column="7">*<pos:position pos:line="424" pos:column="8"/></operator><name pos:line="424" pos:column="8">tmp<pos:position pos:line="424" pos:column="11"/></name> <operator pos:line="424" pos:column="12">=<pos:position pos:line="424" pos:column="13"/></operator> <literal type="char" pos:line="424" pos:column="14">'\0'<pos:position pos:line="424" pos:column="18"/></literal></expr>;<pos:position pos:line="424" pos:column="19"/></expr_stmt> <comment type="block" pos:line="424" pos:column="20">/* cut off the name there */</comment>
      <expr_stmt><expr><name><name pos:line="425" pos:column="7">conn<pos:position pos:line="425" pos:column="11"/></name><operator pos:line="425" pos:column="11">-&gt;<pos:position pos:line="425" pos:column="16"/></operator><name pos:line="425" pos:column="13">remote_port<pos:position pos:line="425" pos:column="24"/></name></name> <operator pos:line="425" pos:column="25">=<pos:position pos:line="425" pos:column="26"/></operator> <operator pos:line="425" pos:column="27">(<pos:position pos:line="425" pos:column="28"/></operator><name pos:line="425" pos:column="28">unsigned<pos:position pos:line="425" pos:column="36"/></name> <name pos:line="425" pos:column="37">short<pos:position pos:line="425" pos:column="42"/></name><operator pos:line="425" pos:column="42">)<pos:position pos:line="425" pos:column="43"/></operator><name pos:line="425" pos:column="43">port<pos:position pos:line="425" pos:column="47"/></name></expr>;<pos:position pos:line="425" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="426" pos:column="6"/></block></then></if>
  }<pos:position pos:line="427" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="429" pos:column="3">/* Programmatically set password:
   *   - always applies, if available
   *   - takes precedence over the values we just set above
   * so scribble it over the top.
   * User-supplied passwords are assumed not to need unescaping.
   *
   * user_password is set in "inherit initial knowledge' above,
   * so it doesn't have to be set in this block
   */</comment>
  <if pos:line="438" pos:column="3">if<condition pos:line="438" pos:column="5">(<expr><name><name pos:line="438" pos:column="6">data<pos:position pos:line="438" pos:column="10"/></name><operator pos:line="438" pos:column="10">-&gt;<pos:position pos:line="438" pos:column="15"/></operator><name pos:line="438" pos:column="12">set<pos:position pos:line="438" pos:column="15"/></name><operator pos:line="438" pos:column="15">.<pos:position pos:line="438" pos:column="16"/></operator><name pos:line="438" pos:column="16">str<pos:position pos:line="438" pos:column="19"/></name><index pos:line="438" pos:column="19">[<expr><name pos:line="438" pos:column="20">STRING_USERPWD<pos:position pos:line="438" pos:column="34"/></name></expr>]<pos:position pos:line="438" pos:column="35"/></index></name> <operator pos:line="438" pos:column="36">!=<pos:position pos:line="438" pos:column="38"/></operator> <name pos:line="438" pos:column="39">NULL<pos:position pos:line="438" pos:column="43"/></name></expr>)<pos:position pos:line="438" pos:column="44"/></condition><then pos:line="438" pos:column="44"> <block pos:line="438" pos:column="45">{
    <comment type="block" pos:line="439" pos:column="5">/* the name is given, get user+password */</comment>
    <expr_stmt><expr><call><name pos:line="440" pos:column="5">sscanf<pos:position pos:line="440" pos:column="11"/></name><argument_list pos:line="440" pos:column="11">(<argument><expr><name><name pos:line="440" pos:column="12">data<pos:position pos:line="440" pos:column="16"/></name><operator pos:line="440" pos:column="16">-&gt;<pos:position pos:line="440" pos:column="21"/></operator><name pos:line="440" pos:column="18">set<pos:position pos:line="440" pos:column="21"/></name><operator pos:line="440" pos:column="21">.<pos:position pos:line="440" pos:column="22"/></operator><name pos:line="440" pos:column="22">str<pos:position pos:line="440" pos:column="25"/></name><index pos:line="440" pos:column="25">[<expr><name pos:line="440" pos:column="26">STRING_USERPWD<pos:position pos:line="440" pos:column="40"/></name></expr>]<pos:position pos:line="440" pos:column="41"/></index></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="441" pos:column="12">"%"<pos:position pos:line="441" pos:column="15"/></literal> <name pos:line="441" pos:column="16">MAX_CURL_USER_LENGTH_TXT<pos:position pos:line="441" pos:column="40"/></name> <literal type="string" pos:line="441" pos:column="41">"[^:]:"<pos:position pos:line="441" pos:column="48"/></literal>
           <literal type="string" pos:line="442" pos:column="12">"%"<pos:position pos:line="442" pos:column="15"/></literal> <name pos:line="442" pos:column="16">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="442" pos:column="44"/></name> <literal type="string" pos:line="442" pos:column="45">"[^\n]"<pos:position pos:line="442" pos:column="52"/></literal></expr></argument>,
           <argument><expr><name pos:line="443" pos:column="12">user<pos:position pos:line="443" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="18">passwd<pos:position pos:line="443" pos:column="24"/></name></expr></argument>)<pos:position pos:line="443" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="444" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="446" pos:column="3">conn<pos:position pos:line="446" pos:column="7"/></name><operator pos:line="446" pos:column="7">-&gt;<pos:position pos:line="446" pos:column="12"/></operator><name pos:line="446" pos:column="9">bits<pos:position pos:line="446" pos:column="13"/></name><operator pos:line="446" pos:column="13">.<pos:position pos:line="446" pos:column="14"/></operator><name pos:line="446" pos:column="14">netrc<pos:position pos:line="446" pos:column="19"/></name></name> <operator pos:line="446" pos:column="20">=<pos:position pos:line="446" pos:column="21"/></operator> <name pos:line="446" pos:column="22">FALSE<pos:position pos:line="446" pos:column="27"/></name></expr>;<pos:position pos:line="446" pos:column="28"/></expr_stmt>
  <if pos:line="447" pos:column="3">if<condition pos:line="447" pos:column="5">(<expr><name><name pos:line="447" pos:column="6">data<pos:position pos:line="447" pos:column="10"/></name><operator pos:line="447" pos:column="10">-&gt;<pos:position pos:line="447" pos:column="15"/></operator><name pos:line="447" pos:column="12">set<pos:position pos:line="447" pos:column="15"/></name><operator pos:line="447" pos:column="15">.<pos:position pos:line="447" pos:column="16"/></operator><name pos:line="447" pos:column="16">use_netrc<pos:position pos:line="447" pos:column="25"/></name></name> <operator pos:line="447" pos:column="26">!=<pos:position pos:line="447" pos:column="28"/></operator> <name pos:line="447" pos:column="29">CURL_NETRC_IGNORED<pos:position pos:line="447" pos:column="47"/></name></expr>)<pos:position pos:line="447" pos:column="48"/></condition><then pos:line="447" pos:column="48"> <block pos:line="447" pos:column="49">{
    <if pos:line="448" pos:column="5">if<condition pos:line="448" pos:column="7">(<expr><call><name pos:line="448" pos:column="8">Curl_parsenetrc<pos:position pos:line="448" pos:column="23"/></name><argument_list pos:line="448" pos:column="23">(<argument><expr><name><name pos:line="448" pos:column="24">conn<pos:position pos:line="448" pos:column="28"/></name><operator pos:line="448" pos:column="28">-&gt;<pos:position pos:line="448" pos:column="33"/></operator><name pos:line="448" pos:column="30">host<pos:position pos:line="448" pos:column="34"/></name><operator pos:line="448" pos:column="34">.<pos:position pos:line="448" pos:column="35"/></operator><name pos:line="448" pos:column="35">name<pos:position pos:line="448" pos:column="39"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="449" pos:column="24">user<pos:position pos:line="449" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="449" pos:column="30">passwd<pos:position pos:line="449" pos:column="36"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="450" pos:column="24">data<pos:position pos:line="450" pos:column="28"/></name><operator pos:line="450" pos:column="28">-&gt;<pos:position pos:line="450" pos:column="33"/></operator><name pos:line="450" pos:column="30">set<pos:position pos:line="450" pos:column="33"/></name><operator pos:line="450" pos:column="33">.<pos:position pos:line="450" pos:column="34"/></operator><name pos:line="450" pos:column="34">str<pos:position pos:line="450" pos:column="37"/></name><index pos:line="450" pos:column="37">[<expr><name pos:line="450" pos:column="38">STRING_NETRC_FILE<pos:position pos:line="450" pos:column="55"/></name></expr>]<pos:position pos:line="450" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="450" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="450" pos:column="58"/></condition><then pos:line="450" pos:column="58"> <block pos:line="450" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="451" pos:column="7">infof<pos:position pos:line="451" pos:column="12"/></name><argument_list pos:line="451" pos:column="12">(<argument><expr><name pos:line="451" pos:column="13">data<pos:position pos:line="451" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="451" pos:column="19">"Couldn't find host %s in the "<pos:position pos:line="451" pos:column="50"/></literal> <name pos:line="451" pos:column="51">DOT_CHAR<pos:position pos:line="451" pos:column="59"/></name>
            <literal type="string" pos:line="452" pos:column="13">"netrc file, using defaults\n"<pos:position pos:line="452" pos:column="43"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="453" pos:column="13">conn<pos:position pos:line="453" pos:column="17"/></name><operator pos:line="453" pos:column="17">-&gt;<pos:position pos:line="453" pos:column="22"/></operator><name pos:line="453" pos:column="19">host<pos:position pos:line="453" pos:column="23"/></name><operator pos:line="453" pos:column="23">.<pos:position pos:line="453" pos:column="24"/></operator><name pos:line="453" pos:column="24">name<pos:position pos:line="453" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="453" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="454" pos:column="6"/></block></then>
    <else pos:line="455" pos:column="5">else <block pos:line="455" pos:column="10">{
      <comment type="block" pos:line="456" pos:column="7">/* set bits.netrc TRUE to remember that we got the name from a .netrc
         file, so that it is safe to use even if we followed a Location: to a
         different host or similar. */</comment>
      <expr_stmt><expr><name><name pos:line="459" pos:column="7">conn<pos:position pos:line="459" pos:column="11"/></name><operator pos:line="459" pos:column="11">-&gt;<pos:position pos:line="459" pos:column="16"/></operator><name pos:line="459" pos:column="13">bits<pos:position pos:line="459" pos:column="17"/></name><operator pos:line="459" pos:column="17">.<pos:position pos:line="459" pos:column="18"/></operator><name pos:line="459" pos:column="18">netrc<pos:position pos:line="459" pos:column="23"/></name></name> <operator pos:line="459" pos:column="24">=<pos:position pos:line="459" pos:column="25"/></operator> <name pos:line="459" pos:column="26">TRUE<pos:position pos:line="459" pos:column="30"/></name></expr>;<pos:position pos:line="459" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="461" pos:column="7">conn<pos:position pos:line="461" pos:column="11"/></name><operator pos:line="461" pos:column="11">-&gt;<pos:position pos:line="461" pos:column="16"/></operator><name pos:line="461" pos:column="13">bits<pos:position pos:line="461" pos:column="17"/></name><operator pos:line="461" pos:column="17">.<pos:position pos:line="461" pos:column="18"/></operator><name pos:line="461" pos:column="18">user_passwd<pos:position pos:line="461" pos:column="29"/></name></name> <operator pos:line="461" pos:column="30">=<pos:position pos:line="461" pos:column="31"/></operator> <literal type="number" pos:line="461" pos:column="32">1<pos:position pos:line="461" pos:column="33"/></literal></expr>;<pos:position pos:line="461" pos:column="34"/></expr_stmt> <comment type="block" pos:line="461" pos:column="35">/* enable user+password */</comment>
    }<pos:position pos:line="462" pos:column="6"/></block></else></if>
  }<pos:position pos:line="463" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="465" pos:column="3">/* If our protocol needs a password and we have none, use the defaults */</comment>
  <if pos:line="466" pos:column="3">if<condition pos:line="466" pos:column="5">( <expr><operator pos:line="466" pos:column="7">(<pos:position pos:line="466" pos:column="8"/></operator><name><name pos:line="466" pos:column="8">conn<pos:position pos:line="466" pos:column="12"/></name><operator pos:line="466" pos:column="12">-&gt;<pos:position pos:line="466" pos:column="17"/></operator><name pos:line="466" pos:column="14">protocol<pos:position pos:line="466" pos:column="22"/></name></name> <operator pos:line="466" pos:column="23">&amp;<pos:position pos:line="466" pos:column="28"/></operator> <name pos:line="466" pos:column="25">PROT_FTP<pos:position pos:line="466" pos:column="33"/></name><operator pos:line="466" pos:column="33">)<pos:position pos:line="466" pos:column="34"/></operator> <operator pos:line="466" pos:column="35">&amp;&amp;<pos:position pos:line="466" pos:column="45"/></operator>
       <operator pos:line="467" pos:column="8">!<pos:position pos:line="467" pos:column="9"/></operator><name><name pos:line="467" pos:column="9">conn<pos:position pos:line="467" pos:column="13"/></name><operator pos:line="467" pos:column="13">-&gt;<pos:position pos:line="467" pos:column="18"/></operator><name pos:line="467" pos:column="15">bits<pos:position pos:line="467" pos:column="19"/></name><operator pos:line="467" pos:column="19">.<pos:position pos:line="467" pos:column="20"/></operator><name pos:line="467" pos:column="20">user_passwd<pos:position pos:line="467" pos:column="31"/></name></name></expr>)<pos:position pos:line="467" pos:column="32"/></condition><then pos:line="467" pos:column="32"> <block pos:line="467" pos:column="33">{

    <expr_stmt><expr><name><name pos:line="469" pos:column="5">conn<pos:position pos:line="469" pos:column="9"/></name><operator pos:line="469" pos:column="9">-&gt;<pos:position pos:line="469" pos:column="14"/></operator><name pos:line="469" pos:column="11">user<pos:position pos:line="469" pos:column="15"/></name></name> <operator pos:line="469" pos:column="16">=<pos:position pos:line="469" pos:column="17"/></operator> <call><name pos:line="469" pos:column="18">strdup<pos:position pos:line="469" pos:column="24"/></name><argument_list pos:line="469" pos:column="24">(<argument><expr><name pos:line="469" pos:column="25">CURL_DEFAULT_USER<pos:position pos:line="469" pos:column="42"/></name></expr></argument>)<pos:position pos:line="469" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="470" pos:column="5">conn<pos:position pos:line="470" pos:column="9"/></name><operator pos:line="470" pos:column="9">-&gt;<pos:position pos:line="470" pos:column="14"/></operator><name pos:line="470" pos:column="11">passwd<pos:position pos:line="470" pos:column="17"/></name></name> <operator pos:line="470" pos:column="18">=<pos:position pos:line="470" pos:column="19"/></operator> <call><name pos:line="470" pos:column="20">strdup<pos:position pos:line="470" pos:column="26"/></name><argument_list pos:line="470" pos:column="26">(<argument><expr><name pos:line="470" pos:column="27">CURL_DEFAULT_PASSWORD<pos:position pos:line="470" pos:column="48"/></name></expr></argument>)<pos:position pos:line="470" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="471" pos:column="5">/* This is the default password, so DON'T set conn-&gt;bits.user_passwd */</comment>
  }<pos:position pos:line="472" pos:column="4"/></block></then>
  <else pos:line="473" pos:column="3">else <block pos:line="473" pos:column="8">{
    <comment type="block" pos:line="474" pos:column="5">/* store user + password, zero-length if not set */</comment>
    <expr_stmt><expr><name><name pos:line="475" pos:column="5">conn<pos:position pos:line="475" pos:column="9"/></name><operator pos:line="475" pos:column="9">-&gt;<pos:position pos:line="475" pos:column="14"/></operator><name pos:line="475" pos:column="11">user<pos:position pos:line="475" pos:column="15"/></name></name> <operator pos:line="475" pos:column="16">=<pos:position pos:line="475" pos:column="17"/></operator> <call><name pos:line="475" pos:column="18">strdup<pos:position pos:line="475" pos:column="24"/></name><argument_list pos:line="475" pos:column="24">(<argument><expr><name pos:line="475" pos:column="25">user<pos:position pos:line="475" pos:column="29"/></name></expr></argument>)<pos:position pos:line="475" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="476" pos:column="5">conn<pos:position pos:line="476" pos:column="9"/></name><operator pos:line="476" pos:column="9">-&gt;<pos:position pos:line="476" pos:column="14"/></operator><name pos:line="476" pos:column="11">passwd<pos:position pos:line="476" pos:column="17"/></name></name> <operator pos:line="476" pos:column="18">=<pos:position pos:line="476" pos:column="19"/></operator> <call><name pos:line="476" pos:column="20">strdup<pos:position pos:line="476" pos:column="26"/></name><argument_list pos:line="476" pos:column="26">(<argument><expr><name pos:line="476" pos:column="27">passwd<pos:position pos:line="476" pos:column="33"/></name></expr></argument>)<pos:position pos:line="476" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="476" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="477" pos:column="4"/></block></else></if>
  <if pos:line="478" pos:column="3">if<condition pos:line="478" pos:column="5">(<expr><operator pos:line="478" pos:column="6">!<pos:position pos:line="478" pos:column="7"/></operator><name><name pos:line="478" pos:column="7">conn<pos:position pos:line="478" pos:column="11"/></name><operator pos:line="478" pos:column="11">-&gt;<pos:position pos:line="478" pos:column="16"/></operator><name pos:line="478" pos:column="13">user<pos:position pos:line="478" pos:column="17"/></name></name> <operator pos:line="478" pos:column="18">||<pos:position pos:line="478" pos:column="20"/></operator> <operator pos:line="478" pos:column="21">!<pos:position pos:line="478" pos:column="22"/></operator><name><name pos:line="478" pos:column="22">conn<pos:position pos:line="478" pos:column="26"/></name><operator pos:line="478" pos:column="26">-&gt;<pos:position pos:line="478" pos:column="31"/></operator><name pos:line="478" pos:column="28">passwd<pos:position pos:line="478" pos:column="34"/></name></name></expr>)<pos:position pos:line="478" pos:column="35"/></condition><then pos:line="478" pos:column="35">
    <block type="pseudo"><return pos:line="479" pos:column="5">return <expr><name pos:line="479" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="479" pos:column="31"/></name></expr>;<pos:position pos:line="479" pos:column="32"/></return></block></then></if>

  <comment type="block" format="doxygen" pos:line="481" pos:column="3">/*************************************************************
   * Check the current list of connections to see if we can
   * re-use an already existing one or if we have to create a
   * new one.
   *************************************************************/</comment>

  <comment type="block" pos:line="487" pos:column="3">/* Get a cloned copy of the SSL config situation stored in the
     connection struct. But to get this going nicely, we must first make
     sure that the strings in the master copy are pointing to the correct
     strings in the session handle strings array!

     Keep in mind that the pointers in the master copy are pointing to strings
     that will be freed as part of the SessionHandle struct, but all cloned
     copies will be separately allocated.
  */</comment>
  <expr_stmt><expr><name><name pos:line="496" pos:column="3">data<pos:position pos:line="496" pos:column="7"/></name><operator pos:line="496" pos:column="7">-&gt;<pos:position pos:line="496" pos:column="12"/></operator><name pos:line="496" pos:column="9">set<pos:position pos:line="496" pos:column="12"/></name><operator pos:line="496" pos:column="12">.<pos:position pos:line="496" pos:column="13"/></operator><name pos:line="496" pos:column="13">ssl<pos:position pos:line="496" pos:column="16"/></name><operator pos:line="496" pos:column="16">.<pos:position pos:line="496" pos:column="17"/></operator><name pos:line="496" pos:column="17">CApath<pos:position pos:line="496" pos:column="23"/></name></name> <operator pos:line="496" pos:column="24">=<pos:position pos:line="496" pos:column="25"/></operator> <name><name pos:line="496" pos:column="26">data<pos:position pos:line="496" pos:column="30"/></name><operator pos:line="496" pos:column="30">-&gt;<pos:position pos:line="496" pos:column="35"/></operator><name pos:line="496" pos:column="32">set<pos:position pos:line="496" pos:column="35"/></name><operator pos:line="496" pos:column="35">.<pos:position pos:line="496" pos:column="36"/></operator><name pos:line="496" pos:column="36">str<pos:position pos:line="496" pos:column="39"/></name><index pos:line="496" pos:column="39">[<expr><name pos:line="496" pos:column="40">STRING_SSL_CAPATH<pos:position pos:line="496" pos:column="57"/></name></expr>]<pos:position pos:line="496" pos:column="58"/></index></name></expr>;<pos:position pos:line="496" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="497" pos:column="3">data<pos:position pos:line="497" pos:column="7"/></name><operator pos:line="497" pos:column="7">-&gt;<pos:position pos:line="497" pos:column="12"/></operator><name pos:line="497" pos:column="9">set<pos:position pos:line="497" pos:column="12"/></name><operator pos:line="497" pos:column="12">.<pos:position pos:line="497" pos:column="13"/></operator><name pos:line="497" pos:column="13">ssl<pos:position pos:line="497" pos:column="16"/></name><operator pos:line="497" pos:column="16">.<pos:position pos:line="497" pos:column="17"/></operator><name pos:line="497" pos:column="17">CAfile<pos:position pos:line="497" pos:column="23"/></name></name> <operator pos:line="497" pos:column="24">=<pos:position pos:line="497" pos:column="25"/></operator> <name><name pos:line="497" pos:column="26">data<pos:position pos:line="497" pos:column="30"/></name><operator pos:line="497" pos:column="30">-&gt;<pos:position pos:line="497" pos:column="35"/></operator><name pos:line="497" pos:column="32">set<pos:position pos:line="497" pos:column="35"/></name><operator pos:line="497" pos:column="35">.<pos:position pos:line="497" pos:column="36"/></operator><name pos:line="497" pos:column="36">str<pos:position pos:line="497" pos:column="39"/></name><index pos:line="497" pos:column="39">[<expr><name pos:line="497" pos:column="40">STRING_SSL_CAFILE<pos:position pos:line="497" pos:column="57"/></name></expr>]<pos:position pos:line="497" pos:column="58"/></index></name></expr>;<pos:position pos:line="497" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="498" pos:column="3">data<pos:position pos:line="498" pos:column="7"/></name><operator pos:line="498" pos:column="7">-&gt;<pos:position pos:line="498" pos:column="12"/></operator><name pos:line="498" pos:column="9">set<pos:position pos:line="498" pos:column="12"/></name><operator pos:line="498" pos:column="12">.<pos:position pos:line="498" pos:column="13"/></operator><name pos:line="498" pos:column="13">ssl<pos:position pos:line="498" pos:column="16"/></name><operator pos:line="498" pos:column="16">.<pos:position pos:line="498" pos:column="17"/></operator><name pos:line="498" pos:column="17">random_file<pos:position pos:line="498" pos:column="28"/></name></name> <operator pos:line="498" pos:column="29">=<pos:position pos:line="498" pos:column="30"/></operator> <name><name pos:line="498" pos:column="31">data<pos:position pos:line="498" pos:column="35"/></name><operator pos:line="498" pos:column="35">-&gt;<pos:position pos:line="498" pos:column="40"/></operator><name pos:line="498" pos:column="37">set<pos:position pos:line="498" pos:column="40"/></name><operator pos:line="498" pos:column="40">.<pos:position pos:line="498" pos:column="41"/></operator><name pos:line="498" pos:column="41">str<pos:position pos:line="498" pos:column="44"/></name><index pos:line="498" pos:column="44">[<expr><name pos:line="498" pos:column="45">STRING_SSL_RANDOM_FILE<pos:position pos:line="498" pos:column="67"/></name></expr>]<pos:position pos:line="498" pos:column="68"/></index></name></expr>;<pos:position pos:line="498" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="499" pos:column="3">data<pos:position pos:line="499" pos:column="7"/></name><operator pos:line="499" pos:column="7">-&gt;<pos:position pos:line="499" pos:column="12"/></operator><name pos:line="499" pos:column="9">set<pos:position pos:line="499" pos:column="12"/></name><operator pos:line="499" pos:column="12">.<pos:position pos:line="499" pos:column="13"/></operator><name pos:line="499" pos:column="13">ssl<pos:position pos:line="499" pos:column="16"/></name><operator pos:line="499" pos:column="16">.<pos:position pos:line="499" pos:column="17"/></operator><name pos:line="499" pos:column="17">egdsocket<pos:position pos:line="499" pos:column="26"/></name></name> <operator pos:line="499" pos:column="27">=<pos:position pos:line="499" pos:column="28"/></operator> <name><name pos:line="499" pos:column="29">data<pos:position pos:line="499" pos:column="33"/></name><operator pos:line="499" pos:column="33">-&gt;<pos:position pos:line="499" pos:column="38"/></operator><name pos:line="499" pos:column="35">set<pos:position pos:line="499" pos:column="38"/></name><operator pos:line="499" pos:column="38">.<pos:position pos:line="499" pos:column="39"/></operator><name pos:line="499" pos:column="39">str<pos:position pos:line="499" pos:column="42"/></name><index pos:line="499" pos:column="42">[<expr><name pos:line="499" pos:column="43">STRING_SSL_EGDSOCKET<pos:position pos:line="499" pos:column="63"/></name></expr>]<pos:position pos:line="499" pos:column="64"/></index></name></expr>;<pos:position pos:line="499" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="500" pos:column="3">data<pos:position pos:line="500" pos:column="7"/></name><operator pos:line="500" pos:column="7">-&gt;<pos:position pos:line="500" pos:column="12"/></operator><name pos:line="500" pos:column="9">set<pos:position pos:line="500" pos:column="12"/></name><operator pos:line="500" pos:column="12">.<pos:position pos:line="500" pos:column="13"/></operator><name pos:line="500" pos:column="13">ssl<pos:position pos:line="500" pos:column="16"/></name><operator pos:line="500" pos:column="16">.<pos:position pos:line="500" pos:column="17"/></operator><name pos:line="500" pos:column="17">cipher_list<pos:position pos:line="500" pos:column="28"/></name></name> <operator pos:line="500" pos:column="29">=<pos:position pos:line="500" pos:column="30"/></operator> <name><name pos:line="500" pos:column="31">data<pos:position pos:line="500" pos:column="35"/></name><operator pos:line="500" pos:column="35">-&gt;<pos:position pos:line="500" pos:column="40"/></operator><name pos:line="500" pos:column="37">set<pos:position pos:line="500" pos:column="40"/></name><operator pos:line="500" pos:column="40">.<pos:position pos:line="500" pos:column="41"/></operator><name pos:line="500" pos:column="41">str<pos:position pos:line="500" pos:column="44"/></name><index pos:line="500" pos:column="44">[<expr><name pos:line="500" pos:column="45">STRING_SSL_CIPHER_LIST<pos:position pos:line="500" pos:column="67"/></name></expr>]<pos:position pos:line="500" pos:column="68"/></index></name></expr>;<pos:position pos:line="500" pos:column="69"/></expr_stmt>

  <if pos:line="502" pos:column="3">if<condition pos:line="502" pos:column="5">(<expr><operator pos:line="502" pos:column="6">!<pos:position pos:line="502" pos:column="7"/></operator><call><name pos:line="502" pos:column="7">Curl_clone_ssl_config<pos:position pos:line="502" pos:column="28"/></name><argument_list pos:line="502" pos:column="28">(<argument><expr><operator pos:line="502" pos:column="29">&amp;<pos:position pos:line="502" pos:column="34"/></operator><name><name pos:line="502" pos:column="30">data<pos:position pos:line="502" pos:column="34"/></name><operator pos:line="502" pos:column="34">-&gt;<pos:position pos:line="502" pos:column="39"/></operator><name pos:line="502" pos:column="36">set<pos:position pos:line="502" pos:column="39"/></name><operator pos:line="502" pos:column="39">.<pos:position pos:line="502" pos:column="40"/></operator><name pos:line="502" pos:column="40">ssl<pos:position pos:line="502" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="502" pos:column="45">&amp;<pos:position pos:line="502" pos:column="50"/></operator><name><name pos:line="502" pos:column="46">conn<pos:position pos:line="502" pos:column="50"/></name><operator pos:line="502" pos:column="50">-&gt;<pos:position pos:line="502" pos:column="55"/></operator><name pos:line="502" pos:column="52">ssl_config<pos:position pos:line="502" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="502" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="502" pos:column="64"/></condition><then pos:line="502" pos:column="64">
    <block type="pseudo"><return pos:line="503" pos:column="5">return <expr><name pos:line="503" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="503" pos:column="31"/></name></expr>;<pos:position pos:line="503" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="505" pos:column="3">/* reuse_fresh is TRUE if we are told to use a new connection by force, but
     we only acknowledge this option if this is not a re-used connection
     already (which happens due to follow-location or during a HTTP
     authentication phase). */</comment>
  <if pos:line="509" pos:column="3">if<condition pos:line="509" pos:column="5">(<expr><name><name pos:line="509" pos:column="6">data<pos:position pos:line="509" pos:column="10"/></name><operator pos:line="509" pos:column="10">-&gt;<pos:position pos:line="509" pos:column="15"/></operator><name pos:line="509" pos:column="12">set<pos:position pos:line="509" pos:column="15"/></name><operator pos:line="509" pos:column="15">.<pos:position pos:line="509" pos:column="16"/></operator><name pos:line="509" pos:column="16">reuse_fresh<pos:position pos:line="509" pos:column="27"/></name></name> <operator pos:line="509" pos:column="28">&amp;&amp;<pos:position pos:line="509" pos:column="38"/></operator> <operator pos:line="509" pos:column="31">!<pos:position pos:line="509" pos:column="32"/></operator><name><name pos:line="509" pos:column="32">data<pos:position pos:line="509" pos:column="36"/></name><operator pos:line="509" pos:column="36">-&gt;<pos:position pos:line="509" pos:column="41"/></operator><name pos:line="509" pos:column="38">state<pos:position pos:line="509" pos:column="43"/></name><operator pos:line="509" pos:column="43">.<pos:position pos:line="509" pos:column="44"/></operator><name pos:line="509" pos:column="44">this_is_a_follow<pos:position pos:line="509" pos:column="60"/></name></name></expr>)<pos:position pos:line="509" pos:column="61"/></condition><then pos:line="509" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><name pos:line="510" pos:column="5">reuse<pos:position pos:line="510" pos:column="10"/></name> <operator pos:line="510" pos:column="11">=<pos:position pos:line="510" pos:column="12"/></operator> <name pos:line="510" pos:column="13">FALSE<pos:position pos:line="510" pos:column="18"/></name></expr>;<pos:position pos:line="510" pos:column="19"/></expr_stmt></block></then>
  <else pos:line="511" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="512" pos:column="5">reuse<pos:position pos:line="512" pos:column="10"/></name> <operator pos:line="512" pos:column="11">=<pos:position pos:line="512" pos:column="12"/></operator> <call><name pos:line="512" pos:column="13">ConnectionExists<pos:position pos:line="512" pos:column="29"/></name><argument_list pos:line="512" pos:column="29">(<argument><expr><name pos:line="512" pos:column="30">data<pos:position pos:line="512" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="36">conn<pos:position pos:line="512" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="512" pos:column="42">&amp;<pos:position pos:line="512" pos:column="47"/></operator><name pos:line="512" pos:column="43">conn_temp<pos:position pos:line="512" pos:column="52"/></name></expr></argument>)<pos:position pos:line="512" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="54"/></expr_stmt></block></else></if>

  <if pos:line="514" pos:column="3">if<condition pos:line="514" pos:column="5">(<expr><name pos:line="514" pos:column="6">reuse<pos:position pos:line="514" pos:column="11"/></name></expr>)<pos:position pos:line="514" pos:column="12"/></condition><then pos:line="514" pos:column="12"> <block pos:line="514" pos:column="13">{
    <comment type="block" pos:line="515" pos:column="5">/*
     * We already have a connection for this, we got the former connection
     * in the conn_temp variable and thus we need to cleanup the one we
     * just allocated before we can move along and use the previously
     * existing one.
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="521" pos:column="5">struct<pos:position pos:line="521" pos:column="11"/></name> <name pos:line="521" pos:column="12">connectdata<pos:position pos:line="521" pos:column="23"/></name></name> <modifier pos:line="521" pos:column="24">*<pos:position pos:line="521" pos:column="25"/></modifier></type><name pos:line="521" pos:column="25">old_conn<pos:position pos:line="521" pos:column="33"/></name> <init pos:line="521" pos:column="34">= <expr><name pos:line="521" pos:column="36">conn<pos:position pos:line="521" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="521" pos:column="41"/></decl_stmt>

    <if pos:line="523" pos:column="5">if<condition pos:line="523" pos:column="7">(<expr><name><name pos:line="523" pos:column="8">old_conn<pos:position pos:line="523" pos:column="16"/></name><operator pos:line="523" pos:column="16">-&gt;<pos:position pos:line="523" pos:column="21"/></operator><name pos:line="523" pos:column="18">proxy<pos:position pos:line="523" pos:column="23"/></name><operator pos:line="523" pos:column="23">.<pos:position pos:line="523" pos:column="24"/></operator><name pos:line="523" pos:column="24">rawalloc<pos:position pos:line="523" pos:column="32"/></name></name></expr>)<pos:position pos:line="523" pos:column="33"/></condition><then pos:line="523" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="524" pos:column="7">free<pos:position pos:line="524" pos:column="11"/></name><argument_list pos:line="524" pos:column="11">(<argument><expr><name><name pos:line="524" pos:column="12">old_conn<pos:position pos:line="524" pos:column="20"/></name><operator pos:line="524" pos:column="20">-&gt;<pos:position pos:line="524" pos:column="25"/></operator><name pos:line="524" pos:column="22">proxy<pos:position pos:line="524" pos:column="27"/></name><operator pos:line="524" pos:column="27">.<pos:position pos:line="524" pos:column="28"/></operator><name pos:line="524" pos:column="28">rawalloc<pos:position pos:line="524" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="524" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="38"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="526" pos:column="5">/* free the SSL config struct from this connection struct as this was
       allocated in vain and is targeted for destruction */</comment>
    <expr_stmt><expr><call><name pos:line="528" pos:column="5">Curl_free_ssl_config<pos:position pos:line="528" pos:column="25"/></name><argument_list pos:line="528" pos:column="25">(<argument><expr><operator pos:line="528" pos:column="26">&amp;<pos:position pos:line="528" pos:column="31"/></operator><name><name pos:line="528" pos:column="27">conn<pos:position pos:line="528" pos:column="31"/></name><operator pos:line="528" pos:column="31">-&gt;<pos:position pos:line="528" pos:column="36"/></operator><name pos:line="528" pos:column="33">ssl_config<pos:position pos:line="528" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="528" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name pos:line="530" pos:column="5">conn<pos:position pos:line="530" pos:column="9"/></name> <operator pos:line="530" pos:column="10">=<pos:position pos:line="530" pos:column="11"/></operator> <name pos:line="530" pos:column="12">conn_temp<pos:position pos:line="530" pos:column="21"/></name></expr>;<pos:position pos:line="530" pos:column="22"/></expr_stmt>        <comment type="block" pos:line="530" pos:column="30">/* use this connection from now on */</comment>

    <expr_stmt><expr><name><name pos:line="532" pos:column="5">conn<pos:position pos:line="532" pos:column="9"/></name><operator pos:line="532" pos:column="9">-&gt;<pos:position pos:line="532" pos:column="14"/></operator><name pos:line="532" pos:column="11">data<pos:position pos:line="532" pos:column="15"/></name></name> <operator pos:line="532" pos:column="16">=<pos:position pos:line="532" pos:column="17"/></operator> <name><name pos:line="532" pos:column="18">old_conn<pos:position pos:line="532" pos:column="26"/></name><operator pos:line="532" pos:column="26">-&gt;<pos:position pos:line="532" pos:column="31"/></operator><name pos:line="532" pos:column="28">data<pos:position pos:line="532" pos:column="32"/></name></name></expr>;<pos:position pos:line="532" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="534" pos:column="5">/* get the user+password information from the old_conn struct since it may
     * be new for this request even when we re-use an existing connection */</comment>
    <expr_stmt><expr><name><name pos:line="536" pos:column="5">conn<pos:position pos:line="536" pos:column="9"/></name><operator pos:line="536" pos:column="9">-&gt;<pos:position pos:line="536" pos:column="14"/></operator><name pos:line="536" pos:column="11">bits<pos:position pos:line="536" pos:column="15"/></name><operator pos:line="536" pos:column="15">.<pos:position pos:line="536" pos:column="16"/></operator><name pos:line="536" pos:column="16">user_passwd<pos:position pos:line="536" pos:column="27"/></name></name> <operator pos:line="536" pos:column="28">=<pos:position pos:line="536" pos:column="29"/></operator> <name><name pos:line="536" pos:column="30">old_conn<pos:position pos:line="536" pos:column="38"/></name><operator pos:line="536" pos:column="38">-&gt;<pos:position pos:line="536" pos:column="43"/></operator><name pos:line="536" pos:column="40">bits<pos:position pos:line="536" pos:column="44"/></name><operator pos:line="536" pos:column="44">.<pos:position pos:line="536" pos:column="45"/></operator><name pos:line="536" pos:column="45">user_passwd<pos:position pos:line="536" pos:column="56"/></name></name></expr>;<pos:position pos:line="536" pos:column="57"/></expr_stmt>
    <if pos:line="537" pos:column="5">if<condition pos:line="537" pos:column="7">(<expr><name><name pos:line="537" pos:column="8">conn<pos:position pos:line="537" pos:column="12"/></name><operator pos:line="537" pos:column="12">-&gt;<pos:position pos:line="537" pos:column="17"/></operator><name pos:line="537" pos:column="14">bits<pos:position pos:line="537" pos:column="18"/></name><operator pos:line="537" pos:column="18">.<pos:position pos:line="537" pos:column="19"/></operator><name pos:line="537" pos:column="19">user_passwd<pos:position pos:line="537" pos:column="30"/></name></name></expr>)<pos:position pos:line="537" pos:column="31"/></condition><then pos:line="537" pos:column="31"> <block pos:line="537" pos:column="32">{
      <comment type="block" pos:line="538" pos:column="7">/* use the new user namd and password though */</comment>
      <expr_stmt><expr><call><name pos:line="539" pos:column="7">Curl_safefree<pos:position pos:line="539" pos:column="20"/></name><argument_list pos:line="539" pos:column="20">(<argument><expr><name><name pos:line="539" pos:column="21">conn<pos:position pos:line="539" pos:column="25"/></name><operator pos:line="539" pos:column="25">-&gt;<pos:position pos:line="539" pos:column="30"/></operator><name pos:line="539" pos:column="27">user<pos:position pos:line="539" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="539" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="540" pos:column="7">Curl_safefree<pos:position pos:line="540" pos:column="20"/></name><argument_list pos:line="540" pos:column="20">(<argument><expr><name><name pos:line="540" pos:column="21">conn<pos:position pos:line="540" pos:column="25"/></name><operator pos:line="540" pos:column="25">-&gt;<pos:position pos:line="540" pos:column="30"/></operator><name pos:line="540" pos:column="27">passwd<pos:position pos:line="540" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="540" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="541" pos:column="7">conn<pos:position pos:line="541" pos:column="11"/></name><operator pos:line="541" pos:column="11">-&gt;<pos:position pos:line="541" pos:column="16"/></operator><name pos:line="541" pos:column="13">user<pos:position pos:line="541" pos:column="17"/></name></name> <operator pos:line="541" pos:column="18">=<pos:position pos:line="541" pos:column="19"/></operator> <name><name pos:line="541" pos:column="20">old_conn<pos:position pos:line="541" pos:column="28"/></name><operator pos:line="541" pos:column="28">-&gt;<pos:position pos:line="541" pos:column="33"/></operator><name pos:line="541" pos:column="30">user<pos:position pos:line="541" pos:column="34"/></name></name></expr>;<pos:position pos:line="541" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="542" pos:column="7">conn<pos:position pos:line="542" pos:column="11"/></name><operator pos:line="542" pos:column="11">-&gt;<pos:position pos:line="542" pos:column="16"/></operator><name pos:line="542" pos:column="13">passwd<pos:position pos:line="542" pos:column="19"/></name></name> <operator pos:line="542" pos:column="20">=<pos:position pos:line="542" pos:column="21"/></operator> <name><name pos:line="542" pos:column="22">old_conn<pos:position pos:line="542" pos:column="30"/></name><operator pos:line="542" pos:column="30">-&gt;<pos:position pos:line="542" pos:column="35"/></operator><name pos:line="542" pos:column="32">passwd<pos:position pos:line="542" pos:column="38"/></name></name></expr>;<pos:position pos:line="542" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="543" pos:column="7">old_conn<pos:position pos:line="543" pos:column="15"/></name><operator pos:line="543" pos:column="15">-&gt;<pos:position pos:line="543" pos:column="20"/></operator><name pos:line="543" pos:column="17">user<pos:position pos:line="543" pos:column="21"/></name></name> <operator pos:line="543" pos:column="22">=<pos:position pos:line="543" pos:column="23"/></operator> <name pos:line="543" pos:column="24">NULL<pos:position pos:line="543" pos:column="28"/></name></expr>;<pos:position pos:line="543" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="544" pos:column="7">old_conn<pos:position pos:line="544" pos:column="15"/></name><operator pos:line="544" pos:column="15">-&gt;<pos:position pos:line="544" pos:column="20"/></operator><name pos:line="544" pos:column="17">passwd<pos:position pos:line="544" pos:column="23"/></name></name> <operator pos:line="544" pos:column="24">=<pos:position pos:line="544" pos:column="25"/></operator> <name pos:line="544" pos:column="26">NULL<pos:position pos:line="544" pos:column="30"/></name></expr>;<pos:position pos:line="544" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="545" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="547" pos:column="5">conn<pos:position pos:line="547" pos:column="9"/></name><operator pos:line="547" pos:column="9">-&gt;<pos:position pos:line="547" pos:column="14"/></operator><name pos:line="547" pos:column="11">bits<pos:position pos:line="547" pos:column="15"/></name><operator pos:line="547" pos:column="15">.<pos:position pos:line="547" pos:column="16"/></operator><name pos:line="547" pos:column="16">proxy_user_passwd<pos:position pos:line="547" pos:column="33"/></name></name> <operator pos:line="547" pos:column="34">=<pos:position pos:line="547" pos:column="35"/></operator> <name><name pos:line="547" pos:column="36">old_conn<pos:position pos:line="547" pos:column="44"/></name><operator pos:line="547" pos:column="44">-&gt;<pos:position pos:line="547" pos:column="49"/></operator><name pos:line="547" pos:column="46">bits<pos:position pos:line="547" pos:column="50"/></name><operator pos:line="547" pos:column="50">.<pos:position pos:line="547" pos:column="51"/></operator><name pos:line="547" pos:column="51">proxy_user_passwd<pos:position pos:line="547" pos:column="68"/></name></name></expr>;<pos:position pos:line="547" pos:column="69"/></expr_stmt>
    <if pos:line="548" pos:column="5">if<condition pos:line="548" pos:column="7">(<expr><name><name pos:line="548" pos:column="8">conn<pos:position pos:line="548" pos:column="12"/></name><operator pos:line="548" pos:column="12">-&gt;<pos:position pos:line="548" pos:column="17"/></operator><name pos:line="548" pos:column="14">bits<pos:position pos:line="548" pos:column="18"/></name><operator pos:line="548" pos:column="18">.<pos:position pos:line="548" pos:column="19"/></operator><name pos:line="548" pos:column="19">proxy_user_passwd<pos:position pos:line="548" pos:column="36"/></name></name></expr>)<pos:position pos:line="548" pos:column="37"/></condition><then pos:line="548" pos:column="37"> <block pos:line="548" pos:column="38">{
      <comment type="block" pos:line="549" pos:column="7">/* use the new proxy user name and proxy password though */</comment>
      <expr_stmt><expr><call><name pos:line="550" pos:column="7">Curl_safefree<pos:position pos:line="550" pos:column="20"/></name><argument_list pos:line="550" pos:column="20">(<argument><expr><name><name pos:line="550" pos:column="21">conn<pos:position pos:line="550" pos:column="25"/></name><operator pos:line="550" pos:column="25">-&gt;<pos:position pos:line="550" pos:column="30"/></operator><name pos:line="550" pos:column="27">proxyuser<pos:position pos:line="550" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="550" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="551" pos:column="7">Curl_safefree<pos:position pos:line="551" pos:column="20"/></name><argument_list pos:line="551" pos:column="20">(<argument><expr><name><name pos:line="551" pos:column="21">conn<pos:position pos:line="551" pos:column="25"/></name><operator pos:line="551" pos:column="25">-&gt;<pos:position pos:line="551" pos:column="30"/></operator><name pos:line="551" pos:column="27">proxypasswd<pos:position pos:line="551" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="551" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="551" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="552" pos:column="7">conn<pos:position pos:line="552" pos:column="11"/></name><operator pos:line="552" pos:column="11">-&gt;<pos:position pos:line="552" pos:column="16"/></operator><name pos:line="552" pos:column="13">proxyuser<pos:position pos:line="552" pos:column="22"/></name></name> <operator pos:line="552" pos:column="23">=<pos:position pos:line="552" pos:column="24"/></operator> <name><name pos:line="552" pos:column="25">old_conn<pos:position pos:line="552" pos:column="33"/></name><operator pos:line="552" pos:column="33">-&gt;<pos:position pos:line="552" pos:column="38"/></operator><name pos:line="552" pos:column="35">proxyuser<pos:position pos:line="552" pos:column="44"/></name></name></expr>;<pos:position pos:line="552" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="553" pos:column="7">conn<pos:position pos:line="553" pos:column="11"/></name><operator pos:line="553" pos:column="11">-&gt;<pos:position pos:line="553" pos:column="16"/></operator><name pos:line="553" pos:column="13">proxypasswd<pos:position pos:line="553" pos:column="24"/></name></name> <operator pos:line="553" pos:column="25">=<pos:position pos:line="553" pos:column="26"/></operator> <name><name pos:line="553" pos:column="27">old_conn<pos:position pos:line="553" pos:column="35"/></name><operator pos:line="553" pos:column="35">-&gt;<pos:position pos:line="553" pos:column="40"/></operator><name pos:line="553" pos:column="37">proxypasswd<pos:position pos:line="553" pos:column="48"/></name></name></expr>;<pos:position pos:line="553" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="554" pos:column="7">old_conn<pos:position pos:line="554" pos:column="15"/></name><operator pos:line="554" pos:column="15">-&gt;<pos:position pos:line="554" pos:column="20"/></operator><name pos:line="554" pos:column="17">proxyuser<pos:position pos:line="554" pos:column="26"/></name></name> <operator pos:line="554" pos:column="27">=<pos:position pos:line="554" pos:column="28"/></operator> <name pos:line="554" pos:column="29">NULL<pos:position pos:line="554" pos:column="33"/></name></expr>;<pos:position pos:line="554" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="555" pos:column="7">old_conn<pos:position pos:line="555" pos:column="15"/></name><operator pos:line="555" pos:column="15">-&gt;<pos:position pos:line="555" pos:column="20"/></operator><name pos:line="555" pos:column="17">proxypasswd<pos:position pos:line="555" pos:column="28"/></name></name> <operator pos:line="555" pos:column="29">=<pos:position pos:line="555" pos:column="30"/></operator> <name pos:line="555" pos:column="31">NULL<pos:position pos:line="555" pos:column="35"/></name></expr>;<pos:position pos:line="555" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="556" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="558" pos:column="5">/* host can change, when doing keepalive with a proxy ! */</comment>
    <if pos:line="559" pos:column="5">if<condition pos:line="559" pos:column="7">(<expr><name><name pos:line="559" pos:column="8">conn<pos:position pos:line="559" pos:column="12"/></name><operator pos:line="559" pos:column="12">-&gt;<pos:position pos:line="559" pos:column="17"/></operator><name pos:line="559" pos:column="14">bits<pos:position pos:line="559" pos:column="18"/></name><operator pos:line="559" pos:column="18">.<pos:position pos:line="559" pos:column="19"/></operator><name pos:line="559" pos:column="19">proxy<pos:position pos:line="559" pos:column="24"/></name></name></expr>)<pos:position pos:line="559" pos:column="25"/></condition><then pos:line="559" pos:column="25"> <block pos:line="559" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="560" pos:column="7">free<pos:position pos:line="560" pos:column="11"/></name><argument_list pos:line="560" pos:column="11">(<argument><expr><name><name pos:line="560" pos:column="12">conn<pos:position pos:line="560" pos:column="16"/></name><operator pos:line="560" pos:column="16">-&gt;<pos:position pos:line="560" pos:column="21"/></operator><name pos:line="560" pos:column="18">host<pos:position pos:line="560" pos:column="22"/></name><operator pos:line="560" pos:column="22">.<pos:position pos:line="560" pos:column="23"/></operator><name pos:line="560" pos:column="23">rawalloc<pos:position pos:line="560" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="560" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="560" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="561" pos:column="7">conn<pos:position pos:line="561" pos:column="11"/></name><operator pos:line="561" pos:column="11">-&gt;<pos:position pos:line="561" pos:column="16"/></operator><name pos:line="561" pos:column="13">host<pos:position pos:line="561" pos:column="17"/></name></name><operator pos:line="561" pos:column="17">=<pos:position pos:line="561" pos:column="18"/></operator><name><name pos:line="561" pos:column="18">old_conn<pos:position pos:line="561" pos:column="26"/></name><operator pos:line="561" pos:column="26">-&gt;<pos:position pos:line="561" pos:column="31"/></operator><name pos:line="561" pos:column="28">host<pos:position pos:line="561" pos:column="32"/></name></name></expr>;<pos:position pos:line="561" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="562" pos:column="6"/></block></then>
    <else pos:line="563" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="564" pos:column="7">free<pos:position pos:line="564" pos:column="11"/></name><argument_list pos:line="564" pos:column="11">(<argument><expr><name><name pos:line="564" pos:column="12">old_conn<pos:position pos:line="564" pos:column="20"/></name><operator pos:line="564" pos:column="20">-&gt;<pos:position pos:line="564" pos:column="25"/></operator><name pos:line="564" pos:column="22">host<pos:position pos:line="564" pos:column="26"/></name><operator pos:line="564" pos:column="26">.<pos:position pos:line="564" pos:column="27"/></operator><name pos:line="564" pos:column="27">rawalloc<pos:position pos:line="564" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="564" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="564" pos:column="37"/></expr_stmt></block></else></if> <comment type="block" pos:line="564" pos:column="38">/* free the newly allocated name buffer */</comment>

    <comment type="block" pos:line="566" pos:column="5">/* re-use init */</comment>
    <expr_stmt><expr><name><name pos:line="567" pos:column="5">conn<pos:position pos:line="567" pos:column="9"/></name><operator pos:line="567" pos:column="9">-&gt;<pos:position pos:line="567" pos:column="14"/></operator><name pos:line="567" pos:column="11">bits<pos:position pos:line="567" pos:column="15"/></name><operator pos:line="567" pos:column="15">.<pos:position pos:line="567" pos:column="16"/></operator><name pos:line="567" pos:column="16">reuse<pos:position pos:line="567" pos:column="21"/></name></name> <operator pos:line="567" pos:column="22">=<pos:position pos:line="567" pos:column="23"/></operator> <name pos:line="567" pos:column="24">TRUE<pos:position pos:line="567" pos:column="28"/></name></expr>;<pos:position pos:line="567" pos:column="29"/></expr_stmt> <comment type="block" pos:line="567" pos:column="30">/* yes, we're re-using here */</comment>

    <expr_stmt><expr><call><name pos:line="569" pos:column="5">Curl_safefree<pos:position pos:line="569" pos:column="18"/></name><argument_list pos:line="569" pos:column="18">(<argument><expr><name><name pos:line="569" pos:column="19">old_conn<pos:position pos:line="569" pos:column="27"/></name><operator pos:line="569" pos:column="27">-&gt;<pos:position pos:line="569" pos:column="32"/></operator><name pos:line="569" pos:column="29">user<pos:position pos:line="569" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="569" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="569" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="570" pos:column="5">Curl_safefree<pos:position pos:line="570" pos:column="18"/></name><argument_list pos:line="570" pos:column="18">(<argument><expr><name><name pos:line="570" pos:column="19">old_conn<pos:position pos:line="570" pos:column="27"/></name><operator pos:line="570" pos:column="27">-&gt;<pos:position pos:line="570" pos:column="32"/></operator><name pos:line="570" pos:column="29">passwd<pos:position pos:line="570" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="570" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="570" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="571" pos:column="5">Curl_safefree<pos:position pos:line="571" pos:column="18"/></name><argument_list pos:line="571" pos:column="18">(<argument><expr><name><name pos:line="571" pos:column="19">old_conn<pos:position pos:line="571" pos:column="27"/></name><operator pos:line="571" pos:column="27">-&gt;<pos:position pos:line="571" pos:column="32"/></operator><name pos:line="571" pos:column="29">proxyuser<pos:position pos:line="571" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="571" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="572" pos:column="5">Curl_safefree<pos:position pos:line="572" pos:column="18"/></name><argument_list pos:line="572" pos:column="18">(<argument><expr><name><name pos:line="572" pos:column="19">old_conn<pos:position pos:line="572" pos:column="27"/></name><operator pos:line="572" pos:column="27">-&gt;<pos:position pos:line="572" pos:column="32"/></operator><name pos:line="572" pos:column="29">proxypasswd<pos:position pos:line="572" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="572" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="573" pos:column="5">Curl_llist_destroy<pos:position pos:line="573" pos:column="23"/></name><argument_list pos:line="573" pos:column="23">(<argument><expr><name><name pos:line="573" pos:column="24">old_conn<pos:position pos:line="573" pos:column="32"/></name><operator pos:line="573" pos:column="32">-&gt;<pos:position pos:line="573" pos:column="37"/></operator><name pos:line="573" pos:column="34">send_pipe<pos:position pos:line="573" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="45">NULL<pos:position pos:line="573" pos:column="49"/></name></expr></argument>)<pos:position pos:line="573" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="573" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="574" pos:column="5">Curl_llist_destroy<pos:position pos:line="574" pos:column="23"/></name><argument_list pos:line="574" pos:column="23">(<argument><expr><name><name pos:line="574" pos:column="24">old_conn<pos:position pos:line="574" pos:column="32"/></name><operator pos:line="574" pos:column="32">-&gt;<pos:position pos:line="574" pos:column="37"/></operator><name pos:line="574" pos:column="34">recv_pipe<pos:position pos:line="574" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="574" pos:column="45">NULL<pos:position pos:line="574" pos:column="49"/></name></expr></argument>)<pos:position pos:line="574" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="575" pos:column="5">Curl_llist_destroy<pos:position pos:line="575" pos:column="23"/></name><argument_list pos:line="575" pos:column="23">(<argument><expr><name><name pos:line="575" pos:column="24">old_conn<pos:position pos:line="575" pos:column="32"/></name><operator pos:line="575" pos:column="32">-&gt;<pos:position pos:line="575" pos:column="37"/></operator><name pos:line="575" pos:column="34">pend_pipe<pos:position pos:line="575" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="575" pos:column="45">NULL<pos:position pos:line="575" pos:column="49"/></name></expr></argument>)<pos:position pos:line="575" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="575" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="576" pos:column="5">Curl_safefree<pos:position pos:line="576" pos:column="18"/></name><argument_list pos:line="576" pos:column="18">(<argument><expr><name><name pos:line="576" pos:column="19">old_conn<pos:position pos:line="576" pos:column="27"/></name><operator pos:line="576" pos:column="27">-&gt;<pos:position pos:line="576" pos:column="32"/></operator><name pos:line="576" pos:column="29">master_buffer<pos:position pos:line="576" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="576" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="578" pos:column="5">free<pos:position pos:line="578" pos:column="9"/></name><argument_list pos:line="578" pos:column="9">(<argument><expr><name pos:line="578" pos:column="10">old_conn<pos:position pos:line="578" pos:column="18"/></name></expr></argument>)<pos:position pos:line="578" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="578" pos:column="20"/></expr_stmt>          <comment type="block" pos:line="578" pos:column="30">/* we don't need this anymore */</comment>

    <expr_stmt><expr><operator pos:line="580" pos:column="5">*<pos:position pos:line="580" pos:column="6"/></operator><name pos:line="580" pos:column="6">in_connect<pos:position pos:line="580" pos:column="16"/></name> <operator pos:line="580" pos:column="17">=<pos:position pos:line="580" pos:column="18"/></operator> <name pos:line="580" pos:column="19">conn<pos:position pos:line="580" pos:column="23"/></name></expr>;<pos:position pos:line="580" pos:column="24"/></expr_stmt>      <comment type="block" pos:line="580" pos:column="30">/* return this instead! */</comment>

    <expr_stmt><expr><call><name pos:line="582" pos:column="5">infof<pos:position pos:line="582" pos:column="10"/></name><argument_list pos:line="582" pos:column="10">(<argument><expr><name pos:line="582" pos:column="11">data<pos:position pos:line="582" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="582" pos:column="17">"Re-using existing connection! (#%ld) with host %s\n"<pos:position pos:line="582" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="583" pos:column="11">conn<pos:position pos:line="583" pos:column="15"/></name><operator pos:line="583" pos:column="15">-&gt;<pos:position pos:line="583" pos:column="20"/></operator><name pos:line="583" pos:column="17">connectindex<pos:position pos:line="583" pos:column="29"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="584" pos:column="11">conn<pos:position pos:line="584" pos:column="15"/></name><operator pos:line="584" pos:column="15">-&gt;<pos:position pos:line="584" pos:column="20"/></operator><name pos:line="584" pos:column="17">proxy<pos:position pos:line="584" pos:column="22"/></name><operator pos:line="584" pos:column="22">.<pos:position pos:line="584" pos:column="23"/></operator><name pos:line="584" pos:column="23">name<pos:position pos:line="584" pos:column="27"/></name></name></expr>?<pos:position pos:line="584" pos:column="28"/></condition><then><expr><name><name pos:line="584" pos:column="28">conn<pos:position pos:line="584" pos:column="32"/></name><operator pos:line="584" pos:column="32">-&gt;<pos:position pos:line="584" pos:column="37"/></operator><name pos:line="584" pos:column="34">proxy<pos:position pos:line="584" pos:column="39"/></name><operator pos:line="584" pos:column="39">.<pos:position pos:line="584" pos:column="40"/></operator><name pos:line="584" pos:column="40">dispname<pos:position pos:line="584" pos:column="48"/></name></name></expr></then><else pos:line="584" pos:column="48">:<expr><name><name pos:line="584" pos:column="49">conn<pos:position pos:line="584" pos:column="53"/></name><operator pos:line="584" pos:column="53">-&gt;<pos:position pos:line="584" pos:column="58"/></operator><name pos:line="584" pos:column="55">host<pos:position pos:line="584" pos:column="59"/></name><operator pos:line="584" pos:column="59">.<pos:position pos:line="584" pos:column="60"/></operator><name pos:line="584" pos:column="60">dispname<pos:position pos:line="584" pos:column="68"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="584" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="70"/></expr_stmt>
  }<pos:position pos:line="585" pos:column="4"/></block></then>
  <else pos:line="586" pos:column="3">else <block pos:line="586" pos:column="8">{
    <comment type="block" pos:line="587" pos:column="5">/*
     * This is a brand new connection, so let's store it in the connection
     * cache of ours!
     */</comment>
    <expr_stmt><expr><call><name pos:line="591" pos:column="5">ConnectionStore<pos:position pos:line="591" pos:column="20"/></name><argument_list pos:line="591" pos:column="20">(<argument><expr><name pos:line="591" pos:column="21">data<pos:position pos:line="591" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="591" pos:column="27">conn<pos:position pos:line="591" pos:column="31"/></name></expr></argument>)<pos:position pos:line="591" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="591" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="592" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="594" pos:column="3">result<pos:position pos:line="594" pos:column="9"/></name> <operator pos:line="594" pos:column="10">=<pos:position pos:line="594" pos:column="11"/></operator> <call><name pos:line="594" pos:column="12">setup_range<pos:position pos:line="594" pos:column="23"/></name><argument_list pos:line="594" pos:column="23">(<argument><expr><name pos:line="594" pos:column="24">data<pos:position pos:line="594" pos:column="28"/></name></expr></argument>)<pos:position pos:line="594" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="30"/></expr_stmt>
  <if pos:line="595" pos:column="3">if<condition pos:line="595" pos:column="5">(<expr><name pos:line="595" pos:column="6">result<pos:position pos:line="595" pos:column="12"/></name></expr>)<pos:position pos:line="595" pos:column="13"/></condition><then pos:line="595" pos:column="13">
    <block type="pseudo"><return pos:line="596" pos:column="5">return <expr><name pos:line="596" pos:column="12">result<pos:position pos:line="596" pos:column="18"/></name></expr>;<pos:position pos:line="596" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="598" pos:column="3">/* Continue connectdata initialization here. */</comment>

  <comment type="block" pos:line="600" pos:column="3">/*
   *
   * Inherit the proper values from the urldata struct AFTER we have arranged
   * the persistent connection stuff */</comment>
  <expr_stmt><expr><name><name pos:line="604" pos:column="3">conn<pos:position pos:line="604" pos:column="7"/></name><operator pos:line="604" pos:column="7">-&gt;<pos:position pos:line="604" pos:column="12"/></operator><name pos:line="604" pos:column="9">fread_func<pos:position pos:line="604" pos:column="19"/></name></name> <operator pos:line="604" pos:column="20">=<pos:position pos:line="604" pos:column="21"/></operator> <name><name pos:line="604" pos:column="22">data<pos:position pos:line="604" pos:column="26"/></name><operator pos:line="604" pos:column="26">-&gt;<pos:position pos:line="604" pos:column="31"/></operator><name pos:line="604" pos:column="28">set<pos:position pos:line="604" pos:column="31"/></name><operator pos:line="604" pos:column="31">.<pos:position pos:line="604" pos:column="32"/></operator><name pos:line="604" pos:column="32">fread_func<pos:position pos:line="604" pos:column="42"/></name></name></expr>;<pos:position pos:line="604" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="605" pos:column="3">conn<pos:position pos:line="605" pos:column="7"/></name><operator pos:line="605" pos:column="7">-&gt;<pos:position pos:line="605" pos:column="12"/></operator><name pos:line="605" pos:column="9">fread_in<pos:position pos:line="605" pos:column="17"/></name></name> <operator pos:line="605" pos:column="18">=<pos:position pos:line="605" pos:column="19"/></operator> <name><name pos:line="605" pos:column="20">data<pos:position pos:line="605" pos:column="24"/></name><operator pos:line="605" pos:column="24">-&gt;<pos:position pos:line="605" pos:column="29"/></operator><name pos:line="605" pos:column="26">set<pos:position pos:line="605" pos:column="29"/></name><operator pos:line="605" pos:column="29">.<pos:position pos:line="605" pos:column="30"/></operator><name pos:line="605" pos:column="30">in<pos:position pos:line="605" pos:column="32"/></name></name></expr>;<pos:position pos:line="605" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="606" pos:column="3">conn<pos:position pos:line="606" pos:column="7"/></name><operator pos:line="606" pos:column="7">-&gt;<pos:position pos:line="606" pos:column="12"/></operator><name pos:line="606" pos:column="9">seek_func<pos:position pos:line="606" pos:column="18"/></name></name> <operator pos:line="606" pos:column="19">=<pos:position pos:line="606" pos:column="20"/></operator> <name><name pos:line="606" pos:column="21">data<pos:position pos:line="606" pos:column="25"/></name><operator pos:line="606" pos:column="25">-&gt;<pos:position pos:line="606" pos:column="30"/></operator><name pos:line="606" pos:column="27">set<pos:position pos:line="606" pos:column="30"/></name><operator pos:line="606" pos:column="30">.<pos:position pos:line="606" pos:column="31"/></operator><name pos:line="606" pos:column="31">seek_func<pos:position pos:line="606" pos:column="40"/></name></name></expr>;<pos:position pos:line="606" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="607" pos:column="3">conn<pos:position pos:line="607" pos:column="7"/></name><operator pos:line="607" pos:column="7">-&gt;<pos:position pos:line="607" pos:column="12"/></operator><name pos:line="607" pos:column="9">seek_client<pos:position pos:line="607" pos:column="20"/></name></name> <operator pos:line="607" pos:column="21">=<pos:position pos:line="607" pos:column="22"/></operator> <name><name pos:line="607" pos:column="23">data<pos:position pos:line="607" pos:column="27"/></name><operator pos:line="607" pos:column="27">-&gt;<pos:position pos:line="607" pos:column="32"/></operator><name pos:line="607" pos:column="29">set<pos:position pos:line="607" pos:column="32"/></name><operator pos:line="607" pos:column="32">.<pos:position pos:line="607" pos:column="33"/></operator><name pos:line="607" pos:column="33">seek_client<pos:position pos:line="607" pos:column="44"/></name></name></expr>;<pos:position pos:line="607" pos:column="45"/></expr_stmt>

<cpp:ifndef pos:line="609" pos:column="1">#<cpp:directive pos:line="609" pos:column="2">ifndef<pos:position pos:line="609" pos:column="8"/></cpp:directive> <name pos:line="609" pos:column="9">USE_ARES<pos:position pos:line="609" pos:column="17"/></name></cpp:ifndef>
  <comment type="block" format="doxygen" pos:line="610" pos:column="3">/*************************************************************
   * Set timeout if that is being used, and we're not using an asynchronous
   * name resolve.
   *************************************************************/</comment>
  <if pos:line="614" pos:column="3">if<condition pos:line="614" pos:column="5">(<expr><operator pos:line="614" pos:column="6">(<pos:position pos:line="614" pos:column="7"/></operator><name><name pos:line="614" pos:column="7">data<pos:position pos:line="614" pos:column="11"/></name><operator pos:line="614" pos:column="11">-&gt;<pos:position pos:line="614" pos:column="16"/></operator><name pos:line="614" pos:column="13">set<pos:position pos:line="614" pos:column="16"/></name><operator pos:line="614" pos:column="16">.<pos:position pos:line="614" pos:column="17"/></operator><name pos:line="614" pos:column="17">timeout<pos:position pos:line="614" pos:column="24"/></name></name> <operator pos:line="614" pos:column="25">||<pos:position pos:line="614" pos:column="27"/></operator> <name><name pos:line="614" pos:column="28">data<pos:position pos:line="614" pos:column="32"/></name><operator pos:line="614" pos:column="32">-&gt;<pos:position pos:line="614" pos:column="37"/></operator><name pos:line="614" pos:column="34">set<pos:position pos:line="614" pos:column="37"/></name><operator pos:line="614" pos:column="37">.<pos:position pos:line="614" pos:column="38"/></operator><name pos:line="614" pos:column="38">connecttimeout<pos:position pos:line="614" pos:column="52"/></name></name><operator pos:line="614" pos:column="52">)<pos:position pos:line="614" pos:column="53"/></operator> <operator pos:line="614" pos:column="54">&amp;&amp;<pos:position pos:line="614" pos:column="64"/></operator> <operator pos:line="614" pos:column="57">!<pos:position pos:line="614" pos:column="58"/></operator><name><name pos:line="614" pos:column="58">data<pos:position pos:line="614" pos:column="62"/></name><operator pos:line="614" pos:column="62">-&gt;<pos:position pos:line="614" pos:column="67"/></operator><name pos:line="614" pos:column="64">set<pos:position pos:line="614" pos:column="67"/></name><operator pos:line="614" pos:column="67">.<pos:position pos:line="614" pos:column="68"/></operator><name pos:line="614" pos:column="68">no_signal<pos:position pos:line="614" pos:column="77"/></name></name></expr>)<pos:position pos:line="614" pos:column="78"/></condition><then pos:line="614" pos:column="78"> <block pos:line="614" pos:column="79">{
    <comment type="block" format="doxygen" pos:line="615" pos:column="5">/*************************************************************
     * Set signal handler to catch SIGALRM
     * Store the old value to be able to set it back later!
     *************************************************************/</comment>

<cpp:ifdef pos:line="620" pos:column="1">#<cpp:directive pos:line="620" pos:column="2">ifdef<pos:position pos:line="620" pos:column="7"/></cpp:directive> <name pos:line="620" pos:column="8">SIGALRM<pos:position pos:line="620" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="621" pos:column="1">#<cpp:directive pos:line="621" pos:column="2">ifdef<pos:position pos:line="621" pos:column="7"/></cpp:directive> <name pos:line="621" pos:column="8">HAVE_ALARM<pos:position pos:line="621" pos:column="18"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="622" pos:column="5">long<pos:position pos:line="622" pos:column="9"/></name></type> <name pos:line="622" pos:column="10">shortest<pos:position pos:line="622" pos:column="18"/></name></decl>;<pos:position pos:line="622" pos:column="19"/></decl_stmt>
<cpp:endif pos:line="623" pos:column="1">#<cpp:directive pos:line="623" pos:column="2">endif<pos:position pos:line="623" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="624" pos:column="1">#<cpp:directive pos:line="624" pos:column="2">ifdef<pos:position pos:line="624" pos:column="7"/></cpp:directive> <name pos:line="624" pos:column="8">HAVE_SIGACTION<pos:position pos:line="624" pos:column="22"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name><name pos:line="625" pos:column="5">struct<pos:position pos:line="625" pos:column="11"/></name> <name pos:line="625" pos:column="12">sigaction<pos:position pos:line="625" pos:column="21"/></name></name></type> <name pos:line="625" pos:column="22">sigact<pos:position pos:line="625" pos:column="28"/></name></decl>;<pos:position pos:line="625" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="626" pos:column="5">sigaction<pos:position pos:line="626" pos:column="14"/></name><argument_list pos:line="626" pos:column="14">(<argument><expr><name pos:line="626" pos:column="15">SIGALRM<pos:position pos:line="626" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="626" pos:column="24">NULL<pos:position pos:line="626" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="626" pos:column="30">&amp;<pos:position pos:line="626" pos:column="35"/></operator><name pos:line="626" pos:column="31">sigact<pos:position pos:line="626" pos:column="37"/></name></expr></argument>)<pos:position pos:line="626" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="626" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="627" pos:column="5">keep_sigact<pos:position pos:line="627" pos:column="16"/></name> <operator pos:line="627" pos:column="17">=<pos:position pos:line="627" pos:column="18"/></operator> <name pos:line="627" pos:column="19">sigact<pos:position pos:line="627" pos:column="25"/></name></expr>;<pos:position pos:line="627" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="628" pos:column="5">keep_copysig<pos:position pos:line="628" pos:column="17"/></name> <operator pos:line="628" pos:column="18">=<pos:position pos:line="628" pos:column="19"/></operator> <name pos:line="628" pos:column="20">TRUE<pos:position pos:line="628" pos:column="24"/></name></expr>;<pos:position pos:line="628" pos:column="25"/></expr_stmt> <comment type="block" pos:line="628" pos:column="26">/* yes, we have a copy */</comment>
    <expr_stmt><expr><name><name pos:line="629" pos:column="5">sigact<pos:position pos:line="629" pos:column="11"/></name><operator pos:line="629" pos:column="11">.<pos:position pos:line="629" pos:column="12"/></operator><name pos:line="629" pos:column="12">sa_handler<pos:position pos:line="629" pos:column="22"/></name></name> <operator pos:line="629" pos:column="23">=<pos:position pos:line="629" pos:column="24"/></operator> <name pos:line="629" pos:column="25">alarmfunc<pos:position pos:line="629" pos:column="34"/></name></expr>;<pos:position pos:line="629" pos:column="35"/></expr_stmt>
<cpp:ifdef pos:line="630" pos:column="1">#<cpp:directive pos:line="630" pos:column="2">ifdef<pos:position pos:line="630" pos:column="7"/></cpp:directive> <name pos:line="630" pos:column="8">SA_RESTART<pos:position pos:line="630" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="631" pos:column="5">/* HPUX doesn't have SA_RESTART but defaults to that behaviour! */</comment>
    <expr_stmt><expr><name><name pos:line="632" pos:column="5">sigact<pos:position pos:line="632" pos:column="11"/></name><operator pos:line="632" pos:column="11">.<pos:position pos:line="632" pos:column="12"/></operator><name pos:line="632" pos:column="12">sa_flags<pos:position pos:line="632" pos:column="20"/></name></name> <operator pos:line="632" pos:column="21">&amp;=<pos:position pos:line="632" pos:column="27"/></operator> <operator pos:line="632" pos:column="24">~<pos:position pos:line="632" pos:column="25"/></operator><name pos:line="632" pos:column="25">SA_RESTART<pos:position pos:line="632" pos:column="35"/></name></expr>;<pos:position pos:line="632" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="633" pos:column="1">#<cpp:directive pos:line="633" pos:column="2">endif<pos:position pos:line="633" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="634" pos:column="5">/* now set the new struct */</comment>
    <expr_stmt><expr><call><name pos:line="635" pos:column="5">sigaction<pos:position pos:line="635" pos:column="14"/></name><argument_list pos:line="635" pos:column="14">(<argument><expr><name pos:line="635" pos:column="15">SIGALRM<pos:position pos:line="635" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="635" pos:column="24">&amp;<pos:position pos:line="635" pos:column="29"/></operator><name pos:line="635" pos:column="25">sigact<pos:position pos:line="635" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="33">NULL<pos:position pos:line="635" pos:column="37"/></name></expr></argument>)<pos:position pos:line="635" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="635" pos:column="39"/></expr_stmt>
<cpp:else pos:line="636" pos:column="1">#<cpp:directive pos:line="636" pos:column="2">else<pos:position pos:line="636" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="636" pos:column="7">/* HAVE_SIGACTION */</comment>
    <comment type="block" pos:line="637" pos:column="5">/* no sigaction(), revert to the much lamer signal() */</comment>
<cpp:ifdef pos:line="638" pos:column="1">#<cpp:directive pos:line="638" pos:column="2">ifdef<pos:position pos:line="638" pos:column="7"/></cpp:directive> <name pos:line="638" pos:column="8">HAVE_SIGNAL<pos:position pos:line="638" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="639" pos:column="5">keep_sigact<pos:position pos:line="639" pos:column="16"/></name> <operator pos:line="639" pos:column="17">=<pos:position pos:line="639" pos:column="18"/></operator> <call><name pos:line="639" pos:column="19">signal<pos:position pos:line="639" pos:column="25"/></name><argument_list pos:line="639" pos:column="25">(<argument><expr><name pos:line="639" pos:column="26">SIGALRM<pos:position pos:line="639" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="639" pos:column="35">alarmfunc<pos:position pos:line="639" pos:column="44"/></name></expr></argument>)<pos:position pos:line="639" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="639" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="640" pos:column="1">#<cpp:directive pos:line="640" pos:column="2">endif<pos:position pos:line="640" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">endif<pos:position pos:line="641" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="641" pos:column="8">/* HAVE_SIGACTION */</comment>

    <comment type="block" pos:line="643" pos:column="5">/* We set the timeout on the name resolving phase first, separately from
     * the download/upload part to allow a maximum time on everything. This is
     * a signal-based timeout, why it won't work and shouldn't be used in
     * multi-threaded environments. */</comment>

<cpp:ifdef pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">ifdef<pos:position pos:line="648" pos:column="7"/></cpp:directive> <name pos:line="648" pos:column="8">HAVE_ALARM<pos:position pos:line="648" pos:column="18"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="649" pos:column="5">shortest<pos:position pos:line="649" pos:column="13"/></name> <operator pos:line="649" pos:column="14">=<pos:position pos:line="649" pos:column="15"/></operator> <name><name pos:line="649" pos:column="16">data<pos:position pos:line="649" pos:column="20"/></name><operator pos:line="649" pos:column="20">-&gt;<pos:position pos:line="649" pos:column="25"/></operator><name pos:line="649" pos:column="22">set<pos:position pos:line="649" pos:column="25"/></name><operator pos:line="649" pos:column="25">.<pos:position pos:line="649" pos:column="26"/></operator><name pos:line="649" pos:column="26">timeout<pos:position pos:line="649" pos:column="33"/></name></name></expr>;<pos:position pos:line="649" pos:column="34"/></expr_stmt> <comment type="block" pos:line="649" pos:column="35">/* default to this timeout value */</comment>
    <if pos:line="650" pos:column="5">if<condition pos:line="650" pos:column="7">(<expr><name pos:line="650" pos:column="8">shortest<pos:position pos:line="650" pos:column="16"/></name> <operator pos:line="650" pos:column="17">&amp;&amp;<pos:position pos:line="650" pos:column="27"/></operator> <name><name pos:line="650" pos:column="20">data<pos:position pos:line="650" pos:column="24"/></name><operator pos:line="650" pos:column="24">-&gt;<pos:position pos:line="650" pos:column="29"/></operator><name pos:line="650" pos:column="26">set<pos:position pos:line="650" pos:column="29"/></name><operator pos:line="650" pos:column="29">.<pos:position pos:line="650" pos:column="30"/></operator><name pos:line="650" pos:column="30">connecttimeout<pos:position pos:line="650" pos:column="44"/></name></name> <operator pos:line="650" pos:column="45">&amp;&amp;<pos:position pos:line="650" pos:column="55"/></operator>
       <operator pos:line="651" pos:column="8">(<pos:position pos:line="651" pos:column="9"/></operator><name><name pos:line="651" pos:column="9">data<pos:position pos:line="651" pos:column="13"/></name><operator pos:line="651" pos:column="13">-&gt;<pos:position pos:line="651" pos:column="18"/></operator><name pos:line="651" pos:column="15">set<pos:position pos:line="651" pos:column="18"/></name><operator pos:line="651" pos:column="18">.<pos:position pos:line="651" pos:column="19"/></operator><name pos:line="651" pos:column="19">connecttimeout<pos:position pos:line="651" pos:column="33"/></name></name> <operator pos:line="651" pos:column="34">&lt;<pos:position pos:line="651" pos:column="38"/></operator> <name pos:line="651" pos:column="36">shortest<pos:position pos:line="651" pos:column="44"/></name><operator pos:line="651" pos:column="44">)<pos:position pos:line="651" pos:column="45"/></operator></expr>)<pos:position pos:line="651" pos:column="46"/></condition><then pos:line="651" pos:column="46">
      <comment type="block" pos:line="652" pos:column="7">/* if both are set, pick the shortest */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="653" pos:column="7">shortest<pos:position pos:line="653" pos:column="15"/></name> <operator pos:line="653" pos:column="16">=<pos:position pos:line="653" pos:column="17"/></operator> <name><name pos:line="653" pos:column="18">data<pos:position pos:line="653" pos:column="22"/></name><operator pos:line="653" pos:column="22">-&gt;<pos:position pos:line="653" pos:column="27"/></operator><name pos:line="653" pos:column="24">set<pos:position pos:line="653" pos:column="27"/></name><operator pos:line="653" pos:column="27">.<pos:position pos:line="653" pos:column="28"/></operator><name pos:line="653" pos:column="28">connecttimeout<pos:position pos:line="653" pos:column="42"/></name></name></expr>;<pos:position pos:line="653" pos:column="43"/></expr_stmt></block></then>
    <elseif pos:line="654" pos:column="5">else <if pos:line="654" pos:column="10">if<condition pos:line="654" pos:column="12">(<expr><operator pos:line="654" pos:column="13">!<pos:position pos:line="654" pos:column="14"/></operator><name pos:line="654" pos:column="14">shortest<pos:position pos:line="654" pos:column="22"/></name></expr>)<pos:position pos:line="654" pos:column="23"/></condition><then pos:line="654" pos:column="23">
      <comment type="block" pos:line="655" pos:column="7">/* if timeout is not set, use the connect timeout */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="656" pos:column="7">shortest<pos:position pos:line="656" pos:column="15"/></name> <operator pos:line="656" pos:column="16">=<pos:position pos:line="656" pos:column="17"/></operator> <name><name pos:line="656" pos:column="18">data<pos:position pos:line="656" pos:column="22"/></name><operator pos:line="656" pos:column="22">-&gt;<pos:position pos:line="656" pos:column="27"/></operator><name pos:line="656" pos:column="24">set<pos:position pos:line="656" pos:column="27"/></name><operator pos:line="656" pos:column="27">.<pos:position pos:line="656" pos:column="28"/></operator><name pos:line="656" pos:column="28">connecttimeout<pos:position pos:line="656" pos:column="42"/></name></name></expr>;<pos:position pos:line="656" pos:column="43"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="658" pos:column="5">if<condition pos:line="658" pos:column="7">(<expr><name pos:line="658" pos:column="8">shortest<pos:position pos:line="658" pos:column="16"/></name> <operator pos:line="658" pos:column="17">&lt;<pos:position pos:line="658" pos:column="21"/></operator> <literal type="number" pos:line="658" pos:column="19">1000<pos:position pos:line="658" pos:column="23"/></literal></expr>)<pos:position pos:line="658" pos:column="24"/></condition><then pos:line="658" pos:column="24">
      <comment type="block" pos:line="659" pos:column="7">/* the alarm() function only provide integer second resolution, so if
         we want to wait less than one second we must bail out already now. */</comment>
      <block type="pseudo"><return pos:line="661" pos:column="7">return <expr><name pos:line="661" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="661" pos:column="38"/></name></expr>;<pos:position pos:line="661" pos:column="39"/></return></block></then></if>

    <comment type="block" pos:line="663" pos:column="5">/* alarm() makes a signal get sent when the timeout fires off, and that
       will abort system calls */</comment>
    <expr_stmt><expr><name pos:line="665" pos:column="5">prev_alarm<pos:position pos:line="665" pos:column="15"/></name> <operator pos:line="665" pos:column="16">=<pos:position pos:line="665" pos:column="17"/></operator> <call><name pos:line="665" pos:column="18">alarm<pos:position pos:line="665" pos:column="23"/></name><argument_list pos:line="665" pos:column="23">(<argument><expr><call pos:line="665" pos:column="24">(<name pos:line="665" pos:column="25">unsigned<pos:position pos:line="665" pos:column="33"/></name> <name pos:line="665" pos:column="34">int<pos:position pos:line="665" pos:column="37"/></name>) <argument_list pos:line="665" pos:column="39">(<argument><expr><ternary><condition><expr><name pos:line="665" pos:column="40">shortest<pos:position pos:line="665" pos:column="48"/></name></expr> ?<pos:position pos:line="665" pos:column="50"/></condition><then pos:line="665" pos:column="50"> <expr><name pos:line="665" pos:column="51">shortest<pos:position pos:line="665" pos:column="59"/></name><operator pos:line="665" pos:column="59">/<pos:position pos:line="665" pos:column="60"/></operator><literal type="number" pos:line="665" pos:column="60">1000L<pos:position pos:line="665" pos:column="65"/></literal></expr> <pos:position pos:line="665" pos:column="66"/></then><else pos:line="665" pos:column="66">: <expr><name pos:line="665" pos:column="68">shortest<pos:position pos:line="665" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="665" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="665" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="665" pos:column="79"/></expr_stmt>
    <comment type="block" pos:line="666" pos:column="5">/* We can expect the conn-&gt;created time to be "now", as that was just
       recently set in the beginning of this function and nothing slow
       has been done since then until now. */</comment>
<cpp:endif pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">endif<pos:position pos:line="669" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="670" pos:column="1">#<cpp:directive pos:line="670" pos:column="2">endif<pos:position pos:line="670" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="670" pos:column="8">/* SIGALRM */</comment>
  }<pos:position pos:line="671" pos:column="4"/></block></then></if>
<cpp:endif pos:line="672" pos:column="1">#<cpp:directive pos:line="672" pos:column="2">endif<pos:position pos:line="672" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="672" pos:column="8">/* USE_ARES */</comment>

  <comment type="block" format="doxygen" pos:line="674" pos:column="3">/*************************************************************
   * Resolve the name of the server or proxy
   *************************************************************/</comment>
  <if pos:line="677" pos:column="3">if<condition pos:line="677" pos:column="5">(<expr><name><name pos:line="677" pos:column="6">conn<pos:position pos:line="677" pos:column="10"/></name><operator pos:line="677" pos:column="10">-&gt;<pos:position pos:line="677" pos:column="15"/></operator><name pos:line="677" pos:column="12">bits<pos:position pos:line="677" pos:column="16"/></name><operator pos:line="677" pos:column="16">.<pos:position pos:line="677" pos:column="17"/></operator><name pos:line="677" pos:column="17">reuse<pos:position pos:line="677" pos:column="22"/></name></name></expr>)<pos:position pos:line="677" pos:column="23"/></condition><then pos:line="677" pos:column="23"> <block pos:line="677" pos:column="24">{
    <comment type="block" pos:line="678" pos:column="5">/* re-used connection, no resolving is necessary */</comment>
    <expr_stmt><expr><name pos:line="679" pos:column="5">hostaddr<pos:position pos:line="679" pos:column="13"/></name> <operator pos:line="679" pos:column="14">=<pos:position pos:line="679" pos:column="15"/></operator> <name pos:line="679" pos:column="16">NULL<pos:position pos:line="679" pos:column="20"/></name></expr>;<pos:position pos:line="679" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="680" pos:column="5">/* we'll need to clear conn-&gt;dns_entry later in Curl_disconnect() */</comment>

    <if pos:line="682" pos:column="5">if<condition pos:line="682" pos:column="7">(<expr><name><name pos:line="682" pos:column="8">conn<pos:position pos:line="682" pos:column="12"/></name><operator pos:line="682" pos:column="12">-&gt;<pos:position pos:line="682" pos:column="17"/></operator><name pos:line="682" pos:column="14">bits<pos:position pos:line="682" pos:column="18"/></name><operator pos:line="682" pos:column="18">.<pos:position pos:line="682" pos:column="19"/></operator><name pos:line="682" pos:column="19">proxy<pos:position pos:line="682" pos:column="24"/></name></name></expr>)<pos:position pos:line="682" pos:column="25"/></condition><then pos:line="682" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="683" pos:column="7">fix_hostname<pos:position pos:line="683" pos:column="19"/></name><argument_list pos:line="683" pos:column="19">(<argument><expr><name pos:line="683" pos:column="20">data<pos:position pos:line="683" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="683" pos:column="26">conn<pos:position pos:line="683" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="683" pos:column="32">&amp;<pos:position pos:line="683" pos:column="37"/></operator><name><name pos:line="683" pos:column="33">conn<pos:position pos:line="683" pos:column="37"/></name><operator pos:line="683" pos:column="37">-&gt;<pos:position pos:line="683" pos:column="42"/></operator><name pos:line="683" pos:column="39">host<pos:position pos:line="683" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="683" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="683" pos:column="45"/></expr_stmt></block></then></if>
  }<pos:position pos:line="684" pos:column="4"/></block></then>
  <else pos:line="685" pos:column="3">else <block pos:line="685" pos:column="8">{
    <comment type="block" pos:line="686" pos:column="5">/* this is a fresh connect */</comment>

    <comment type="block" pos:line="688" pos:column="5">/* set a pointer to the hostname we display */</comment>
    <expr_stmt><expr><call><name pos:line="689" pos:column="5">fix_hostname<pos:position pos:line="689" pos:column="17"/></name><argument_list pos:line="689" pos:column="17">(<argument><expr><name pos:line="689" pos:column="18">data<pos:position pos:line="689" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="689" pos:column="24">conn<pos:position pos:line="689" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="689" pos:column="30">&amp;<pos:position pos:line="689" pos:column="35"/></operator><name><name pos:line="689" pos:column="31">conn<pos:position pos:line="689" pos:column="35"/></name><operator pos:line="689" pos:column="35">-&gt;<pos:position pos:line="689" pos:column="40"/></operator><name pos:line="689" pos:column="37">host<pos:position pos:line="689" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="689" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="689" pos:column="43"/></expr_stmt>

    <if pos:line="691" pos:column="5">if<condition pos:line="691" pos:column="7">(<expr><operator pos:line="691" pos:column="8">!<pos:position pos:line="691" pos:column="9"/></operator><name><name pos:line="691" pos:column="9">conn<pos:position pos:line="691" pos:column="13"/></name><operator pos:line="691" pos:column="13">-&gt;<pos:position pos:line="691" pos:column="18"/></operator><name pos:line="691" pos:column="15">proxy<pos:position pos:line="691" pos:column="20"/></name><operator pos:line="691" pos:column="20">.<pos:position pos:line="691" pos:column="21"/></operator><name pos:line="691" pos:column="21">name<pos:position pos:line="691" pos:column="25"/></name></name> <operator pos:line="691" pos:column="26">||<pos:position pos:line="691" pos:column="28"/></operator> <operator pos:line="691" pos:column="29">!<pos:position pos:line="691" pos:column="30"/></operator><operator pos:line="691" pos:column="30">*<pos:position pos:line="691" pos:column="31"/></operator><name><name pos:line="691" pos:column="31">conn<pos:position pos:line="691" pos:column="35"/></name><operator pos:line="691" pos:column="35">-&gt;<pos:position pos:line="691" pos:column="40"/></operator><name pos:line="691" pos:column="37">proxy<pos:position pos:line="691" pos:column="42"/></name><operator pos:line="691" pos:column="42">.<pos:position pos:line="691" pos:column="43"/></operator><name pos:line="691" pos:column="43">name<pos:position pos:line="691" pos:column="47"/></name></name></expr>)<pos:position pos:line="691" pos:column="48"/></condition><then pos:line="691" pos:column="48"> <block pos:line="691" pos:column="49">{
      <comment type="block" pos:line="692" pos:column="7">/* If not connecting via a proxy, extract the port from the URL, if it is
       * there, thus overriding any defaults that might have been set above. */</comment>
      <expr_stmt><expr><name><name pos:line="694" pos:column="7">conn<pos:position pos:line="694" pos:column="11"/></name><operator pos:line="694" pos:column="11">-&gt;<pos:position pos:line="694" pos:column="16"/></operator><name pos:line="694" pos:column="13">port<pos:position pos:line="694" pos:column="17"/></name></name> <operator pos:line="694" pos:column="18">=<pos:position pos:line="694" pos:column="19"/></operator>  <name><name pos:line="694" pos:column="21">conn<pos:position pos:line="694" pos:column="25"/></name><operator pos:line="694" pos:column="25">-&gt;<pos:position pos:line="694" pos:column="30"/></operator><name pos:line="694" pos:column="27">remote_port<pos:position pos:line="694" pos:column="38"/></name></name></expr>;<pos:position pos:line="694" pos:column="39"/></expr_stmt> <comment type="block" pos:line="694" pos:column="40">/* it is the same port */</comment>

      <comment type="block" pos:line="696" pos:column="7">/* Resolve target host right on */</comment>
      <expr_stmt><expr><name pos:line="697" pos:column="7">rc<pos:position pos:line="697" pos:column="9"/></name> <operator pos:line="697" pos:column="10">=<pos:position pos:line="697" pos:column="11"/></operator> <call><name pos:line="697" pos:column="12">Curl_resolv<pos:position pos:line="697" pos:column="23"/></name><argument_list pos:line="697" pos:column="23">(<argument><expr><name pos:line="697" pos:column="24">conn<pos:position pos:line="697" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="697" pos:column="30">conn<pos:position pos:line="697" pos:column="34"/></name><operator pos:line="697" pos:column="34">-&gt;<pos:position pos:line="697" pos:column="39"/></operator><name pos:line="697" pos:column="36">host<pos:position pos:line="697" pos:column="40"/></name><operator pos:line="697" pos:column="40">.<pos:position pos:line="697" pos:column="41"/></operator><name pos:line="697" pos:column="41">name<pos:position pos:line="697" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="697" pos:column="47">(<pos:position pos:line="697" pos:column="48"/></operator><name pos:line="697" pos:column="48">int<pos:position pos:line="697" pos:column="51"/></name><operator pos:line="697" pos:column="51">)<pos:position pos:line="697" pos:column="52"/></operator><name><name pos:line="697" pos:column="52">conn<pos:position pos:line="697" pos:column="56"/></name><operator pos:line="697" pos:column="56">-&gt;<pos:position pos:line="697" pos:column="61"/></operator><name pos:line="697" pos:column="58">port<pos:position pos:line="697" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="697" pos:column="64">&amp;<pos:position pos:line="697" pos:column="69"/></operator><name pos:line="697" pos:column="65">hostaddr<pos:position pos:line="697" pos:column="73"/></name></expr></argument>)<pos:position pos:line="697" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="697" pos:column="75"/></expr_stmt>
      <if pos:line="698" pos:column="7">if<condition pos:line="698" pos:column="9">(<expr><name pos:line="698" pos:column="10">rc<pos:position pos:line="698" pos:column="12"/></name> <operator pos:line="698" pos:column="13">==<pos:position pos:line="698" pos:column="15"/></operator> <name pos:line="698" pos:column="16">CURLRESOLV_PENDING<pos:position pos:line="698" pos:column="34"/></name></expr>)<pos:position pos:line="698" pos:column="35"/></condition><then pos:line="698" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="699" pos:column="9">*<pos:position pos:line="699" pos:column="10"/></operator><name pos:line="699" pos:column="10">async<pos:position pos:line="699" pos:column="15"/></name> <operator pos:line="699" pos:column="16">=<pos:position pos:line="699" pos:column="17"/></operator> <name pos:line="699" pos:column="18">TRUE<pos:position pos:line="699" pos:column="22"/></name></expr>;<pos:position pos:line="699" pos:column="23"/></expr_stmt></block></then>

      <elseif pos:line="701" pos:column="7">else <if pos:line="701" pos:column="12">if<condition pos:line="701" pos:column="14">(<expr><operator pos:line="701" pos:column="15">!<pos:position pos:line="701" pos:column="16"/></operator><name pos:line="701" pos:column="16">hostaddr<pos:position pos:line="701" pos:column="24"/></name></expr>)<pos:position pos:line="701" pos:column="25"/></condition><then pos:line="701" pos:column="25"> <block pos:line="701" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="702" pos:column="9">failf<pos:position pos:line="702" pos:column="14"/></name><argument_list pos:line="702" pos:column="14">(<argument><expr><name pos:line="702" pos:column="15">data<pos:position pos:line="702" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="702" pos:column="21">"Couldn't resolve host '%s'"<pos:position pos:line="702" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="702" pos:column="51">conn<pos:position pos:line="702" pos:column="55"/></name><operator pos:line="702" pos:column="55">-&gt;<pos:position pos:line="702" pos:column="60"/></operator><name pos:line="702" pos:column="57">host<pos:position pos:line="702" pos:column="61"/></name><operator pos:line="702" pos:column="61">.<pos:position pos:line="702" pos:column="62"/></operator><name pos:line="702" pos:column="62">dispname<pos:position pos:line="702" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="702" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="702" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="703" pos:column="9">result<pos:position pos:line="703" pos:column="15"/></name> <operator pos:line="703" pos:column="16">=<pos:position pos:line="703" pos:column="17"/></operator>  <name pos:line="703" pos:column="19">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="703" pos:column="45"/></name></expr>;<pos:position pos:line="703" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="704" pos:column="9">/* don't return yet, we need to clean up the timeout first */</comment>
      }<pos:position pos:line="705" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="706" pos:column="6"/></block></then>
    <else pos:line="707" pos:column="5">else <block pos:line="707" pos:column="10">{
      <comment type="block" pos:line="708" pos:column="7">/* This is a proxy that hasn't been resolved yet. */</comment>

      <comment type="block" pos:line="710" pos:column="7">/* IDN-fix the proxy name */</comment>
      <expr_stmt><expr><call><name pos:line="711" pos:column="7">fix_hostname<pos:position pos:line="711" pos:column="19"/></name><argument_list pos:line="711" pos:column="19">(<argument><expr><name pos:line="711" pos:column="20">data<pos:position pos:line="711" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="711" pos:column="26">conn<pos:position pos:line="711" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="711" pos:column="32">&amp;<pos:position pos:line="711" pos:column="37"/></operator><name><name pos:line="711" pos:column="33">conn<pos:position pos:line="711" pos:column="37"/></name><operator pos:line="711" pos:column="37">-&gt;<pos:position pos:line="711" pos:column="42"/></operator><name pos:line="711" pos:column="39">proxy<pos:position pos:line="711" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="711" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="711" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="713" pos:column="7">/* resolve proxy */</comment>
      <expr_stmt><expr><name pos:line="714" pos:column="7">rc<pos:position pos:line="714" pos:column="9"/></name> <operator pos:line="714" pos:column="10">=<pos:position pos:line="714" pos:column="11"/></operator> <call><name pos:line="714" pos:column="12">Curl_resolv<pos:position pos:line="714" pos:column="23"/></name><argument_list pos:line="714" pos:column="23">(<argument><expr><name pos:line="714" pos:column="24">conn<pos:position pos:line="714" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="714" pos:column="30">conn<pos:position pos:line="714" pos:column="34"/></name><operator pos:line="714" pos:column="34">-&gt;<pos:position pos:line="714" pos:column="39"/></operator><name pos:line="714" pos:column="36">proxy<pos:position pos:line="714" pos:column="41"/></name><operator pos:line="714" pos:column="41">.<pos:position pos:line="714" pos:column="42"/></operator><name pos:line="714" pos:column="42">name<pos:position pos:line="714" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="714" pos:column="48">(<pos:position pos:line="714" pos:column="49"/></operator><name pos:line="714" pos:column="49">int<pos:position pos:line="714" pos:column="52"/></name><operator pos:line="714" pos:column="52">)<pos:position pos:line="714" pos:column="53"/></operator><name><name pos:line="714" pos:column="53">conn<pos:position pos:line="714" pos:column="57"/></name><operator pos:line="714" pos:column="57">-&gt;<pos:position pos:line="714" pos:column="62"/></operator><name pos:line="714" pos:column="59">port<pos:position pos:line="714" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="714" pos:column="65">&amp;<pos:position pos:line="714" pos:column="70"/></operator><name pos:line="714" pos:column="66">hostaddr<pos:position pos:line="714" pos:column="74"/></name></expr></argument>)<pos:position pos:line="714" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="714" pos:column="76"/></expr_stmt>

      <if pos:line="716" pos:column="7">if<condition pos:line="716" pos:column="9">(<expr><name pos:line="716" pos:column="10">rc<pos:position pos:line="716" pos:column="12"/></name> <operator pos:line="716" pos:column="13">==<pos:position pos:line="716" pos:column="15"/></operator> <name pos:line="716" pos:column="16">CURLRESOLV_PENDING<pos:position pos:line="716" pos:column="34"/></name></expr>)<pos:position pos:line="716" pos:column="35"/></condition><then pos:line="716" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="717" pos:column="9">*<pos:position pos:line="717" pos:column="10"/></operator><name pos:line="717" pos:column="10">async<pos:position pos:line="717" pos:column="15"/></name> <operator pos:line="717" pos:column="16">=<pos:position pos:line="717" pos:column="17"/></operator> <name pos:line="717" pos:column="18">TRUE<pos:position pos:line="717" pos:column="22"/></name></expr>;<pos:position pos:line="717" pos:column="23"/></expr_stmt></block></then>

      <elseif pos:line="719" pos:column="7">else <if pos:line="719" pos:column="12">if<condition pos:line="719" pos:column="14">(<expr><operator pos:line="719" pos:column="15">!<pos:position pos:line="719" pos:column="16"/></operator><name pos:line="719" pos:column="16">hostaddr<pos:position pos:line="719" pos:column="24"/></name></expr>)<pos:position pos:line="719" pos:column="25"/></condition><then pos:line="719" pos:column="25"> <block pos:line="719" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="720" pos:column="9">failf<pos:position pos:line="720" pos:column="14"/></name><argument_list pos:line="720" pos:column="14">(<argument><expr><name pos:line="720" pos:column="15">data<pos:position pos:line="720" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="720" pos:column="21">"Couldn't resolve proxy '%s'"<pos:position pos:line="720" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="720" pos:column="52">conn<pos:position pos:line="720" pos:column="56"/></name><operator pos:line="720" pos:column="56">-&gt;<pos:position pos:line="720" pos:column="61"/></operator><name pos:line="720" pos:column="58">proxy<pos:position pos:line="720" pos:column="63"/></name><operator pos:line="720" pos:column="63">.<pos:position pos:line="720" pos:column="64"/></operator><name pos:line="720" pos:column="64">dispname<pos:position pos:line="720" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="720" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="720" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="721" pos:column="9">result<pos:position pos:line="721" pos:column="15"/></name> <operator pos:line="721" pos:column="16">=<pos:position pos:line="721" pos:column="17"/></operator> <name pos:line="721" pos:column="18">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="721" pos:column="45"/></name></expr>;<pos:position pos:line="721" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="722" pos:column="9">/* don't return yet, we need to clean up the timeout first */</comment>
      }<pos:position pos:line="723" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="724" pos:column="6"/></block></else></if>
  }<pos:position pos:line="725" pos:column="4"/></block></else></if>
  <expr_stmt><expr><operator pos:line="726" pos:column="3">*<pos:position pos:line="726" pos:column="4"/></operator><name pos:line="726" pos:column="4">addr<pos:position pos:line="726" pos:column="8"/></name> <operator pos:line="726" pos:column="9">=<pos:position pos:line="726" pos:column="10"/></operator> <name pos:line="726" pos:column="11">hostaddr<pos:position pos:line="726" pos:column="19"/></name></expr>;<pos:position pos:line="726" pos:column="20"/></expr_stmt>

<cpp:if pos:line="728" pos:column="1">#<cpp:directive pos:line="728" pos:column="2">if<pos:position pos:line="728" pos:column="4"/></cpp:directive> <expr><call><name pos:line="728" pos:column="5">defined<pos:position pos:line="728" pos:column="12"/></name><argument_list pos:line="728" pos:column="12">(<argument><expr><name pos:line="728" pos:column="13">HAVE_ALARM<pos:position pos:line="728" pos:column="23"/></name></expr></argument>)<pos:position pos:line="728" pos:column="24"/></argument_list></call> <operator pos:line="728" pos:column="25">&amp;&amp;<pos:position pos:line="728" pos:column="35"/></operator> <call><name pos:line="728" pos:column="28">defined<pos:position pos:line="728" pos:column="35"/></name><argument_list pos:line="728" pos:column="35">(<argument><expr><name pos:line="728" pos:column="36">SIGALRM<pos:position pos:line="728" pos:column="43"/></name></expr></argument>)<pos:position pos:line="728" pos:column="44"/></argument_list></call> <operator pos:line="728" pos:column="45">&amp;&amp;<pos:position pos:line="728" pos:column="55"/></operator> <operator pos:line="728" pos:column="48">!<pos:position pos:line="728" pos:column="49"/></operator><call><name pos:line="728" pos:column="49">defined<pos:position pos:line="728" pos:column="56"/></name><argument_list pos:line="728" pos:column="56">(<argument><expr><name pos:line="728" pos:column="57">USE_ARES<pos:position pos:line="728" pos:column="65"/></name></expr></argument>)<pos:position pos:line="728" pos:column="66"/></argument_list></call></expr></cpp:if>
  <if pos:line="729" pos:column="3">if<condition pos:line="729" pos:column="5">(<expr><operator pos:line="729" pos:column="6">(<pos:position pos:line="729" pos:column="7"/></operator><name><name pos:line="729" pos:column="7">data<pos:position pos:line="729" pos:column="11"/></name><operator pos:line="729" pos:column="11">-&gt;<pos:position pos:line="729" pos:column="16"/></operator><name pos:line="729" pos:column="13">set<pos:position pos:line="729" pos:column="16"/></name><operator pos:line="729" pos:column="16">.<pos:position pos:line="729" pos:column="17"/></operator><name pos:line="729" pos:column="17">timeout<pos:position pos:line="729" pos:column="24"/></name></name> <operator pos:line="729" pos:column="25">||<pos:position pos:line="729" pos:column="27"/></operator> <name><name pos:line="729" pos:column="28">data<pos:position pos:line="729" pos:column="32"/></name><operator pos:line="729" pos:column="32">-&gt;<pos:position pos:line="729" pos:column="37"/></operator><name pos:line="729" pos:column="34">set<pos:position pos:line="729" pos:column="37"/></name><operator pos:line="729" pos:column="37">.<pos:position pos:line="729" pos:column="38"/></operator><name pos:line="729" pos:column="38">connecttimeout<pos:position pos:line="729" pos:column="52"/></name></name><operator pos:line="729" pos:column="52">)<pos:position pos:line="729" pos:column="53"/></operator> <operator pos:line="729" pos:column="54">&amp;&amp;<pos:position pos:line="729" pos:column="64"/></operator> <operator pos:line="729" pos:column="57">!<pos:position pos:line="729" pos:column="58"/></operator><name><name pos:line="729" pos:column="58">data<pos:position pos:line="729" pos:column="62"/></name><operator pos:line="729" pos:column="62">-&gt;<pos:position pos:line="729" pos:column="67"/></operator><name pos:line="729" pos:column="64">set<pos:position pos:line="729" pos:column="67"/></name><operator pos:line="729" pos:column="67">.<pos:position pos:line="729" pos:column="68"/></operator><name pos:line="729" pos:column="68">no_signal<pos:position pos:line="729" pos:column="77"/></name></name></expr>)<pos:position pos:line="729" pos:column="78"/></condition><then pos:line="729" pos:column="78"> <block pos:line="729" pos:column="79">{
<cpp:ifdef pos:line="730" pos:column="1">#<cpp:directive pos:line="730" pos:column="2">ifdef<pos:position pos:line="730" pos:column="7"/></cpp:directive> <name pos:line="730" pos:column="8">HAVE_SIGACTION<pos:position pos:line="730" pos:column="22"/></name></cpp:ifdef>
    <if pos:line="731" pos:column="5">if<condition pos:line="731" pos:column="7">(<expr><name pos:line="731" pos:column="8">keep_copysig<pos:position pos:line="731" pos:column="20"/></name></expr>)<pos:position pos:line="731" pos:column="21"/></condition><then pos:line="731" pos:column="21"> <block pos:line="731" pos:column="22">{
      <comment type="block" pos:line="732" pos:column="7">/* we got a struct as it looked before, now put that one back nice
         and clean */</comment>
      <expr_stmt><expr><call><name pos:line="734" pos:column="7">sigaction<pos:position pos:line="734" pos:column="16"/></name><argument_list pos:line="734" pos:column="16">(<argument><expr><name pos:line="734" pos:column="17">SIGALRM<pos:position pos:line="734" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="734" pos:column="26">&amp;<pos:position pos:line="734" pos:column="31"/></operator><name pos:line="734" pos:column="27">keep_sigact<pos:position pos:line="734" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="734" pos:column="40">NULL<pos:position pos:line="734" pos:column="44"/></name></expr></argument>)<pos:position pos:line="734" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="734" pos:column="46"/></expr_stmt> <comment type="block" pos:line="734" pos:column="47">/* put it back */</comment>
    }<pos:position pos:line="735" pos:column="6"/></block></then></if>
<cpp:else pos:line="736" pos:column="1">#<cpp:directive pos:line="736" pos:column="2">else<pos:position pos:line="736" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="737" pos:column="1">#<cpp:directive pos:line="737" pos:column="2">ifdef<pos:position pos:line="737" pos:column="7"/></cpp:directive> <name pos:line="737" pos:column="8">HAVE_SIGNAL<pos:position pos:line="737" pos:column="19"/></name></cpp:ifdef>
    <comment type="block" pos:line="738" pos:column="5">/* restore the previous SIGALRM handler */</comment>
    <expr_stmt><expr><call><name pos:line="739" pos:column="5">signal<pos:position pos:line="739" pos:column="11"/></name><argument_list pos:line="739" pos:column="11">(<argument><expr><name pos:line="739" pos:column="12">SIGALRM<pos:position pos:line="739" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="739" pos:column="21">keep_sigact<pos:position pos:line="739" pos:column="32"/></name></expr></argument>)<pos:position pos:line="739" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="739" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="740" pos:column="1">#<cpp:directive pos:line="740" pos:column="2">endif<pos:position pos:line="740" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="741" pos:column="1">#<cpp:directive pos:line="741" pos:column="2">endif<pos:position pos:line="741" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="741" pos:column="8">/* HAVE_SIGACTION */</comment>

    <comment type="block" pos:line="743" pos:column="5">/* switch back the alarm() to either zero or to what it was before minus
       the time we spent until now! */</comment>
    <if pos:line="745" pos:column="5">if<condition pos:line="745" pos:column="7">(<expr><name pos:line="745" pos:column="8">prev_alarm<pos:position pos:line="745" pos:column="18"/></name></expr>)<pos:position pos:line="745" pos:column="19"/></condition><then pos:line="745" pos:column="19"> <block pos:line="745" pos:column="20">{
      <comment type="block" pos:line="746" pos:column="7">/* there was an alarm() set before us, now put it back */</comment>
      <decl_stmt><decl><type><name pos:line="747" pos:column="7">unsigned<pos:position pos:line="747" pos:column="15"/></name> <name pos:line="747" pos:column="16">long<pos:position pos:line="747" pos:column="20"/></name></type> <name pos:line="747" pos:column="21">elapsed_ms<pos:position pos:line="747" pos:column="31"/></name> <init pos:line="747" pos:column="32">= <expr><call><name pos:line="747" pos:column="34">Curl_tvdiff<pos:position pos:line="747" pos:column="45"/></name><argument_list pos:line="747" pos:column="45">(<argument><expr><call><name pos:line="747" pos:column="46">Curl_tvnow<pos:position pos:line="747" pos:column="56"/></name><argument_list pos:line="747" pos:column="56">()<pos:position pos:line="747" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="747" pos:column="60">conn<pos:position pos:line="747" pos:column="64"/></name><operator pos:line="747" pos:column="64">-&gt;<pos:position pos:line="747" pos:column="69"/></operator><name pos:line="747" pos:column="66">created<pos:position pos:line="747" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="747" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="747" pos:column="75"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="748" pos:column="7">unsigned<pos:position pos:line="748" pos:column="15"/></name> <name pos:line="748" pos:column="16">long<pos:position pos:line="748" pos:column="20"/></name></type> <name pos:line="748" pos:column="21">alarm_set<pos:position pos:line="748" pos:column="30"/></name></decl>;<pos:position pos:line="748" pos:column="31"/></decl_stmt>

      <comment type="block" pos:line="750" pos:column="7">/* the alarm period is counted in even number of seconds */</comment>
      <expr_stmt><expr><name pos:line="751" pos:column="7">alarm_set<pos:position pos:line="751" pos:column="16"/></name> <operator pos:line="751" pos:column="17">=<pos:position pos:line="751" pos:column="18"/></operator> <name pos:line="751" pos:column="19">prev_alarm<pos:position pos:line="751" pos:column="29"/></name> <operator pos:line="751" pos:column="30">-<pos:position pos:line="751" pos:column="31"/></operator> <name pos:line="751" pos:column="32">elapsed_ms<pos:position pos:line="751" pos:column="42"/></name><operator pos:line="751" pos:column="42">/<pos:position pos:line="751" pos:column="43"/></operator><literal type="number" pos:line="751" pos:column="43">1000<pos:position pos:line="751" pos:column="47"/></literal></expr>;<pos:position pos:line="751" pos:column="48"/></expr_stmt>

      <if pos:line="753" pos:column="7">if<condition pos:line="753" pos:column="9">(<expr><operator pos:line="753" pos:column="10">!<pos:position pos:line="753" pos:column="11"/></operator><name pos:line="753" pos:column="11">alarm_set<pos:position pos:line="753" pos:column="20"/></name> <operator pos:line="753" pos:column="21">||<pos:position pos:line="753" pos:column="23"/></operator>
         <operator pos:line="754" pos:column="10">(<pos:position pos:line="754" pos:column="11"/></operator><operator pos:line="754" pos:column="11">(<pos:position pos:line="754" pos:column="12"/></operator><name pos:line="754" pos:column="12">alarm_set<pos:position pos:line="754" pos:column="21"/></name> <operator pos:line="754" pos:column="22">&gt;=<pos:position pos:line="754" pos:column="27"/></operator> <literal type="number" pos:line="754" pos:column="25">0x80000000<pos:position pos:line="754" pos:column="35"/></literal><operator pos:line="754" pos:column="35">)<pos:position pos:line="754" pos:column="36"/></operator> <operator pos:line="754" pos:column="37">&amp;&amp;<pos:position pos:line="754" pos:column="47"/></operator> <operator pos:line="754" pos:column="40">(<pos:position pos:line="754" pos:column="41"/></operator><name pos:line="754" pos:column="41">prev_alarm<pos:position pos:line="754" pos:column="51"/></name> <operator pos:line="754" pos:column="52">&lt;<pos:position pos:line="754" pos:column="56"/></operator> <literal type="number" pos:line="754" pos:column="54">0x80000000<pos:position pos:line="754" pos:column="64"/></literal><operator pos:line="754" pos:column="64">)<pos:position pos:line="754" pos:column="65"/></operator><operator pos:line="754" pos:column="65">)<pos:position pos:line="754" pos:column="66"/></operator></expr> )<pos:position pos:line="754" pos:column="68"/></condition><then pos:line="754" pos:column="68"> <block pos:line="754" pos:column="69">{
        <comment type="block" pos:line="755" pos:column="9">/* if the alarm time-left reached zero or turned "negative" (counted
           with unsigned values), we should fire off a SIGALRM here, but we
           won't, and zero would be to switch it off so we never set it to
           less than 1! */</comment>
        <expr_stmt><expr><call><name pos:line="759" pos:column="9">alarm<pos:position pos:line="759" pos:column="14"/></name><argument_list pos:line="759" pos:column="14">(<argument><expr><literal type="number" pos:line="759" pos:column="15">1<pos:position pos:line="759" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="759" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="759" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="760" pos:column="9">result<pos:position pos:line="760" pos:column="15"/></name> <operator pos:line="760" pos:column="16">=<pos:position pos:line="760" pos:column="17"/></operator> <name pos:line="760" pos:column="18">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="760" pos:column="42"/></name></expr>;<pos:position pos:line="760" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="761" pos:column="9">failf<pos:position pos:line="761" pos:column="14"/></name><argument_list pos:line="761" pos:column="14">(<argument><expr><name pos:line="761" pos:column="15">data<pos:position pos:line="761" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="761" pos:column="21">"Previous alarm fired off!"<pos:position pos:line="761" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="761" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="761" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="762" pos:column="8"/></block></then>
      <else pos:line="763" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="764" pos:column="9">alarm<pos:position pos:line="764" pos:column="14"/></name><argument_list pos:line="764" pos:column="14">(<argument><expr><operator pos:line="764" pos:column="15">(<pos:position pos:line="764" pos:column="16"/></operator><name pos:line="764" pos:column="16">unsigned<pos:position pos:line="764" pos:column="24"/></name> <name pos:line="764" pos:column="25">int<pos:position pos:line="764" pos:column="28"/></name><operator pos:line="764" pos:column="28">)<pos:position pos:line="764" pos:column="29"/></operator><name pos:line="764" pos:column="29">alarm_set<pos:position pos:line="764" pos:column="38"/></name></expr></argument>)<pos:position pos:line="764" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="764" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="765" pos:column="6"/></block></then>
    <else pos:line="766" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="767" pos:column="7">alarm<pos:position pos:line="767" pos:column="12"/></name><argument_list pos:line="767" pos:column="12">(<argument><expr><literal type="number" pos:line="767" pos:column="13">0<pos:position pos:line="767" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="767" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="767" pos:column="16"/></expr_stmt></block></else></if> <comment type="block" pos:line="767" pos:column="17">/* just shut it off */</comment>
  }<pos:position pos:line="768" pos:column="4"/></block></then></if>
<cpp:endif pos:line="769" pos:column="1">#<cpp:directive pos:line="769" pos:column="2">endif<pos:position pos:line="769" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="771" pos:column="3">return <expr><name pos:line="771" pos:column="10">result<pos:position pos:line="771" pos:column="16"/></name></expr>;<pos:position pos:line="771" pos:column="17"/></return>
}<pos:position pos:line="772" pos:column="2"/></block></function></unit>

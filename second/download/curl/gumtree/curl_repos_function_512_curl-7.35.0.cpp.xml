<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_512_curl-7.35.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">easy<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">res<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">running<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">msgs_left<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">phase<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLMsg<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">msg<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">start_test_timing<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">res_global_init<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">res<pos:position pos:line="14" pos:column="9"/></name></expr>)<pos:position pos:line="14" pos:column="10"/></condition><then pos:line="14" pos:column="10"> <block pos:line="14" pos:column="11">{
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">res<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">easy_init<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">easy<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">multi_init<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">multi<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">phase<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">CONNECT_ONLY_PHASE<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></init> <condition><expr><name pos:line="22" pos:column="36">phase<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">&lt;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="44">LAST_PHASE<pos:position pos:line="22" pos:column="54"/></name></expr>;<pos:position pos:line="22" pos:column="55"/></condition> <incr><expr><operator pos:line="22" pos:column="56">++<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="58">phase<pos:position pos:line="22" pos:column="63"/></name></expr></incr>)<pos:position pos:line="22" pos:column="64"/></control> <block pos:line="22" pos:column="65">{
    <comment type="block" pos:line="23" pos:column="5">/* go verbose */</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">easy_setopt<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">easy<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">CURLOPT_VERBOSE<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="40">1L<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* specify target */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">easy_setopt<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">easy<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">CURLOPT_URL<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">URL<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* enable 'CONNECT_ONLY' option when in connect phase */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">phase<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">==<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">CONNECT_ONLY_PHASE<pos:position pos:line="30" pos:column="36"/></name></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">easy_setopt<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">easy<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="25">CURLOPT_CONNECT_ONLY<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="47">1L<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* enable 'NOBODY' option to send 'QUIT' command in quit phase */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">phase<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">QUIT_PHASE<pos:position pos:line="34" pos:column="28"/></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29"> <block pos:line="34" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">easy_setopt<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><name pos:line="35" pos:column="19">easy<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="25">CURLOPT_CONNECT_ONLY<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="47">0L<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">easy_setopt<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">easy<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="25">CURLOPT_NOBODY<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="41">1L<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">easy_setopt<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">easy<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="25">CURLOPT_FORBID_REUSE<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="47">1L<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">multi_add_handle<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">multi<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">easy<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

    <for pos:line="42" pos:column="5">for<control pos:line="42" pos:column="8">(<init pos:line="42" pos:column="9">;<pos:position pos:line="42" pos:column="10"/></init><condition pos:line="42" pos:column="10">;<pos:position pos:line="42" pos:column="11"/></condition><incr/>)<pos:position pos:line="42" pos:column="12"/></control> <block pos:line="42" pos:column="13">{
      <decl_stmt><decl><type><name><name pos:line="43" pos:column="7">struct<pos:position pos:line="43" pos:column="13"/></name> <name pos:line="43" pos:column="14">timeval<pos:position pos:line="43" pos:column="21"/></name></name></type> <name pos:line="43" pos:column="22">interval<pos:position pos:line="43" pos:column="30"/></name></decl>;<pos:position pos:line="43" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">fd_set<pos:position pos:line="44" pos:column="13"/></name></type> <name pos:line="44" pos:column="14">fdread<pos:position pos:line="44" pos:column="20"/></name></decl>;<pos:position pos:line="44" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">fd_set<pos:position pos:line="45" pos:column="13"/></name></type> <name pos:line="45" pos:column="14">fdwrite<pos:position pos:line="45" pos:column="21"/></name></decl>;<pos:position pos:line="45" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">fd_set<pos:position pos:line="46" pos:column="13"/></name></type> <name pos:line="46" pos:column="14">fdexcep<pos:position pos:line="46" pos:column="21"/></name></decl>;<pos:position pos:line="46" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="47" pos:column="7">long<pos:position pos:line="47" pos:column="11"/></name></type> <name pos:line="47" pos:column="12">timeout<pos:position pos:line="47" pos:column="19"/></name> <init pos:line="47" pos:column="20">= <expr><operator pos:line="47" pos:column="22">-<pos:position pos:line="47" pos:column="23"/></operator><literal type="number" pos:line="47" pos:column="23">99<pos:position pos:line="47" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="26"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">int<pos:position pos:line="48" pos:column="10"/></name></type> <name pos:line="48" pos:column="11">maxfd<pos:position pos:line="48" pos:column="16"/></name> <init pos:line="48" pos:column="17">= <expr><operator pos:line="48" pos:column="19">-<pos:position pos:line="48" pos:column="20"/></operator><literal type="number" pos:line="48" pos:column="20">99<pos:position pos:line="48" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="50" pos:column="7">multi_perform<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">multi<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="28">&amp;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="29">running<pos:position pos:line="50" pos:column="36"/></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="52" pos:column="7">abort_on_test_timeout<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">()<pos:position pos:line="52" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt>

      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><operator pos:line="54" pos:column="10">!<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">running<pos:position pos:line="54" pos:column="18"/></name></expr>)<pos:position pos:line="54" pos:column="19"/></condition><then pos:line="54" pos:column="19">
        <block type="pseudo"><break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="55" pos:column="16">/* done */</comment>

      <expr_stmt><expr><call><name pos:line="57" pos:column="7">FD_ZERO<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><operator pos:line="57" pos:column="15">&amp;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="16">fdread<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">FD_ZERO<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><operator pos:line="58" pos:column="15">&amp;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="16">fdwrite<pos:position pos:line="58" pos:column="23"/></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">FD_ZERO<pos:position pos:line="59" pos:column="14"/></name><argument_list pos:line="59" pos:column="14">(<argument><expr><operator pos:line="59" pos:column="15">&amp;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="16">fdexcep<pos:position pos:line="59" pos:column="23"/></name></expr></argument>)<pos:position pos:line="59" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="61" pos:column="7">multi_fdset<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">multi<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="26">&amp;<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="27">fdread<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="35">&amp;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="36">fdwrite<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="45">&amp;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="46">fdexcep<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="55">&amp;<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="56">maxfd<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>

      <comment type="block" pos:line="63" pos:column="7">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

      <expr_stmt><expr><call><name pos:line="65" pos:column="7">multi_timeout<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">multi<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="28">&amp;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="29">timeout<pos:position pos:line="65" pos:column="36"/></name></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt>

      <comment type="block" pos:line="67" pos:column="7">/* At this point, timeout is guaranteed to be greater or equal than -1. */</comment>

      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><name pos:line="69" pos:column="10">timeout<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">!=<pos:position pos:line="69" pos:column="20"/></operator> <operator pos:line="69" pos:column="21">-<pos:position pos:line="69" pos:column="22"/></operator><literal type="number" pos:line="69" pos:column="22">1L<pos:position pos:line="69" pos:column="24"/></literal></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25"> <block pos:line="69" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">int<pos:position pos:line="70" pos:column="12"/></name></type> <name pos:line="70" pos:column="13">itimeout<pos:position pos:line="70" pos:column="21"/></name> <init pos:line="70" pos:column="22">= <expr><ternary><condition><expr><operator pos:line="70" pos:column="24">(<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="25">timeout<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">&gt;<pos:position pos:line="70" pos:column="37"/></operator> <operator pos:line="70" pos:column="35">(<pos:position pos:line="70" pos:column="36"/></operator><name pos:line="70" pos:column="36">long<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">)<pos:position pos:line="70" pos:column="41"/></operator><name pos:line="70" pos:column="41">INT_MAX<pos:position pos:line="70" pos:column="48"/></name><operator pos:line="70" pos:column="48">)<pos:position pos:line="70" pos:column="49"/></operator></expr> ?<pos:position pos:line="70" pos:column="51"/></condition><then pos:line="70" pos:column="51"> <expr><name pos:line="70" pos:column="52">INT_MAX<pos:position pos:line="70" pos:column="59"/></name></expr> <pos:position pos:line="70" pos:column="60"/></then><else pos:line="70" pos:column="60">: <expr><operator pos:line="70" pos:column="62">(<pos:position pos:line="70" pos:column="63"/></operator><name pos:line="70" pos:column="63">int<pos:position pos:line="70" pos:column="66"/></name><operator pos:line="70" pos:column="66">)<pos:position pos:line="70" pos:column="67"/></operator><name pos:line="70" pos:column="67">timeout<pos:position pos:line="70" pos:column="74"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="70" pos:column="75"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">interval<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">.<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">tv_sec<pos:position pos:line="71" pos:column="24"/></name></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <name pos:line="71" pos:column="27">itimeout<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">/<pos:position pos:line="71" pos:column="36"/></operator><literal type="number" pos:line="71" pos:column="36">1000<pos:position pos:line="71" pos:column="40"/></literal></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">interval<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">tv_usec<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <operator pos:line="72" pos:column="28">(<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">itimeout<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">%<pos:position pos:line="72" pos:column="38"/></operator><literal type="number" pos:line="72" pos:column="38">1000<pos:position pos:line="72" pos:column="42"/></literal><operator pos:line="72" pos:column="42">)<pos:position pos:line="72" pos:column="43"/></operator><operator pos:line="72" pos:column="43">*<pos:position pos:line="72" pos:column="44"/></operator><literal type="number" pos:line="72" pos:column="44">1000<pos:position pos:line="72" pos:column="48"/></literal></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <else pos:line="74" pos:column="7">else <block pos:line="74" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">interval<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">tv_sec<pos:position pos:line="75" pos:column="24"/></name></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="27">TEST_HANG_TIMEOUT<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">/<pos:position pos:line="75" pos:column="45"/></operator><literal type="number" pos:line="75" pos:column="45">1000<pos:position pos:line="75" pos:column="49"/></literal><operator pos:line="75" pos:column="49">+<pos:position pos:line="75" pos:column="50"/></operator><literal type="number" pos:line="75" pos:column="50">1<pos:position pos:line="75" pos:column="51"/></literal></expr>;<pos:position pos:line="75" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">interval<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">.<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">tv_usec<pos:position pos:line="76" pos:column="25"/></name></name> <operator pos:line="76" pos:column="26">=<pos:position pos:line="76" pos:column="27"/></operator> <literal type="number" pos:line="76" pos:column="28">0<pos:position pos:line="76" pos:column="29"/></literal></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="77" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="79" pos:column="7">select_test<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name pos:line="79" pos:column="19">maxfd<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">+<pos:position pos:line="79" pos:column="25"/></operator><literal type="number" pos:line="79" pos:column="25">1<pos:position pos:line="79" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="79" pos:column="28">&amp;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="29">fdread<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="37">&amp;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="38">fdwrite<pos:position pos:line="79" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="47">&amp;<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="48">fdexcep<pos:position pos:line="79" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="57">&amp;<pos:position pos:line="79" pos:column="62"/></operator><name pos:line="79" pos:column="58">interval<pos:position pos:line="79" pos:column="66"/></name></expr></argument>)<pos:position pos:line="79" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="68"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="81" pos:column="7">abort_on_test_timeout<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">()<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="84" pos:column="5">msg<pos:position pos:line="84" pos:column="8"/></name> <operator pos:line="84" pos:column="9">=<pos:position pos:line="84" pos:column="10"/></operator> <call><name pos:line="84" pos:column="11">curl_multi_info_read<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name pos:line="84" pos:column="32">multi<pos:position pos:line="84" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="39">&amp;<pos:position pos:line="84" pos:column="44"/></operator><name pos:line="84" pos:column="40">msgs_left<pos:position pos:line="84" pos:column="49"/></name></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="51"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><name pos:line="85" pos:column="8">msg<pos:position pos:line="85" pos:column="11"/></name></expr>)<pos:position pos:line="85" pos:column="12"/></condition><then pos:line="85" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="7">res<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <name><name pos:line="86" pos:column="13">msg<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">data<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">.<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="23">result<pos:position pos:line="86" pos:column="29"/></name></name></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">multi_remove_handle<pos:position pos:line="88" pos:column="24"/></name><argument_list pos:line="88" pos:column="24">(<argument><expr><name pos:line="88" pos:column="25">multi<pos:position pos:line="88" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="32">easy<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></for>

<label><name pos:line="91" pos:column="1">test_cleanup<pos:position pos:line="91" pos:column="13"/></name>:<pos:position pos:line="91" pos:column="14"/></label>

  <comment type="block" pos:line="93" pos:column="3">/* undocumented cleanup sequence - type UA */</comment>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">curl_multi_cleanup<pos:position pos:line="95" pos:column="21"/></name><argument_list pos:line="95" pos:column="21">(<argument><expr><name pos:line="95" pos:column="22">multi<pos:position pos:line="95" pos:column="27"/></name></expr></argument>)<pos:position pos:line="95" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">curl_easy_cleanup<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name pos:line="96" pos:column="21">easy<pos:position pos:line="96" pos:column="25"/></name></expr></argument>)<pos:position pos:line="96" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="97" pos:column="3">curl_global_cleanup<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">()<pos:position pos:line="97" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt>

  <return pos:line="99" pos:column="3">return <expr><name pos:line="99" pos:column="10">res<pos:position pos:line="99" pos:column="13"/></name></expr>;<pos:position pos:line="99" pos:column="14"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

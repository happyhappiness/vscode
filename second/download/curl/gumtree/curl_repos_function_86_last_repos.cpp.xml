<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_86_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">my_trace<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">CURL<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">handle<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">curl_infotype<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">type<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="3" pos:column="14">char<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">data<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="26">size_t<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">size<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="4" pos:column="14">void<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">userp<pos:position pos:line="4" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="26"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">timebuf<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">20<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">text<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">num<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><call><name pos:line="8" pos:column="13">hnd2num<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">handle<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="9" pos:column="3">static<pos:position pos:line="9" pos:column="9"/></specifier> <type><name pos:line="9" pos:column="10">time_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">epoch_offset<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="10" pos:column="3">static<pos:position pos:line="10" pos:column="9"/></specifier> <type><name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name></type>    <name pos:line="10" pos:column="17">known_offset<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">timeval<pos:position pos:line="11" pos:column="17"/></name></name></type> <name pos:line="11" pos:column="18">tv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">time_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">secs<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">tm<pos:position pos:line="13" pos:column="12"/></name></name> <modifier pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></modifier></type><name pos:line="13" pos:column="14">now<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">(<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">void<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">)<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">handle<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt> <comment type="block" pos:line="15" pos:column="17">/* prevent compiler warning */</comment>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">(<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">void<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">)<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">userp<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">gettimeofday<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><operator pos:line="18" pos:column="16">&amp;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="17">tv<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="21">NULL<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">known_offset<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">epoch_offset<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">time<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call> <operator pos:line="20" pos:column="31">-<pos:position pos:line="20" pos:column="32"/></operator> <name><name pos:line="20" pos:column="33">tv<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">tv_sec<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">known_offset<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="23" pos:column="3">secs<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <name pos:line="23" pos:column="10">epoch_offset<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">+<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">tv<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">tv_sec<pos:position pos:line="23" pos:column="34"/></name></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">now<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">localtime<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><operator pos:line="24" pos:column="19">&amp;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="20">secs<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>  <comment type="block" pos:line="24" pos:column="28">/* not thread safe but we don't care */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">timebuf<pos:position pos:line="25" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="21">sizeof<argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">timebuf<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">"%02d:%02d:%02d.%06ld"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="26" pos:column="12">now<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">tm_hour<pos:position pos:line="26" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="26">now<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">tm_min<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="39">now<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">tm_sec<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="52">(<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">long<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">)<pos:position pos:line="26" pos:column="58"/></operator><name><name pos:line="26" pos:column="58">tv<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">.<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">tv_usec<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>

  <switch pos:line="28" pos:column="3">switch<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">type<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition> <block pos:line="28" pos:column="16">{
  <case pos:line="29" pos:column="3">case <expr><name pos:line="29" pos:column="8">CURLINFO_TEXT<pos:position pos:line="29" pos:column="21"/></name></expr>:<pos:position pos:line="29" pos:column="22"/></case>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">fprintf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">stderr<pos:position pos:line="30" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="21">"%s [%d] Info: %s"<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">timebuf<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">num<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">data<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="31" pos:column="5">/* FALLTHROUGH */</comment>
  <default pos:line="32" pos:column="3">default:<pos:position pos:line="32" pos:column="11"/></default> <comment type="block" pos:line="32" pos:column="12">/* in case a new one is introduced to shock us */</comment>
    <return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return>

  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURLINFO_HEADER_OUT<pos:position pos:line="35" pos:column="27"/></name></expr>:<pos:position pos:line="35" pos:column="28"/></case>
    <expr_stmt><expr><name pos:line="36" pos:column="5">text<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <literal type="string" pos:line="36" pos:column="12">"=&gt; Send header"<pos:position pos:line="36" pos:column="31"/></literal></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">CURLINFO_DATA_OUT<pos:position pos:line="38" pos:column="25"/></name></expr>:<pos:position pos:line="38" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">text<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <literal type="string" pos:line="39" pos:column="12">"=&gt; Send data"<pos:position pos:line="39" pos:column="29"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  <case pos:line="41" pos:column="3">case <expr><name pos:line="41" pos:column="8">CURLINFO_SSL_DATA_OUT<pos:position pos:line="41" pos:column="29"/></name></expr>:<pos:position pos:line="41" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="42" pos:column="5">text<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <literal type="string" pos:line="42" pos:column="12">"=&gt; Send SSL data"<pos:position pos:line="42" pos:column="33"/></literal></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
    <break pos:line="43" pos:column="5">break;<pos:position pos:line="43" pos:column="11"/></break>
  <case pos:line="44" pos:column="3">case <expr><name pos:line="44" pos:column="8">CURLINFO_HEADER_IN<pos:position pos:line="44" pos:column="26"/></name></expr>:<pos:position pos:line="44" pos:column="27"/></case>
    <expr_stmt><expr><name pos:line="45" pos:column="5">text<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <literal type="string" pos:line="45" pos:column="12">"&lt;= Recv header"<pos:position pos:line="45" pos:column="31"/></literal></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
    <break pos:line="46" pos:column="5">break;<pos:position pos:line="46" pos:column="11"/></break>
  <case pos:line="47" pos:column="3">case <expr><name pos:line="47" pos:column="8">CURLINFO_DATA_IN<pos:position pos:line="47" pos:column="24"/></name></expr>:<pos:position pos:line="47" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="48" pos:column="5">text<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <literal type="string" pos:line="48" pos:column="12">"&lt;= Recv data"<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
    <break pos:line="49" pos:column="5">break;<pos:position pos:line="49" pos:column="11"/></break>
  <case pos:line="50" pos:column="3">case <expr><name pos:line="50" pos:column="8">CURLINFO_SSL_DATA_IN<pos:position pos:line="50" pos:column="28"/></name></expr>:<pos:position pos:line="50" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="51" pos:column="5">text<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <literal type="string" pos:line="51" pos:column="12">"&lt;= Recv SSL data"<pos:position pos:line="51" pos:column="33"/></literal></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
    <break pos:line="52" pos:column="5">break;<pos:position pos:line="52" pos:column="11"/></break>
  }<pos:position pos:line="53" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">dump<pos:position pos:line="55" pos:column="7"/></name><argument_list pos:line="55" pos:column="7">(<argument><expr><name pos:line="55" pos:column="8">text<pos:position pos:line="55" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="14">num<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="19">(<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">unsigned<pos:position pos:line="55" pos:column="28"/></name> <name pos:line="55" pos:column="29">char<pos:position pos:line="55" pos:column="33"/></name> <operator pos:line="55" pos:column="34">*<pos:position pos:line="55" pos:column="35"/></operator><operator pos:line="55" pos:column="35">)<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">data<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">size<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="48">1<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
  <return pos:line="56" pos:column="3">return <expr><literal type="number" pos:line="56" pos:column="10">0<pos:position pos:line="56" pos:column="11"/></literal></expr>;<pos:position pos:line="56" pos:column="12"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_269.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">getcontentlengthfunc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">size<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">nmemb<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">stream<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">len<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* _snscanf() is Win32 specific */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">r<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <call><name pos:line="7" pos:column="7">_snscanf<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">ptr<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">size<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">nmemb<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"Content-Length: %ld\n"<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="60">&amp;<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="61">len<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">r<pos:position pos:line="9" pos:column="8"/></name></expr>)<pos:position pos:line="9" pos:column="9"/></condition><then pos:line="9" pos:column="9"> <comment type="block" pos:line="9" pos:column="10">/* Microsoft: we don't read the specs */</comment>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">long<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">)<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">stream<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">len<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt></block></then></if>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">size<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">nmemb<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

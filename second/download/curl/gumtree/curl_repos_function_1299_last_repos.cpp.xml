<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1299_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_ntlm_wb<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">bool<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">proxy<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* point to the address of the pointer that holds the string to send to the
     server, which is for a plain host or for a HTTP proxy */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">allocuserpwd<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <comment type="block" pos:line="7" pos:column="3">/* point to the name and password for this */</comment>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">userp<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <comment type="block" pos:line="9" pos:column="3">/* point to the correct struct with this */</comment>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">ntlmdata<pos:position pos:line="10" pos:column="18"/></name></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ntlm<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">auth<pos:position pos:line="11" pos:column="14"/></name></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">authp<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">CURLcode<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">res<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><name pos:line="13" pos:column="18">CURLE_OK<pos:position pos:line="13" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">input<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">DEBUGASSERT<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">conn<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">DEBUGASSERT<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">conn<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">data<pos:position pos:line="17" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">proxy<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">allocuserpwd<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">&amp;<pos:position pos:line="20" pos:column="25"/></operator><name><name pos:line="20" pos:column="21">conn<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">allocptr<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">proxyuserpwd<pos:position pos:line="20" pos:column="48"/></name></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">userp<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">conn<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">http_proxy<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">user<pos:position pos:line="21" pos:column="34"/></name></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">ntlm<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">&amp;<pos:position pos:line="22" pos:column="17"/></operator><name><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">proxyntlm<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">authp<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">&amp;<pos:position pos:line="23" pos:column="18"/></operator><name><name pos:line="23" pos:column="14">conn<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">data<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">state<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">authproxy<pos:position pos:line="23" pos:column="41"/></name></name></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then>
  <else pos:line="25" pos:column="3">else <block pos:line="25" pos:column="8">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">allocuserpwd<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name><name pos:line="26" pos:column="21">conn<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">allocptr<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">userpwd<pos:position pos:line="26" pos:column="43"/></name></name></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">userp<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name><name pos:line="27" pos:column="13">conn<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">user<pos:position pos:line="27" pos:column="23"/></name></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">ntlm<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">&amp;<pos:position pos:line="28" pos:column="17"/></operator><name><name pos:line="28" pos:column="13">conn<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">ntlm<pos:position pos:line="28" pos:column="23"/></name></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">authp<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <operator pos:line="29" pos:column="13">&amp;<pos:position pos:line="29" pos:column="18"/></operator><name><name pos:line="29" pos:column="14">conn<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">data<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">state<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">authhost<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">authp<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">done<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">FALSE<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* not set means empty */</comment>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">!<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">userp<pos:position pos:line="34" pos:column="12"/></name></expr>)<pos:position pos:line="34" pos:column="13"/></condition><then pos:line="34" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">userp<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <literal type="string" pos:line="35" pos:column="13">""<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt></block></then></if>

  <switch pos:line="37" pos:column="3">switch<condition pos:line="37" pos:column="9">(<expr><name><name pos:line="37" pos:column="10">ntlm<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">state<pos:position pos:line="37" pos:column="21"/></name></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition> <block pos:line="37" pos:column="23">{
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">NTLMSTATE_TYPE1<pos:position pos:line="38" pos:column="23"/></name></expr>:<pos:position pos:line="38" pos:column="24"/></case>
  <default pos:line="39" pos:column="3">default:<pos:position pos:line="39" pos:column="11"/></default>
    <comment type="block" pos:line="40" pos:column="5">/* Use Samba's 'winbind' daemon to support NTLM authentication,
     * by delegating the NTLM challenge/response protocal to a helper
     * in ntlm_auth.
     * http://devel.squid-cache.org/ntlm/squid_helper_protocol.html
     * https://www.samba.org/samba/docs/man/manpages-3/winbindd.8.html
     * https://www.samba.org/samba/docs/man/manpages-3/ntlm_auth.1.html
     * Preprocessor symbol 'NTLM_WB_ENABLED' is defined when this
     * feature is enabled and 'NTLM_WB_FILE' symbol holds absolute
     * filename of ntlm_auth helper.
     * If NTLM authentication using winbind fails, go back to original
     * request handling process.
     */</comment>
    <comment type="block" pos:line="52" pos:column="5">/* Create communication with ntlm_auth */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">res<pos:position pos:line="53" pos:column="8"/></name> <operator pos:line="53" pos:column="9">=<pos:position pos:line="53" pos:column="10"/></operator> <call><name pos:line="53" pos:column="11">ntlm_wb_init<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">conn<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">userp<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">res<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">res<pos:position pos:line="55" pos:column="17"/></name></expr>;<pos:position pos:line="55" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="56" pos:column="5">res<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <call><name pos:line="56" pos:column="11">ntlm_wb_response<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">conn<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="34">"YR\n"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="42">ntlm<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">-&gt;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="48">state<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">res<pos:position pos:line="57" pos:column="11"/></name></expr>)<pos:position pos:line="57" pos:column="12"/></condition><then pos:line="57" pos:column="12">
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">res<pos:position pos:line="58" pos:column="17"/></name></expr>;<pos:position pos:line="58" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><operator pos:line="60" pos:column="10">*<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">allocuserpwd<pos:position pos:line="60" pos:column="23"/></name></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">allocuserpwd<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <call><name pos:line="61" pos:column="21">aprintf<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><literal type="string" pos:line="61" pos:column="29">"%sAuthorization: %s\r\n"<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="62" pos:column="29">proxy<pos:position pos:line="62" pos:column="34"/></name></expr> ?<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36"> <expr><literal type="string" pos:line="62" pos:column="37">"Proxy-"<pos:position pos:line="62" pos:column="45"/></literal></expr> <pos:position pos:line="62" pos:column="46"/></then><else pos:line="62" pos:column="46">: <expr><literal type="string" pos:line="62" pos:column="48">""<pos:position pos:line="62" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><name><name pos:line="63" pos:column="29">conn<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">-&gt;<pos:position pos:line="63" pos:column="38"/></operator><name pos:line="63" pos:column="35">response_header<pos:position pos:line="63" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">DEBUG_OUT<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><call><name pos:line="64" pos:column="15">fprintf<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">stderr<pos:position pos:line="64" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="31">"**** Header %s\n "<pos:position pos:line="64" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="52">*<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="53">allocuserpwd<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">free<pos:position pos:line="65" pos:column="9"/></name><argument_list pos:line="65" pos:column="9">(<argument><expr><name><name pos:line="65" pos:column="10">conn<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">response_header<pos:position pos:line="65" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">conn<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">-&gt;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="11">response_header<pos:position pos:line="66" pos:column="26"/></name></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <name pos:line="66" pos:column="29">NULL<pos:position pos:line="66" pos:column="33"/></name></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    <break pos:line="67" pos:column="5">break;<pos:position pos:line="67" pos:column="11"/></break>
  <case pos:line="68" pos:column="3">case <expr><name pos:line="68" pos:column="8">NTLMSTATE_TYPE2<pos:position pos:line="68" pos:column="23"/></name></expr>:<pos:position pos:line="68" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="69" pos:column="5">input<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <call><name pos:line="69" pos:column="13">aprintf<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><literal type="string" pos:line="69" pos:column="21">"TT %s\n"<pos:position pos:line="69" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="32">conn<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">challenge_header<pos:position pos:line="69" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="56"/></expr_stmt>
    <if pos:line="70" pos:column="5">if<condition pos:line="70" pos:column="7">(<expr><operator pos:line="70" pos:column="8">!<pos:position pos:line="70" pos:column="9"/></operator><name pos:line="70" pos:column="9">input<pos:position pos:line="70" pos:column="14"/></name></expr>)<pos:position pos:line="70" pos:column="15"/></condition><then pos:line="70" pos:column="15">
      <block type="pseudo"><return pos:line="71" pos:column="7">return <expr><name pos:line="71" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="71" pos:column="33"/></name></expr>;<pos:position pos:line="71" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="72" pos:column="5">res<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">ntlm_wb_response<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">conn<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">input<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="41">ntlm<pos:position pos:line="72" pos:column="45"/></name><operator pos:line="72" pos:column="45">-&gt;<pos:position pos:line="72" pos:column="50"/></operator><name pos:line="72" pos:column="47">state<pos:position pos:line="72" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">free<pos:position pos:line="73" pos:column="9"/></name><argument_list pos:line="73" pos:column="9">(<argument><expr><name pos:line="73" pos:column="10">input<pos:position pos:line="73" pos:column="15"/></name></expr></argument>)<pos:position pos:line="73" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">input<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <name pos:line="74" pos:column="13">NULL<pos:position pos:line="74" pos:column="17"/></name></expr>;<pos:position pos:line="74" pos:column="18"/></expr_stmt>
    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><name pos:line="75" pos:column="8">res<pos:position pos:line="75" pos:column="11"/></name></expr>)<pos:position pos:line="75" pos:column="12"/></condition><then pos:line="75" pos:column="12">
      <block type="pseudo"><return pos:line="76" pos:column="7">return <expr><name pos:line="76" pos:column="14">res<pos:position pos:line="76" pos:column="17"/></name></expr>;<pos:position pos:line="76" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">free<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><operator pos:line="78" pos:column="10">*<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">allocuserpwd<pos:position pos:line="78" pos:column="23"/></name></expr></argument>)<pos:position pos:line="78" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="79" pos:column="5">*<pos:position pos:line="79" pos:column="6"/></operator><name pos:line="79" pos:column="6">allocuserpwd<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <call><name pos:line="79" pos:column="21">aprintf<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><literal type="string" pos:line="79" pos:column="29">"%sAuthorization: %s\r\n"<pos:position pos:line="79" pos:column="54"/></literal></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="80" pos:column="29">proxy<pos:position pos:line="80" pos:column="34"/></name></expr> ?<pos:position pos:line="80" pos:column="36"/></condition><then pos:line="80" pos:column="36"> <expr><literal type="string" pos:line="80" pos:column="37">"Proxy-"<pos:position pos:line="80" pos:column="45"/></literal></expr> <pos:position pos:line="80" pos:column="46"/></then><else pos:line="80" pos:column="46">: <expr><literal type="string" pos:line="80" pos:column="48">""<pos:position pos:line="80" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><name><name pos:line="81" pos:column="29">conn<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">response_header<pos:position pos:line="81" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">DEBUG_OUT<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">(<argument><expr><call><name pos:line="82" pos:column="15">fprintf<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name pos:line="82" pos:column="23">stderr<pos:position pos:line="82" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="31">"**** %s\n "<pos:position pos:line="82" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="45">*<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="46">allocuserpwd<pos:position pos:line="82" pos:column="58"/></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">ntlm<pos:position pos:line="83" pos:column="9"/></name><operator pos:line="83" pos:column="9">-&gt;<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="11">state<pos:position pos:line="83" pos:column="16"/></name></name> <operator pos:line="83" pos:column="17">=<pos:position pos:line="83" pos:column="18"/></operator> <name pos:line="83" pos:column="19">NTLMSTATE_TYPE3<pos:position pos:line="83" pos:column="34"/></name></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt> <comment type="block" pos:line="83" pos:column="36">/* we sent a type-3 */</comment>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">authp<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">-&gt;<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="12">done<pos:position pos:line="84" pos:column="16"/></name></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="19">TRUE<pos:position pos:line="84" pos:column="23"/></name></expr>;<pos:position pos:line="84" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">Curl_ntlm_wb_cleanup<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">conn<pos:position pos:line="85" pos:column="30"/></name></expr></argument>)<pos:position pos:line="85" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="32"/></expr_stmt>
    <break pos:line="86" pos:column="5">break;<pos:position pos:line="86" pos:column="11"/></break>
  <case pos:line="87" pos:column="3">case <expr><name pos:line="87" pos:column="8">NTLMSTATE_TYPE3<pos:position pos:line="87" pos:column="23"/></name></expr>:<pos:position pos:line="87" pos:column="24"/></case>
    <comment type="block" pos:line="88" pos:column="5">/* connection is already authenticated,
     * don't send a header in future requests */</comment>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">free<pos:position pos:line="90" pos:column="9"/></name><argument_list pos:line="90" pos:column="9">(<argument><expr><operator pos:line="90" pos:column="10">*<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">allocuserpwd<pos:position pos:line="90" pos:column="23"/></name></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="91" pos:column="5">*<pos:position pos:line="91" pos:column="6"/></operator><name pos:line="91" pos:column="6">allocuserpwd<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">=<pos:position pos:line="91" pos:column="20"/></operator> <name pos:line="91" pos:column="21">NULL<pos:position pos:line="91" pos:column="25"/></name></expr>;<pos:position pos:line="91" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">authp<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">done<pos:position pos:line="92" pos:column="16"/></name></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <name pos:line="92" pos:column="19">TRUE<pos:position pos:line="92" pos:column="23"/></name></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt>
    <break pos:line="93" pos:column="5">break;<pos:position pos:line="93" pos:column="11"/></break>
  }<pos:position pos:line="94" pos:column="4"/></block></switch>

  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">CURLE_OK<pos:position pos:line="96" pos:column="18"/></name></expr>;<pos:position pos:line="96" pos:column="19"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

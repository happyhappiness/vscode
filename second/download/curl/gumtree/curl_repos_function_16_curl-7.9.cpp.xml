<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_16_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">write_data<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">ptr<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">size_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">size<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">nmemb<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">stream<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">written<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">=<pos:position pos:line="3" pos:column="12"/></operator> <call><name pos:line="3" pos:column="13">fwrite<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">ptr<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="25">size<pos:position pos:line="3" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="31">nmemb<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">FILE<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">stream<pos:position pos:line="3" pos:column="52"/></name></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="54"/></expr_stmt>
  <return pos:line="4" pos:column="3">return <expr><name pos:line="4" pos:column="10">written<pos:position pos:line="4" pos:column="17"/></name></expr>;<pos:position pos:line="4" pos:column="18"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

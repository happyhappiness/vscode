<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_710_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tld_check_name<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">SessionHandle<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">data<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">ace_hostname<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">err_pos<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">uc_name<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
<cpp:ifndef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifndef<pos:position pos:line="7" pos:column="8"/></cpp:directive> <name pos:line="7" pos:column="9">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="7" pos:column="37"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">tld_errmsg<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator><literal type="string" pos:line="8" pos:column="30">"&lt;no msg&gt;"<pos:position pos:line="8" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="13" pos:column="3">/* Convert (and downcase) ACE-name back into locale's character set */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">rc<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">idna_to_unicode_lzlz<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">ace_hostname<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="44">uc_name<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="53">0<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">rc<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">!=<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">IDNA_SUCCESS<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">FALSE<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">rc<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <call><name pos:line="18" pos:column="8">tld_check_lz<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">uc_name<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="31">err_pos<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">NULL<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="19" pos:column="37"/></name></cpp:ifndef>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAVE_TLD_STRERROR<pos:position pos:line="20" pos:column="25"/></name></cpp:ifdef>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">rc<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">!=<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">TLD_SUCCESS<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">tld_errmsg<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">char<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator><call><name pos:line="22" pos:column="26">tld_strerror<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><operator pos:line="22" pos:column="39">(<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">Tld_rc<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">rc<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">rc<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">==<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">TLD_INVALID<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">infof<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="17">"WARNING: %s; pos %u = `%c'/0x%02X\n"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>,
          <argument><expr><name pos:line="26" pos:column="11">tld_errmsg<pos:position pos:line="26" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="23">err_pos<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="32">uc_name<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><name pos:line="26" pos:column="40">err_pos<pos:position pos:line="26" pos:column="47"/></name></expr>]<pos:position pos:line="26" pos:column="48"/></index></name></expr></argument>,
          <argument><expr><name><name pos:line="27" pos:column="11">uc_name<pos:position pos:line="27" pos:column="18"/></name><index pos:line="27" pos:column="18">[<expr><name pos:line="27" pos:column="19">err_pos<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name> <operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="30">255<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt></block></then>
  <elseif pos:line="28" pos:column="3">else <if pos:line="28" pos:column="8">if<condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">rc<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">TLD_SUCCESS<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">infof<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">data<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="17">"WARNING: TLD check for %s failed; %s\n"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>,
          <argument><expr><name pos:line="30" pos:column="11">uc_name<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">tld_errmsg<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="31" pos:column="8">/* CURL_DISABLE_VERBOSE_STRINGS */</comment>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name pos:line="32" pos:column="6">uc_name<pos:position pos:line="32" pos:column="13"/></name></expr>)<pos:position pos:line="32" pos:column="14"/></condition><then pos:line="32" pos:column="14">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="6">idn_free<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">uc_name<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><call pos:line="34" pos:column="10">(<name pos:line="34" pos:column="11">bool<pos:position pos:line="34" pos:column="15"/></name>)<argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">rc<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">==<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">TLD_SUCCESS<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

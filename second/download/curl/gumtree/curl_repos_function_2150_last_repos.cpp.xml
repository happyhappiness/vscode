<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2150_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_pipeline_server_blacklisted<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">Curl_easy<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">handle<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">server_name<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name><name pos:line="4" pos:column="6">handle<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">multi<pos:position pos:line="4" pos:column="19"/></name></name> <operator pos:line="4" pos:column="20">&amp;&amp;<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="23">server_name<pos:position pos:line="4" pos:column="34"/></name></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35"> <block pos:line="4" pos:column="36">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">curl_llist<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">list<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">=
      <expr><call><name pos:line="6" pos:column="7">Curl_multi_pipelining_server_bl<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">handle<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">multi<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">curl_llist_element<pos:position pos:line="8" pos:column="30"/></name></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">e<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name><name pos:line="8" pos:column="36">list<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">head<pos:position pos:line="8" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
    <while pos:line="9" pos:column="5">while<condition pos:line="9" pos:column="10">(<expr><name pos:line="9" pos:column="11">e<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition> <block pos:line="9" pos:column="14">{
      <decl_stmt><decl><type><name><name pos:line="10" pos:column="7">struct<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">blacklist_node<pos:position pos:line="10" pos:column="28"/></name></name> <modifier pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></modifier></type><name pos:line="10" pos:column="30">bl<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><operator pos:line="10" pos:column="35">(<pos:position pos:line="10" pos:column="36"/></operator>struct <name pos:line="10" pos:column="43">blacklist_node<pos:position pos:line="10" pos:column="57"/></name> <operator pos:line="10" pos:column="58">*<pos:position pos:line="10" pos:column="59"/></operator><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">e<pos:position pos:line="10" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">(<expr><call><name pos:line="11" pos:column="10">strncasecompare<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name><name pos:line="11" pos:column="26">bl<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">server_name<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">server_name<pos:position pos:line="11" pos:column="54"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="12" pos:column="26">strlen<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">bl<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">server_name<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block pos:line="12" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">infof<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">handle<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"Server %s is blacklisted\n"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">server_name<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">TRUE<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
      }<pos:position pos:line="15" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="16" pos:column="7">e<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <name><name pos:line="16" pos:column="11">e<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">next<pos:position pos:line="16" pos:column="18"/></name></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">DEBUGF<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><call><name pos:line="19" pos:column="12">infof<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">handle<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"Server %s is not blacklisted\n"<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">server_name<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">FALSE<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

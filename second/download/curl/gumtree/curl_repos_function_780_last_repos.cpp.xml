<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_780_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fuzz_get_next_tlv<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FUZZ_DATA<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fuzz<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">TLV<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">tlv<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Advance the cursor by the full length of the previous TLV. */</comment>
  <expr_stmt><expr><name><name pos:line="5" pos:column="3">fuzz<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">state<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">data_pos<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">+=<pos:position pos:line="5" pos:column="26"/></operator> <sizeof pos:line="5" pos:column="27">sizeof<argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">TLV_RAW<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></sizeof> <operator pos:line="5" pos:column="43">+<pos:position pos:line="5" pos:column="44"/></operator> <name><name pos:line="5" pos:column="45">tlv<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">length<pos:position pos:line="5" pos:column="56"/></name></name></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Work out if there's a TLV's worth of data to read */</comment>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">fuzz<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">state<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">data_pos<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">+<pos:position pos:line="8" pos:column="28"/></operator> <sizeof pos:line="8" pos:column="29">sizeof<argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">TLV_RAW<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></sizeof> <operator pos:line="8" pos:column="45">&gt;<pos:position pos:line="8" pos:column="49"/></operator> <name><name pos:line="8" pos:column="47">fuzz<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">state<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">.<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">data_len<pos:position pos:line="8" pos:column="67"/></name></name></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68"> <block pos:line="8" pos:column="69">{
    <comment type="block" pos:line="9" pos:column="5">/* No more TLVs to parse */</comment>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">TLV_RC_NO_MORE_TLVS<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><call><name pos:line="13" pos:column="10">fuzz_get_tlv_comn<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">fuzz<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">tlv<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

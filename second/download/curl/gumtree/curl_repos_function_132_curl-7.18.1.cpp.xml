<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_132_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">getcontentlengthfunc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">size<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">nmemb<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">stream<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list> <block pos:line="1" pos:column="81">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">r<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">long<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">len<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* _snscanf() is Win32 specific */</comment>
	<expr_stmt><expr><name pos:line="6" pos:column="9">r<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">_snscanf<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">ptr<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">size<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">nmemb<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="41">"Content-Length: %ld\n"<pos:position pos:line="6" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="66">&amp;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="67">len<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">r<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <comment type="block" pos:line="8" pos:column="16">/* Microsoft: we don't read the specs */</comment>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">long<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">stream<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">=<pos:position pos:line="9" pos:column="37"/></operator> <name pos:line="9" pos:column="38">len<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if>

	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">size<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">nmemb<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_160_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Connect<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">SessionHandle<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                        <parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">connectdata<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">in_connect<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="3" pos:column="25">bool<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">allow_port<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list> <comment type="block" pos:line="3" pos:column="42">/* allow data-&gt;set.use_port ? */</comment>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">resumerange<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><literal type="number" pos:line="8" pos:column="20">40<pos:position pos:line="8" pos:column="22"/></literal></expr>]<pos:position pos:line="8" pos:column="23"/></index></name><init pos:line="8" pos:column="23">=<expr><literal type="string" pos:line="8" pos:column="24">""<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">connectdata<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">conn<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">connectdata<pos:position pos:line="10" pos:column="21"/></name></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">conn_temp<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">endbracket<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">urllen<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>

  <comment type="block" format="doxygen" pos:line="14" pos:column="3">/*************************************************************
   * Check input data
   *************************************************************/</comment>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name><name pos:line="18" pos:column="7">data<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">change<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">url<pos:position pos:line="18" pos:column="23"/></name></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* First, split up the current URL in parts so that we can use the
     parts for checking against the already present connections. In order
     to not have to modify everything at once, we allocate a temporary
     connection data struct and fill in for comparison purposes. */</comment>

  <expr_stmt><expr><name pos:line="26" pos:column="3">conn<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator>struct <name pos:line="26" pos:column="18">connectdata<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><operator pos:line="26" pos:column="31">)<pos:position pos:line="26" pos:column="32"/></operator><call><name pos:line="26" pos:column="32">malloc<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><sizeof pos:line="26" pos:column="39">sizeof<argument_list pos:line="26" pos:column="45">(<argument><expr pos:line="26" pos:column="46">struct <name pos:line="26" pos:column="53">connectdata<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">!<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">conn<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12"> <block pos:line="27" pos:column="13">{
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">in_connect<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">NULL<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt> <comment type="block" pos:line="28" pos:column="25">/* clear the pointer */</comment>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="31" pos:column="3">/* We must set the return variable as soon as possible, so that our
     parent can cleanup any possible allocs we may have done before
     any failure */</comment>
  <expr_stmt><expr><operator pos:line="34" pos:column="3">*<pos:position pos:line="34" pos:column="4"/></operator><name pos:line="34" pos:column="4">in_connect<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">conn<pos:position pos:line="34" pos:column="21"/></name></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="36" pos:column="3">/* we have to init the struct */</comment>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">memset<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name pos:line="37" pos:column="10">conn<pos:position pos:line="37" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="19">sizeof<argument_list pos:line="37" pos:column="25">(<argument><expr pos:line="37" pos:column="26">struct <name pos:line="37" pos:column="33">connectdata<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* and we setup a few fields in case we end up actually using this struct */</comment>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">conn<pos:position pos:line="40" pos:column="7"/></name><operator pos:line="40" pos:column="7">-&gt;<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="9">data<pos:position pos:line="40" pos:column="13"/></name></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">data<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>           <comment type="block" pos:line="40" pos:column="32">/* remember our daddy */</comment>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">conn<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">upload_bufsize<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">UPLOAD_BUFSIZE<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt> <comment type="block" pos:line="41" pos:column="42">/* default upload buffer size */</comment>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">conn<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">firstsocket<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <operator pos:line="42" pos:column="23">-<pos:position pos:line="42" pos:column="24"/></operator><literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>     <comment type="block" pos:line="42" pos:column="31">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">conn<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">secondarysocket<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <operator pos:line="43" pos:column="27">-<pos:position pos:line="43" pos:column="28"/></operator><literal type="number" pos:line="43" pos:column="28">1<pos:position pos:line="43" pos:column="29"/></literal></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt> <comment type="block" pos:line="43" pos:column="31">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">conn<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">connectindex<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <operator pos:line="44" pos:column="24">-<pos:position pos:line="44" pos:column="25"/></operator><literal type="number" pos:line="44" pos:column="25">1<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="44" pos:column="31">/* no index */</comment>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">conn<pos:position pos:line="45" pos:column="7"/></name><operator pos:line="45" pos:column="7">-&gt;<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="9">bits<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">.<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">httpproxy<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="45" pos:column="26">data<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">change<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">.<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">proxy<pos:position pos:line="45" pos:column="44"/></name></name></expr>?<pos:position pos:line="45" pos:column="45"/></condition><then><expr><name pos:line="45" pos:column="45">TRUE<pos:position pos:line="45" pos:column="49"/></name></expr></then><else pos:line="45" pos:column="49">:<expr><name pos:line="45" pos:column="50">FALSE<pos:position pos:line="45" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt> <comment type="block" pos:line="45" pos:column="57">/* proxy-or-not */</comment>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">conn<pos:position pos:line="46" pos:column="7"/></name><operator pos:line="46" pos:column="7">-&gt;<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="9">bits<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">use_range<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="46" pos:column="26">data<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">set<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">set_range<pos:position pos:line="46" pos:column="45"/></name></name></expr>?<pos:position pos:line="46" pos:column="46"/></condition><then><expr><name pos:line="46" pos:column="46">TRUE<pos:position pos:line="46" pos:column="50"/></name></expr></then><else pos:line="46" pos:column="50">:<expr><name pos:line="46" pos:column="51">FALSE<pos:position pos:line="46" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt> <comment type="block" pos:line="46" pos:column="58">/* range status */</comment>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">conn<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">range<pos:position pos:line="47" pos:column="14"/></name></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name><name pos:line="47" pos:column="17">data<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">set<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">set_range<pos:position pos:line="47" pos:column="36"/></name></name></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>               <comment type="block" pos:line="47" pos:column="52">/* clone the range setting */</comment>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">conn<pos:position pos:line="48" pos:column="7"/></name><operator pos:line="48" pos:column="7">-&gt;<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="9">resume_from<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <name><name pos:line="48" pos:column="23">data<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">set<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">set_resume_from<pos:position pos:line="48" pos:column="48"/></name></name></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>   <comment type="block" pos:line="48" pos:column="52">/* inherite resume_from */</comment>

  <comment type="block" pos:line="50" pos:column="3">/* Default protocol-independent behavior doesn't support persistant
     connections, so we set this to force-close. Protocols that support
     this need to set this to FALSE in their "curl_do" functions. */</comment>
  <expr_stmt><expr><name><name pos:line="53" pos:column="3">conn<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">bits<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">.<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">close<pos:position pos:line="53" pos:column="19"/></name></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <name pos:line="53" pos:column="22">TRUE<pos:position pos:line="53" pos:column="26"/></name></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt>
  
  <comment type="block" pos:line="55" pos:column="3">/* inherite initial knowledge from the data struct */</comment>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">conn<pos:position pos:line="56" pos:column="7"/></name><operator pos:line="56" pos:column="7">-&gt;<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="9">bits<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">.<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">user_passwd<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <ternary><condition><expr><name><name pos:line="56" pos:column="28">data<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">set<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">userpwd<pos:position pos:line="56" pos:column="45"/></name></name></expr>?<pos:position pos:line="56" pos:column="46"/></condition><then><expr><literal type="number" pos:line="56" pos:column="46">1<pos:position pos:line="56" pos:column="47"/></literal></expr></then><else pos:line="56" pos:column="47">:<expr><literal type="number" pos:line="56" pos:column="48">0<pos:position pos:line="56" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">conn<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">-&gt;<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="9">bits<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">.<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">proxy_user_passwd<pos:position pos:line="57" pos:column="31"/></name></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="57" pos:column="34">data<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">-&gt;<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="40">set<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">.<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="44">proxyuserpwd<pos:position pos:line="57" pos:column="56"/></name></name></expr>?<pos:position pos:line="57" pos:column="57"/></condition><then><expr><literal type="number" pos:line="57" pos:column="57">1<pos:position pos:line="57" pos:column="58"/></literal></expr></then><else pos:line="57" pos:column="58">:<expr><literal type="number" pos:line="57" pos:column="59">0<pos:position pos:line="57" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="59" pos:column="3">/* maxdownload must be -1 on init, as 0 is a valid value! */</comment>
  <expr_stmt><expr><name><name pos:line="60" pos:column="3">conn<pos:position pos:line="60" pos:column="7"/></name><operator pos:line="60" pos:column="7">-&gt;<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="9">maxdownload<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <operator pos:line="60" pos:column="23">-<pos:position pos:line="60" pos:column="24"/></operator><literal type="number" pos:line="60" pos:column="24">1<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>  <comment type="block" pos:line="60" pos:column="28">/* might have been used previously! */</comment>

  <comment type="block" pos:line="62" pos:column="3">/* Store creation time to help future close decision making */</comment>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">conn<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">created<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <call><name pos:line="63" pos:column="19">Curl_tvnow<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">()<pos:position pos:line="63" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>


  <comment type="block" format="doxygen" pos:line="66" pos:column="3">/***********************************************************
   * We need to allocate memory to store the path in. We get the size of the
   * full URL to be sure, and we need to make it at least 256 bytes since
   * other parts of the code will rely on this fact
   ***********************************************************/</comment>
<cpp:define pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">define<pos:position pos:line="71" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="71" pos:column="9">LEAST_PATH_ALLOC<pos:position pos:line="71" pos:column="25"/></name></cpp:macro> <cpp:value pos:line="71" pos:column="26">256<pos:position pos:line="71" pos:column="29"/></cpp:value></cpp:define>
  <expr_stmt><expr><name pos:line="72" pos:column="3">urllen<pos:position pos:line="72" pos:column="9"/></name><operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator><call><name pos:line="72" pos:column="10">strlen<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name><name pos:line="72" pos:column="17">data<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">change<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">.<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="30">url<pos:position pos:line="72" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><name pos:line="73" pos:column="6">urllen<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">&lt;<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="15">LEAST_PATH_ALLOC<pos:position pos:line="73" pos:column="31"/></name></expr>)<pos:position pos:line="73" pos:column="32"/></condition><then pos:line="73" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="5">urllen<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="12">LEAST_PATH_ALLOC<pos:position pos:line="74" pos:column="28"/></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt></block></then></if>
  
  <expr_stmt><expr><name><name pos:line="76" pos:column="3">conn<pos:position pos:line="76" pos:column="7"/></name><operator pos:line="76" pos:column="7">-&gt;<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="9">path<pos:position pos:line="76" pos:column="13"/></name></name><operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator><operator pos:line="76" pos:column="14">(<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">char<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">*<pos:position pos:line="76" pos:column="21"/></operator><operator pos:line="76" pos:column="21">)<pos:position pos:line="76" pos:column="22"/></operator><call><name pos:line="76" pos:column="22">malloc<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">urllen<pos:position pos:line="76" pos:column="35"/></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
  <if pos:line="77" pos:column="3">if<condition pos:line="77" pos:column="5">(<expr><name pos:line="77" pos:column="6">NULL<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">==<pos:position pos:line="77" pos:column="13"/></operator> <name><name pos:line="77" pos:column="14">conn<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">-&gt;<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="20">path<pos:position pos:line="77" pos:column="24"/></name></name></expr>)<pos:position pos:line="77" pos:column="25"/></condition><then pos:line="77" pos:column="25">
    <block type="pseudo"><return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="78" pos:column="31"/></name></expr>;<pos:position pos:line="78" pos:column="32"/></return></block></then></if> <comment type="block" pos:line="78" pos:column="33">/* really bad error */</comment>

  <comment type="block" format="doxygen" pos:line="80" pos:column="3">/*************************************************************
   * Parse the URL.
   *
   * We need to parse the url even when using the proxy, because we will need
   * the hostname and port in case we are trying to SSL connect through the
   * proxy -- and we don't know if we will need to use SSL until we parse the
   * url ...
   ************************************************************/</comment>
  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><operator pos:line="88" pos:column="6">(<pos:position pos:line="88" pos:column="7"/></operator><literal type="number" pos:line="88" pos:column="7">2<pos:position pos:line="88" pos:column="8"/></literal> <operator pos:line="88" pos:column="9">==<pos:position pos:line="88" pos:column="11"/></operator> <call><name pos:line="88" pos:column="12">sscanf<pos:position pos:line="88" pos:column="18"/></name><argument_list pos:line="88" pos:column="18">(<argument><expr><name><name pos:line="88" pos:column="19">data<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">-&gt;<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="25">change<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">.<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="32">url<pos:position pos:line="88" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="37">"%64[^:]://%[^\n]"<pos:position pos:line="88" pos:column="55"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="89" pos:column="19">conn<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">-&gt;<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="25">protostr<pos:position pos:line="89" pos:column="33"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="90" pos:column="19">conn<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">-&gt;<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="25">path<pos:position pos:line="90" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="30"/></argument_list></call><operator pos:line="90" pos:column="30">)<pos:position pos:line="90" pos:column="31"/></operator> <operator pos:line="90" pos:column="32">&amp;&amp;<pos:position pos:line="90" pos:column="42"/></operator> <call><name pos:line="90" pos:column="35">strequal<pos:position pos:line="90" pos:column="43"/></name><argument_list pos:line="90" pos:column="43">(<argument><expr><name><name pos:line="90" pos:column="44">conn<pos:position pos:line="90" pos:column="48"/></name><operator pos:line="90" pos:column="48">-&gt;<pos:position pos:line="90" pos:column="53"/></operator><name pos:line="90" pos:column="50">protostr<pos:position pos:line="90" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="60">"file"<pos:position pos:line="90" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="68"/></condition><then pos:line="90" pos:column="68"> <block pos:line="90" pos:column="69">{
    <comment type="block" pos:line="91" pos:column="5">/*
     * we deal with file://&lt;host&gt;/&lt;path&gt; differently since it supports no
     * hostname other than "localhost" and "127.0.0.1", which is unique among
     * the URL protocols specified in RFC 1738
     */</comment>
    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><name><name pos:line="96" pos:column="8">conn<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">-&gt;<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="14">path<pos:position pos:line="96" pos:column="18"/></name><index pos:line="96" pos:column="18">[<expr><literal type="number" pos:line="96" pos:column="19">0<pos:position pos:line="96" pos:column="20"/></literal></expr>]<pos:position pos:line="96" pos:column="21"/></index></name> <operator pos:line="96" pos:column="22">!=<pos:position pos:line="96" pos:column="24"/></operator> <literal type="char" pos:line="96" pos:column="25">'/'<pos:position pos:line="96" pos:column="28"/></literal></expr>)<pos:position pos:line="96" pos:column="29"/></condition><then pos:line="96" pos:column="29"> <block pos:line="96" pos:column="30">{
      <comment type="block" pos:line="97" pos:column="7">/* the URL included a host name, we ignore host names in file:// URLs
         as the standards don't define what to do with them */</comment>
      <decl_stmt><decl><type><name pos:line="99" pos:column="7">char<pos:position pos:line="99" pos:column="11"/></name> <modifier pos:line="99" pos:column="12">*<pos:position pos:line="99" pos:column="13"/></modifier></type><name pos:line="99" pos:column="13">ptr<pos:position pos:line="99" pos:column="16"/></name><init pos:line="99" pos:column="16">=<expr><call><name pos:line="99" pos:column="17">strchr<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name><name pos:line="99" pos:column="24">conn<pos:position pos:line="99" pos:column="28"/></name><operator pos:line="99" pos:column="28">-&gt;<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="30">path<pos:position pos:line="99" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="36">'/'<pos:position pos:line="99" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="99" pos:column="41"/></decl_stmt>
      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><name pos:line="100" pos:column="10">ptr<pos:position pos:line="100" pos:column="13"/></name></expr>)<pos:position pos:line="100" pos:column="14"/></condition><then pos:line="100" pos:column="14"> <block pos:line="100" pos:column="15">{
        <comment type="block" pos:line="101" pos:column="9">/* there was a slash present
           
           RFC1738 (section 3.1, page 5) says:
 
           The rest of the locator consists of data specific to the scheme,
           and is known as the "url-path". It supplies the details of how the
           specified resource can be accessed. Note that the "/" between the
           host (or port) and the url-path is NOT part of the url-path.
 
           As most agents use file://localhost/foo to get '/foo' although the
           slash preceeding foo is a separator and not a slash for the path,
           a URL as file://localhost//foo must be valid as well, to refer to
           the same file with an absolute path.
        */</comment>

        <if pos:line="116" pos:column="9">if<condition pos:line="116" pos:column="11">(<expr><name><name pos:line="116" pos:column="12">ptr<pos:position pos:line="116" pos:column="15"/></name><index pos:line="116" pos:column="15">[<expr><literal type="number" pos:line="116" pos:column="16">1<pos:position pos:line="116" pos:column="17"/></literal></expr>]<pos:position pos:line="116" pos:column="18"/></index></name> <operator pos:line="116" pos:column="19">&amp;&amp;<pos:position pos:line="116" pos:column="29"/></operator> <operator pos:line="116" pos:column="22">(<pos:position pos:line="116" pos:column="23"/></operator><literal type="char" pos:line="116" pos:column="23">'/'<pos:position pos:line="116" pos:column="26"/></literal> <operator pos:line="116" pos:column="27">==<pos:position pos:line="116" pos:column="29"/></operator> <name><name pos:line="116" pos:column="30">ptr<pos:position pos:line="116" pos:column="33"/></name><index pos:line="116" pos:column="33">[<expr><literal type="number" pos:line="116" pos:column="34">1<pos:position pos:line="116" pos:column="35"/></literal></expr>]<pos:position pos:line="116" pos:column="36"/></index></name><operator pos:line="116" pos:column="36">)<pos:position pos:line="116" pos:column="37"/></operator></expr>)<pos:position pos:line="116" pos:column="38"/></condition><then pos:line="116" pos:column="38">
          <comment type="block" pos:line="117" pos:column="11">/* if there was two slashes, we skip the first one as that is then
             used truly as a separator */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="11">ptr<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">++<pos:position pos:line="119" pos:column="16"/></operator></expr>;<pos:position pos:line="119" pos:column="17"/></expr_stmt></block></then></if> 
        
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">strcpy<pos:position pos:line="121" pos:column="15"/></name><argument_list pos:line="121" pos:column="15">(<argument><expr><name><name pos:line="121" pos:column="16">conn<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">-&gt;<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="22">path<pos:position pos:line="121" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="28">ptr<pos:position pos:line="121" pos:column="31"/></name></expr></argument>)<pos:position pos:line="121" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">strcpy<pos:position pos:line="125" pos:column="11"/></name><argument_list pos:line="125" pos:column="11">(<argument><expr><name><name pos:line="125" pos:column="12">conn<pos:position pos:line="125" pos:column="16"/></name><operator pos:line="125" pos:column="16">-&gt;<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="18">protostr<pos:position pos:line="125" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="28">"file"<pos:position pos:line="125" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt> <comment type="block" pos:line="125" pos:column="37">/* store protocol string lowercase */</comment>
  }<pos:position pos:line="126" pos:column="4"/></block></then>
  <else pos:line="127" pos:column="3">else <block pos:line="127" pos:column="8">{
    <comment type="block" pos:line="128" pos:column="5">/* Set default host and default path */</comment>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">strcpy<pos:position pos:line="129" pos:column="11"/></name><argument_list pos:line="129" pos:column="11">(<argument><expr><name><name pos:line="129" pos:column="12">conn<pos:position pos:line="129" pos:column="16"/></name><operator pos:line="129" pos:column="16">-&gt;<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="18">gname<pos:position pos:line="129" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="25">"curl.haxx.se"<pos:position pos:line="129" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">strcpy<pos:position pos:line="130" pos:column="11"/></name><argument_list pos:line="130" pos:column="11">(<argument><expr><name><name pos:line="130" pos:column="12">conn<pos:position pos:line="130" pos:column="16"/></name><operator pos:line="130" pos:column="16">-&gt;<pos:position pos:line="130" pos:column="21"/></operator><name pos:line="130" pos:column="18">path<pos:position pos:line="130" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="24">"/"<pos:position pos:line="130" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="29"/></expr_stmt>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><literal type="number" pos:line="132" pos:column="9">2<pos:position pos:line="132" pos:column="10"/></literal> <operator pos:line="132" pos:column="11">&gt;<pos:position pos:line="132" pos:column="15"/></operator> <call><name pos:line="132" pos:column="13">sscanf<pos:position pos:line="132" pos:column="19"/></name><argument_list pos:line="132" pos:column="19">(<argument><expr><name><name pos:line="132" pos:column="20">data<pos:position pos:line="132" pos:column="24"/></name><operator pos:line="132" pos:column="24">-&gt;<pos:position pos:line="132" pos:column="29"/></operator><name pos:line="132" pos:column="26">change<pos:position pos:line="132" pos:column="32"/></name><operator pos:line="132" pos:column="32">.<pos:position pos:line="132" pos:column="33"/></operator><name pos:line="132" pos:column="33">url<pos:position pos:line="132" pos:column="36"/></name></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="133" pos:column="20">"%64[^\n:]://%256[^\n/]%[^\n]"<pos:position pos:line="133" pos:column="50"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="134" pos:column="20">conn<pos:position pos:line="134" pos:column="24"/></name><operator pos:line="134" pos:column="24">-&gt;<pos:position pos:line="134" pos:column="29"/></operator><name pos:line="134" pos:column="26">protostr<pos:position pos:line="134" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="36">conn<pos:position pos:line="134" pos:column="40"/></name><operator pos:line="134" pos:column="40">-&gt;<pos:position pos:line="134" pos:column="45"/></operator><name pos:line="134" pos:column="42">gname<pos:position pos:line="134" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="49">conn<pos:position pos:line="134" pos:column="53"/></name><operator pos:line="134" pos:column="53">-&gt;<pos:position pos:line="134" pos:column="58"/></operator><name pos:line="134" pos:column="55">path<pos:position pos:line="134" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="61"/></condition><then pos:line="134" pos:column="61"> <block pos:line="134" pos:column="62">{
      
      <comment type="block" pos:line="136" pos:column="7">/*
       * The URL was badly formatted, let's try the browser-style _without_
       * protocol specified like 'http://'.
       */</comment>
      <if pos:line="140" pos:column="7">if<condition pos:line="140" pos:column="9">(<expr><operator pos:line="140" pos:column="10">(<pos:position pos:line="140" pos:column="11"/></operator><literal type="number" pos:line="140" pos:column="11">1<pos:position pos:line="140" pos:column="12"/></literal> <operator pos:line="140" pos:column="13">&gt;<pos:position pos:line="140" pos:column="17"/></operator> <call><name pos:line="140" pos:column="15">sscanf<pos:position pos:line="140" pos:column="21"/></name><argument_list pos:line="140" pos:column="21">(<argument><expr><name><name pos:line="140" pos:column="22">data<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">-&gt;<pos:position pos:line="140" pos:column="31"/></operator><name pos:line="140" pos:column="28">change<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">.<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="35">url<pos:position pos:line="140" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="40">"%256[^\n/]%[^\n]"<pos:position pos:line="140" pos:column="58"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="141" pos:column="22">conn<pos:position pos:line="141" pos:column="26"/></name><operator pos:line="141" pos:column="26">-&gt;<pos:position pos:line="141" pos:column="31"/></operator><name pos:line="141" pos:column="28">gname<pos:position pos:line="141" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="35">conn<pos:position pos:line="141" pos:column="39"/></name><operator pos:line="141" pos:column="39">-&gt;<pos:position pos:line="141" pos:column="44"/></operator><name pos:line="141" pos:column="41">path<pos:position pos:line="141" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="46"/></argument_list></call><operator pos:line="141" pos:column="46">)<pos:position pos:line="141" pos:column="47"/></operator></expr> )<pos:position pos:line="141" pos:column="49"/></condition><then pos:line="141" pos:column="49"> <block pos:line="141" pos:column="50">{
        <comment type="block" pos:line="142" pos:column="9">/*
         * We couldn't even get this format.
         */</comment>
        <expr_stmt><expr><call><name pos:line="145" pos:column="9">failf<pos:position pos:line="145" pos:column="14"/></name><argument_list pos:line="145" pos:column="14">(<argument><expr><name pos:line="145" pos:column="15">data<pos:position pos:line="145" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="21">"&lt;url&gt; malformed"<pos:position pos:line="145" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="40"/></expr_stmt>
        <return pos:line="146" pos:column="9">return <expr><name pos:line="146" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="146" pos:column="35"/></name></expr>;<pos:position pos:line="146" pos:column="36"/></return>
      }<pos:position pos:line="147" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="149" pos:column="7">/*
       * Since there was no protocol part specified, we guess what protocol it
       * is based on the first letters of the server name.
       */</comment>

      <if pos:line="154" pos:column="7">if<condition pos:line="154" pos:column="9">(<expr><call><name pos:line="154" pos:column="10">strnequal<pos:position pos:line="154" pos:column="19"/></name><argument_list pos:line="154" pos:column="19">(<argument><expr><name><name pos:line="154" pos:column="20">conn<pos:position pos:line="154" pos:column="24"/></name><operator pos:line="154" pos:column="24">-&gt;<pos:position pos:line="154" pos:column="29"/></operator><name pos:line="154" pos:column="26">gname<pos:position pos:line="154" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="33">"FTP"<pos:position pos:line="154" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="40">3<pos:position pos:line="154" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="43"/></condition><then pos:line="154" pos:column="43"> <block pos:line="154" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="155" pos:column="9">strcpy<pos:position pos:line="155" pos:column="15"/></name><argument_list pos:line="155" pos:column="15">(<argument><expr><name><name pos:line="155" pos:column="16">conn<pos:position pos:line="155" pos:column="20"/></name><operator pos:line="155" pos:column="20">-&gt;<pos:position pos:line="155" pos:column="25"/></operator><name pos:line="155" pos:column="22">protostr<pos:position pos:line="155" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="32">"ftp"<pos:position pos:line="155" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="156" pos:column="8"/></block></then>
      <elseif pos:line="157" pos:column="7">else <if pos:line="157" pos:column="12">if<condition pos:line="157" pos:column="14">(<expr><call><name pos:line="157" pos:column="15">strnequal<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name><name pos:line="157" pos:column="25">conn<pos:position pos:line="157" pos:column="29"/></name><operator pos:line="157" pos:column="29">-&gt;<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="31">gname<pos:position pos:line="157" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="38">"GOPHER"<pos:position pos:line="157" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="48">6<pos:position pos:line="157" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="157" pos:column="51"/></condition><then pos:line="157" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="9">strcpy<pos:position pos:line="158" pos:column="15"/></name><argument_list pos:line="158" pos:column="15">(<argument><expr><name><name pos:line="158" pos:column="16">conn<pos:position pos:line="158" pos:column="20"/></name><operator pos:line="158" pos:column="20">-&gt;<pos:position pos:line="158" pos:column="25"/></operator><name pos:line="158" pos:column="22">protostr<pos:position pos:line="158" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="32">"gopher"<pos:position pos:line="158" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="42"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">ifdef<pos:position pos:line="159" pos:column="7"/></cpp:directive> <name pos:line="159" pos:column="8">USE_SSLEAY<pos:position pos:line="159" pos:column="18"/></name></cpp:ifdef>
      <elseif pos:line="160" pos:column="7">else <if pos:line="160" pos:column="12">if<condition pos:line="160" pos:column="14">(<expr><call><name pos:line="160" pos:column="15">strnequal<pos:position pos:line="160" pos:column="24"/></name><argument_list pos:line="160" pos:column="24">(<argument><expr><name><name pos:line="160" pos:column="25">conn<pos:position pos:line="160" pos:column="29"/></name><operator pos:line="160" pos:column="29">-&gt;<pos:position pos:line="160" pos:column="34"/></operator><name pos:line="160" pos:column="31">gname<pos:position pos:line="160" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="38">"HTTPS"<pos:position pos:line="160" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="47">5<pos:position pos:line="160" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="160" pos:column="50"/></condition><then pos:line="160" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="9">strcpy<pos:position pos:line="161" pos:column="15"/></name><argument_list pos:line="161" pos:column="15">(<argument><expr><name><name pos:line="161" pos:column="16">conn<pos:position pos:line="161" pos:column="20"/></name><operator pos:line="161" pos:column="20">-&gt;<pos:position pos:line="161" pos:column="25"/></operator><name pos:line="161" pos:column="22">protostr<pos:position pos:line="161" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="32">"https"<pos:position pos:line="161" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="41"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="162" pos:column="7">else <if pos:line="162" pos:column="12">if<condition pos:line="162" pos:column="14">(<expr><call><name pos:line="162" pos:column="15">strnequal<pos:position pos:line="162" pos:column="24"/></name><argument_list pos:line="162" pos:column="24">(<argument><expr><name><name pos:line="162" pos:column="25">conn<pos:position pos:line="162" pos:column="29"/></name><operator pos:line="162" pos:column="29">-&gt;<pos:position pos:line="162" pos:column="34"/></operator><name pos:line="162" pos:column="31">gname<pos:position pos:line="162" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="38">"FTPS"<pos:position pos:line="162" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="46">4<pos:position pos:line="162" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="49"/></condition><then pos:line="162" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="9">strcpy<pos:position pos:line="163" pos:column="15"/></name><argument_list pos:line="163" pos:column="15">(<argument><expr><name><name pos:line="163" pos:column="16">conn<pos:position pos:line="163" pos:column="20"/></name><operator pos:line="163" pos:column="20">-&gt;<pos:position pos:line="163" pos:column="25"/></operator><name pos:line="163" pos:column="22">protostr<pos:position pos:line="163" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="32">"ftps"<pos:position pos:line="163" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="40"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">endif<pos:position pos:line="164" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="164" pos:column="8">/* USE_SSLEAY */</comment>
      <elseif pos:line="165" pos:column="7">else <if pos:line="165" pos:column="12">if<condition pos:line="165" pos:column="14">(<expr><call><name pos:line="165" pos:column="15">strnequal<pos:position pos:line="165" pos:column="24"/></name><argument_list pos:line="165" pos:column="24">(<argument><expr><name><name pos:line="165" pos:column="25">conn<pos:position pos:line="165" pos:column="29"/></name><operator pos:line="165" pos:column="29">-&gt;<pos:position pos:line="165" pos:column="34"/></operator><name pos:line="165" pos:column="31">gname<pos:position pos:line="165" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="38">"TELNET"<pos:position pos:line="165" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="48">6<pos:position pos:line="165" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="51"/></condition><then pos:line="165" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="9">strcpy<pos:position pos:line="166" pos:column="15"/></name><argument_list pos:line="166" pos:column="15">(<argument><expr><name><name pos:line="166" pos:column="16">conn<pos:position pos:line="166" pos:column="20"/></name><operator pos:line="166" pos:column="20">-&gt;<pos:position pos:line="166" pos:column="25"/></operator><name pos:line="166" pos:column="22">protostr<pos:position pos:line="166" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="32">"telnet"<pos:position pos:line="166" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="42"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="167" pos:column="7">else <if pos:line="167" pos:column="12">if <condition pos:line="167" pos:column="15">(<expr><call><name pos:line="167" pos:column="16">strnequal<pos:position pos:line="167" pos:column="25"/></name><argument_list pos:line="167" pos:column="25">(<argument><expr><name><name pos:line="167" pos:column="26">conn<pos:position pos:line="167" pos:column="30"/></name><operator pos:line="167" pos:column="30">-&gt;<pos:position pos:line="167" pos:column="35"/></operator><name pos:line="167" pos:column="32">gname<pos:position pos:line="167" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="39">"DICT"<pos:position pos:line="167" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="167" pos:column="47">sizeof<argument_list pos:line="167" pos:column="53">(<argument><expr><literal type="string" pos:line="167" pos:column="54">"DICT"<pos:position pos:line="167" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="61"/></argument_list></sizeof><operator pos:line="167" pos:column="61">-<pos:position pos:line="167" pos:column="62"/></operator><literal type="number" pos:line="167" pos:column="62">1<pos:position pos:line="167" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="65"/></condition><then pos:line="167" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="9">strcpy<pos:position pos:line="168" pos:column="15"/></name><argument_list pos:line="168" pos:column="15">(<argument><expr><name><name pos:line="168" pos:column="16">conn<pos:position pos:line="168" pos:column="20"/></name><operator pos:line="168" pos:column="20">-&gt;<pos:position pos:line="168" pos:column="25"/></operator><name pos:line="168" pos:column="22">protostr<pos:position pos:line="168" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="32">"DICT"<pos:position pos:line="168" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="40"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="169" pos:column="7">else <if pos:line="169" pos:column="12">if <condition pos:line="169" pos:column="15">(<expr><call><name pos:line="169" pos:column="16">strnequal<pos:position pos:line="169" pos:column="25"/></name><argument_list pos:line="169" pos:column="25">(<argument><expr><name><name pos:line="169" pos:column="26">conn<pos:position pos:line="169" pos:column="30"/></name><operator pos:line="169" pos:column="30">-&gt;<pos:position pos:line="169" pos:column="35"/></operator><name pos:line="169" pos:column="32">gname<pos:position pos:line="169" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="39">"LDAP"<pos:position pos:line="169" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="169" pos:column="47">sizeof<argument_list pos:line="169" pos:column="53">(<argument><expr><literal type="string" pos:line="169" pos:column="54">"LDAP"<pos:position pos:line="169" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="61"/></argument_list></sizeof><operator pos:line="169" pos:column="61">-<pos:position pos:line="169" pos:column="62"/></operator><literal type="number" pos:line="169" pos:column="62">1<pos:position pos:line="169" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="65"/></condition><then pos:line="169" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="9">strcpy<pos:position pos:line="170" pos:column="15"/></name><argument_list pos:line="170" pos:column="15">(<argument><expr><name><name pos:line="170" pos:column="16">conn<pos:position pos:line="170" pos:column="20"/></name><operator pos:line="170" pos:column="20">-&gt;<pos:position pos:line="170" pos:column="25"/></operator><name pos:line="170" pos:column="22">protostr<pos:position pos:line="170" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="32">"LDAP"<pos:position pos:line="170" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="40"/></expr_stmt></block></then></if></elseif>
      <else pos:line="171" pos:column="7">else <block pos:line="171" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="172" pos:column="9">strcpy<pos:position pos:line="172" pos:column="15"/></name><argument_list pos:line="172" pos:column="15">(<argument><expr><name><name pos:line="172" pos:column="16">conn<pos:position pos:line="172" pos:column="20"/></name><operator pos:line="172" pos:column="20">-&gt;<pos:position pos:line="172" pos:column="25"/></operator><name pos:line="172" pos:column="22">protostr<pos:position pos:line="172" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="32">"http"<pos:position pos:line="172" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="173" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="175" pos:column="7">conn<pos:position pos:line="175" pos:column="11"/></name><operator pos:line="175" pos:column="11">-&gt;<pos:position pos:line="175" pos:column="16"/></operator><name pos:line="175" pos:column="13">protocol<pos:position pos:line="175" pos:column="21"/></name></name> <operator pos:line="175" pos:column="22">|=<pos:position pos:line="175" pos:column="24"/></operator> <name pos:line="175" pos:column="25">PROT_MISSING<pos:position pos:line="175" pos:column="37"/></name></expr>;<pos:position pos:line="175" pos:column="38"/></expr_stmt> <comment type="block" pos:line="175" pos:column="39">/* not given in URL */</comment>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>
  }<pos:position pos:line="177" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="179" pos:column="3">buf<pos:position pos:line="179" pos:column="6"/></name> <operator pos:line="179" pos:column="7">=<pos:position pos:line="179" pos:column="8"/></operator> <name><name pos:line="179" pos:column="9">data<pos:position pos:line="179" pos:column="13"/></name><operator pos:line="179" pos:column="13">-&gt;<pos:position pos:line="179" pos:column="18"/></operator><name pos:line="179" pos:column="15">state<pos:position pos:line="179" pos:column="20"/></name><operator pos:line="179" pos:column="20">.<pos:position pos:line="179" pos:column="21"/></operator><name pos:line="179" pos:column="21">buffer<pos:position pos:line="179" pos:column="27"/></name></name></expr>;<pos:position pos:line="179" pos:column="28"/></expr_stmt> <comment type="block" pos:line="179" pos:column="29">/* this is our buffer */</comment>

  <comment type="block" format="doxygen" pos:line="181" pos:column="3">/*************************************************************
   * Take care of user and password authentication stuff
   *************************************************************/</comment>

  <if pos:line="185" pos:column="3">if<condition pos:line="185" pos:column="5">(<expr><name><name pos:line="185" pos:column="6">conn<pos:position pos:line="185" pos:column="10"/></name><operator pos:line="185" pos:column="10">-&gt;<pos:position pos:line="185" pos:column="15"/></operator><name pos:line="185" pos:column="12">bits<pos:position pos:line="185" pos:column="16"/></name><operator pos:line="185" pos:column="16">.<pos:position pos:line="185" pos:column="17"/></operator><name pos:line="185" pos:column="17">user_passwd<pos:position pos:line="185" pos:column="28"/></name></name> <operator pos:line="185" pos:column="29">&amp;&amp;<pos:position pos:line="185" pos:column="39"/></operator> <operator pos:line="185" pos:column="32">!<pos:position pos:line="185" pos:column="33"/></operator><name><name pos:line="185" pos:column="33">data<pos:position pos:line="185" pos:column="37"/></name><operator pos:line="185" pos:column="37">-&gt;<pos:position pos:line="185" pos:column="42"/></operator><name pos:line="185" pos:column="39">set<pos:position pos:line="185" pos:column="42"/></name><operator pos:line="185" pos:column="42">.<pos:position pos:line="185" pos:column="43"/></operator><name pos:line="185" pos:column="43">use_netrc<pos:position pos:line="185" pos:column="52"/></name></name></expr>)<pos:position pos:line="185" pos:column="53"/></condition><then pos:line="185" pos:column="53"> <block pos:line="185" pos:column="54">{
    <expr_stmt><expr><name><name pos:line="186" pos:column="5">data<pos:position pos:line="186" pos:column="9"/></name><operator pos:line="186" pos:column="9">-&gt;<pos:position pos:line="186" pos:column="14"/></operator><name pos:line="186" pos:column="11">state<pos:position pos:line="186" pos:column="16"/></name><operator pos:line="186" pos:column="16">.<pos:position pos:line="186" pos:column="17"/></operator><name pos:line="186" pos:column="17">user<pos:position pos:line="186" pos:column="21"/></name><index pos:line="186" pos:column="21">[<expr><literal type="number" pos:line="186" pos:column="22">0<pos:position pos:line="186" pos:column="23"/></literal></expr>]<pos:position pos:line="186" pos:column="24"/></index></name> <operator pos:line="186" pos:column="25">=<pos:position pos:line="186" pos:column="26"/></operator><literal type="number" pos:line="186" pos:column="26">0<pos:position pos:line="186" pos:column="27"/></literal></expr>;<pos:position pos:line="186" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="187" pos:column="5">data<pos:position pos:line="187" pos:column="9"/></name><operator pos:line="187" pos:column="9">-&gt;<pos:position pos:line="187" pos:column="14"/></operator><name pos:line="187" pos:column="11">state<pos:position pos:line="187" pos:column="16"/></name><operator pos:line="187" pos:column="16">.<pos:position pos:line="187" pos:column="17"/></operator><name pos:line="187" pos:column="17">passwd<pos:position pos:line="187" pos:column="23"/></name><index pos:line="187" pos:column="23">[<expr><literal type="number" pos:line="187" pos:column="24">0<pos:position pos:line="187" pos:column="25"/></literal></expr>]<pos:position pos:line="187" pos:column="26"/></index></name><operator pos:line="187" pos:column="26">=<pos:position pos:line="187" pos:column="27"/></operator><literal type="number" pos:line="187" pos:column="27">0<pos:position pos:line="187" pos:column="28"/></literal></expr>;<pos:position pos:line="187" pos:column="29"/></expr_stmt>

    <if pos:line="189" pos:column="5">if<condition pos:line="189" pos:column="7">(<expr><operator pos:line="189" pos:column="8">*<pos:position pos:line="189" pos:column="9"/></operator><name><name pos:line="189" pos:column="9">data<pos:position pos:line="189" pos:column="13"/></name><operator pos:line="189" pos:column="13">-&gt;<pos:position pos:line="189" pos:column="18"/></operator><name pos:line="189" pos:column="15">set<pos:position pos:line="189" pos:column="18"/></name><operator pos:line="189" pos:column="18">.<pos:position pos:line="189" pos:column="19"/></operator><name pos:line="189" pos:column="19">userpwd<pos:position pos:line="189" pos:column="26"/></name></name> <operator pos:line="189" pos:column="27">!=<pos:position pos:line="189" pos:column="29"/></operator> <literal type="char" pos:line="189" pos:column="30">':'<pos:position pos:line="189" pos:column="33"/></literal></expr>)<pos:position pos:line="189" pos:column="34"/></condition><then pos:line="189" pos:column="34"> <block pos:line="189" pos:column="35">{
      <comment type="block" pos:line="190" pos:column="7">/* the name is given, get user+password */</comment>
      <expr_stmt><expr><call><name pos:line="191" pos:column="7">sscanf<pos:position pos:line="191" pos:column="13"/></name><argument_list pos:line="191" pos:column="13">(<argument><expr><name><name pos:line="191" pos:column="14">data<pos:position pos:line="191" pos:column="18"/></name><operator pos:line="191" pos:column="18">-&gt;<pos:position pos:line="191" pos:column="23"/></operator><name pos:line="191" pos:column="20">set<pos:position pos:line="191" pos:column="23"/></name><operator pos:line="191" pos:column="23">.<pos:position pos:line="191" pos:column="24"/></operator><name pos:line="191" pos:column="24">userpwd<pos:position pos:line="191" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="33">"%127[^:]:%127[^\n]"<pos:position pos:line="191" pos:column="53"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="192" pos:column="14">data<pos:position pos:line="192" pos:column="18"/></name><operator pos:line="192" pos:column="18">-&gt;<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="20">state<pos:position pos:line="192" pos:column="25"/></name><operator pos:line="192" pos:column="25">.<pos:position pos:line="192" pos:column="26"/></operator><name pos:line="192" pos:column="26">user<pos:position pos:line="192" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="32">data<pos:position pos:line="192" pos:column="36"/></name><operator pos:line="192" pos:column="36">-&gt;<pos:position pos:line="192" pos:column="41"/></operator><name pos:line="192" pos:column="38">state<pos:position pos:line="192" pos:column="43"/></name><operator pos:line="192" pos:column="43">.<pos:position pos:line="192" pos:column="44"/></operator><name pos:line="192" pos:column="44">passwd<pos:position pos:line="192" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></then>
    <else pos:line="194" pos:column="5">else
      <comment type="block" pos:line="195" pos:column="7">/* no name given, get the password only */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="196" pos:column="7">sscanf<pos:position pos:line="196" pos:column="13"/></name><argument_list pos:line="196" pos:column="13">(<argument><expr><name><name pos:line="196" pos:column="14">data<pos:position pos:line="196" pos:column="18"/></name><operator pos:line="196" pos:column="18">-&gt;<pos:position pos:line="196" pos:column="23"/></operator><name pos:line="196" pos:column="20">set<pos:position pos:line="196" pos:column="23"/></name><operator pos:line="196" pos:column="23">.<pos:position pos:line="196" pos:column="24"/></operator><name pos:line="196" pos:column="24">userpwd<pos:position pos:line="196" pos:column="31"/></name></name><operator pos:line="196" pos:column="31">+<pos:position pos:line="196" pos:column="32"/></operator><literal type="number" pos:line="196" pos:column="32">1<pos:position pos:line="196" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="35">"%127[^\n]"<pos:position pos:line="196" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="48">data<pos:position pos:line="196" pos:column="52"/></name><operator pos:line="196" pos:column="52">-&gt;<pos:position pos:line="196" pos:column="57"/></operator><name pos:line="196" pos:column="54">state<pos:position pos:line="196" pos:column="59"/></name><operator pos:line="196" pos:column="59">.<pos:position pos:line="196" pos:column="60"/></operator><name pos:line="196" pos:column="60">passwd<pos:position pos:line="196" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="68"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="198" pos:column="5">/* check for password, if no ask for one */</comment>
    <if pos:line="199" pos:column="5">if<condition pos:line="199" pos:column="7">( <expr><operator pos:line="199" pos:column="9">!<pos:position pos:line="199" pos:column="10"/></operator><name><name pos:line="199" pos:column="10">data<pos:position pos:line="199" pos:column="14"/></name><operator pos:line="199" pos:column="14">-&gt;<pos:position pos:line="199" pos:column="19"/></operator><name pos:line="199" pos:column="16">state<pos:position pos:line="199" pos:column="21"/></name><operator pos:line="199" pos:column="21">.<pos:position pos:line="199" pos:column="22"/></operator><name pos:line="199" pos:column="22">passwd<pos:position pos:line="199" pos:column="28"/></name><index pos:line="199" pos:column="28">[<expr><literal type="number" pos:line="199" pos:column="29">0<pos:position pos:line="199" pos:column="30"/></literal></expr>]<pos:position pos:line="199" pos:column="31"/></index></name></expr> )<pos:position pos:line="199" pos:column="33"/></condition><then pos:line="199" pos:column="33"> <block pos:line="199" pos:column="34">{
      <if pos:line="200" pos:column="7">if<condition pos:line="200" pos:column="9">(<expr><operator pos:line="200" pos:column="10">!<pos:position pos:line="200" pos:column="11"/></operator><name><name pos:line="200" pos:column="11">data<pos:position pos:line="200" pos:column="15"/></name><operator pos:line="200" pos:column="15">-&gt;<pos:position pos:line="200" pos:column="20"/></operator><name pos:line="200" pos:column="17">set<pos:position pos:line="200" pos:column="20"/></name><operator pos:line="200" pos:column="20">.<pos:position pos:line="200" pos:column="21"/></operator><name pos:line="200" pos:column="21">fpasswd<pos:position pos:line="200" pos:column="28"/></name></name> <operator pos:line="200" pos:column="29">||<pos:position pos:line="200" pos:column="31"/></operator>
         <call><name><name pos:line="201" pos:column="10">data<pos:position pos:line="201" pos:column="14"/></name><operator pos:line="201" pos:column="14">-&gt;<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="16">set<pos:position pos:line="201" pos:column="19"/></name><operator pos:line="201" pos:column="19">.<pos:position pos:line="201" pos:column="20"/></operator><name pos:line="201" pos:column="20">fpasswd<pos:position pos:line="201" pos:column="27"/></name></name><argument_list pos:line="201" pos:column="27">(<argument><expr><name><name pos:line="201" pos:column="28">data<pos:position pos:line="201" pos:column="32"/></name><operator pos:line="201" pos:column="32">-&gt;<pos:position pos:line="201" pos:column="37"/></operator><name pos:line="201" pos:column="34">set<pos:position pos:line="201" pos:column="37"/></name><operator pos:line="201" pos:column="37">.<pos:position pos:line="201" pos:column="38"/></operator><name pos:line="201" pos:column="38">passwd_client<pos:position pos:line="201" pos:column="51"/></name></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="202" pos:column="24">"password:"<pos:position pos:line="202" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="37">data<pos:position pos:line="202" pos:column="41"/></name><operator pos:line="202" pos:column="41">-&gt;<pos:position pos:line="202" pos:column="46"/></operator><name pos:line="202" pos:column="43">state<pos:position pos:line="202" pos:column="48"/></name><operator pos:line="202" pos:column="48">.<pos:position pos:line="202" pos:column="49"/></operator><name pos:line="202" pos:column="49">passwd<pos:position pos:line="202" pos:column="55"/></name></name></expr></argument>,
                           <argument><expr><sizeof pos:line="203" pos:column="28">sizeof<argument_list pos:line="203" pos:column="34">(<argument><expr><name><name pos:line="203" pos:column="35">data<pos:position pos:line="203" pos:column="39"/></name><operator pos:line="203" pos:column="39">-&gt;<pos:position pos:line="203" pos:column="44"/></operator><name pos:line="203" pos:column="41">state<pos:position pos:line="203" pos:column="46"/></name><operator pos:line="203" pos:column="46">.<pos:position pos:line="203" pos:column="47"/></operator><name pos:line="203" pos:column="47">passwd<pos:position pos:line="203" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="203" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="56"/></condition><then pos:line="203" pos:column="56">
        <block type="pseudo"><return pos:line="204" pos:column="9">return <expr><name pos:line="204" pos:column="16">CURLE_BAD_PASSWORD_ENTERED<pos:position pos:line="204" pos:column="42"/></name></expr>;<pos:position pos:line="204" pos:column="43"/></return></block></then></if>
    }<pos:position pos:line="205" pos:column="6"/></block></then></if>
  }<pos:position pos:line="206" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="208" pos:column="3">/*************************************************************
   * Take care of proxy authentication stuff
   *************************************************************/</comment>
  <if pos:line="211" pos:column="3">if<condition pos:line="211" pos:column="5">(<expr><name><name pos:line="211" pos:column="6">conn<pos:position pos:line="211" pos:column="10"/></name><operator pos:line="211" pos:column="10">-&gt;<pos:position pos:line="211" pos:column="15"/></operator><name pos:line="211" pos:column="12">bits<pos:position pos:line="211" pos:column="16"/></name><operator pos:line="211" pos:column="16">.<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">proxy_user_passwd<pos:position pos:line="211" pos:column="34"/></name></name></expr>)<pos:position pos:line="211" pos:column="35"/></condition><then pos:line="211" pos:column="35"> <block pos:line="211" pos:column="36">{
    <expr_stmt><expr><name><name pos:line="212" pos:column="5">data<pos:position pos:line="212" pos:column="9"/></name><operator pos:line="212" pos:column="9">-&gt;<pos:position pos:line="212" pos:column="14"/></operator><name pos:line="212" pos:column="11">state<pos:position pos:line="212" pos:column="16"/></name><operator pos:line="212" pos:column="16">.<pos:position pos:line="212" pos:column="17"/></operator><name pos:line="212" pos:column="17">proxyuser<pos:position pos:line="212" pos:column="26"/></name><index pos:line="212" pos:column="26">[<expr><literal type="number" pos:line="212" pos:column="27">0<pos:position pos:line="212" pos:column="28"/></literal></expr>]<pos:position pos:line="212" pos:column="29"/></index></name> <operator pos:line="212" pos:column="30">=<pos:position pos:line="212" pos:column="31"/></operator><literal type="number" pos:line="212" pos:column="31">0<pos:position pos:line="212" pos:column="32"/></literal></expr>;<pos:position pos:line="212" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="213" pos:column="5">data<pos:position pos:line="213" pos:column="9"/></name><operator pos:line="213" pos:column="9">-&gt;<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="11">state<pos:position pos:line="213" pos:column="16"/></name><operator pos:line="213" pos:column="16">.<pos:position pos:line="213" pos:column="17"/></operator><name pos:line="213" pos:column="17">proxypasswd<pos:position pos:line="213" pos:column="28"/></name><index pos:line="213" pos:column="28">[<expr><literal type="number" pos:line="213" pos:column="29">0<pos:position pos:line="213" pos:column="30"/></literal></expr>]<pos:position pos:line="213" pos:column="31"/></index></name><operator pos:line="213" pos:column="31">=<pos:position pos:line="213" pos:column="32"/></operator><literal type="number" pos:line="213" pos:column="32">0<pos:position pos:line="213" pos:column="33"/></literal></expr>;<pos:position pos:line="213" pos:column="34"/></expr_stmt>

    <if pos:line="215" pos:column="5">if<condition pos:line="215" pos:column="7">(<expr><operator pos:line="215" pos:column="8">*<pos:position pos:line="215" pos:column="9"/></operator><name><name pos:line="215" pos:column="9">data<pos:position pos:line="215" pos:column="13"/></name><operator pos:line="215" pos:column="13">-&gt;<pos:position pos:line="215" pos:column="18"/></operator><name pos:line="215" pos:column="15">set<pos:position pos:line="215" pos:column="18"/></name><operator pos:line="215" pos:column="18">.<pos:position pos:line="215" pos:column="19"/></operator><name pos:line="215" pos:column="19">proxyuserpwd<pos:position pos:line="215" pos:column="31"/></name></name> <operator pos:line="215" pos:column="32">!=<pos:position pos:line="215" pos:column="34"/></operator> <literal type="char" pos:line="215" pos:column="35">':'<pos:position pos:line="215" pos:column="38"/></literal></expr>)<pos:position pos:line="215" pos:column="39"/></condition><then pos:line="215" pos:column="39"> <block pos:line="215" pos:column="40">{
      <comment type="block" pos:line="216" pos:column="7">/* the name is given, get user+password */</comment>
      <expr_stmt><expr><call><name pos:line="217" pos:column="7">sscanf<pos:position pos:line="217" pos:column="13"/></name><argument_list pos:line="217" pos:column="13">(<argument><expr><name><name pos:line="217" pos:column="14">data<pos:position pos:line="217" pos:column="18"/></name><operator pos:line="217" pos:column="18">-&gt;<pos:position pos:line="217" pos:column="23"/></operator><name pos:line="217" pos:column="20">set<pos:position pos:line="217" pos:column="23"/></name><operator pos:line="217" pos:column="23">.<pos:position pos:line="217" pos:column="24"/></operator><name pos:line="217" pos:column="24">proxyuserpwd<pos:position pos:line="217" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="38">"%127[^:]:%127[^\n]"<pos:position pos:line="217" pos:column="58"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="218" pos:column="14">data<pos:position pos:line="218" pos:column="18"/></name><operator pos:line="218" pos:column="18">-&gt;<pos:position pos:line="218" pos:column="23"/></operator><name pos:line="218" pos:column="20">state<pos:position pos:line="218" pos:column="25"/></name><operator pos:line="218" pos:column="25">.<pos:position pos:line="218" pos:column="26"/></operator><name pos:line="218" pos:column="26">proxyuser<pos:position pos:line="218" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="37">data<pos:position pos:line="218" pos:column="41"/></name><operator pos:line="218" pos:column="41">-&gt;<pos:position pos:line="218" pos:column="46"/></operator><name pos:line="218" pos:column="43">state<pos:position pos:line="218" pos:column="48"/></name><operator pos:line="218" pos:column="48">.<pos:position pos:line="218" pos:column="49"/></operator><name pos:line="218" pos:column="49">proxypasswd<pos:position pos:line="218" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="219" pos:column="8"/></block></then>
    <else pos:line="220" pos:column="5">else
      <comment type="block" pos:line="221" pos:column="7">/* no name given, get the password only */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="7">sscanf<pos:position pos:line="222" pos:column="13"/></name><argument_list pos:line="222" pos:column="13">(<argument><expr><name><name pos:line="222" pos:column="14">data<pos:position pos:line="222" pos:column="18"/></name><operator pos:line="222" pos:column="18">-&gt;<pos:position pos:line="222" pos:column="23"/></operator><name pos:line="222" pos:column="20">set<pos:position pos:line="222" pos:column="23"/></name><operator pos:line="222" pos:column="23">.<pos:position pos:line="222" pos:column="24"/></operator><name pos:line="222" pos:column="24">proxyuserpwd<pos:position pos:line="222" pos:column="36"/></name></name><operator pos:line="222" pos:column="36">+<pos:position pos:line="222" pos:column="37"/></operator><literal type="number" pos:line="222" pos:column="37">1<pos:position pos:line="222" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="40">"%127[^\n]"<pos:position pos:line="222" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="53">data<pos:position pos:line="222" pos:column="57"/></name><operator pos:line="222" pos:column="57">-&gt;<pos:position pos:line="222" pos:column="62"/></operator><name pos:line="222" pos:column="59">state<pos:position pos:line="222" pos:column="64"/></name><operator pos:line="222" pos:column="64">.<pos:position pos:line="222" pos:column="65"/></operator><name pos:line="222" pos:column="65">proxypasswd<pos:position pos:line="222" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="78"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="224" pos:column="5">/* check for password, if no ask for one */</comment>
    <if pos:line="225" pos:column="5">if<condition pos:line="225" pos:column="7">( <expr><operator pos:line="225" pos:column="9">!<pos:position pos:line="225" pos:column="10"/></operator><name><name pos:line="225" pos:column="10">data<pos:position pos:line="225" pos:column="14"/></name><operator pos:line="225" pos:column="14">-&gt;<pos:position pos:line="225" pos:column="19"/></operator><name pos:line="225" pos:column="16">state<pos:position pos:line="225" pos:column="21"/></name><operator pos:line="225" pos:column="21">.<pos:position pos:line="225" pos:column="22"/></operator><name pos:line="225" pos:column="22">proxypasswd<pos:position pos:line="225" pos:column="33"/></name><index pos:line="225" pos:column="33">[<expr><literal type="number" pos:line="225" pos:column="34">0<pos:position pos:line="225" pos:column="35"/></literal></expr>]<pos:position pos:line="225" pos:column="36"/></index></name></expr> )<pos:position pos:line="225" pos:column="38"/></condition><then pos:line="225" pos:column="38"> <block pos:line="225" pos:column="39">{
      <if pos:line="226" pos:column="7">if<condition pos:line="226" pos:column="9">(<expr><operator pos:line="226" pos:column="10">!<pos:position pos:line="226" pos:column="11"/></operator><name><name pos:line="226" pos:column="11">data<pos:position pos:line="226" pos:column="15"/></name><operator pos:line="226" pos:column="15">-&gt;<pos:position pos:line="226" pos:column="20"/></operator><name pos:line="226" pos:column="17">set<pos:position pos:line="226" pos:column="20"/></name><operator pos:line="226" pos:column="20">.<pos:position pos:line="226" pos:column="21"/></operator><name pos:line="226" pos:column="21">fpasswd<pos:position pos:line="226" pos:column="28"/></name></name> <operator pos:line="226" pos:column="29">||<pos:position pos:line="226" pos:column="31"/></operator>
         <call><name><name pos:line="227" pos:column="10">data<pos:position pos:line="227" pos:column="14"/></name><operator pos:line="227" pos:column="14">-&gt;<pos:position pos:line="227" pos:column="19"/></operator><name pos:line="227" pos:column="16">set<pos:position pos:line="227" pos:column="19"/></name><operator pos:line="227" pos:column="19">.<pos:position pos:line="227" pos:column="20"/></operator><name pos:line="227" pos:column="20">fpasswd<pos:position pos:line="227" pos:column="27"/></name></name><argument_list pos:line="227" pos:column="27">( <argument><expr><name><name pos:line="227" pos:column="29">data<pos:position pos:line="227" pos:column="33"/></name><operator pos:line="227" pos:column="33">-&gt;<pos:position pos:line="227" pos:column="38"/></operator><name pos:line="227" pos:column="35">set<pos:position pos:line="227" pos:column="38"/></name><operator pos:line="227" pos:column="38">.<pos:position pos:line="227" pos:column="39"/></operator><name pos:line="227" pos:column="39">passwd_client<pos:position pos:line="227" pos:column="52"/></name></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="228" pos:column="25">"proxy password:"<pos:position pos:line="228" pos:column="42"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="229" pos:column="25">data<pos:position pos:line="229" pos:column="29"/></name><operator pos:line="229" pos:column="29">-&gt;<pos:position pos:line="229" pos:column="34"/></operator><name pos:line="229" pos:column="31">state<pos:position pos:line="229" pos:column="36"/></name><operator pos:line="229" pos:column="36">.<pos:position pos:line="229" pos:column="37"/></operator><name pos:line="229" pos:column="37">proxypasswd<pos:position pos:line="229" pos:column="48"/></name></name></expr></argument>,
                        <argument><expr><sizeof pos:line="230" pos:column="25">sizeof<argument_list pos:line="230" pos:column="31">(<argument><expr><name><name pos:line="230" pos:column="32">data<pos:position pos:line="230" pos:column="36"/></name><operator pos:line="230" pos:column="36">-&gt;<pos:position pos:line="230" pos:column="41"/></operator><name pos:line="230" pos:column="38">state<pos:position pos:line="230" pos:column="43"/></name><operator pos:line="230" pos:column="43">.<pos:position pos:line="230" pos:column="44"/></operator><name pos:line="230" pos:column="44">proxypasswd<pos:position pos:line="230" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="230" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="230" pos:column="58"/></condition><then pos:line="230" pos:column="58">
        <block type="pseudo"><return pos:line="231" pos:column="9">return <expr><name pos:line="231" pos:column="16">CURLE_BAD_PASSWORD_ENTERED<pos:position pos:line="231" pos:column="42"/></name></expr>;<pos:position pos:line="231" pos:column="43"/></return></block></then></if>
    }<pos:position pos:line="232" pos:column="6"/></block></then></if>

  }<pos:position pos:line="234" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="236" pos:column="3">/*************************************************************
   * Set a few convenience pointers 
   *************************************************************/</comment>
  <expr_stmt><expr><name><name pos:line="239" pos:column="3">conn<pos:position pos:line="239" pos:column="7"/></name><operator pos:line="239" pos:column="7">-&gt;<pos:position pos:line="239" pos:column="12"/></operator><name pos:line="239" pos:column="9">name<pos:position pos:line="239" pos:column="13"/></name></name> <operator pos:line="239" pos:column="14">=<pos:position pos:line="239" pos:column="15"/></operator> <name><name pos:line="239" pos:column="16">conn<pos:position pos:line="239" pos:column="20"/></name><operator pos:line="239" pos:column="20">-&gt;<pos:position pos:line="239" pos:column="25"/></operator><name pos:line="239" pos:column="22">gname<pos:position pos:line="239" pos:column="27"/></name></name></expr>;<pos:position pos:line="239" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="240" pos:column="3">conn<pos:position pos:line="240" pos:column="7"/></name><operator pos:line="240" pos:column="7">-&gt;<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="9">ppath<pos:position pos:line="240" pos:column="14"/></name></name> <operator pos:line="240" pos:column="15">=<pos:position pos:line="240" pos:column="16"/></operator> <name><name pos:line="240" pos:column="17">conn<pos:position pos:line="240" pos:column="21"/></name><operator pos:line="240" pos:column="21">-&gt;<pos:position pos:line="240" pos:column="26"/></operator><name pos:line="240" pos:column="23">path<pos:position pos:line="240" pos:column="27"/></name></name></expr>;<pos:position pos:line="240" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="241" pos:column="3">conn<pos:position pos:line="241" pos:column="7"/></name><operator pos:line="241" pos:column="7">-&gt;<pos:position pos:line="241" pos:column="12"/></operator><name pos:line="241" pos:column="9">hostname<pos:position pos:line="241" pos:column="17"/></name></name> <operator pos:line="241" pos:column="18">=<pos:position pos:line="241" pos:column="19"/></operator> <name><name pos:line="241" pos:column="20">conn<pos:position pos:line="241" pos:column="24"/></name><operator pos:line="241" pos:column="24">-&gt;<pos:position pos:line="241" pos:column="29"/></operator><name pos:line="241" pos:column="26">name<pos:position pos:line="241" pos:column="30"/></name></name></expr>;<pos:position pos:line="241" pos:column="31"/></expr_stmt>


  <comment type="block" format="doxygen" pos:line="244" pos:column="3">/*************************************************************
   * Detect what (if any) proxy to use
   *************************************************************/</comment>
  <if pos:line="247" pos:column="3">if<condition pos:line="247" pos:column="5">(<expr><operator pos:line="247" pos:column="6">!<pos:position pos:line="247" pos:column="7"/></operator><name><name pos:line="247" pos:column="7">data<pos:position pos:line="247" pos:column="11"/></name><operator pos:line="247" pos:column="11">-&gt;<pos:position pos:line="247" pos:column="16"/></operator><name pos:line="247" pos:column="13">change<pos:position pos:line="247" pos:column="19"/></name><operator pos:line="247" pos:column="19">.<pos:position pos:line="247" pos:column="20"/></operator><name pos:line="247" pos:column="20">proxy<pos:position pos:line="247" pos:column="25"/></name></name></expr>)<pos:position pos:line="247" pos:column="26"/></condition><then pos:line="247" pos:column="26"> <block pos:line="247" pos:column="27">{
    <comment type="block" pos:line="248" pos:column="5">/* If proxy was not specified, we check for default proxy environment
     * variables, to enable i.e Lynx compliance:
     *
     * http_proxy=http://some.server.dom:port/
     * https_proxy=http://some.server.dom:port/
     * ftp_proxy=http://some.server.dom:port/
     * gopher_proxy=http://some.server.dom:port/
     * no_proxy=domain1.dom,host.domain2.dom
     *   (a comma-separated list of hosts which should
     *   not be proxied, or an asterisk to override
     *   all proxy variables)
     * all_proxy=http://some.server.dom:port/
     *   (seems to exist for the CERN www lib. Probably
     *   the first to check for.)
     *
     * For compatibility, the all-uppercase versions of these variables are
     * checked if the lowercase versions don't exist.
     */</comment>
    <decl_stmt><decl><type><name pos:line="266" pos:column="5">char<pos:position pos:line="266" pos:column="9"/></name> <modifier pos:line="266" pos:column="10">*<pos:position pos:line="266" pos:column="11"/></modifier></type><name pos:line="266" pos:column="11">no_proxy<pos:position pos:line="266" pos:column="19"/></name><init pos:line="266" pos:column="19">=<expr><name pos:line="266" pos:column="20">NULL<pos:position pos:line="266" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="266" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="267" pos:column="5">char<pos:position pos:line="267" pos:column="9"/></name> <modifier pos:line="267" pos:column="10">*<pos:position pos:line="267" pos:column="11"/></modifier></type><name pos:line="267" pos:column="11">no_proxy_tok_buf<pos:position pos:line="267" pos:column="27"/></name></decl>;<pos:position pos:line="267" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="268" pos:column="5">char<pos:position pos:line="268" pos:column="9"/></name> <modifier pos:line="268" pos:column="10">*<pos:position pos:line="268" pos:column="11"/></modifier></type><name pos:line="268" pos:column="11">proxy<pos:position pos:line="268" pos:column="16"/></name><init pos:line="268" pos:column="16">=<expr><name pos:line="268" pos:column="17">NULL<pos:position pos:line="268" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="268" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="269" pos:column="5">char<pos:position pos:line="269" pos:column="9"/></name></type> <name><name pos:line="269" pos:column="10">proxy_env<pos:position pos:line="269" pos:column="19"/></name><index pos:line="269" pos:column="19">[<expr><literal type="number" pos:line="269" pos:column="20">128<pos:position pos:line="269" pos:column="23"/></literal></expr>]<pos:position pos:line="269" pos:column="24"/></index></name></decl>;<pos:position pos:line="269" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="271" pos:column="5">no_proxy<pos:position pos:line="271" pos:column="13"/></name><operator pos:line="271" pos:column="13">=<pos:position pos:line="271" pos:column="14"/></operator><call><name pos:line="271" pos:column="14">curl_getenv<pos:position pos:line="271" pos:column="25"/></name><argument_list pos:line="271" pos:column="25">(<argument><expr><literal type="string" pos:line="271" pos:column="26">"no_proxy"<pos:position pos:line="271" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="38"/></expr_stmt>
    <if pos:line="272" pos:column="5">if<condition pos:line="272" pos:column="7">(<expr><operator pos:line="272" pos:column="8">!<pos:position pos:line="272" pos:column="9"/></operator><name pos:line="272" pos:column="9">no_proxy<pos:position pos:line="272" pos:column="17"/></name></expr>)<pos:position pos:line="272" pos:column="18"/></condition><then pos:line="272" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="273" pos:column="7">no_proxy<pos:position pos:line="273" pos:column="15"/></name><operator pos:line="273" pos:column="15">=<pos:position pos:line="273" pos:column="16"/></operator><call><name pos:line="273" pos:column="16">curl_getenv<pos:position pos:line="273" pos:column="27"/></name><argument_list pos:line="273" pos:column="27">(<argument><expr><literal type="string" pos:line="273" pos:column="28">"NO_PROXY"<pos:position pos:line="273" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="40"/></expr_stmt></block></then></if>

    <if pos:line="275" pos:column="5">if<condition pos:line="275" pos:column="7">(<expr><operator pos:line="275" pos:column="8">!<pos:position pos:line="275" pos:column="9"/></operator><name pos:line="275" pos:column="9">no_proxy<pos:position pos:line="275" pos:column="17"/></name> <operator pos:line="275" pos:column="18">||<pos:position pos:line="275" pos:column="20"/></operator> <operator pos:line="275" pos:column="21">!<pos:position pos:line="275" pos:column="22"/></operator><call><name pos:line="275" pos:column="22">strequal<pos:position pos:line="275" pos:column="30"/></name><argument_list pos:line="275" pos:column="30">(<argument><expr><literal type="string" pos:line="275" pos:column="31">"*"<pos:position pos:line="275" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="36">no_proxy<pos:position pos:line="275" pos:column="44"/></name></expr></argument>)<pos:position pos:line="275" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="275" pos:column="46"/></condition><then pos:line="275" pos:column="46"> <block pos:line="275" pos:column="47">{
      <comment type="block" pos:line="276" pos:column="7">/* NO_PROXY wasn't specified or it wasn't just an asterisk */</comment>
      <decl_stmt><decl><type><name pos:line="277" pos:column="7">char<pos:position pos:line="277" pos:column="11"/></name> <modifier pos:line="277" pos:column="12">*<pos:position pos:line="277" pos:column="13"/></modifier></type><name pos:line="277" pos:column="13">nope<pos:position pos:line="277" pos:column="17"/></name></decl>;<pos:position pos:line="277" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="279" pos:column="7">nope<pos:position pos:line="279" pos:column="11"/></name><operator pos:line="279" pos:column="11">=<pos:position pos:line="279" pos:column="12"/></operator><ternary><condition><expr><name pos:line="279" pos:column="12">no_proxy<pos:position pos:line="279" pos:column="20"/></name></expr>?<pos:position pos:line="279" pos:column="21"/></condition><then><expr><call><name pos:line="279" pos:column="21">strtok_r<pos:position pos:line="279" pos:column="29"/></name><argument_list pos:line="279" pos:column="29">(<argument><expr><name pos:line="279" pos:column="30">no_proxy<pos:position pos:line="279" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="40">", "<pos:position pos:line="279" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="279" pos:column="46">&amp;<pos:position pos:line="279" pos:column="51"/></operator><name pos:line="279" pos:column="47">no_proxy_tok_buf<pos:position pos:line="279" pos:column="63"/></name></expr></argument>)<pos:position pos:line="279" pos:column="64"/></argument_list></call></expr></then><else pos:line="279" pos:column="64">:<expr><name pos:line="279" pos:column="65">NULL<pos:position pos:line="279" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="279" pos:column="70"/></expr_stmt>
      <while pos:line="280" pos:column="7">while<condition pos:line="280" pos:column="12">(<expr><name pos:line="280" pos:column="13">nope<pos:position pos:line="280" pos:column="17"/></name></expr>)<pos:position pos:line="280" pos:column="18"/></condition> <block pos:line="280" pos:column="19">{
        <if pos:line="281" pos:column="9">if<condition pos:line="281" pos:column="11">(<expr><call><name pos:line="281" pos:column="12">strlen<pos:position pos:line="281" pos:column="18"/></name><argument_list pos:line="281" pos:column="18">(<argument><expr><name pos:line="281" pos:column="19">nope<pos:position pos:line="281" pos:column="23"/></name></expr></argument>)<pos:position pos:line="281" pos:column="24"/></argument_list></call> <operator pos:line="281" pos:column="25">&lt;=<pos:position pos:line="281" pos:column="30"/></operator> <call><name pos:line="281" pos:column="28">strlen<pos:position pos:line="281" pos:column="34"/></name><argument_list pos:line="281" pos:column="34">(<argument><expr><name><name pos:line="281" pos:column="35">conn<pos:position pos:line="281" pos:column="39"/></name><operator pos:line="281" pos:column="39">-&gt;<pos:position pos:line="281" pos:column="44"/></operator><name pos:line="281" pos:column="41">name<pos:position pos:line="281" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="281" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="281" pos:column="47"/></condition><then pos:line="281" pos:column="47"> <block pos:line="281" pos:column="48">{
          <decl_stmt><decl><type><name pos:line="282" pos:column="11">char<pos:position pos:line="282" pos:column="15"/></name> <modifier pos:line="282" pos:column="16">*<pos:position pos:line="282" pos:column="17"/></modifier></type><name pos:line="282" pos:column="17">checkn<pos:position pos:line="282" pos:column="23"/></name><init pos:line="282" pos:column="23">=
            <expr><name><name pos:line="283" pos:column="13">conn<pos:position pos:line="283" pos:column="17"/></name><operator pos:line="283" pos:column="17">-&gt;<pos:position pos:line="283" pos:column="22"/></operator><name pos:line="283" pos:column="19">name<pos:position pos:line="283" pos:column="23"/></name></name> <operator pos:line="283" pos:column="24">+<pos:position pos:line="283" pos:column="25"/></operator> <call><name pos:line="283" pos:column="26">strlen<pos:position pos:line="283" pos:column="32"/></name><argument_list pos:line="283" pos:column="32">(<argument><expr><name><name pos:line="283" pos:column="33">conn<pos:position pos:line="283" pos:column="37"/></name><operator pos:line="283" pos:column="37">-&gt;<pos:position pos:line="283" pos:column="42"/></operator><name pos:line="283" pos:column="39">name<pos:position pos:line="283" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="44"/></argument_list></call> <operator pos:line="283" pos:column="45">-<pos:position pos:line="283" pos:column="46"/></operator> <call><name pos:line="283" pos:column="47">strlen<pos:position pos:line="283" pos:column="53"/></name><argument_list pos:line="283" pos:column="53">(<argument><expr><name pos:line="283" pos:column="54">nope<pos:position pos:line="283" pos:column="58"/></name></expr></argument>)<pos:position pos:line="283" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="283" pos:column="60"/></decl_stmt>
          <if pos:line="284" pos:column="11">if<condition pos:line="284" pos:column="13">(<expr><call><name pos:line="284" pos:column="14">strnequal<pos:position pos:line="284" pos:column="23"/></name><argument_list pos:line="284" pos:column="23">(<argument><expr><name pos:line="284" pos:column="24">nope<pos:position pos:line="284" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="30">checkn<pos:position pos:line="284" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="284" pos:column="38">strlen<pos:position pos:line="284" pos:column="44"/></name><argument_list pos:line="284" pos:column="44">(<argument><expr><name pos:line="284" pos:column="45">nope<pos:position pos:line="284" pos:column="49"/></name></expr></argument>)<pos:position pos:line="284" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="284" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="284" pos:column="52"/></condition><then pos:line="284" pos:column="52"> <block pos:line="284" pos:column="53">{
            <comment type="block" pos:line="285" pos:column="13">/* no proxy for this host! */</comment>
            <break pos:line="286" pos:column="13">break;<pos:position pos:line="286" pos:column="19"/></break>
          }<pos:position pos:line="287" pos:column="12"/></block></then></if>
        }<pos:position pos:line="288" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="289" pos:column="9">nope<pos:position pos:line="289" pos:column="13"/></name><operator pos:line="289" pos:column="13">=<pos:position pos:line="289" pos:column="14"/></operator><call><name pos:line="289" pos:column="14">strtok_r<pos:position pos:line="289" pos:column="22"/></name><argument_list pos:line="289" pos:column="22">(<argument><expr><name pos:line="289" pos:column="23">NULL<pos:position pos:line="289" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="29">", "<pos:position pos:line="289" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="289" pos:column="35">&amp;<pos:position pos:line="289" pos:column="40"/></operator><name pos:line="289" pos:column="36">no_proxy_tok_buf<pos:position pos:line="289" pos:column="52"/></name></expr></argument>)<pos:position pos:line="289" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="290" pos:column="8"/></block></while>
      <if pos:line="291" pos:column="7">if<condition pos:line="291" pos:column="9">(<expr><operator pos:line="291" pos:column="10">!<pos:position pos:line="291" pos:column="11"/></operator><name pos:line="291" pos:column="11">nope<pos:position pos:line="291" pos:column="15"/></name></expr>)<pos:position pos:line="291" pos:column="16"/></condition><then pos:line="291" pos:column="16"> <block pos:line="291" pos:column="17">{
	<comment type="block" pos:line="292" pos:column="9">/* It was not listed as without proxy */</comment>
	<decl_stmt><decl><type><name pos:line="293" pos:column="9">char<pos:position pos:line="293" pos:column="13"/></name> <modifier pos:line="293" pos:column="14">*<pos:position pos:line="293" pos:column="15"/></modifier></type><name pos:line="293" pos:column="15">protop<pos:position pos:line="293" pos:column="21"/></name> <init pos:line="293" pos:column="22">= <expr><name><name pos:line="293" pos:column="24">conn<pos:position pos:line="293" pos:column="28"/></name><operator pos:line="293" pos:column="28">-&gt;<pos:position pos:line="293" pos:column="33"/></operator><name pos:line="293" pos:column="30">protostr<pos:position pos:line="293" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="293" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="294" pos:column="9">char<pos:position pos:line="294" pos:column="13"/></name> <modifier pos:line="294" pos:column="14">*<pos:position pos:line="294" pos:column="15"/></modifier></type><name pos:line="294" pos:column="15">envp<pos:position pos:line="294" pos:column="19"/></name> <init pos:line="294" pos:column="20">= <expr><name pos:line="294" pos:column="22">proxy_env<pos:position pos:line="294" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="294" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="295" pos:column="9">char<pos:position pos:line="295" pos:column="13"/></name> <modifier pos:line="295" pos:column="14">*<pos:position pos:line="295" pos:column="15"/></modifier></type><name pos:line="295" pos:column="15">prox<pos:position pos:line="295" pos:column="19"/></name></decl>;<pos:position pos:line="295" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="297" pos:column="9">/* Now, build &lt;protocol&gt;_proxy and check for such a one to use */</comment>
	<while pos:line="298" pos:column="9">while<condition pos:line="298" pos:column="14">(<expr><operator pos:line="298" pos:column="15">*<pos:position pos:line="298" pos:column="16"/></operator><name pos:line="298" pos:column="16">protop<pos:position pos:line="298" pos:column="22"/></name></expr>)<pos:position pos:line="298" pos:column="23"/></condition>
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="299" pos:column="11">*<pos:position pos:line="299" pos:column="12"/></operator><name pos:line="299" pos:column="12">envp<pos:position pos:line="299" pos:column="16"/></name><operator pos:line="299" pos:column="16">++<pos:position pos:line="299" pos:column="18"/></operator> <operator pos:line="299" pos:column="19">=<pos:position pos:line="299" pos:column="20"/></operator> <call><name pos:line="299" pos:column="21">tolower<pos:position pos:line="299" pos:column="28"/></name><argument_list pos:line="299" pos:column="28">(<argument><expr><operator pos:line="299" pos:column="29">*<pos:position pos:line="299" pos:column="30"/></operator><name pos:line="299" pos:column="30">protop<pos:position pos:line="299" pos:column="36"/></name><operator pos:line="299" pos:column="36">++<pos:position pos:line="299" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="299" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="40"/></expr_stmt></block></while>

	<comment type="block" pos:line="301" pos:column="9">/* append _proxy */</comment>
	<expr_stmt><expr><call><name pos:line="302" pos:column="9">strcpy<pos:position pos:line="302" pos:column="15"/></name><argument_list pos:line="302" pos:column="15">(<argument><expr><name pos:line="302" pos:column="16">envp<pos:position pos:line="302" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="22">"_proxy"<pos:position pos:line="302" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="304" pos:column="9">/* read the protocol proxy: */</comment>
	<expr_stmt><expr><name pos:line="305" pos:column="9">prox<pos:position pos:line="305" pos:column="13"/></name><operator pos:line="305" pos:column="13">=<pos:position pos:line="305" pos:column="14"/></operator><call><name pos:line="305" pos:column="14">curl_getenv<pos:position pos:line="305" pos:column="25"/></name><argument_list pos:line="305" pos:column="25">(<argument><expr><name pos:line="305" pos:column="26">proxy_env<pos:position pos:line="305" pos:column="35"/></name></expr></argument>)<pos:position pos:line="305" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="307" pos:column="9">/*
         * We don't try the uppercase version of HTTP_PROXY because of
         * security reasons:
         *
         * When curl is used in a webserver application
         * environment (cgi or php), this environment variable can
         * be controlled by the web server user by setting the
         * http header 'Proxy:' to some value.
         * 
         * This can cause 'internal' http/ftp requests to be
         * arbitrarily redirected by any external attacker.
         */</comment>
	<if pos:line="319" pos:column="9">if<condition pos:line="319" pos:column="11">(<expr><operator pos:line="319" pos:column="12">!<pos:position pos:line="319" pos:column="13"/></operator><name pos:line="319" pos:column="13">prox<pos:position pos:line="319" pos:column="17"/></name> <operator pos:line="319" pos:column="18">&amp;&amp;<pos:position pos:line="319" pos:column="28"/></operator> <operator pos:line="319" pos:column="21">!<pos:position pos:line="319" pos:column="22"/></operator><call><name pos:line="319" pos:column="22">strequal<pos:position pos:line="319" pos:column="30"/></name><argument_list pos:line="319" pos:column="30">(<argument><expr><literal type="string" pos:line="319" pos:column="31">"http_proxy"<pos:position pos:line="319" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="45">proxy_env<pos:position pos:line="319" pos:column="54"/></name></expr></argument>)<pos:position pos:line="319" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="319" pos:column="56"/></condition><then pos:line="319" pos:column="56"> <block pos:line="319" pos:column="57">{
          <comment type="block" pos:line="320" pos:column="11">/* There was no lowercase variable, try the uppercase version: */</comment>
	  <for pos:line="321" pos:column="11">for<control pos:line="321" pos:column="14">(<init><expr><name pos:line="321" pos:column="15">envp<pos:position pos:line="321" pos:column="19"/></name> <operator pos:line="321" pos:column="20">=<pos:position pos:line="321" pos:column="21"/></operator> <name pos:line="321" pos:column="22">proxy_env<pos:position pos:line="321" pos:column="31"/></name></expr>;<pos:position pos:line="321" pos:column="32"/></init> <condition><expr><operator pos:line="321" pos:column="33">*<pos:position pos:line="321" pos:column="34"/></operator><name pos:line="321" pos:column="34">envp<pos:position pos:line="321" pos:column="38"/></name></expr>;<pos:position pos:line="321" pos:column="39"/></condition> <incr><expr><name pos:line="321" pos:column="40">envp<pos:position pos:line="321" pos:column="44"/></name><operator pos:line="321" pos:column="44">++<pos:position pos:line="321" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="321" pos:column="47"/></control>
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="322" pos:column="13">*<pos:position pos:line="322" pos:column="14"/></operator><name pos:line="322" pos:column="14">envp<pos:position pos:line="322" pos:column="18"/></name> <operator pos:line="322" pos:column="19">=<pos:position pos:line="322" pos:column="20"/></operator> <call><name pos:line="322" pos:column="21">toupper<pos:position pos:line="322" pos:column="28"/></name><argument_list pos:line="322" pos:column="28">(<argument><expr><operator pos:line="322" pos:column="29">*<pos:position pos:line="322" pos:column="30"/></operator><name pos:line="322" pos:column="30">envp<pos:position pos:line="322" pos:column="34"/></name></expr></argument>)<pos:position pos:line="322" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="36"/></expr_stmt></block></for>
	  <expr_stmt><expr><name pos:line="323" pos:column="11">prox<pos:position pos:line="323" pos:column="15"/></name><operator pos:line="323" pos:column="15">=<pos:position pos:line="323" pos:column="16"/></operator><call><name pos:line="323" pos:column="16">curl_getenv<pos:position pos:line="323" pos:column="27"/></name><argument_list pos:line="323" pos:column="27">(<argument><expr><name pos:line="323" pos:column="28">proxy_env<pos:position pos:line="323" pos:column="37"/></name></expr></argument>)<pos:position pos:line="323" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="324" pos:column="10"/></block></then></if>

	<if pos:line="326" pos:column="9">if<condition pos:line="326" pos:column="11">(<expr><name pos:line="326" pos:column="12">prox<pos:position pos:line="326" pos:column="16"/></name> <operator pos:line="326" pos:column="17">&amp;&amp;<pos:position pos:line="326" pos:column="27"/></operator> <operator pos:line="326" pos:column="20">*<pos:position pos:line="326" pos:column="21"/></operator><name pos:line="326" pos:column="21">prox<pos:position pos:line="326" pos:column="25"/></name></expr>)<pos:position pos:line="326" pos:column="26"/></condition><then pos:line="326" pos:column="26"> <block pos:line="326" pos:column="27">{ <comment type="block" pos:line="326" pos:column="29">/* don't count "" strings */</comment>
	  <expr_stmt><expr><name pos:line="327" pos:column="11">proxy<pos:position pos:line="327" pos:column="16"/></name> <operator pos:line="327" pos:column="17">=<pos:position pos:line="327" pos:column="18"/></operator> <name pos:line="327" pos:column="19">prox<pos:position pos:line="327" pos:column="23"/></name></expr>;<pos:position pos:line="327" pos:column="24"/></expr_stmt> <comment type="block" pos:line="327" pos:column="25">/* use this */</comment>
	}<pos:position pos:line="328" pos:column="10"/></block></then>
	<else pos:line="329" pos:column="9">else <block pos:line="329" pos:column="14">{
	  <expr_stmt><expr><name pos:line="330" pos:column="11">proxy<pos:position pos:line="330" pos:column="16"/></name> <operator pos:line="330" pos:column="17">=<pos:position pos:line="330" pos:column="18"/></operator> <call><name pos:line="330" pos:column="19">curl_getenv<pos:position pos:line="330" pos:column="30"/></name><argument_list pos:line="330" pos:column="30">(<argument><expr><literal type="string" pos:line="330" pos:column="31">"all_proxy"<pos:position pos:line="330" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="330" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="44"/></expr_stmt> <comment type="block" pos:line="330" pos:column="45">/* default proxy to use */</comment>
	  <if pos:line="331" pos:column="11">if<condition pos:line="331" pos:column="13">(<expr><operator pos:line="331" pos:column="14">!<pos:position pos:line="331" pos:column="15"/></operator><name pos:line="331" pos:column="15">proxy<pos:position pos:line="331" pos:column="20"/></name></expr>)<pos:position pos:line="331" pos:column="21"/></condition><then pos:line="331" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="332" pos:column="13">proxy<pos:position pos:line="332" pos:column="18"/></name><operator pos:line="332" pos:column="18">=<pos:position pos:line="332" pos:column="19"/></operator><call><name pos:line="332" pos:column="19">curl_getenv<pos:position pos:line="332" pos:column="30"/></name><argument_list pos:line="332" pos:column="30">(<argument><expr><literal type="string" pos:line="332" pos:column="31">"ALL_PROXY"<pos:position pos:line="332" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="44"/></expr_stmt></block></then></if>
	}<pos:position pos:line="333" pos:column="10"/></block></else></if>

        <if pos:line="335" pos:column="9">if<condition pos:line="335" pos:column="11">(<expr><name pos:line="335" pos:column="12">proxy<pos:position pos:line="335" pos:column="17"/></name> <operator pos:line="335" pos:column="18">&amp;&amp;<pos:position pos:line="335" pos:column="28"/></operator> <operator pos:line="335" pos:column="21">*<pos:position pos:line="335" pos:column="22"/></operator><name pos:line="335" pos:column="22">proxy<pos:position pos:line="335" pos:column="27"/></name></expr>)<pos:position pos:line="335" pos:column="28"/></condition><then pos:line="335" pos:column="28"> <block pos:line="335" pos:column="29">{
          <comment type="block" pos:line="336" pos:column="11">/* we have a proxy here to set */</comment>
          <expr_stmt><expr><name><name pos:line="337" pos:column="11">data<pos:position pos:line="337" pos:column="15"/></name><operator pos:line="337" pos:column="15">-&gt;<pos:position pos:line="337" pos:column="20"/></operator><name pos:line="337" pos:column="17">change<pos:position pos:line="337" pos:column="23"/></name><operator pos:line="337" pos:column="23">.<pos:position pos:line="337" pos:column="24"/></operator><name pos:line="337" pos:column="24">proxy<pos:position pos:line="337" pos:column="29"/></name></name> <operator pos:line="337" pos:column="30">=<pos:position pos:line="337" pos:column="31"/></operator> <name pos:line="337" pos:column="32">proxy<pos:position pos:line="337" pos:column="37"/></name></expr>;<pos:position pos:line="337" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="338" pos:column="11">data<pos:position pos:line="338" pos:column="15"/></name><operator pos:line="338" pos:column="15">-&gt;<pos:position pos:line="338" pos:column="20"/></operator><name pos:line="338" pos:column="17">change<pos:position pos:line="338" pos:column="23"/></name><operator pos:line="338" pos:column="23">.<pos:position pos:line="338" pos:column="24"/></operator><name pos:line="338" pos:column="24">proxy_alloc<pos:position pos:line="338" pos:column="35"/></name></name><operator pos:line="338" pos:column="35">=<pos:position pos:line="338" pos:column="36"/></operator><name pos:line="338" pos:column="36">TRUE<pos:position pos:line="338" pos:column="40"/></name></expr>;<pos:position pos:line="338" pos:column="41"/></expr_stmt> <comment type="block" pos:line="338" pos:column="42">/* this needs to be freed later */</comment>
        }<pos:position pos:line="339" pos:column="10"/></block></then></if>
      }<pos:position pos:line="340" pos:column="8"/></block></then></if> <comment type="block" pos:line="340" pos:column="9">/* if (!nope) - it wasn't specified non-proxy */</comment>
    }<pos:position pos:line="341" pos:column="6"/></block></then></if> <comment type="block" pos:line="341" pos:column="7">/* NO_PROXY wasn't specified or '*' */</comment>
    <if pos:line="342" pos:column="5">if<condition pos:line="342" pos:column="7">(<expr><name pos:line="342" pos:column="8">no_proxy<pos:position pos:line="342" pos:column="16"/></name></expr>)<pos:position pos:line="342" pos:column="17"/></condition><then pos:line="342" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="343" pos:column="7">free<pos:position pos:line="343" pos:column="11"/></name><argument_list pos:line="343" pos:column="11">(<argument><expr><name pos:line="343" pos:column="12">no_proxy<pos:position pos:line="343" pos:column="20"/></name></expr></argument>)<pos:position pos:line="343" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="22"/></expr_stmt></block></then></if>
  }<pos:position pos:line="344" pos:column="4"/></block></then></if> <comment type="block" pos:line="344" pos:column="5">/* if not using proxy */</comment>

  <comment type="block" format="doxygen" pos:line="346" pos:column="3">/*************************************************************
   * No protocol part in URL was used, add it!
   *************************************************************/</comment>
  <if pos:line="349" pos:column="3">if<condition pos:line="349" pos:column="5">(<expr><name><name pos:line="349" pos:column="6">conn<pos:position pos:line="349" pos:column="10"/></name><operator pos:line="349" pos:column="10">-&gt;<pos:position pos:line="349" pos:column="15"/></operator><name pos:line="349" pos:column="12">protocol<pos:position pos:line="349" pos:column="20"/></name></name><operator pos:line="349" pos:column="20">&amp;<pos:position pos:line="349" pos:column="25"/></operator><name pos:line="349" pos:column="21">PROT_MISSING<pos:position pos:line="349" pos:column="33"/></name></expr>)<pos:position pos:line="349" pos:column="34"/></condition><then pos:line="349" pos:column="34"> <block pos:line="349" pos:column="35">{
    <comment type="block" pos:line="350" pos:column="5">/* We're guessing prefixes here and if we're told to use a proxy or if
       we're gonna follow a Location: later or... then we need the protocol
       part added so that we have a valid URL. */</comment>
    <decl_stmt><decl><type><name pos:line="353" pos:column="5">char<pos:position pos:line="353" pos:column="9"/></name> <modifier pos:line="353" pos:column="10">*<pos:position pos:line="353" pos:column="11"/></modifier></type><name pos:line="353" pos:column="11">reurl<pos:position pos:line="353" pos:column="16"/></name></decl>;<pos:position pos:line="353" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="355" pos:column="5">reurl<pos:position pos:line="355" pos:column="10"/></name> <operator pos:line="355" pos:column="11">=<pos:position pos:line="355" pos:column="12"/></operator> <call><name pos:line="355" pos:column="13">aprintf<pos:position pos:line="355" pos:column="20"/></name><argument_list pos:line="355" pos:column="20">(<argument><expr><literal type="string" pos:line="355" pos:column="21">"%s://%s"<pos:position pos:line="355" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="355" pos:column="32">conn<pos:position pos:line="355" pos:column="36"/></name><operator pos:line="355" pos:column="36">-&gt;<pos:position pos:line="355" pos:column="41"/></operator><name pos:line="355" pos:column="38">protostr<pos:position pos:line="355" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="355" pos:column="48">data<pos:position pos:line="355" pos:column="52"/></name><operator pos:line="355" pos:column="52">-&gt;<pos:position pos:line="355" pos:column="57"/></operator><name pos:line="355" pos:column="54">change<pos:position pos:line="355" pos:column="60"/></name><operator pos:line="355" pos:column="60">.<pos:position pos:line="355" pos:column="61"/></operator><name pos:line="355" pos:column="61">url<pos:position pos:line="355" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="355" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="66"/></expr_stmt>

    <if pos:line="357" pos:column="5">if<condition pos:line="357" pos:column="7">(<expr><operator pos:line="357" pos:column="8">!<pos:position pos:line="357" pos:column="9"/></operator><name pos:line="357" pos:column="9">reurl<pos:position pos:line="357" pos:column="14"/></name></expr>)<pos:position pos:line="357" pos:column="15"/></condition><then pos:line="357" pos:column="15">
      <block type="pseudo"><return pos:line="358" pos:column="7">return <expr><name pos:line="358" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="358" pos:column="33"/></name></expr>;<pos:position pos:line="358" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="360" pos:column="5">data<pos:position pos:line="360" pos:column="9"/></name><operator pos:line="360" pos:column="9">-&gt;<pos:position pos:line="360" pos:column="14"/></operator><name pos:line="360" pos:column="11">change<pos:position pos:line="360" pos:column="17"/></name><operator pos:line="360" pos:column="17">.<pos:position pos:line="360" pos:column="18"/></operator><name pos:line="360" pos:column="18">url<pos:position pos:line="360" pos:column="21"/></name></name> <operator pos:line="360" pos:column="22">=<pos:position pos:line="360" pos:column="23"/></operator> <name pos:line="360" pos:column="24">reurl<pos:position pos:line="360" pos:column="29"/></name></expr>;<pos:position pos:line="360" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="361" pos:column="5">data<pos:position pos:line="361" pos:column="9"/></name><operator pos:line="361" pos:column="9">-&gt;<pos:position pos:line="361" pos:column="14"/></operator><name pos:line="361" pos:column="11">change<pos:position pos:line="361" pos:column="17"/></name><operator pos:line="361" pos:column="17">.<pos:position pos:line="361" pos:column="18"/></operator><name pos:line="361" pos:column="18">url_alloc<pos:position pos:line="361" pos:column="27"/></name></name> <operator pos:line="361" pos:column="28">=<pos:position pos:line="361" pos:column="29"/></operator> <name pos:line="361" pos:column="30">TRUE<pos:position pos:line="361" pos:column="34"/></name></expr>;<pos:position pos:line="361" pos:column="35"/></expr_stmt> <comment type="block" pos:line="361" pos:column="36">/* free this later */</comment>
    <expr_stmt><expr><name><name pos:line="362" pos:column="5">conn<pos:position pos:line="362" pos:column="9"/></name><operator pos:line="362" pos:column="9">-&gt;<pos:position pos:line="362" pos:column="14"/></operator><name pos:line="362" pos:column="11">protocol<pos:position pos:line="362" pos:column="19"/></name></name> <operator pos:line="362" pos:column="20">&amp;=<pos:position pos:line="362" pos:column="26"/></operator> <operator pos:line="362" pos:column="23">~<pos:position pos:line="362" pos:column="24"/></operator><name pos:line="362" pos:column="24">PROT_MISSING<pos:position pos:line="362" pos:column="36"/></name></expr>;<pos:position pos:line="362" pos:column="37"/></expr_stmt> <comment type="block" pos:line="362" pos:column="38">/* switch that one off again */</comment>
  }<pos:position pos:line="363" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="365" pos:column="3">/************************************************************
   * RESUME on a HTTP page is a tricky business. First, let's just check that
   * 'range' isn't used, then set the range parameter and leave the resume as
   * it is to inform about this situation for later use. We will then
   * "attempt" to resume, and if we're talking to a HTTP/1.1 (or later)
   * server, we will get the document resumed. If we talk to a HTTP/1.0
   * server, we just fail since we can't rewind the file writing from within
   * this function.
   ***********************************************************/</comment>
  <if pos:line="374" pos:column="3">if<condition pos:line="374" pos:column="5">(<expr><name><name pos:line="374" pos:column="6">conn<pos:position pos:line="374" pos:column="10"/></name><operator pos:line="374" pos:column="10">-&gt;<pos:position pos:line="374" pos:column="15"/></operator><name pos:line="374" pos:column="12">resume_from<pos:position pos:line="374" pos:column="23"/></name></name></expr>)<pos:position pos:line="374" pos:column="24"/></condition><then pos:line="374" pos:column="24"> <block pos:line="374" pos:column="25">{
    <if pos:line="375" pos:column="5">if<condition pos:line="375" pos:column="7">(<expr><operator pos:line="375" pos:column="8">!<pos:position pos:line="375" pos:column="9"/></operator><name><name pos:line="375" pos:column="9">conn<pos:position pos:line="375" pos:column="13"/></name><operator pos:line="375" pos:column="13">-&gt;<pos:position pos:line="375" pos:column="18"/></operator><name pos:line="375" pos:column="15">bits<pos:position pos:line="375" pos:column="19"/></name><operator pos:line="375" pos:column="19">.<pos:position pos:line="375" pos:column="20"/></operator><name pos:line="375" pos:column="20">use_range<pos:position pos:line="375" pos:column="29"/></name></name></expr>)<pos:position pos:line="375" pos:column="30"/></condition><then pos:line="375" pos:column="30"> <block pos:line="375" pos:column="31">{
      <comment type="block" pos:line="376" pos:column="7">/* if it already was in use, we just skip this */</comment>
      <expr_stmt><expr><call><name pos:line="377" pos:column="7">snprintf<pos:position pos:line="377" pos:column="15"/></name><argument_list pos:line="377" pos:column="15">(<argument><expr><name pos:line="377" pos:column="16">resumerange<pos:position pos:line="377" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="377" pos:column="29">sizeof<argument_list pos:line="377" pos:column="35">(<argument><expr><name pos:line="377" pos:column="36">resumerange<pos:position pos:line="377" pos:column="47"/></name></expr></argument>)<pos:position pos:line="377" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="50">"%d-"<pos:position pos:line="377" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="377" pos:column="57">conn<pos:position pos:line="377" pos:column="61"/></name><operator pos:line="377" pos:column="61">-&gt;<pos:position pos:line="377" pos:column="66"/></operator><name pos:line="377" pos:column="63">resume_from<pos:position pos:line="377" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="377" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="378" pos:column="7">conn<pos:position pos:line="378" pos:column="11"/></name><operator pos:line="378" pos:column="11">-&gt;<pos:position pos:line="378" pos:column="16"/></operator><name pos:line="378" pos:column="13">range<pos:position pos:line="378" pos:column="18"/></name></name><operator pos:line="378" pos:column="18">=<pos:position pos:line="378" pos:column="19"/></operator><call><name pos:line="378" pos:column="19">strdup<pos:position pos:line="378" pos:column="25"/></name><argument_list pos:line="378" pos:column="25">(<argument><expr><name pos:line="378" pos:column="26">resumerange<pos:position pos:line="378" pos:column="37"/></name></expr></argument>)<pos:position pos:line="378" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="39"/></expr_stmt> <comment type="block" pos:line="378" pos:column="40">/* tell ourselves to fetch this range */</comment>
      <expr_stmt><expr><name><name pos:line="379" pos:column="7">conn<pos:position pos:line="379" pos:column="11"/></name><operator pos:line="379" pos:column="11">-&gt;<pos:position pos:line="379" pos:column="16"/></operator><name pos:line="379" pos:column="13">bits<pos:position pos:line="379" pos:column="17"/></name><operator pos:line="379" pos:column="17">.<pos:position pos:line="379" pos:column="18"/></operator><name pos:line="379" pos:column="18">rangestringalloc<pos:position pos:line="379" pos:column="34"/></name></name> <operator pos:line="379" pos:column="35">=<pos:position pos:line="379" pos:column="36"/></operator> <name pos:line="379" pos:column="37">TRUE<pos:position pos:line="379" pos:column="41"/></name></expr>;<pos:position pos:line="379" pos:column="42"/></expr_stmt> <comment type="block" pos:line="379" pos:column="43">/* mark as allocated */</comment>
      <expr_stmt><expr><name><name pos:line="380" pos:column="7">conn<pos:position pos:line="380" pos:column="11"/></name><operator pos:line="380" pos:column="11">-&gt;<pos:position pos:line="380" pos:column="16"/></operator><name pos:line="380" pos:column="13">bits<pos:position pos:line="380" pos:column="17"/></name><operator pos:line="380" pos:column="17">.<pos:position pos:line="380" pos:column="18"/></operator><name pos:line="380" pos:column="18">use_range<pos:position pos:line="380" pos:column="27"/></name></name> <operator pos:line="380" pos:column="28">=<pos:position pos:line="380" pos:column="29"/></operator> <literal type="number" pos:line="380" pos:column="30">1<pos:position pos:line="380" pos:column="31"/></literal></expr>;<pos:position pos:line="380" pos:column="32"/></expr_stmt> <comment type="block" pos:line="380" pos:column="33">/* switch on range usage */</comment>
    }<pos:position pos:line="381" pos:column="6"/></block></then></if>
  }<pos:position pos:line="382" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="384" pos:column="3">/*************************************************************
   * Set timeout if that is being used
   *************************************************************/</comment>
  <if pos:line="387" pos:column="3">if<condition pos:line="387" pos:column="5">(<expr><name><name pos:line="387" pos:column="6">data<pos:position pos:line="387" pos:column="10"/></name><operator pos:line="387" pos:column="10">-&gt;<pos:position pos:line="387" pos:column="15"/></operator><name pos:line="387" pos:column="12">set<pos:position pos:line="387" pos:column="15"/></name><operator pos:line="387" pos:column="15">.<pos:position pos:line="387" pos:column="16"/></operator><name pos:line="387" pos:column="16">timeout<pos:position pos:line="387" pos:column="23"/></name></name> <operator pos:line="387" pos:column="24">||<pos:position pos:line="387" pos:column="26"/></operator> <name><name pos:line="387" pos:column="27">data<pos:position pos:line="387" pos:column="31"/></name><operator pos:line="387" pos:column="31">-&gt;<pos:position pos:line="387" pos:column="36"/></operator><name pos:line="387" pos:column="33">set<pos:position pos:line="387" pos:column="36"/></name><operator pos:line="387" pos:column="36">.<pos:position pos:line="387" pos:column="37"/></operator><name pos:line="387" pos:column="37">connecttimeout<pos:position pos:line="387" pos:column="51"/></name></name></expr>)<pos:position pos:line="387" pos:column="52"/></condition><then pos:line="387" pos:column="52"> <block pos:line="387" pos:column="53">{
    <comment type="block" pos:line="388" pos:column="5">/* We set the timeout on the connection/resolving phase first, separately
     * from the download/upload part to allow a maximum time on everything */</comment>

    <comment type="block" pos:line="391" pos:column="5">/* myalarm() makes a signal get sent when the timeout fires off, and that
       will abort system calls */</comment>
    <if pos:line="393" pos:column="5">if<condition pos:line="393" pos:column="7">(<expr><name><name pos:line="393" pos:column="8">data<pos:position pos:line="393" pos:column="12"/></name><operator pos:line="393" pos:column="12">-&gt;<pos:position pos:line="393" pos:column="17"/></operator><name pos:line="393" pos:column="14">set<pos:position pos:line="393" pos:column="17"/></name><operator pos:line="393" pos:column="17">.<pos:position pos:line="393" pos:column="18"/></operator><name pos:line="393" pos:column="18">connecttimeout<pos:position pos:line="393" pos:column="32"/></name></name></expr>)<pos:position pos:line="393" pos:column="33"/></condition><then pos:line="393" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="394" pos:column="7">myalarm<pos:position pos:line="394" pos:column="14"/></name><argument_list pos:line="394" pos:column="14">(<argument><expr><name><name pos:line="394" pos:column="15">data<pos:position pos:line="394" pos:column="19"/></name><operator pos:line="394" pos:column="19">-&gt;<pos:position pos:line="394" pos:column="24"/></operator><name pos:line="394" pos:column="21">set<pos:position pos:line="394" pos:column="24"/></name><operator pos:line="394" pos:column="24">.<pos:position pos:line="394" pos:column="25"/></operator><name pos:line="394" pos:column="25">connecttimeout<pos:position pos:line="394" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="394" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="395" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="396" pos:column="7">myalarm<pos:position pos:line="396" pos:column="14"/></name><argument_list pos:line="396" pos:column="14">(<argument><expr><name><name pos:line="396" pos:column="15">data<pos:position pos:line="396" pos:column="19"/></name><operator pos:line="396" pos:column="19">-&gt;<pos:position pos:line="396" pos:column="24"/></operator><name pos:line="396" pos:column="21">set<pos:position pos:line="396" pos:column="24"/></name><operator pos:line="396" pos:column="24">.<pos:position pos:line="396" pos:column="25"/></operator><name pos:line="396" pos:column="25">timeout<pos:position pos:line="396" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="396" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="34"/></expr_stmt></block></else></if>
  }<pos:position pos:line="397" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="399" pos:column="3">/*************************************************************
   * Setup internals depending on protocol
   *************************************************************/</comment>

  <if pos:line="403" pos:column="3">if <condition pos:line="403" pos:column="6">(<expr><call><name pos:line="403" pos:column="7">strequal<pos:position pos:line="403" pos:column="15"/></name><argument_list pos:line="403" pos:column="15">(<argument><expr><name><name pos:line="403" pos:column="16">conn<pos:position pos:line="403" pos:column="20"/></name><operator pos:line="403" pos:column="20">-&gt;<pos:position pos:line="403" pos:column="25"/></operator><name pos:line="403" pos:column="22">protostr<pos:position pos:line="403" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="403" pos:column="32">"HTTP"<pos:position pos:line="403" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="403" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="403" pos:column="40"/></condition><then pos:line="403" pos:column="40"> <block pos:line="403" pos:column="41">{
    <expr_stmt><expr><name><name pos:line="404" pos:column="5">conn<pos:position pos:line="404" pos:column="9"/></name><operator pos:line="404" pos:column="9">-&gt;<pos:position pos:line="404" pos:column="14"/></operator><name pos:line="404" pos:column="11">port<pos:position pos:line="404" pos:column="15"/></name></name> <operator pos:line="404" pos:column="16">=<pos:position pos:line="404" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="404" pos:column="18">(<pos:position pos:line="404" pos:column="19"/></operator><name><name pos:line="404" pos:column="19">data<pos:position pos:line="404" pos:column="23"/></name><operator pos:line="404" pos:column="23">-&gt;<pos:position pos:line="404" pos:column="28"/></operator><name pos:line="404" pos:column="25">set<pos:position pos:line="404" pos:column="28"/></name><operator pos:line="404" pos:column="28">.<pos:position pos:line="404" pos:column="29"/></operator><name pos:line="404" pos:column="29">use_port<pos:position pos:line="404" pos:column="37"/></name></name> <operator pos:line="404" pos:column="38">&amp;&amp;<pos:position pos:line="404" pos:column="48"/></operator> <name pos:line="404" pos:column="41">allow_port<pos:position pos:line="404" pos:column="51"/></name><operator pos:line="404" pos:column="51">)<pos:position pos:line="404" pos:column="52"/></operator></expr>?<pos:position pos:line="404" pos:column="53"/></condition><then><expr><name><name pos:line="404" pos:column="53">data<pos:position pos:line="404" pos:column="57"/></name><operator pos:line="404" pos:column="57">-&gt;<pos:position pos:line="404" pos:column="62"/></operator><name pos:line="404" pos:column="59">set<pos:position pos:line="404" pos:column="62"/></name><operator pos:line="404" pos:column="62">.<pos:position pos:line="404" pos:column="63"/></operator><name pos:line="404" pos:column="63">use_port<pos:position pos:line="404" pos:column="71"/></name></name></expr></then><else pos:line="404" pos:column="71">:<expr><name pos:line="404" pos:column="72">PORT_HTTP<pos:position pos:line="404" pos:column="81"/></name></expr></else></ternary></expr>;<pos:position pos:line="404" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="405" pos:column="5">conn<pos:position pos:line="405" pos:column="9"/></name><operator pos:line="405" pos:column="9">-&gt;<pos:position pos:line="405" pos:column="14"/></operator><name pos:line="405" pos:column="11">remote_port<pos:position pos:line="405" pos:column="22"/></name></name> <operator pos:line="405" pos:column="23">=<pos:position pos:line="405" pos:column="24"/></operator> <name pos:line="405" pos:column="25">PORT_HTTP<pos:position pos:line="405" pos:column="34"/></name></expr>;<pos:position pos:line="405" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="406" pos:column="5">conn<pos:position pos:line="406" pos:column="9"/></name><operator pos:line="406" pos:column="9">-&gt;<pos:position pos:line="406" pos:column="14"/></operator><name pos:line="406" pos:column="11">protocol<pos:position pos:line="406" pos:column="19"/></name></name> <operator pos:line="406" pos:column="20">|=<pos:position pos:line="406" pos:column="22"/></operator> <name pos:line="406" pos:column="23">PROT_HTTP<pos:position pos:line="406" pos:column="32"/></name></expr>;<pos:position pos:line="406" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="407" pos:column="5">conn<pos:position pos:line="407" pos:column="9"/></name><operator pos:line="407" pos:column="9">-&gt;<pos:position pos:line="407" pos:column="14"/></operator><name pos:line="407" pos:column="11">curl_do<pos:position pos:line="407" pos:column="18"/></name></name> <operator pos:line="407" pos:column="19">=<pos:position pos:line="407" pos:column="20"/></operator> <name pos:line="407" pos:column="21">Curl_http<pos:position pos:line="407" pos:column="30"/></name></expr>;<pos:position pos:line="407" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="408" pos:column="5">conn<pos:position pos:line="408" pos:column="9"/></name><operator pos:line="408" pos:column="9">-&gt;<pos:position pos:line="408" pos:column="14"/></operator><name pos:line="408" pos:column="11">curl_done<pos:position pos:line="408" pos:column="20"/></name></name> <operator pos:line="408" pos:column="21">=<pos:position pos:line="408" pos:column="22"/></operator> <name pos:line="408" pos:column="23">Curl_http_done<pos:position pos:line="408" pos:column="37"/></name></expr>;<pos:position pos:line="408" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="409" pos:column="4"/></block></then>
  <elseif pos:line="410" pos:column="3">else <if pos:line="410" pos:column="8">if <condition pos:line="410" pos:column="11">(<expr><call><name pos:line="410" pos:column="12">strequal<pos:position pos:line="410" pos:column="20"/></name><argument_list pos:line="410" pos:column="20">(<argument><expr><name><name pos:line="410" pos:column="21">conn<pos:position pos:line="410" pos:column="25"/></name><operator pos:line="410" pos:column="25">-&gt;<pos:position pos:line="410" pos:column="30"/></operator><name pos:line="410" pos:column="27">protostr<pos:position pos:line="410" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="410" pos:column="37">"HTTPS"<pos:position pos:line="410" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="410" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="410" pos:column="46"/></condition><then pos:line="410" pos:column="46"> <block pos:line="410" pos:column="47">{
<cpp:ifdef pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">ifdef<pos:position pos:line="411" pos:column="7"/></cpp:directive> <name pos:line="411" pos:column="8">USE_SSLEAY<pos:position pos:line="411" pos:column="18"/></name></cpp:ifdef>

    <expr_stmt><expr><name><name pos:line="413" pos:column="5">conn<pos:position pos:line="413" pos:column="9"/></name><operator pos:line="413" pos:column="9">-&gt;<pos:position pos:line="413" pos:column="14"/></operator><name pos:line="413" pos:column="11">port<pos:position pos:line="413" pos:column="15"/></name></name> <operator pos:line="413" pos:column="16">=<pos:position pos:line="413" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="413" pos:column="18">(<pos:position pos:line="413" pos:column="19"/></operator><name><name pos:line="413" pos:column="19">data<pos:position pos:line="413" pos:column="23"/></name><operator pos:line="413" pos:column="23">-&gt;<pos:position pos:line="413" pos:column="28"/></operator><name pos:line="413" pos:column="25">set<pos:position pos:line="413" pos:column="28"/></name><operator pos:line="413" pos:column="28">.<pos:position pos:line="413" pos:column="29"/></operator><name pos:line="413" pos:column="29">use_port<pos:position pos:line="413" pos:column="37"/></name></name> <operator pos:line="413" pos:column="38">&amp;&amp;<pos:position pos:line="413" pos:column="48"/></operator> <name pos:line="413" pos:column="41">allow_port<pos:position pos:line="413" pos:column="51"/></name><operator pos:line="413" pos:column="51">)<pos:position pos:line="413" pos:column="52"/></operator></expr>?<pos:position pos:line="413" pos:column="53"/></condition><then><expr><name><name pos:line="413" pos:column="53">data<pos:position pos:line="413" pos:column="57"/></name><operator pos:line="413" pos:column="57">-&gt;<pos:position pos:line="413" pos:column="62"/></operator><name pos:line="413" pos:column="59">set<pos:position pos:line="413" pos:column="62"/></name><operator pos:line="413" pos:column="62">.<pos:position pos:line="413" pos:column="63"/></operator><name pos:line="413" pos:column="63">use_port<pos:position pos:line="413" pos:column="71"/></name></name></expr></then><else pos:line="413" pos:column="71">:<expr><name pos:line="413" pos:column="72">PORT_HTTPS<pos:position pos:line="413" pos:column="82"/></name></expr></else></ternary></expr>;<pos:position pos:line="413" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="414" pos:column="5">conn<pos:position pos:line="414" pos:column="9"/></name><operator pos:line="414" pos:column="9">-&gt;<pos:position pos:line="414" pos:column="14"/></operator><name pos:line="414" pos:column="11">remote_port<pos:position pos:line="414" pos:column="22"/></name></name> <operator pos:line="414" pos:column="23">=<pos:position pos:line="414" pos:column="24"/></operator> <name pos:line="414" pos:column="25">PORT_HTTPS<pos:position pos:line="414" pos:column="35"/></name></expr>;<pos:position pos:line="414" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="415" pos:column="5">conn<pos:position pos:line="415" pos:column="9"/></name><operator pos:line="415" pos:column="9">-&gt;<pos:position pos:line="415" pos:column="14"/></operator><name pos:line="415" pos:column="11">protocol<pos:position pos:line="415" pos:column="19"/></name></name> <operator pos:line="415" pos:column="20">|=<pos:position pos:line="415" pos:column="22"/></operator> <name pos:line="415" pos:column="23">PROT_HTTP<pos:position pos:line="415" pos:column="32"/></name></expr>;<pos:position pos:line="415" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="416" pos:column="5">conn<pos:position pos:line="416" pos:column="9"/></name><operator pos:line="416" pos:column="9">-&gt;<pos:position pos:line="416" pos:column="14"/></operator><name pos:line="416" pos:column="11">protocol<pos:position pos:line="416" pos:column="19"/></name></name> <operator pos:line="416" pos:column="20">|=<pos:position pos:line="416" pos:column="22"/></operator> <name pos:line="416" pos:column="23">PROT_HTTPS<pos:position pos:line="416" pos:column="33"/></name></expr>;<pos:position pos:line="416" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="418" pos:column="5">conn<pos:position pos:line="418" pos:column="9"/></name><operator pos:line="418" pos:column="9">-&gt;<pos:position pos:line="418" pos:column="14"/></operator><name pos:line="418" pos:column="11">curl_do<pos:position pos:line="418" pos:column="18"/></name></name> <operator pos:line="418" pos:column="19">=<pos:position pos:line="418" pos:column="20"/></operator> <name pos:line="418" pos:column="21">Curl_http<pos:position pos:line="418" pos:column="30"/></name></expr>;<pos:position pos:line="418" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="419" pos:column="5">conn<pos:position pos:line="419" pos:column="9"/></name><operator pos:line="419" pos:column="9">-&gt;<pos:position pos:line="419" pos:column="14"/></operator><name pos:line="419" pos:column="11">curl_done<pos:position pos:line="419" pos:column="20"/></name></name> <operator pos:line="419" pos:column="21">=<pos:position pos:line="419" pos:column="22"/></operator> <name pos:line="419" pos:column="23">Curl_http_done<pos:position pos:line="419" pos:column="37"/></name></expr>;<pos:position pos:line="419" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="420" pos:column="5">conn<pos:position pos:line="420" pos:column="9"/></name><operator pos:line="420" pos:column="9">-&gt;<pos:position pos:line="420" pos:column="14"/></operator><name pos:line="420" pos:column="11">curl_connect<pos:position pos:line="420" pos:column="23"/></name></name> <operator pos:line="420" pos:column="24">=<pos:position pos:line="420" pos:column="25"/></operator> <name pos:line="420" pos:column="26">Curl_http_connect<pos:position pos:line="420" pos:column="43"/></name></expr>;<pos:position pos:line="420" pos:column="44"/></expr_stmt>

<cpp:else pos:line="422" pos:column="1">#<cpp:directive pos:line="422" pos:column="2">else<pos:position pos:line="422" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="422" pos:column="7">/* USE_SSLEAY */</comment>
    <expr_stmt><expr><call><name pos:line="423" pos:column="5">failf<pos:position pos:line="423" pos:column="10"/></name><argument_list pos:line="423" pos:column="10">(<argument><expr><name pos:line="423" pos:column="11">data<pos:position pos:line="423" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="17">LIBCURL_NAME<pos:position pos:line="423" pos:column="29"/></name>
          <literal type="string" pos:line="424" pos:column="11">" was built with SSL disabled, https: not supported!"<pos:position pos:line="424" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="424" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="66"/></expr_stmt>
    <return pos:line="425" pos:column="5">return <expr><name pos:line="425" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="425" pos:column="38"/></name></expr>;<pos:position pos:line="425" pos:column="39"/></return>
<cpp:endif pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">endif<pos:position pos:line="426" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="426" pos:column="8">/* !USE_SSLEAY */</comment>
  }<pos:position pos:line="427" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="428" pos:column="3">else <if pos:line="428" pos:column="8">if <condition pos:line="428" pos:column="11">(<expr><call><name pos:line="428" pos:column="12">strequal<pos:position pos:line="428" pos:column="20"/></name><argument_list pos:line="428" pos:column="20">(<argument><expr><name><name pos:line="428" pos:column="21">conn<pos:position pos:line="428" pos:column="25"/></name><operator pos:line="428" pos:column="25">-&gt;<pos:position pos:line="428" pos:column="30"/></operator><name pos:line="428" pos:column="27">protostr<pos:position pos:line="428" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="428" pos:column="37">"GOPHER"<pos:position pos:line="428" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="428" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="428" pos:column="47"/></condition><then pos:line="428" pos:column="47"> <block pos:line="428" pos:column="48">{
    <expr_stmt><expr><name><name pos:line="429" pos:column="5">conn<pos:position pos:line="429" pos:column="9"/></name><operator pos:line="429" pos:column="9">-&gt;<pos:position pos:line="429" pos:column="14"/></operator><name pos:line="429" pos:column="11">port<pos:position pos:line="429" pos:column="15"/></name></name> <operator pos:line="429" pos:column="16">=<pos:position pos:line="429" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="429" pos:column="18">(<pos:position pos:line="429" pos:column="19"/></operator><name><name pos:line="429" pos:column="19">data<pos:position pos:line="429" pos:column="23"/></name><operator pos:line="429" pos:column="23">-&gt;<pos:position pos:line="429" pos:column="28"/></operator><name pos:line="429" pos:column="25">set<pos:position pos:line="429" pos:column="28"/></name><operator pos:line="429" pos:column="28">.<pos:position pos:line="429" pos:column="29"/></operator><name pos:line="429" pos:column="29">use_port<pos:position pos:line="429" pos:column="37"/></name></name> <operator pos:line="429" pos:column="38">&amp;&amp;<pos:position pos:line="429" pos:column="48"/></operator> <name pos:line="429" pos:column="41">allow_port<pos:position pos:line="429" pos:column="51"/></name><operator pos:line="429" pos:column="51">)<pos:position pos:line="429" pos:column="52"/></operator></expr>?<pos:position pos:line="429" pos:column="53"/></condition><then><expr><name><name pos:line="429" pos:column="53">data<pos:position pos:line="429" pos:column="57"/></name><operator pos:line="429" pos:column="57">-&gt;<pos:position pos:line="429" pos:column="62"/></operator><name pos:line="429" pos:column="59">set<pos:position pos:line="429" pos:column="62"/></name><operator pos:line="429" pos:column="62">.<pos:position pos:line="429" pos:column="63"/></operator><name pos:line="429" pos:column="63">use_port<pos:position pos:line="429" pos:column="71"/></name></name></expr></then><else pos:line="429" pos:column="71">:<expr><name pos:line="429" pos:column="72">PORT_GOPHER<pos:position pos:line="429" pos:column="83"/></name></expr></else></ternary></expr>;<pos:position pos:line="429" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="430" pos:column="5">conn<pos:position pos:line="430" pos:column="9"/></name><operator pos:line="430" pos:column="9">-&gt;<pos:position pos:line="430" pos:column="14"/></operator><name pos:line="430" pos:column="11">remote_port<pos:position pos:line="430" pos:column="22"/></name></name> <operator pos:line="430" pos:column="23">=<pos:position pos:line="430" pos:column="24"/></operator> <name pos:line="430" pos:column="25">PORT_GOPHER<pos:position pos:line="430" pos:column="36"/></name></expr>;<pos:position pos:line="430" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="431" pos:column="5">/* Skip /&lt;item-type&gt;/ in path if present */</comment>
    <if pos:line="432" pos:column="5">if <condition pos:line="432" pos:column="8">(<expr><call><name pos:line="432" pos:column="9">isdigit<pos:position pos:line="432" pos:column="16"/></name><argument_list pos:line="432" pos:column="16">(<argument><expr><operator pos:line="432" pos:column="17">(<pos:position pos:line="432" pos:column="18"/></operator><name pos:line="432" pos:column="18">int<pos:position pos:line="432" pos:column="21"/></name><operator pos:line="432" pos:column="21">)<pos:position pos:line="432" pos:column="22"/></operator><name><name pos:line="432" pos:column="22">conn<pos:position pos:line="432" pos:column="26"/></name><operator pos:line="432" pos:column="26">-&gt;<pos:position pos:line="432" pos:column="31"/></operator><name pos:line="432" pos:column="28">path<pos:position pos:line="432" pos:column="32"/></name><index pos:line="432" pos:column="32">[<expr><literal type="number" pos:line="432" pos:column="33">1<pos:position pos:line="432" pos:column="34"/></literal></expr>]<pos:position pos:line="432" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="432" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="432" pos:column="37"/></condition><then pos:line="432" pos:column="37"> <block pos:line="432" pos:column="38">{
      <expr_stmt><expr><name><name pos:line="433" pos:column="7">conn<pos:position pos:line="433" pos:column="11"/></name><operator pos:line="433" pos:column="11">-&gt;<pos:position pos:line="433" pos:column="16"/></operator><name pos:line="433" pos:column="13">ppath<pos:position pos:line="433" pos:column="18"/></name></name> <operator pos:line="433" pos:column="19">=<pos:position pos:line="433" pos:column="20"/></operator> <call><name pos:line="433" pos:column="21">strchr<pos:position pos:line="433" pos:column="27"/></name><argument_list pos:line="433" pos:column="27">(<argument><expr><operator pos:line="433" pos:column="28">&amp;<pos:position pos:line="433" pos:column="33"/></operator><name><name pos:line="433" pos:column="29">conn<pos:position pos:line="433" pos:column="33"/></name><operator pos:line="433" pos:column="33">-&gt;<pos:position pos:line="433" pos:column="38"/></operator><name pos:line="433" pos:column="35">path<pos:position pos:line="433" pos:column="39"/></name><index pos:line="433" pos:column="39">[<expr><literal type="number" pos:line="433" pos:column="40">1<pos:position pos:line="433" pos:column="41"/></literal></expr>]<pos:position pos:line="433" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="433" pos:column="44">'/'<pos:position pos:line="433" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="49"/></expr_stmt>
      <if pos:line="434" pos:column="7">if <condition pos:line="434" pos:column="10">(<expr><name><name pos:line="434" pos:column="11">conn<pos:position pos:line="434" pos:column="15"/></name><operator pos:line="434" pos:column="15">-&gt;<pos:position pos:line="434" pos:column="20"/></operator><name pos:line="434" pos:column="17">ppath<pos:position pos:line="434" pos:column="22"/></name></name> <operator pos:line="434" pos:column="23">==<pos:position pos:line="434" pos:column="25"/></operator> <name pos:line="434" pos:column="26">NULL<pos:position pos:line="434" pos:column="30"/></name></expr>)<pos:position pos:line="434" pos:column="31"/></condition><then pos:line="434" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="435" pos:column="9">conn<pos:position pos:line="435" pos:column="13"/></name><operator pos:line="435" pos:column="13">-&gt;<pos:position pos:line="435" pos:column="18"/></operator><name pos:line="435" pos:column="15">ppath<pos:position pos:line="435" pos:column="20"/></name></name> <operator pos:line="435" pos:column="21">=<pos:position pos:line="435" pos:column="22"/></operator> <name><name pos:line="435" pos:column="23">conn<pos:position pos:line="435" pos:column="27"/></name><operator pos:line="435" pos:column="27">-&gt;<pos:position pos:line="435" pos:column="32"/></operator><name pos:line="435" pos:column="29">path<pos:position pos:line="435" pos:column="33"/></name></name></expr>;<pos:position pos:line="435" pos:column="34"/></expr_stmt></block></then></if>
      }<pos:position pos:line="436" pos:column="8"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="437" pos:column="5">conn<pos:position pos:line="437" pos:column="9"/></name><operator pos:line="437" pos:column="9">-&gt;<pos:position pos:line="437" pos:column="14"/></operator><name pos:line="437" pos:column="11">protocol<pos:position pos:line="437" pos:column="19"/></name></name> <operator pos:line="437" pos:column="20">|=<pos:position pos:line="437" pos:column="22"/></operator> <name pos:line="437" pos:column="23">PROT_GOPHER<pos:position pos:line="437" pos:column="34"/></name></expr>;<pos:position pos:line="437" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="438" pos:column="5">conn<pos:position pos:line="438" pos:column="9"/></name><operator pos:line="438" pos:column="9">-&gt;<pos:position pos:line="438" pos:column="14"/></operator><name pos:line="438" pos:column="11">curl_do<pos:position pos:line="438" pos:column="18"/></name></name> <operator pos:line="438" pos:column="19">=<pos:position pos:line="438" pos:column="20"/></operator> <name pos:line="438" pos:column="21">Curl_http<pos:position pos:line="438" pos:column="30"/></name></expr>;<pos:position pos:line="438" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="439" pos:column="5">conn<pos:position pos:line="439" pos:column="9"/></name><operator pos:line="439" pos:column="9">-&gt;<pos:position pos:line="439" pos:column="14"/></operator><name pos:line="439" pos:column="11">curl_done<pos:position pos:line="439" pos:column="20"/></name></name> <operator pos:line="439" pos:column="21">=<pos:position pos:line="439" pos:column="22"/></operator> <name pos:line="439" pos:column="23">Curl_http_done<pos:position pos:line="439" pos:column="37"/></name></expr>;<pos:position pos:line="439" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="440" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="441" pos:column="3">else <if pos:line="441" pos:column="8">if<condition pos:line="441" pos:column="10">(<expr><call><name pos:line="441" pos:column="11">strequal<pos:position pos:line="441" pos:column="19"/></name><argument_list pos:line="441" pos:column="19">(<argument><expr><name><name pos:line="441" pos:column="20">conn<pos:position pos:line="441" pos:column="24"/></name><operator pos:line="441" pos:column="24">-&gt;<pos:position pos:line="441" pos:column="29"/></operator><name pos:line="441" pos:column="26">protostr<pos:position pos:line="441" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="441" pos:column="36">"FTP"<pos:position pos:line="441" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="441" pos:column="42"/></argument_list></call> <operator pos:line="441" pos:column="43">||<pos:position pos:line="441" pos:column="45"/></operator>
          <call><name pos:line="442" pos:column="11">strequal<pos:position pos:line="442" pos:column="19"/></name><argument_list pos:line="442" pos:column="19">(<argument><expr><name><name pos:line="442" pos:column="20">conn<pos:position pos:line="442" pos:column="24"/></name><operator pos:line="442" pos:column="24">-&gt;<pos:position pos:line="442" pos:column="29"/></operator><name pos:line="442" pos:column="26">protostr<pos:position pos:line="442" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="442" pos:column="36">"FTPS"<pos:position pos:line="442" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="442" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="442" pos:column="44"/></condition><then pos:line="442" pos:column="44"> <block pos:line="442" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="443" pos:column="5">char<pos:position pos:line="443" pos:column="9"/></name> <modifier pos:line="443" pos:column="10">*<pos:position pos:line="443" pos:column="11"/></modifier></type><name pos:line="443" pos:column="11">type<pos:position pos:line="443" pos:column="15"/></name></decl>;<pos:position pos:line="443" pos:column="16"/></decl_stmt>

    <if pos:line="445" pos:column="5">if<condition pos:line="445" pos:column="7">(<expr><call><name pos:line="445" pos:column="8">strequal<pos:position pos:line="445" pos:column="16"/></name><argument_list pos:line="445" pos:column="16">(<argument><expr><name><name pos:line="445" pos:column="17">conn<pos:position pos:line="445" pos:column="21"/></name><operator pos:line="445" pos:column="21">-&gt;<pos:position pos:line="445" pos:column="26"/></operator><name pos:line="445" pos:column="23">protostr<pos:position pos:line="445" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="445" pos:column="33">"FTPS"<pos:position pos:line="445" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="445" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="445" pos:column="41"/></condition><then pos:line="445" pos:column="41"> <block pos:line="445" pos:column="42">{
<cpp:ifdef pos:line="446" pos:column="1">#<cpp:directive pos:line="446" pos:column="2">ifdef<pos:position pos:line="446" pos:column="7"/></cpp:directive> <name pos:line="446" pos:column="8">USE_SSLEAY<pos:position pos:line="446" pos:column="18"/></name></cpp:ifdef>
      <expr_stmt><expr><name><name pos:line="447" pos:column="7">conn<pos:position pos:line="447" pos:column="11"/></name><operator pos:line="447" pos:column="11">-&gt;<pos:position pos:line="447" pos:column="16"/></operator><name pos:line="447" pos:column="13">protocol<pos:position pos:line="447" pos:column="21"/></name></name> <operator pos:line="447" pos:column="22">|=<pos:position pos:line="447" pos:column="24"/></operator> <name pos:line="447" pos:column="25">PROT_FTPS<pos:position pos:line="447" pos:column="34"/></name></expr>;<pos:position pos:line="447" pos:column="35"/></expr_stmt>
<cpp:else pos:line="448" pos:column="1">#<cpp:directive pos:line="448" pos:column="2">else<pos:position pos:line="448" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="449" pos:column="7">failf<pos:position pos:line="449" pos:column="12"/></name><argument_list pos:line="449" pos:column="12">(<argument><expr><name pos:line="449" pos:column="13">data<pos:position pos:line="449" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="449" pos:column="19">LIBCURL_NAME<pos:position pos:line="449" pos:column="31"/></name>
            <literal type="string" pos:line="450" pos:column="13">" was built with SSL disabled, ftps: not supported!"<pos:position pos:line="450" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="450" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="67"/></expr_stmt>
      <return pos:line="451" pos:column="7">return <expr><name pos:line="451" pos:column="14">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="451" pos:column="40"/></name></expr>;<pos:position pos:line="451" pos:column="41"/></return>
<cpp:endif pos:line="452" pos:column="1">#<cpp:directive pos:line="452" pos:column="2">endif<pos:position pos:line="452" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="452" pos:column="8">/* !USE_SSLEAY */</comment>
    }<pos:position pos:line="453" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="455" pos:column="5">conn<pos:position pos:line="455" pos:column="9"/></name><operator pos:line="455" pos:column="9">-&gt;<pos:position pos:line="455" pos:column="14"/></operator><name pos:line="455" pos:column="11">port<pos:position pos:line="455" pos:column="15"/></name></name> <operator pos:line="455" pos:column="16">=<pos:position pos:line="455" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="455" pos:column="18">(<pos:position pos:line="455" pos:column="19"/></operator><name><name pos:line="455" pos:column="19">data<pos:position pos:line="455" pos:column="23"/></name><operator pos:line="455" pos:column="23">-&gt;<pos:position pos:line="455" pos:column="28"/></operator><name pos:line="455" pos:column="25">set<pos:position pos:line="455" pos:column="28"/></name><operator pos:line="455" pos:column="28">.<pos:position pos:line="455" pos:column="29"/></operator><name pos:line="455" pos:column="29">use_port<pos:position pos:line="455" pos:column="37"/></name></name> <operator pos:line="455" pos:column="38">&amp;&amp;<pos:position pos:line="455" pos:column="48"/></operator> <name pos:line="455" pos:column="41">allow_port<pos:position pos:line="455" pos:column="51"/></name><operator pos:line="455" pos:column="51">)<pos:position pos:line="455" pos:column="52"/></operator></expr>?<pos:position pos:line="455" pos:column="53"/></condition><then><expr><name><name pos:line="455" pos:column="53">data<pos:position pos:line="455" pos:column="57"/></name><operator pos:line="455" pos:column="57">-&gt;<pos:position pos:line="455" pos:column="62"/></operator><name pos:line="455" pos:column="59">set<pos:position pos:line="455" pos:column="62"/></name><operator pos:line="455" pos:column="62">.<pos:position pos:line="455" pos:column="63"/></operator><name pos:line="455" pos:column="63">use_port<pos:position pos:line="455" pos:column="71"/></name></name></expr></then><else pos:line="455" pos:column="71">:<expr><name pos:line="455" pos:column="72">PORT_FTP<pos:position pos:line="455" pos:column="80"/></name></expr></else></ternary></expr>;<pos:position pos:line="455" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="456" pos:column="5">conn<pos:position pos:line="456" pos:column="9"/></name><operator pos:line="456" pos:column="9">-&gt;<pos:position pos:line="456" pos:column="14"/></operator><name pos:line="456" pos:column="11">remote_port<pos:position pos:line="456" pos:column="22"/></name></name> <operator pos:line="456" pos:column="23">=<pos:position pos:line="456" pos:column="24"/></operator> <name pos:line="456" pos:column="25">PORT_FTP<pos:position pos:line="456" pos:column="33"/></name></expr>;<pos:position pos:line="456" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="457" pos:column="5">conn<pos:position pos:line="457" pos:column="9"/></name><operator pos:line="457" pos:column="9">-&gt;<pos:position pos:line="457" pos:column="14"/></operator><name pos:line="457" pos:column="11">protocol<pos:position pos:line="457" pos:column="19"/></name></name> <operator pos:line="457" pos:column="20">|=<pos:position pos:line="457" pos:column="22"/></operator> <name pos:line="457" pos:column="23">PROT_FTP<pos:position pos:line="457" pos:column="31"/></name></expr>;<pos:position pos:line="457" pos:column="32"/></expr_stmt>

    <if pos:line="459" pos:column="5">if<condition pos:line="459" pos:column="7">(<expr><name><name pos:line="459" pos:column="8">data<pos:position pos:line="459" pos:column="12"/></name><operator pos:line="459" pos:column="12">-&gt;<pos:position pos:line="459" pos:column="17"/></operator><name pos:line="459" pos:column="14">change<pos:position pos:line="459" pos:column="20"/></name><operator pos:line="459" pos:column="20">.<pos:position pos:line="459" pos:column="21"/></operator><name pos:line="459" pos:column="21">proxy<pos:position pos:line="459" pos:column="26"/></name></name> <operator pos:line="459" pos:column="27">&amp;&amp;<pos:position pos:line="459" pos:column="37"/></operator>
       <operator pos:line="460" pos:column="8">!<pos:position pos:line="460" pos:column="9"/></operator><name><name pos:line="460" pos:column="9">data<pos:position pos:line="460" pos:column="13"/></name><operator pos:line="460" pos:column="13">-&gt;<pos:position pos:line="460" pos:column="18"/></operator><name pos:line="460" pos:column="15">set<pos:position pos:line="460" pos:column="18"/></name><operator pos:line="460" pos:column="18">.<pos:position pos:line="460" pos:column="19"/></operator><name pos:line="460" pos:column="19">tunnel_thru_httpproxy<pos:position pos:line="460" pos:column="40"/></name></name></expr>)<pos:position pos:line="460" pos:column="41"/></condition><then pos:line="460" pos:column="41"> <block pos:line="460" pos:column="42">{
      <comment type="block" pos:line="461" pos:column="7">/* Unless we have asked to tunnel ftp operations through the proxy, we
         switch and use HTTP operations only */</comment>
      <if pos:line="463" pos:column="7">if<condition pos:line="463" pos:column="9">(<expr><name><name pos:line="463" pos:column="10">conn<pos:position pos:line="463" pos:column="14"/></name><operator pos:line="463" pos:column="14">-&gt;<pos:position pos:line="463" pos:column="19"/></operator><name pos:line="463" pos:column="16">protocol<pos:position pos:line="463" pos:column="24"/></name></name> <operator pos:line="463" pos:column="25">&amp;<pos:position pos:line="463" pos:column="30"/></operator> <name pos:line="463" pos:column="27">PROT_FTPS<pos:position pos:line="463" pos:column="36"/></name></expr>)<pos:position pos:line="463" pos:column="37"/></condition><then pos:line="463" pos:column="37"> <block pos:line="463" pos:column="38">{
        <comment type="block" pos:line="464" pos:column="9">/* FTPS is a hacked protocol and does not work through your
           ordinary http proxy! */</comment>
        <expr_stmt><expr><call><name pos:line="466" pos:column="9">failf<pos:position pos:line="466" pos:column="14"/></name><argument_list pos:line="466" pos:column="14">(<argument><expr><name pos:line="466" pos:column="15">data<pos:position pos:line="466" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="466" pos:column="21">"ftps does not work through http proxy!"<pos:position pos:line="466" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="466" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="63"/></expr_stmt>
        <return pos:line="467" pos:column="9">return <expr><name pos:line="467" pos:column="16">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="467" pos:column="42"/></name></expr>;<pos:position pos:line="467" pos:column="43"/></return>
      }<pos:position pos:line="468" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="469" pos:column="7">conn<pos:position pos:line="469" pos:column="11"/></name><operator pos:line="469" pos:column="11">-&gt;<pos:position pos:line="469" pos:column="16"/></operator><name pos:line="469" pos:column="13">curl_do<pos:position pos:line="469" pos:column="20"/></name></name> <operator pos:line="469" pos:column="21">=<pos:position pos:line="469" pos:column="22"/></operator> <name pos:line="469" pos:column="23">Curl_http<pos:position pos:line="469" pos:column="32"/></name></expr>;<pos:position pos:line="469" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="470" pos:column="7">conn<pos:position pos:line="470" pos:column="11"/></name><operator pos:line="470" pos:column="11">-&gt;<pos:position pos:line="470" pos:column="16"/></operator><name pos:line="470" pos:column="13">curl_done<pos:position pos:line="470" pos:column="22"/></name></name> <operator pos:line="470" pos:column="23">=<pos:position pos:line="470" pos:column="24"/></operator> <name pos:line="470" pos:column="25">Curl_http_done<pos:position pos:line="470" pos:column="39"/></name></expr>;<pos:position pos:line="470" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="471" pos:column="6"/></block></then>
    <else pos:line="472" pos:column="5">else <block pos:line="472" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="473" pos:column="7">conn<pos:position pos:line="473" pos:column="11"/></name><operator pos:line="473" pos:column="11">-&gt;<pos:position pos:line="473" pos:column="16"/></operator><name pos:line="473" pos:column="13">curl_do<pos:position pos:line="473" pos:column="20"/></name></name> <operator pos:line="473" pos:column="21">=<pos:position pos:line="473" pos:column="22"/></operator> <name pos:line="473" pos:column="23">Curl_ftp<pos:position pos:line="473" pos:column="31"/></name></expr>;<pos:position pos:line="473" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="474" pos:column="7">conn<pos:position pos:line="474" pos:column="11"/></name><operator pos:line="474" pos:column="11">-&gt;<pos:position pos:line="474" pos:column="16"/></operator><name pos:line="474" pos:column="13">curl_done<pos:position pos:line="474" pos:column="22"/></name></name> <operator pos:line="474" pos:column="23">=<pos:position pos:line="474" pos:column="24"/></operator> <name pos:line="474" pos:column="25">Curl_ftp_done<pos:position pos:line="474" pos:column="38"/></name></expr>;<pos:position pos:line="474" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="475" pos:column="7">conn<pos:position pos:line="475" pos:column="11"/></name><operator pos:line="475" pos:column="11">-&gt;<pos:position pos:line="475" pos:column="16"/></operator><name pos:line="475" pos:column="13">curl_connect<pos:position pos:line="475" pos:column="25"/></name></name> <operator pos:line="475" pos:column="26">=<pos:position pos:line="475" pos:column="27"/></operator> <name pos:line="475" pos:column="28">Curl_ftp_connect<pos:position pos:line="475" pos:column="44"/></name></expr>;<pos:position pos:line="475" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="476" pos:column="7">conn<pos:position pos:line="476" pos:column="11"/></name><operator pos:line="476" pos:column="11">-&gt;<pos:position pos:line="476" pos:column="16"/></operator><name pos:line="476" pos:column="13">curl_disconnect<pos:position pos:line="476" pos:column="28"/></name></name> <operator pos:line="476" pos:column="29">=<pos:position pos:line="476" pos:column="30"/></operator> <name pos:line="476" pos:column="31">Curl_ftp_disconnect<pos:position pos:line="476" pos:column="50"/></name></expr>;<pos:position pos:line="476" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="477" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="479" pos:column="5">conn<pos:position pos:line="479" pos:column="9"/></name><operator pos:line="479" pos:column="9">-&gt;<pos:position pos:line="479" pos:column="14"/></operator><name pos:line="479" pos:column="11">ppath<pos:position pos:line="479" pos:column="16"/></name></name><operator pos:line="479" pos:column="16">++<pos:position pos:line="479" pos:column="18"/></operator></expr>;<pos:position pos:line="479" pos:column="19"/></expr_stmt> <comment type="block" pos:line="479" pos:column="20">/* don't include the initial slash */</comment>

    <comment type="block" pos:line="481" pos:column="5">/* FTP URLs support an extension like ";type=&lt;typecode&gt;" that
     * we'll try to get now! */</comment>
    <expr_stmt><expr><name pos:line="483" pos:column="5">type<pos:position pos:line="483" pos:column="9"/></name><operator pos:line="483" pos:column="9">=<pos:position pos:line="483" pos:column="10"/></operator><call><name pos:line="483" pos:column="10">strstr<pos:position pos:line="483" pos:column="16"/></name><argument_list pos:line="483" pos:column="16">(<argument><expr><name><name pos:line="483" pos:column="17">conn<pos:position pos:line="483" pos:column="21"/></name><operator pos:line="483" pos:column="21">-&gt;<pos:position pos:line="483" pos:column="26"/></operator><name pos:line="483" pos:column="23">ppath<pos:position pos:line="483" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="483" pos:column="30">";type="<pos:position pos:line="483" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="483" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="40"/></expr_stmt>
    <if pos:line="484" pos:column="5">if<condition pos:line="484" pos:column="7">(<expr><operator pos:line="484" pos:column="8">!<pos:position pos:line="484" pos:column="9"/></operator><name pos:line="484" pos:column="9">type<pos:position pos:line="484" pos:column="13"/></name></expr>)<pos:position pos:line="484" pos:column="14"/></condition><then pos:line="484" pos:column="14"> <block pos:line="484" pos:column="15">{
      <expr_stmt><expr><name pos:line="485" pos:column="7">type<pos:position pos:line="485" pos:column="11"/></name><operator pos:line="485" pos:column="11">=<pos:position pos:line="485" pos:column="12"/></operator><call><name pos:line="485" pos:column="12">strstr<pos:position pos:line="485" pos:column="18"/></name><argument_list pos:line="485" pos:column="18">(<argument><expr><name><name pos:line="485" pos:column="19">conn<pos:position pos:line="485" pos:column="23"/></name><operator pos:line="485" pos:column="23">-&gt;<pos:position pos:line="485" pos:column="28"/></operator><name pos:line="485" pos:column="25">gname<pos:position pos:line="485" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="485" pos:column="32">";type="<pos:position pos:line="485" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="485" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="486" pos:column="6"/></block></then></if>
    <if pos:line="487" pos:column="5">if<condition pos:line="487" pos:column="7">(<expr><name pos:line="487" pos:column="8">type<pos:position pos:line="487" pos:column="12"/></name></expr>)<pos:position pos:line="487" pos:column="13"/></condition><then pos:line="487" pos:column="13"> <block pos:line="487" pos:column="14">{
      <decl_stmt><decl><type><name pos:line="488" pos:column="7">char<pos:position pos:line="488" pos:column="11"/></name></type> <name pos:line="488" pos:column="12">command<pos:position pos:line="488" pos:column="19"/></name></decl>;<pos:position pos:line="488" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><operator pos:line="489" pos:column="7">*<pos:position pos:line="489" pos:column="8"/></operator><name pos:line="489" pos:column="8">type<pos:position pos:line="489" pos:column="12"/></name><operator pos:line="489" pos:column="12">=<pos:position pos:line="489" pos:column="13"/></operator><literal type="number" pos:line="489" pos:column="13">0<pos:position pos:line="489" pos:column="14"/></literal></expr>;<pos:position pos:line="489" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="490" pos:column="7">command<pos:position pos:line="490" pos:column="14"/></name> <operator pos:line="490" pos:column="15">=<pos:position pos:line="490" pos:column="16"/></operator> <call><name pos:line="490" pos:column="17">toupper<pos:position pos:line="490" pos:column="24"/></name><argument_list pos:line="490" pos:column="24">(<argument><expr><name><name pos:line="490" pos:column="25">type<pos:position pos:line="490" pos:column="29"/></name><index pos:line="490" pos:column="29">[<expr><literal type="number" pos:line="490" pos:column="30">6<pos:position pos:line="490" pos:column="31"/></literal></expr>]<pos:position pos:line="490" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="490" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="34"/></expr_stmt>
      <switch pos:line="491" pos:column="7">switch<condition pos:line="491" pos:column="13">(<expr><name pos:line="491" pos:column="14">command<pos:position pos:line="491" pos:column="21"/></name></expr>)<pos:position pos:line="491" pos:column="22"/></condition> <block pos:line="491" pos:column="23">{
      <case pos:line="492" pos:column="7">case <expr><literal type="char" pos:line="492" pos:column="12">'A'<pos:position pos:line="492" pos:column="15"/></literal></expr>:<pos:position pos:line="492" pos:column="16"/></case> <comment type="block" pos:line="492" pos:column="17">/* ASCII mode */</comment>
	<expr_stmt><expr><name><name pos:line="493" pos:column="9">data<pos:position pos:line="493" pos:column="13"/></name><operator pos:line="493" pos:column="13">-&gt;<pos:position pos:line="493" pos:column="18"/></operator><name pos:line="493" pos:column="15">set<pos:position pos:line="493" pos:column="18"/></name><operator pos:line="493" pos:column="18">.<pos:position pos:line="493" pos:column="19"/></operator><name pos:line="493" pos:column="19">ftp_ascii<pos:position pos:line="493" pos:column="28"/></name></name> <operator pos:line="493" pos:column="29">=<pos:position pos:line="493" pos:column="30"/></operator> <literal type="number" pos:line="493" pos:column="31">1<pos:position pos:line="493" pos:column="32"/></literal></expr>;<pos:position pos:line="493" pos:column="33"/></expr_stmt>
	<break pos:line="494" pos:column="9">break;<pos:position pos:line="494" pos:column="15"/></break>
      <case pos:line="495" pos:column="7">case <expr><literal type="char" pos:line="495" pos:column="12">'D'<pos:position pos:line="495" pos:column="15"/></literal></expr>:<pos:position pos:line="495" pos:column="16"/></case> <comment type="block" pos:line="495" pos:column="17">/* directory mode */</comment>
	<expr_stmt><expr><name><name pos:line="496" pos:column="9">data<pos:position pos:line="496" pos:column="13"/></name><operator pos:line="496" pos:column="13">-&gt;<pos:position pos:line="496" pos:column="18"/></operator><name pos:line="496" pos:column="15">set<pos:position pos:line="496" pos:column="18"/></name><operator pos:line="496" pos:column="18">.<pos:position pos:line="496" pos:column="19"/></operator><name pos:line="496" pos:column="19">ftp_list_only<pos:position pos:line="496" pos:column="32"/></name></name> <operator pos:line="496" pos:column="33">=<pos:position pos:line="496" pos:column="34"/></operator> <literal type="number" pos:line="496" pos:column="35">1<pos:position pos:line="496" pos:column="36"/></literal></expr>;<pos:position pos:line="496" pos:column="37"/></expr_stmt>
	<break pos:line="497" pos:column="9">break;<pos:position pos:line="497" pos:column="15"/></break>
      <case pos:line="498" pos:column="7">case <expr><literal type="char" pos:line="498" pos:column="12">'I'<pos:position pos:line="498" pos:column="15"/></literal></expr>:<pos:position pos:line="498" pos:column="16"/></case> <comment type="block" pos:line="498" pos:column="17">/* binary mode */</comment>
      <default pos:line="499" pos:column="7">default:<pos:position pos:line="499" pos:column="15"/></default>
	<comment type="block" pos:line="500" pos:column="9">/* switch off ASCII */</comment>
	<expr_stmt><expr><name><name pos:line="501" pos:column="9">data<pos:position pos:line="501" pos:column="13"/></name><operator pos:line="501" pos:column="13">-&gt;<pos:position pos:line="501" pos:column="18"/></operator><name pos:line="501" pos:column="15">set<pos:position pos:line="501" pos:column="18"/></name><operator pos:line="501" pos:column="18">.<pos:position pos:line="501" pos:column="19"/></operator><name pos:line="501" pos:column="19">ftp_ascii<pos:position pos:line="501" pos:column="28"/></name></name> <operator pos:line="501" pos:column="29">=<pos:position pos:line="501" pos:column="30"/></operator> <literal type="number" pos:line="501" pos:column="31">0<pos:position pos:line="501" pos:column="32"/></literal></expr>;<pos:position pos:line="501" pos:column="33"/></expr_stmt>
	<break pos:line="502" pos:column="9">break;<pos:position pos:line="502" pos:column="15"/></break>
      }<pos:position pos:line="503" pos:column="8"/></block></switch>
    }<pos:position pos:line="504" pos:column="6"/></block></then></if>
  }<pos:position pos:line="505" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="506" pos:column="3">else <if pos:line="506" pos:column="8">if<condition pos:line="506" pos:column="10">(<expr><call><name pos:line="506" pos:column="11">strequal<pos:position pos:line="506" pos:column="19"/></name><argument_list pos:line="506" pos:column="19">(<argument><expr><name><name pos:line="506" pos:column="20">conn<pos:position pos:line="506" pos:column="24"/></name><operator pos:line="506" pos:column="24">-&gt;<pos:position pos:line="506" pos:column="29"/></operator><name pos:line="506" pos:column="26">protostr<pos:position pos:line="506" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="506" pos:column="36">"TELNET"<pos:position pos:line="506" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="506" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="506" pos:column="46"/></condition><then pos:line="506" pos:column="46"> <block pos:line="506" pos:column="47">{
    <comment type="block" pos:line="507" pos:column="5">/* telnet testing factory */</comment>
    <expr_stmt><expr><name><name pos:line="508" pos:column="5">conn<pos:position pos:line="508" pos:column="9"/></name><operator pos:line="508" pos:column="9">-&gt;<pos:position pos:line="508" pos:column="14"/></operator><name pos:line="508" pos:column="11">protocol<pos:position pos:line="508" pos:column="19"/></name></name> <operator pos:line="508" pos:column="20">|=<pos:position pos:line="508" pos:column="22"/></operator> <name pos:line="508" pos:column="23">PROT_TELNET<pos:position pos:line="508" pos:column="34"/></name></expr>;<pos:position pos:line="508" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="510" pos:column="5">conn<pos:position pos:line="510" pos:column="9"/></name><operator pos:line="510" pos:column="9">-&gt;<pos:position pos:line="510" pos:column="14"/></operator><name pos:line="510" pos:column="11">port<pos:position pos:line="510" pos:column="15"/></name></name> <operator pos:line="510" pos:column="16">=<pos:position pos:line="510" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="510" pos:column="18">(<pos:position pos:line="510" pos:column="19"/></operator><name><name pos:line="510" pos:column="19">data<pos:position pos:line="510" pos:column="23"/></name><operator pos:line="510" pos:column="23">-&gt;<pos:position pos:line="510" pos:column="28"/></operator><name pos:line="510" pos:column="25">set<pos:position pos:line="510" pos:column="28"/></name><operator pos:line="510" pos:column="28">.<pos:position pos:line="510" pos:column="29"/></operator><name pos:line="510" pos:column="29">use_port<pos:position pos:line="510" pos:column="37"/></name></name> <operator pos:line="510" pos:column="38">&amp;&amp;<pos:position pos:line="510" pos:column="48"/></operator> <name pos:line="510" pos:column="41">allow_port<pos:position pos:line="510" pos:column="51"/></name><operator pos:line="510" pos:column="51">)<pos:position pos:line="510" pos:column="52"/></operator></expr>?<pos:position pos:line="510" pos:column="53"/></condition><then><expr><name><name pos:line="510" pos:column="53">data<pos:position pos:line="510" pos:column="57"/></name><operator pos:line="510" pos:column="57">-&gt;<pos:position pos:line="510" pos:column="62"/></operator><name pos:line="510" pos:column="59">set<pos:position pos:line="510" pos:column="62"/></name><operator pos:line="510" pos:column="62">.<pos:position pos:line="510" pos:column="63"/></operator><name pos:line="510" pos:column="63">use_port<pos:position pos:line="510" pos:column="71"/></name></name></expr></then><else pos:line="510" pos:column="71">: <expr><name pos:line="510" pos:column="73">PORT_TELNET<pos:position pos:line="510" pos:column="84"/></name></expr></else></ternary></expr>;<pos:position pos:line="510" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="511" pos:column="5">conn<pos:position pos:line="511" pos:column="9"/></name><operator pos:line="511" pos:column="9">-&gt;<pos:position pos:line="511" pos:column="14"/></operator><name pos:line="511" pos:column="11">remote_port<pos:position pos:line="511" pos:column="22"/></name></name> <operator pos:line="511" pos:column="23">=<pos:position pos:line="511" pos:column="24"/></operator> <name pos:line="511" pos:column="25">PORT_TELNET<pos:position pos:line="511" pos:column="36"/></name></expr>;<pos:position pos:line="511" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="512" pos:column="5">conn<pos:position pos:line="512" pos:column="9"/></name><operator pos:line="512" pos:column="9">-&gt;<pos:position pos:line="512" pos:column="14"/></operator><name pos:line="512" pos:column="11">curl_do<pos:position pos:line="512" pos:column="18"/></name></name> <operator pos:line="512" pos:column="19">=<pos:position pos:line="512" pos:column="20"/></operator> <name pos:line="512" pos:column="21">Curl_telnet<pos:position pos:line="512" pos:column="32"/></name></expr>;<pos:position pos:line="512" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="513" pos:column="5">conn<pos:position pos:line="513" pos:column="9"/></name><operator pos:line="513" pos:column="9">-&gt;<pos:position pos:line="513" pos:column="14"/></operator><name pos:line="513" pos:column="11">curl_done<pos:position pos:line="513" pos:column="20"/></name></name> <operator pos:line="513" pos:column="21">=<pos:position pos:line="513" pos:column="22"/></operator> <name pos:line="513" pos:column="23">Curl_telnet_done<pos:position pos:line="513" pos:column="39"/></name></expr>;<pos:position pos:line="513" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="514" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="515" pos:column="3">else <if pos:line="515" pos:column="8">if <condition pos:line="515" pos:column="11">(<expr><call><name pos:line="515" pos:column="12">strequal<pos:position pos:line="515" pos:column="20"/></name><argument_list pos:line="515" pos:column="20">(<argument><expr><name><name pos:line="515" pos:column="21">conn<pos:position pos:line="515" pos:column="25"/></name><operator pos:line="515" pos:column="25">-&gt;<pos:position pos:line="515" pos:column="30"/></operator><name pos:line="515" pos:column="27">protostr<pos:position pos:line="515" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="37">"DICT"<pos:position pos:line="515" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="515" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="515" pos:column="45"/></condition><then pos:line="515" pos:column="45"> <block pos:line="515" pos:column="46">{
    <expr_stmt><expr><name><name pos:line="516" pos:column="5">conn<pos:position pos:line="516" pos:column="9"/></name><operator pos:line="516" pos:column="9">-&gt;<pos:position pos:line="516" pos:column="14"/></operator><name pos:line="516" pos:column="11">protocol<pos:position pos:line="516" pos:column="19"/></name></name> <operator pos:line="516" pos:column="20">|=<pos:position pos:line="516" pos:column="22"/></operator> <name pos:line="516" pos:column="23">PROT_DICT<pos:position pos:line="516" pos:column="32"/></name></expr>;<pos:position pos:line="516" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="517" pos:column="5">conn<pos:position pos:line="517" pos:column="9"/></name><operator pos:line="517" pos:column="9">-&gt;<pos:position pos:line="517" pos:column="14"/></operator><name pos:line="517" pos:column="11">port<pos:position pos:line="517" pos:column="15"/></name></name> <operator pos:line="517" pos:column="16">=<pos:position pos:line="517" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="517" pos:column="18">(<pos:position pos:line="517" pos:column="19"/></operator><name><name pos:line="517" pos:column="19">data<pos:position pos:line="517" pos:column="23"/></name><operator pos:line="517" pos:column="23">-&gt;<pos:position pos:line="517" pos:column="28"/></operator><name pos:line="517" pos:column="25">set<pos:position pos:line="517" pos:column="28"/></name><operator pos:line="517" pos:column="28">.<pos:position pos:line="517" pos:column="29"/></operator><name pos:line="517" pos:column="29">use_port<pos:position pos:line="517" pos:column="37"/></name></name> <operator pos:line="517" pos:column="38">&amp;&amp;<pos:position pos:line="517" pos:column="48"/></operator> <name pos:line="517" pos:column="41">allow_port<pos:position pos:line="517" pos:column="51"/></name><operator pos:line="517" pos:column="51">)<pos:position pos:line="517" pos:column="52"/></operator></expr>?<pos:position pos:line="517" pos:column="53"/></condition><then><expr><name><name pos:line="517" pos:column="53">data<pos:position pos:line="517" pos:column="57"/></name><operator pos:line="517" pos:column="57">-&gt;<pos:position pos:line="517" pos:column="62"/></operator><name pos:line="517" pos:column="59">set<pos:position pos:line="517" pos:column="62"/></name><operator pos:line="517" pos:column="62">.<pos:position pos:line="517" pos:column="63"/></operator><name pos:line="517" pos:column="63">use_port<pos:position pos:line="517" pos:column="71"/></name></name></expr></then><else pos:line="517" pos:column="71">:<expr><name pos:line="517" pos:column="72">PORT_DICT<pos:position pos:line="517" pos:column="81"/></name></expr></else></ternary></expr>;<pos:position pos:line="517" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="518" pos:column="5">conn<pos:position pos:line="518" pos:column="9"/></name><operator pos:line="518" pos:column="9">-&gt;<pos:position pos:line="518" pos:column="14"/></operator><name pos:line="518" pos:column="11">remote_port<pos:position pos:line="518" pos:column="22"/></name></name> <operator pos:line="518" pos:column="23">=<pos:position pos:line="518" pos:column="24"/></operator> <name pos:line="518" pos:column="25">PORT_DICT<pos:position pos:line="518" pos:column="34"/></name></expr>;<pos:position pos:line="518" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="519" pos:column="5">conn<pos:position pos:line="519" pos:column="9"/></name><operator pos:line="519" pos:column="9">-&gt;<pos:position pos:line="519" pos:column="14"/></operator><name pos:line="519" pos:column="11">curl_do<pos:position pos:line="519" pos:column="18"/></name></name> <operator pos:line="519" pos:column="19">=<pos:position pos:line="519" pos:column="20"/></operator> <name pos:line="519" pos:column="21">Curl_dict<pos:position pos:line="519" pos:column="30"/></name></expr>;<pos:position pos:line="519" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="520" pos:column="5">conn<pos:position pos:line="520" pos:column="9"/></name><operator pos:line="520" pos:column="9">-&gt;<pos:position pos:line="520" pos:column="14"/></operator><name pos:line="520" pos:column="11">curl_done<pos:position pos:line="520" pos:column="20"/></name></name> <operator pos:line="520" pos:column="21">=<pos:position pos:line="520" pos:column="22"/></operator> <name pos:line="520" pos:column="23">NULL<pos:position pos:line="520" pos:column="27"/></name></expr>;<pos:position pos:line="520" pos:column="28"/></expr_stmt> <comment type="block" pos:line="520" pos:column="29">/* no DICT-specific done */</comment>
  }<pos:position pos:line="521" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="522" pos:column="3">else <if pos:line="522" pos:column="8">if <condition pos:line="522" pos:column="11">(<expr><call><name pos:line="522" pos:column="12">strequal<pos:position pos:line="522" pos:column="20"/></name><argument_list pos:line="522" pos:column="20">(<argument><expr><name><name pos:line="522" pos:column="21">conn<pos:position pos:line="522" pos:column="25"/></name><operator pos:line="522" pos:column="25">-&gt;<pos:position pos:line="522" pos:column="30"/></operator><name pos:line="522" pos:column="27">protostr<pos:position pos:line="522" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="522" pos:column="37">"LDAP"<pos:position pos:line="522" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="522" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="522" pos:column="45"/></condition><then pos:line="522" pos:column="45"> <block pos:line="522" pos:column="46">{
    <expr_stmt><expr><name><name pos:line="523" pos:column="5">conn<pos:position pos:line="523" pos:column="9"/></name><operator pos:line="523" pos:column="9">-&gt;<pos:position pos:line="523" pos:column="14"/></operator><name pos:line="523" pos:column="11">protocol<pos:position pos:line="523" pos:column="19"/></name></name> <operator pos:line="523" pos:column="20">|=<pos:position pos:line="523" pos:column="22"/></operator> <name pos:line="523" pos:column="23">PROT_LDAP<pos:position pos:line="523" pos:column="32"/></name></expr>;<pos:position pos:line="523" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="524" pos:column="5">conn<pos:position pos:line="524" pos:column="9"/></name><operator pos:line="524" pos:column="9">-&gt;<pos:position pos:line="524" pos:column="14"/></operator><name pos:line="524" pos:column="11">port<pos:position pos:line="524" pos:column="15"/></name></name> <operator pos:line="524" pos:column="16">=<pos:position pos:line="524" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="524" pos:column="18">(<pos:position pos:line="524" pos:column="19"/></operator><name><name pos:line="524" pos:column="19">data<pos:position pos:line="524" pos:column="23"/></name><operator pos:line="524" pos:column="23">-&gt;<pos:position pos:line="524" pos:column="28"/></operator><name pos:line="524" pos:column="25">set<pos:position pos:line="524" pos:column="28"/></name><operator pos:line="524" pos:column="28">.<pos:position pos:line="524" pos:column="29"/></operator><name pos:line="524" pos:column="29">use_port<pos:position pos:line="524" pos:column="37"/></name></name> <operator pos:line="524" pos:column="38">&amp;&amp;<pos:position pos:line="524" pos:column="48"/></operator> <name pos:line="524" pos:column="41">allow_port<pos:position pos:line="524" pos:column="51"/></name><operator pos:line="524" pos:column="51">)<pos:position pos:line="524" pos:column="52"/></operator></expr>?<pos:position pos:line="524" pos:column="53"/></condition><then><expr><name><name pos:line="524" pos:column="53">data<pos:position pos:line="524" pos:column="57"/></name><operator pos:line="524" pos:column="57">-&gt;<pos:position pos:line="524" pos:column="62"/></operator><name pos:line="524" pos:column="59">set<pos:position pos:line="524" pos:column="62"/></name><operator pos:line="524" pos:column="62">.<pos:position pos:line="524" pos:column="63"/></operator><name pos:line="524" pos:column="63">use_port<pos:position pos:line="524" pos:column="71"/></name></name></expr></then><else pos:line="524" pos:column="71">:<expr><name pos:line="524" pos:column="72">PORT_LDAP<pos:position pos:line="524" pos:column="81"/></name></expr></else></ternary></expr>;<pos:position pos:line="524" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="525" pos:column="5">conn<pos:position pos:line="525" pos:column="9"/></name><operator pos:line="525" pos:column="9">-&gt;<pos:position pos:line="525" pos:column="14"/></operator><name pos:line="525" pos:column="11">remote_port<pos:position pos:line="525" pos:column="22"/></name></name> <operator pos:line="525" pos:column="23">=<pos:position pos:line="525" pos:column="24"/></operator> <name pos:line="525" pos:column="25">PORT_LDAP<pos:position pos:line="525" pos:column="34"/></name></expr>;<pos:position pos:line="525" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="526" pos:column="5">conn<pos:position pos:line="526" pos:column="9"/></name><operator pos:line="526" pos:column="9">-&gt;<pos:position pos:line="526" pos:column="14"/></operator><name pos:line="526" pos:column="11">curl_do<pos:position pos:line="526" pos:column="18"/></name></name> <operator pos:line="526" pos:column="19">=<pos:position pos:line="526" pos:column="20"/></operator> <name pos:line="526" pos:column="21">Curl_ldap<pos:position pos:line="526" pos:column="30"/></name></expr>;<pos:position pos:line="526" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="527" pos:column="5">conn<pos:position pos:line="527" pos:column="9"/></name><operator pos:line="527" pos:column="9">-&gt;<pos:position pos:line="527" pos:column="14"/></operator><name pos:line="527" pos:column="11">curl_done<pos:position pos:line="527" pos:column="20"/></name></name> <operator pos:line="527" pos:column="21">=<pos:position pos:line="527" pos:column="22"/></operator> <name pos:line="527" pos:column="23">NULL<pos:position pos:line="527" pos:column="27"/></name></expr>;<pos:position pos:line="527" pos:column="28"/></expr_stmt> <comment type="block" pos:line="527" pos:column="29">/* no LDAP-specific done */</comment>
  }<pos:position pos:line="528" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="529" pos:column="3">else <if pos:line="529" pos:column="8">if <condition pos:line="529" pos:column="11">(<expr><call><name pos:line="529" pos:column="12">strequal<pos:position pos:line="529" pos:column="20"/></name><argument_list pos:line="529" pos:column="20">(<argument><expr><name><name pos:line="529" pos:column="21">conn<pos:position pos:line="529" pos:column="25"/></name><operator pos:line="529" pos:column="25">-&gt;<pos:position pos:line="529" pos:column="30"/></operator><name pos:line="529" pos:column="27">protostr<pos:position pos:line="529" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="529" pos:column="37">"FILE"<pos:position pos:line="529" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="529" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="529" pos:column="45"/></condition><then pos:line="529" pos:column="45"> <block pos:line="529" pos:column="46">{
    <expr_stmt><expr><name><name pos:line="530" pos:column="5">conn<pos:position pos:line="530" pos:column="9"/></name><operator pos:line="530" pos:column="9">-&gt;<pos:position pos:line="530" pos:column="14"/></operator><name pos:line="530" pos:column="11">protocol<pos:position pos:line="530" pos:column="19"/></name></name> <operator pos:line="530" pos:column="20">|=<pos:position pos:line="530" pos:column="22"/></operator> <name pos:line="530" pos:column="23">PROT_FILE<pos:position pos:line="530" pos:column="32"/></name></expr>;<pos:position pos:line="530" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="532" pos:column="5">conn<pos:position pos:line="532" pos:column="9"/></name><operator pos:line="532" pos:column="9">-&gt;<pos:position pos:line="532" pos:column="14"/></operator><name pos:line="532" pos:column="11">curl_do<pos:position pos:line="532" pos:column="18"/></name></name> <operator pos:line="532" pos:column="19">=<pos:position pos:line="532" pos:column="20"/></operator> <name pos:line="532" pos:column="21">Curl_file<pos:position pos:line="532" pos:column="30"/></name></expr>;<pos:position pos:line="532" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="533" pos:column="5">/* no done() function */</comment>

    <comment type="block" pos:line="535" pos:column="5">/* anyway, this is supposed to be the connect function so we better
       at least check that the file is present here! */</comment>
    <expr_stmt><expr><name pos:line="537" pos:column="5">result<pos:position pos:line="537" pos:column="11"/></name> <operator pos:line="537" pos:column="12">=<pos:position pos:line="537" pos:column="13"/></operator> <call><name pos:line="537" pos:column="14">Curl_file_connect<pos:position pos:line="537" pos:column="31"/></name><argument_list pos:line="537" pos:column="31">(<argument><expr><name pos:line="537" pos:column="32">conn<pos:position pos:line="537" pos:column="36"/></name></expr></argument>)<pos:position pos:line="537" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="539" pos:column="5">/* Setup a "faked" transfer that'll do nothing */</comment>
    <if pos:line="540" pos:column="5">if<condition pos:line="540" pos:column="7">(<expr><name pos:line="540" pos:column="8">CURLE_OK<pos:position pos:line="540" pos:column="16"/></name> <operator pos:line="540" pos:column="17">==<pos:position pos:line="540" pos:column="19"/></operator> <name pos:line="540" pos:column="20">result<pos:position pos:line="540" pos:column="26"/></name></expr>)<pos:position pos:line="540" pos:column="27"/></condition><then pos:line="540" pos:column="27"> <block pos:line="540" pos:column="28">{
      <expr_stmt><expr><name pos:line="541" pos:column="7">result<pos:position pos:line="541" pos:column="13"/></name> <operator pos:line="541" pos:column="14">=<pos:position pos:line="541" pos:column="15"/></operator> <call><name pos:line="541" pos:column="16">Curl_Transfer<pos:position pos:line="541" pos:column="29"/></name><argument_list pos:line="541" pos:column="29">(<argument><expr><name pos:line="541" pos:column="30">conn<pos:position pos:line="541" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="541" pos:column="36">-<pos:position pos:line="541" pos:column="37"/></operator><literal type="number" pos:line="541" pos:column="37">1<pos:position pos:line="541" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="541" pos:column="40">-<pos:position pos:line="541" pos:column="41"/></operator><literal type="number" pos:line="541" pos:column="41">1<pos:position pos:line="541" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="541" pos:column="44">FALSE<pos:position pos:line="541" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="541" pos:column="51">NULL<pos:position pos:line="541" pos:column="55"/></name></expr></argument>, <comment type="block" pos:line="541" pos:column="57">/* no download */</comment>
                             <argument><expr><operator pos:line="542" pos:column="30">-<pos:position pos:line="542" pos:column="31"/></operator><literal type="number" pos:line="542" pos:column="31">1<pos:position pos:line="542" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="542" pos:column="34">NULL<pos:position pos:line="542" pos:column="38"/></name></expr></argument>)<pos:position pos:line="542" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="542" pos:column="40"/></expr_stmt> <comment type="block" pos:line="542" pos:column="41">/* no upload */</comment>
    }<pos:position pos:line="543" pos:column="6"/></block></then></if>

    <return pos:line="545" pos:column="5">return <expr><name pos:line="545" pos:column="12">result<pos:position pos:line="545" pos:column="18"/></name></expr>;<pos:position pos:line="545" pos:column="19"/></return>
  }<pos:position pos:line="546" pos:column="4"/></block></then></if></elseif>
  <else pos:line="547" pos:column="3">else <block pos:line="547" pos:column="8">{
    <comment type="block" pos:line="548" pos:column="5">/* We fell through all checks and thus we don't support the specified
       protocol */</comment>
    <expr_stmt><expr><call><name pos:line="550" pos:column="5">failf<pos:position pos:line="550" pos:column="10"/></name><argument_list pos:line="550" pos:column="10">(<argument><expr><name pos:line="550" pos:column="11">data<pos:position pos:line="550" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="550" pos:column="17">"Unsupported protocol: %s"<pos:position pos:line="550" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="550" pos:column="45">conn<pos:position pos:line="550" pos:column="49"/></name><operator pos:line="550" pos:column="49">-&gt;<pos:position pos:line="550" pos:column="54"/></operator><name pos:line="550" pos:column="51">protostr<pos:position pos:line="550" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="550" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="61"/></expr_stmt>
    <return pos:line="551" pos:column="5">return <expr><name pos:line="551" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="551" pos:column="38"/></name></expr>;<pos:position pos:line="551" pos:column="39"/></return>
  }<pos:position pos:line="552" pos:column="4"/></block></else></if>

  <comment type="block" format="doxygen" pos:line="554" pos:column="3">/*************************************************************
   * .netrc scanning coming up
   *************************************************************/</comment>
  <if pos:line="557" pos:column="3">if<condition pos:line="557" pos:column="5">(<expr><name><name pos:line="557" pos:column="6">data<pos:position pos:line="557" pos:column="10"/></name><operator pos:line="557" pos:column="10">-&gt;<pos:position pos:line="557" pos:column="15"/></operator><name pos:line="557" pos:column="12">set<pos:position pos:line="557" pos:column="15"/></name><operator pos:line="557" pos:column="15">.<pos:position pos:line="557" pos:column="16"/></operator><name pos:line="557" pos:column="16">use_netrc<pos:position pos:line="557" pos:column="25"/></name></name></expr>)<pos:position pos:line="557" pos:column="26"/></condition><then pos:line="557" pos:column="26"> <block pos:line="557" pos:column="27">{
    <if pos:line="558" pos:column="5">if<condition pos:line="558" pos:column="7">(<expr><call><name pos:line="558" pos:column="8">Curl_parsenetrc<pos:position pos:line="558" pos:column="23"/></name><argument_list pos:line="558" pos:column="23">(<argument><expr><name><name pos:line="558" pos:column="24">conn<pos:position pos:line="558" pos:column="28"/></name><operator pos:line="558" pos:column="28">-&gt;<pos:position pos:line="558" pos:column="33"/></operator><name pos:line="558" pos:column="30">hostname<pos:position pos:line="558" pos:column="38"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="559" pos:column="24">data<pos:position pos:line="559" pos:column="28"/></name><operator pos:line="559" pos:column="28">-&gt;<pos:position pos:line="559" pos:column="33"/></operator><name pos:line="559" pos:column="30">state<pos:position pos:line="559" pos:column="35"/></name><operator pos:line="559" pos:column="35">.<pos:position pos:line="559" pos:column="36"/></operator><name pos:line="559" pos:column="36">user<pos:position pos:line="559" pos:column="40"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="560" pos:column="24">data<pos:position pos:line="560" pos:column="28"/></name><operator pos:line="560" pos:column="28">-&gt;<pos:position pos:line="560" pos:column="33"/></operator><name pos:line="560" pos:column="30">state<pos:position pos:line="560" pos:column="35"/></name><operator pos:line="560" pos:column="35">.<pos:position pos:line="560" pos:column="36"/></operator><name pos:line="560" pos:column="36">passwd<pos:position pos:line="560" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="560" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="560" pos:column="44"/></condition><then pos:line="560" pos:column="44"> <block pos:line="560" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="561" pos:column="7">infof<pos:position pos:line="561" pos:column="12"/></name><argument_list pos:line="561" pos:column="12">(<argument><expr><name pos:line="561" pos:column="13">data<pos:position pos:line="561" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="561" pos:column="19">"Couldn't find host %s in the .netrc file, using defaults"<pos:position pos:line="561" pos:column="77"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="562" pos:column="13">conn<pos:position pos:line="562" pos:column="17"/></name><operator pos:line="562" pos:column="17">-&gt;<pos:position pos:line="562" pos:column="22"/></operator><name pos:line="562" pos:column="19">hostname<pos:position pos:line="562" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="562" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="562" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="563" pos:column="6"/></block></then>
    <else pos:line="564" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="565" pos:column="7">conn<pos:position pos:line="565" pos:column="11"/></name><operator pos:line="565" pos:column="11">-&gt;<pos:position pos:line="565" pos:column="16"/></operator><name pos:line="565" pos:column="13">bits<pos:position pos:line="565" pos:column="17"/></name><operator pos:line="565" pos:column="17">.<pos:position pos:line="565" pos:column="18"/></operator><name pos:line="565" pos:column="18">user_passwd<pos:position pos:line="565" pos:column="29"/></name></name> <operator pos:line="565" pos:column="30">=<pos:position pos:line="565" pos:column="31"/></operator> <literal type="number" pos:line="565" pos:column="32">1<pos:position pos:line="565" pos:column="33"/></literal></expr>;<pos:position pos:line="565" pos:column="34"/></expr_stmt></block></else></if> <comment type="block" pos:line="565" pos:column="35">/* enable user+password */</comment>

    <comment type="block" pos:line="567" pos:column="5">/* weather we failed or not, we don't know which fields that were filled
       in anyway */</comment>
    <if pos:line="569" pos:column="5">if<condition pos:line="569" pos:column="7">(<expr><operator pos:line="569" pos:column="8">!<pos:position pos:line="569" pos:column="9"/></operator><name><name pos:line="569" pos:column="9">data<pos:position pos:line="569" pos:column="13"/></name><operator pos:line="569" pos:column="13">-&gt;<pos:position pos:line="569" pos:column="18"/></operator><name pos:line="569" pos:column="15">state<pos:position pos:line="569" pos:column="20"/></name><operator pos:line="569" pos:column="20">.<pos:position pos:line="569" pos:column="21"/></operator><name pos:line="569" pos:column="21">user<pos:position pos:line="569" pos:column="25"/></name><index pos:line="569" pos:column="25">[<expr><literal type="number" pos:line="569" pos:column="26">0<pos:position pos:line="569" pos:column="27"/></literal></expr>]<pos:position pos:line="569" pos:column="28"/></index></name></expr>)<pos:position pos:line="569" pos:column="29"/></condition><then pos:line="569" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="570" pos:column="7">strcpy<pos:position pos:line="570" pos:column="13"/></name><argument_list pos:line="570" pos:column="13">(<argument><expr><name><name pos:line="570" pos:column="14">data<pos:position pos:line="570" pos:column="18"/></name><operator pos:line="570" pos:column="18">-&gt;<pos:position pos:line="570" pos:column="23"/></operator><name pos:line="570" pos:column="20">state<pos:position pos:line="570" pos:column="25"/></name><operator pos:line="570" pos:column="25">.<pos:position pos:line="570" pos:column="26"/></operator><name pos:line="570" pos:column="26">user<pos:position pos:line="570" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="570" pos:column="32">CURL_DEFAULT_USER<pos:position pos:line="570" pos:column="49"/></name></expr></argument>)<pos:position pos:line="570" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="570" pos:column="51"/></expr_stmt></block></then></if>
    <if pos:line="571" pos:column="5">if<condition pos:line="571" pos:column="7">(<expr><operator pos:line="571" pos:column="8">!<pos:position pos:line="571" pos:column="9"/></operator><name><name pos:line="571" pos:column="9">data<pos:position pos:line="571" pos:column="13"/></name><operator pos:line="571" pos:column="13">-&gt;<pos:position pos:line="571" pos:column="18"/></operator><name pos:line="571" pos:column="15">state<pos:position pos:line="571" pos:column="20"/></name><operator pos:line="571" pos:column="20">.<pos:position pos:line="571" pos:column="21"/></operator><name pos:line="571" pos:column="21">passwd<pos:position pos:line="571" pos:column="27"/></name><index pos:line="571" pos:column="27">[<expr><literal type="number" pos:line="571" pos:column="28">0<pos:position pos:line="571" pos:column="29"/></literal></expr>]<pos:position pos:line="571" pos:column="30"/></index></name></expr>)<pos:position pos:line="571" pos:column="31"/></condition><then pos:line="571" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="572" pos:column="7">strcpy<pos:position pos:line="572" pos:column="13"/></name><argument_list pos:line="572" pos:column="13">(<argument><expr><name><name pos:line="572" pos:column="14">data<pos:position pos:line="572" pos:column="18"/></name><operator pos:line="572" pos:column="18">-&gt;<pos:position pos:line="572" pos:column="23"/></operator><name pos:line="572" pos:column="20">state<pos:position pos:line="572" pos:column="25"/></name><operator pos:line="572" pos:column="25">.<pos:position pos:line="572" pos:column="26"/></operator><name pos:line="572" pos:column="26">passwd<pos:position pos:line="572" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="572" pos:column="34">CURL_DEFAULT_PASSWORD<pos:position pos:line="572" pos:column="55"/></name></expr></argument>)<pos:position pos:line="572" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="57"/></expr_stmt></block></then></if>
  }<pos:position pos:line="573" pos:column="4"/></block></then>
  <elseif pos:line="574" pos:column="3">else <if pos:line="574" pos:column="8">if<condition pos:line="574" pos:column="10">(<expr><operator pos:line="574" pos:column="11">!<pos:position pos:line="574" pos:column="12"/></operator><operator pos:line="574" pos:column="12">(<pos:position pos:line="574" pos:column="13"/></operator><name><name pos:line="574" pos:column="13">conn<pos:position pos:line="574" pos:column="17"/></name><operator pos:line="574" pos:column="17">-&gt;<pos:position pos:line="574" pos:column="22"/></operator><name pos:line="574" pos:column="19">bits<pos:position pos:line="574" pos:column="23"/></name><operator pos:line="574" pos:column="23">.<pos:position pos:line="574" pos:column="24"/></operator><name pos:line="574" pos:column="24">user_passwd<pos:position pos:line="574" pos:column="35"/></name></name><operator pos:line="574" pos:column="35">)<pos:position pos:line="574" pos:column="36"/></operator> <operator pos:line="574" pos:column="37">&amp;&amp;<pos:position pos:line="574" pos:column="47"/></operator>
	  <operator pos:line="575" pos:column="11">(<pos:position pos:line="575" pos:column="12"/></operator><name><name pos:line="575" pos:column="12">conn<pos:position pos:line="575" pos:column="16"/></name><operator pos:line="575" pos:column="16">-&gt;<pos:position pos:line="575" pos:column="21"/></operator><name pos:line="575" pos:column="18">protocol<pos:position pos:line="575" pos:column="26"/></name></name> <operator pos:line="575" pos:column="27">&amp;<pos:position pos:line="575" pos:column="32"/></operator> <operator pos:line="575" pos:column="29">(<pos:position pos:line="575" pos:column="30"/></operator><name pos:line="575" pos:column="30">PROT_FTP<pos:position pos:line="575" pos:column="38"/></name><operator pos:line="575" pos:column="38">|<pos:position pos:line="575" pos:column="39"/></operator><name pos:line="575" pos:column="39">PROT_HTTP<pos:position pos:line="575" pos:column="48"/></name><operator pos:line="575" pos:column="48">)<pos:position pos:line="575" pos:column="49"/></operator><operator pos:line="575" pos:column="49">)<pos:position pos:line="575" pos:column="50"/></operator></expr> )<pos:position pos:line="575" pos:column="52"/></condition><then pos:line="575" pos:column="52"> <block pos:line="575" pos:column="53">{
    <comment type="block" pos:line="576" pos:column="5">/* This is a FTP or HTTP URL, and we haven't got the user+password in
     * the extra parameter, we will now try to extract the possible
     * user+password pair in a string like:
     * ftp://user:password@ftp.my.site:8021/README */</comment>
    <decl_stmt><decl><type><name pos:line="580" pos:column="5">char<pos:position pos:line="580" pos:column="9"/></name> <modifier pos:line="580" pos:column="10">*<pos:position pos:line="580" pos:column="11"/></modifier></type><name pos:line="580" pos:column="11">ptr<pos:position pos:line="580" pos:column="14"/></name><init pos:line="580" pos:column="14">=<expr><name pos:line="580" pos:column="15">NULL<pos:position pos:line="580" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="580" pos:column="20"/></decl_stmt> <comment type="block" pos:line="580" pos:column="21">/* assign to remove possible warnings */</comment>
    <if pos:line="581" pos:column="5">if<condition pos:line="581" pos:column="7">(<expr><operator pos:line="581" pos:column="8">(<pos:position pos:line="581" pos:column="9"/></operator><name pos:line="581" pos:column="9">ptr<pos:position pos:line="581" pos:column="12"/></name><operator pos:line="581" pos:column="12">=<pos:position pos:line="581" pos:column="13"/></operator><call><name pos:line="581" pos:column="13">strchr<pos:position pos:line="581" pos:column="19"/></name><argument_list pos:line="581" pos:column="19">(<argument><expr><name><name pos:line="581" pos:column="20">conn<pos:position pos:line="581" pos:column="24"/></name><operator pos:line="581" pos:column="24">-&gt;<pos:position pos:line="581" pos:column="29"/></operator><name pos:line="581" pos:column="26">name<pos:position pos:line="581" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="581" pos:column="32">'@'<pos:position pos:line="581" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="581" pos:column="36"/></argument_list></call><operator pos:line="581" pos:column="36">)<pos:position pos:line="581" pos:column="37"/></operator></expr>)<pos:position pos:line="581" pos:column="38"/></condition><then pos:line="581" pos:column="38"> <block pos:line="581" pos:column="39">{
      <comment type="block" pos:line="582" pos:column="7">/* there's a user+password given here, to the left of the @ */</comment>

      <expr_stmt><expr><name><name pos:line="584" pos:column="7">data<pos:position pos:line="584" pos:column="11"/></name><operator pos:line="584" pos:column="11">-&gt;<pos:position pos:line="584" pos:column="16"/></operator><name pos:line="584" pos:column="13">state<pos:position pos:line="584" pos:column="18"/></name><operator pos:line="584" pos:column="18">.<pos:position pos:line="584" pos:column="19"/></operator><name pos:line="584" pos:column="19">user<pos:position pos:line="584" pos:column="23"/></name><index pos:line="584" pos:column="23">[<expr><literal type="number" pos:line="584" pos:column="24">0<pos:position pos:line="584" pos:column="25"/></literal></expr>]<pos:position pos:line="584" pos:column="26"/></index></name> <operator pos:line="584" pos:column="27">=<pos:position pos:line="584" pos:column="28"/></operator><literal type="number" pos:line="584" pos:column="28">0<pos:position pos:line="584" pos:column="29"/></literal></expr>;<pos:position pos:line="584" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="585" pos:column="7">data<pos:position pos:line="585" pos:column="11"/></name><operator pos:line="585" pos:column="11">-&gt;<pos:position pos:line="585" pos:column="16"/></operator><name pos:line="585" pos:column="13">state<pos:position pos:line="585" pos:column="18"/></name><operator pos:line="585" pos:column="18">.<pos:position pos:line="585" pos:column="19"/></operator><name pos:line="585" pos:column="19">passwd<pos:position pos:line="585" pos:column="25"/></name><index pos:line="585" pos:column="25">[<expr><literal type="number" pos:line="585" pos:column="26">0<pos:position pos:line="585" pos:column="27"/></literal></expr>]<pos:position pos:line="585" pos:column="28"/></index></name><operator pos:line="585" pos:column="28">=<pos:position pos:line="585" pos:column="29"/></operator><literal type="number" pos:line="585" pos:column="29">0<pos:position pos:line="585" pos:column="30"/></literal></expr>;<pos:position pos:line="585" pos:column="31"/></expr_stmt>

      <if pos:line="587" pos:column="7">if<condition pos:line="587" pos:column="9">(<expr><operator pos:line="587" pos:column="10">*<pos:position pos:line="587" pos:column="11"/></operator><name><name pos:line="587" pos:column="11">conn<pos:position pos:line="587" pos:column="15"/></name><operator pos:line="587" pos:column="15">-&gt;<pos:position pos:line="587" pos:column="20"/></operator><name pos:line="587" pos:column="17">name<pos:position pos:line="587" pos:column="21"/></name></name> <operator pos:line="587" pos:column="22">!=<pos:position pos:line="587" pos:column="24"/></operator> <literal type="char" pos:line="587" pos:column="25">':'<pos:position pos:line="587" pos:column="28"/></literal></expr>)<pos:position pos:line="587" pos:column="29"/></condition><then pos:line="587" pos:column="29"> <block pos:line="587" pos:column="30">{
        <comment type="block" pos:line="588" pos:column="9">/* the name is given, get user+password */</comment>
        <expr_stmt><expr><call><name pos:line="589" pos:column="9">sscanf<pos:position pos:line="589" pos:column="15"/></name><argument_list pos:line="589" pos:column="15">(<argument><expr><name><name pos:line="589" pos:column="16">conn<pos:position pos:line="589" pos:column="20"/></name><operator pos:line="589" pos:column="20">-&gt;<pos:position pos:line="589" pos:column="25"/></operator><name pos:line="589" pos:column="22">name<pos:position pos:line="589" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="589" pos:column="28">"%127[^:@]:%127[^@]"<pos:position pos:line="589" pos:column="48"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="590" pos:column="16">data<pos:position pos:line="590" pos:column="20"/></name><operator pos:line="590" pos:column="20">-&gt;<pos:position pos:line="590" pos:column="25"/></operator><name pos:line="590" pos:column="22">state<pos:position pos:line="590" pos:column="27"/></name><operator pos:line="590" pos:column="27">.<pos:position pos:line="590" pos:column="28"/></operator><name pos:line="590" pos:column="28">user<pos:position pos:line="590" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="590" pos:column="34">data<pos:position pos:line="590" pos:column="38"/></name><operator pos:line="590" pos:column="38">-&gt;<pos:position pos:line="590" pos:column="43"/></operator><name pos:line="590" pos:column="40">state<pos:position pos:line="590" pos:column="45"/></name><operator pos:line="590" pos:column="45">.<pos:position pos:line="590" pos:column="46"/></operator><name pos:line="590" pos:column="46">passwd<pos:position pos:line="590" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="590" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="590" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="591" pos:column="8"/></block></then>
      <else pos:line="592" pos:column="7">else
        <comment type="block" pos:line="593" pos:column="9">/* no name given, get the password only */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="594" pos:column="9">sscanf<pos:position pos:line="594" pos:column="15"/></name><argument_list pos:line="594" pos:column="15">(<argument><expr><name><name pos:line="594" pos:column="16">conn<pos:position pos:line="594" pos:column="20"/></name><operator pos:line="594" pos:column="20">-&gt;<pos:position pos:line="594" pos:column="25"/></operator><name pos:line="594" pos:column="22">name<pos:position pos:line="594" pos:column="26"/></name></name><operator pos:line="594" pos:column="26">+<pos:position pos:line="594" pos:column="27"/></operator><literal type="number" pos:line="594" pos:column="27">1<pos:position pos:line="594" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="594" pos:column="30">"%127[^@]"<pos:position pos:line="594" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="594" pos:column="42">data<pos:position pos:line="594" pos:column="46"/></name><operator pos:line="594" pos:column="46">-&gt;<pos:position pos:line="594" pos:column="51"/></operator><name pos:line="594" pos:column="48">state<pos:position pos:line="594" pos:column="53"/></name><operator pos:line="594" pos:column="53">.<pos:position pos:line="594" pos:column="54"/></operator><name pos:line="594" pos:column="54">passwd<pos:position pos:line="594" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="594" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="62"/></expr_stmt></block></else></if>

      <if pos:line="596" pos:column="7">if<condition pos:line="596" pos:column="9">(<expr><name><name pos:line="596" pos:column="10">data<pos:position pos:line="596" pos:column="14"/></name><operator pos:line="596" pos:column="14">-&gt;<pos:position pos:line="596" pos:column="19"/></operator><name pos:line="596" pos:column="16">state<pos:position pos:line="596" pos:column="21"/></name><operator pos:line="596" pos:column="21">.<pos:position pos:line="596" pos:column="22"/></operator><name pos:line="596" pos:column="22">user<pos:position pos:line="596" pos:column="26"/></name><index pos:line="596" pos:column="26">[<expr><literal type="number" pos:line="596" pos:column="27">0<pos:position pos:line="596" pos:column="28"/></literal></expr>]<pos:position pos:line="596" pos:column="29"/></index></name></expr>)<pos:position pos:line="596" pos:column="30"/></condition><then pos:line="596" pos:column="30"> <block pos:line="596" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="597" pos:column="9">char<pos:position pos:line="597" pos:column="13"/></name> <modifier pos:line="597" pos:column="14">*<pos:position pos:line="597" pos:column="15"/></modifier></type><name pos:line="597" pos:column="15">newname<pos:position pos:line="597" pos:column="22"/></name><init pos:line="597" pos:column="22">=<expr><call><name pos:line="597" pos:column="23">curl_unescape<pos:position pos:line="597" pos:column="36"/></name><argument_list pos:line="597" pos:column="36">(<argument><expr><name><name pos:line="597" pos:column="37">data<pos:position pos:line="597" pos:column="41"/></name><operator pos:line="597" pos:column="41">-&gt;<pos:position pos:line="597" pos:column="46"/></operator><name pos:line="597" pos:column="43">state<pos:position pos:line="597" pos:column="48"/></name><operator pos:line="597" pos:column="48">.<pos:position pos:line="597" pos:column="49"/></operator><name pos:line="597" pos:column="49">user<pos:position pos:line="597" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="597" pos:column="55">0<pos:position pos:line="597" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="597" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="597" pos:column="58"/></decl_stmt>
        <if pos:line="598" pos:column="9">if<condition pos:line="598" pos:column="11">(<expr><call><name pos:line="598" pos:column="12">strlen<pos:position pos:line="598" pos:column="18"/></name><argument_list pos:line="598" pos:column="18">(<argument><expr><name pos:line="598" pos:column="19">newname<pos:position pos:line="598" pos:column="26"/></name></expr></argument>)<pos:position pos:line="598" pos:column="27"/></argument_list></call> <operator pos:line="598" pos:column="28">&lt;<pos:position pos:line="598" pos:column="32"/></operator> <sizeof pos:line="598" pos:column="30">sizeof<argument_list pos:line="598" pos:column="36">(<argument><expr><name><name pos:line="598" pos:column="37">data<pos:position pos:line="598" pos:column="41"/></name><operator pos:line="598" pos:column="41">-&gt;<pos:position pos:line="598" pos:column="46"/></operator><name pos:line="598" pos:column="43">state<pos:position pos:line="598" pos:column="48"/></name><operator pos:line="598" pos:column="48">.<pos:position pos:line="598" pos:column="49"/></operator><name pos:line="598" pos:column="49">user<pos:position pos:line="598" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="598" pos:column="54"/></argument_list></sizeof></expr>)<pos:position pos:line="598" pos:column="55"/></condition><then pos:line="598" pos:column="55"> <block pos:line="598" pos:column="56">{
          <expr_stmt><expr><call><name pos:line="599" pos:column="11">strcpy<pos:position pos:line="599" pos:column="17"/></name><argument_list pos:line="599" pos:column="17">(<argument><expr><name><name pos:line="599" pos:column="18">data<pos:position pos:line="599" pos:column="22"/></name><operator pos:line="599" pos:column="22">-&gt;<pos:position pos:line="599" pos:column="27"/></operator><name pos:line="599" pos:column="24">state<pos:position pos:line="599" pos:column="29"/></name><operator pos:line="599" pos:column="29">.<pos:position pos:line="599" pos:column="30"/></operator><name pos:line="599" pos:column="30">user<pos:position pos:line="599" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="599" pos:column="36">newname<pos:position pos:line="599" pos:column="43"/></name></expr></argument>)<pos:position pos:line="599" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="599" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="600" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="601" pos:column="9">/* if the new name is longer than accepted, then just use
           the unconverted name, it'll be wrong but what the heck */</comment>
        <expr_stmt><expr><call><name pos:line="603" pos:column="9">free<pos:position pos:line="603" pos:column="13"/></name><argument_list pos:line="603" pos:column="13">(<argument><expr><name pos:line="603" pos:column="14">newname<pos:position pos:line="603" pos:column="21"/></name></expr></argument>)<pos:position pos:line="603" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="603" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="604" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="606" pos:column="7">/* check for password, if no ask for one */</comment>
      <if pos:line="607" pos:column="7">if<condition pos:line="607" pos:column="9">( <expr><operator pos:line="607" pos:column="11">!<pos:position pos:line="607" pos:column="12"/></operator><name><name pos:line="607" pos:column="12">data<pos:position pos:line="607" pos:column="16"/></name><operator pos:line="607" pos:column="16">-&gt;<pos:position pos:line="607" pos:column="21"/></operator><name pos:line="607" pos:column="18">state<pos:position pos:line="607" pos:column="23"/></name><operator pos:line="607" pos:column="23">.<pos:position pos:line="607" pos:column="24"/></operator><name pos:line="607" pos:column="24">passwd<pos:position pos:line="607" pos:column="30"/></name><index pos:line="607" pos:column="30">[<expr><literal type="number" pos:line="607" pos:column="31">0<pos:position pos:line="607" pos:column="32"/></literal></expr>]<pos:position pos:line="607" pos:column="33"/></index></name></expr> )<pos:position pos:line="607" pos:column="35"/></condition><then pos:line="607" pos:column="35"> <block pos:line="607" pos:column="36">{
        <if pos:line="608" pos:column="9">if<condition pos:line="608" pos:column="11">(<expr><operator pos:line="608" pos:column="12">!<pos:position pos:line="608" pos:column="13"/></operator><name><name pos:line="608" pos:column="13">data<pos:position pos:line="608" pos:column="17"/></name><operator pos:line="608" pos:column="17">-&gt;<pos:position pos:line="608" pos:column="22"/></operator><name pos:line="608" pos:column="19">set<pos:position pos:line="608" pos:column="22"/></name><operator pos:line="608" pos:column="22">.<pos:position pos:line="608" pos:column="23"/></operator><name pos:line="608" pos:column="23">fpasswd<pos:position pos:line="608" pos:column="30"/></name></name> <operator pos:line="608" pos:column="31">||<pos:position pos:line="608" pos:column="33"/></operator>
           <call><name><name pos:line="609" pos:column="12">data<pos:position pos:line="609" pos:column="16"/></name><operator pos:line="609" pos:column="16">-&gt;<pos:position pos:line="609" pos:column="21"/></operator><name pos:line="609" pos:column="18">set<pos:position pos:line="609" pos:column="21"/></name><operator pos:line="609" pos:column="21">.<pos:position pos:line="609" pos:column="22"/></operator><name pos:line="609" pos:column="22">fpasswd<pos:position pos:line="609" pos:column="29"/></name></name><argument_list pos:line="609" pos:column="29">(<argument><expr><name><name pos:line="609" pos:column="30">data<pos:position pos:line="609" pos:column="34"/></name><operator pos:line="609" pos:column="34">-&gt;<pos:position pos:line="609" pos:column="39"/></operator><name pos:line="609" pos:column="36">set<pos:position pos:line="609" pos:column="39"/></name><operator pos:line="609" pos:column="39">.<pos:position pos:line="609" pos:column="40"/></operator><name pos:line="609" pos:column="40">passwd_client<pos:position pos:line="609" pos:column="53"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="610" pos:column="30">"password:"<pos:position pos:line="610" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="610" pos:column="43">data<pos:position pos:line="610" pos:column="47"/></name><operator pos:line="610" pos:column="47">-&gt;<pos:position pos:line="610" pos:column="52"/></operator><name pos:line="610" pos:column="49">state<pos:position pos:line="610" pos:column="54"/></name><operator pos:line="610" pos:column="54">.<pos:position pos:line="610" pos:column="55"/></operator><name pos:line="610" pos:column="55">passwd<pos:position pos:line="610" pos:column="61"/></name></name></expr></argument>,
                             <argument><expr><sizeof pos:line="611" pos:column="30">sizeof<argument_list pos:line="611" pos:column="36">(<argument><expr><name><name pos:line="611" pos:column="37">data<pos:position pos:line="611" pos:column="41"/></name><operator pos:line="611" pos:column="41">-&gt;<pos:position pos:line="611" pos:column="46"/></operator><name pos:line="611" pos:column="43">state<pos:position pos:line="611" pos:column="48"/></name><operator pos:line="611" pos:column="48">.<pos:position pos:line="611" pos:column="49"/></operator><name pos:line="611" pos:column="49">passwd<pos:position pos:line="611" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="611" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="611" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="611" pos:column="58"/></condition><then pos:line="611" pos:column="58">
          <block type="pseudo"><return pos:line="612" pos:column="11">return <expr><name pos:line="612" pos:column="18">CURLE_BAD_PASSWORD_ENTERED<pos:position pos:line="612" pos:column="44"/></name></expr>;<pos:position pos:line="612" pos:column="45"/></return></block></then></if>
      }<pos:position pos:line="613" pos:column="8"/></block></then>
      <else pos:line="614" pos:column="7">else <block pos:line="614" pos:column="12">{
        <comment type="block" pos:line="615" pos:column="9">/* we have a password found in the URL, decode it! */</comment>
        <decl_stmt><decl><type><name pos:line="616" pos:column="9">char<pos:position pos:line="616" pos:column="13"/></name> <modifier pos:line="616" pos:column="14">*<pos:position pos:line="616" pos:column="15"/></modifier></type><name pos:line="616" pos:column="15">newpasswd<pos:position pos:line="616" pos:column="24"/></name><init pos:line="616" pos:column="24">=<expr><call><name pos:line="616" pos:column="25">curl_unescape<pos:position pos:line="616" pos:column="38"/></name><argument_list pos:line="616" pos:column="38">(<argument><expr><name><name pos:line="616" pos:column="39">data<pos:position pos:line="616" pos:column="43"/></name><operator pos:line="616" pos:column="43">-&gt;<pos:position pos:line="616" pos:column="48"/></operator><name pos:line="616" pos:column="45">state<pos:position pos:line="616" pos:column="50"/></name><operator pos:line="616" pos:column="50">.<pos:position pos:line="616" pos:column="51"/></operator><name pos:line="616" pos:column="51">passwd<pos:position pos:line="616" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="616" pos:column="59">0<pos:position pos:line="616" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="616" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="616" pos:column="62"/></decl_stmt>
        <if pos:line="617" pos:column="9">if<condition pos:line="617" pos:column="11">(<expr><call><name pos:line="617" pos:column="12">strlen<pos:position pos:line="617" pos:column="18"/></name><argument_list pos:line="617" pos:column="18">(<argument><expr><name pos:line="617" pos:column="19">newpasswd<pos:position pos:line="617" pos:column="28"/></name></expr></argument>)<pos:position pos:line="617" pos:column="29"/></argument_list></call> <operator pos:line="617" pos:column="30">&lt;<pos:position pos:line="617" pos:column="34"/></operator> <sizeof pos:line="617" pos:column="32">sizeof<argument_list pos:line="617" pos:column="38">(<argument><expr><name><name pos:line="617" pos:column="39">data<pos:position pos:line="617" pos:column="43"/></name><operator pos:line="617" pos:column="43">-&gt;<pos:position pos:line="617" pos:column="48"/></operator><name pos:line="617" pos:column="45">state<pos:position pos:line="617" pos:column="50"/></name><operator pos:line="617" pos:column="50">.<pos:position pos:line="617" pos:column="51"/></operator><name pos:line="617" pos:column="51">passwd<pos:position pos:line="617" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="617" pos:column="58"/></argument_list></sizeof></expr>)<pos:position pos:line="617" pos:column="59"/></condition><then pos:line="617" pos:column="59"> <block pos:line="617" pos:column="60">{
          <expr_stmt><expr><call><name pos:line="618" pos:column="11">strcpy<pos:position pos:line="618" pos:column="17"/></name><argument_list pos:line="618" pos:column="17">(<argument><expr><name><name pos:line="618" pos:column="18">data<pos:position pos:line="618" pos:column="22"/></name><operator pos:line="618" pos:column="22">-&gt;<pos:position pos:line="618" pos:column="27"/></operator><name pos:line="618" pos:column="24">state<pos:position pos:line="618" pos:column="29"/></name><operator pos:line="618" pos:column="29">.<pos:position pos:line="618" pos:column="30"/></operator><name pos:line="618" pos:column="30">passwd<pos:position pos:line="618" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="618" pos:column="38">newpasswd<pos:position pos:line="618" pos:column="47"/></name></expr></argument>)<pos:position pos:line="618" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="619" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="620" pos:column="9">free<pos:position pos:line="620" pos:column="13"/></name><argument_list pos:line="620" pos:column="13">(<argument><expr><name pos:line="620" pos:column="14">newpasswd<pos:position pos:line="620" pos:column="23"/></name></expr></argument>)<pos:position pos:line="620" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="620" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="621" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="623" pos:column="7">conn<pos:position pos:line="623" pos:column="11"/></name><operator pos:line="623" pos:column="11">-&gt;<pos:position pos:line="623" pos:column="16"/></operator><name pos:line="623" pos:column="13">name<pos:position pos:line="623" pos:column="17"/></name></name> <operator pos:line="623" pos:column="18">=<pos:position pos:line="623" pos:column="19"/></operator> <operator pos:line="623" pos:column="20">++<pos:position pos:line="623" pos:column="22"/></operator><name pos:line="623" pos:column="22">ptr<pos:position pos:line="623" pos:column="25"/></name></expr>;<pos:position pos:line="623" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="624" pos:column="7">conn<pos:position pos:line="624" pos:column="11"/></name><operator pos:line="624" pos:column="11">-&gt;<pos:position pos:line="624" pos:column="16"/></operator><name pos:line="624" pos:column="13">bits<pos:position pos:line="624" pos:column="17"/></name><operator pos:line="624" pos:column="17">.<pos:position pos:line="624" pos:column="18"/></operator><name pos:line="624" pos:column="18">user_passwd<pos:position pos:line="624" pos:column="29"/></name></name><operator pos:line="624" pos:column="29">=<pos:position pos:line="624" pos:column="30"/></operator><name pos:line="624" pos:column="30">TRUE<pos:position pos:line="624" pos:column="34"/></name></expr>;<pos:position pos:line="624" pos:column="35"/></expr_stmt> <comment type="block" pos:line="624" pos:column="36">/* enable user+password */</comment>
    }<pos:position pos:line="625" pos:column="6"/></block></then>
    <else pos:line="626" pos:column="5">else <block pos:line="626" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="627" pos:column="7">strcpy<pos:position pos:line="627" pos:column="13"/></name><argument_list pos:line="627" pos:column="13">(<argument><expr><name><name pos:line="627" pos:column="14">data<pos:position pos:line="627" pos:column="18"/></name><operator pos:line="627" pos:column="18">-&gt;<pos:position pos:line="627" pos:column="23"/></operator><name pos:line="627" pos:column="20">state<pos:position pos:line="627" pos:column="25"/></name><operator pos:line="627" pos:column="25">.<pos:position pos:line="627" pos:column="26"/></operator><name pos:line="627" pos:column="26">user<pos:position pos:line="627" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="627" pos:column="32">CURL_DEFAULT_USER<pos:position pos:line="627" pos:column="49"/></name></expr></argument>)<pos:position pos:line="627" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="627" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="628" pos:column="7">strcpy<pos:position pos:line="628" pos:column="13"/></name><argument_list pos:line="628" pos:column="13">(<argument><expr><name><name pos:line="628" pos:column="14">data<pos:position pos:line="628" pos:column="18"/></name><operator pos:line="628" pos:column="18">-&gt;<pos:position pos:line="628" pos:column="23"/></operator><name pos:line="628" pos:column="20">state<pos:position pos:line="628" pos:column="25"/></name><operator pos:line="628" pos:column="25">.<pos:position pos:line="628" pos:column="26"/></operator><name pos:line="628" pos:column="26">passwd<pos:position pos:line="628" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="628" pos:column="34">CURL_DEFAULT_PASSWORD<pos:position pos:line="628" pos:column="55"/></name></expr></argument>)<pos:position pos:line="628" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="628" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="629" pos:column="6"/></block></else></if>
  }<pos:position pos:line="630" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" format="doxygen" pos:line="632" pos:column="3">/*************************************************************
   * Figure out the remote port number
   *
   * No matter if we use a proxy or not, we have to figure out the remote
   * port number of various reasons.
   *
   * To be able to detect port number flawlessly, we must not confuse them
   * IPv6-specified addresses in the [0::1] style.
   *************************************************************/</comment>

  <if pos:line="642" pos:column="3">if<condition pos:line="642" pos:column="5">(<expr><operator pos:line="642" pos:column="6">(<pos:position pos:line="642" pos:column="7"/></operator><literal type="number" pos:line="642" pos:column="7">1<pos:position pos:line="642" pos:column="8"/></literal> <operator pos:line="642" pos:column="9">==<pos:position pos:line="642" pos:column="11"/></operator> <call><name pos:line="642" pos:column="12">sscanf<pos:position pos:line="642" pos:column="18"/></name><argument_list pos:line="642" pos:column="18">(<argument><expr><name><name pos:line="642" pos:column="19">conn<pos:position pos:line="642" pos:column="23"/></name><operator pos:line="642" pos:column="23">-&gt;<pos:position pos:line="642" pos:column="28"/></operator><name pos:line="642" pos:column="25">name<pos:position pos:line="642" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="642" pos:column="31">"[%*39[0-9a-fA-F:.]%c"<pos:position pos:line="642" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="642" pos:column="55">&amp;<pos:position pos:line="642" pos:column="60"/></operator><name pos:line="642" pos:column="56">endbracket<pos:position pos:line="642" pos:column="66"/></name></expr></argument>)<pos:position pos:line="642" pos:column="67"/></argument_list></call><operator pos:line="642" pos:column="67">)<pos:position pos:line="642" pos:column="68"/></operator> <operator pos:line="642" pos:column="69">&amp;&amp;<pos:position pos:line="642" pos:column="79"/></operator>
     <operator pos:line="643" pos:column="6">(<pos:position pos:line="643" pos:column="7"/></operator><literal type="char" pos:line="643" pos:column="7">']'<pos:position pos:line="643" pos:column="10"/></literal> <operator pos:line="643" pos:column="11">==<pos:position pos:line="643" pos:column="13"/></operator> <name pos:line="643" pos:column="14">endbracket<pos:position pos:line="643" pos:column="24"/></name><operator pos:line="643" pos:column="24">)<pos:position pos:line="643" pos:column="25"/></operator></expr>)<pos:position pos:line="643" pos:column="26"/></condition><then pos:line="643" pos:column="26"> <block pos:line="643" pos:column="27">{
    <comment type="block" pos:line="644" pos:column="5">/* this is a IPv6-style specified IP-address */</comment>
<cpp:ifndef pos:line="645" pos:column="1">#<cpp:directive pos:line="645" pos:column="2">ifndef<pos:position pos:line="645" pos:column="8"/></cpp:directive> <name pos:line="645" pos:column="9">ENABLE_IPV6<pos:position pos:line="645" pos:column="20"/></name></cpp:ifndef>
    <expr_stmt><expr><call><name pos:line="646" pos:column="5">failf<pos:position pos:line="646" pos:column="10"/></name><argument_list pos:line="646" pos:column="10">(<argument><expr><name pos:line="646" pos:column="11">data<pos:position pos:line="646" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="646" pos:column="17">"You haven't enabled IPv6 support"<pos:position pos:line="646" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="646" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="646" pos:column="53"/></expr_stmt>
    <return pos:line="647" pos:column="5">return <expr><name pos:line="647" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="647" pos:column="31"/></name></expr>;<pos:position pos:line="647" pos:column="32"/></return>
<cpp:else pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">else<pos:position pos:line="648" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="649" pos:column="5">conn<pos:position pos:line="649" pos:column="9"/></name><operator pos:line="649" pos:column="9">-&gt;<pos:position pos:line="649" pos:column="14"/></operator><name pos:line="649" pos:column="11">name<pos:position pos:line="649" pos:column="15"/></name></name><operator pos:line="649" pos:column="15">++<pos:position pos:line="649" pos:column="17"/></operator></expr>;<pos:position pos:line="649" pos:column="18"/></expr_stmt> <comment type="block" pos:line="649" pos:column="19">/* pass the starting bracket */</comment>

    <expr_stmt><expr><name pos:line="651" pos:column="5">tmp<pos:position pos:line="651" pos:column="8"/></name> <operator pos:line="651" pos:column="9">=<pos:position pos:line="651" pos:column="10"/></operator> <call><name pos:line="651" pos:column="11">strchr<pos:position pos:line="651" pos:column="17"/></name><argument_list pos:line="651" pos:column="17">(<argument><expr><name><name pos:line="651" pos:column="18">conn<pos:position pos:line="651" pos:column="22"/></name><operator pos:line="651" pos:column="22">-&gt;<pos:position pos:line="651" pos:column="27"/></operator><name pos:line="651" pos:column="24">name<pos:position pos:line="651" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="651" pos:column="30">']'<pos:position pos:line="651" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="651" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="651" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="652" pos:column="5">*<pos:position pos:line="652" pos:column="6"/></operator><name pos:line="652" pos:column="6">tmp<pos:position pos:line="652" pos:column="9"/></name> <operator pos:line="652" pos:column="10">=<pos:position pos:line="652" pos:column="11"/></operator> <literal type="number" pos:line="652" pos:column="12">0<pos:position pos:line="652" pos:column="13"/></literal></expr>;<pos:position pos:line="652" pos:column="14"/></expr_stmt> <comment type="block" pos:line="652" pos:column="15">/* zero terminate */</comment>

    <expr_stmt><expr><name pos:line="654" pos:column="5">tmp<pos:position pos:line="654" pos:column="8"/></name><operator pos:line="654" pos:column="8">++<pos:position pos:line="654" pos:column="10"/></operator></expr>;<pos:position pos:line="654" pos:column="11"/></expr_stmt> <comment type="block" pos:line="654" pos:column="12">/* pass the ending bracket */</comment>
    <if pos:line="655" pos:column="5">if<condition pos:line="655" pos:column="7">(<expr><literal type="char" pos:line="655" pos:column="8">':'<pos:position pos:line="655" pos:column="11"/></literal> <operator pos:line="655" pos:column="12">!=<pos:position pos:line="655" pos:column="14"/></operator> <operator pos:line="655" pos:column="15">*<pos:position pos:line="655" pos:column="16"/></operator><name pos:line="655" pos:column="16">tmp<pos:position pos:line="655" pos:column="19"/></name></expr>)<pos:position pos:line="655" pos:column="20"/></condition><then pos:line="655" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="656" pos:column="7">tmp<pos:position pos:line="656" pos:column="10"/></name> <operator pos:line="656" pos:column="11">=<pos:position pos:line="656" pos:column="12"/></operator> <name pos:line="656" pos:column="13">NULL<pos:position pos:line="656" pos:column="17"/></name></expr>;<pos:position pos:line="656" pos:column="18"/></expr_stmt></block></then></if> <comment type="block" pos:line="656" pos:column="19">/* no port number available */</comment>
<cpp:endif pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">endif<pos:position pos:line="657" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="658" pos:column="4"/></block></then>
  <else pos:line="659" pos:column="3">else <block pos:line="659" pos:column="8">{
    <comment type="block" pos:line="660" pos:column="5">/* traditional IPv4-style port-extracting */</comment>
    <expr_stmt><expr><name pos:line="661" pos:column="5">tmp<pos:position pos:line="661" pos:column="8"/></name> <operator pos:line="661" pos:column="9">=<pos:position pos:line="661" pos:column="10"/></operator> <call><name pos:line="661" pos:column="11">strchr<pos:position pos:line="661" pos:column="17"/></name><argument_list pos:line="661" pos:column="17">(<argument><expr><name><name pos:line="661" pos:column="18">conn<pos:position pos:line="661" pos:column="22"/></name><operator pos:line="661" pos:column="22">-&gt;<pos:position pos:line="661" pos:column="27"/></operator><name pos:line="661" pos:column="24">name<pos:position pos:line="661" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="661" pos:column="30">':'<pos:position pos:line="661" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="661" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="661" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="662" pos:column="4"/></block></else></if>

  <if pos:line="664" pos:column="3">if <condition pos:line="664" pos:column="6">(<expr><name pos:line="664" pos:column="7">tmp<pos:position pos:line="664" pos:column="10"/></name></expr>)<pos:position pos:line="664" pos:column="11"/></condition><then pos:line="664" pos:column="11"> <block pos:line="664" pos:column="12">{
    <expr_stmt><expr><operator pos:line="665" pos:column="5">*<pos:position pos:line="665" pos:column="6"/></operator><name pos:line="665" pos:column="6">tmp<pos:position pos:line="665" pos:column="9"/></name><operator pos:line="665" pos:column="9">++<pos:position pos:line="665" pos:column="11"/></operator> <operator pos:line="665" pos:column="12">=<pos:position pos:line="665" pos:column="13"/></operator> <literal type="char" pos:line="665" pos:column="14">'\0'<pos:position pos:line="665" pos:column="18"/></literal></expr>;<pos:position pos:line="665" pos:column="19"/></expr_stmt> <comment type="block" pos:line="665" pos:column="20">/* cut off the name there */</comment>
    <expr_stmt><expr><name><name pos:line="666" pos:column="5">conn<pos:position pos:line="666" pos:column="9"/></name><operator pos:line="666" pos:column="9">-&gt;<pos:position pos:line="666" pos:column="14"/></operator><name pos:line="666" pos:column="11">remote_port<pos:position pos:line="666" pos:column="22"/></name></name> <operator pos:line="666" pos:column="23">=<pos:position pos:line="666" pos:column="24"/></operator> <call><name pos:line="666" pos:column="25">atoi<pos:position pos:line="666" pos:column="29"/></name><argument_list pos:line="666" pos:column="29">(<argument><expr><name pos:line="666" pos:column="30">tmp<pos:position pos:line="666" pos:column="33"/></name></expr></argument>)<pos:position pos:line="666" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="667" pos:column="4"/></block></then></if>

  <if pos:line="669" pos:column="3">if<condition pos:line="669" pos:column="5">(<expr><name><name pos:line="669" pos:column="6">data<pos:position pos:line="669" pos:column="10"/></name><operator pos:line="669" pos:column="10">-&gt;<pos:position pos:line="669" pos:column="15"/></operator><name pos:line="669" pos:column="12">change<pos:position pos:line="669" pos:column="18"/></name><operator pos:line="669" pos:column="18">.<pos:position pos:line="669" pos:column="19"/></operator><name pos:line="669" pos:column="19">proxy<pos:position pos:line="669" pos:column="24"/></name></name></expr>)<pos:position pos:line="669" pos:column="25"/></condition><then pos:line="669" pos:column="25"> <block pos:line="669" pos:column="26">{
    <comment type="block" pos:line="670" pos:column="5">/* If this is supposed to use a proxy, we need to figure out the proxy
       host name name, so that we can re-use an existing connection
       that may exist registered to the same proxy host. */</comment>

    <decl_stmt><decl><type><name pos:line="674" pos:column="5">char<pos:position pos:line="674" pos:column="9"/></name> <modifier pos:line="674" pos:column="10">*<pos:position pos:line="674" pos:column="11"/></modifier></type><name pos:line="674" pos:column="11">prox_portno<pos:position pos:line="674" pos:column="22"/></name></decl>;<pos:position pos:line="674" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="675" pos:column="5">char<pos:position pos:line="675" pos:column="9"/></name> <modifier pos:line="675" pos:column="10">*<pos:position pos:line="675" pos:column="11"/></modifier></type><name pos:line="675" pos:column="11">endofprot<pos:position pos:line="675" pos:column="20"/></name></decl>;<pos:position pos:line="675" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="677" pos:column="5">/* We need to make a duplicate of the proxy so that we can modify the
       string safely. */</comment>
    <decl_stmt><decl><type><name pos:line="679" pos:column="5">char<pos:position pos:line="679" pos:column="9"/></name> <modifier pos:line="679" pos:column="10">*<pos:position pos:line="679" pos:column="11"/></modifier></type><name pos:line="679" pos:column="11">proxydup<pos:position pos:line="679" pos:column="19"/></name><init pos:line="679" pos:column="19">=<expr><call><name pos:line="679" pos:column="20">strdup<pos:position pos:line="679" pos:column="26"/></name><argument_list pos:line="679" pos:column="26">(<argument><expr><name><name pos:line="679" pos:column="27">data<pos:position pos:line="679" pos:column="31"/></name><operator pos:line="679" pos:column="31">-&gt;<pos:position pos:line="679" pos:column="36"/></operator><name pos:line="679" pos:column="33">change<pos:position pos:line="679" pos:column="39"/></name><operator pos:line="679" pos:column="39">.<pos:position pos:line="679" pos:column="40"/></operator><name pos:line="679" pos:column="40">proxy<pos:position pos:line="679" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="679" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="679" pos:column="47"/></decl_stmt>

    <comment type="block" pos:line="681" pos:column="5">/* We use 'proxyptr' to point to the proxy name from now on... */</comment>
    <decl_stmt><decl><type><name pos:line="682" pos:column="5">char<pos:position pos:line="682" pos:column="9"/></name> <modifier pos:line="682" pos:column="10">*<pos:position pos:line="682" pos:column="11"/></modifier></type><name pos:line="682" pos:column="11">proxyptr<pos:position pos:line="682" pos:column="19"/></name><init pos:line="682" pos:column="19">=<expr><name pos:line="682" pos:column="20">proxydup<pos:position pos:line="682" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="682" pos:column="29"/></decl_stmt>

    <if pos:line="684" pos:column="5">if<condition pos:line="684" pos:column="7">(<expr><name pos:line="684" pos:column="8">NULL<pos:position pos:line="684" pos:column="12"/></name> <operator pos:line="684" pos:column="13">==<pos:position pos:line="684" pos:column="15"/></operator> <name pos:line="684" pos:column="16">proxydup<pos:position pos:line="684" pos:column="24"/></name></expr>)<pos:position pos:line="684" pos:column="25"/></condition><then pos:line="684" pos:column="25"> <block pos:line="684" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="685" pos:column="7">failf<pos:position pos:line="685" pos:column="12"/></name><argument_list pos:line="685" pos:column="12">(<argument><expr><name pos:line="685" pos:column="13">data<pos:position pos:line="685" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="685" pos:column="19">"memory shortage"<pos:position pos:line="685" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="685" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="685" pos:column="38"/></expr_stmt>
      <return pos:line="686" pos:column="7">return <expr><name pos:line="686" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="686" pos:column="33"/></name></expr>;<pos:position pos:line="686" pos:column="34"/></return>
    }<pos:position pos:line="687" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="689" pos:column="5">/* Daniel Dec 10, 1998:
       We do the proxy host string parsing here. We want the host name and the
       port name. Accept a protocol:// prefix, even though it should just be
       ignored. */</comment>

    <comment type="block" pos:line="694" pos:column="5">/* 1. skip the protocol part if present */</comment>
    <expr_stmt><expr><name pos:line="695" pos:column="5">endofprot<pos:position pos:line="695" pos:column="14"/></name><operator pos:line="695" pos:column="14">=<pos:position pos:line="695" pos:column="15"/></operator><call><name pos:line="695" pos:column="15">strstr<pos:position pos:line="695" pos:column="21"/></name><argument_list pos:line="695" pos:column="21">(<argument><expr><name pos:line="695" pos:column="22">proxyptr<pos:position pos:line="695" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="695" pos:column="32">"://"<pos:position pos:line="695" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="695" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="695" pos:column="39"/></expr_stmt>
    <if pos:line="696" pos:column="5">if<condition pos:line="696" pos:column="7">(<expr><name pos:line="696" pos:column="8">endofprot<pos:position pos:line="696" pos:column="17"/></name></expr>)<pos:position pos:line="696" pos:column="18"/></condition><then pos:line="696" pos:column="18"> <block pos:line="696" pos:column="19">{
      <expr_stmt><expr><name pos:line="697" pos:column="7">proxyptr<pos:position pos:line="697" pos:column="15"/></name> <operator pos:line="697" pos:column="16">=<pos:position pos:line="697" pos:column="17"/></operator> <name pos:line="697" pos:column="18">endofprot<pos:position pos:line="697" pos:column="27"/></name><operator pos:line="697" pos:column="27">+<pos:position pos:line="697" pos:column="28"/></operator><literal type="number" pos:line="697" pos:column="28">3<pos:position pos:line="697" pos:column="29"/></literal></expr>;<pos:position pos:line="697" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="698" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="700" pos:column="5">/* allow user to specify proxy.server.com:1080 if desired */</comment>
    <expr_stmt><expr><name pos:line="701" pos:column="5">prox_portno<pos:position pos:line="701" pos:column="16"/></name> <operator pos:line="701" pos:column="17">=<pos:position pos:line="701" pos:column="18"/></operator> <call><name pos:line="701" pos:column="19">strchr<pos:position pos:line="701" pos:column="25"/></name> <argument_list pos:line="701" pos:column="26">(<argument><expr><name pos:line="701" pos:column="27">proxyptr<pos:position pos:line="701" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="701" pos:column="37">':'<pos:position pos:line="701" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="701" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="42"/></expr_stmt>
    <if pos:line="702" pos:column="5">if <condition pos:line="702" pos:column="8">(<expr><name pos:line="702" pos:column="9">prox_portno<pos:position pos:line="702" pos:column="20"/></name></expr>)<pos:position pos:line="702" pos:column="21"/></condition><then pos:line="702" pos:column="21"> <block pos:line="702" pos:column="22">{
      <expr_stmt><expr><operator pos:line="703" pos:column="7">*<pos:position pos:line="703" pos:column="8"/></operator><name pos:line="703" pos:column="8">prox_portno<pos:position pos:line="703" pos:column="19"/></name> <operator pos:line="703" pos:column="20">=<pos:position pos:line="703" pos:column="21"/></operator> <literal type="number" pos:line="703" pos:column="22">0x0<pos:position pos:line="703" pos:column="25"/></literal></expr>;<pos:position pos:line="703" pos:column="26"/></expr_stmt> <comment type="block" pos:line="703" pos:column="27">/* cut off number from host name */</comment>
      <expr_stmt><expr><name pos:line="704" pos:column="7">prox_portno<pos:position pos:line="704" pos:column="18"/></name> <operator pos:line="704" pos:column="19">++<pos:position pos:line="704" pos:column="21"/></operator></expr>;<pos:position pos:line="704" pos:column="22"/></expr_stmt>
      <comment type="block" pos:line="705" pos:column="7">/* now set the local port number */</comment>
      <expr_stmt><expr><name><name pos:line="706" pos:column="7">conn<pos:position pos:line="706" pos:column="11"/></name><operator pos:line="706" pos:column="11">-&gt;<pos:position pos:line="706" pos:column="16"/></operator><name pos:line="706" pos:column="13">port<pos:position pos:line="706" pos:column="17"/></name></name> <operator pos:line="706" pos:column="18">=<pos:position pos:line="706" pos:column="19"/></operator> <call><name pos:line="706" pos:column="20">atoi<pos:position pos:line="706" pos:column="24"/></name><argument_list pos:line="706" pos:column="24">(<argument><expr><name pos:line="706" pos:column="25">prox_portno<pos:position pos:line="706" pos:column="36"/></name></expr></argument>)<pos:position pos:line="706" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="706" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="707" pos:column="6"/></block></then>
    <elseif pos:line="708" pos:column="5">else <if pos:line="708" pos:column="10">if<condition pos:line="708" pos:column="12">(<expr><name><name pos:line="708" pos:column="13">data<pos:position pos:line="708" pos:column="17"/></name><operator pos:line="708" pos:column="17">-&gt;<pos:position pos:line="708" pos:column="22"/></operator><name pos:line="708" pos:column="19">set<pos:position pos:line="708" pos:column="22"/></name><operator pos:line="708" pos:column="22">.<pos:position pos:line="708" pos:column="23"/></operator><name pos:line="708" pos:column="23">proxyport<pos:position pos:line="708" pos:column="32"/></name></name></expr>)<pos:position pos:line="708" pos:column="33"/></condition><then pos:line="708" pos:column="33"> <block pos:line="708" pos:column="34">{
      <comment type="block" pos:line="709" pos:column="7">/* None given in the proxy string, then get the default one if it is
         given */</comment>
      <expr_stmt><expr><name><name pos:line="711" pos:column="7">conn<pos:position pos:line="711" pos:column="11"/></name><operator pos:line="711" pos:column="11">-&gt;<pos:position pos:line="711" pos:column="16"/></operator><name pos:line="711" pos:column="13">port<pos:position pos:line="711" pos:column="17"/></name></name> <operator pos:line="711" pos:column="18">=<pos:position pos:line="711" pos:column="19"/></operator> <name><name pos:line="711" pos:column="20">data<pos:position pos:line="711" pos:column="24"/></name><operator pos:line="711" pos:column="24">-&gt;<pos:position pos:line="711" pos:column="29"/></operator><name pos:line="711" pos:column="26">set<pos:position pos:line="711" pos:column="29"/></name><operator pos:line="711" pos:column="29">.<pos:position pos:line="711" pos:column="30"/></operator><name pos:line="711" pos:column="30">proxyport<pos:position pos:line="711" pos:column="39"/></name></name></expr>;<pos:position pos:line="711" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="712" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="714" pos:column="5">/* now, clone the cleaned proxy host name */</comment>
    <expr_stmt><expr><name><name pos:line="715" pos:column="5">conn<pos:position pos:line="715" pos:column="9"/></name><operator pos:line="715" pos:column="9">-&gt;<pos:position pos:line="715" pos:column="14"/></operator><name pos:line="715" pos:column="11">proxyhost<pos:position pos:line="715" pos:column="20"/></name></name> <operator pos:line="715" pos:column="21">=<pos:position pos:line="715" pos:column="22"/></operator> <call><name pos:line="715" pos:column="23">strdup<pos:position pos:line="715" pos:column="29"/></name><argument_list pos:line="715" pos:column="29">(<argument><expr><name pos:line="715" pos:column="30">proxyptr<pos:position pos:line="715" pos:column="38"/></name></expr></argument>)<pos:position pos:line="715" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="715" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="717" pos:column="5">free<pos:position pos:line="717" pos:column="9"/></name><argument_list pos:line="717" pos:column="9">(<argument><expr><name pos:line="717" pos:column="10">proxydup<pos:position pos:line="717" pos:column="18"/></name></expr></argument>)<pos:position pos:line="717" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="717" pos:column="20"/></expr_stmt> <comment type="block" pos:line="717" pos:column="21">/* free the duplicate pointer and not the modified */</comment>
  }<pos:position pos:line="718" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="720" pos:column="3">/*************************************************************
   * Check the current list of connections to see if we can
   * re-use an already existing one or if we have to create a
   * new one.
   *************************************************************/</comment>

  <comment type="block" pos:line="726" pos:column="3">/* reuse_fresh is set TRUE if we are told to use a fresh connection
     by force */</comment>
  <if pos:line="728" pos:column="3">if<condition pos:line="728" pos:column="5">(<expr><operator pos:line="728" pos:column="6">!<pos:position pos:line="728" pos:column="7"/></operator><name><name pos:line="728" pos:column="7">data<pos:position pos:line="728" pos:column="11"/></name><operator pos:line="728" pos:column="11">-&gt;<pos:position pos:line="728" pos:column="16"/></operator><name pos:line="728" pos:column="13">set<pos:position pos:line="728" pos:column="16"/></name><operator pos:line="728" pos:column="16">.<pos:position pos:line="728" pos:column="17"/></operator><name pos:line="728" pos:column="17">reuse_fresh<pos:position pos:line="728" pos:column="28"/></name></name> <operator pos:line="728" pos:column="29">&amp;&amp;<pos:position pos:line="728" pos:column="39"/></operator>
     <call><name pos:line="729" pos:column="6">ConnectionExists<pos:position pos:line="729" pos:column="22"/></name><argument_list pos:line="729" pos:column="22">(<argument><expr><name pos:line="729" pos:column="23">data<pos:position pos:line="729" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="729" pos:column="29">conn<pos:position pos:line="729" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="729" pos:column="35">&amp;<pos:position pos:line="729" pos:column="40"/></operator><name pos:line="729" pos:column="36">conn_temp<pos:position pos:line="729" pos:column="45"/></name></expr></argument>)<pos:position pos:line="729" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="729" pos:column="47"/></condition><then pos:line="729" pos:column="47"> <block pos:line="729" pos:column="48">{
    <comment type="block" pos:line="730" pos:column="5">/*
     * We already have a connection for this, we got the former connection
     * in the conn_temp variable and thus we need to cleanup the one we
     * just allocated before we can move along and use the previously
     * existing one.
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="736" pos:column="5">struct<pos:position pos:line="736" pos:column="11"/></name> <name pos:line="736" pos:column="12">connectdata<pos:position pos:line="736" pos:column="23"/></name></name> <modifier pos:line="736" pos:column="24">*<pos:position pos:line="736" pos:column="25"/></modifier></type><name pos:line="736" pos:column="25">old_conn<pos:position pos:line="736" pos:column="33"/></name> <init pos:line="736" pos:column="34">= <expr><name pos:line="736" pos:column="36">conn<pos:position pos:line="736" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="736" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="737" pos:column="5">char<pos:position pos:line="737" pos:column="9"/></name> <modifier pos:line="737" pos:column="10">*<pos:position pos:line="737" pos:column="11"/></modifier></type><name pos:line="737" pos:column="11">path<pos:position pos:line="737" pos:column="15"/></name> <init pos:line="737" pos:column="16">= <expr><name><name pos:line="737" pos:column="18">old_conn<pos:position pos:line="737" pos:column="26"/></name><operator pos:line="737" pos:column="26">-&gt;<pos:position pos:line="737" pos:column="31"/></operator><name pos:line="737" pos:column="28">path<pos:position pos:line="737" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="737" pos:column="33"/></decl_stmt> <comment type="block" pos:line="737" pos:column="34">/* setup the current path pointer properly */</comment>
    <decl_stmt><decl><type><name pos:line="738" pos:column="5">char<pos:position pos:line="738" pos:column="9"/></name> <modifier pos:line="738" pos:column="10">*<pos:position pos:line="738" pos:column="11"/></modifier></type><name pos:line="738" pos:column="11">ppath<pos:position pos:line="738" pos:column="16"/></name> <init pos:line="738" pos:column="17">= <expr><name><name pos:line="738" pos:column="19">old_conn<pos:position pos:line="738" pos:column="27"/></name><operator pos:line="738" pos:column="27">-&gt;<pos:position pos:line="738" pos:column="32"/></operator><name pos:line="738" pos:column="29">ppath<pos:position pos:line="738" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="738" pos:column="35"/></decl_stmt> <comment type="block" pos:line="738" pos:column="36">/* this is the modified path pointer */</comment>
    <if pos:line="739" pos:column="5">if<condition pos:line="739" pos:column="7">(<expr><name><name pos:line="739" pos:column="8">old_conn<pos:position pos:line="739" pos:column="16"/></name><operator pos:line="739" pos:column="16">-&gt;<pos:position pos:line="739" pos:column="21"/></operator><name pos:line="739" pos:column="18">proxyhost<pos:position pos:line="739" pos:column="27"/></name></name></expr>)<pos:position pos:line="739" pos:column="28"/></condition><then pos:line="739" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="740" pos:column="7">free<pos:position pos:line="740" pos:column="11"/></name><argument_list pos:line="740" pos:column="11">(<argument><expr><name><name pos:line="740" pos:column="12">old_conn<pos:position pos:line="740" pos:column="20"/></name><operator pos:line="740" pos:column="20">-&gt;<pos:position pos:line="740" pos:column="25"/></operator><name pos:line="740" pos:column="22">proxyhost<pos:position pos:line="740" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="740" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="740" pos:column="33"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="741" pos:column="5">conn<pos:position pos:line="741" pos:column="9"/></name> <operator pos:line="741" pos:column="10">=<pos:position pos:line="741" pos:column="11"/></operator> <name pos:line="741" pos:column="12">conn_temp<pos:position pos:line="741" pos:column="21"/></name></expr>;<pos:position pos:line="741" pos:column="22"/></expr_stmt>        <comment type="block" pos:line="741" pos:column="30">/* use this connection from now on */</comment>

    <comment type="block" pos:line="743" pos:column="5">/* we need these pointers if we speak over a proxy */</comment>
    <expr_stmt><expr><name><name pos:line="744" pos:column="5">conn<pos:position pos:line="744" pos:column="9"/></name><operator pos:line="744" pos:column="9">-&gt;<pos:position pos:line="744" pos:column="14"/></operator><name pos:line="744" pos:column="11">name<pos:position pos:line="744" pos:column="15"/></name></name> <operator pos:line="744" pos:column="16">=<pos:position pos:line="744" pos:column="17"/></operator> <name><name pos:line="744" pos:column="18">conn<pos:position pos:line="744" pos:column="22"/></name><operator pos:line="744" pos:column="22">-&gt;<pos:position pos:line="744" pos:column="27"/></operator><name pos:line="744" pos:column="24">gname<pos:position pos:line="744" pos:column="29"/></name></name></expr>;<pos:position pos:line="744" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="745" pos:column="5">conn<pos:position pos:line="745" pos:column="9"/></name><operator pos:line="745" pos:column="9">-&gt;<pos:position pos:line="745" pos:column="14"/></operator><name pos:line="745" pos:column="11">hostname<pos:position pos:line="745" pos:column="19"/></name></name> <operator pos:line="745" pos:column="20">=<pos:position pos:line="745" pos:column="21"/></operator> <name><name pos:line="745" pos:column="22">old_conn<pos:position pos:line="745" pos:column="30"/></name><operator pos:line="745" pos:column="30">-&gt;<pos:position pos:line="745" pos:column="35"/></operator><name pos:line="745" pos:column="32">gname<pos:position pos:line="745" pos:column="37"/></name></name></expr>;<pos:position pos:line="745" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="747" pos:column="5">free<pos:position pos:line="747" pos:column="9"/></name><argument_list pos:line="747" pos:column="9">(<argument><expr><name><name pos:line="747" pos:column="10">conn<pos:position pos:line="747" pos:column="14"/></name><operator pos:line="747" pos:column="14">-&gt;<pos:position pos:line="747" pos:column="19"/></operator><name pos:line="747" pos:column="16">path<pos:position pos:line="747" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="747" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="747" pos:column="22"/></expr_stmt>    <comment type="block" pos:line="747" pos:column="26">/* free the previously allocated path pointer */</comment>

    <comment type="block" pos:line="749" pos:column="5">/* 'path' points to the allocated data, 'ppath' may have been advanced
       to point somewhere within the 'path' area. */</comment>
    <expr_stmt><expr><name><name pos:line="751" pos:column="5">conn<pos:position pos:line="751" pos:column="9"/></name><operator pos:line="751" pos:column="9">-&gt;<pos:position pos:line="751" pos:column="14"/></operator><name pos:line="751" pos:column="11">path<pos:position pos:line="751" pos:column="15"/></name></name> <operator pos:line="751" pos:column="16">=<pos:position pos:line="751" pos:column="17"/></operator> <name pos:line="751" pos:column="18">path<pos:position pos:line="751" pos:column="22"/></name></expr>;<pos:position pos:line="751" pos:column="23"/></expr_stmt> 
    <expr_stmt><expr><name><name pos:line="752" pos:column="5">conn<pos:position pos:line="752" pos:column="9"/></name><operator pos:line="752" pos:column="9">-&gt;<pos:position pos:line="752" pos:column="14"/></operator><name pos:line="752" pos:column="11">ppath<pos:position pos:line="752" pos:column="16"/></name></name> <operator pos:line="752" pos:column="17">=<pos:position pos:line="752" pos:column="18"/></operator> <name pos:line="752" pos:column="19">ppath<pos:position pos:line="752" pos:column="24"/></name></expr>;<pos:position pos:line="752" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="754" pos:column="5">/* re-use init */</comment>
    <expr_stmt><expr><name><name pos:line="755" pos:column="5">conn<pos:position pos:line="755" pos:column="9"/></name><operator pos:line="755" pos:column="9">-&gt;<pos:position pos:line="755" pos:column="14"/></operator><name pos:line="755" pos:column="11">bits<pos:position pos:line="755" pos:column="15"/></name><operator pos:line="755" pos:column="15">.<pos:position pos:line="755" pos:column="16"/></operator><name pos:line="755" pos:column="16">reuse<pos:position pos:line="755" pos:column="21"/></name></name> <operator pos:line="755" pos:column="22">=<pos:position pos:line="755" pos:column="23"/></operator> <name pos:line="755" pos:column="24">TRUE<pos:position pos:line="755" pos:column="28"/></name></expr>;<pos:position pos:line="755" pos:column="29"/></expr_stmt> <comment type="block" pos:line="755" pos:column="30">/* yes, we're re-using here */</comment>
    <expr_stmt><expr><name><name pos:line="756" pos:column="5">conn<pos:position pos:line="756" pos:column="9"/></name><operator pos:line="756" pos:column="9">-&gt;<pos:position pos:line="756" pos:column="14"/></operator><name pos:line="756" pos:column="11">bits<pos:position pos:line="756" pos:column="15"/></name><operator pos:line="756" pos:column="15">.<pos:position pos:line="756" pos:column="16"/></operator><name pos:line="756" pos:column="16">chunk<pos:position pos:line="756" pos:column="21"/></name></name> <operator pos:line="756" pos:column="22">=<pos:position pos:line="756" pos:column="23"/></operator> <name pos:line="756" pos:column="24">FALSE<pos:position pos:line="756" pos:column="29"/></name></expr>;<pos:position pos:line="756" pos:column="30"/></expr_stmt> <comment type="block" pos:line="756" pos:column="31">/* always assume not chunked unless told
                                 otherwise */</comment>
    <expr_stmt><expr><name><name pos:line="758" pos:column="5">conn<pos:position pos:line="758" pos:column="9"/></name><operator pos:line="758" pos:column="9">-&gt;<pos:position pos:line="758" pos:column="14"/></operator><name pos:line="758" pos:column="11">maxdownload<pos:position pos:line="758" pos:column="22"/></name></name> <operator pos:line="758" pos:column="23">=<pos:position pos:line="758" pos:column="24"/></operator> <operator pos:line="758" pos:column="25">-<pos:position pos:line="758" pos:column="26"/></operator><literal type="number" pos:line="758" pos:column="26">1<pos:position pos:line="758" pos:column="27"/></literal></expr>;<pos:position pos:line="758" pos:column="28"/></expr_stmt>  <comment type="block" pos:line="758" pos:column="30">/* might have been used previously! */</comment>

    <expr_stmt><expr><call><name pos:line="760" pos:column="5">free<pos:position pos:line="760" pos:column="9"/></name><argument_list pos:line="760" pos:column="9">(<argument><expr><name pos:line="760" pos:column="10">old_conn<pos:position pos:line="760" pos:column="18"/></name></expr></argument>)<pos:position pos:line="760" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="760" pos:column="20"/></expr_stmt>          <comment type="block" pos:line="760" pos:column="30">/* we don't need this anymore */</comment>

    <comment type="block" pos:line="762" pos:column="5">/*
     * If we're doing a resumed transfer, we need to setup our stuff
     * properly.
     */</comment>
    <expr_stmt><expr><name><name pos:line="766" pos:column="5">conn<pos:position pos:line="766" pos:column="9"/></name><operator pos:line="766" pos:column="9">-&gt;<pos:position pos:line="766" pos:column="14"/></operator><name pos:line="766" pos:column="11">resume_from<pos:position pos:line="766" pos:column="22"/></name></name> <operator pos:line="766" pos:column="23">=<pos:position pos:line="766" pos:column="24"/></operator> <name><name pos:line="766" pos:column="25">data<pos:position pos:line="766" pos:column="29"/></name><operator pos:line="766" pos:column="29">-&gt;<pos:position pos:line="766" pos:column="34"/></operator><name pos:line="766" pos:column="31">set<pos:position pos:line="766" pos:column="34"/></name><operator pos:line="766" pos:column="34">.<pos:position pos:line="766" pos:column="35"/></operator><name pos:line="766" pos:column="35">set_resume_from<pos:position pos:line="766" pos:column="50"/></name></name></expr>;<pos:position pos:line="766" pos:column="51"/></expr_stmt>
    <if pos:line="767" pos:column="5">if <condition pos:line="767" pos:column="8">(<expr><name><name pos:line="767" pos:column="9">conn<pos:position pos:line="767" pos:column="13"/></name><operator pos:line="767" pos:column="13">-&gt;<pos:position pos:line="767" pos:column="18"/></operator><name pos:line="767" pos:column="15">resume_from<pos:position pos:line="767" pos:column="26"/></name></name></expr>)<pos:position pos:line="767" pos:column="27"/></condition><then pos:line="767" pos:column="27"> <block pos:line="767" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="768" pos:column="9">snprintf<pos:position pos:line="768" pos:column="17"/></name><argument_list pos:line="768" pos:column="17">(<argument><expr><name pos:line="768" pos:column="18">resumerange<pos:position pos:line="768" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="768" pos:column="31">sizeof<argument_list pos:line="768" pos:column="37">(<argument><expr><name pos:line="768" pos:column="38">resumerange<pos:position pos:line="768" pos:column="49"/></name></expr></argument>)<pos:position pos:line="768" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="768" pos:column="52">"%d-"<pos:position pos:line="768" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="768" pos:column="59">conn<pos:position pos:line="768" pos:column="63"/></name><operator pos:line="768" pos:column="63">-&gt;<pos:position pos:line="768" pos:column="68"/></operator><name pos:line="768" pos:column="65">resume_from<pos:position pos:line="768" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="768" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="768" pos:column="78"/></expr_stmt>
        <if pos:line="769" pos:column="9">if <condition pos:line="769" pos:column="12">(<expr><name><name pos:line="769" pos:column="13">conn<pos:position pos:line="769" pos:column="17"/></name><operator pos:line="769" pos:column="17">-&gt;<pos:position pos:line="769" pos:column="22"/></operator><name pos:line="769" pos:column="19">bits<pos:position pos:line="769" pos:column="23"/></name><operator pos:line="769" pos:column="23">.<pos:position pos:line="769" pos:column="24"/></operator><name pos:line="769" pos:column="24">rangestringalloc<pos:position pos:line="769" pos:column="40"/></name></name> <operator pos:line="769" pos:column="41">==<pos:position pos:line="769" pos:column="43"/></operator> <name pos:line="769" pos:column="44">TRUE<pos:position pos:line="769" pos:column="48"/></name></expr>)<pos:position pos:line="769" pos:column="49"/></condition><then pos:line="769" pos:column="49"> 
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="770" pos:column="13">free<pos:position pos:line="770" pos:column="17"/></name><argument_list pos:line="770" pos:column="17">(<argument><expr><name><name pos:line="770" pos:column="18">conn<pos:position pos:line="770" pos:column="22"/></name><operator pos:line="770" pos:column="22">-&gt;<pos:position pos:line="770" pos:column="27"/></operator><name pos:line="770" pos:column="24">range<pos:position pos:line="770" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="770" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="770" pos:column="31"/></expr_stmt></block></then></if>
        
        <comment type="block" pos:line="772" pos:column="9">/* tell ourselves to fetch this range */</comment>
        <expr_stmt><expr><name><name pos:line="773" pos:column="9">conn<pos:position pos:line="773" pos:column="13"/></name><operator pos:line="773" pos:column="13">-&gt;<pos:position pos:line="773" pos:column="18"/></operator><name pos:line="773" pos:column="15">range<pos:position pos:line="773" pos:column="20"/></name></name> <operator pos:line="773" pos:column="21">=<pos:position pos:line="773" pos:column="22"/></operator> <call><name pos:line="773" pos:column="23">strdup<pos:position pos:line="773" pos:column="29"/></name><argument_list pos:line="773" pos:column="29">(<argument><expr><name pos:line="773" pos:column="30">resumerange<pos:position pos:line="773" pos:column="41"/></name></expr></argument>)<pos:position pos:line="773" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="773" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="774" pos:column="9">conn<pos:position pos:line="774" pos:column="13"/></name><operator pos:line="774" pos:column="13">-&gt;<pos:position pos:line="774" pos:column="18"/></operator><name pos:line="774" pos:column="15">bits<pos:position pos:line="774" pos:column="19"/></name><operator pos:line="774" pos:column="19">.<pos:position pos:line="774" pos:column="20"/></operator><name pos:line="774" pos:column="20">use_range<pos:position pos:line="774" pos:column="29"/></name></name> <operator pos:line="774" pos:column="30">=<pos:position pos:line="774" pos:column="31"/></operator> <name pos:line="774" pos:column="32">TRUE<pos:position pos:line="774" pos:column="36"/></name></expr>;<pos:position pos:line="774" pos:column="37"/></expr_stmt>        <comment type="block" pos:line="774" pos:column="45">/* enable range download */</comment>
        <expr_stmt><expr><name><name pos:line="775" pos:column="9">conn<pos:position pos:line="775" pos:column="13"/></name><operator pos:line="775" pos:column="13">-&gt;<pos:position pos:line="775" pos:column="18"/></operator><name pos:line="775" pos:column="15">bits<pos:position pos:line="775" pos:column="19"/></name><operator pos:line="775" pos:column="19">.<pos:position pos:line="775" pos:column="20"/></operator><name pos:line="775" pos:column="20">rangestringalloc<pos:position pos:line="775" pos:column="36"/></name></name> <operator pos:line="775" pos:column="37">=<pos:position pos:line="775" pos:column="38"/></operator> <name pos:line="775" pos:column="39">TRUE<pos:position pos:line="775" pos:column="43"/></name></expr>;<pos:position pos:line="775" pos:column="44"/></expr_stmt> <comment type="block" pos:line="775" pos:column="45">/* mark range string allocated */</comment>
    }<pos:position pos:line="776" pos:column="6"/></block></then>
    <elseif pos:line="777" pos:column="5">else <if pos:line="777" pos:column="10">if <condition pos:line="777" pos:column="13">(<expr><name><name pos:line="777" pos:column="14">data<pos:position pos:line="777" pos:column="18"/></name><operator pos:line="777" pos:column="18">-&gt;<pos:position pos:line="777" pos:column="23"/></operator><name pos:line="777" pos:column="20">set<pos:position pos:line="777" pos:column="23"/></name><operator pos:line="777" pos:column="23">.<pos:position pos:line="777" pos:column="24"/></operator><name pos:line="777" pos:column="24">set_range<pos:position pos:line="777" pos:column="33"/></name></name></expr>)<pos:position pos:line="777" pos:column="34"/></condition><then pos:line="777" pos:column="34"> <block pos:line="777" pos:column="35">{
      <comment type="block" pos:line="778" pos:column="7">/* There is a range, but is not a resume, useful for random ftp access */</comment>
      <expr_stmt><expr><name><name pos:line="779" pos:column="7">conn<pos:position pos:line="779" pos:column="11"/></name><operator pos:line="779" pos:column="11">-&gt;<pos:position pos:line="779" pos:column="16"/></operator><name pos:line="779" pos:column="13">range<pos:position pos:line="779" pos:column="18"/></name></name> <operator pos:line="779" pos:column="19">=<pos:position pos:line="779" pos:column="20"/></operator> <call><name pos:line="779" pos:column="21">strdup<pos:position pos:line="779" pos:column="27"/></name><argument_list pos:line="779" pos:column="27">(<argument><expr><name><name pos:line="779" pos:column="28">data<pos:position pos:line="779" pos:column="32"/></name><operator pos:line="779" pos:column="32">-&gt;<pos:position pos:line="779" pos:column="37"/></operator><name pos:line="779" pos:column="34">set<pos:position pos:line="779" pos:column="37"/></name><operator pos:line="779" pos:column="37">.<pos:position pos:line="779" pos:column="38"/></operator><name pos:line="779" pos:column="38">set_range<pos:position pos:line="779" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="779" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="779" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="780" pos:column="7">conn<pos:position pos:line="780" pos:column="11"/></name><operator pos:line="780" pos:column="11">-&gt;<pos:position pos:line="780" pos:column="16"/></operator><name pos:line="780" pos:column="13">bits<pos:position pos:line="780" pos:column="17"/></name><operator pos:line="780" pos:column="17">.<pos:position pos:line="780" pos:column="18"/></operator><name pos:line="780" pos:column="18">rangestringalloc<pos:position pos:line="780" pos:column="34"/></name></name> <operator pos:line="780" pos:column="35">=<pos:position pos:line="780" pos:column="36"/></operator> <name pos:line="780" pos:column="37">TRUE<pos:position pos:line="780" pos:column="41"/></name></expr>;<pos:position pos:line="780" pos:column="42"/></expr_stmt> <comment type="block" pos:line="780" pos:column="43">/* mark range string allocated */</comment>
      <expr_stmt><expr><name><name pos:line="781" pos:column="7">conn<pos:position pos:line="781" pos:column="11"/></name><operator pos:line="781" pos:column="11">-&gt;<pos:position pos:line="781" pos:column="16"/></operator><name pos:line="781" pos:column="13">bits<pos:position pos:line="781" pos:column="17"/></name><operator pos:line="781" pos:column="17">.<pos:position pos:line="781" pos:column="18"/></operator><name pos:line="781" pos:column="18">use_range<pos:position pos:line="781" pos:column="27"/></name></name> <operator pos:line="781" pos:column="28">=<pos:position pos:line="781" pos:column="29"/></operator> <name pos:line="781" pos:column="30">TRUE<pos:position pos:line="781" pos:column="34"/></name></expr>;<pos:position pos:line="781" pos:column="35"/></expr_stmt>        <comment type="block" pos:line="781" pos:column="43">/* enable range download */</comment>
    }<pos:position pos:line="782" pos:column="6"/></block></then></if></elseif></if>
    
    <expr_stmt><expr><operator pos:line="784" pos:column="5">*<pos:position pos:line="784" pos:column="6"/></operator><name pos:line="784" pos:column="6">in_connect<pos:position pos:line="784" pos:column="16"/></name> <operator pos:line="784" pos:column="17">=<pos:position pos:line="784" pos:column="18"/></operator> <name pos:line="784" pos:column="19">conn<pos:position pos:line="784" pos:column="23"/></name></expr>;<pos:position pos:line="784" pos:column="24"/></expr_stmt>      <comment type="block" pos:line="784" pos:column="30">/* return this instead! */</comment>

    <expr_stmt><expr><call><name pos:line="786" pos:column="5">infof<pos:position pos:line="786" pos:column="10"/></name><argument_list pos:line="786" pos:column="10">(<argument><expr><name pos:line="786" pos:column="11">data<pos:position pos:line="786" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="786" pos:column="17">"Re-using existing connection! (#%d)\n"<pos:position pos:line="786" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="786" pos:column="58">conn<pos:position pos:line="786" pos:column="62"/></name><operator pos:line="786" pos:column="62">-&gt;<pos:position pos:line="786" pos:column="67"/></operator><name pos:line="786" pos:column="64">connectindex<pos:position pos:line="786" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="786" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="786" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="787" pos:column="4"/></block></then>
  <else pos:line="788" pos:column="3">else <block pos:line="788" pos:column="8">{
    <comment type="block" pos:line="789" pos:column="5">/*
     * This is a brand new connection, so let's store it in the connection
     * cache of ours!
     */</comment>
    <expr_stmt><expr><call><name pos:line="793" pos:column="5">ConnectionStore<pos:position pos:line="793" pos:column="20"/></name><argument_list pos:line="793" pos:column="20">(<argument><expr><name pos:line="793" pos:column="21">data<pos:position pos:line="793" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="793" pos:column="27">conn<pos:position pos:line="793" pos:column="31"/></name></expr></argument>)<pos:position pos:line="793" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="793" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="794" pos:column="4"/></block></else></if>

  <comment type="block" format="doxygen" pos:line="796" pos:column="3">/*************************************************************
   * Resolve the name of the server or proxy
   *************************************************************/</comment>
  <if pos:line="799" pos:column="3">if<condition pos:line="799" pos:column="5">(<expr><operator pos:line="799" pos:column="6">!<pos:position pos:line="799" pos:column="7"/></operator><name><name pos:line="799" pos:column="7">data<pos:position pos:line="799" pos:column="11"/></name><operator pos:line="799" pos:column="11">-&gt;<pos:position pos:line="799" pos:column="16"/></operator><name pos:line="799" pos:column="13">change<pos:position pos:line="799" pos:column="19"/></name><operator pos:line="799" pos:column="19">.<pos:position pos:line="799" pos:column="20"/></operator><name pos:line="799" pos:column="20">proxy<pos:position pos:line="799" pos:column="25"/></name></name></expr>)<pos:position pos:line="799" pos:column="26"/></condition><then pos:line="799" pos:column="26"> <block pos:line="799" pos:column="27">{
    <comment type="block" pos:line="800" pos:column="5">/* If not connecting via a proxy, extract the port from the URL, if it is
     * there, thus overriding any defaults that might have been set above. */</comment>
    <expr_stmt><expr><name><name pos:line="802" pos:column="5">conn<pos:position pos:line="802" pos:column="9"/></name><operator pos:line="802" pos:column="9">-&gt;<pos:position pos:line="802" pos:column="14"/></operator><name pos:line="802" pos:column="11">port<pos:position pos:line="802" pos:column="15"/></name></name> <operator pos:line="802" pos:column="16">=<pos:position pos:line="802" pos:column="17"/></operator>  <name><name pos:line="802" pos:column="19">conn<pos:position pos:line="802" pos:column="23"/></name><operator pos:line="802" pos:column="23">-&gt;<pos:position pos:line="802" pos:column="28"/></operator><name pos:line="802" pos:column="25">remote_port<pos:position pos:line="802" pos:column="36"/></name></name></expr>;<pos:position pos:line="802" pos:column="37"/></expr_stmt> <comment type="block" pos:line="802" pos:column="38">/* it is the same port */</comment>

    <comment type="block" pos:line="804" pos:column="5">/* Resolve target host right on */</comment>
    <if pos:line="805" pos:column="5">if<condition pos:line="805" pos:column="7">(<expr><operator pos:line="805" pos:column="8">!<pos:position pos:line="805" pos:column="9"/></operator><name><name pos:line="805" pos:column="9">conn<pos:position pos:line="805" pos:column="13"/></name><operator pos:line="805" pos:column="13">-&gt;<pos:position pos:line="805" pos:column="18"/></operator><name pos:line="805" pos:column="15">hp<pos:position pos:line="805" pos:column="17"/></name></name></expr>)<pos:position pos:line="805" pos:column="18"/></condition><then pos:line="805" pos:column="18"> <block pos:line="805" pos:column="19">{
<cpp:ifdef pos:line="806" pos:column="1">#<cpp:directive pos:line="806" pos:column="2">ifdef<pos:position pos:line="806" pos:column="7"/></cpp:directive> <name pos:line="806" pos:column="8">ENABLE_IPV6<pos:position pos:line="806" pos:column="19"/></name></cpp:ifdef>
      <comment type="block" pos:line="807" pos:column="7">/* it might already be set if reusing a connection */</comment>
      <expr_stmt><expr><name><name pos:line="808" pos:column="7">conn<pos:position pos:line="808" pos:column="11"/></name><operator pos:line="808" pos:column="11">-&gt;<pos:position pos:line="808" pos:column="16"/></operator><name pos:line="808" pos:column="13">hp<pos:position pos:line="808" pos:column="15"/></name></name> <operator pos:line="808" pos:column="16">=<pos:position pos:line="808" pos:column="17"/></operator> <call><name pos:line="808" pos:column="18">Curl_getaddrinfo<pos:position pos:line="808" pos:column="34"/></name><argument_list pos:line="808" pos:column="34">(<argument><expr><name pos:line="808" pos:column="35">data<pos:position pos:line="808" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="808" pos:column="41">conn<pos:position pos:line="808" pos:column="45"/></name><operator pos:line="808" pos:column="45">-&gt;<pos:position pos:line="808" pos:column="50"/></operator><name pos:line="808" pos:column="47">name<pos:position pos:line="808" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="808" pos:column="53">conn<pos:position pos:line="808" pos:column="57"/></name><operator pos:line="808" pos:column="57">-&gt;<pos:position pos:line="808" pos:column="62"/></operator><name pos:line="808" pos:column="59">port<pos:position pos:line="808" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="808" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="65"/></expr_stmt>
<cpp:else pos:line="809" pos:column="1">#<cpp:directive pos:line="809" pos:column="2">else<pos:position pos:line="809" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="810" pos:column="7">/* it might already be set if reusing a connection */</comment>
      <expr_stmt><expr><name><name pos:line="811" pos:column="7">conn<pos:position pos:line="811" pos:column="11"/></name><operator pos:line="811" pos:column="11">-&gt;<pos:position pos:line="811" pos:column="16"/></operator><name pos:line="811" pos:column="13">hp<pos:position pos:line="811" pos:column="15"/></name></name> <operator pos:line="811" pos:column="16">=<pos:position pos:line="811" pos:column="17"/></operator> <call><name pos:line="811" pos:column="18">Curl_gethost<pos:position pos:line="811" pos:column="30"/></name><argument_list pos:line="811" pos:column="30">(<argument><expr><name pos:line="811" pos:column="31">data<pos:position pos:line="811" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="811" pos:column="37">conn<pos:position pos:line="811" pos:column="41"/></name><operator pos:line="811" pos:column="41">-&gt;<pos:position pos:line="811" pos:column="46"/></operator><name pos:line="811" pos:column="43">name<pos:position pos:line="811" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="811" pos:column="49">&amp;<pos:position pos:line="811" pos:column="54"/></operator><name><name pos:line="811" pos:column="50">conn<pos:position pos:line="811" pos:column="54"/></name><operator pos:line="811" pos:column="54">-&gt;<pos:position pos:line="811" pos:column="59"/></operator><name pos:line="811" pos:column="56">hostent_buf<pos:position pos:line="811" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="811" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="811" pos:column="69"/></expr_stmt>
<cpp:endif pos:line="812" pos:column="1">#<cpp:directive pos:line="812" pos:column="2">endif<pos:position pos:line="812" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="813" pos:column="6"/></block></then></if>
    <if pos:line="814" pos:column="5">if<condition pos:line="814" pos:column="7">(<expr><operator pos:line="814" pos:column="8">!<pos:position pos:line="814" pos:column="9"/></operator><name><name pos:line="814" pos:column="9">conn<pos:position pos:line="814" pos:column="13"/></name><operator pos:line="814" pos:column="13">-&gt;<pos:position pos:line="814" pos:column="18"/></operator><name pos:line="814" pos:column="15">hp<pos:position pos:line="814" pos:column="17"/></name></name></expr>)<pos:position pos:line="814" pos:column="18"/></condition><then pos:line="814" pos:column="18">
    <block pos:line="815" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="816" pos:column="7">failf<pos:position pos:line="816" pos:column="12"/></name><argument_list pos:line="816" pos:column="12">(<argument><expr><name pos:line="816" pos:column="13">data<pos:position pos:line="816" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="816" pos:column="19">"Couldn't resolve host '%s'"<pos:position pos:line="816" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="816" pos:column="49">conn<pos:position pos:line="816" pos:column="53"/></name><operator pos:line="816" pos:column="53">-&gt;<pos:position pos:line="816" pos:column="58"/></operator><name pos:line="816" pos:column="55">name<pos:position pos:line="816" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="816" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="816" pos:column="61"/></expr_stmt>
      <return pos:line="817" pos:column="7">return <expr><name pos:line="817" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="817" pos:column="40"/></name></expr>;<pos:position pos:line="817" pos:column="41"/></return>
    }<pos:position pos:line="818" pos:column="6"/></block></then></if>
  }<pos:position pos:line="819" pos:column="4"/></block></then>
  <elseif pos:line="820" pos:column="3">else <if pos:line="820" pos:column="8">if<condition pos:line="820" pos:column="10">(<expr><operator pos:line="820" pos:column="11">!<pos:position pos:line="820" pos:column="12"/></operator><name><name pos:line="820" pos:column="12">conn<pos:position pos:line="820" pos:column="16"/></name><operator pos:line="820" pos:column="16">-&gt;<pos:position pos:line="820" pos:column="21"/></operator><name pos:line="820" pos:column="18">hp<pos:position pos:line="820" pos:column="20"/></name></name></expr>)<pos:position pos:line="820" pos:column="21"/></condition><then pos:line="820" pos:column="21"> <block pos:line="820" pos:column="22">{
    <comment type="block" pos:line="821" pos:column="5">/* This is a proxy that hasn't been resolved yet. It may be resolved
       if we're reusing an existing connection. */</comment>

    <comment type="block" pos:line="824" pos:column="5">/* resolve proxy */</comment>
<cpp:ifdef pos:line="825" pos:column="1">#<cpp:directive pos:line="825" pos:column="2">ifdef<pos:position pos:line="825" pos:column="7"/></cpp:directive> <name pos:line="825" pos:column="8">ENABLE_IPV6<pos:position pos:line="825" pos:column="19"/></name></cpp:ifdef>
      <comment type="block" pos:line="826" pos:column="7">/* it might already be set if reusing a connection */</comment>
    <expr_stmt><expr><name><name pos:line="827" pos:column="5">conn<pos:position pos:line="827" pos:column="9"/></name><operator pos:line="827" pos:column="9">-&gt;<pos:position pos:line="827" pos:column="14"/></operator><name pos:line="827" pos:column="11">hp<pos:position pos:line="827" pos:column="13"/></name></name> <operator pos:line="827" pos:column="14">=<pos:position pos:line="827" pos:column="15"/></operator> <call><name pos:line="827" pos:column="16">Curl_getaddrinfo<pos:position pos:line="827" pos:column="32"/></name><argument_list pos:line="827" pos:column="32">(<argument><expr><name pos:line="827" pos:column="33">data<pos:position pos:line="827" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="827" pos:column="39">conn<pos:position pos:line="827" pos:column="43"/></name><operator pos:line="827" pos:column="43">-&gt;<pos:position pos:line="827" pos:column="48"/></operator><name pos:line="827" pos:column="45">proxyhost<pos:position pos:line="827" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="827" pos:column="56">conn<pos:position pos:line="827" pos:column="60"/></name><operator pos:line="827" pos:column="60">-&gt;<pos:position pos:line="827" pos:column="65"/></operator><name pos:line="827" pos:column="62">port<pos:position pos:line="827" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="827" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="827" pos:column="68"/></expr_stmt>
<cpp:else pos:line="828" pos:column="1">#<cpp:directive pos:line="828" pos:column="2">else<pos:position pos:line="828" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="829" pos:column="5">conn<pos:position pos:line="829" pos:column="9"/></name><operator pos:line="829" pos:column="9">-&gt;<pos:position pos:line="829" pos:column="14"/></operator><name pos:line="829" pos:column="11">hp<pos:position pos:line="829" pos:column="13"/></name></name> <operator pos:line="829" pos:column="14">=<pos:position pos:line="829" pos:column="15"/></operator> <call><name pos:line="829" pos:column="16">Curl_gethost<pos:position pos:line="829" pos:column="28"/></name><argument_list pos:line="829" pos:column="28">(<argument><expr><name pos:line="829" pos:column="29">data<pos:position pos:line="829" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="829" pos:column="35">conn<pos:position pos:line="829" pos:column="39"/></name><operator pos:line="829" pos:column="39">-&gt;<pos:position pos:line="829" pos:column="44"/></operator><name pos:line="829" pos:column="41">proxyhost<pos:position pos:line="829" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="829" pos:column="52">&amp;<pos:position pos:line="829" pos:column="57"/></operator><name><name pos:line="829" pos:column="53">conn<pos:position pos:line="829" pos:column="57"/></name><operator pos:line="829" pos:column="57">-&gt;<pos:position pos:line="829" pos:column="62"/></operator><name pos:line="829" pos:column="59">hostent_buf<pos:position pos:line="829" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="829" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="829" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="830" pos:column="1">#<cpp:directive pos:line="830" pos:column="2">endif<pos:position pos:line="830" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="831" pos:column="5">if<condition pos:line="831" pos:column="7">(<expr><operator pos:line="831" pos:column="8">!<pos:position pos:line="831" pos:column="9"/></operator><name><name pos:line="831" pos:column="9">conn<pos:position pos:line="831" pos:column="13"/></name><operator pos:line="831" pos:column="13">-&gt;<pos:position pos:line="831" pos:column="18"/></operator><name pos:line="831" pos:column="15">hp<pos:position pos:line="831" pos:column="17"/></name></name></expr>)<pos:position pos:line="831" pos:column="18"/></condition><then pos:line="831" pos:column="18"> <block pos:line="831" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="832" pos:column="7">failf<pos:position pos:line="832" pos:column="12"/></name><argument_list pos:line="832" pos:column="12">(<argument><expr><name pos:line="832" pos:column="13">data<pos:position pos:line="832" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="832" pos:column="19">"Couldn't resolve proxy '%s'"<pos:position pos:line="832" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="832" pos:column="50">conn<pos:position pos:line="832" pos:column="54"/></name><operator pos:line="832" pos:column="54">-&gt;<pos:position pos:line="832" pos:column="59"/></operator><name pos:line="832" pos:column="56">proxyhost<pos:position pos:line="832" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="832" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="832" pos:column="67"/></expr_stmt>
      <return pos:line="833" pos:column="7">return <expr><name pos:line="833" pos:column="14">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="833" pos:column="41"/></name></expr>;<pos:position pos:line="833" pos:column="42"/></return>
    }<pos:position pos:line="834" pos:column="6"/></block></then></if>
  }<pos:position pos:line="835" pos:column="4"/></block></then></if></elseif></if>
  <expr_stmt><expr><call><name pos:line="836" pos:column="3">Curl_pgrsTime<pos:position pos:line="836" pos:column="16"/></name><argument_list pos:line="836" pos:column="16">(<argument><expr><name pos:line="836" pos:column="17">data<pos:position pos:line="836" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="836" pos:column="23">TIMER_NAMELOOKUP<pos:position pos:line="836" pos:column="39"/></name></expr></argument>)<pos:position pos:line="836" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="41"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="838" pos:column="3">/*************************************************************
   * Proxy authentication
   *************************************************************/</comment>
  <if pos:line="841" pos:column="3">if<condition pos:line="841" pos:column="5">(<expr><name><name pos:line="841" pos:column="6">conn<pos:position pos:line="841" pos:column="10"/></name><operator pos:line="841" pos:column="10">-&gt;<pos:position pos:line="841" pos:column="15"/></operator><name pos:line="841" pos:column="12">bits<pos:position pos:line="841" pos:column="16"/></name><operator pos:line="841" pos:column="16">.<pos:position pos:line="841" pos:column="17"/></operator><name pos:line="841" pos:column="17">proxy_user_passwd<pos:position pos:line="841" pos:column="34"/></name></name></expr>)<pos:position pos:line="841" pos:column="35"/></condition><then pos:line="841" pos:column="35"> <block pos:line="841" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="842" pos:column="5">char<pos:position pos:line="842" pos:column="9"/></name> <modifier pos:line="842" pos:column="10">*<pos:position pos:line="842" pos:column="11"/></modifier></type><name pos:line="842" pos:column="11">authorization<pos:position pos:line="842" pos:column="24"/></name></decl>;<pos:position pos:line="842" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="843" pos:column="5">snprintf<pos:position pos:line="843" pos:column="13"/></name><argument_list pos:line="843" pos:column="13">(<argument><expr><name><name pos:line="843" pos:column="14">data<pos:position pos:line="843" pos:column="18"/></name><operator pos:line="843" pos:column="18">-&gt;<pos:position pos:line="843" pos:column="23"/></operator><name pos:line="843" pos:column="20">state<pos:position pos:line="843" pos:column="25"/></name><operator pos:line="843" pos:column="25">.<pos:position pos:line="843" pos:column="26"/></operator><name pos:line="843" pos:column="26">buffer<pos:position pos:line="843" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="843" pos:column="34">BUFSIZE<pos:position pos:line="843" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="843" pos:column="43">"%s:%s"<pos:position pos:line="843" pos:column="50"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="844" pos:column="14">data<pos:position pos:line="844" pos:column="18"/></name><operator pos:line="844" pos:column="18">-&gt;<pos:position pos:line="844" pos:column="23"/></operator><name pos:line="844" pos:column="20">state<pos:position pos:line="844" pos:column="25"/></name><operator pos:line="844" pos:column="25">.<pos:position pos:line="844" pos:column="26"/></operator><name pos:line="844" pos:column="26">proxyuser<pos:position pos:line="844" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="844" pos:column="37">data<pos:position pos:line="844" pos:column="41"/></name><operator pos:line="844" pos:column="41">-&gt;<pos:position pos:line="844" pos:column="46"/></operator><name pos:line="844" pos:column="43">state<pos:position pos:line="844" pos:column="48"/></name><operator pos:line="844" pos:column="48">.<pos:position pos:line="844" pos:column="49"/></operator><name pos:line="844" pos:column="49">proxypasswd<pos:position pos:line="844" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="844" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="844" pos:column="62"/></expr_stmt>
    <if pos:line="845" pos:column="5">if<condition pos:line="845" pos:column="7">(<expr><call><name pos:line="845" pos:column="8">Curl_base64_encode<pos:position pos:line="845" pos:column="26"/></name><argument_list pos:line="845" pos:column="26">(<argument><expr><name><name pos:line="845" pos:column="27">data<pos:position pos:line="845" pos:column="31"/></name><operator pos:line="845" pos:column="31">-&gt;<pos:position pos:line="845" pos:column="36"/></operator><name pos:line="845" pos:column="33">state<pos:position pos:line="845" pos:column="38"/></name><operator pos:line="845" pos:column="38">.<pos:position pos:line="845" pos:column="39"/></operator><name pos:line="845" pos:column="39">buffer<pos:position pos:line="845" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="845" pos:column="47">strlen<pos:position pos:line="845" pos:column="53"/></name><argument_list pos:line="845" pos:column="53">(<argument><expr><name><name pos:line="845" pos:column="54">data<pos:position pos:line="845" pos:column="58"/></name><operator pos:line="845" pos:column="58">-&gt;<pos:position pos:line="845" pos:column="63"/></operator><name pos:line="845" pos:column="60">state<pos:position pos:line="845" pos:column="65"/></name><operator pos:line="845" pos:column="65">.<pos:position pos:line="845" pos:column="66"/></operator><name pos:line="845" pos:column="66">buffer<pos:position pos:line="845" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="845" pos:column="73"/></argument_list></call></expr></argument>,
                          <argument><expr><operator pos:line="846" pos:column="27">&amp;<pos:position pos:line="846" pos:column="32"/></operator><name pos:line="846" pos:column="28">authorization<pos:position pos:line="846" pos:column="41"/></name></expr></argument>)<pos:position pos:line="846" pos:column="42"/></argument_list></call> <operator pos:line="846" pos:column="43">&gt;=<pos:position pos:line="846" pos:column="48"/></operator> <literal type="number" pos:line="846" pos:column="46">0<pos:position pos:line="846" pos:column="47"/></literal></expr>)<pos:position pos:line="846" pos:column="48"/></condition><then pos:line="846" pos:column="48"> <block pos:line="846" pos:column="49">{
      <if pos:line="847" pos:column="7">if<condition pos:line="847" pos:column="9">(<expr><name><name pos:line="847" pos:column="10">conn<pos:position pos:line="847" pos:column="14"/></name><operator pos:line="847" pos:column="14">-&gt;<pos:position pos:line="847" pos:column="19"/></operator><name pos:line="847" pos:column="16">allocptr<pos:position pos:line="847" pos:column="24"/></name><operator pos:line="847" pos:column="24">.<pos:position pos:line="847" pos:column="25"/></operator><name pos:line="847" pos:column="25">proxyuserpwd<pos:position pos:line="847" pos:column="37"/></name></name></expr>)<pos:position pos:line="847" pos:column="38"/></condition><then pos:line="847" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="848" pos:column="9">free<pos:position pos:line="848" pos:column="13"/></name><argument_list pos:line="848" pos:column="13">(<argument><expr><name><name pos:line="848" pos:column="14">conn<pos:position pos:line="848" pos:column="18"/></name><operator pos:line="848" pos:column="18">-&gt;<pos:position pos:line="848" pos:column="23"/></operator><name pos:line="848" pos:column="20">allocptr<pos:position pos:line="848" pos:column="28"/></name><operator pos:line="848" pos:column="28">.<pos:position pos:line="848" pos:column="29"/></operator><name pos:line="848" pos:column="29">proxyuserpwd<pos:position pos:line="848" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="848" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="848" pos:column="43"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="849" pos:column="7">conn<pos:position pos:line="849" pos:column="11"/></name><operator pos:line="849" pos:column="11">-&gt;<pos:position pos:line="849" pos:column="16"/></operator><name pos:line="849" pos:column="13">allocptr<pos:position pos:line="849" pos:column="21"/></name><operator pos:line="849" pos:column="21">.<pos:position pos:line="849" pos:column="22"/></operator><name pos:line="849" pos:column="22">proxyuserpwd<pos:position pos:line="849" pos:column="34"/></name></name> <operator pos:line="849" pos:column="35">=<pos:position pos:line="849" pos:column="36"/></operator>
        <call><name pos:line="850" pos:column="9">aprintf<pos:position pos:line="850" pos:column="16"/></name><argument_list pos:line="850" pos:column="16">(<argument><expr><literal type="string" pos:line="850" pos:column="17">"Proxy-authorization: Basic %s\015\012"<pos:position pos:line="850" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="850" pos:column="58">authorization<pos:position pos:line="850" pos:column="71"/></name></expr></argument>)<pos:position pos:line="850" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="850" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="851" pos:column="7">free<pos:position pos:line="851" pos:column="11"/></name><argument_list pos:line="851" pos:column="11">(<argument><expr><name pos:line="851" pos:column="12">authorization<pos:position pos:line="851" pos:column="25"/></name></expr></argument>)<pos:position pos:line="851" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="851" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="852" pos:column="6"/></block></then></if>
  }<pos:position pos:line="853" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="855" pos:column="3">/*************************************************************
   * Send user-agent to HTTP proxies even if the target protocol
   * isn't HTTP.
   *************************************************************/</comment>
  <if pos:line="859" pos:column="3">if<condition pos:line="859" pos:column="5">(<expr><operator pos:line="859" pos:column="6">(<pos:position pos:line="859" pos:column="7"/></operator><name><name pos:line="859" pos:column="7">conn<pos:position pos:line="859" pos:column="11"/></name><operator pos:line="859" pos:column="11">-&gt;<pos:position pos:line="859" pos:column="16"/></operator><name pos:line="859" pos:column="13">protocol<pos:position pos:line="859" pos:column="21"/></name></name><operator pos:line="859" pos:column="21">&amp;<pos:position pos:line="859" pos:column="26"/></operator><name pos:line="859" pos:column="22">PROT_HTTP<pos:position pos:line="859" pos:column="31"/></name><operator pos:line="859" pos:column="31">)<pos:position pos:line="859" pos:column="32"/></operator> <operator pos:line="859" pos:column="33">||<pos:position pos:line="859" pos:column="35"/></operator> <name><name pos:line="859" pos:column="36">data<pos:position pos:line="859" pos:column="40"/></name><operator pos:line="859" pos:column="40">-&gt;<pos:position pos:line="859" pos:column="45"/></operator><name pos:line="859" pos:column="42">change<pos:position pos:line="859" pos:column="48"/></name><operator pos:line="859" pos:column="48">.<pos:position pos:line="859" pos:column="49"/></operator><name pos:line="859" pos:column="49">proxy<pos:position pos:line="859" pos:column="54"/></name></name></expr>)<pos:position pos:line="859" pos:column="55"/></condition><then pos:line="859" pos:column="55"> <block pos:line="859" pos:column="56">{
    <if pos:line="860" pos:column="5">if<condition pos:line="860" pos:column="7">(<expr><name><name pos:line="860" pos:column="8">data<pos:position pos:line="860" pos:column="12"/></name><operator pos:line="860" pos:column="12">-&gt;<pos:position pos:line="860" pos:column="17"/></operator><name pos:line="860" pos:column="14">set<pos:position pos:line="860" pos:column="17"/></name><operator pos:line="860" pos:column="17">.<pos:position pos:line="860" pos:column="18"/></operator><name pos:line="860" pos:column="18">useragent<pos:position pos:line="860" pos:column="27"/></name></name></expr>)<pos:position pos:line="860" pos:column="28"/></condition><then pos:line="860" pos:column="28"> <block pos:line="860" pos:column="29">{
      <if pos:line="861" pos:column="7">if<condition pos:line="861" pos:column="9">(<expr><name><name pos:line="861" pos:column="10">conn<pos:position pos:line="861" pos:column="14"/></name><operator pos:line="861" pos:column="14">-&gt;<pos:position pos:line="861" pos:column="19"/></operator><name pos:line="861" pos:column="16">allocptr<pos:position pos:line="861" pos:column="24"/></name><operator pos:line="861" pos:column="24">.<pos:position pos:line="861" pos:column="25"/></operator><name pos:line="861" pos:column="25">uagent<pos:position pos:line="861" pos:column="31"/></name></name></expr>)<pos:position pos:line="861" pos:column="32"/></condition><then pos:line="861" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="862" pos:column="9">free<pos:position pos:line="862" pos:column="13"/></name><argument_list pos:line="862" pos:column="13">(<argument><expr><name><name pos:line="862" pos:column="14">conn<pos:position pos:line="862" pos:column="18"/></name><operator pos:line="862" pos:column="18">-&gt;<pos:position pos:line="862" pos:column="23"/></operator><name pos:line="862" pos:column="20">allocptr<pos:position pos:line="862" pos:column="28"/></name><operator pos:line="862" pos:column="28">.<pos:position pos:line="862" pos:column="29"/></operator><name pos:line="862" pos:column="29">uagent<pos:position pos:line="862" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="862" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="862" pos:column="37"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="863" pos:column="7">conn<pos:position pos:line="863" pos:column="11"/></name><operator pos:line="863" pos:column="11">-&gt;<pos:position pos:line="863" pos:column="16"/></operator><name pos:line="863" pos:column="13">allocptr<pos:position pos:line="863" pos:column="21"/></name><operator pos:line="863" pos:column="21">.<pos:position pos:line="863" pos:column="22"/></operator><name pos:line="863" pos:column="22">uagent<pos:position pos:line="863" pos:column="28"/></name></name> <operator pos:line="863" pos:column="29">=<pos:position pos:line="863" pos:column="30"/></operator>
        <call><name pos:line="864" pos:column="9">aprintf<pos:position pos:line="864" pos:column="16"/></name><argument_list pos:line="864" pos:column="16">(<argument><expr><literal type="string" pos:line="864" pos:column="17">"User-Agent: %s\015\012"<pos:position pos:line="864" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="864" pos:column="43">data<pos:position pos:line="864" pos:column="47"/></name><operator pos:line="864" pos:column="47">-&gt;<pos:position pos:line="864" pos:column="52"/></operator><name pos:line="864" pos:column="49">set<pos:position pos:line="864" pos:column="52"/></name><operator pos:line="864" pos:column="52">.<pos:position pos:line="864" pos:column="53"/></operator><name pos:line="864" pos:column="53">useragent<pos:position pos:line="864" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="864" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="864" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="865" pos:column="6"/></block></then></if>
  }<pos:position pos:line="866" pos:column="4"/></block></then></if>

  <if pos:line="868" pos:column="3">if<condition pos:line="868" pos:column="5">(<expr><operator pos:line="868" pos:column="6">-<pos:position pos:line="868" pos:column="7"/></operator><literal type="number" pos:line="868" pos:column="7">1<pos:position pos:line="868" pos:column="8"/></literal> <operator pos:line="868" pos:column="9">==<pos:position pos:line="868" pos:column="11"/></operator> <name><name pos:line="868" pos:column="12">conn<pos:position pos:line="868" pos:column="16"/></name><operator pos:line="868" pos:column="16">-&gt;<pos:position pos:line="868" pos:column="21"/></operator><name pos:line="868" pos:column="18">firstsocket<pos:position pos:line="868" pos:column="29"/></name></name></expr>)<pos:position pos:line="868" pos:column="30"/></condition><then pos:line="868" pos:column="30"> <block pos:line="868" pos:column="31">{
    <comment type="block" pos:line="869" pos:column="5">/* Connect only if not already connected! */</comment>
    <expr_stmt><expr><name pos:line="870" pos:column="5">result<pos:position pos:line="870" pos:column="11"/></name> <operator pos:line="870" pos:column="12">=<pos:position pos:line="870" pos:column="13"/></operator> <call><name pos:line="870" pos:column="14">ConnectPlease<pos:position pos:line="870" pos:column="27"/></name><argument_list pos:line="870" pos:column="27">(<argument><expr><name pos:line="870" pos:column="28">data<pos:position pos:line="870" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="870" pos:column="34">conn<pos:position pos:line="870" pos:column="38"/></name></expr></argument>)<pos:position pos:line="870" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="870" pos:column="40"/></expr_stmt>
    <if pos:line="871" pos:column="5">if<condition pos:line="871" pos:column="7">(<expr><name pos:line="871" pos:column="8">CURLE_OK<pos:position pos:line="871" pos:column="16"/></name> <operator pos:line="871" pos:column="17">!=<pos:position pos:line="871" pos:column="19"/></operator> <name pos:line="871" pos:column="20">result<pos:position pos:line="871" pos:column="26"/></name></expr>)<pos:position pos:line="871" pos:column="27"/></condition><then pos:line="871" pos:column="27">
      <block type="pseudo"><return pos:line="872" pos:column="7">return <expr><name pos:line="872" pos:column="14">result<pos:position pos:line="872" pos:column="20"/></name></expr>;<pos:position pos:line="872" pos:column="21"/></return></block></then></if>

    <if pos:line="874" pos:column="5">if<condition pos:line="874" pos:column="7">(<expr><name><name pos:line="874" pos:column="8">conn<pos:position pos:line="874" pos:column="12"/></name><operator pos:line="874" pos:column="12">-&gt;<pos:position pos:line="874" pos:column="17"/></operator><name pos:line="874" pos:column="14">curl_connect<pos:position pos:line="874" pos:column="26"/></name></name></expr>)<pos:position pos:line="874" pos:column="27"/></condition><then pos:line="874" pos:column="27"> <block pos:line="874" pos:column="28">{
      <comment type="block" pos:line="875" pos:column="7">/* is there a connect() procedure? */</comment>

      <comment type="block" pos:line="877" pos:column="7">/* set start time here for timeout purposes in the
       * connect procedure, it is later set again for the
       * progress meter purpose */</comment>
      <expr_stmt><expr><name><name pos:line="880" pos:column="7">conn<pos:position pos:line="880" pos:column="11"/></name><operator pos:line="880" pos:column="11">-&gt;<pos:position pos:line="880" pos:column="16"/></operator><name pos:line="880" pos:column="13">now<pos:position pos:line="880" pos:column="16"/></name></name> <operator pos:line="880" pos:column="17">=<pos:position pos:line="880" pos:column="18"/></operator> <call><name pos:line="880" pos:column="19">Curl_tvnow<pos:position pos:line="880" pos:column="29"/></name><argument_list pos:line="880" pos:column="29">()<pos:position pos:line="880" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="880" pos:column="32"/></expr_stmt>

      <comment type="block" pos:line="882" pos:column="7">/* Call the protocol-specific connect function */</comment>
      <expr_stmt><expr><name pos:line="883" pos:column="7">result<pos:position pos:line="883" pos:column="13"/></name> <operator pos:line="883" pos:column="14">=<pos:position pos:line="883" pos:column="15"/></operator> <call><name><name pos:line="883" pos:column="16">conn<pos:position pos:line="883" pos:column="20"/></name><operator pos:line="883" pos:column="20">-&gt;<pos:position pos:line="883" pos:column="25"/></operator><name pos:line="883" pos:column="22">curl_connect<pos:position pos:line="883" pos:column="34"/></name></name><argument_list pos:line="883" pos:column="34">(<argument><expr><name pos:line="883" pos:column="35">conn<pos:position pos:line="883" pos:column="39"/></name></expr></argument>)<pos:position pos:line="883" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="883" pos:column="41"/></expr_stmt>
      <if pos:line="884" pos:column="7">if<condition pos:line="884" pos:column="9">(<expr><name pos:line="884" pos:column="10">result<pos:position pos:line="884" pos:column="16"/></name> <operator pos:line="884" pos:column="17">!=<pos:position pos:line="884" pos:column="19"/></operator> <name pos:line="884" pos:column="20">CURLE_OK<pos:position pos:line="884" pos:column="28"/></name></expr>)<pos:position pos:line="884" pos:column="29"/></condition><then pos:line="884" pos:column="29">
        <block type="pseudo"><return pos:line="885" pos:column="9">return <expr><name pos:line="885" pos:column="16">result<pos:position pos:line="885" pos:column="22"/></name></expr>;<pos:position pos:line="885" pos:column="23"/></return></block></then></if> <comment type="block" pos:line="885" pos:column="24">/* pass back errors */</comment>
    }<pos:position pos:line="886" pos:column="6"/></block></then></if>
  }<pos:position pos:line="887" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="889" pos:column="3">Curl_pgrsTime<pos:position pos:line="889" pos:column="16"/></name><argument_list pos:line="889" pos:column="16">(<argument><expr><name pos:line="889" pos:column="17">data<pos:position pos:line="889" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="889" pos:column="23">TIMER_CONNECT<pos:position pos:line="889" pos:column="36"/></name></expr></argument>)<pos:position pos:line="889" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="889" pos:column="38"/></expr_stmt> <comment type="block" pos:line="889" pos:column="39">/* we're connected */</comment>

  <expr_stmt><expr><name><name pos:line="891" pos:column="3">conn<pos:position pos:line="891" pos:column="7"/></name><operator pos:line="891" pos:column="7">-&gt;<pos:position pos:line="891" pos:column="12"/></operator><name pos:line="891" pos:column="9">now<pos:position pos:line="891" pos:column="12"/></name></name> <operator pos:line="891" pos:column="13">=<pos:position pos:line="891" pos:column="14"/></operator> <call><name pos:line="891" pos:column="15">Curl_tvnow<pos:position pos:line="891" pos:column="25"/></name><argument_list pos:line="891" pos:column="25">()<pos:position pos:line="891" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="891" pos:column="28"/></expr_stmt> <comment type="block" pos:line="891" pos:column="29">/* time this *after* the connect is done */</comment>
  <expr_stmt><expr><name><name pos:line="892" pos:column="3">conn<pos:position pos:line="892" pos:column="7"/></name><operator pos:line="892" pos:column="7">-&gt;<pos:position pos:line="892" pos:column="12"/></operator><name pos:line="892" pos:column="9">bytecount<pos:position pos:line="892" pos:column="18"/></name></name> <operator pos:line="892" pos:column="19">=<pos:position pos:line="892" pos:column="20"/></operator> <literal type="number" pos:line="892" pos:column="21">0<pos:position pos:line="892" pos:column="22"/></literal></expr>;<pos:position pos:line="892" pos:column="23"/></expr_stmt>
  
  <comment type="block" pos:line="894" pos:column="3">/* Figure out the ip-number and display the first host name it shows: */</comment>
<cpp:ifdef pos:line="895" pos:column="1">#<cpp:directive pos:line="895" pos:column="2">ifdef<pos:position pos:line="895" pos:column="7"/></cpp:directive> <name pos:line="895" pos:column="8">ENABLE_IPV6<pos:position pos:line="895" pos:column="19"/></name></cpp:ifdef>
  <block pos:line="896" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="897" pos:column="5">char<pos:position pos:line="897" pos:column="9"/></name></type> <name><name pos:line="897" pos:column="10">hbuf<pos:position pos:line="897" pos:column="14"/></name><index pos:line="897" pos:column="14">[<expr><name pos:line="897" pos:column="15">NI_MAXHOST<pos:position pos:line="897" pos:column="25"/></name></expr>]<pos:position pos:line="897" pos:column="26"/></index></name></decl>;<pos:position pos:line="897" pos:column="27"/></decl_stmt>
<cpp:ifdef pos:line="898" pos:column="1">#<cpp:directive pos:line="898" pos:column="2">ifdef<pos:position pos:line="898" pos:column="7"/></cpp:directive> <name pos:line="898" pos:column="8">NI_WITHSCOPEID<pos:position pos:line="898" pos:column="22"/></name></cpp:ifdef>
    <decl_stmt><decl><type><specifier pos:line="899" pos:column="5">const<pos:position pos:line="899" pos:column="10"/></specifier> <name pos:line="899" pos:column="11">int<pos:position pos:line="899" pos:column="14"/></name></type> <name pos:line="899" pos:column="15">niflags<pos:position pos:line="899" pos:column="22"/></name> <init pos:line="899" pos:column="23">= <expr><name pos:line="899" pos:column="25">NI_NUMERICHOST<pos:position pos:line="899" pos:column="39"/></name> <operator pos:line="899" pos:column="40">|<pos:position pos:line="899" pos:column="41"/></operator> <name pos:line="899" pos:column="42">NI_WITHSCOPEID<pos:position pos:line="899" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="899" pos:column="57"/></decl_stmt>
<cpp:else pos:line="900" pos:column="1">#<cpp:directive pos:line="900" pos:column="2">else<pos:position pos:line="900" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="901" pos:column="5">const<pos:position pos:line="901" pos:column="10"/></specifier> <name pos:line="901" pos:column="11">int<pos:position pos:line="901" pos:column="14"/></name></type> <name pos:line="901" pos:column="15">niflags<pos:position pos:line="901" pos:column="22"/></name> <init pos:line="901" pos:column="23">= <expr><name pos:line="901" pos:column="25">NI_NUMERICHOST<pos:position pos:line="901" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="901" pos:column="40"/></decl_stmt>
<cpp:endif pos:line="902" pos:column="1">#<cpp:directive pos:line="902" pos:column="2">endif<pos:position pos:line="902" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="903" pos:column="5">struct<pos:position pos:line="903" pos:column="11"/></name> <name pos:line="903" pos:column="12">addrinfo<pos:position pos:line="903" pos:column="20"/></name></name> <modifier pos:line="903" pos:column="21">*<pos:position pos:line="903" pos:column="22"/></modifier></type><name pos:line="903" pos:column="22">ai<pos:position pos:line="903" pos:column="24"/></name> <init pos:line="903" pos:column="25">= <expr><name><name pos:line="903" pos:column="27">conn<pos:position pos:line="903" pos:column="31"/></name><operator pos:line="903" pos:column="31">-&gt;<pos:position pos:line="903" pos:column="36"/></operator><name pos:line="903" pos:column="33">ai<pos:position pos:line="903" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="903" pos:column="36"/></decl_stmt>

    <if pos:line="905" pos:column="5">if <condition pos:line="905" pos:column="8">(<expr><call><name pos:line="905" pos:column="9">getnameinfo<pos:position pos:line="905" pos:column="20"/></name><argument_list pos:line="905" pos:column="20">(<argument><expr><name><name pos:line="905" pos:column="21">ai<pos:position pos:line="905" pos:column="23"/></name><operator pos:line="905" pos:column="23">-&gt;<pos:position pos:line="905" pos:column="28"/></operator><name pos:line="905" pos:column="25">ai_addr<pos:position pos:line="905" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="905" pos:column="34">ai<pos:position pos:line="905" pos:column="36"/></name><operator pos:line="905" pos:column="36">-&gt;<pos:position pos:line="905" pos:column="41"/></operator><name pos:line="905" pos:column="38">ai_addrlen<pos:position pos:line="905" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="905" pos:column="50">hbuf<pos:position pos:line="905" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="905" pos:column="56">sizeof<argument_list pos:line="905" pos:column="62">(<argument><expr><name pos:line="905" pos:column="63">hbuf<pos:position pos:line="905" pos:column="67"/></name></expr></argument>)<pos:position pos:line="905" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="905" pos:column="70">NULL<pos:position pos:line="905" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="905" pos:column="76">0<pos:position pos:line="905" pos:column="77"/></literal></expr></argument>,
	<argument><expr><name pos:line="906" pos:column="9">niflags<pos:position pos:line="906" pos:column="16"/></name></expr></argument>)<pos:position pos:line="906" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="906" pos:column="18"/></condition><then pos:line="906" pos:column="18"> <block pos:line="906" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="907" pos:column="7">snprintf<pos:position pos:line="907" pos:column="15"/></name><argument_list pos:line="907" pos:column="15">(<argument><expr><name pos:line="907" pos:column="16">hbuf<pos:position pos:line="907" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="907" pos:column="22">sizeof<argument_list pos:line="907" pos:column="28">(<argument><expr><name pos:line="907" pos:column="29">hbuf<pos:position pos:line="907" pos:column="33"/></name></expr></argument>)<pos:position pos:line="907" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="907" pos:column="36">"?"<pos:position pos:line="907" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="907" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="907" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="908" pos:column="6"/></block></then></if>
    <if pos:line="909" pos:column="5">if <condition pos:line="909" pos:column="8">(<expr><name><name pos:line="909" pos:column="9">ai<pos:position pos:line="909" pos:column="11"/></name><operator pos:line="909" pos:column="11">-&gt;<pos:position pos:line="909" pos:column="16"/></operator><name pos:line="909" pos:column="13">ai_canonname<pos:position pos:line="909" pos:column="25"/></name></name></expr>)<pos:position pos:line="909" pos:column="26"/></condition><then pos:line="909" pos:column="26"> <block pos:line="909" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="910" pos:column="7">infof<pos:position pos:line="910" pos:column="12"/></name><argument_list pos:line="910" pos:column="12">(<argument><expr><name pos:line="910" pos:column="13">data<pos:position pos:line="910" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="910" pos:column="19">"Connected to %s (%s)\n"<pos:position pos:line="910" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="910" pos:column="45">ai<pos:position pos:line="910" pos:column="47"/></name><operator pos:line="910" pos:column="47">-&gt;<pos:position pos:line="910" pos:column="52"/></operator><name pos:line="910" pos:column="49">ai_canonname<pos:position pos:line="910" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="910" pos:column="63">hbuf<pos:position pos:line="910" pos:column="67"/></name></expr></argument>)<pos:position pos:line="910" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="910" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="911" pos:column="6"/></block></then> <else pos:line="911" pos:column="7">else <block pos:line="911" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="912" pos:column="7">infof<pos:position pos:line="912" pos:column="12"/></name><argument_list pos:line="912" pos:column="12">(<argument><expr><name pos:line="912" pos:column="13">data<pos:position pos:line="912" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="912" pos:column="19">"Connected to %s\n"<pos:position pos:line="912" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="912" pos:column="40">hbuf<pos:position pos:line="912" pos:column="44"/></name></expr></argument>)<pos:position pos:line="912" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="912" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="913" pos:column="6"/></block></else></if>
  }<pos:position pos:line="914" pos:column="4"/></block>
<cpp:else pos:line="915" pos:column="1">#<cpp:directive pos:line="915" pos:column="2">else<pos:position pos:line="915" pos:column="6"/></cpp:directive></cpp:else>
  <block pos:line="916" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="917" pos:column="5">struct<pos:position pos:line="917" pos:column="11"/></name> <name pos:line="917" pos:column="12">in_addr<pos:position pos:line="917" pos:column="19"/></name></name></type> <name pos:line="917" pos:column="20">in<pos:position pos:line="917" pos:column="22"/></name></decl>;<pos:position pos:line="917" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="918" pos:column="5">(<pos:position pos:line="918" pos:column="6"/></operator><name pos:line="918" pos:column="6">void<pos:position pos:line="918" pos:column="10"/></name><operator pos:line="918" pos:column="10">)<pos:position pos:line="918" pos:column="11"/></operator> <call><name pos:line="918" pos:column="12">memcpy<pos:position pos:line="918" pos:column="18"/></name><argument_list pos:line="918" pos:column="18">(<argument><expr><operator pos:line="918" pos:column="19">&amp;<pos:position pos:line="918" pos:column="24"/></operator><name><name pos:line="918" pos:column="20">in<pos:position pos:line="918" pos:column="22"/></name><operator pos:line="918" pos:column="22">.<pos:position pos:line="918" pos:column="23"/></operator><name pos:line="918" pos:column="23">s_addr<pos:position pos:line="918" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="918" pos:column="31">*<pos:position pos:line="918" pos:column="32"/></operator><name><name pos:line="918" pos:column="32">conn<pos:position pos:line="918" pos:column="36"/></name><operator pos:line="918" pos:column="36">-&gt;<pos:position pos:line="918" pos:column="41"/></operator><name pos:line="918" pos:column="38">hp<pos:position pos:line="918" pos:column="40"/></name><operator pos:line="918" pos:column="40">-&gt;<pos:position pos:line="918" pos:column="45"/></operator><name pos:line="918" pos:column="42">h_addr_list<pos:position pos:line="918" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="918" pos:column="55">sizeof <argument_list pos:line="918" pos:column="62">(<argument><expr><name><name pos:line="918" pos:column="63">in<pos:position pos:line="918" pos:column="65"/></name><operator pos:line="918" pos:column="65">.<pos:position pos:line="918" pos:column="66"/></operator><name pos:line="918" pos:column="66">s_addr<pos:position pos:line="918" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="918" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="918" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="918" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="919" pos:column="5">infof<pos:position pos:line="919" pos:column="10"/></name><argument_list pos:line="919" pos:column="10">(<argument><expr><name pos:line="919" pos:column="11">data<pos:position pos:line="919" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="919" pos:column="17">"Connected to %s (%s)\n"<pos:position pos:line="919" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="919" pos:column="43">conn<pos:position pos:line="919" pos:column="47"/></name><operator pos:line="919" pos:column="47">-&gt;<pos:position pos:line="919" pos:column="52"/></operator><name pos:line="919" pos:column="49">hp<pos:position pos:line="919" pos:column="51"/></name><operator pos:line="919" pos:column="51">-&gt;<pos:position pos:line="919" pos:column="56"/></operator><name pos:line="919" pos:column="53">h_name<pos:position pos:line="919" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="919" pos:column="61">inet_ntoa<pos:position pos:line="919" pos:column="70"/></name><argument_list pos:line="919" pos:column="70">(<argument><expr><name pos:line="919" pos:column="71">in<pos:position pos:line="919" pos:column="73"/></name></expr></argument>)<pos:position pos:line="919" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="919" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="919" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="920" pos:column="4"/></block>
<cpp:endif pos:line="921" pos:column="1">#<cpp:directive pos:line="921" pos:column="2">endif<pos:position pos:line="921" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="923" pos:column="1">#<cpp:directive pos:line="923" pos:column="2">ifdef<pos:position pos:line="923" pos:column="7"/></cpp:directive> <name pos:line="923" pos:column="8">__EMX__<pos:position pos:line="923" pos:column="15"/></name></cpp:ifdef>
  <comment type="block" pos:line="924" pos:column="3">/* 20000330 mgs
   * the check is quite a hack...
   * we're calling _fsetmode to fix the problem with fwrite converting newline
   * characters (you get mangled text files, and corrupted binary files when
   * you download to stdout and redirect it to a file). */</comment>

  <if pos:line="930" pos:column="3">if <condition pos:line="930" pos:column="6">(<expr><name><operator pos:line="930" pos:column="7">(<pos:position pos:line="930" pos:column="8"/></operator><name><name pos:line="930" pos:column="8">data<pos:position pos:line="930" pos:column="12"/></name><operator pos:line="930" pos:column="12">-&gt;<pos:position pos:line="930" pos:column="17"/></operator><name pos:line="930" pos:column="14">set<pos:position pos:line="930" pos:column="17"/></name><operator pos:line="930" pos:column="17">.<pos:position pos:line="930" pos:column="18"/></operator><name pos:line="930" pos:column="18">out<pos:position pos:line="930" pos:column="21"/></name></name><operator pos:line="930" pos:column="21">)<pos:position pos:line="930" pos:column="22"/></operator><operator pos:line="930" pos:column="22">-&gt;<pos:position pos:line="930" pos:column="27"/></operator><name pos:line="930" pos:column="24">_handle<pos:position pos:line="930" pos:column="31"/></name></name> <operator pos:line="930" pos:column="32">==<pos:position pos:line="930" pos:column="34"/></operator> <name pos:line="930" pos:column="35">NULL<pos:position pos:line="930" pos:column="39"/></name></expr>)<pos:position pos:line="930" pos:column="40"/></condition><then pos:line="930" pos:column="40"> <block pos:line="930" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="931" pos:column="5">_fsetmode<pos:position pos:line="931" pos:column="14"/></name><argument_list pos:line="931" pos:column="14">(<argument><expr><name pos:line="931" pos:column="15">stdout<pos:position pos:line="931" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="931" pos:column="23">"b"<pos:position pos:line="931" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="931" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="931" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="932" pos:column="4"/></block></then></if>
<cpp:endif pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">endif<pos:position pos:line="933" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="935" pos:column="3">return <expr><name pos:line="935" pos:column="10">CURLE_OK<pos:position pos:line="935" pos:column="18"/></name></expr>;<pos:position pos:line="935" pos:column="19"/></return>
}<pos:position pos:line="936" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1481.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_expire<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">SessionHandle<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">long<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">milli<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">multi<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">timeval<pos:position pos:line="4" pos:column="17"/></name></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">nowp<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">&amp;<pos:position pos:line="4" pos:column="31"/></operator><name><name pos:line="4" pos:column="27">data<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">state<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">.<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">expiretime<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* this is only interesting while there is still an associated multi struct
     remaining! */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">multi<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block type="pseudo"><return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">milli<pos:position pos:line="12" pos:column="12"/></name></expr>)<pos:position pos:line="12" pos:column="13"/></condition><then pos:line="12" pos:column="13"> <block pos:line="12" pos:column="14">{
    <comment type="block" pos:line="13" pos:column="5">/* No timeout, clear the time data. */</comment>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name><name pos:line="14" pos:column="8">nowp<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">tv_sec<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">||<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">nowp<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">tv_usec<pos:position pos:line="14" pos:column="37"/></name></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
      <comment type="block" pos:line="15" pos:column="7">/* Since this is an cleared time, we must remove the previous entry from
         the splay tree */</comment>
      <decl_stmt><decl><type><name><name pos:line="17" pos:column="7">struct<pos:position pos:line="17" pos:column="13"/></name> <name pos:line="17" pos:column="14">curl_llist<pos:position pos:line="17" pos:column="24"/></name></name> <modifier pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></modifier></type><name pos:line="17" pos:column="26">list<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><name><name pos:line="17" pos:column="33">data<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">state<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">.<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">timeoutlist<pos:position pos:line="17" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="57"/></decl_stmt>

      <expr_stmt><expr><name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">Curl_splayremovebyaddr<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">multi<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">timetree<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="20" pos:column="35">&amp;<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="36">data<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">state<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">timenode<pos:position pos:line="20" pos:column="56"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="21" pos:column="35">&amp;<pos:position pos:line="21" pos:column="40"/></operator><name><name pos:line="21" pos:column="36">multi<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">timetree<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><name pos:line="22" pos:column="10">rc<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">infof<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">data<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="21">"Internal error clearing splay node = %d\n"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="66">rc<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="25" pos:column="7">/* flush the timeout list too */</comment>
      <while pos:line="26" pos:column="7">while<condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">list<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">size<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">&gt;<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>)<pos:position pos:line="26" pos:column="28"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">Curl_llist_remove<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">list<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="33">list<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">tail<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">NULL<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt></block></while>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">DEBUGBUILD<pos:position pos:line="29" pos:column="18"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">infof<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">data<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"Expire cleared\n"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">nowp<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">tv_sec<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">nowp<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">tv_usec<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then>
  <else pos:line="36" pos:column="3">else <block pos:line="36" pos:column="8">{
    <decl_stmt><decl><type><name><name pos:line="37" pos:column="5">struct<pos:position pos:line="37" pos:column="11"/></name> <name pos:line="37" pos:column="12">timeval<pos:position pos:line="37" pos:column="19"/></name></name></type> <name pos:line="37" pos:column="20">set<pos:position pos:line="37" pos:column="23"/></name></decl>;<pos:position pos:line="37" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="39" pos:column="5">set<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <call><name pos:line="39" pos:column="11">Curl_tvnow<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">()<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">set<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">.<pos:position pos:line="40" pos:column="9"/></operator><name pos:line="40" pos:column="9">tv_sec<pos:position pos:line="40" pos:column="15"/></name></name> <operator pos:line="40" pos:column="16">+=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">milli<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">/<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">1000<pos:position pos:line="40" pos:column="29"/></literal></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">set<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">.<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">tv_usec<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">+=<pos:position pos:line="41" pos:column="19"/></operator> <operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">milli<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">%<pos:position pos:line="41" pos:column="27"/></operator><literal type="number" pos:line="41" pos:column="27">1000<pos:position pos:line="41" pos:column="31"/></literal><operator pos:line="41" pos:column="31">)<pos:position pos:line="41" pos:column="32"/></operator><operator pos:line="41" pos:column="32">*<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">1000<pos:position pos:line="41" pos:column="37"/></literal></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name><name pos:line="43" pos:column="8">set<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">tv_usec<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">&gt;=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="23">1000000<pos:position pos:line="43" pos:column="30"/></literal></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31"> <block pos:line="43" pos:column="32">{
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">set<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">.<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">tv_sec<pos:position pos:line="44" pos:column="17"/></name></name><operator pos:line="44" pos:column="17">++<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">set<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">.<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">tv_usec<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">-=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">1000000<pos:position pos:line="45" pos:column="29"/></literal></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name><name pos:line="48" pos:column="8">nowp<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">tv_sec<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">||<pos:position pos:line="48" pos:column="23"/></operator> <name><name pos:line="48" pos:column="24">nowp<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">tv_usec<pos:position pos:line="48" pos:column="37"/></name></name></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38"> <block pos:line="48" pos:column="39">{
      <comment type="block" pos:line="49" pos:column="7">/* This means that the struct is added as a node in the splay tree.
         Compare if the new time is earlier, and only remove-old/add-new if it
         is. */</comment>
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">long<pos:position pos:line="52" pos:column="11"/></name></type> <name pos:line="52" pos:column="12">diff<pos:position pos:line="52" pos:column="16"/></name> <init pos:line="52" pos:column="17">= <expr><call><name pos:line="52" pos:column="19">curlx_tvdiff<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">set<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="37">*<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">nowp<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="44"/></decl_stmt>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><name pos:line="53" pos:column="10">diff<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">&gt;<pos:position pos:line="53" pos:column="19"/></operator> <literal type="number" pos:line="53" pos:column="17">0<pos:position pos:line="53" pos:column="18"/></literal></expr>)<pos:position pos:line="53" pos:column="19"/></condition><then pos:line="53" pos:column="19"> <block pos:line="53" pos:column="20">{
        <comment type="block" pos:line="54" pos:column="9">/* the new expire time was later so just add it to the queue
           and get out */</comment>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">multi_addtimeout<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name><name pos:line="56" pos:column="26">data<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">state<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">timeoutlist<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">set<pos:position pos:line="56" pos:column="55"/></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
        <return pos:line="57" pos:column="9">return;<pos:position pos:line="57" pos:column="16"/></return>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="60" pos:column="7">/* the new time is newer than the presently set one, so add the current
         to the queue and update the head */</comment>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">multi_addtimeout<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name><name pos:line="62" pos:column="24">data<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">-&gt;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="30">state<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">.<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">timeoutlist<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">nowp<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>

      <comment type="block" pos:line="64" pos:column="7">/* Since this is an updated time, we must remove the previous entry from
         the splay tree first and then re-add the new value */</comment>
      <expr_stmt><expr><name pos:line="66" pos:column="7">rc<pos:position pos:line="66" pos:column="9"/></name> <operator pos:line="66" pos:column="10">=<pos:position pos:line="66" pos:column="11"/></operator> <call><name pos:line="66" pos:column="12">Curl_splayremovebyaddr<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name><name pos:line="66" pos:column="35">multi<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">timetree<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="67" pos:column="35">&amp;<pos:position pos:line="67" pos:column="40"/></operator><name><name pos:line="67" pos:column="36">data<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">state<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">.<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="48">timenode<pos:position pos:line="67" pos:column="56"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="68" pos:column="35">&amp;<pos:position pos:line="68" pos:column="40"/></operator><name><name pos:line="68" pos:column="36">multi<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">timetree<pos:position pos:line="68" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt>
      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><name pos:line="69" pos:column="10">rc<pos:position pos:line="69" pos:column="12"/></name></expr>)<pos:position pos:line="69" pos:column="13"/></condition><then pos:line="69" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="9">infof<pos:position pos:line="70" pos:column="14"/></name><argument_list pos:line="70" pos:column="14">(<argument><expr><name pos:line="70" pos:column="15">data<pos:position pos:line="70" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="21">"Internal error removing splay node = %d\n"<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="66">rc<pos:position pos:line="70" pos:column="68"/></name></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="73" pos:column="5">*<pos:position pos:line="73" pos:column="6"/></operator><name pos:line="73" pos:column="6">nowp<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <name pos:line="73" pos:column="13">set<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">data<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">state<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">.<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="17">timenode<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">.<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">payload<pos:position pos:line="74" pos:column="33"/></name></name> <operator pos:line="74" pos:column="34">=<pos:position pos:line="74" pos:column="35"/></operator> <name pos:line="74" pos:column="36">data<pos:position pos:line="74" pos:column="40"/></name></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">multi<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">timetree<pos:position pos:line="75" pos:column="20"/></name></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <call><name pos:line="75" pos:column="23">Curl_splayinsert<pos:position pos:line="75" pos:column="39"/></name><argument_list pos:line="75" pos:column="39">(<argument><expr><operator pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="41">nowp<pos:position pos:line="75" pos:column="45"/></name></expr></argument>,
                                       <argument><expr><name><name pos:line="76" pos:column="40">multi<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">-&gt;<pos:position pos:line="76" pos:column="50"/></operator><name pos:line="76" pos:column="47">timetree<pos:position pos:line="76" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><operator pos:line="77" pos:column="40">&amp;<pos:position pos:line="77" pos:column="45"/></operator><name><name pos:line="77" pos:column="41">data<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">-&gt;<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="47">state<pos:position pos:line="77" pos:column="52"/></name><operator pos:line="77" pos:column="52">.<pos:position pos:line="77" pos:column="53"/></operator><name pos:line="77" pos:column="53">timenode<pos:position pos:line="77" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></else></if>
<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="79" pos:column="5">0<pos:position pos:line="79" pos:column="6"/></literal></expr></cpp:if>
  Curl_splayprint(multi-&gt;timetree, 0, TRUE);
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

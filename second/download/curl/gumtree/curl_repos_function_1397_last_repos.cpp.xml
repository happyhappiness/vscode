<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1397_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">conncache_add_bundle<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">conncache<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">connc<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">key<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">connectbundle<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">bundle<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">void<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><call><name pos:line="5" pos:column="13">Curl_hash_add<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><operator pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></operator><name><name pos:line="5" pos:column="28">connc<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">hash<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">key<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="46">strlen<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">key<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="59">bundle<pos:position pos:line="5" pos:column="65"/></name></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="67"/></decl_stmt>

  <return pos:line="7" pos:column="3">return <expr><ternary><condition><expr><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name></expr>?<pos:position pos:line="7" pos:column="12"/></condition><then><expr><name pos:line="7" pos:column="12">TRUE<pos:position pos:line="7" pos:column="16"/></name></expr></then><else pos:line="7" pos:column="16">:<expr><name pos:line="7" pos:column="17">FALSE<pos:position pos:line="7" pos:column="22"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="23"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

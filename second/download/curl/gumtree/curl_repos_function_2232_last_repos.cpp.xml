<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2232_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smtp_perform<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">bool<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">connected<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">bool<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">dophase_done<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* This is SMTP and no proxy */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SMTP<pos:position pos:line="7" pos:column="14"/></name></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">smtp<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">data<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">req<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">protop<pos:position pos:line="7" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DEBUGF<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><call><name pos:line="9" pos:column="10">infof<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">conn<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">data<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"DO phase starts\n"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">data<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">set<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">opt_no_body<pos:position pos:line="11" pos:column="27"/></name></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{
    <comment type="block" pos:line="12" pos:column="5">/* Requested no body means no transfer */</comment>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">smtp<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">transfer<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">FTPTRANSFER_INFO<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">dophase_done<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">FALSE<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt> <comment type="block" pos:line="16" pos:column="26">/* not done yet */</comment>

  <comment type="block" pos:line="18" pos:column="3">/* Store the first recipient (or NULL if not specified) */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">smtp<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">rcpt<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">data<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">set<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">mail_rcpt<pos:position pos:line="19" pos:column="35"/></name></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Start the first command in the DO phase */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">(<pos:position pos:line="22" pos:column="7"/></operator><name><name pos:line="22" pos:column="7">data<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">set<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">upload<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">||<pos:position pos:line="22" pos:column="26"/></operator> <name><name pos:line="22" pos:column="27">data<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">set<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">.<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">mimepost<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">kind<pos:position pos:line="22" pos:column="50"/></name></name><operator pos:line="22" pos:column="50">)<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="52">&amp;&amp;<pos:position pos:line="22" pos:column="62"/></operator> <name><name pos:line="22" pos:column="55">data<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">set<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">.<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">mail_rcpt<pos:position pos:line="22" pos:column="74"/></name></name></expr>)<pos:position pos:line="22" pos:column="75"/></condition><then pos:line="22" pos:column="75">
    <comment type="block" pos:line="23" pos:column="5">/* MAIL transfer */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="5">result<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">smtp_perform_mail<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">conn<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then>
  <else pos:line="25" pos:column="3">else
    <comment type="block" pos:line="26" pos:column="5">/* SMTP based command (VRFY, EXPN, NOOP, RSET or HELP) */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="5">result<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">smtp_perform_command<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">conn<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt></block></else></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">result<pos:position pos:line="29" pos:column="12"/></name></expr>)<pos:position pos:line="29" pos:column="13"/></condition><then pos:line="29" pos:column="13">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">result<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* Run the state-machine */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">result<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <call><name pos:line="33" pos:column="12">smtp_multi_statemach<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">conn<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">dophase_done<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="35" pos:column="3">*<pos:position pos:line="35" pos:column="4"/></operator><name pos:line="35" pos:column="4">connected<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name><name pos:line="35" pos:column="16">conn<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">bits<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">tcpconnect<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><name pos:line="35" pos:column="38">FIRSTSOCKET<pos:position pos:line="35" pos:column="49"/></name></expr>]<pos:position pos:line="35" pos:column="50"/></index></name></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><operator pos:line="37" pos:column="6">*<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">dophase_done<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">DEBUGF<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><call><name pos:line="38" pos:column="12">infof<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name><name pos:line="38" pos:column="18">conn<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">data<pos:position pos:line="38" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="30">"DO phase is complete\n"<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">result<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

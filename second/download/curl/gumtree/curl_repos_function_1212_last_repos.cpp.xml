<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1212_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ssh_knownhost<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">HAVE_LIBSSH2_KNOWNHOST_API<pos:position pos:line="5" pos:column="34"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">set<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">str<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">STRING_SSH_KNOWNHOSTS<pos:position pos:line="8" pos:column="41"/></name></expr>]<pos:position pos:line="8" pos:column="42"/></index></name></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <block pos:line="8" pos:column="44">{
    <comment type="block" pos:line="9" pos:column="5">/* we're asked to verify the host against a file */</comment>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">ssh_conn<pos:position pos:line="10" pos:column="20"/></name></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">sshc<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name><name pos:line="10" pos:column="30">conn<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">proto<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">sshc<pos:position pos:line="10" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">rc<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">keytype<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">keylen<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">remotekey<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><call><name pos:line="14" pos:column="29">libssh2_session_hostkey<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name><name pos:line="14" pos:column="53">sshc<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">ssh_session<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">keylen<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="62">&amp;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="63">keytype<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="72"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">keycheck<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><name pos:line="16" pos:column="20">LIBSSH2_KNOWNHOST_CHECK_FAILURE<pos:position pos:line="16" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">keybit<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="20"/></decl_stmt>

    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">remotekey<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
      <comment type="block" pos:line="20" pos:column="7">/*
       * A subject to figure out is what host name we need to pass in here.
       * What host name does OpenSSH store in its file if an IDN name is
       * used?
       */</comment>
      <decl_stmt><decl><type><name><name pos:line="25" pos:column="7">struct<pos:position pos:line="25" pos:column="13"/></name> <name pos:line="25" pos:column="14">libssh2_knownhost<pos:position pos:line="25" pos:column="31"/></name></name> <modifier pos:line="25" pos:column="32">*<pos:position pos:line="25" pos:column="33"/></modifier></type><name pos:line="25" pos:column="33">host<pos:position pos:line="25" pos:column="37"/></name></decl>;<pos:position pos:line="25" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="26" pos:column="7">enum<pos:position pos:line="26" pos:column="11"/></name> <name pos:line="26" pos:column="12">curl_khmatch<pos:position pos:line="26" pos:column="24"/></name></name></type> <name pos:line="26" pos:column="25">keymatch<pos:position pos:line="26" pos:column="33"/></name></decl>;<pos:position pos:line="26" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">curl_sshkeycallback<pos:position pos:line="27" pos:column="26"/></name></type> <name pos:line="27" pos:column="27">func<pos:position pos:line="27" pos:column="31"/></name> <init pos:line="27" pos:column="32">=
        <expr><ternary><condition><expr><name><name pos:line="28" pos:column="9">data<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">set<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">ssh_keyfunc<pos:position pos:line="28" pos:column="30"/></name></name></expr>?<pos:position pos:line="28" pos:column="31"/></condition><then><expr><name><name pos:line="28" pos:column="31">data<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">set<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">.<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="41">ssh_keyfunc<pos:position pos:line="28" pos:column="52"/></name></name></expr></then><else pos:line="28" pos:column="52">:<expr><name pos:line="28" pos:column="53">sshkeycallback<pos:position pos:line="28" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="28" pos:column="68"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="29" pos:column="7">struct<pos:position pos:line="29" pos:column="13"/></name> <name pos:line="29" pos:column="14">curl_khkey<pos:position pos:line="29" pos:column="24"/></name></name></type> <name pos:line="29" pos:column="25">knownkey<pos:position pos:line="29" pos:column="33"/></name></decl>;<pos:position pos:line="29" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="30" pos:column="7">struct<pos:position pos:line="30" pos:column="13"/></name> <name pos:line="30" pos:column="14">curl_khkey<pos:position pos:line="30" pos:column="24"/></name></name> <modifier pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></modifier></type><name pos:line="30" pos:column="26">knownkeyp<pos:position pos:line="30" pos:column="35"/></name> <init pos:line="30" pos:column="36">= <expr><name pos:line="30" pos:column="38">NULL<pos:position pos:line="30" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="43"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="31" pos:column="7">struct<pos:position pos:line="31" pos:column="13"/></name> <name pos:line="31" pos:column="14">curl_khkey<pos:position pos:line="31" pos:column="24"/></name></name></type> <name pos:line="31" pos:column="25">foundkey<pos:position pos:line="31" pos:column="33"/></name></decl>;<pos:position pos:line="31" pos:column="34"/></decl_stmt>

      <expr_stmt><expr><name pos:line="33" pos:column="7">keybit<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">keytype<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">LIBSSH2_HOSTKEY_TYPE_RSA<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">)<pos:position pos:line="33" pos:column="53"/></operator></expr>?<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54">
        <expr><name pos:line="34" pos:column="9">LIBSSH2_KNOWNHOST_KEY_SSHRSA<pos:position pos:line="34" pos:column="37"/></name></expr></then><else pos:line="34" pos:column="37">:<expr><name pos:line="34" pos:column="38">LIBSSH2_KNOWNHOST_KEY_SSHDSS<pos:position pos:line="34" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>

<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">HAVE_LIBSSH2_KNOWNHOST_CHECKP<pos:position pos:line="36" pos:column="37"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="37" pos:column="7">keycheck<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">libssh2_knownhost_checkp<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name><name pos:line="37" pos:column="43">sshc<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">kh<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="38" pos:column="43">conn<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">host<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">.<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="54">name<pos:position pos:line="38" pos:column="58"/></name></name></expr></argument>,
                                          <argument><expr><ternary><condition><expr><operator pos:line="39" pos:column="43">(<pos:position pos:line="39" pos:column="44"/></operator><name><name pos:line="39" pos:column="44">conn<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">remote_port<pos:position pos:line="39" pos:column="61"/></name></name> <operator pos:line="39" pos:column="62">!=<pos:position pos:line="39" pos:column="64"/></operator> <name pos:line="39" pos:column="65">PORT_SSH<pos:position pos:line="39" pos:column="73"/></name><operator pos:line="39" pos:column="73">)<pos:position pos:line="39" pos:column="74"/></operator></expr>?<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75">
                                          <expr><name><name pos:line="40" pos:column="43">conn<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">remote_port<pos:position pos:line="40" pos:column="60"/></name></name></expr></then><else pos:line="40" pos:column="60">:<expr><operator pos:line="40" pos:column="61">-<pos:position pos:line="40" pos:column="62"/></operator><literal type="number" pos:line="40" pos:column="62">1<pos:position pos:line="40" pos:column="63"/></literal></expr></else></ternary></expr></argument>,
                                          <argument><expr><name pos:line="41" pos:column="43">remotekey<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">keylen<pos:position pos:line="41" pos:column="60"/></name></expr></argument>,
                                          <argument><expr><name pos:line="42" pos:column="43">LIBSSH2_KNOWNHOST_TYPE_PLAIN<pos:position pos:line="42" pos:column="71"/></name><operator pos:line="42" pos:column="71">|<pos:position pos:line="42" pos:column="72"/></operator>
                                          <name pos:line="43" pos:column="43">LIBSSH2_KNOWNHOST_KEYENC_RAW<pos:position pos:line="43" pos:column="71"/></name><operator pos:line="43" pos:column="71">|<pos:position pos:line="43" pos:column="72"/></operator>
                                          <name pos:line="44" pos:column="43">keybit<pos:position pos:line="44" pos:column="49"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="45" pos:column="43">&amp;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="44">host<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="47" pos:column="7">keycheck<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">libssh2_knownhost_check<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument><expr><name><name pos:line="47" pos:column="42">sshc<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">-&gt;<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="48">kh<pos:position pos:line="47" pos:column="50"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="48" pos:column="42">conn<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">host<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">.<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="53">name<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="49" pos:column="42">remotekey<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">keylen<pos:position pos:line="49" pos:column="59"/></name></expr></argument>,
                                         <argument><expr><name pos:line="50" pos:column="42">LIBSSH2_KNOWNHOST_TYPE_PLAIN<pos:position pos:line="50" pos:column="70"/></name><operator pos:line="50" pos:column="70">|<pos:position pos:line="50" pos:column="71"/></operator>
                                         <name pos:line="51" pos:column="42">LIBSSH2_KNOWNHOST_KEYENC_RAW<pos:position pos:line="51" pos:column="70"/></name><operator pos:line="51" pos:column="70">|<pos:position pos:line="51" pos:column="71"/></operator>
                                         <name pos:line="52" pos:column="42">keybit<pos:position pos:line="52" pos:column="48"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="53" pos:column="42">&amp;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="43">host<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><call><name pos:line="56" pos:column="7">infof<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">data<pos:position pos:line="56" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="19">"SSH host check: %d, key: %s\n"<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="52">keycheck<pos:position pos:line="56" pos:column="60"/></name></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">keycheck<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">&lt;=<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="26">LIBSSH2_KNOWNHOST_CHECK_MISMATCH<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">)<pos:position pos:line="57" pos:column="59"/></operator></expr>?<pos:position pos:line="57" pos:column="60"/></condition><then pos:line="57" pos:column="60">
            <expr><name><name pos:line="58" pos:column="13">host<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">key<pos:position pos:line="58" pos:column="22"/></name></name></expr></then><else pos:line="58" pos:column="22">:<expr><literal type="string" pos:line="58" pos:column="23">"&lt;none&gt;"<pos:position pos:line="58" pos:column="37"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>

      <comment type="block" pos:line="60" pos:column="7">/* setup 'knownkey' */</comment>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><name pos:line="61" pos:column="10">keycheck<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">&lt;=<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="22">LIBSSH2_KNOWNHOST_CHECK_MISMATCH<pos:position pos:line="61" pos:column="54"/></name></expr>)<pos:position pos:line="61" pos:column="55"/></condition><then pos:line="61" pos:column="55"> <block pos:line="61" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">knownkey<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">.<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">key<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name><name pos:line="62" pos:column="24">host<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">-&gt;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="30">key<pos:position pos:line="62" pos:column="33"/></name></name></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">knownkey<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">len<pos:position pos:line="63" pos:column="21"/></name></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="24">0<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">knownkey<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">keytype<pos:position pos:line="64" pos:column="25"/></name></name> <operator pos:line="64" pos:column="26">=<pos:position pos:line="64" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="64" pos:column="28">(<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">keytype<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">==<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="40">LIBSSH2_HOSTKEY_TYPE_RSA<pos:position pos:line="64" pos:column="64"/></name><operator pos:line="64" pos:column="64">)<pos:position pos:line="64" pos:column="65"/></operator></expr>?<pos:position pos:line="64" pos:column="66"/></condition><then pos:line="64" pos:column="66">
          <expr><name pos:line="65" pos:column="11">CURLKHTYPE_RSA<pos:position pos:line="65" pos:column="25"/></name></expr> <pos:position pos:line="65" pos:column="26"/></then><else pos:line="65" pos:column="26">: <expr><name pos:line="65" pos:column="28">CURLKHTYPE_DSS<pos:position pos:line="65" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">knownkeyp<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <operator pos:line="66" pos:column="21">&amp;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="22">knownkey<pos:position pos:line="66" pos:column="30"/></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="69" pos:column="7">/* setup 'foundkey' */</comment>
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">foundkey<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">.<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">key<pos:position pos:line="70" pos:column="19"/></name></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <name pos:line="70" pos:column="22">remotekey<pos:position pos:line="70" pos:column="31"/></name></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">foundkey<pos:position pos:line="71" pos:column="15"/></name><operator pos:line="71" pos:column="15">.<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">len<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">keylen<pos:position pos:line="71" pos:column="28"/></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="72" pos:column="7">foundkey<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">.<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">keytype<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="72" pos:column="26">(<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="27">keytype<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">==<pos:position pos:line="72" pos:column="37"/></operator> <name pos:line="72" pos:column="38">LIBSSH2_HOSTKEY_TYPE_RSA<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">)<pos:position pos:line="72" pos:column="63"/></operator></expr>?<pos:position pos:line="72" pos:column="64"/></condition><then pos:line="72" pos:column="64">
        <expr><name pos:line="73" pos:column="9">CURLKHTYPE_RSA<pos:position pos:line="73" pos:column="23"/></name></expr> <pos:position pos:line="73" pos:column="24"/></then><else pos:line="73" pos:column="24">: <expr><name pos:line="73" pos:column="26">CURLKHTYPE_DSS<pos:position pos:line="73" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="73" pos:column="41"/></expr_stmt>

      <comment type="block" pos:line="75" pos:column="7">/*
       * if any of the LIBSSH2_KNOWNHOST_CHECK_* defines and the
       * curl_khmatch enum are ever modified, we need to introduce a
       * translation table here!
       */</comment>
      <expr_stmt><expr><name pos:line="80" pos:column="7">keymatch<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <operator pos:line="80" pos:column="18">(<pos:position pos:line="80" pos:column="19"/></operator>enum <name pos:line="80" pos:column="24">curl_khmatch<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">)<pos:position pos:line="80" pos:column="37"/></operator><name pos:line="80" pos:column="37">keycheck<pos:position pos:line="80" pos:column="45"/></name></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="82" pos:column="7">/* Ask the callback how to behave */</comment>
      <expr_stmt><expr><name pos:line="83" pos:column="7">rc<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <call><name pos:line="83" pos:column="12">func<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">data<pos:position pos:line="83" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="23">knownkeyp<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <comment type="block" pos:line="83" pos:column="34">/* from the knownhosts file */</comment>
                <argument><expr><operator pos:line="84" pos:column="17">&amp;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="18">foundkey<pos:position pos:line="84" pos:column="26"/></name></expr></argument>, <comment type="block" pos:line="84" pos:column="28">/* from the remote host */</comment>
                <argument><expr><name pos:line="85" pos:column="17">keymatch<pos:position pos:line="85" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="27">data<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">-&gt;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="33">set<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">.<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="37">ssh_keyfunc_userp<pos:position pos:line="85" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else
      <comment type="block" pos:line="88" pos:column="7">/* no remotekey means failure! */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="7">rc<pos:position pos:line="89" pos:column="9"/></name> <operator pos:line="89" pos:column="10">=<pos:position pos:line="89" pos:column="11"/></operator> <name pos:line="89" pos:column="12">CURLKHSTAT_REJECT<pos:position pos:line="89" pos:column="29"/></name></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt></block></else></if>

    <switch pos:line="91" pos:column="5">switch<condition pos:line="91" pos:column="11">(<expr><name pos:line="91" pos:column="12">rc<pos:position pos:line="91" pos:column="14"/></name></expr>)<pos:position pos:line="91" pos:column="15"/></condition> <block pos:line="91" pos:column="16">{
    <default pos:line="92" pos:column="5">default:<pos:position pos:line="92" pos:column="13"/></default> <comment type="block" pos:line="92" pos:column="14">/* unknown return codes will equal reject */</comment>
      <comment type="block" pos:line="93" pos:column="7">/* FALLTHROUGH */</comment>
    <case pos:line="94" pos:column="5">case <expr><name pos:line="94" pos:column="10">CURLKHSTAT_REJECT<pos:position pos:line="94" pos:column="27"/></name></expr>:<pos:position pos:line="94" pos:column="28"/></case>
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">state<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument><expr><name pos:line="95" pos:column="13">conn<pos:position pos:line="95" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="19">SSH_SESSION_FREE<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
      <comment type="block" pos:line="96" pos:column="7">/* FALLTHROUGH */</comment>
    <case pos:line="97" pos:column="5">case <expr><name pos:line="97" pos:column="10">CURLKHSTAT_DEFER<pos:position pos:line="97" pos:column="26"/></name></expr>:<pos:position pos:line="97" pos:column="27"/></case>
      <comment type="block" pos:line="98" pos:column="7">/* DEFER means bail out but keep the SSH_HOSTKEY state */</comment>
      <expr_stmt><expr><name pos:line="99" pos:column="7">result<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <name><name pos:line="99" pos:column="16">sshc<pos:position pos:line="99" pos:column="20"/></name><operator pos:line="99" pos:column="20">-&gt;<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="22">actualcode<pos:position pos:line="99" pos:column="32"/></name></name> <operator pos:line="99" pos:column="33">=<pos:position pos:line="99" pos:column="34"/></operator> <name pos:line="99" pos:column="35">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="99" pos:column="65"/></name></expr>;<pos:position pos:line="99" pos:column="66"/></expr_stmt>
      <break pos:line="100" pos:column="7">break;<pos:position pos:line="100" pos:column="13"/></break>
    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">CURLKHSTAT_FINE<pos:position pos:line="101" pos:column="25"/></name></expr>:<pos:position pos:line="101" pos:column="26"/></case>
    <case pos:line="102" pos:column="5">case <expr><name pos:line="102" pos:column="10">CURLKHSTAT_FINE_ADD_TO_FILE<pos:position pos:line="102" pos:column="37"/></name></expr>:<pos:position pos:line="102" pos:column="38"/></case>
      <comment type="block" pos:line="103" pos:column="7">/* proceed */</comment>
      <if pos:line="104" pos:column="7">if<condition pos:line="104" pos:column="9">(<expr><name pos:line="104" pos:column="10">keycheck<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">!=<pos:position pos:line="104" pos:column="21"/></operator> <name pos:line="104" pos:column="22">LIBSSH2_KNOWNHOST_CHECK_MATCH<pos:position pos:line="104" pos:column="51"/></name></expr>)<pos:position pos:line="104" pos:column="52"/></condition><then pos:line="104" pos:column="52"> <block pos:line="104" pos:column="53">{
        <comment type="block" pos:line="105" pos:column="9">/* the found host+key didn't match but has been told to be fine
           anyway so we add it in memory */</comment>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">int<pos:position pos:line="107" pos:column="12"/></name></type> <name pos:line="107" pos:column="13">addrc<pos:position pos:line="107" pos:column="18"/></name> <init pos:line="107" pos:column="19">= <expr><call><name pos:line="107" pos:column="21">libssh2_knownhost_add<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name><name pos:line="107" pos:column="43">sshc<pos:position pos:line="107" pos:column="47"/></name><operator pos:line="107" pos:column="47">-&gt;<pos:position pos:line="107" pos:column="52"/></operator><name pos:line="107" pos:column="49">kh<pos:position pos:line="107" pos:column="51"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="108" pos:column="43">conn<pos:position pos:line="108" pos:column="47"/></name><operator pos:line="108" pos:column="47">-&gt;<pos:position pos:line="108" pos:column="52"/></operator><name pos:line="108" pos:column="49">host<pos:position pos:line="108" pos:column="53"/></name><operator pos:line="108" pos:column="53">.<pos:position pos:line="108" pos:column="54"/></operator><name pos:line="108" pos:column="54">name<pos:position pos:line="108" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="60">NULL<pos:position pos:line="108" pos:column="64"/></name></expr></argument>,
                                          <argument><expr><name pos:line="109" pos:column="43">remotekey<pos:position pos:line="109" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="54">keylen<pos:position pos:line="109" pos:column="60"/></name></expr></argument>,
                                          <argument><expr><name pos:line="110" pos:column="43">LIBSSH2_KNOWNHOST_TYPE_PLAIN<pos:position pos:line="110" pos:column="71"/></name><operator pos:line="110" pos:column="71">|<pos:position pos:line="110" pos:column="72"/></operator>
                                          <name pos:line="111" pos:column="43">LIBSSH2_KNOWNHOST_KEYENC_RAW<pos:position pos:line="111" pos:column="71"/></name><operator pos:line="111" pos:column="71">|<pos:position pos:line="111" pos:column="72"/></operator>
                                          <name pos:line="112" pos:column="43">keybit<pos:position pos:line="112" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="51">NULL<pos:position pos:line="112" pos:column="55"/></name></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="57"/></decl_stmt>
        <if pos:line="113" pos:column="9">if<condition pos:line="113" pos:column="11">(<expr><name pos:line="113" pos:column="12">addrc<pos:position pos:line="113" pos:column="17"/></name></expr>)<pos:position pos:line="113" pos:column="18"/></condition><then pos:line="113" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="11">infof<pos:position pos:line="114" pos:column="16"/></name><argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">data<pos:position pos:line="114" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="23">"Warning adding the known host %s failed!\n"<pos:position pos:line="114" pos:column="67"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="115" pos:column="17">conn<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">host<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">.<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="28">name<pos:position pos:line="115" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="34"/></expr_stmt></block></then>
        <elseif pos:line="116" pos:column="9">else <if pos:line="116" pos:column="14">if<condition pos:line="116" pos:column="16">(<expr><name pos:line="116" pos:column="17">rc<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">==<pos:position pos:line="116" pos:column="22"/></operator> <name pos:line="116" pos:column="23">CURLKHSTAT_FINE_ADD_TO_FILE<pos:position pos:line="116" pos:column="50"/></name></expr>)<pos:position pos:line="116" pos:column="51"/></condition><then pos:line="116" pos:column="51"> <block pos:line="116" pos:column="52">{
          <comment type="block" pos:line="117" pos:column="11">/* now we write the entire in-memory list of known hosts to the
             known_hosts file */</comment>
          <decl_stmt><decl><type><name pos:line="119" pos:column="11">int<pos:position pos:line="119" pos:column="14"/></name></type> <name pos:line="119" pos:column="15">wrc<pos:position pos:line="119" pos:column="18"/></name> <init pos:line="119" pos:column="19">=
            <expr><call><name pos:line="120" pos:column="13">libssh2_knownhost_writefile<pos:position pos:line="120" pos:column="40"/></name><argument_list pos:line="120" pos:column="40">(<argument><expr><name><name pos:line="120" pos:column="41">sshc<pos:position pos:line="120" pos:column="45"/></name><operator pos:line="120" pos:column="45">-&gt;<pos:position pos:line="120" pos:column="50"/></operator><name pos:line="120" pos:column="47">kh<pos:position pos:line="120" pos:column="49"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="121" pos:column="41">data<pos:position pos:line="121" pos:column="45"/></name><operator pos:line="121" pos:column="45">-&gt;<pos:position pos:line="121" pos:column="50"/></operator><name pos:line="121" pos:column="47">set<pos:position pos:line="121" pos:column="50"/></name><operator pos:line="121" pos:column="50">.<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="51">str<pos:position pos:line="121" pos:column="54"/></name><index pos:line="121" pos:column="54">[<expr><name pos:line="121" pos:column="55">STRING_SSH_KNOWNHOSTS<pos:position pos:line="121" pos:column="76"/></name></expr>]<pos:position pos:line="121" pos:column="77"/></index></name></expr></argument>,
                                        <argument><expr><name pos:line="122" pos:column="41">LIBSSH2_KNOWNHOST_FILE_OPENSSH<pos:position pos:line="122" pos:column="71"/></name></expr></argument>)<pos:position pos:line="122" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="122" pos:column="73"/></decl_stmt>
          <if pos:line="123" pos:column="11">if<condition pos:line="123" pos:column="13">(<expr><name pos:line="123" pos:column="14">wrc<pos:position pos:line="123" pos:column="17"/></name></expr>)<pos:position pos:line="123" pos:column="18"/></condition><then pos:line="123" pos:column="18"> <block pos:line="123" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">infof<pos:position pos:line="124" pos:column="18"/></name><argument_list pos:line="124" pos:column="18">(<argument><expr><name pos:line="124" pos:column="19">data<pos:position pos:line="124" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="25">"Warning, writing %s failed!\n"<pos:position pos:line="124" pos:column="56"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="125" pos:column="19">data<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">set<pos:position pos:line="125" pos:column="28"/></name><operator pos:line="125" pos:column="28">.<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="29">str<pos:position pos:line="125" pos:column="32"/></name><index pos:line="125" pos:column="32">[<expr><name pos:line="125" pos:column="33">STRING_SSH_KNOWNHOSTS<pos:position pos:line="125" pos:column="54"/></name></expr>]<pos:position pos:line="125" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="125" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="57"/></expr_stmt>
          }<pos:position pos:line="126" pos:column="12"/></block></then></if>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="128" pos:column="8"/></block></then></if>
      <break pos:line="129" pos:column="7">break;<pos:position pos:line="129" pos:column="13"/></break>
    }<pos:position pos:line="130" pos:column="6"/></block></switch>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if>
<cpp:else pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">else<pos:position pos:line="132" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="132" pos:column="7">/* HAVE_LIBSSH2_KNOWNHOST_API */</comment>
  <expr_stmt><expr><operator pos:line="133" pos:column="3">(<pos:position pos:line="133" pos:column="4"/></operator><name pos:line="133" pos:column="4">void<pos:position pos:line="133" pos:column="8"/></name><operator pos:line="133" pos:column="8">)<pos:position pos:line="133" pos:column="9"/></operator><name pos:line="133" pos:column="9">conn<pos:position pos:line="133" pos:column="13"/></name></expr>;<pos:position pos:line="133" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">endif<pos:position pos:line="134" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="135" pos:column="3">return <expr><name pos:line="135" pos:column="10">result<pos:position pos:line="135" pos:column="16"/></name></expr>;<pos:position pos:line="135" pos:column="17"/></return>
}<pos:position pos:line="136" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2400_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">ossl_recv<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* connection data */</comment>
                         <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">num<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,                  <comment type="block" pos:line="2" pos:column="52">/* socketindex */</comment>
                         <parameter><decl><type><name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">buf<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="52">/* store read data here */</comment>
                         <parameter><decl><type><name pos:line="4" pos:column="26">size_t<pos:position pos:line="4" pos:column="32"/></name></type> <name pos:line="4" pos:column="33">buffersize<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>,        <comment type="block" pos:line="4" pos:column="52">/* max amount to read */</comment>
                         <parameter><decl><type><name pos:line="5" pos:column="26">CURLcode<pos:position pos:line="5" pos:column="34"/></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">curlcode<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">error_buffer<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">256<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">long<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">sslerror<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">nread<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">buffsize<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">ssl_connect_data<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">connssl<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name><name pos:line="11" pos:column="39">conn<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">ssl<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><name pos:line="11" pos:column="49">num<pos:position pos:line="11" pos:column="52"/></name></expr>]<pos:position pos:line="11" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">ERR_clear_error<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">buffsize<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">buffersize<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">&gt;<pos:position pos:line="15" pos:column="30"/></operator> <operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">size_t<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">INT_MAX<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator></expr> ?<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46"> <expr><name pos:line="15" pos:column="47">INT_MAX<pos:position pos:line="15" pos:column="54"/></name></expr> <pos:position pos:line="15" pos:column="55"/></then><else pos:line="15" pos:column="55">: <expr><operator pos:line="15" pos:column="57">(<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">int<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">buffersize<pos:position pos:line="15" pos:column="72"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">nread<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">ssize_t<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator><call><name pos:line="16" pos:column="20">SSL_read<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">BACKEND<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">handle<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">buf<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">buffsize<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">nread<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">&lt;=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
    <comment type="block" pos:line="18" pos:column="5">/* failed SSL_read */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <init pos:line="19" pos:column="13">= <expr><call><name pos:line="19" pos:column="15">SSL_get_error<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">BACKEND<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">handle<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">(<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">int<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">nread<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="58"/></decl_stmt>

    <switch pos:line="21" pos:column="5">switch<condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">err<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition> <block pos:line="21" pos:column="17">{
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">SSL_ERROR_NONE<pos:position pos:line="22" pos:column="24"/></name></expr>:<pos:position pos:line="22" pos:column="25"/></case> <comment type="block" pos:line="22" pos:column="26">/* this is not an error */</comment>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">SSL_ERROR_ZERO_RETURN<pos:position pos:line="23" pos:column="31"/></name></expr>:<pos:position pos:line="23" pos:column="32"/></case> <comment type="block" pos:line="23" pos:column="33">/* no more data */</comment>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="25" pos:column="29"/></name></expr>:<pos:position pos:line="25" pos:column="30"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">SSL_ERROR_WANT_WRITE<pos:position pos:line="26" pos:column="30"/></name></expr>:<pos:position pos:line="26" pos:column="31"/></case>
      <comment type="block" pos:line="27" pos:column="7">/* there's data pending, re-invoke SSL_read() */</comment>
      <expr_stmt><expr><operator pos:line="28" pos:column="7">*<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">curlcode<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">CURLE_AGAIN<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
    <default pos:line="30" pos:column="5">default:<pos:position pos:line="30" pos:column="13"/></default>
      <comment type="block" pos:line="31" pos:column="7">/* openssl/ssl.h for SSL_ERROR_SYSCALL says "look at error stack/return
         value/errno" */</comment>
      <comment type="block" pos:line="33" pos:column="7">/* https://www.openssl.org/docs/crypto/ERR_get_error.html */</comment>
      <expr_stmt><expr><name pos:line="34" pos:column="7">sslerror<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">ERR_get_error<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">()<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">nread<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&lt;<pos:position pos:line="35" pos:column="21"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal><operator pos:line="35" pos:column="20">)<pos:position pos:line="35" pos:column="21"/></operator> <operator pos:line="35" pos:column="22">||<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">sslerror<pos:position pos:line="35" pos:column="33"/></name></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <block pos:line="35" pos:column="35">{
        <comment type="block" pos:line="36" pos:column="9">/* If the return code was negative or there actually is an error in the
           queue */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">failf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name><name pos:line="38" pos:column="15">conn<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">data<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">OSSL_PACKAGE<pos:position pos:line="38" pos:column="39"/></name> <literal type="string" pos:line="38" pos:column="40">" SSL_read: %s, errno %d"<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>,
              <argument><expr><operator pos:line="39" pos:column="15">(<pos:position pos:line="39" pos:column="16"/></operator><ternary><condition><expr><name pos:line="39" pos:column="16">sslerror<pos:position pos:line="39" pos:column="24"/></name></expr> ?<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
               <expr><call><name pos:line="40" pos:column="16">ossl_strerror<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">sslerror<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">error_buffer<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="54">sizeof<argument_list pos:line="40" pos:column="60">(<argument><expr><name pos:line="40" pos:column="61">error_buffer<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call></expr> <pos:position pos:line="40" pos:column="76"/></then><else pos:line="40" pos:column="76">:
               <expr><call><name pos:line="41" pos:column="16">SSL_ERROR_to_str<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">err<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr></else></ternary><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator></expr></argument>,
              <argument><expr><name pos:line="42" pos:column="15">SOCKERRNO<pos:position pos:line="42" pos:column="24"/></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="43" pos:column="9">*<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">curlcode<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">CURLE_RECV_ERROR<pos:position pos:line="43" pos:column="37"/></name></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">-<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">1<pos:position pos:line="44" pos:column="18"/></literal></expr>;<pos:position pos:line="44" pos:column="19"/></return>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></switch>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">nread<pos:position pos:line="48" pos:column="15"/></name></expr>;<pos:position pos:line="48" pos:column="16"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

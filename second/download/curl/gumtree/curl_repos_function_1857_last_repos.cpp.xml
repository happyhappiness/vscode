<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1857_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">encrypt_des<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">unsigned<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">in<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">out<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">unsigned<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">key_56<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HCRYPTPROV<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">hprov<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">HCRYPTKEY<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">hkey<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <struct pos:line="6" pos:column="3">struct <block pos:line="6" pos:column="10">{<public type="default" pos:line="6" pos:column="11">
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">BLOBHEADER<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">hdr<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">len<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">key<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><literal type="number" pos:line="9" pos:column="14">8<pos:position pos:line="9" pos:column="15"/></literal></expr>]<pos:position pos:line="9" pos:column="16"/></index></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <pos:position pos:line="10" pos:column="3"/></public>}<pos:position pos:line="10" pos:column="4"/></block> <decl><name pos:line="10" pos:column="5">blob<pos:position pos:line="10" pos:column="9"/></name></decl>;<pos:position pos:line="10" pos:column="10"/></struct>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">DWORD<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">len<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><literal type="number" pos:line="11" pos:column="15">8<pos:position pos:line="11" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Acquire the crypto provider */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><call><name pos:line="14" pos:column="7">CryptAcquireContext<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">hprov<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">NULL<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">PROV_RSA_FULL<pos:position pos:line="14" pos:column="60"/></name></expr></argument>,
                          <argument><expr><name pos:line="15" pos:column="27">CRYPT_VERIFYCONTEXT<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">FALSE<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Setup the key blob structure */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">memset<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><operator pos:line="19" pos:column="10">&amp;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="11">blob<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="20">sizeof<argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">blob<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">blob<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">.<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">hdr<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">bType<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">PLAINTEXTKEYBLOB<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">blob<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">.<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">hdr<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">bVersion<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">2<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">blob<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">.<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">hdr<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">aiKeyAlg<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">CALG_DES<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">blob<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">.<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">len<pos:position pos:line="23" pos:column="11"/></name></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <sizeof pos:line="23" pos:column="14">sizeof<argument_list pos:line="23" pos:column="20">(<argument><expr><name><name pos:line="23" pos:column="21">blob<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">key<pos:position pos:line="23" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Expand the 56-bit key to 64-bits */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">extend_key_56_to_64<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">key_56<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="31">blob<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">key<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Set the key parity to odd */</comment>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">Curl_des_set_odd_parity<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">unsigned<pos:position pos:line="29" pos:column="36"/></name> <name pos:line="29" pos:column="37">char<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">*<pos:position pos:line="29" pos:column="43"/></operator><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator> <name><name pos:line="29" pos:column="45">blob<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">key<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="55">sizeof<argument_list pos:line="29" pos:column="61">(<argument><expr><name><name pos:line="29" pos:column="62">blob<pos:position pos:line="29" pos:column="66"/></name><operator pos:line="29" pos:column="66">.<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="67">key<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* Import the key */</comment>
  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><operator pos:line="32" pos:column="6">!<pos:position pos:line="32" pos:column="7"/></operator><call><name pos:line="32" pos:column="7">CryptImportKey<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">hprov<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">BYTE<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">*<pos:position pos:line="32" pos:column="36"/></operator><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">&amp;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="39">blob<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="45">sizeof<argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">blob<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="59">0<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="62">0<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="65">&amp;<pos:position pos:line="32" pos:column="70"/></operator><name pos:line="32" pos:column="66">hkey<pos:position pos:line="32" pos:column="70"/></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="72"/></condition><then pos:line="32" pos:column="72"> <block pos:line="32" pos:column="73">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">CryptReleaseContext<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">hprov<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">FALSE<pos:position pos:line="35" pos:column="17"/></name></expr>;<pos:position pos:line="35" pos:column="18"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">memcpy<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">out<pos:position pos:line="38" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="15">in<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="19">8<pos:position pos:line="38" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="40" pos:column="3">/* Perform the encryption */</comment>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">CryptEncrypt<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">hkey<pos:position pos:line="41" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="22">0<pos:position pos:line="41" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="25">FALSE<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">out<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">&amp;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="41">len<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">len<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">CryptDestroyKey<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">hkey<pos:position pos:line="43" pos:column="23"/></name></expr></argument>)<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">CryptReleaseContext<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">hprov<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="30">0<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">TRUE<pos:position pos:line="46" pos:column="14"/></name></expr>;<pos:position pos:line="46" pos:column="15"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

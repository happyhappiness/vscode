<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1964_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Curl_sec_request_prot<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">connectdata<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">conn<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">level<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">enum<pos:position pos:line="4" pos:column="7"/></name> <name pos:line="4" pos:column="8">protection_level<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">l<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">name_to_level<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name pos:line="4" pos:column="43">level<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">l<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">==<pos:position pos:line="5" pos:column="10"/></operator> <name pos:line="5" pos:column="11">PROT_NONE<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">DEBUGASSERT<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">l<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="19">PROT_NONE<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&amp;&amp;<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="32">l<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">&lt;<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="36">PROT_LAST<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">conn<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">request_data_prot<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">l<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

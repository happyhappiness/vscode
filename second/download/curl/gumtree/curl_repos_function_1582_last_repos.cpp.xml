<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1582_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">Curl_hash_clean_with_criterium<pos:position pos:line="2" pos:column="31"/></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">curl_hash<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">h<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">void<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">user<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                               <parameter><function_decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> (<modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><name pos:line="3" pos:column="38">comp<pos:position pos:line="3" pos:column="42"/></name>)<parameter_list pos:line="3" pos:column="43">(<parameter><decl><type><name pos:line="3" pos:column="44">void<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">void<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">curl_llist_element<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">le<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_llist_element<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">lnext<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_llist<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">list<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">h<pos:position pos:line="10" pos:column="8"/></name></expr>)<pos:position pos:line="10" pos:column="9"/></condition><then pos:line="10" pos:column="9">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <for pos:line="13" pos:column="3">for<control pos:line="13" pos:column="6">(<init><expr><name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <literal type="number" pos:line="13" pos:column="11">0<pos:position pos:line="13" pos:column="12"/></literal></expr>;<pos:position pos:line="13" pos:column="13"/></init> <condition><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&lt;<pos:position pos:line="13" pos:column="20"/></operator> <name><name pos:line="13" pos:column="18">h<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">slots<pos:position pos:line="13" pos:column="26"/></name></name></expr>;<pos:position pos:line="13" pos:column="27"/></condition> <incr><expr><operator pos:line="13" pos:column="28">++<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">i<pos:position pos:line="13" pos:column="31"/></name></expr></incr>)<pos:position pos:line="13" pos:column="32"/></control> <block pos:line="13" pos:column="33">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">list<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">&amp;<pos:position pos:line="14" pos:column="17"/></operator><name><name pos:line="14" pos:column="13">h<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">table<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><name pos:line="14" pos:column="22">i<pos:position pos:line="14" pos:column="23"/></name></expr>]<pos:position pos:line="14" pos:column="24"/></index></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">le<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name><name pos:line="15" pos:column="10">list<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">head<pos:position pos:line="15" pos:column="20"/></name></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt> <comment type="block" pos:line="15" pos:column="22">/* get first list entry */</comment>
    <while pos:line="16" pos:column="5">while<condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">le<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition> <block pos:line="16" pos:column="15">{
      <decl_stmt><decl><type><name><name pos:line="17" pos:column="7">struct<pos:position pos:line="17" pos:column="13"/></name> <name pos:line="17" pos:column="14">curl_hash_element<pos:position pos:line="17" pos:column="31"/></name></name> <modifier pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></modifier></type><name pos:line="17" pos:column="33">he<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><name><name pos:line="17" pos:column="38">le<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">ptr<pos:position pos:line="17" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">lnext<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name><name pos:line="18" pos:column="15">le<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">next<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
      <comment type="block" pos:line="19" pos:column="7">/* ask the callback function if we shall remove this entry or not */</comment>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">comp<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">||<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">comp<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">user<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="37">he<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">ptr<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46"> <block pos:line="20" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">Curl_llist_remove<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">list<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">le<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="37">(<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">void<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">*<pos:position pos:line="21" pos:column="44"/></operator><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">h<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">--<pos:position pos:line="22" pos:column="11"/></operator><name><name pos:line="22" pos:column="11">h<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">size<pos:position pos:line="22" pos:column="18"/></name></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt> <comment type="block" pos:line="22" pos:column="20">/* one less entry in the hash now */</comment>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="24" pos:column="7">le<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">lnext<pos:position pos:line="24" pos:column="17"/></name></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></while>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

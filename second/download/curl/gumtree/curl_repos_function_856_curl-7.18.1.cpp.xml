<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_856_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">isBadFtpString<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">string<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <return pos:line="3" pos:column="3">return <expr><call pos:line="3" pos:column="10">(<name pos:line="3" pos:column="11">bool<pos:position pos:line="3" pos:column="15"/></name>)<argument_list pos:line="3" pos:column="16">(<argument><expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <call><name pos:line="3" pos:column="26">strchr<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">string<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="41">'\r'<pos:position pos:line="3" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator> <operator pos:line="3" pos:column="48">||<pos:position pos:line="3" pos:column="50"/></operator> <operator pos:line="3" pos:column="51">(<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">NULL<pos:position pos:line="3" pos:column="56"/></name> <operator pos:line="3" pos:column="57">!=<pos:position pos:line="3" pos:column="59"/></operator> <call><name pos:line="3" pos:column="60">strchr<pos:position pos:line="3" pos:column="66"/></name><argument_list pos:line="3" pos:column="66">(<argument><expr><name pos:line="3" pos:column="67">string<pos:position pos:line="3" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="75">'\n'<pos:position pos:line="3" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="80"/></argument_list></call><operator pos:line="3" pos:column="80">)<pos:position pos:line="3" pos:column="81"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="83"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

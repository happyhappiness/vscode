<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_955.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">on_data_chunk_recv<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">nghttp2_session<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">session<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">uint8_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">flags<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int32_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">stream_id<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">uint8_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">data<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">size_t<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">len<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="64">void<pos:position pos:line="3" pos:column="68"/></name> <modifier pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></modifier></type><name pos:line="3" pos:column="70">userp<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="76"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">connectdata<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">conn<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator>struct <name pos:line="5" pos:column="38">connectdata<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">userp<pos:position pos:line="5" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">http_conn<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">c<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name><name pos:line="6" pos:column="26">conn<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">proto<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">.<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">httpc<pos:position pos:line="6" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">nread<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">session<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">infof<pos:position pos:line="11" pos:column="8"/></name><argument_list pos:line="11" pos:column="8">(<argument><expr><name><name pos:line="11" pos:column="9">conn<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">data<pos:position pos:line="11" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="21">"on_data_chunk_recv() "<pos:position pos:line="11" pos:column="44"/></literal>
        <literal type="string" pos:line="12" pos:column="9">"len = %u, stream = %x\n"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">len<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">stream_id<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">stream_id<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">c<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">stream_id<pos:position pos:line="14" pos:column="31"/></name></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <block pos:line="14" pos:column="33">{
    <return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">nread<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <ternary><condition><expr><name><name pos:line="18" pos:column="11">c<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">len<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">&lt;<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="20">len<pos:position pos:line="18" pos:column="23"/></name></expr> ?<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <expr><name><name pos:line="18" pos:column="26">c<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">len<pos:position pos:line="18" pos:column="32"/></name></name></expr> <pos:position pos:line="18" pos:column="33"/></then><else pos:line="18" pos:column="33">: <expr><name pos:line="18" pos:column="35">len<pos:position pos:line="18" pos:column="38"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">memcpy<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><name><name pos:line="19" pos:column="10">c<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">mem<pos:position pos:line="19" pos:column="16"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="18">data<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">nread<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">c<pos:position pos:line="21" pos:column="4"/></name><operator pos:line="21" pos:column="4">-&gt;<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="6">mem<pos:position pos:line="21" pos:column="9"/></name></name> <operator pos:line="21" pos:column="10">+=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">nread<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">c<pos:position pos:line="22" pos:column="4"/></name><operator pos:line="22" pos:column="4">-&gt;<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="6">len<pos:position pos:line="22" pos:column="9"/></name></name> <operator pos:line="22" pos:column="10">-=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">nread<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">infof<pos:position pos:line="24" pos:column="8"/></name><argument_list pos:line="24" pos:column="8">(<argument><expr><name><name pos:line="24" pos:column="9">conn<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">data<pos:position pos:line="24" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="21">"%zu data written\n"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">nread<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">nread<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&lt;<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="14">len<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18"> <block pos:line="26" pos:column="19">{
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">c<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">data<pos:position pos:line="27" pos:column="12"/></name></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">+<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">nread<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">c<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">datalen<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">len<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">-<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">nread<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">NGHTTP2_ERR_PAUSE<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <return pos:line="31" pos:column="3">return <expr><literal type="number" pos:line="31" pos:column="10">0<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_229_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_setopt<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">SessionHandle<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">CURLoption<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">option<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="69">...<pos:position pos:line="1" pos:column="72"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">param<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">cookiefile<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">va_start<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">param<pos:position pos:line="6" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">option<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>

  <switch pos:line="8" pos:column="3">switch<condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">option<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition> <block pos:line="8" pos:column="18">{
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">CURLOPT_DNS_CACHE_TIMEOUT<pos:position pos:line="9" pos:column="33"/></name></expr>:<pos:position pos:line="9" pos:column="34"/></case>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">data<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">set<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">dns_cache_timeout<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <call><name pos:line="10" pos:column="35">va_arg<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">param<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">int<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
    <break pos:line="11" pos:column="5">break;<pos:position pos:line="11" pos:column="11"/></break>
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">CURLOPT_DNS_USE_GLOBAL_CACHE<pos:position pos:line="12" pos:column="36"/></name></expr>:<pos:position pos:line="12" pos:column="37"/></case>
    <block pos:line="13" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">int<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">use_cache<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><call><name pos:line="14" pos:column="23">va_arg<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">param<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">int<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">use_cache<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">Curl_global_host_cache_init<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">()<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="19" pos:column="7">data<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">set<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">global_dns_cache<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="36">use_cache<pos:position pos:line="19" pos:column="45"/></name></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block>
    <break pos:line="21" pos:column="5">break;<pos:position pos:line="21" pos:column="11"/></break>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">CURLOPT_SSL_CIPHER_LIST<pos:position pos:line="22" pos:column="31"/></name></expr>:<pos:position pos:line="22" pos:column="32"/></case>
    <comment type="block" pos:line="23" pos:column="5">/* set a list of cipher we want to use in the SSL connection */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">data<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">set<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">ssl<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">cipher_list<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="33">va_arg<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">param<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">char<pos:position pos:line="24" pos:column="51"/></name> <operator pos:line="24" pos:column="52">*<pos:position pos:line="24" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <break pos:line="25" pos:column="5">break;<pos:position pos:line="25" pos:column="11"/></break>

  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">CURLOPT_RANDOM_FILE<pos:position pos:line="27" pos:column="27"/></name></expr>:<pos:position pos:line="27" pos:column="28"/></case>
    <comment type="block" pos:line="28" pos:column="5">/*
     * This is the path name to a file that contains random data to seed
     * the random SSL stuff with. The file is only used for reading.
     */</comment>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">data<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">set<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">ssl<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">.<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">random_file<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">va_arg<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">param<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">char<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">*<pos:position pos:line="32" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    <break pos:line="33" pos:column="5">break;<pos:position pos:line="33" pos:column="11"/></break>
  <case pos:line="34" pos:column="3">case <expr><name pos:line="34" pos:column="8">CURLOPT_EGDSOCKET<pos:position pos:line="34" pos:column="25"/></name></expr>:<pos:position pos:line="34" pos:column="26"/></case>
    <comment type="block" pos:line="35" pos:column="5">/*
     * The Entropy Gathering Daemon socket pathname
     */</comment>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">data<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">set<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">.<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">ssl<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">egdsocket<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <call><name pos:line="38" pos:column="31">va_arg<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">param<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">char<pos:position pos:line="38" pos:column="49"/></name> <operator pos:line="38" pos:column="50">*<pos:position pos:line="38" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
    <break pos:line="39" pos:column="5">break;<pos:position pos:line="39" pos:column="11"/></break>
  <case pos:line="40" pos:column="3">case <expr><name pos:line="40" pos:column="8">CURLOPT_MAXCONNECTS<pos:position pos:line="40" pos:column="27"/></name></expr>:<pos:position pos:line="40" pos:column="28"/></case>
    <comment type="block" pos:line="41" pos:column="5">/*
     * Set the absolute number of maximum simultaneous alive connection that
     * libcurl is allowed to have.
     */</comment>
    <block pos:line="45" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">long<pos:position pos:line="46" pos:column="11"/></name></type> <name pos:line="46" pos:column="12">newconnects<pos:position pos:line="46" pos:column="23"/></name><init pos:line="46" pos:column="23">= <expr><call><name pos:line="46" pos:column="25">va_arg<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">param<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">long<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="45"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="47" pos:column="7">struct<pos:position pos:line="47" pos:column="13"/></name> <name pos:line="47" pos:column="14">connectdata<pos:position pos:line="47" pos:column="25"/></name></name> <modifier pos:line="47" pos:column="26">*<pos:position pos:line="47" pos:column="27"/></modifier><modifier pos:line="47" pos:column="27">*<pos:position pos:line="47" pos:column="28"/></modifier></type><name pos:line="47" pos:column="28">newptr<pos:position pos:line="47" pos:column="34"/></name></decl>;<pos:position pos:line="47" pos:column="35"/></decl_stmt>

      <if pos:line="49" pos:column="7">if<condition pos:line="49" pos:column="9">(<expr><name pos:line="49" pos:column="10">newconnects<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">&lt;<pos:position pos:line="49" pos:column="26"/></operator> <name><name pos:line="49" pos:column="24">data<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">state<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">numconnects<pos:position pos:line="49" pos:column="47"/></name></name></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48"> <block pos:line="49" pos:column="49">{
        <comment type="block" pos:line="50" pos:column="9">/* Since this number is *decreased* from the existing number, we must
           close the possibly open connections that live on the indexes that
           are being removed! */</comment>
        <decl_stmt><decl><type><name pos:line="53" pos:column="9">int<pos:position pos:line="53" pos:column="12"/></name></type> <name pos:line="53" pos:column="13">i<pos:position pos:line="53" pos:column="14"/></name></decl>;<pos:position pos:line="53" pos:column="15"/></decl_stmt>
        <for pos:line="54" pos:column="9">for<control pos:line="54" pos:column="12">(<init><expr><name pos:line="54" pos:column="13">i<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">newconnects<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></init> <condition><expr><name pos:line="54" pos:column="28">i<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">&lt;<pos:position pos:line="54" pos:column="33"/></operator> <name><name pos:line="54" pos:column="31">data<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">state<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">.<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">numconnects<pos:position pos:line="54" pos:column="54"/></name></name></expr>;<pos:position pos:line="54" pos:column="55"/></condition> <incr><expr><name pos:line="54" pos:column="56">i<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">++<pos:position pos:line="54" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="60"/></control>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="11">Curl_disconnect<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name><name pos:line="55" pos:column="27">data<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">state<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">.<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="39">connects<pos:position pos:line="55" pos:column="47"/></name><index pos:line="55" pos:column="47">[<expr><name pos:line="55" pos:column="48">i<pos:position pos:line="55" pos:column="49"/></name></expr>]<pos:position pos:line="55" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt></block></for>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>
      <if pos:line="57" pos:column="7">if<condition pos:line="57" pos:column="9">(<expr><name pos:line="57" pos:column="10">newconnects<pos:position pos:line="57" pos:column="21"/></name></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22"> <block pos:line="57" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">int<pos:position pos:line="58" pos:column="12"/></name></type> <name pos:line="58" pos:column="13">i<pos:position pos:line="58" pos:column="14"/></name></decl>;<pos:position pos:line="58" pos:column="15"/></decl_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">newptr<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <operator pos:line="59" pos:column="17">(<pos:position pos:line="59" pos:column="18"/></operator>struct <name pos:line="59" pos:column="25">connectdata<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">*<pos:position pos:line="59" pos:column="38"/></operator><operator pos:line="59" pos:column="38">*<pos:position pos:line="59" pos:column="39"/></operator><operator pos:line="59" pos:column="39">)<pos:position pos:line="59" pos:column="40"/></operator>
          <call><name pos:line="60" pos:column="11">realloc<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><name><name pos:line="60" pos:column="19">data<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">state<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">.<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">connects<pos:position pos:line="60" pos:column="39"/></name></name></expr></argument>,
                  <argument><expr><sizeof pos:line="61" pos:column="19">sizeof<argument_list pos:line="61" pos:column="25">(<argument><expr pos:line="61" pos:column="26">struct <name pos:line="61" pos:column="33">connectdata<pos:position pos:line="61" pos:column="44"/></name> <operator pos:line="61" pos:column="45">*<pos:position pos:line="61" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></sizeof> <operator pos:line="61" pos:column="48">*<pos:position pos:line="61" pos:column="49"/></operator> <name pos:line="61" pos:column="50">newconnects<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
        <if pos:line="62" pos:column="9">if<condition pos:line="62" pos:column="11">(<expr><operator pos:line="62" pos:column="12">!<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">newptr<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20">
          <comment type="block" pos:line="63" pos:column="11">/* we closed a few connections in vain, but so what? */</comment>
          <block type="pseudo"><return pos:line="64" pos:column="11">return <expr><name pos:line="64" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></return></block></then></if>

        <comment type="block" pos:line="66" pos:column="9">/* nullify the newly added pointers */</comment>
        <for pos:line="67" pos:column="9">for<control pos:line="67" pos:column="12">(<init><expr><name pos:line="67" pos:column="13">i<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator><name><name pos:line="67" pos:column="15">data<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">state<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">.<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="27">numconnects<pos:position pos:line="67" pos:column="38"/></name></name></expr>;<pos:position pos:line="67" pos:column="39"/></init> <condition><expr><name pos:line="67" pos:column="40">i<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">&lt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">newconnects<pos:position pos:line="67" pos:column="53"/></name></expr>;<pos:position pos:line="67" pos:column="54"/></condition> <incr><expr><name pos:line="67" pos:column="55">i<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">++<pos:position pos:line="67" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="59"/></control> <block pos:line="67" pos:column="60">{
          <expr_stmt><expr><name><name pos:line="68" pos:column="11">newptr<pos:position pos:line="68" pos:column="17"/></name><index pos:line="68" pos:column="17">[<expr><name pos:line="68" pos:column="18">i<pos:position pos:line="68" pos:column="19"/></name></expr>]<pos:position pos:line="68" pos:column="20"/></index></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">NULL<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></for>

        <expr_stmt><expr><name><name pos:line="71" pos:column="9">data<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">state<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">.<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="21">connects<pos:position pos:line="71" pos:column="29"/></name></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <name pos:line="71" pos:column="32">newptr<pos:position pos:line="71" pos:column="38"/></name></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">data<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">-&gt;<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="15">state<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">.<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">numconnects<pos:position pos:line="72" pos:column="32"/></name></name> <operator pos:line="72" pos:column="33">=<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">newconnects<pos:position pos:line="72" pos:column="46"/></name></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></then>
      <else pos:line="74" pos:column="7">else <block pos:line="74" pos:column="12">{
        <comment type="block" pos:line="75" pos:column="9">/* zero makes NO cache at all */</comment>
        <if pos:line="76" pos:column="9">if<condition pos:line="76" pos:column="11">(<expr><name><name pos:line="76" pos:column="12">data<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">state<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">connects<pos:position pos:line="76" pos:column="32"/></name></name></expr>)<pos:position pos:line="76" pos:column="33"/></condition><then pos:line="76" pos:column="33">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="11">free<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><name><name pos:line="77" pos:column="16">data<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">-&gt;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="22">state<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">.<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="28">connects<pos:position pos:line="77" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">data<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">-&gt;<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="15">state<pos:position pos:line="78" pos:column="20"/></name><operator pos:line="78" pos:column="20">.<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="21">connects<pos:position pos:line="78" pos:column="29"/></name></name><operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">NULL<pos:position pos:line="78" pos:column="34"/></name></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">data<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">-&gt;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="15">state<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">.<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="21">numconnects<pos:position pos:line="79" pos:column="32"/></name></name><operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator><literal type="number" pos:line="79" pos:column="33">0<pos:position pos:line="79" pos:column="34"/></literal></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block>
    <break pos:line="82" pos:column="5">break;<pos:position pos:line="82" pos:column="11"/></break>
  <case pos:line="83" pos:column="3">case <expr><name pos:line="83" pos:column="8">CURLOPT_FORBID_REUSE<pos:position pos:line="83" pos:column="28"/></name></expr>:<pos:position pos:line="83" pos:column="29"/></case>
    <comment type="block" pos:line="84" pos:column="5">/*
     * When this transfer is done, it must not be left to be reused by a
     * subsequent transfer but shall be closed immediately.
     */</comment>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">data<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">-&gt;<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="11">set<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">.<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="15">reuse_forbid<pos:position pos:line="88" pos:column="27"/></name></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <ternary><condition><expr><call><name pos:line="88" pos:column="30">va_arg<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">param<pos:position pos:line="88" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">long<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="88" pos:column="50"/></condition><then><expr><name pos:line="88" pos:column="50">TRUE<pos:position pos:line="88" pos:column="54"/></name></expr></then><else pos:line="88" pos:column="54">:<expr><name pos:line="88" pos:column="55">FALSE<pos:position pos:line="88" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt>
    <break pos:line="89" pos:column="5">break;<pos:position pos:line="89" pos:column="11"/></break>
  <case pos:line="90" pos:column="3">case <expr><name pos:line="90" pos:column="8">CURLOPT_FRESH_CONNECT<pos:position pos:line="90" pos:column="29"/></name></expr>:<pos:position pos:line="90" pos:column="30"/></case>
    <comment type="block" pos:line="91" pos:column="5">/*
     * This transfer shall not use a previously cached connection but
     * should be made with a fresh new connect!
     */</comment>
    <expr_stmt><expr><name><name pos:line="95" pos:column="5">data<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">-&gt;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="11">set<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">.<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="15">reuse_fresh<pos:position pos:line="95" pos:column="26"/></name></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <ternary><condition><expr><call><name pos:line="95" pos:column="29">va_arg<pos:position pos:line="95" pos:column="35"/></name><argument_list pos:line="95" pos:column="35">(<argument><expr><name pos:line="95" pos:column="36">param<pos:position pos:line="95" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="43">long<pos:position pos:line="95" pos:column="47"/></name></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></call></expr>?<pos:position pos:line="95" pos:column="49"/></condition><then><expr><name pos:line="95" pos:column="49">TRUE<pos:position pos:line="95" pos:column="53"/></name></expr></then><else pos:line="95" pos:column="53">:<expr><name pos:line="95" pos:column="54">FALSE<pos:position pos:line="95" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="95" pos:column="60"/></expr_stmt>
    <break pos:line="96" pos:column="5">break;<pos:position pos:line="96" pos:column="11"/></break>
  <case pos:line="97" pos:column="3">case <expr><name pos:line="97" pos:column="8">CURLOPT_VERBOSE<pos:position pos:line="97" pos:column="23"/></name></expr>:<pos:position pos:line="97" pos:column="24"/></case>
    <comment type="block" pos:line="98" pos:column="5">/*
     * Verbose means infof() calls that give a lot of information about
     * the connection and transfer procedures as well as internal choices.
     */</comment>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">data<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">set<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">.<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">verbose<pos:position pos:line="102" pos:column="22"/></name></name> <operator pos:line="102" pos:column="23">=<pos:position pos:line="102" pos:column="24"/></operator> <ternary><condition><expr><call><name pos:line="102" pos:column="25">va_arg<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">param<pos:position pos:line="102" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="39">long<pos:position pos:line="102" pos:column="43"/></name></expr></argument>)<pos:position pos:line="102" pos:column="44"/></argument_list></call></expr>?<pos:position pos:line="102" pos:column="45"/></condition><then><expr><name pos:line="102" pos:column="45">TRUE<pos:position pos:line="102" pos:column="49"/></name></expr></then><else pos:line="102" pos:column="49">:<expr><name pos:line="102" pos:column="50">FALSE<pos:position pos:line="102" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="102" pos:column="56"/></expr_stmt>
    <break pos:line="103" pos:column="5">break;<pos:position pos:line="103" pos:column="11"/></break>
  <case pos:line="104" pos:column="3">case <expr><name pos:line="104" pos:column="8">CURLOPT_HEADER<pos:position pos:line="104" pos:column="22"/></name></expr>:<pos:position pos:line="104" pos:column="23"/></case>
    <comment type="block" pos:line="105" pos:column="5">/*
     * Set to include the header in the general data output stream.
     */</comment>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">data<pos:position pos:line="108" pos:column="9"/></name><operator pos:line="108" pos:column="9">-&gt;<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="11">set<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">.<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="15">http_include_header<pos:position pos:line="108" pos:column="34"/></name></name> <operator pos:line="108" pos:column="35">=<pos:position pos:line="108" pos:column="36"/></operator> <ternary><condition><expr><call><name pos:line="108" pos:column="37">va_arg<pos:position pos:line="108" pos:column="43"/></name><argument_list pos:line="108" pos:column="43">(<argument><expr><name pos:line="108" pos:column="44">param<pos:position pos:line="108" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="51">long<pos:position pos:line="108" pos:column="55"/></name></expr></argument>)<pos:position pos:line="108" pos:column="56"/></argument_list></call></expr>?<pos:position pos:line="108" pos:column="57"/></condition><then><expr><name pos:line="108" pos:column="57">TRUE<pos:position pos:line="108" pos:column="61"/></name></expr></then><else pos:line="108" pos:column="61">:<expr><name pos:line="108" pos:column="62">FALSE<pos:position pos:line="108" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="108" pos:column="68"/></expr_stmt>
    <break pos:line="109" pos:column="5">break;<pos:position pos:line="109" pos:column="11"/></break>
  <case pos:line="110" pos:column="3">case <expr><name pos:line="110" pos:column="8">CURLOPT_NOPROGRESS<pos:position pos:line="110" pos:column="26"/></name></expr>:<pos:position pos:line="110" pos:column="27"/></case>
    <comment type="block" pos:line="111" pos:column="5">/*
     * Shut off the internal supported progress meter
     */</comment>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">data<pos:position pos:line="114" pos:column="9"/></name><operator pos:line="114" pos:column="9">-&gt;<pos:position pos:line="114" pos:column="14"/></operator><name pos:line="114" pos:column="11">set<pos:position pos:line="114" pos:column="14"/></name><operator pos:line="114" pos:column="14">.<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">hide_progress<pos:position pos:line="114" pos:column="28"/></name></name> <operator pos:line="114" pos:column="29">=<pos:position pos:line="114" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="114" pos:column="31">va_arg<pos:position pos:line="114" pos:column="37"/></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name pos:line="114" pos:column="38">param<pos:position pos:line="114" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="45">long<pos:position pos:line="114" pos:column="49"/></name></expr></argument>)<pos:position pos:line="114" pos:column="50"/></argument_list></call></expr>?<pos:position pos:line="114" pos:column="51"/></condition><then><expr><name pos:line="114" pos:column="51">TRUE<pos:position pos:line="114" pos:column="55"/></name></expr></then><else pos:line="114" pos:column="55">:<expr><name pos:line="114" pos:column="56">FALSE<pos:position pos:line="114" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="114" pos:column="62"/></expr_stmt>
    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><name><name pos:line="115" pos:column="8">data<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">-&gt;<pos:position pos:line="115" pos:column="17"/></operator><name pos:line="115" pos:column="14">set<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">.<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">hide_progress<pos:position pos:line="115" pos:column="31"/></name></name></expr>)<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="116" pos:column="7">data<pos:position pos:line="116" pos:column="11"/></name><operator pos:line="116" pos:column="11">-&gt;<pos:position pos:line="116" pos:column="16"/></operator><name pos:line="116" pos:column="13">progress<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">.<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="22">flags<pos:position pos:line="116" pos:column="27"/></name></name> <operator pos:line="116" pos:column="28">|=<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="31">PGRS_HIDE<pos:position pos:line="116" pos:column="40"/></name></expr>;<pos:position pos:line="116" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="117" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="118" pos:column="7">data<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">-&gt;<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="13">progress<pos:position pos:line="118" pos:column="21"/></name><operator pos:line="118" pos:column="21">.<pos:position pos:line="118" pos:column="22"/></operator><name pos:line="118" pos:column="22">flags<pos:position pos:line="118" pos:column="27"/></name></name> <operator pos:line="118" pos:column="28">&amp;=<pos:position pos:line="118" pos:column="34"/></operator> <operator pos:line="118" pos:column="31">~<pos:position pos:line="118" pos:column="32"/></operator><name pos:line="118" pos:column="32">PGRS_HIDE<pos:position pos:line="118" pos:column="41"/></name></expr>;<pos:position pos:line="118" pos:column="42"/></expr_stmt></block></else></if>
    <break pos:line="119" pos:column="5">break;<pos:position pos:line="119" pos:column="11"/></break>
  <case pos:line="120" pos:column="3">case <expr><name pos:line="120" pos:column="8">CURLOPT_NOBODY<pos:position pos:line="120" pos:column="22"/></name></expr>:<pos:position pos:line="120" pos:column="23"/></case>
    <comment type="block" pos:line="121" pos:column="5">/*
     * Do not include the body part in the output data stream.
     */</comment>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">data<pos:position pos:line="124" pos:column="9"/></name><operator pos:line="124" pos:column="9">-&gt;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="11">set<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">.<pos:position pos:line="124" pos:column="15"/></operator><name pos:line="124" pos:column="15">no_body<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">=<pos:position pos:line="124" pos:column="24"/></operator> <ternary><condition><expr><call><name pos:line="124" pos:column="25">va_arg<pos:position pos:line="124" pos:column="31"/></name><argument_list pos:line="124" pos:column="31">(<argument><expr><name pos:line="124" pos:column="32">param<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="39">long<pos:position pos:line="124" pos:column="43"/></name></expr></argument>)<pos:position pos:line="124" pos:column="44"/></argument_list></call></expr>?<pos:position pos:line="124" pos:column="45"/></condition><then><expr><name pos:line="124" pos:column="45">TRUE<pos:position pos:line="124" pos:column="49"/></name></expr></then><else pos:line="124" pos:column="49">:<expr><name pos:line="124" pos:column="50">FALSE<pos:position pos:line="124" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="124" pos:column="56"/></expr_stmt>
    <break pos:line="125" pos:column="5">break;<pos:position pos:line="125" pos:column="11"/></break>
  <case pos:line="126" pos:column="3">case <expr><name pos:line="126" pos:column="8">CURLOPT_FAILONERROR<pos:position pos:line="126" pos:column="27"/></name></expr>:<pos:position pos:line="126" pos:column="28"/></case>
    <comment type="block" pos:line="127" pos:column="5">/*
     * Don't output the &gt;=300 error code HTML-page, but instead only
     * return error.
     */</comment>
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">data<pos:position pos:line="131" pos:column="9"/></name><operator pos:line="131" pos:column="9">-&gt;<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="11">set<pos:position pos:line="131" pos:column="14"/></name><operator pos:line="131" pos:column="14">.<pos:position pos:line="131" pos:column="15"/></operator><name pos:line="131" pos:column="15">http_fail_on_error<pos:position pos:line="131" pos:column="33"/></name></name> <operator pos:line="131" pos:column="34">=<pos:position pos:line="131" pos:column="35"/></operator> <ternary><condition><expr><call><name pos:line="131" pos:column="36">va_arg<pos:position pos:line="131" pos:column="42"/></name><argument_list pos:line="131" pos:column="42">(<argument><expr><name pos:line="131" pos:column="43">param<pos:position pos:line="131" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="50">long<pos:position pos:line="131" pos:column="54"/></name></expr></argument>)<pos:position pos:line="131" pos:column="55"/></argument_list></call></expr>?<pos:position pos:line="131" pos:column="56"/></condition><then><expr><name pos:line="131" pos:column="56">TRUE<pos:position pos:line="131" pos:column="60"/></name></expr></then><else pos:line="131" pos:column="60">:<expr><name pos:line="131" pos:column="61">FALSE<pos:position pos:line="131" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="131" pos:column="67"/></expr_stmt>
    <break pos:line="132" pos:column="5">break;<pos:position pos:line="132" pos:column="11"/></break>
  <case pos:line="133" pos:column="3">case <expr><name pos:line="133" pos:column="8">CURLOPT_UPLOAD<pos:position pos:line="133" pos:column="22"/></name></expr>:<pos:position pos:line="133" pos:column="23"/></case>
    <comment type="block" pos:line="134" pos:column="5">/*
     * We want to sent data to the remote host
     */</comment>
    <expr_stmt><expr><name><name pos:line="137" pos:column="5">data<pos:position pos:line="137" pos:column="9"/></name><operator pos:line="137" pos:column="9">-&gt;<pos:position pos:line="137" pos:column="14"/></operator><name pos:line="137" pos:column="11">set<pos:position pos:line="137" pos:column="14"/></name><operator pos:line="137" pos:column="14">.<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">upload<pos:position pos:line="137" pos:column="21"/></name></name> <operator pos:line="137" pos:column="22">=<pos:position pos:line="137" pos:column="23"/></operator> <ternary><condition><expr><call><name pos:line="137" pos:column="24">va_arg<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">(<argument><expr><name pos:line="137" pos:column="31">param<pos:position pos:line="137" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="38">long<pos:position pos:line="137" pos:column="42"/></name></expr></argument>)<pos:position pos:line="137" pos:column="43"/></argument_list></call></expr>?<pos:position pos:line="137" pos:column="44"/></condition><then><expr><name pos:line="137" pos:column="44">TRUE<pos:position pos:line="137" pos:column="48"/></name></expr></then><else pos:line="137" pos:column="48">:<expr><name pos:line="137" pos:column="49">FALSE<pos:position pos:line="137" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="137" pos:column="55"/></expr_stmt>
    <if pos:line="138" pos:column="5">if<condition pos:line="138" pos:column="7">(<expr><name><name pos:line="138" pos:column="8">data<pos:position pos:line="138" pos:column="12"/></name><operator pos:line="138" pos:column="12">-&gt;<pos:position pos:line="138" pos:column="17"/></operator><name pos:line="138" pos:column="14">set<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">.<pos:position pos:line="138" pos:column="18"/></operator><name pos:line="138" pos:column="18">upload<pos:position pos:line="138" pos:column="24"/></name></name></expr>)<pos:position pos:line="138" pos:column="25"/></condition><then pos:line="138" pos:column="25">
      <comment type="block" pos:line="139" pos:column="7">/* If this is HTTP, PUT is what's needed to "upload" */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="140" pos:column="7">data<pos:position pos:line="140" pos:column="11"/></name><operator pos:line="140" pos:column="11">-&gt;<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="13">set<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">.<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="17">httpreq<pos:position pos:line="140" pos:column="24"/></name></name> <operator pos:line="140" pos:column="25">=<pos:position pos:line="140" pos:column="26"/></operator> <name pos:line="140" pos:column="27">HTTPREQ_PUT<pos:position pos:line="140" pos:column="38"/></name></expr>;<pos:position pos:line="140" pos:column="39"/></expr_stmt></block></then></if>
    <break pos:line="141" pos:column="5">break;<pos:position pos:line="141" pos:column="11"/></break>
  <case pos:line="142" pos:column="3">case <expr><name pos:line="142" pos:column="8">CURLOPT_FILETIME<pos:position pos:line="142" pos:column="24"/></name></expr>:<pos:position pos:line="142" pos:column="25"/></case>
    <comment type="block" pos:line="143" pos:column="5">/*
     * Try to get the file time of the remote document. The time will
     * later (possibly) become available using curl_easy_getinfo().
     */</comment>
    <expr_stmt><expr><name><name pos:line="147" pos:column="5">data<pos:position pos:line="147" pos:column="9"/></name><operator pos:line="147" pos:column="9">-&gt;<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="11">set<pos:position pos:line="147" pos:column="14"/></name><operator pos:line="147" pos:column="14">.<pos:position pos:line="147" pos:column="15"/></operator><name pos:line="147" pos:column="15">get_filetime<pos:position pos:line="147" pos:column="27"/></name></name> <operator pos:line="147" pos:column="28">=<pos:position pos:line="147" pos:column="29"/></operator> <ternary><condition><expr><call><name pos:line="147" pos:column="30">va_arg<pos:position pos:line="147" pos:column="36"/></name><argument_list pos:line="147" pos:column="36">(<argument><expr><name pos:line="147" pos:column="37">param<pos:position pos:line="147" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="44">long<pos:position pos:line="147" pos:column="48"/></name></expr></argument>)<pos:position pos:line="147" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="147" pos:column="50"/></condition><then><expr><name pos:line="147" pos:column="50">TRUE<pos:position pos:line="147" pos:column="54"/></name></expr></then><else pos:line="147" pos:column="54">:<expr><name pos:line="147" pos:column="55">FALSE<pos:position pos:line="147" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="147" pos:column="61"/></expr_stmt>
    <break pos:line="148" pos:column="5">break;<pos:position pos:line="148" pos:column="11"/></break>
  <case pos:line="149" pos:column="3">case <expr><name pos:line="149" pos:column="8">CURLOPT_FTPLISTONLY<pos:position pos:line="149" pos:column="27"/></name></expr>:<pos:position pos:line="149" pos:column="28"/></case>
    <comment type="block" pos:line="150" pos:column="5">/*
     * An FTP option that changes the command to one that asks for a list
     * only, no file info details.
     */</comment>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">data<pos:position pos:line="154" pos:column="9"/></name><operator pos:line="154" pos:column="9">-&gt;<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="11">set<pos:position pos:line="154" pos:column="14"/></name><operator pos:line="154" pos:column="14">.<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="15">ftp_list_only<pos:position pos:line="154" pos:column="28"/></name></name> <operator pos:line="154" pos:column="29">=<pos:position pos:line="154" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="154" pos:column="31">va_arg<pos:position pos:line="154" pos:column="37"/></name><argument_list pos:line="154" pos:column="37">(<argument><expr><name pos:line="154" pos:column="38">param<pos:position pos:line="154" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="45">long<pos:position pos:line="154" pos:column="49"/></name></expr></argument>)<pos:position pos:line="154" pos:column="50"/></argument_list></call></expr>?<pos:position pos:line="154" pos:column="51"/></condition><then><expr><name pos:line="154" pos:column="51">TRUE<pos:position pos:line="154" pos:column="55"/></name></expr></then><else pos:line="154" pos:column="55">:<expr><name pos:line="154" pos:column="56">FALSE<pos:position pos:line="154" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="154" pos:column="62"/></expr_stmt>
    <break pos:line="155" pos:column="5">break;<pos:position pos:line="155" pos:column="11"/></break>
  <case pos:line="156" pos:column="3">case <expr><name pos:line="156" pos:column="8">CURLOPT_FTPAPPEND<pos:position pos:line="156" pos:column="25"/></name></expr>:<pos:position pos:line="156" pos:column="26"/></case>
    <comment type="block" pos:line="157" pos:column="5">/*
     * We want to upload and append to an existing (FTP) file.
     */</comment>
    <expr_stmt><expr><name><name pos:line="160" pos:column="5">data<pos:position pos:line="160" pos:column="9"/></name><operator pos:line="160" pos:column="9">-&gt;<pos:position pos:line="160" pos:column="14"/></operator><name pos:line="160" pos:column="11">set<pos:position pos:line="160" pos:column="14"/></name><operator pos:line="160" pos:column="14">.<pos:position pos:line="160" pos:column="15"/></operator><name pos:line="160" pos:column="15">ftp_append<pos:position pos:line="160" pos:column="25"/></name></name> <operator pos:line="160" pos:column="26">=<pos:position pos:line="160" pos:column="27"/></operator> <ternary><condition><expr><call><name pos:line="160" pos:column="28">va_arg<pos:position pos:line="160" pos:column="34"/></name><argument_list pos:line="160" pos:column="34">(<argument><expr><name pos:line="160" pos:column="35">param<pos:position pos:line="160" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="42">long<pos:position pos:line="160" pos:column="46"/></name></expr></argument>)<pos:position pos:line="160" pos:column="47"/></argument_list></call></expr>?<pos:position pos:line="160" pos:column="48"/></condition><then><expr><name pos:line="160" pos:column="48">TRUE<pos:position pos:line="160" pos:column="52"/></name></expr></then><else pos:line="160" pos:column="52">:<expr><name pos:line="160" pos:column="53">FALSE<pos:position pos:line="160" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="160" pos:column="59"/></expr_stmt>
    <break pos:line="161" pos:column="5">break;<pos:position pos:line="161" pos:column="11"/></break>
  <case pos:line="162" pos:column="3">case <expr><name pos:line="162" pos:column="8">CURLOPT_NETRC<pos:position pos:line="162" pos:column="21"/></name></expr>:<pos:position pos:line="162" pos:column="22"/></case>
    <comment type="block" pos:line="163" pos:column="5">/*
     * Parse the $HOME/.netrc file
     */</comment>
    <expr_stmt><expr><name><name pos:line="166" pos:column="5">data<pos:position pos:line="166" pos:column="9"/></name><operator pos:line="166" pos:column="9">-&gt;<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="11">set<pos:position pos:line="166" pos:column="14"/></name><operator pos:line="166" pos:column="14">.<pos:position pos:line="166" pos:column="15"/></operator><name pos:line="166" pos:column="15">use_netrc<pos:position pos:line="166" pos:column="24"/></name></name> <operator pos:line="166" pos:column="25">=<pos:position pos:line="166" pos:column="26"/></operator> <call><name pos:line="166" pos:column="27">va_arg<pos:position pos:line="166" pos:column="33"/></name><argument_list pos:line="166" pos:column="33">(<argument><expr><name pos:line="166" pos:column="34">param<pos:position pos:line="166" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="41">long<pos:position pos:line="166" pos:column="45"/></name></expr></argument>)<pos:position pos:line="166" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="47"/></expr_stmt>
    <break pos:line="167" pos:column="5">break;<pos:position pos:line="167" pos:column="11"/></break>
  <case pos:line="168" pos:column="3">case <expr><name pos:line="168" pos:column="8">CURLOPT_FOLLOWLOCATION<pos:position pos:line="168" pos:column="30"/></name></expr>:<pos:position pos:line="168" pos:column="31"/></case>
    <comment type="block" pos:line="169" pos:column="5">/*
     * Follow Location: header hints on a HTTP-server.
     */</comment>
    <expr_stmt><expr><name><name pos:line="172" pos:column="5">data<pos:position pos:line="172" pos:column="9"/></name><operator pos:line="172" pos:column="9">-&gt;<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="11">set<pos:position pos:line="172" pos:column="14"/></name><operator pos:line="172" pos:column="14">.<pos:position pos:line="172" pos:column="15"/></operator><name pos:line="172" pos:column="15">http_follow_location<pos:position pos:line="172" pos:column="35"/></name></name> <operator pos:line="172" pos:column="36">=<pos:position pos:line="172" pos:column="37"/></operator> <ternary><condition><expr><call><name pos:line="172" pos:column="38">va_arg<pos:position pos:line="172" pos:column="44"/></name><argument_list pos:line="172" pos:column="44">(<argument><expr><name pos:line="172" pos:column="45">param<pos:position pos:line="172" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="52">long<pos:position pos:line="172" pos:column="56"/></name></expr></argument>)<pos:position pos:line="172" pos:column="57"/></argument_list></call></expr>?<pos:position pos:line="172" pos:column="58"/></condition><then><expr><name pos:line="172" pos:column="58">TRUE<pos:position pos:line="172" pos:column="62"/></name></expr></then><else pos:line="172" pos:column="62">:<expr><name pos:line="172" pos:column="63">FALSE<pos:position pos:line="172" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="172" pos:column="69"/></expr_stmt>
    <break pos:line="173" pos:column="5">break;<pos:position pos:line="173" pos:column="11"/></break>
  <case pos:line="174" pos:column="3">case <expr><name pos:line="174" pos:column="8">CURLOPT_UNRESTRICTED_AUTH<pos:position pos:line="174" pos:column="33"/></name></expr>:<pos:position pos:line="174" pos:column="34"/></case>
    <comment type="block" pos:line="175" pos:column="5">/*
     * Send authentication (user+password) when following locations, even when
     * hostname changed.
     */</comment>
    <expr_stmt><expr><name><name pos:line="179" pos:column="5">data<pos:position pos:line="179" pos:column="9"/></name><operator pos:line="179" pos:column="9">-&gt;<pos:position pos:line="179" pos:column="14"/></operator><name pos:line="179" pos:column="11">set<pos:position pos:line="179" pos:column="14"/></name><operator pos:line="179" pos:column="14">.<pos:position pos:line="179" pos:column="15"/></operator><name pos:line="179" pos:column="15">http_disable_hostname_check_before_authentication<pos:position pos:line="179" pos:column="64"/></name></name> <operator pos:line="179" pos:column="65">=<pos:position pos:line="179" pos:column="66"/></operator>
      <ternary><condition><expr><call><name pos:line="180" pos:column="7">va_arg<pos:position pos:line="180" pos:column="13"/></name><argument_list pos:line="180" pos:column="13">(<argument><expr><name pos:line="180" pos:column="14">param<pos:position pos:line="180" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="21">long<pos:position pos:line="180" pos:column="25"/></name></expr></argument>)<pos:position pos:line="180" pos:column="26"/></argument_list></call></expr>?<pos:position pos:line="180" pos:column="27"/></condition><then><expr><name pos:line="180" pos:column="27">TRUE<pos:position pos:line="180" pos:column="31"/></name></expr></then><else pos:line="180" pos:column="31">:<expr><name pos:line="180" pos:column="32">FALSE<pos:position pos:line="180" pos:column="37"/></name></expr></else></ternary></expr>;<pos:position pos:line="180" pos:column="38"/></expr_stmt>
    <break pos:line="181" pos:column="5">break;<pos:position pos:line="181" pos:column="11"/></break>
  <case pos:line="182" pos:column="3">case <expr><name pos:line="182" pos:column="8">CURLOPT_HTTP_VERSION<pos:position pos:line="182" pos:column="28"/></name></expr>:<pos:position pos:line="182" pos:column="29"/></case>
    <comment type="block" pos:line="183" pos:column="5">/*
     * This sets a requested HTTP version to be used. The value is one of
     * the listed enums in curl/curl.h.
     */</comment>
    <expr_stmt><expr><name><name pos:line="187" pos:column="5">data<pos:position pos:line="187" pos:column="9"/></name><operator pos:line="187" pos:column="9">-&gt;<pos:position pos:line="187" pos:column="14"/></operator><name pos:line="187" pos:column="11">set<pos:position pos:line="187" pos:column="14"/></name><operator pos:line="187" pos:column="14">.<pos:position pos:line="187" pos:column="15"/></operator><name pos:line="187" pos:column="15">httpversion<pos:position pos:line="187" pos:column="26"/></name></name> <operator pos:line="187" pos:column="27">=<pos:position pos:line="187" pos:column="28"/></operator> <call><name pos:line="187" pos:column="29">va_arg<pos:position pos:line="187" pos:column="35"/></name><argument_list pos:line="187" pos:column="35">(<argument><expr><name pos:line="187" pos:column="36">param<pos:position pos:line="187" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="43">long<pos:position pos:line="187" pos:column="47"/></name></expr></argument>)<pos:position pos:line="187" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="49"/></expr_stmt>
    <break pos:line="188" pos:column="5">break;<pos:position pos:line="188" pos:column="11"/></break>
  <case pos:line="189" pos:column="3">case <expr><name pos:line="189" pos:column="8">CURLOPT_TRANSFERTEXT<pos:position pos:line="189" pos:column="28"/></name></expr>:<pos:position pos:line="189" pos:column="29"/></case>
    <comment type="block" pos:line="190" pos:column="5">/*
     * This option was previously named 'FTPASCII'. Renamed to work with
     * more protocols than merely FTP.
     *
     * Transfer using ASCII (instead of BINARY).
     */</comment>
    <expr_stmt><expr><name><name pos:line="196" pos:column="5">data<pos:position pos:line="196" pos:column="9"/></name><operator pos:line="196" pos:column="9">-&gt;<pos:position pos:line="196" pos:column="14"/></operator><name pos:line="196" pos:column="11">set<pos:position pos:line="196" pos:column="14"/></name><operator pos:line="196" pos:column="14">.<pos:position pos:line="196" pos:column="15"/></operator><name pos:line="196" pos:column="15">ftp_ascii<pos:position pos:line="196" pos:column="24"/></name></name> <operator pos:line="196" pos:column="25">=<pos:position pos:line="196" pos:column="26"/></operator> <ternary><condition><expr><call><name pos:line="196" pos:column="27">va_arg<pos:position pos:line="196" pos:column="33"/></name><argument_list pos:line="196" pos:column="33">(<argument><expr><name pos:line="196" pos:column="34">param<pos:position pos:line="196" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="41">long<pos:position pos:line="196" pos:column="45"/></name></expr></argument>)<pos:position pos:line="196" pos:column="46"/></argument_list></call></expr>?<pos:position pos:line="196" pos:column="47"/></condition><then><expr><name pos:line="196" pos:column="47">TRUE<pos:position pos:line="196" pos:column="51"/></name></expr></then><else pos:line="196" pos:column="51">:<expr><name pos:line="196" pos:column="52">FALSE<pos:position pos:line="196" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="196" pos:column="58"/></expr_stmt>
    <break pos:line="197" pos:column="5">break;<pos:position pos:line="197" pos:column="11"/></break>
  <case pos:line="198" pos:column="3">case <expr><name pos:line="198" pos:column="8">CURLOPT_PUT<pos:position pos:line="198" pos:column="19"/></name></expr>:<pos:position pos:line="198" pos:column="20"/></case>
    <comment type="block" pos:line="199" pos:column="5">/*
     * Use the HTTP PUT request to transfer data if this is TRUE.  If this is
     * FALSE, don't set the httpreq. We can't know what to revert it to!
     */</comment>
    <if pos:line="203" pos:column="5">if<condition pos:line="203" pos:column="7">(<expr><call><name pos:line="203" pos:column="8">va_arg<pos:position pos:line="203" pos:column="14"/></name><argument_list pos:line="203" pos:column="14">(<argument><expr><name pos:line="203" pos:column="15">param<pos:position pos:line="203" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="22">long<pos:position pos:line="203" pos:column="26"/></name></expr></argument>)<pos:position pos:line="203" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="28"/></condition><then pos:line="203" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="204" pos:column="7">data<pos:position pos:line="204" pos:column="11"/></name><operator pos:line="204" pos:column="11">-&gt;<pos:position pos:line="204" pos:column="16"/></operator><name pos:line="204" pos:column="13">set<pos:position pos:line="204" pos:column="16"/></name><operator pos:line="204" pos:column="16">.<pos:position pos:line="204" pos:column="17"/></operator><name pos:line="204" pos:column="17">httpreq<pos:position pos:line="204" pos:column="24"/></name></name> <operator pos:line="204" pos:column="25">=<pos:position pos:line="204" pos:column="26"/></operator> <name pos:line="204" pos:column="27">HTTPREQ_PUT<pos:position pos:line="204" pos:column="38"/></name></expr>;<pos:position pos:line="204" pos:column="39"/></expr_stmt></block></then></if>
    <break pos:line="205" pos:column="5">break;<pos:position pos:line="205" pos:column="11"/></break>
  <case pos:line="206" pos:column="3">case <expr><name pos:line="206" pos:column="8">CURLOPT_TIMECONDITION<pos:position pos:line="206" pos:column="29"/></name></expr>:<pos:position pos:line="206" pos:column="30"/></case>
    <comment type="block" pos:line="207" pos:column="5">/*
     * Set HTTP time condition. This must be one of the defines in the
     * curl/curl.h header file.
     */</comment>
    <expr_stmt><expr><name><name pos:line="211" pos:column="5">data<pos:position pos:line="211" pos:column="9"/></name><operator pos:line="211" pos:column="9">-&gt;<pos:position pos:line="211" pos:column="14"/></operator><name pos:line="211" pos:column="11">set<pos:position pos:line="211" pos:column="14"/></name><operator pos:line="211" pos:column="14">.<pos:position pos:line="211" pos:column="15"/></operator><name pos:line="211" pos:column="15">timecondition<pos:position pos:line="211" pos:column="28"/></name></name> <operator pos:line="211" pos:column="29">=<pos:position pos:line="211" pos:column="30"/></operator> <call><name pos:line="211" pos:column="31">va_arg<pos:position pos:line="211" pos:column="37"/></name><argument_list pos:line="211" pos:column="37">(<argument><expr><name pos:line="211" pos:column="38">param<pos:position pos:line="211" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="45">long<pos:position pos:line="211" pos:column="49"/></name></expr></argument>)<pos:position pos:line="211" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="51"/></expr_stmt>
    <break pos:line="212" pos:column="5">break;<pos:position pos:line="212" pos:column="11"/></break>
  <case pos:line="213" pos:column="3">case <expr><name pos:line="213" pos:column="8">CURLOPT_TIMEVALUE<pos:position pos:line="213" pos:column="25"/></name></expr>:<pos:position pos:line="213" pos:column="26"/></case>
    <comment type="block" pos:line="214" pos:column="5">/*
     * This is the value to compare with the remote document with the
     * method set with CURLOPT_TIMECONDITION
     */</comment>
    <expr_stmt><expr><name><name pos:line="218" pos:column="5">data<pos:position pos:line="218" pos:column="9"/></name><operator pos:line="218" pos:column="9">-&gt;<pos:position pos:line="218" pos:column="14"/></operator><name pos:line="218" pos:column="11">set<pos:position pos:line="218" pos:column="14"/></name><operator pos:line="218" pos:column="14">.<pos:position pos:line="218" pos:column="15"/></operator><name pos:line="218" pos:column="15">timevalue<pos:position pos:line="218" pos:column="24"/></name></name> <operator pos:line="218" pos:column="25">=<pos:position pos:line="218" pos:column="26"/></operator> <call><name pos:line="218" pos:column="27">va_arg<pos:position pos:line="218" pos:column="33"/></name><argument_list pos:line="218" pos:column="33">(<argument><expr><name pos:line="218" pos:column="34">param<pos:position pos:line="218" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="41">long<pos:position pos:line="218" pos:column="45"/></name></expr></argument>)<pos:position pos:line="218" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="47"/></expr_stmt>
    <break pos:line="219" pos:column="5">break;<pos:position pos:line="219" pos:column="11"/></break>
  <case pos:line="220" pos:column="3">case <expr><name pos:line="220" pos:column="8">CURLOPT_SSLVERSION<pos:position pos:line="220" pos:column="26"/></name></expr>:<pos:position pos:line="220" pos:column="27"/></case>
    <comment type="block" pos:line="221" pos:column="5">/*
     * Set explicit SSL version to try to connect with, as some SSL
     * implementations are lame.
     */</comment>
    <expr_stmt><expr><name><name pos:line="225" pos:column="5">data<pos:position pos:line="225" pos:column="9"/></name><operator pos:line="225" pos:column="9">-&gt;<pos:position pos:line="225" pos:column="14"/></operator><name pos:line="225" pos:column="11">set<pos:position pos:line="225" pos:column="14"/></name><operator pos:line="225" pos:column="14">.<pos:position pos:line="225" pos:column="15"/></operator><name pos:line="225" pos:column="15">ssl<pos:position pos:line="225" pos:column="18"/></name><operator pos:line="225" pos:column="18">.<pos:position pos:line="225" pos:column="19"/></operator><name pos:line="225" pos:column="19">version<pos:position pos:line="225" pos:column="26"/></name></name> <operator pos:line="225" pos:column="27">=<pos:position pos:line="225" pos:column="28"/></operator> <call><name pos:line="225" pos:column="29">va_arg<pos:position pos:line="225" pos:column="35"/></name><argument_list pos:line="225" pos:column="35">(<argument><expr><name pos:line="225" pos:column="36">param<pos:position pos:line="225" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="43">long<pos:position pos:line="225" pos:column="47"/></name></expr></argument>)<pos:position pos:line="225" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="49"/></expr_stmt>
    <break pos:line="226" pos:column="5">break;<pos:position pos:line="226" pos:column="11"/></break>

  <case pos:line="228" pos:column="3">case <expr><name pos:line="228" pos:column="8">CURLOPT_COOKIESESSION<pos:position pos:line="228" pos:column="29"/></name></expr>:<pos:position pos:line="228" pos:column="30"/></case>
    <comment type="block" pos:line="229" pos:column="5">/*
     * Set this option to TRUE to start a new "cookie session". It will
     * prevent the forthcoming read-cookies-from-file actions to accept
     * cookies that are marked as being session cookies, as they belong to a
     * previous session.
     *
     * In the original Netscape cookie spec, "session cookies" are cookies
     * with no expire date set. RFC2109 describes the same action if no
     * 'Max-Age' is set and RFC2965 includes the RFC2109 description and adds
     * a 'Discard' action that can enforce the discard even for cookies that
     * have a Max-Age.
     *
     * We run mostly with the original cookie spec, as hardly anyone implements
     * anything else.
     */</comment>
    <expr_stmt><expr><name><name pos:line="244" pos:column="5">data<pos:position pos:line="244" pos:column="9"/></name><operator pos:line="244" pos:column="9">-&gt;<pos:position pos:line="244" pos:column="14"/></operator><name pos:line="244" pos:column="11">set<pos:position pos:line="244" pos:column="14"/></name><operator pos:line="244" pos:column="14">.<pos:position pos:line="244" pos:column="15"/></operator><name pos:line="244" pos:column="15">cookiesession<pos:position pos:line="244" pos:column="28"/></name></name> <operator pos:line="244" pos:column="29">=<pos:position pos:line="244" pos:column="30"/></operator> <operator pos:line="244" pos:column="31">(<pos:position pos:line="244" pos:column="32"/></operator><name pos:line="244" pos:column="32">bool<pos:position pos:line="244" pos:column="36"/></name><operator pos:line="244" pos:column="36">)<pos:position pos:line="244" pos:column="37"/></operator><call><name pos:line="244" pos:column="37">va_arg<pos:position pos:line="244" pos:column="43"/></name><argument_list pos:line="244" pos:column="43">(<argument><expr><name pos:line="244" pos:column="44">param<pos:position pos:line="244" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="51">long<pos:position pos:line="244" pos:column="55"/></name></expr></argument>)<pos:position pos:line="244" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="57"/></expr_stmt>
    <break pos:line="245" pos:column="5">break;<pos:position pos:line="245" pos:column="11"/></break>

<cpp:ifndef pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">ifndef<pos:position pos:line="247" pos:column="8"/></cpp:directive> <name pos:line="247" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="247" pos:column="26"/></name></cpp:ifndef>
  <case pos:line="248" pos:column="3">case <expr><name pos:line="248" pos:column="8">CURLOPT_COOKIEFILE<pos:position pos:line="248" pos:column="26"/></name></expr>:<pos:position pos:line="248" pos:column="27"/></case>
    <comment type="block" pos:line="249" pos:column="5">/*
     * Set cookie file to read and parse. Can be used multiple times.
     */</comment>
    <expr_stmt><expr><name pos:line="252" pos:column="5">cookiefile<pos:position pos:line="252" pos:column="15"/></name> <operator pos:line="252" pos:column="16">=<pos:position pos:line="252" pos:column="17"/></operator> <operator pos:line="252" pos:column="18">(<pos:position pos:line="252" pos:column="19"/></operator><name pos:line="252" pos:column="19">char<pos:position pos:line="252" pos:column="23"/></name> <operator pos:line="252" pos:column="24">*<pos:position pos:line="252" pos:column="25"/></operator><operator pos:line="252" pos:column="25">)<pos:position pos:line="252" pos:column="26"/></operator><call><name pos:line="252" pos:column="26">va_arg<pos:position pos:line="252" pos:column="32"/></name><argument_list pos:line="252" pos:column="32">(<argument><expr><name pos:line="252" pos:column="33">param<pos:position pos:line="252" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="40">void<pos:position pos:line="252" pos:column="44"/></name> <operator pos:line="252" pos:column="45">*<pos:position pos:line="252" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="252" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="48"/></expr_stmt>
    <if pos:line="253" pos:column="5">if<condition pos:line="253" pos:column="7">(<expr><name pos:line="253" pos:column="8">cookiefile<pos:position pos:line="253" pos:column="18"/></name></expr>)<pos:position pos:line="253" pos:column="19"/></condition><then pos:line="253" pos:column="19">
      <comment type="block" pos:line="254" pos:column="7">/* append the cookie file name to the list of file names, and deal with
         them later */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="256" pos:column="7">data<pos:position pos:line="256" pos:column="11"/></name><operator pos:line="256" pos:column="11">-&gt;<pos:position pos:line="256" pos:column="16"/></operator><name pos:line="256" pos:column="13">change<pos:position pos:line="256" pos:column="19"/></name><operator pos:line="256" pos:column="19">.<pos:position pos:line="256" pos:column="20"/></operator><name pos:line="256" pos:column="20">cookielist<pos:position pos:line="256" pos:column="30"/></name></name> <operator pos:line="256" pos:column="31">=<pos:position pos:line="256" pos:column="32"/></operator>
        <call><name pos:line="257" pos:column="9">curl_slist_append<pos:position pos:line="257" pos:column="26"/></name><argument_list pos:line="257" pos:column="26">(<argument><expr><name><name pos:line="257" pos:column="27">data<pos:position pos:line="257" pos:column="31"/></name><operator pos:line="257" pos:column="31">-&gt;<pos:position pos:line="257" pos:column="36"/></operator><name pos:line="257" pos:column="33">change<pos:position pos:line="257" pos:column="39"/></name><operator pos:line="257" pos:column="39">.<pos:position pos:line="257" pos:column="40"/></operator><name pos:line="257" pos:column="40">cookielist<pos:position pos:line="257" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="52">cookiefile<pos:position pos:line="257" pos:column="62"/></name></expr></argument>)<pos:position pos:line="257" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="64"/></expr_stmt></block></then></if>
    <break pos:line="258" pos:column="5">break;<pos:position pos:line="258" pos:column="11"/></break>

  <case pos:line="260" pos:column="3">case <expr><name pos:line="260" pos:column="8">CURLOPT_COOKIEJAR<pos:position pos:line="260" pos:column="25"/></name></expr>:<pos:position pos:line="260" pos:column="26"/></case>
    <comment type="block" pos:line="261" pos:column="5">/*
     * Set cookie file name to dump all cookies to when we're done.
     */</comment>
    <expr_stmt><expr><name><name pos:line="264" pos:column="5">data<pos:position pos:line="264" pos:column="9"/></name><operator pos:line="264" pos:column="9">-&gt;<pos:position pos:line="264" pos:column="14"/></operator><name pos:line="264" pos:column="11">set<pos:position pos:line="264" pos:column="14"/></name><operator pos:line="264" pos:column="14">.<pos:position pos:line="264" pos:column="15"/></operator><name pos:line="264" pos:column="15">cookiejar<pos:position pos:line="264" pos:column="24"/></name></name> <operator pos:line="264" pos:column="25">=<pos:position pos:line="264" pos:column="26"/></operator> <operator pos:line="264" pos:column="27">(<pos:position pos:line="264" pos:column="28"/></operator><name pos:line="264" pos:column="28">char<pos:position pos:line="264" pos:column="32"/></name> <operator pos:line="264" pos:column="33">*<pos:position pos:line="264" pos:column="34"/></operator><operator pos:line="264" pos:column="34">)<pos:position pos:line="264" pos:column="35"/></operator><call><name pos:line="264" pos:column="35">va_arg<pos:position pos:line="264" pos:column="41"/></name><argument_list pos:line="264" pos:column="41">(<argument><expr><name pos:line="264" pos:column="42">param<pos:position pos:line="264" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="49">void<pos:position pos:line="264" pos:column="53"/></name> <operator pos:line="264" pos:column="54">*<pos:position pos:line="264" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="264" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="266" pos:column="5">/*
     * Activate the cookie parser. This may or may not already
     * have been made.
     */</comment>
    <expr_stmt><expr><name><name pos:line="270" pos:column="5">data<pos:position pos:line="270" pos:column="9"/></name><operator pos:line="270" pos:column="9">-&gt;<pos:position pos:line="270" pos:column="14"/></operator><name pos:line="270" pos:column="11">cookies<pos:position pos:line="270" pos:column="18"/></name></name> <operator pos:line="270" pos:column="19">=<pos:position pos:line="270" pos:column="20"/></operator> <call><name pos:line="270" pos:column="21">Curl_cookie_init<pos:position pos:line="270" pos:column="37"/></name><argument_list pos:line="270" pos:column="37">(<argument><expr><name pos:line="270" pos:column="38">NULL<pos:position pos:line="270" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="270" pos:column="44">data<pos:position pos:line="270" pos:column="48"/></name><operator pos:line="270" pos:column="48">-&gt;<pos:position pos:line="270" pos:column="53"/></operator><name pos:line="270" pos:column="50">cookies<pos:position pos:line="270" pos:column="57"/></name></name></expr></argument>,
                                     <argument><expr><name><name pos:line="271" pos:column="38">data<pos:position pos:line="271" pos:column="42"/></name><operator pos:line="271" pos:column="42">-&gt;<pos:position pos:line="271" pos:column="47"/></operator><name pos:line="271" pos:column="44">set<pos:position pos:line="271" pos:column="47"/></name><operator pos:line="271" pos:column="47">.<pos:position pos:line="271" pos:column="48"/></operator><name pos:line="271" pos:column="48">cookiesession<pos:position pos:line="271" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="63"/></expr_stmt>
    <break pos:line="272" pos:column="5">break;<pos:position pos:line="272" pos:column="11"/></break>
<cpp:endif pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">endif<pos:position pos:line="273" pos:column="7"/></cpp:directive></cpp:endif>

  <case pos:line="275" pos:column="3">case <expr><name pos:line="275" pos:column="8">CURLOPT_WRITEHEADER<pos:position pos:line="275" pos:column="27"/></name></expr>:<pos:position pos:line="275" pos:column="28"/></case>
    <comment type="block" pos:line="276" pos:column="5">/*
     * Custom pointer to pass the header write callback function
     */</comment>
    <expr_stmt><expr><name><name pos:line="279" pos:column="5">data<pos:position pos:line="279" pos:column="9"/></name><operator pos:line="279" pos:column="9">-&gt;<pos:position pos:line="279" pos:column="14"/></operator><name pos:line="279" pos:column="11">set<pos:position pos:line="279" pos:column="14"/></name><operator pos:line="279" pos:column="14">.<pos:position pos:line="279" pos:column="15"/></operator><name pos:line="279" pos:column="15">writeheader<pos:position pos:line="279" pos:column="26"/></name></name> <operator pos:line="279" pos:column="27">=<pos:position pos:line="279" pos:column="28"/></operator> <operator pos:line="279" pos:column="29">(<pos:position pos:line="279" pos:column="30"/></operator><name pos:line="279" pos:column="30">void<pos:position pos:line="279" pos:column="34"/></name> <operator pos:line="279" pos:column="35">*<pos:position pos:line="279" pos:column="36"/></operator><operator pos:line="279" pos:column="36">)<pos:position pos:line="279" pos:column="37"/></operator><call><name pos:line="279" pos:column="37">va_arg<pos:position pos:line="279" pos:column="43"/></name><argument_list pos:line="279" pos:column="43">(<argument><expr><name pos:line="279" pos:column="44">param<pos:position pos:line="279" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="51">void<pos:position pos:line="279" pos:column="55"/></name> <operator pos:line="279" pos:column="56">*<pos:position pos:line="279" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="279" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="59"/></expr_stmt>
    <break pos:line="280" pos:column="5">break;<pos:position pos:line="280" pos:column="11"/></break>
  <case pos:line="281" pos:column="3">case <expr><name pos:line="281" pos:column="8">CURLOPT_COOKIE<pos:position pos:line="281" pos:column="22"/></name></expr>:<pos:position pos:line="281" pos:column="23"/></case>
    <comment type="block" pos:line="282" pos:column="5">/*
     * Cookie string to send to the remote server in the request.
     */</comment>
    <expr_stmt><expr><name><name pos:line="285" pos:column="5">data<pos:position pos:line="285" pos:column="9"/></name><operator pos:line="285" pos:column="9">-&gt;<pos:position pos:line="285" pos:column="14"/></operator><name pos:line="285" pos:column="11">set<pos:position pos:line="285" pos:column="14"/></name><operator pos:line="285" pos:column="14">.<pos:position pos:line="285" pos:column="15"/></operator><name pos:line="285" pos:column="15">cookie<pos:position pos:line="285" pos:column="21"/></name></name> <operator pos:line="285" pos:column="22">=<pos:position pos:line="285" pos:column="23"/></operator> <call><name pos:line="285" pos:column="24">va_arg<pos:position pos:line="285" pos:column="30"/></name><argument_list pos:line="285" pos:column="30">(<argument><expr><name pos:line="285" pos:column="31">param<pos:position pos:line="285" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="38">char<pos:position pos:line="285" pos:column="42"/></name> <operator pos:line="285" pos:column="43">*<pos:position pos:line="285" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="285" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="46"/></expr_stmt>
    <break pos:line="286" pos:column="5">break;<pos:position pos:line="286" pos:column="11"/></break>
  <case pos:line="287" pos:column="3">case <expr><name pos:line="287" pos:column="8">CURLOPT_ERRORBUFFER<pos:position pos:line="287" pos:column="27"/></name></expr>:<pos:position pos:line="287" pos:column="28"/></case>
    <comment type="block" pos:line="288" pos:column="5">/*
     * Error buffer provided by the caller to get the human readable
     * error string in.
     */</comment>
    <expr_stmt><expr><name><name pos:line="292" pos:column="5">data<pos:position pos:line="292" pos:column="9"/></name><operator pos:line="292" pos:column="9">-&gt;<pos:position pos:line="292" pos:column="14"/></operator><name pos:line="292" pos:column="11">set<pos:position pos:line="292" pos:column="14"/></name><operator pos:line="292" pos:column="14">.<pos:position pos:line="292" pos:column="15"/></operator><name pos:line="292" pos:column="15">errorbuffer<pos:position pos:line="292" pos:column="26"/></name></name> <operator pos:line="292" pos:column="27">=<pos:position pos:line="292" pos:column="28"/></operator> <call><name pos:line="292" pos:column="29">va_arg<pos:position pos:line="292" pos:column="35"/></name><argument_list pos:line="292" pos:column="35">(<argument><expr><name pos:line="292" pos:column="36">param<pos:position pos:line="292" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="43">char<pos:position pos:line="292" pos:column="47"/></name> <operator pos:line="292" pos:column="48">*<pos:position pos:line="292" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="292" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="51"/></expr_stmt>
    <break pos:line="293" pos:column="5">break;<pos:position pos:line="293" pos:column="11"/></break>
  <case pos:line="294" pos:column="3">case <expr><name pos:line="294" pos:column="8">CURLOPT_FILE<pos:position pos:line="294" pos:column="20"/></name></expr>:<pos:position pos:line="294" pos:column="21"/></case>
    <comment type="block" pos:line="295" pos:column="5">/*
     * FILE pointer to write to or include in the data write callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="298" pos:column="5">data<pos:position pos:line="298" pos:column="9"/></name><operator pos:line="298" pos:column="9">-&gt;<pos:position pos:line="298" pos:column="14"/></operator><name pos:line="298" pos:column="11">set<pos:position pos:line="298" pos:column="14"/></name><operator pos:line="298" pos:column="14">.<pos:position pos:line="298" pos:column="15"/></operator><name pos:line="298" pos:column="15">out<pos:position pos:line="298" pos:column="18"/></name></name> <operator pos:line="298" pos:column="19">=<pos:position pos:line="298" pos:column="20"/></operator> <call><name pos:line="298" pos:column="21">va_arg<pos:position pos:line="298" pos:column="27"/></name><argument_list pos:line="298" pos:column="27">(<argument><expr><name pos:line="298" pos:column="28">param<pos:position pos:line="298" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="35">FILE<pos:position pos:line="298" pos:column="39"/></name> <operator pos:line="298" pos:column="40">*<pos:position pos:line="298" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="298" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="43"/></expr_stmt>
    <break pos:line="299" pos:column="5">break;<pos:position pos:line="299" pos:column="11"/></break>
  <case pos:line="300" pos:column="3">case <expr><name pos:line="300" pos:column="8">CURLOPT_FTPPORT<pos:position pos:line="300" pos:column="23"/></name></expr>:<pos:position pos:line="300" pos:column="24"/></case>
    <comment type="block" pos:line="301" pos:column="5">/*
     * Use FTP PORT, this also specifies which IP address to use
     */</comment>
    <expr_stmt><expr><name><name pos:line="304" pos:column="5">data<pos:position pos:line="304" pos:column="9"/></name><operator pos:line="304" pos:column="9">-&gt;<pos:position pos:line="304" pos:column="14"/></operator><name pos:line="304" pos:column="11">set<pos:position pos:line="304" pos:column="14"/></name><operator pos:line="304" pos:column="14">.<pos:position pos:line="304" pos:column="15"/></operator><name pos:line="304" pos:column="15">ftpport<pos:position pos:line="304" pos:column="22"/></name></name> <operator pos:line="304" pos:column="23">=<pos:position pos:line="304" pos:column="24"/></operator> <call><name pos:line="304" pos:column="25">va_arg<pos:position pos:line="304" pos:column="31"/></name><argument_list pos:line="304" pos:column="31">(<argument><expr><name pos:line="304" pos:column="32">param<pos:position pos:line="304" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="39">char<pos:position pos:line="304" pos:column="43"/></name> <operator pos:line="304" pos:column="44">*<pos:position pos:line="304" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="304" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="305" pos:column="5">data<pos:position pos:line="305" pos:column="9"/></name><operator pos:line="305" pos:column="9">-&gt;<pos:position pos:line="305" pos:column="14"/></operator><name pos:line="305" pos:column="11">set<pos:position pos:line="305" pos:column="14"/></name><operator pos:line="305" pos:column="14">.<pos:position pos:line="305" pos:column="15"/></operator><name pos:line="305" pos:column="15">ftp_use_port<pos:position pos:line="305" pos:column="27"/></name></name> <operator pos:line="305" pos:column="28">=<pos:position pos:line="305" pos:column="29"/></operator> <ternary><condition><expr><name><name pos:line="305" pos:column="30">data<pos:position pos:line="305" pos:column="34"/></name><operator pos:line="305" pos:column="34">-&gt;<pos:position pos:line="305" pos:column="39"/></operator><name pos:line="305" pos:column="36">set<pos:position pos:line="305" pos:column="39"/></name><operator pos:line="305" pos:column="39">.<pos:position pos:line="305" pos:column="40"/></operator><name pos:line="305" pos:column="40">ftpport<pos:position pos:line="305" pos:column="47"/></name></name></expr>?<pos:position pos:line="305" pos:column="48"/></condition><then><expr><literal type="number" pos:line="305" pos:column="48">1<pos:position pos:line="305" pos:column="49"/></literal></expr></then><else pos:line="305" pos:column="49">:<expr><literal type="number" pos:line="305" pos:column="50">0<pos:position pos:line="305" pos:column="51"/></literal></expr></else></ternary></expr>;<pos:position pos:line="305" pos:column="52"/></expr_stmt>
    <break pos:line="306" pos:column="5">break;<pos:position pos:line="306" pos:column="11"/></break>

  <case pos:line="308" pos:column="3">case <expr><name pos:line="308" pos:column="8">CURLOPT_FTP_USE_EPSV<pos:position pos:line="308" pos:column="28"/></name></expr>:<pos:position pos:line="308" pos:column="29"/></case>
    <expr_stmt><expr><name><name pos:line="309" pos:column="5">data<pos:position pos:line="309" pos:column="9"/></name><operator pos:line="309" pos:column="9">-&gt;<pos:position pos:line="309" pos:column="14"/></operator><name pos:line="309" pos:column="11">set<pos:position pos:line="309" pos:column="14"/></name><operator pos:line="309" pos:column="14">.<pos:position pos:line="309" pos:column="15"/></operator><name pos:line="309" pos:column="15">ftp_use_epsv<pos:position pos:line="309" pos:column="27"/></name></name> <operator pos:line="309" pos:column="28">=<pos:position pos:line="309" pos:column="29"/></operator> <ternary><condition><expr><call><name pos:line="309" pos:column="30">va_arg<pos:position pos:line="309" pos:column="36"/></name><argument_list pos:line="309" pos:column="36">(<argument><expr><name pos:line="309" pos:column="37">param<pos:position pos:line="309" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="44">long<pos:position pos:line="309" pos:column="48"/></name></expr></argument>)<pos:position pos:line="309" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="309" pos:column="50"/></condition><then><expr><name pos:line="309" pos:column="50">TRUE<pos:position pos:line="309" pos:column="54"/></name></expr></then><else pos:line="309" pos:column="54">:<expr><name pos:line="309" pos:column="55">FALSE<pos:position pos:line="309" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="309" pos:column="61"/></expr_stmt>
    <break pos:line="310" pos:column="5">break;<pos:position pos:line="310" pos:column="11"/></break>

  <case pos:line="312" pos:column="3">case <expr><name pos:line="312" pos:column="8">CURLOPT_HTTPHEADER<pos:position pos:line="312" pos:column="26"/></name></expr>:<pos:position pos:line="312" pos:column="27"/></case>
    <comment type="block" pos:line="313" pos:column="5">/*
     * Set a list with HTTP headers to use (or replace internals with)
     */</comment>
    <expr_stmt><expr><name><name pos:line="316" pos:column="5">data<pos:position pos:line="316" pos:column="9"/></name><operator pos:line="316" pos:column="9">-&gt;<pos:position pos:line="316" pos:column="14"/></operator><name pos:line="316" pos:column="11">set<pos:position pos:line="316" pos:column="14"/></name><operator pos:line="316" pos:column="14">.<pos:position pos:line="316" pos:column="15"/></operator><name pos:line="316" pos:column="15">headers<pos:position pos:line="316" pos:column="22"/></name></name> <operator pos:line="316" pos:column="23">=<pos:position pos:line="316" pos:column="24"/></operator> <call><name pos:line="316" pos:column="25">va_arg<pos:position pos:line="316" pos:column="31"/></name><argument_list pos:line="316" pos:column="31">(<argument><expr><name pos:line="316" pos:column="32">param<pos:position pos:line="316" pos:column="37"/></name></expr></argument>, <argument><expr pos:line="316" pos:column="39">struct <name pos:line="316" pos:column="46">curl_slist<pos:position pos:line="316" pos:column="56"/></name> <operator pos:line="316" pos:column="57">*<pos:position pos:line="316" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="316" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="60"/></expr_stmt>
    <break pos:line="317" pos:column="5">break;<pos:position pos:line="317" pos:column="11"/></break>
  <case pos:line="318" pos:column="3">case <expr><name pos:line="318" pos:column="8">CURLOPT_CUSTOMREQUEST<pos:position pos:line="318" pos:column="29"/></name></expr>:<pos:position pos:line="318" pos:column="30"/></case>
    <comment type="block" pos:line="319" pos:column="5">/*
     * Set a custom string to use as request
     */</comment>
    <expr_stmt><expr><name><name pos:line="322" pos:column="5">data<pos:position pos:line="322" pos:column="9"/></name><operator pos:line="322" pos:column="9">-&gt;<pos:position pos:line="322" pos:column="14"/></operator><name pos:line="322" pos:column="11">set<pos:position pos:line="322" pos:column="14"/></name><operator pos:line="322" pos:column="14">.<pos:position pos:line="322" pos:column="15"/></operator><name pos:line="322" pos:column="15">customrequest<pos:position pos:line="322" pos:column="28"/></name></name> <operator pos:line="322" pos:column="29">=<pos:position pos:line="322" pos:column="30"/></operator> <call><name pos:line="322" pos:column="31">va_arg<pos:position pos:line="322" pos:column="37"/></name><argument_list pos:line="322" pos:column="37">(<argument><expr><name pos:line="322" pos:column="38">param<pos:position pos:line="322" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="45">char<pos:position pos:line="322" pos:column="49"/></name> <operator pos:line="322" pos:column="50">*<pos:position pos:line="322" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="322" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="324" pos:column="5">/* we don't set
       data-&gt;set.httpreq = HTTPREQ_CUSTOM;
       here, we continue as if we were using the already set type
       and this just changes the actual request keyword */</comment>
    <break pos:line="328" pos:column="5">break;<pos:position pos:line="328" pos:column="11"/></break>
  <case pos:line="329" pos:column="3">case <expr><name pos:line="329" pos:column="8">CURLOPT_HTTPPOST<pos:position pos:line="329" pos:column="24"/></name></expr>:<pos:position pos:line="329" pos:column="25"/></case>
    <comment type="block" pos:line="330" pos:column="5">/*
     * Set to make us do HTTP POST
     */</comment>
    <expr_stmt><expr><name><name pos:line="333" pos:column="5">data<pos:position pos:line="333" pos:column="9"/></name><operator pos:line="333" pos:column="9">-&gt;<pos:position pos:line="333" pos:column="14"/></operator><name pos:line="333" pos:column="11">set<pos:position pos:line="333" pos:column="14"/></name><operator pos:line="333" pos:column="14">.<pos:position pos:line="333" pos:column="15"/></operator><name pos:line="333" pos:column="15">httppost<pos:position pos:line="333" pos:column="23"/></name></name> <operator pos:line="333" pos:column="24">=<pos:position pos:line="333" pos:column="25"/></operator> <call><name pos:line="333" pos:column="26">va_arg<pos:position pos:line="333" pos:column="32"/></name><argument_list pos:line="333" pos:column="32">(<argument><expr><name pos:line="333" pos:column="33">param<pos:position pos:line="333" pos:column="38"/></name></expr></argument>, <argument><expr pos:line="333" pos:column="40">struct <name pos:line="333" pos:column="47">HttpPost<pos:position pos:line="333" pos:column="55"/></name> <operator pos:line="333" pos:column="56">*<pos:position pos:line="333" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="333" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="59"/></expr_stmt>
    <if pos:line="334" pos:column="5">if<condition pos:line="334" pos:column="7">(<expr><name><name pos:line="334" pos:column="8">data<pos:position pos:line="334" pos:column="12"/></name><operator pos:line="334" pos:column="12">-&gt;<pos:position pos:line="334" pos:column="17"/></operator><name pos:line="334" pos:column="14">set<pos:position pos:line="334" pos:column="17"/></name><operator pos:line="334" pos:column="17">.<pos:position pos:line="334" pos:column="18"/></operator><name pos:line="334" pos:column="18">httppost<pos:position pos:line="334" pos:column="26"/></name></name></expr>)<pos:position pos:line="334" pos:column="27"/></condition><then pos:line="334" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="335" pos:column="7">data<pos:position pos:line="335" pos:column="11"/></name><operator pos:line="335" pos:column="11">-&gt;<pos:position pos:line="335" pos:column="16"/></operator><name pos:line="335" pos:column="13">set<pos:position pos:line="335" pos:column="16"/></name><operator pos:line="335" pos:column="16">.<pos:position pos:line="335" pos:column="17"/></operator><name pos:line="335" pos:column="17">httpreq<pos:position pos:line="335" pos:column="24"/></name></name> <operator pos:line="335" pos:column="25">=<pos:position pos:line="335" pos:column="26"/></operator> <name pos:line="335" pos:column="27">HTTPREQ_POST_FORM<pos:position pos:line="335" pos:column="44"/></name></expr>;<pos:position pos:line="335" pos:column="45"/></expr_stmt></block></then></if>
    <break pos:line="336" pos:column="5">break;<pos:position pos:line="336" pos:column="11"/></break>

  <case pos:line="338" pos:column="3">case <expr><name pos:line="338" pos:column="8">CURLOPT_HTTPGET<pos:position pos:line="338" pos:column="23"/></name></expr>:<pos:position pos:line="338" pos:column="24"/></case>
    <comment type="block" pos:line="339" pos:column="5">/*
     * Set to force us do HTTP GET
     */</comment>
    <if pos:line="342" pos:column="5">if<condition pos:line="342" pos:column="7">(<expr><call><name pos:line="342" pos:column="8">va_arg<pos:position pos:line="342" pos:column="14"/></name><argument_list pos:line="342" pos:column="14">(<argument><expr><name pos:line="342" pos:column="15">param<pos:position pos:line="342" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="22">long<pos:position pos:line="342" pos:column="26"/></name></expr></argument>)<pos:position pos:line="342" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="342" pos:column="28"/></condition><then pos:line="342" pos:column="28"> <block pos:line="342" pos:column="29">{
      <expr_stmt><expr><name><name pos:line="343" pos:column="7">data<pos:position pos:line="343" pos:column="11"/></name><operator pos:line="343" pos:column="11">-&gt;<pos:position pos:line="343" pos:column="16"/></operator><name pos:line="343" pos:column="13">set<pos:position pos:line="343" pos:column="16"/></name><operator pos:line="343" pos:column="16">.<pos:position pos:line="343" pos:column="17"/></operator><name pos:line="343" pos:column="17">httpreq<pos:position pos:line="343" pos:column="24"/></name></name> <operator pos:line="343" pos:column="25">=<pos:position pos:line="343" pos:column="26"/></operator> <name pos:line="343" pos:column="27">HTTPREQ_GET<pos:position pos:line="343" pos:column="38"/></name></expr>;<pos:position pos:line="343" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="344" pos:column="7">data<pos:position pos:line="344" pos:column="11"/></name><operator pos:line="344" pos:column="11">-&gt;<pos:position pos:line="344" pos:column="16"/></operator><name pos:line="344" pos:column="13">set<pos:position pos:line="344" pos:column="16"/></name><operator pos:line="344" pos:column="16">.<pos:position pos:line="344" pos:column="17"/></operator><name pos:line="344" pos:column="17">upload<pos:position pos:line="344" pos:column="23"/></name></name> <operator pos:line="344" pos:column="24">=<pos:position pos:line="344" pos:column="25"/></operator> <name pos:line="344" pos:column="26">FALSE<pos:position pos:line="344" pos:column="31"/></name></expr>;<pos:position pos:line="344" pos:column="32"/></expr_stmt> <comment type="block" pos:line="344" pos:column="33">/* switch off upload */</comment>
    }<pos:position pos:line="345" pos:column="6"/></block></then></if>
    <break pos:line="346" pos:column="5">break;<pos:position pos:line="346" pos:column="11"/></break>

  <case pos:line="348" pos:column="3">case <expr><name pos:line="348" pos:column="8">CURLOPT_INFILE<pos:position pos:line="348" pos:column="22"/></name></expr>:<pos:position pos:line="348" pos:column="23"/></case>
    <comment type="block" pos:line="349" pos:column="5">/*
     * FILE pointer to read the file to be uploaded from. Or possibly
     * used as argument to the read callback.
     */</comment>
    <expr_stmt><expr><name><name pos:line="353" pos:column="5">data<pos:position pos:line="353" pos:column="9"/></name><operator pos:line="353" pos:column="9">-&gt;<pos:position pos:line="353" pos:column="14"/></operator><name pos:line="353" pos:column="11">set<pos:position pos:line="353" pos:column="14"/></name><operator pos:line="353" pos:column="14">.<pos:position pos:line="353" pos:column="15"/></operator><name pos:line="353" pos:column="15">in<pos:position pos:line="353" pos:column="17"/></name></name> <operator pos:line="353" pos:column="18">=<pos:position pos:line="353" pos:column="19"/></operator> <call><name pos:line="353" pos:column="20">va_arg<pos:position pos:line="353" pos:column="26"/></name><argument_list pos:line="353" pos:column="26">(<argument><expr><name pos:line="353" pos:column="27">param<pos:position pos:line="353" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="353" pos:column="34">FILE<pos:position pos:line="353" pos:column="38"/></name> <operator pos:line="353" pos:column="39">*<pos:position pos:line="353" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="353" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="42"/></expr_stmt>
    <break pos:line="354" pos:column="5">break;<pos:position pos:line="354" pos:column="11"/></break>
  <case pos:line="355" pos:column="3">case <expr><name pos:line="355" pos:column="8">CURLOPT_INFILESIZE<pos:position pos:line="355" pos:column="26"/></name></expr>:<pos:position pos:line="355" pos:column="27"/></case>
    <comment type="block" pos:line="356" pos:column="5">/*
     * If known, this should inform curl about the file size of the
     * to-be-uploaded file.
     */</comment>
    <expr_stmt><expr><name><name pos:line="360" pos:column="5">data<pos:position pos:line="360" pos:column="9"/></name><operator pos:line="360" pos:column="9">-&gt;<pos:position pos:line="360" pos:column="14"/></operator><name pos:line="360" pos:column="11">set<pos:position pos:line="360" pos:column="14"/></name><operator pos:line="360" pos:column="14">.<pos:position pos:line="360" pos:column="15"/></operator><name pos:line="360" pos:column="15">infilesize<pos:position pos:line="360" pos:column="25"/></name></name> <operator pos:line="360" pos:column="26">=<pos:position pos:line="360" pos:column="27"/></operator> <call><name pos:line="360" pos:column="28">va_arg<pos:position pos:line="360" pos:column="34"/></name><argument_list pos:line="360" pos:column="34">(<argument><expr><name pos:line="360" pos:column="35">param<pos:position pos:line="360" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="42">long<pos:position pos:line="360" pos:column="46"/></name></expr></argument>)<pos:position pos:line="360" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="48"/></expr_stmt>
    <break pos:line="361" pos:column="5">break;<pos:position pos:line="361" pos:column="11"/></break>
  <case pos:line="362" pos:column="3">case <expr><name pos:line="362" pos:column="8">CURLOPT_LOW_SPEED_LIMIT<pos:position pos:line="362" pos:column="31"/></name></expr>:<pos:position pos:line="362" pos:column="32"/></case>
    <comment type="block" pos:line="363" pos:column="5">/*
     * The low speed limit that if transfers are below this for
     * CURLOPT_LOW_SPEED_TIME, the transfer is aborted.
     */</comment>
    <expr_stmt><expr><name><name pos:line="367" pos:column="5">data<pos:position pos:line="367" pos:column="9"/></name><operator pos:line="367" pos:column="9">-&gt;<pos:position pos:line="367" pos:column="14"/></operator><name pos:line="367" pos:column="11">set<pos:position pos:line="367" pos:column="14"/></name><operator pos:line="367" pos:column="14">.<pos:position pos:line="367" pos:column="15"/></operator><name pos:line="367" pos:column="15">low_speed_limit<pos:position pos:line="367" pos:column="30"/></name></name><operator pos:line="367" pos:column="30">=<pos:position pos:line="367" pos:column="31"/></operator><call><name pos:line="367" pos:column="31">va_arg<pos:position pos:line="367" pos:column="37"/></name><argument_list pos:line="367" pos:column="37">(<argument><expr><name pos:line="367" pos:column="38">param<pos:position pos:line="367" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="45">long<pos:position pos:line="367" pos:column="49"/></name></expr></argument>)<pos:position pos:line="367" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="51"/></expr_stmt>
    <break pos:line="368" pos:column="5">break;<pos:position pos:line="368" pos:column="11"/></break>
  <case pos:line="369" pos:column="3">case <expr><name pos:line="369" pos:column="8">CURLOPT_LOW_SPEED_TIME<pos:position pos:line="369" pos:column="30"/></name></expr>:<pos:position pos:line="369" pos:column="31"/></case>
    <comment type="block" pos:line="370" pos:column="5">/*
     * The low speed time that if transfers are below the set
     * CURLOPT_LOW_SPEED_LIMIT during this time, the transfer is aborted.
     */</comment>
    <expr_stmt><expr><name><name pos:line="374" pos:column="5">data<pos:position pos:line="374" pos:column="9"/></name><operator pos:line="374" pos:column="9">-&gt;<pos:position pos:line="374" pos:column="14"/></operator><name pos:line="374" pos:column="11">set<pos:position pos:line="374" pos:column="14"/></name><operator pos:line="374" pos:column="14">.<pos:position pos:line="374" pos:column="15"/></operator><name pos:line="374" pos:column="15">low_speed_time<pos:position pos:line="374" pos:column="29"/></name></name><operator pos:line="374" pos:column="29">=<pos:position pos:line="374" pos:column="30"/></operator><call><name pos:line="374" pos:column="30">va_arg<pos:position pos:line="374" pos:column="36"/></name><argument_list pos:line="374" pos:column="36">(<argument><expr><name pos:line="374" pos:column="37">param<pos:position pos:line="374" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="44">long<pos:position pos:line="374" pos:column="48"/></name></expr></argument>)<pos:position pos:line="374" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="50"/></expr_stmt>
    <break pos:line="375" pos:column="5">break;<pos:position pos:line="375" pos:column="11"/></break>
  <case pos:line="376" pos:column="3">case <expr><name pos:line="376" pos:column="8">CURLOPT_URL<pos:position pos:line="376" pos:column="19"/></name></expr>:<pos:position pos:line="376" pos:column="20"/></case>
    <comment type="block" pos:line="377" pos:column="5">/*
     * The URL to fetch.
     */</comment>
    <if pos:line="380" pos:column="5">if<condition pos:line="380" pos:column="7">(<expr><name><name pos:line="380" pos:column="8">data<pos:position pos:line="380" pos:column="12"/></name><operator pos:line="380" pos:column="12">-&gt;<pos:position pos:line="380" pos:column="17"/></operator><name pos:line="380" pos:column="14">change<pos:position pos:line="380" pos:column="20"/></name><operator pos:line="380" pos:column="20">.<pos:position pos:line="380" pos:column="21"/></operator><name pos:line="380" pos:column="21">url_alloc<pos:position pos:line="380" pos:column="30"/></name></name></expr>)<pos:position pos:line="380" pos:column="31"/></condition><then pos:line="380" pos:column="31"> <block pos:line="380" pos:column="32">{
      <comment type="block" pos:line="381" pos:column="7">/* the already set URL is allocated, free it first! */</comment>
      <expr_stmt><expr><call><name pos:line="382" pos:column="7">free<pos:position pos:line="382" pos:column="11"/></name><argument_list pos:line="382" pos:column="11">(<argument><expr><name><name pos:line="382" pos:column="12">data<pos:position pos:line="382" pos:column="16"/></name><operator pos:line="382" pos:column="16">-&gt;<pos:position pos:line="382" pos:column="21"/></operator><name pos:line="382" pos:column="18">change<pos:position pos:line="382" pos:column="24"/></name><operator pos:line="382" pos:column="24">.<pos:position pos:line="382" pos:column="25"/></operator><name pos:line="382" pos:column="25">url<pos:position pos:line="382" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="382" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="383" pos:column="7">data<pos:position pos:line="383" pos:column="11"/></name><operator pos:line="383" pos:column="11">-&gt;<pos:position pos:line="383" pos:column="16"/></operator><name pos:line="383" pos:column="13">change<pos:position pos:line="383" pos:column="19"/></name><operator pos:line="383" pos:column="19">.<pos:position pos:line="383" pos:column="20"/></operator><name pos:line="383" pos:column="20">url_alloc<pos:position pos:line="383" pos:column="29"/></name></name><operator pos:line="383" pos:column="29">=<pos:position pos:line="383" pos:column="30"/></operator><name pos:line="383" pos:column="30">FALSE<pos:position pos:line="383" pos:column="35"/></name></expr>;<pos:position pos:line="383" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="384" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="385" pos:column="5">data<pos:position pos:line="385" pos:column="9"/></name><operator pos:line="385" pos:column="9">-&gt;<pos:position pos:line="385" pos:column="14"/></operator><name pos:line="385" pos:column="11">set<pos:position pos:line="385" pos:column="14"/></name><operator pos:line="385" pos:column="14">.<pos:position pos:line="385" pos:column="15"/></operator><name pos:line="385" pos:column="15">set_url<pos:position pos:line="385" pos:column="22"/></name></name> <operator pos:line="385" pos:column="23">=<pos:position pos:line="385" pos:column="24"/></operator> <call><name pos:line="385" pos:column="25">va_arg<pos:position pos:line="385" pos:column="31"/></name><argument_list pos:line="385" pos:column="31">(<argument><expr><name pos:line="385" pos:column="32">param<pos:position pos:line="385" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="39">char<pos:position pos:line="385" pos:column="43"/></name> <operator pos:line="385" pos:column="44">*<pos:position pos:line="385" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="385" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="386" pos:column="5">data<pos:position pos:line="386" pos:column="9"/></name><operator pos:line="386" pos:column="9">-&gt;<pos:position pos:line="386" pos:column="14"/></operator><name pos:line="386" pos:column="11">change<pos:position pos:line="386" pos:column="17"/></name><operator pos:line="386" pos:column="17">.<pos:position pos:line="386" pos:column="18"/></operator><name pos:line="386" pos:column="18">url<pos:position pos:line="386" pos:column="21"/></name></name> <operator pos:line="386" pos:column="22">=<pos:position pos:line="386" pos:column="23"/></operator> <name><name pos:line="386" pos:column="24">data<pos:position pos:line="386" pos:column="28"/></name><operator pos:line="386" pos:column="28">-&gt;<pos:position pos:line="386" pos:column="33"/></operator><name pos:line="386" pos:column="30">set<pos:position pos:line="386" pos:column="33"/></name><operator pos:line="386" pos:column="33">.<pos:position pos:line="386" pos:column="34"/></operator><name pos:line="386" pos:column="34">set_url<pos:position pos:line="386" pos:column="41"/></name></name></expr>;<pos:position pos:line="386" pos:column="42"/></expr_stmt>
    <break pos:line="387" pos:column="5">break;<pos:position pos:line="387" pos:column="11"/></break>
  <case pos:line="388" pos:column="3">case <expr><name pos:line="388" pos:column="8">CURLOPT_PORT<pos:position pos:line="388" pos:column="20"/></name></expr>:<pos:position pos:line="388" pos:column="21"/></case>
    <comment type="block" pos:line="389" pos:column="5">/*
     * The port number to use when getting the URL
     */</comment>
    <expr_stmt><expr><name><name pos:line="392" pos:column="5">data<pos:position pos:line="392" pos:column="9"/></name><operator pos:line="392" pos:column="9">-&gt;<pos:position pos:line="392" pos:column="14"/></operator><name pos:line="392" pos:column="11">set<pos:position pos:line="392" pos:column="14"/></name><operator pos:line="392" pos:column="14">.<pos:position pos:line="392" pos:column="15"/></operator><name pos:line="392" pos:column="15">use_port<pos:position pos:line="392" pos:column="23"/></name></name> <operator pos:line="392" pos:column="24">=<pos:position pos:line="392" pos:column="25"/></operator> <call><name pos:line="392" pos:column="26">va_arg<pos:position pos:line="392" pos:column="32"/></name><argument_list pos:line="392" pos:column="32">(<argument><expr><name pos:line="392" pos:column="33">param<pos:position pos:line="392" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="392" pos:column="40">long<pos:position pos:line="392" pos:column="44"/></name></expr></argument>)<pos:position pos:line="392" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="46"/></expr_stmt>
    <break pos:line="393" pos:column="5">break;<pos:position pos:line="393" pos:column="11"/></break>
  <case pos:line="394" pos:column="3">case <expr><name pos:line="394" pos:column="8">CURLOPT_POST<pos:position pos:line="394" pos:column="20"/></name></expr>:<pos:position pos:line="394" pos:column="21"/></case>
    <comment type="block" pos:line="395" pos:column="5">/* Does this option serve a purpose anymore? Yes it does, when
       CURLOPT_POSTFIELDS isn't used and the POST data is read off the
       callback! */</comment>
    <if pos:line="398" pos:column="5">if<condition pos:line="398" pos:column="7">(<expr><call><name pos:line="398" pos:column="8">va_arg<pos:position pos:line="398" pos:column="14"/></name><argument_list pos:line="398" pos:column="14">(<argument><expr><name pos:line="398" pos:column="15">param<pos:position pos:line="398" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="398" pos:column="22">long<pos:position pos:line="398" pos:column="26"/></name></expr></argument>)<pos:position pos:line="398" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="398" pos:column="28"/></condition><then pos:line="398" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="399" pos:column="7">data<pos:position pos:line="399" pos:column="11"/></name><operator pos:line="399" pos:column="11">-&gt;<pos:position pos:line="399" pos:column="16"/></operator><name pos:line="399" pos:column="13">set<pos:position pos:line="399" pos:column="16"/></name><operator pos:line="399" pos:column="16">.<pos:position pos:line="399" pos:column="17"/></operator><name pos:line="399" pos:column="17">httpreq<pos:position pos:line="399" pos:column="24"/></name></name> <operator pos:line="399" pos:column="25">=<pos:position pos:line="399" pos:column="26"/></operator> <name pos:line="399" pos:column="27">HTTPREQ_POST<pos:position pos:line="399" pos:column="39"/></name></expr>;<pos:position pos:line="399" pos:column="40"/></expr_stmt></block></then></if>
    <break pos:line="400" pos:column="5">break;<pos:position pos:line="400" pos:column="11"/></break>
  <case pos:line="401" pos:column="3">case <expr><name pos:line="401" pos:column="8">CURLOPT_POSTFIELDS<pos:position pos:line="401" pos:column="26"/></name></expr>:<pos:position pos:line="401" pos:column="27"/></case>
    <comment type="block" pos:line="402" pos:column="5">/*
     * A string with POST data. Makes curl HTTP POST.
     */</comment>
    <expr_stmt><expr><name><name pos:line="405" pos:column="5">data<pos:position pos:line="405" pos:column="9"/></name><operator pos:line="405" pos:column="9">-&gt;<pos:position pos:line="405" pos:column="14"/></operator><name pos:line="405" pos:column="11">set<pos:position pos:line="405" pos:column="14"/></name><operator pos:line="405" pos:column="14">.<pos:position pos:line="405" pos:column="15"/></operator><name pos:line="405" pos:column="15">postfields<pos:position pos:line="405" pos:column="25"/></name></name> <operator pos:line="405" pos:column="26">=<pos:position pos:line="405" pos:column="27"/></operator> <call><name pos:line="405" pos:column="28">va_arg<pos:position pos:line="405" pos:column="34"/></name><argument_list pos:line="405" pos:column="34">(<argument><expr><name pos:line="405" pos:column="35">param<pos:position pos:line="405" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="405" pos:column="42">char<pos:position pos:line="405" pos:column="46"/></name> <operator pos:line="405" pos:column="47">*<pos:position pos:line="405" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="405" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="50"/></expr_stmt>
    <if pos:line="406" pos:column="5">if<condition pos:line="406" pos:column="7">(<expr><name><name pos:line="406" pos:column="8">data<pos:position pos:line="406" pos:column="12"/></name><operator pos:line="406" pos:column="12">-&gt;<pos:position pos:line="406" pos:column="17"/></operator><name pos:line="406" pos:column="14">set<pos:position pos:line="406" pos:column="17"/></name><operator pos:line="406" pos:column="17">.<pos:position pos:line="406" pos:column="18"/></operator><name pos:line="406" pos:column="18">postfields<pos:position pos:line="406" pos:column="28"/></name></name></expr>)<pos:position pos:line="406" pos:column="29"/></condition><then pos:line="406" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="407" pos:column="7">data<pos:position pos:line="407" pos:column="11"/></name><operator pos:line="407" pos:column="11">-&gt;<pos:position pos:line="407" pos:column="16"/></operator><name pos:line="407" pos:column="13">set<pos:position pos:line="407" pos:column="16"/></name><operator pos:line="407" pos:column="16">.<pos:position pos:line="407" pos:column="17"/></operator><name pos:line="407" pos:column="17">httpreq<pos:position pos:line="407" pos:column="24"/></name></name> <operator pos:line="407" pos:column="25">=<pos:position pos:line="407" pos:column="26"/></operator> <name pos:line="407" pos:column="27">HTTPREQ_POST<pos:position pos:line="407" pos:column="39"/></name></expr>;<pos:position pos:line="407" pos:column="40"/></expr_stmt></block></then></if>
    <break pos:line="408" pos:column="5">break;<pos:position pos:line="408" pos:column="11"/></break>
  <case pos:line="409" pos:column="3">case <expr><name pos:line="409" pos:column="8">CURLOPT_POSTFIELDSIZE<pos:position pos:line="409" pos:column="29"/></name></expr>:<pos:position pos:line="409" pos:column="30"/></case>
    <comment type="block" pos:line="410" pos:column="5">/*
     * The size of the POSTFIELD data, if curl should now do a strlen
     * to find out. Enables binary posts.
     */</comment>
    <expr_stmt><expr><name><name pos:line="414" pos:column="5">data<pos:position pos:line="414" pos:column="9"/></name><operator pos:line="414" pos:column="9">-&gt;<pos:position pos:line="414" pos:column="14"/></operator><name pos:line="414" pos:column="11">set<pos:position pos:line="414" pos:column="14"/></name><operator pos:line="414" pos:column="14">.<pos:position pos:line="414" pos:column="15"/></operator><name pos:line="414" pos:column="15">postfieldsize<pos:position pos:line="414" pos:column="28"/></name></name> <operator pos:line="414" pos:column="29">=<pos:position pos:line="414" pos:column="30"/></operator> <call><name pos:line="414" pos:column="31">va_arg<pos:position pos:line="414" pos:column="37"/></name><argument_list pos:line="414" pos:column="37">(<argument><expr><name pos:line="414" pos:column="38">param<pos:position pos:line="414" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="414" pos:column="45">long<pos:position pos:line="414" pos:column="49"/></name></expr></argument>)<pos:position pos:line="414" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="51"/></expr_stmt>
    <break pos:line="415" pos:column="5">break;<pos:position pos:line="415" pos:column="11"/></break>
  <case pos:line="416" pos:column="3">case <expr><name pos:line="416" pos:column="8">CURLOPT_REFERER<pos:position pos:line="416" pos:column="23"/></name></expr>:<pos:position pos:line="416" pos:column="24"/></case>
    <comment type="block" pos:line="417" pos:column="5">/*
     * String to set in the HTTP Referer: field.
     */</comment>
    <if pos:line="420" pos:column="5">if<condition pos:line="420" pos:column="7">(<expr><name><name pos:line="420" pos:column="8">data<pos:position pos:line="420" pos:column="12"/></name><operator pos:line="420" pos:column="12">-&gt;<pos:position pos:line="420" pos:column="17"/></operator><name pos:line="420" pos:column="14">change<pos:position pos:line="420" pos:column="20"/></name><operator pos:line="420" pos:column="20">.<pos:position pos:line="420" pos:column="21"/></operator><name pos:line="420" pos:column="21">referer_alloc<pos:position pos:line="420" pos:column="34"/></name></name></expr>)<pos:position pos:line="420" pos:column="35"/></condition><then pos:line="420" pos:column="35"> <block pos:line="420" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="421" pos:column="7">free<pos:position pos:line="421" pos:column="11"/></name><argument_list pos:line="421" pos:column="11">(<argument><expr><name><name pos:line="421" pos:column="12">data<pos:position pos:line="421" pos:column="16"/></name><operator pos:line="421" pos:column="16">-&gt;<pos:position pos:line="421" pos:column="21"/></operator><name pos:line="421" pos:column="18">change<pos:position pos:line="421" pos:column="24"/></name><operator pos:line="421" pos:column="24">.<pos:position pos:line="421" pos:column="25"/></operator><name pos:line="421" pos:column="25">referer<pos:position pos:line="421" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="421" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="422" pos:column="7">data<pos:position pos:line="422" pos:column="11"/></name><operator pos:line="422" pos:column="11">-&gt;<pos:position pos:line="422" pos:column="16"/></operator><name pos:line="422" pos:column="13">change<pos:position pos:line="422" pos:column="19"/></name><operator pos:line="422" pos:column="19">.<pos:position pos:line="422" pos:column="20"/></operator><name pos:line="422" pos:column="20">referer_alloc<pos:position pos:line="422" pos:column="33"/></name></name> <operator pos:line="422" pos:column="34">=<pos:position pos:line="422" pos:column="35"/></operator> <name pos:line="422" pos:column="36">FALSE<pos:position pos:line="422" pos:column="41"/></name></expr>;<pos:position pos:line="422" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="423" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="424" pos:column="5">data<pos:position pos:line="424" pos:column="9"/></name><operator pos:line="424" pos:column="9">-&gt;<pos:position pos:line="424" pos:column="14"/></operator><name pos:line="424" pos:column="11">set<pos:position pos:line="424" pos:column="14"/></name><operator pos:line="424" pos:column="14">.<pos:position pos:line="424" pos:column="15"/></operator><name pos:line="424" pos:column="15">set_referer<pos:position pos:line="424" pos:column="26"/></name></name> <operator pos:line="424" pos:column="27">=<pos:position pos:line="424" pos:column="28"/></operator> <call><name pos:line="424" pos:column="29">va_arg<pos:position pos:line="424" pos:column="35"/></name><argument_list pos:line="424" pos:column="35">(<argument><expr><name pos:line="424" pos:column="36">param<pos:position pos:line="424" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="43">char<pos:position pos:line="424" pos:column="47"/></name> <operator pos:line="424" pos:column="48">*<pos:position pos:line="424" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="424" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="425" pos:column="5">data<pos:position pos:line="425" pos:column="9"/></name><operator pos:line="425" pos:column="9">-&gt;<pos:position pos:line="425" pos:column="14"/></operator><name pos:line="425" pos:column="11">change<pos:position pos:line="425" pos:column="17"/></name><operator pos:line="425" pos:column="17">.<pos:position pos:line="425" pos:column="18"/></operator><name pos:line="425" pos:column="18">referer<pos:position pos:line="425" pos:column="25"/></name></name> <operator pos:line="425" pos:column="26">=<pos:position pos:line="425" pos:column="27"/></operator> <name><name pos:line="425" pos:column="28">data<pos:position pos:line="425" pos:column="32"/></name><operator pos:line="425" pos:column="32">-&gt;<pos:position pos:line="425" pos:column="37"/></operator><name pos:line="425" pos:column="34">set<pos:position pos:line="425" pos:column="37"/></name><operator pos:line="425" pos:column="37">.<pos:position pos:line="425" pos:column="38"/></operator><name pos:line="425" pos:column="38">set_referer<pos:position pos:line="425" pos:column="49"/></name></name></expr>;<pos:position pos:line="425" pos:column="50"/></expr_stmt>
    <break pos:line="426" pos:column="5">break;<pos:position pos:line="426" pos:column="11"/></break>
  <case pos:line="427" pos:column="3">case <expr><name pos:line="427" pos:column="8">CURLOPT_AUTOREFERER<pos:position pos:line="427" pos:column="27"/></name></expr>:<pos:position pos:line="427" pos:column="28"/></case>
    <comment type="block" pos:line="428" pos:column="5">/*
     * Switch on automatic referer that gets set if curl follows locations.
     */</comment>
    <expr_stmt><expr><name><name pos:line="431" pos:column="5">data<pos:position pos:line="431" pos:column="9"/></name><operator pos:line="431" pos:column="9">-&gt;<pos:position pos:line="431" pos:column="14"/></operator><name pos:line="431" pos:column="11">set<pos:position pos:line="431" pos:column="14"/></name><operator pos:line="431" pos:column="14">.<pos:position pos:line="431" pos:column="15"/></operator><name pos:line="431" pos:column="15">http_auto_referer<pos:position pos:line="431" pos:column="32"/></name></name> <operator pos:line="431" pos:column="33">=<pos:position pos:line="431" pos:column="34"/></operator> <ternary><condition><expr><call><name pos:line="431" pos:column="35">va_arg<pos:position pos:line="431" pos:column="41"/></name><argument_list pos:line="431" pos:column="41">(<argument><expr><name pos:line="431" pos:column="42">param<pos:position pos:line="431" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="431" pos:column="49">long<pos:position pos:line="431" pos:column="53"/></name></expr></argument>)<pos:position pos:line="431" pos:column="54"/></argument_list></call></expr>?<pos:position pos:line="431" pos:column="55"/></condition><then><expr><literal type="number" pos:line="431" pos:column="55">1<pos:position pos:line="431" pos:column="56"/></literal></expr></then><else pos:line="431" pos:column="56">:<expr><literal type="number" pos:line="431" pos:column="57">0<pos:position pos:line="431" pos:column="58"/></literal></expr></else></ternary></expr>;<pos:position pos:line="431" pos:column="59"/></expr_stmt>
    <break pos:line="432" pos:column="5">break;<pos:position pos:line="432" pos:column="11"/></break>
  <case pos:line="433" pos:column="3">case <expr><name pos:line="433" pos:column="8">CURLOPT_PROXY<pos:position pos:line="433" pos:column="21"/></name></expr>:<pos:position pos:line="433" pos:column="22"/></case>
    <comment type="block" pos:line="434" pos:column="5">/*
     * Set proxy server:port to use as HTTP proxy.
     *
     * If the proxy is set to "" we explicitly say that we don't want to use a
     * proxy (even though there might be environment variables saying so).
     *
     * Setting it to NULL, means no proxy but allows the environment variables
     * to decide for us.
     */</comment>
    <if pos:line="443" pos:column="5">if<condition pos:line="443" pos:column="7">(<expr><name><name pos:line="443" pos:column="8">data<pos:position pos:line="443" pos:column="12"/></name><operator pos:line="443" pos:column="12">-&gt;<pos:position pos:line="443" pos:column="17"/></operator><name pos:line="443" pos:column="14">change<pos:position pos:line="443" pos:column="20"/></name><operator pos:line="443" pos:column="20">.<pos:position pos:line="443" pos:column="21"/></operator><name pos:line="443" pos:column="21">proxy_alloc<pos:position pos:line="443" pos:column="32"/></name></name></expr>)<pos:position pos:line="443" pos:column="33"/></condition><then pos:line="443" pos:column="33"> <block pos:line="443" pos:column="34">{
      <comment type="block" pos:line="444" pos:column="7">/*
       * The already set string is allocated, free that first
       */</comment>
      <expr_stmt><expr><name><name pos:line="447" pos:column="7">data<pos:position pos:line="447" pos:column="11"/></name><operator pos:line="447" pos:column="11">-&gt;<pos:position pos:line="447" pos:column="16"/></operator><name pos:line="447" pos:column="13">change<pos:position pos:line="447" pos:column="19"/></name><operator pos:line="447" pos:column="19">.<pos:position pos:line="447" pos:column="20"/></operator><name pos:line="447" pos:column="20">proxy_alloc<pos:position pos:line="447" pos:column="31"/></name></name><operator pos:line="447" pos:column="31">=<pos:position pos:line="447" pos:column="32"/></operator><name pos:line="447" pos:column="32">FALSE<pos:position pos:line="447" pos:column="37"/></name></expr>;<pos:position pos:line="447" pos:column="38"/></expr_stmt><empty_stmt pos:line="447" pos:column="38">;<pos:position pos:line="447" pos:column="39"/></empty_stmt>
      <expr_stmt><expr><call><name pos:line="448" pos:column="7">free<pos:position pos:line="448" pos:column="11"/></name><argument_list pos:line="448" pos:column="11">(<argument><expr><name><name pos:line="448" pos:column="12">data<pos:position pos:line="448" pos:column="16"/></name><operator pos:line="448" pos:column="16">-&gt;<pos:position pos:line="448" pos:column="21"/></operator><name pos:line="448" pos:column="18">change<pos:position pos:line="448" pos:column="24"/></name><operator pos:line="448" pos:column="24">.<pos:position pos:line="448" pos:column="25"/></operator><name pos:line="448" pos:column="25">proxy<pos:position pos:line="448" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="448" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="449" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="450" pos:column="5">data<pos:position pos:line="450" pos:column="9"/></name><operator pos:line="450" pos:column="9">-&gt;<pos:position pos:line="450" pos:column="14"/></operator><name pos:line="450" pos:column="11">set<pos:position pos:line="450" pos:column="14"/></name><operator pos:line="450" pos:column="14">.<pos:position pos:line="450" pos:column="15"/></operator><name pos:line="450" pos:column="15">set_proxy<pos:position pos:line="450" pos:column="24"/></name></name> <operator pos:line="450" pos:column="25">=<pos:position pos:line="450" pos:column="26"/></operator> <call><name pos:line="450" pos:column="27">va_arg<pos:position pos:line="450" pos:column="33"/></name><argument_list pos:line="450" pos:column="33">(<argument><expr><name pos:line="450" pos:column="34">param<pos:position pos:line="450" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="450" pos:column="41">char<pos:position pos:line="450" pos:column="45"/></name> <operator pos:line="450" pos:column="46">*<pos:position pos:line="450" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="450" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="451" pos:column="5">data<pos:position pos:line="451" pos:column="9"/></name><operator pos:line="451" pos:column="9">-&gt;<pos:position pos:line="451" pos:column="14"/></operator><name pos:line="451" pos:column="11">change<pos:position pos:line="451" pos:column="17"/></name><operator pos:line="451" pos:column="17">.<pos:position pos:line="451" pos:column="18"/></operator><name pos:line="451" pos:column="18">proxy<pos:position pos:line="451" pos:column="23"/></name></name> <operator pos:line="451" pos:column="24">=<pos:position pos:line="451" pos:column="25"/></operator> <name><name pos:line="451" pos:column="26">data<pos:position pos:line="451" pos:column="30"/></name><operator pos:line="451" pos:column="30">-&gt;<pos:position pos:line="451" pos:column="35"/></operator><name pos:line="451" pos:column="32">set<pos:position pos:line="451" pos:column="35"/></name><operator pos:line="451" pos:column="35">.<pos:position pos:line="451" pos:column="36"/></operator><name pos:line="451" pos:column="36">set_proxy<pos:position pos:line="451" pos:column="45"/></name></name></expr>;<pos:position pos:line="451" pos:column="46"/></expr_stmt>
    <break pos:line="452" pos:column="5">break;<pos:position pos:line="452" pos:column="11"/></break>
  <case pos:line="453" pos:column="3">case <expr><name pos:line="453" pos:column="8">CURLOPT_HTTPPROXYTUNNEL<pos:position pos:line="453" pos:column="31"/></name></expr>:<pos:position pos:line="453" pos:column="32"/></case>
    <comment type="block" pos:line="454" pos:column="5">/*
     * Tunnel operations through the proxy instead of normal proxy use
     */</comment>
    <expr_stmt><expr><name><name pos:line="457" pos:column="5">data<pos:position pos:line="457" pos:column="9"/></name><operator pos:line="457" pos:column="9">-&gt;<pos:position pos:line="457" pos:column="14"/></operator><name pos:line="457" pos:column="11">set<pos:position pos:line="457" pos:column="14"/></name><operator pos:line="457" pos:column="14">.<pos:position pos:line="457" pos:column="15"/></operator><name pos:line="457" pos:column="15">tunnel_thru_httpproxy<pos:position pos:line="457" pos:column="36"/></name></name> <operator pos:line="457" pos:column="37">=<pos:position pos:line="457" pos:column="38"/></operator> <ternary><condition><expr><call><name pos:line="457" pos:column="39">va_arg<pos:position pos:line="457" pos:column="45"/></name><argument_list pos:line="457" pos:column="45">(<argument><expr><name pos:line="457" pos:column="46">param<pos:position pos:line="457" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="457" pos:column="53">long<pos:position pos:line="457" pos:column="57"/></name></expr></argument>)<pos:position pos:line="457" pos:column="58"/></argument_list></call></expr>?<pos:position pos:line="457" pos:column="59"/></condition><then><expr><name pos:line="457" pos:column="59">TRUE<pos:position pos:line="457" pos:column="63"/></name></expr></then><else pos:line="457" pos:column="63">:<expr><name pos:line="457" pos:column="64">FALSE<pos:position pos:line="457" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="457" pos:column="70"/></expr_stmt>
    <break pos:line="458" pos:column="5">break;<pos:position pos:line="458" pos:column="11"/></break>
  <case pos:line="459" pos:column="3">case <expr><name pos:line="459" pos:column="8">CURLOPT_PROXYPORT<pos:position pos:line="459" pos:column="25"/></name></expr>:<pos:position pos:line="459" pos:column="26"/></case>
    <comment type="block" pos:line="460" pos:column="5">/*
     * Explicitly set HTTP proxy port number.
     */</comment>
    <expr_stmt><expr><name><name pos:line="463" pos:column="5">data<pos:position pos:line="463" pos:column="9"/></name><operator pos:line="463" pos:column="9">-&gt;<pos:position pos:line="463" pos:column="14"/></operator><name pos:line="463" pos:column="11">set<pos:position pos:line="463" pos:column="14"/></name><operator pos:line="463" pos:column="14">.<pos:position pos:line="463" pos:column="15"/></operator><name pos:line="463" pos:column="15">proxyport<pos:position pos:line="463" pos:column="24"/></name></name> <operator pos:line="463" pos:column="25">=<pos:position pos:line="463" pos:column="26"/></operator> <call><name pos:line="463" pos:column="27">va_arg<pos:position pos:line="463" pos:column="33"/></name><argument_list pos:line="463" pos:column="33">(<argument><expr><name pos:line="463" pos:column="34">param<pos:position pos:line="463" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="41">long<pos:position pos:line="463" pos:column="45"/></name></expr></argument>)<pos:position pos:line="463" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="47"/></expr_stmt>
    <break pos:line="464" pos:column="5">break;<pos:position pos:line="464" pos:column="11"/></break>
  <case pos:line="465" pos:column="3">case <expr><name pos:line="465" pos:column="8">CURLOPT_TIMEOUT<pos:position pos:line="465" pos:column="23"/></name></expr>:<pos:position pos:line="465" pos:column="24"/></case>
    <comment type="block" pos:line="466" pos:column="5">/*
     * The maximum time you allow curl to use for a single transfer
     * operation.
     */</comment>
    <expr_stmt><expr><name><name pos:line="470" pos:column="5">data<pos:position pos:line="470" pos:column="9"/></name><operator pos:line="470" pos:column="9">-&gt;<pos:position pos:line="470" pos:column="14"/></operator><name pos:line="470" pos:column="11">set<pos:position pos:line="470" pos:column="14"/></name><operator pos:line="470" pos:column="14">.<pos:position pos:line="470" pos:column="15"/></operator><name pos:line="470" pos:column="15">timeout<pos:position pos:line="470" pos:column="22"/></name></name> <operator pos:line="470" pos:column="23">=<pos:position pos:line="470" pos:column="24"/></operator> <call><name pos:line="470" pos:column="25">va_arg<pos:position pos:line="470" pos:column="31"/></name><argument_list pos:line="470" pos:column="31">(<argument><expr><name pos:line="470" pos:column="32">param<pos:position pos:line="470" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="39">long<pos:position pos:line="470" pos:column="43"/></name></expr></argument>)<pos:position pos:line="470" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="45"/></expr_stmt>
    <break pos:line="471" pos:column="5">break;<pos:position pos:line="471" pos:column="11"/></break>
  <case pos:line="472" pos:column="3">case <expr><name pos:line="472" pos:column="8">CURLOPT_CONNECTTIMEOUT<pos:position pos:line="472" pos:column="30"/></name></expr>:<pos:position pos:line="472" pos:column="31"/></case>
    <comment type="block" pos:line="473" pos:column="5">/*
     * The maximum time you allow curl to use to connect.
     */</comment>
    <expr_stmt><expr><name><name pos:line="476" pos:column="5">data<pos:position pos:line="476" pos:column="9"/></name><operator pos:line="476" pos:column="9">-&gt;<pos:position pos:line="476" pos:column="14"/></operator><name pos:line="476" pos:column="11">set<pos:position pos:line="476" pos:column="14"/></name><operator pos:line="476" pos:column="14">.<pos:position pos:line="476" pos:column="15"/></operator><name pos:line="476" pos:column="15">connecttimeout<pos:position pos:line="476" pos:column="29"/></name></name> <operator pos:line="476" pos:column="30">=<pos:position pos:line="476" pos:column="31"/></operator> <call><name pos:line="476" pos:column="32">va_arg<pos:position pos:line="476" pos:column="38"/></name><argument_list pos:line="476" pos:column="38">(<argument><expr><name pos:line="476" pos:column="39">param<pos:position pos:line="476" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="476" pos:column="46">long<pos:position pos:line="476" pos:column="50"/></name></expr></argument>)<pos:position pos:line="476" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="476" pos:column="52"/></expr_stmt>
    <break pos:line="477" pos:column="5">break;<pos:position pos:line="477" pos:column="11"/></break>
  <case pos:line="478" pos:column="3">case <expr><name pos:line="478" pos:column="8">CURLOPT_MAXREDIRS<pos:position pos:line="478" pos:column="25"/></name></expr>:<pos:position pos:line="478" pos:column="26"/></case>
    <comment type="block" pos:line="479" pos:column="5">/*
     * The maximum amount of hops you allow curl to follow Location:
     * headers. This should mostly be used to detect never-ending loops.
     */</comment>
    <expr_stmt><expr><name><name pos:line="483" pos:column="5">data<pos:position pos:line="483" pos:column="9"/></name><operator pos:line="483" pos:column="9">-&gt;<pos:position pos:line="483" pos:column="14"/></operator><name pos:line="483" pos:column="11">set<pos:position pos:line="483" pos:column="14"/></name><operator pos:line="483" pos:column="14">.<pos:position pos:line="483" pos:column="15"/></operator><name pos:line="483" pos:column="15">maxredirs<pos:position pos:line="483" pos:column="24"/></name></name> <operator pos:line="483" pos:column="25">=<pos:position pos:line="483" pos:column="26"/></operator> <call><name pos:line="483" pos:column="27">va_arg<pos:position pos:line="483" pos:column="33"/></name><argument_list pos:line="483" pos:column="33">(<argument><expr><name pos:line="483" pos:column="34">param<pos:position pos:line="483" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="483" pos:column="41">long<pos:position pos:line="483" pos:column="45"/></name></expr></argument>)<pos:position pos:line="483" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="47"/></expr_stmt>
    <break pos:line="484" pos:column="5">break;<pos:position pos:line="484" pos:column="11"/></break>
  <case pos:line="485" pos:column="3">case <expr><name pos:line="485" pos:column="8">CURLOPT_USERAGENT<pos:position pos:line="485" pos:column="25"/></name></expr>:<pos:position pos:line="485" pos:column="26"/></case>
    <comment type="block" pos:line="486" pos:column="5">/*
     * String to use in the HTTP User-Agent field
     */</comment>
    <expr_stmt><expr><name><name pos:line="489" pos:column="5">data<pos:position pos:line="489" pos:column="9"/></name><operator pos:line="489" pos:column="9">-&gt;<pos:position pos:line="489" pos:column="14"/></operator><name pos:line="489" pos:column="11">set<pos:position pos:line="489" pos:column="14"/></name><operator pos:line="489" pos:column="14">.<pos:position pos:line="489" pos:column="15"/></operator><name pos:line="489" pos:column="15">useragent<pos:position pos:line="489" pos:column="24"/></name></name> <operator pos:line="489" pos:column="25">=<pos:position pos:line="489" pos:column="26"/></operator> <call><name pos:line="489" pos:column="27">va_arg<pos:position pos:line="489" pos:column="33"/></name><argument_list pos:line="489" pos:column="33">(<argument><expr><name pos:line="489" pos:column="34">param<pos:position pos:line="489" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="489" pos:column="41">char<pos:position pos:line="489" pos:column="45"/></name> <operator pos:line="489" pos:column="46">*<pos:position pos:line="489" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="489" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="49"/></expr_stmt>
    <break pos:line="490" pos:column="5">break;<pos:position pos:line="490" pos:column="11"/></break>
  <case pos:line="491" pos:column="3">case <expr><name pos:line="491" pos:column="8">CURLOPT_ENCODING<pos:position pos:line="491" pos:column="24"/></name></expr>:<pos:position pos:line="491" pos:column="25"/></case>
    <comment type="block" pos:line="492" pos:column="5">/*
     * String to use at the value of Accept-Encoding header. 08/28/02 jhrg
     */</comment>
    <expr_stmt><expr><name><name pos:line="495" pos:column="5">data<pos:position pos:line="495" pos:column="9"/></name><operator pos:line="495" pos:column="9">-&gt;<pos:position pos:line="495" pos:column="14"/></operator><name pos:line="495" pos:column="11">set<pos:position pos:line="495" pos:column="14"/></name><operator pos:line="495" pos:column="14">.<pos:position pos:line="495" pos:column="15"/></operator><name pos:line="495" pos:column="15">encoding<pos:position pos:line="495" pos:column="23"/></name></name> <operator pos:line="495" pos:column="24">=<pos:position pos:line="495" pos:column="25"/></operator> <call><name pos:line="495" pos:column="26">va_arg<pos:position pos:line="495" pos:column="32"/></name><argument_list pos:line="495" pos:column="32">(<argument><expr><name pos:line="495" pos:column="33">param<pos:position pos:line="495" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="495" pos:column="40">char<pos:position pos:line="495" pos:column="44"/></name> <operator pos:line="495" pos:column="45">*<pos:position pos:line="495" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="495" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="48"/></expr_stmt>
    <break pos:line="496" pos:column="5">break;<pos:position pos:line="496" pos:column="11"/></break>

  <case pos:line="498" pos:column="3">case <expr><name pos:line="498" pos:column="8">CURLOPT_USERPWD<pos:position pos:line="498" pos:column="23"/></name></expr>:<pos:position pos:line="498" pos:column="24"/></case>
    <comment type="block" pos:line="499" pos:column="5">/*
     * user:password to use in the operation
     */</comment>
    <expr_stmt><expr><name><name pos:line="502" pos:column="5">data<pos:position pos:line="502" pos:column="9"/></name><operator pos:line="502" pos:column="9">-&gt;<pos:position pos:line="502" pos:column="14"/></operator><name pos:line="502" pos:column="11">set<pos:position pos:line="502" pos:column="14"/></name><operator pos:line="502" pos:column="14">.<pos:position pos:line="502" pos:column="15"/></operator><name pos:line="502" pos:column="15">userpwd<pos:position pos:line="502" pos:column="22"/></name></name> <operator pos:line="502" pos:column="23">=<pos:position pos:line="502" pos:column="24"/></operator> <call><name pos:line="502" pos:column="25">va_arg<pos:position pos:line="502" pos:column="31"/></name><argument_list pos:line="502" pos:column="31">(<argument><expr><name pos:line="502" pos:column="32">param<pos:position pos:line="502" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="502" pos:column="39">char<pos:position pos:line="502" pos:column="43"/></name> <operator pos:line="502" pos:column="44">*<pos:position pos:line="502" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="502" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="47"/></expr_stmt>
    <break pos:line="503" pos:column="5">break;<pos:position pos:line="503" pos:column="11"/></break>
  <case pos:line="504" pos:column="3">case <expr><name pos:line="504" pos:column="8">CURLOPT_POSTQUOTE<pos:position pos:line="504" pos:column="25"/></name></expr>:<pos:position pos:line="504" pos:column="26"/></case>
    <comment type="block" pos:line="505" pos:column="5">/*
     * List of RAW FTP commands to use after a transfer
     */</comment>
    <expr_stmt><expr><name><name pos:line="508" pos:column="5">data<pos:position pos:line="508" pos:column="9"/></name><operator pos:line="508" pos:column="9">-&gt;<pos:position pos:line="508" pos:column="14"/></operator><name pos:line="508" pos:column="11">set<pos:position pos:line="508" pos:column="14"/></name><operator pos:line="508" pos:column="14">.<pos:position pos:line="508" pos:column="15"/></operator><name pos:line="508" pos:column="15">postquote<pos:position pos:line="508" pos:column="24"/></name></name> <operator pos:line="508" pos:column="25">=<pos:position pos:line="508" pos:column="26"/></operator> <call><name pos:line="508" pos:column="27">va_arg<pos:position pos:line="508" pos:column="33"/></name><argument_list pos:line="508" pos:column="33">(<argument><expr><name pos:line="508" pos:column="34">param<pos:position pos:line="508" pos:column="39"/></name></expr></argument>, <argument><expr pos:line="508" pos:column="41">struct <name pos:line="508" pos:column="48">curl_slist<pos:position pos:line="508" pos:column="58"/></name> <operator pos:line="508" pos:column="59">*<pos:position pos:line="508" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="508" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="62"/></expr_stmt>
    <break pos:line="509" pos:column="5">break;<pos:position pos:line="509" pos:column="11"/></break>
  <case pos:line="510" pos:column="3">case <expr><name pos:line="510" pos:column="8">CURLOPT_PREQUOTE<pos:position pos:line="510" pos:column="24"/></name></expr>:<pos:position pos:line="510" pos:column="25"/></case>
    <comment type="block" pos:line="511" pos:column="5">/*
     * List of RAW FTP commands to use prior to RETR (Wesley Laxton)
     */</comment>
    <expr_stmt><expr><name><name pos:line="514" pos:column="5">data<pos:position pos:line="514" pos:column="9"/></name><operator pos:line="514" pos:column="9">-&gt;<pos:position pos:line="514" pos:column="14"/></operator><name pos:line="514" pos:column="11">set<pos:position pos:line="514" pos:column="14"/></name><operator pos:line="514" pos:column="14">.<pos:position pos:line="514" pos:column="15"/></operator><name pos:line="514" pos:column="15">prequote<pos:position pos:line="514" pos:column="23"/></name></name> <operator pos:line="514" pos:column="24">=<pos:position pos:line="514" pos:column="25"/></operator> <call><name pos:line="514" pos:column="26">va_arg<pos:position pos:line="514" pos:column="32"/></name><argument_list pos:line="514" pos:column="32">(<argument><expr><name pos:line="514" pos:column="33">param<pos:position pos:line="514" pos:column="38"/></name></expr></argument>, <argument><expr pos:line="514" pos:column="40">struct <name pos:line="514" pos:column="47">curl_slist<pos:position pos:line="514" pos:column="57"/></name> <operator pos:line="514" pos:column="58">*<pos:position pos:line="514" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="514" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="514" pos:column="61"/></expr_stmt>
    <break pos:line="515" pos:column="5">break;<pos:position pos:line="515" pos:column="11"/></break>
  <case pos:line="516" pos:column="3">case <expr><name pos:line="516" pos:column="8">CURLOPT_QUOTE<pos:position pos:line="516" pos:column="21"/></name></expr>:<pos:position pos:line="516" pos:column="22"/></case>
    <comment type="block" pos:line="517" pos:column="5">/*
     * List of RAW FTP commands to use before a transfer
     */</comment>
    <expr_stmt><expr><name><name pos:line="520" pos:column="5">data<pos:position pos:line="520" pos:column="9"/></name><operator pos:line="520" pos:column="9">-&gt;<pos:position pos:line="520" pos:column="14"/></operator><name pos:line="520" pos:column="11">set<pos:position pos:line="520" pos:column="14"/></name><operator pos:line="520" pos:column="14">.<pos:position pos:line="520" pos:column="15"/></operator><name pos:line="520" pos:column="15">quote<pos:position pos:line="520" pos:column="20"/></name></name> <operator pos:line="520" pos:column="21">=<pos:position pos:line="520" pos:column="22"/></operator> <call><name pos:line="520" pos:column="23">va_arg<pos:position pos:line="520" pos:column="29"/></name><argument_list pos:line="520" pos:column="29">(<argument><expr><name pos:line="520" pos:column="30">param<pos:position pos:line="520" pos:column="35"/></name></expr></argument>, <argument><expr pos:line="520" pos:column="37">struct <name pos:line="520" pos:column="44">curl_slist<pos:position pos:line="520" pos:column="54"/></name> <operator pos:line="520" pos:column="55">*<pos:position pos:line="520" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="520" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="58"/></expr_stmt>
    <break pos:line="521" pos:column="5">break;<pos:position pos:line="521" pos:column="11"/></break>
  <case pos:line="522" pos:column="3">case <expr><name pos:line="522" pos:column="8">CURLOPT_PROGRESSFUNCTION<pos:position pos:line="522" pos:column="32"/></name></expr>:<pos:position pos:line="522" pos:column="33"/></case>
    <comment type="block" pos:line="523" pos:column="5">/*
     * Progress callback function
     */</comment>
    <expr_stmt><expr><name><name pos:line="526" pos:column="5">data<pos:position pos:line="526" pos:column="9"/></name><operator pos:line="526" pos:column="9">-&gt;<pos:position pos:line="526" pos:column="14"/></operator><name pos:line="526" pos:column="11">set<pos:position pos:line="526" pos:column="14"/></name><operator pos:line="526" pos:column="14">.<pos:position pos:line="526" pos:column="15"/></operator><name pos:line="526" pos:column="15">fprogress<pos:position pos:line="526" pos:column="24"/></name></name> <operator pos:line="526" pos:column="25">=<pos:position pos:line="526" pos:column="26"/></operator> <call><name pos:line="526" pos:column="27">va_arg<pos:position pos:line="526" pos:column="33"/></name><argument_list pos:line="526" pos:column="33">(<argument><expr><name pos:line="526" pos:column="34">param<pos:position pos:line="526" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="526" pos:column="41">curl_progress_callback<pos:position pos:line="526" pos:column="63"/></name></expr></argument>)<pos:position pos:line="526" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="65"/></expr_stmt>
    <if pos:line="527" pos:column="5">if<condition pos:line="527" pos:column="7">(<expr><name><name pos:line="527" pos:column="8">data<pos:position pos:line="527" pos:column="12"/></name><operator pos:line="527" pos:column="12">-&gt;<pos:position pos:line="527" pos:column="17"/></operator><name pos:line="527" pos:column="14">set<pos:position pos:line="527" pos:column="17"/></name><operator pos:line="527" pos:column="17">.<pos:position pos:line="527" pos:column="18"/></operator><name pos:line="527" pos:column="18">fprogress<pos:position pos:line="527" pos:column="27"/></name></name></expr>)<pos:position pos:line="527" pos:column="28"/></condition><then pos:line="527" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="528" pos:column="7">data<pos:position pos:line="528" pos:column="11"/></name><operator pos:line="528" pos:column="11">-&gt;<pos:position pos:line="528" pos:column="16"/></operator><name pos:line="528" pos:column="13">progress<pos:position pos:line="528" pos:column="21"/></name><operator pos:line="528" pos:column="21">.<pos:position pos:line="528" pos:column="22"/></operator><name pos:line="528" pos:column="22">callback<pos:position pos:line="528" pos:column="30"/></name></name> <operator pos:line="528" pos:column="31">=<pos:position pos:line="528" pos:column="32"/></operator> <name pos:line="528" pos:column="33">TRUE<pos:position pos:line="528" pos:column="37"/></name></expr>;<pos:position pos:line="528" pos:column="38"/></expr_stmt></block></then> <comment type="block" pos:line="528" pos:column="39">/* no longer internal */</comment>
    <else pos:line="529" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="530" pos:column="7">data<pos:position pos:line="530" pos:column="11"/></name><operator pos:line="530" pos:column="11">-&gt;<pos:position pos:line="530" pos:column="16"/></operator><name pos:line="530" pos:column="13">progress<pos:position pos:line="530" pos:column="21"/></name><operator pos:line="530" pos:column="21">.<pos:position pos:line="530" pos:column="22"/></operator><name pos:line="530" pos:column="22">callback<pos:position pos:line="530" pos:column="30"/></name></name> <operator pos:line="530" pos:column="31">=<pos:position pos:line="530" pos:column="32"/></operator> <name pos:line="530" pos:column="33">FALSE<pos:position pos:line="530" pos:column="38"/></name></expr>;<pos:position pos:line="530" pos:column="39"/></expr_stmt></block></else></if> <comment type="block" pos:line="530" pos:column="40">/* NULL enforces internal */</comment>

    <break pos:line="532" pos:column="5">break;<pos:position pos:line="532" pos:column="11"/></break>
  <case pos:line="533" pos:column="3">case <expr><name pos:line="533" pos:column="8">CURLOPT_PROGRESSDATA<pos:position pos:line="533" pos:column="28"/></name></expr>:<pos:position pos:line="533" pos:column="29"/></case>
    <comment type="block" pos:line="534" pos:column="5">/*
     * Custom client data to pass to the progress callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="537" pos:column="5">data<pos:position pos:line="537" pos:column="9"/></name><operator pos:line="537" pos:column="9">-&gt;<pos:position pos:line="537" pos:column="14"/></operator><name pos:line="537" pos:column="11">set<pos:position pos:line="537" pos:column="14"/></name><operator pos:line="537" pos:column="14">.<pos:position pos:line="537" pos:column="15"/></operator><name pos:line="537" pos:column="15">progress_client<pos:position pos:line="537" pos:column="30"/></name></name> <operator pos:line="537" pos:column="31">=<pos:position pos:line="537" pos:column="32"/></operator> <call><name pos:line="537" pos:column="33">va_arg<pos:position pos:line="537" pos:column="39"/></name><argument_list pos:line="537" pos:column="39">(<argument><expr><name pos:line="537" pos:column="40">param<pos:position pos:line="537" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="537" pos:column="47">void<pos:position pos:line="537" pos:column="51"/></name> <operator pos:line="537" pos:column="52">*<pos:position pos:line="537" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="537" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="55"/></expr_stmt>
    <break pos:line="538" pos:column="5">break;<pos:position pos:line="538" pos:column="11"/></break>
  <case pos:line="539" pos:column="3">case <expr><name pos:line="539" pos:column="8">CURLOPT_PASSWDFUNCTION<pos:position pos:line="539" pos:column="30"/></name></expr>:<pos:position pos:line="539" pos:column="31"/></case>
    <comment type="block" pos:line="540" pos:column="5">/*
     * Password prompt callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="543" pos:column="5">data<pos:position pos:line="543" pos:column="9"/></name><operator pos:line="543" pos:column="9">-&gt;<pos:position pos:line="543" pos:column="14"/></operator><name pos:line="543" pos:column="11">set<pos:position pos:line="543" pos:column="14"/></name><operator pos:line="543" pos:column="14">.<pos:position pos:line="543" pos:column="15"/></operator><name pos:line="543" pos:column="15">fpasswd<pos:position pos:line="543" pos:column="22"/></name></name> <operator pos:line="543" pos:column="23">=<pos:position pos:line="543" pos:column="24"/></operator> <call><name pos:line="543" pos:column="25">va_arg<pos:position pos:line="543" pos:column="31"/></name><argument_list pos:line="543" pos:column="31">(<argument><expr><name pos:line="543" pos:column="32">param<pos:position pos:line="543" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="543" pos:column="39">curl_passwd_callback<pos:position pos:line="543" pos:column="59"/></name></expr></argument>)<pos:position pos:line="543" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="543" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="544" pos:column="5">/*
     * if the callback provided is null, reset the default callback
     */</comment>
    <if pos:line="547" pos:column="5">if<condition pos:line="547" pos:column="7">(<expr><operator pos:line="547" pos:column="8">!<pos:position pos:line="547" pos:column="9"/></operator><name><name pos:line="547" pos:column="9">data<pos:position pos:line="547" pos:column="13"/></name><operator pos:line="547" pos:column="13">-&gt;<pos:position pos:line="547" pos:column="18"/></operator><name pos:line="547" pos:column="15">set<pos:position pos:line="547" pos:column="18"/></name><operator pos:line="547" pos:column="18">.<pos:position pos:line="547" pos:column="19"/></operator><name pos:line="547" pos:column="19">fpasswd<pos:position pos:line="547" pos:column="26"/></name></name></expr>)<pos:position pos:line="547" pos:column="27"/></condition><then pos:line="547" pos:column="27">
    <block pos:line="548" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="549" pos:column="7">data<pos:position pos:line="549" pos:column="11"/></name><operator pos:line="549" pos:column="11">-&gt;<pos:position pos:line="549" pos:column="16"/></operator><name pos:line="549" pos:column="13">set<pos:position pos:line="549" pos:column="16"/></name><operator pos:line="549" pos:column="16">.<pos:position pos:line="549" pos:column="17"/></operator><name pos:line="549" pos:column="17">fpasswd<pos:position pos:line="549" pos:column="24"/></name></name> <operator pos:line="549" pos:column="25">=<pos:position pos:line="549" pos:column="26"/></operator> <name pos:line="549" pos:column="27">my_getpass<pos:position pos:line="549" pos:column="37"/></name></expr>;<pos:position pos:line="549" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="550" pos:column="6"/></block></then></if>
    <break pos:line="551" pos:column="5">break;<pos:position pos:line="551" pos:column="11"/></break>
  <case pos:line="552" pos:column="3">case <expr><name pos:line="552" pos:column="8">CURLOPT_PASSWDDATA<pos:position pos:line="552" pos:column="26"/></name></expr>:<pos:position pos:line="552" pos:column="27"/></case>
    <comment type="block" pos:line="553" pos:column="5">/*
     * Custom client data to pass to the password callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="556" pos:column="5">data<pos:position pos:line="556" pos:column="9"/></name><operator pos:line="556" pos:column="9">-&gt;<pos:position pos:line="556" pos:column="14"/></operator><name pos:line="556" pos:column="11">set<pos:position pos:line="556" pos:column="14"/></name><operator pos:line="556" pos:column="14">.<pos:position pos:line="556" pos:column="15"/></operator><name pos:line="556" pos:column="15">passwd_client<pos:position pos:line="556" pos:column="28"/></name></name> <operator pos:line="556" pos:column="29">=<pos:position pos:line="556" pos:column="30"/></operator> <call><name pos:line="556" pos:column="31">va_arg<pos:position pos:line="556" pos:column="37"/></name><argument_list pos:line="556" pos:column="37">(<argument><expr><name pos:line="556" pos:column="38">param<pos:position pos:line="556" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="45">void<pos:position pos:line="556" pos:column="49"/></name> <operator pos:line="556" pos:column="50">*<pos:position pos:line="556" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="556" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="53"/></expr_stmt>
    <break pos:line="557" pos:column="5">break;<pos:position pos:line="557" pos:column="11"/></break>
  <case pos:line="558" pos:column="3">case <expr><name pos:line="558" pos:column="8">CURLOPT_PROXYUSERPWD<pos:position pos:line="558" pos:column="28"/></name></expr>:<pos:position pos:line="558" pos:column="29"/></case>
    <comment type="block" pos:line="559" pos:column="5">/*
     * user:password needed to use the proxy
     */</comment>
    <expr_stmt><expr><name><name pos:line="562" pos:column="5">data<pos:position pos:line="562" pos:column="9"/></name><operator pos:line="562" pos:column="9">-&gt;<pos:position pos:line="562" pos:column="14"/></operator><name pos:line="562" pos:column="11">set<pos:position pos:line="562" pos:column="14"/></name><operator pos:line="562" pos:column="14">.<pos:position pos:line="562" pos:column="15"/></operator><name pos:line="562" pos:column="15">proxyuserpwd<pos:position pos:line="562" pos:column="27"/></name></name> <operator pos:line="562" pos:column="28">=<pos:position pos:line="562" pos:column="29"/></operator> <call><name pos:line="562" pos:column="30">va_arg<pos:position pos:line="562" pos:column="36"/></name><argument_list pos:line="562" pos:column="36">(<argument><expr><name pos:line="562" pos:column="37">param<pos:position pos:line="562" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="44">char<pos:position pos:line="562" pos:column="48"/></name> <operator pos:line="562" pos:column="49">*<pos:position pos:line="562" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="562" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="562" pos:column="52"/></expr_stmt>
    <break pos:line="563" pos:column="5">break;<pos:position pos:line="563" pos:column="11"/></break>
  <case pos:line="564" pos:column="3">case <expr><name pos:line="564" pos:column="8">CURLOPT_RANGE<pos:position pos:line="564" pos:column="21"/></name></expr>:<pos:position pos:line="564" pos:column="22"/></case>
    <comment type="block" pos:line="565" pos:column="5">/*
     * What range of the file you want to transfer
     */</comment>
    <expr_stmt><expr><name><name pos:line="568" pos:column="5">data<pos:position pos:line="568" pos:column="9"/></name><operator pos:line="568" pos:column="9">-&gt;<pos:position pos:line="568" pos:column="14"/></operator><name pos:line="568" pos:column="11">set<pos:position pos:line="568" pos:column="14"/></name><operator pos:line="568" pos:column="14">.<pos:position pos:line="568" pos:column="15"/></operator><name pos:line="568" pos:column="15">set_range<pos:position pos:line="568" pos:column="24"/></name></name> <operator pos:line="568" pos:column="25">=<pos:position pos:line="568" pos:column="26"/></operator> <call><name pos:line="568" pos:column="27">va_arg<pos:position pos:line="568" pos:column="33"/></name><argument_list pos:line="568" pos:column="33">(<argument><expr><name pos:line="568" pos:column="34">param<pos:position pos:line="568" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="568" pos:column="41">char<pos:position pos:line="568" pos:column="45"/></name> <operator pos:line="568" pos:column="46">*<pos:position pos:line="568" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="568" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="49"/></expr_stmt>
    <break pos:line="569" pos:column="5">break;<pos:position pos:line="569" pos:column="11"/></break>
  <case pos:line="570" pos:column="3">case <expr><name pos:line="570" pos:column="8">CURLOPT_RESUME_FROM<pos:position pos:line="570" pos:column="27"/></name></expr>:<pos:position pos:line="570" pos:column="28"/></case>
    <comment type="block" pos:line="571" pos:column="5">/*
     * Resume transfer at the give file position
     */</comment>
    <expr_stmt><expr><name><name pos:line="574" pos:column="5">data<pos:position pos:line="574" pos:column="9"/></name><operator pos:line="574" pos:column="9">-&gt;<pos:position pos:line="574" pos:column="14"/></operator><name pos:line="574" pos:column="11">set<pos:position pos:line="574" pos:column="14"/></name><operator pos:line="574" pos:column="14">.<pos:position pos:line="574" pos:column="15"/></operator><name pos:line="574" pos:column="15">set_resume_from<pos:position pos:line="574" pos:column="30"/></name></name> <operator pos:line="574" pos:column="31">=<pos:position pos:line="574" pos:column="32"/></operator> <call><name pos:line="574" pos:column="33">va_arg<pos:position pos:line="574" pos:column="39"/></name><argument_list pos:line="574" pos:column="39">(<argument><expr><name pos:line="574" pos:column="40">param<pos:position pos:line="574" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="574" pos:column="47">long<pos:position pos:line="574" pos:column="51"/></name></expr></argument>)<pos:position pos:line="574" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="53"/></expr_stmt>
    <break pos:line="575" pos:column="5">break;<pos:position pos:line="575" pos:column="11"/></break>
  <case pos:line="576" pos:column="3">case <expr><name pos:line="576" pos:column="8">CURLOPT_DEBUGFUNCTION<pos:position pos:line="576" pos:column="29"/></name></expr>:<pos:position pos:line="576" pos:column="30"/></case>
    <comment type="block" pos:line="577" pos:column="5">/*
     * stderr write callback.
     */</comment>
    <expr_stmt><expr><name><name pos:line="580" pos:column="5">data<pos:position pos:line="580" pos:column="9"/></name><operator pos:line="580" pos:column="9">-&gt;<pos:position pos:line="580" pos:column="14"/></operator><name pos:line="580" pos:column="11">set<pos:position pos:line="580" pos:column="14"/></name><operator pos:line="580" pos:column="14">.<pos:position pos:line="580" pos:column="15"/></operator><name pos:line="580" pos:column="15">fdebug<pos:position pos:line="580" pos:column="21"/></name></name> <operator pos:line="580" pos:column="22">=<pos:position pos:line="580" pos:column="23"/></operator> <call><name pos:line="580" pos:column="24">va_arg<pos:position pos:line="580" pos:column="30"/></name><argument_list pos:line="580" pos:column="30">(<argument><expr><name pos:line="580" pos:column="31">param<pos:position pos:line="580" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="580" pos:column="38">curl_debug_callback<pos:position pos:line="580" pos:column="57"/></name></expr></argument>)<pos:position pos:line="580" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="580" pos:column="59"/></expr_stmt>
    <comment type="block" pos:line="581" pos:column="5">/*
     * if the callback provided is NULL, it'll use the default callback
     */</comment>
    <break pos:line="584" pos:column="5">break;<pos:position pos:line="584" pos:column="11"/></break>
  <case pos:line="585" pos:column="3">case <expr><name pos:line="585" pos:column="8">CURLOPT_DEBUGDATA<pos:position pos:line="585" pos:column="25"/></name></expr>:<pos:position pos:line="585" pos:column="26"/></case>
    <comment type="block" pos:line="586" pos:column="5">/*
     * Set to a void * that should receive all error writes. This
     * defaults to CURLOPT_STDERR for normal operations.
     */</comment>
    <expr_stmt><expr><name><name pos:line="590" pos:column="5">data<pos:position pos:line="590" pos:column="9"/></name><operator pos:line="590" pos:column="9">-&gt;<pos:position pos:line="590" pos:column="14"/></operator><name pos:line="590" pos:column="11">set<pos:position pos:line="590" pos:column="14"/></name><operator pos:line="590" pos:column="14">.<pos:position pos:line="590" pos:column="15"/></operator><name pos:line="590" pos:column="15">debugdata<pos:position pos:line="590" pos:column="24"/></name></name> <operator pos:line="590" pos:column="25">=<pos:position pos:line="590" pos:column="26"/></operator> <call><name pos:line="590" pos:column="27">va_arg<pos:position pos:line="590" pos:column="33"/></name><argument_list pos:line="590" pos:column="33">(<argument><expr><name pos:line="590" pos:column="34">param<pos:position pos:line="590" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="590" pos:column="41">void<pos:position pos:line="590" pos:column="45"/></name> <operator pos:line="590" pos:column="46">*<pos:position pos:line="590" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="590" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="590" pos:column="49"/></expr_stmt>
    <break pos:line="591" pos:column="5">break;<pos:position pos:line="591" pos:column="11"/></break>
  <case pos:line="592" pos:column="3">case <expr><name pos:line="592" pos:column="8">CURLOPT_STDERR<pos:position pos:line="592" pos:column="22"/></name></expr>:<pos:position pos:line="592" pos:column="23"/></case>
    <comment type="block" pos:line="593" pos:column="5">/*
     * Set to a FILE * that should receive all error writes. This
     * defaults to stderr for normal operations.
     */</comment>
    <expr_stmt><expr><name><name pos:line="597" pos:column="5">data<pos:position pos:line="597" pos:column="9"/></name><operator pos:line="597" pos:column="9">-&gt;<pos:position pos:line="597" pos:column="14"/></operator><name pos:line="597" pos:column="11">set<pos:position pos:line="597" pos:column="14"/></name><operator pos:line="597" pos:column="14">.<pos:position pos:line="597" pos:column="15"/></operator><name pos:line="597" pos:column="15">err<pos:position pos:line="597" pos:column="18"/></name></name> <operator pos:line="597" pos:column="19">=<pos:position pos:line="597" pos:column="20"/></operator> <call><name pos:line="597" pos:column="21">va_arg<pos:position pos:line="597" pos:column="27"/></name><argument_list pos:line="597" pos:column="27">(<argument><expr><name pos:line="597" pos:column="28">param<pos:position pos:line="597" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="35">FILE<pos:position pos:line="597" pos:column="39"/></name> <operator pos:line="597" pos:column="40">*<pos:position pos:line="597" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="597" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="43"/></expr_stmt>
    <if pos:line="598" pos:column="5">if<condition pos:line="598" pos:column="7">(<expr><operator pos:line="598" pos:column="8">!<pos:position pos:line="598" pos:column="9"/></operator><name><name pos:line="598" pos:column="9">data<pos:position pos:line="598" pos:column="13"/></name><operator pos:line="598" pos:column="13">-&gt;<pos:position pos:line="598" pos:column="18"/></operator><name pos:line="598" pos:column="15">set<pos:position pos:line="598" pos:column="18"/></name><operator pos:line="598" pos:column="18">.<pos:position pos:line="598" pos:column="19"/></operator><name pos:line="598" pos:column="19">err<pos:position pos:line="598" pos:column="22"/></name></name></expr>)<pos:position pos:line="598" pos:column="23"/></condition><then pos:line="598" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="599" pos:column="7">data<pos:position pos:line="599" pos:column="11"/></name><operator pos:line="599" pos:column="11">-&gt;<pos:position pos:line="599" pos:column="16"/></operator><name pos:line="599" pos:column="13">set<pos:position pos:line="599" pos:column="16"/></name><operator pos:line="599" pos:column="16">.<pos:position pos:line="599" pos:column="17"/></operator><name pos:line="599" pos:column="17">err<pos:position pos:line="599" pos:column="20"/></name></name> <operator pos:line="599" pos:column="21">=<pos:position pos:line="599" pos:column="22"/></operator> <name pos:line="599" pos:column="23">stderr<pos:position pos:line="599" pos:column="29"/></name></expr>;<pos:position pos:line="599" pos:column="30"/></expr_stmt></block></then></if>
    <break pos:line="600" pos:column="5">break;<pos:position pos:line="600" pos:column="11"/></break>
  <case pos:line="601" pos:column="3">case <expr><name pos:line="601" pos:column="8">CURLOPT_HEADERFUNCTION<pos:position pos:line="601" pos:column="30"/></name></expr>:<pos:position pos:line="601" pos:column="31"/></case>
    <comment type="block" pos:line="602" pos:column="5">/*
     * Set header write callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="605" pos:column="5">data<pos:position pos:line="605" pos:column="9"/></name><operator pos:line="605" pos:column="9">-&gt;<pos:position pos:line="605" pos:column="14"/></operator><name pos:line="605" pos:column="11">set<pos:position pos:line="605" pos:column="14"/></name><operator pos:line="605" pos:column="14">.<pos:position pos:line="605" pos:column="15"/></operator><name pos:line="605" pos:column="15">fwrite_header<pos:position pos:line="605" pos:column="28"/></name></name> <operator pos:line="605" pos:column="29">=<pos:position pos:line="605" pos:column="30"/></operator> <call><name pos:line="605" pos:column="31">va_arg<pos:position pos:line="605" pos:column="37"/></name><argument_list pos:line="605" pos:column="37">(<argument><expr><name pos:line="605" pos:column="38">param<pos:position pos:line="605" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="605" pos:column="45">curl_write_callback<pos:position pos:line="605" pos:column="64"/></name></expr></argument>)<pos:position pos:line="605" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="66"/></expr_stmt>
    <break pos:line="606" pos:column="5">break;<pos:position pos:line="606" pos:column="11"/></break>
  <case pos:line="607" pos:column="3">case <expr><name pos:line="607" pos:column="8">CURLOPT_WRITEFUNCTION<pos:position pos:line="607" pos:column="29"/></name></expr>:<pos:position pos:line="607" pos:column="30"/></case>
    <comment type="block" pos:line="608" pos:column="5">/*
     * Set data write callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="611" pos:column="5">data<pos:position pos:line="611" pos:column="9"/></name><operator pos:line="611" pos:column="9">-&gt;<pos:position pos:line="611" pos:column="14"/></operator><name pos:line="611" pos:column="11">set<pos:position pos:line="611" pos:column="14"/></name><operator pos:line="611" pos:column="14">.<pos:position pos:line="611" pos:column="15"/></operator><name pos:line="611" pos:column="15">fwrite<pos:position pos:line="611" pos:column="21"/></name></name> <operator pos:line="611" pos:column="22">=<pos:position pos:line="611" pos:column="23"/></operator> <call><name pos:line="611" pos:column="24">va_arg<pos:position pos:line="611" pos:column="30"/></name><argument_list pos:line="611" pos:column="30">(<argument><expr><name pos:line="611" pos:column="31">param<pos:position pos:line="611" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="611" pos:column="38">curl_write_callback<pos:position pos:line="611" pos:column="57"/></name></expr></argument>)<pos:position pos:line="611" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="59"/></expr_stmt>
    <break pos:line="612" pos:column="5">break;<pos:position pos:line="612" pos:column="11"/></break>
  <case pos:line="613" pos:column="3">case <expr><name pos:line="613" pos:column="8">CURLOPT_READFUNCTION<pos:position pos:line="613" pos:column="28"/></name></expr>:<pos:position pos:line="613" pos:column="29"/></case>
    <comment type="block" pos:line="614" pos:column="5">/*
     * Read data callback
     */</comment>
    <expr_stmt><expr><name><name pos:line="617" pos:column="5">data<pos:position pos:line="617" pos:column="9"/></name><operator pos:line="617" pos:column="9">-&gt;<pos:position pos:line="617" pos:column="14"/></operator><name pos:line="617" pos:column="11">set<pos:position pos:line="617" pos:column="14"/></name><operator pos:line="617" pos:column="14">.<pos:position pos:line="617" pos:column="15"/></operator><name pos:line="617" pos:column="15">fread<pos:position pos:line="617" pos:column="20"/></name></name> <operator pos:line="617" pos:column="21">=<pos:position pos:line="617" pos:column="22"/></operator> <call><name pos:line="617" pos:column="23">va_arg<pos:position pos:line="617" pos:column="29"/></name><argument_list pos:line="617" pos:column="29">(<argument><expr><name pos:line="617" pos:column="30">param<pos:position pos:line="617" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="617" pos:column="37">curl_read_callback<pos:position pos:line="617" pos:column="55"/></name></expr></argument>)<pos:position pos:line="617" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="617" pos:column="57"/></expr_stmt>
    <break pos:line="618" pos:column="5">break;<pos:position pos:line="618" pos:column="11"/></break>
  <case pos:line="619" pos:column="3">case <expr><name pos:line="619" pos:column="8">CURLOPT_SSLCERT<pos:position pos:line="619" pos:column="23"/></name></expr>:<pos:position pos:line="619" pos:column="24"/></case>
    <comment type="block" pos:line="620" pos:column="5">/*
     * String that holds file name of the SSL certificate to use
     */</comment>
    <expr_stmt><expr><name><name pos:line="623" pos:column="5">data<pos:position pos:line="623" pos:column="9"/></name><operator pos:line="623" pos:column="9">-&gt;<pos:position pos:line="623" pos:column="14"/></operator><name pos:line="623" pos:column="11">set<pos:position pos:line="623" pos:column="14"/></name><operator pos:line="623" pos:column="14">.<pos:position pos:line="623" pos:column="15"/></operator><name pos:line="623" pos:column="15">cert<pos:position pos:line="623" pos:column="19"/></name></name> <operator pos:line="623" pos:column="20">=<pos:position pos:line="623" pos:column="21"/></operator> <call><name pos:line="623" pos:column="22">va_arg<pos:position pos:line="623" pos:column="28"/></name><argument_list pos:line="623" pos:column="28">(<argument><expr><name pos:line="623" pos:column="29">param<pos:position pos:line="623" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="623" pos:column="36">char<pos:position pos:line="623" pos:column="40"/></name> <operator pos:line="623" pos:column="41">*<pos:position pos:line="623" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="623" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="623" pos:column="44"/></expr_stmt>
    <break pos:line="624" pos:column="5">break;<pos:position pos:line="624" pos:column="11"/></break>
  <case pos:line="625" pos:column="3">case <expr><name pos:line="625" pos:column="8">CURLOPT_SSLCERTTYPE<pos:position pos:line="625" pos:column="27"/></name></expr>:<pos:position pos:line="625" pos:column="28"/></case>
    <comment type="block" pos:line="626" pos:column="5">/*
     * String that holds file type of the SSL certificate to use
     */</comment>
    <expr_stmt><expr><name><name pos:line="629" pos:column="5">data<pos:position pos:line="629" pos:column="9"/></name><operator pos:line="629" pos:column="9">-&gt;<pos:position pos:line="629" pos:column="14"/></operator><name pos:line="629" pos:column="11">set<pos:position pos:line="629" pos:column="14"/></name><operator pos:line="629" pos:column="14">.<pos:position pos:line="629" pos:column="15"/></operator><name pos:line="629" pos:column="15">cert_type<pos:position pos:line="629" pos:column="24"/></name></name> <operator pos:line="629" pos:column="25">=<pos:position pos:line="629" pos:column="26"/></operator> <call><name pos:line="629" pos:column="27">va_arg<pos:position pos:line="629" pos:column="33"/></name><argument_list pos:line="629" pos:column="33">(<argument><expr><name pos:line="629" pos:column="34">param<pos:position pos:line="629" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="629" pos:column="41">char<pos:position pos:line="629" pos:column="45"/></name> <operator pos:line="629" pos:column="46">*<pos:position pos:line="629" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="629" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="629" pos:column="49"/></expr_stmt>
    <break pos:line="630" pos:column="5">break;<pos:position pos:line="630" pos:column="11"/></break>
  <case pos:line="631" pos:column="3">case <expr><name pos:line="631" pos:column="8">CURLOPT_SSLKEY<pos:position pos:line="631" pos:column="22"/></name></expr>:<pos:position pos:line="631" pos:column="23"/></case>
    <comment type="block" pos:line="632" pos:column="5">/*
     * String that holds file name of the SSL certificate to use
     */</comment>
    <expr_stmt><expr><name><name pos:line="635" pos:column="5">data<pos:position pos:line="635" pos:column="9"/></name><operator pos:line="635" pos:column="9">-&gt;<pos:position pos:line="635" pos:column="14"/></operator><name pos:line="635" pos:column="11">set<pos:position pos:line="635" pos:column="14"/></name><operator pos:line="635" pos:column="14">.<pos:position pos:line="635" pos:column="15"/></operator><name pos:line="635" pos:column="15">key<pos:position pos:line="635" pos:column="18"/></name></name> <operator pos:line="635" pos:column="19">=<pos:position pos:line="635" pos:column="20"/></operator> <call><name pos:line="635" pos:column="21">va_arg<pos:position pos:line="635" pos:column="27"/></name><argument_list pos:line="635" pos:column="27">(<argument><expr><name pos:line="635" pos:column="28">param<pos:position pos:line="635" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="35">char<pos:position pos:line="635" pos:column="39"/></name> <operator pos:line="635" pos:column="40">*<pos:position pos:line="635" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="635" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="635" pos:column="43"/></expr_stmt>
    <break pos:line="636" pos:column="5">break;<pos:position pos:line="636" pos:column="11"/></break>
  <case pos:line="637" pos:column="3">case <expr><name pos:line="637" pos:column="8">CURLOPT_SSLKEYTYPE<pos:position pos:line="637" pos:column="26"/></name></expr>:<pos:position pos:line="637" pos:column="27"/></case>
    <comment type="block" pos:line="638" pos:column="5">/*
     * String that holds file type of the SSL certificate to use
     */</comment>
    <expr_stmt><expr><name><name pos:line="641" pos:column="5">data<pos:position pos:line="641" pos:column="9"/></name><operator pos:line="641" pos:column="9">-&gt;<pos:position pos:line="641" pos:column="14"/></operator><name pos:line="641" pos:column="11">set<pos:position pos:line="641" pos:column="14"/></name><operator pos:line="641" pos:column="14">.<pos:position pos:line="641" pos:column="15"/></operator><name pos:line="641" pos:column="15">key_type<pos:position pos:line="641" pos:column="23"/></name></name> <operator pos:line="641" pos:column="24">=<pos:position pos:line="641" pos:column="25"/></operator> <call><name pos:line="641" pos:column="26">va_arg<pos:position pos:line="641" pos:column="32"/></name><argument_list pos:line="641" pos:column="32">(<argument><expr><name pos:line="641" pos:column="33">param<pos:position pos:line="641" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="641" pos:column="40">char<pos:position pos:line="641" pos:column="44"/></name> <operator pos:line="641" pos:column="45">*<pos:position pos:line="641" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="641" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="641" pos:column="48"/></expr_stmt>
    <break pos:line="642" pos:column="5">break;<pos:position pos:line="642" pos:column="11"/></break>
  <case pos:line="643" pos:column="3">case <expr><name pos:line="643" pos:column="8">CURLOPT_SSLKEYPASSWD<pos:position pos:line="643" pos:column="28"/></name></expr>:<pos:position pos:line="643" pos:column="29"/></case>
    <comment type="block" pos:line="644" pos:column="5">/*
     * String that holds the SSL private key password.
     */</comment>
    <expr_stmt><expr><name><name pos:line="647" pos:column="5">data<pos:position pos:line="647" pos:column="9"/></name><operator pos:line="647" pos:column="9">-&gt;<pos:position pos:line="647" pos:column="14"/></operator><name pos:line="647" pos:column="11">set<pos:position pos:line="647" pos:column="14"/></name><operator pos:line="647" pos:column="14">.<pos:position pos:line="647" pos:column="15"/></operator><name pos:line="647" pos:column="15">key_passwd<pos:position pos:line="647" pos:column="25"/></name></name> <operator pos:line="647" pos:column="26">=<pos:position pos:line="647" pos:column="27"/></operator> <call><name pos:line="647" pos:column="28">va_arg<pos:position pos:line="647" pos:column="34"/></name><argument_list pos:line="647" pos:column="34">(<argument><expr><name pos:line="647" pos:column="35">param<pos:position pos:line="647" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="647" pos:column="42">char<pos:position pos:line="647" pos:column="46"/></name> <operator pos:line="647" pos:column="47">*<pos:position pos:line="647" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="647" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="50"/></expr_stmt>
    <break pos:line="648" pos:column="5">break;<pos:position pos:line="648" pos:column="11"/></break>
  <case pos:line="649" pos:column="3">case <expr><name pos:line="649" pos:column="8">CURLOPT_SSLENGINE<pos:position pos:line="649" pos:column="25"/></name></expr>:<pos:position pos:line="649" pos:column="26"/></case>
    <comment type="block" pos:line="650" pos:column="5">/*
     * String that holds the SSL crypto engine.
     */</comment>
<cpp:ifdef pos:line="653" pos:column="1">#<cpp:directive pos:line="653" pos:column="2">ifdef<pos:position pos:line="653" pos:column="7"/></cpp:directive> <name pos:line="653" pos:column="8">HAVE_OPENSSL_ENGINE_H<pos:position pos:line="653" pos:column="29"/></name></cpp:ifdef>
    <block pos:line="654" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="655" pos:column="7">const<pos:position pos:line="655" pos:column="12"/></specifier> <name pos:line="655" pos:column="13">char<pos:position pos:line="655" pos:column="17"/></name> <modifier pos:line="655" pos:column="18">*<pos:position pos:line="655" pos:column="19"/></modifier></type><name pos:line="655" pos:column="19">cpTemp<pos:position pos:line="655" pos:column="25"/></name> <init pos:line="655" pos:column="26">= <expr><call><name pos:line="655" pos:column="28">va_arg<pos:position pos:line="655" pos:column="34"/></name><argument_list pos:line="655" pos:column="34">(<argument><expr><name pos:line="655" pos:column="35">param<pos:position pos:line="655" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="655" pos:column="42">char<pos:position pos:line="655" pos:column="46"/></name> <operator pos:line="655" pos:column="47">*<pos:position pos:line="655" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="655" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="655" pos:column="50"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="656" pos:column="7">ENGINE<pos:position pos:line="656" pos:column="13"/></name>     <modifier pos:line="656" pos:column="18">*<pos:position pos:line="656" pos:column="19"/></modifier></type><name pos:line="656" pos:column="19">e<pos:position pos:line="656" pos:column="20"/></name></decl>;<pos:position pos:line="656" pos:column="21"/></decl_stmt>
      <if pos:line="657" pos:column="7">if <condition pos:line="657" pos:column="10">(<expr><name pos:line="657" pos:column="11">cpTemp<pos:position pos:line="657" pos:column="17"/></name> <operator pos:line="657" pos:column="18">&amp;&amp;<pos:position pos:line="657" pos:column="28"/></operator> <name><name pos:line="657" pos:column="21">cpTemp<pos:position pos:line="657" pos:column="27"/></name><index pos:line="657" pos:column="27">[<expr><literal type="number" pos:line="657" pos:column="28">0<pos:position pos:line="657" pos:column="29"/></literal></expr>]<pos:position pos:line="657" pos:column="30"/></index></name></expr>)<pos:position pos:line="657" pos:column="31"/></condition><then pos:line="657" pos:column="31"> <block pos:line="657" pos:column="32">{
        <expr_stmt><expr><name pos:line="658" pos:column="9">e<pos:position pos:line="658" pos:column="10"/></name> <operator pos:line="658" pos:column="11">=<pos:position pos:line="658" pos:column="12"/></operator> <call><name pos:line="658" pos:column="13">ENGINE_by_id<pos:position pos:line="658" pos:column="25"/></name><argument_list pos:line="658" pos:column="25">(<argument><expr><name pos:line="658" pos:column="26">cpTemp<pos:position pos:line="658" pos:column="32"/></name></expr></argument>)<pos:position pos:line="658" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="658" pos:column="34"/></expr_stmt>
        <if pos:line="659" pos:column="9">if <condition pos:line="659" pos:column="12">(<expr><name pos:line="659" pos:column="13">e<pos:position pos:line="659" pos:column="14"/></name></expr>)<pos:position pos:line="659" pos:column="15"/></condition><then pos:line="659" pos:column="15"> <block pos:line="659" pos:column="16">{
          <if pos:line="660" pos:column="11">if <condition pos:line="660" pos:column="14">(<expr><name><name pos:line="660" pos:column="15">data<pos:position pos:line="660" pos:column="19"/></name><operator pos:line="660" pos:column="19">-&gt;<pos:position pos:line="660" pos:column="24"/></operator><name pos:line="660" pos:column="21">engine<pos:position pos:line="660" pos:column="27"/></name></name></expr>)<pos:position pos:line="660" pos:column="28"/></condition><then pos:line="660" pos:column="28"> <block pos:line="660" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="661" pos:column="13">ENGINE_free<pos:position pos:line="661" pos:column="24"/></name><argument_list pos:line="661" pos:column="24">(<argument><expr><name><name pos:line="661" pos:column="25">data<pos:position pos:line="661" pos:column="29"/></name><operator pos:line="661" pos:column="29">-&gt;<pos:position pos:line="661" pos:column="34"/></operator><name pos:line="661" pos:column="31">engine<pos:position pos:line="661" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="661" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="661" pos:column="39"/></expr_stmt>
          }<pos:position pos:line="662" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name><name pos:line="663" pos:column="11">data<pos:position pos:line="663" pos:column="15"/></name><operator pos:line="663" pos:column="15">-&gt;<pos:position pos:line="663" pos:column="20"/></operator><name pos:line="663" pos:column="17">engine<pos:position pos:line="663" pos:column="23"/></name></name> <operator pos:line="663" pos:column="24">=<pos:position pos:line="663" pos:column="25"/></operator> <name pos:line="663" pos:column="26">e<pos:position pos:line="663" pos:column="27"/></name></expr>;<pos:position pos:line="663" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="664" pos:column="10"/></block></then>
        <else pos:line="665" pos:column="9">else <block pos:line="665" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="666" pos:column="11">failf<pos:position pos:line="666" pos:column="16"/></name><argument_list pos:line="666" pos:column="16">(<argument><expr><name pos:line="666" pos:column="17">data<pos:position pos:line="666" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="666" pos:column="23">"SSL Engine '%s' not found"<pos:position pos:line="666" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="666" pos:column="52">cpTemp<pos:position pos:line="666" pos:column="58"/></name></expr></argument>)<pos:position pos:line="666" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="60"/></expr_stmt>
          <return pos:line="667" pos:column="11">return <expr><name pos:line="667" pos:column="18">CURLE_SSL_ENGINE_NOTFOUND<pos:position pos:line="667" pos:column="43"/></name></expr>;<pos:position pos:line="667" pos:column="44"/></return>
        }<pos:position pos:line="668" pos:column="10"/></block></else></if>
      }<pos:position pos:line="669" pos:column="8"/></block></then></if>
    }<pos:position pos:line="670" pos:column="6"/></block>
<cpp:else pos:line="671" pos:column="1">#<cpp:directive pos:line="671" pos:column="2">else<pos:position pos:line="671" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="672" pos:column="5">return <expr><name pos:line="672" pos:column="12">CURLE_SSL_ENGINE_NOTFOUND<pos:position pos:line="672" pos:column="37"/></name></expr>;<pos:position pos:line="672" pos:column="38"/></return>
<cpp:endif pos:line="673" pos:column="1">#<cpp:directive pos:line="673" pos:column="2">endif<pos:position pos:line="673" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="674" pos:column="5">break;<pos:position pos:line="674" pos:column="11"/></break>
  <case pos:line="675" pos:column="3">case <expr><name pos:line="675" pos:column="8">CURLOPT_SSLENGINE_DEFAULT<pos:position pos:line="675" pos:column="33"/></name></expr>:<pos:position pos:line="675" pos:column="34"/></case>
    <comment type="block" pos:line="676" pos:column="5">/*
     * flag to set engine as default.
     */</comment>
<cpp:ifdef pos:line="679" pos:column="1">#<cpp:directive pos:line="679" pos:column="2">ifdef<pos:position pos:line="679" pos:column="7"/></cpp:directive> <name pos:line="679" pos:column="8">HAVE_OPENSSL_ENGINE_H<pos:position pos:line="679" pos:column="29"/></name></cpp:ifdef>
    <if pos:line="680" pos:column="5">if <condition pos:line="680" pos:column="8">(<expr><name><name pos:line="680" pos:column="9">data<pos:position pos:line="680" pos:column="13"/></name><operator pos:line="680" pos:column="13">-&gt;<pos:position pos:line="680" pos:column="18"/></operator><name pos:line="680" pos:column="15">engine<pos:position pos:line="680" pos:column="21"/></name></name></expr>)<pos:position pos:line="680" pos:column="22"/></condition><then pos:line="680" pos:column="22"> <block pos:line="680" pos:column="23">{
      <if pos:line="681" pos:column="7">if <condition pos:line="681" pos:column="10">(<expr><call><name pos:line="681" pos:column="11">ENGINE_set_default<pos:position pos:line="681" pos:column="29"/></name><argument_list pos:line="681" pos:column="29">(<argument><expr><name><name pos:line="681" pos:column="30">data<pos:position pos:line="681" pos:column="34"/></name><operator pos:line="681" pos:column="34">-&gt;<pos:position pos:line="681" pos:column="39"/></operator><name pos:line="681" pos:column="36">engine<pos:position pos:line="681" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="681" pos:column="44">ENGINE_METHOD_ALL<pos:position pos:line="681" pos:column="61"/></name></expr></argument>)<pos:position pos:line="681" pos:column="62"/></argument_list></call> <operator pos:line="681" pos:column="63">&gt;<pos:position pos:line="681" pos:column="67"/></operator> <literal type="number" pos:line="681" pos:column="65">0<pos:position pos:line="681" pos:column="66"/></literal></expr>)<pos:position pos:line="681" pos:column="67"/></condition><then pos:line="681" pos:column="67"> <block pos:line="681" pos:column="68">{
<cpp:ifdef pos:line="682" pos:column="1">#<cpp:directive pos:line="682" pos:column="2">ifdef<pos:position pos:line="682" pos:column="7"/></cpp:directive> <name pos:line="682" pos:column="8">DEBUG<pos:position pos:line="682" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="683" pos:column="9">fprintf<pos:position pos:line="683" pos:column="16"/></name><argument_list pos:line="683" pos:column="16">(<argument><expr><name pos:line="683" pos:column="17">stderr<pos:position pos:line="683" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="683" pos:column="24">"set default crypto engine\n"<pos:position pos:line="683" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="683" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="683" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="684" pos:column="1">#<cpp:directive pos:line="684" pos:column="2">endif<pos:position pos:line="684" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="685" pos:column="8"/></block></then>
      <else pos:line="686" pos:column="7">else <block pos:line="686" pos:column="12">{
<cpp:ifdef pos:line="687" pos:column="1">#<cpp:directive pos:line="687" pos:column="2">ifdef<pos:position pos:line="687" pos:column="7"/></cpp:directive> <name pos:line="687" pos:column="8">DEBUG<pos:position pos:line="687" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="688" pos:column="9">failf<pos:position pos:line="688" pos:column="14"/></name><argument_list pos:line="688" pos:column="14">(<argument><expr><name pos:line="688" pos:column="15">data<pos:position pos:line="688" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="688" pos:column="21">"set default crypto engine failed"<pos:position pos:line="688" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="688" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="688" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="689" pos:column="1">#<cpp:directive pos:line="689" pos:column="2">endif<pos:position pos:line="689" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="690" pos:column="9">return <expr><name pos:line="690" pos:column="16">CURLE_SSL_ENGINE_SETFAILED<pos:position pos:line="690" pos:column="42"/></name></expr>;<pos:position pos:line="690" pos:column="43"/></return>
      }<pos:position pos:line="691" pos:column="8"/></block></else></if>
    }<pos:position pos:line="692" pos:column="6"/></block></then></if>
<cpp:endif pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">endif<pos:position pos:line="693" pos:column="7"/></cpp:directive></cpp:endif>
    <break pos:line="694" pos:column="5">break;<pos:position pos:line="694" pos:column="11"/></break>
  <case pos:line="695" pos:column="3">case <expr><name pos:line="695" pos:column="8">CURLOPT_CRLF<pos:position pos:line="695" pos:column="20"/></name></expr>:<pos:position pos:line="695" pos:column="21"/></case>
    <comment type="block" pos:line="696" pos:column="5">/*
     * Kludgy option to enable CRLF convertions. Subject for removal.
     */</comment>
    <expr_stmt><expr><name><name pos:line="699" pos:column="5">data<pos:position pos:line="699" pos:column="9"/></name><operator pos:line="699" pos:column="9">-&gt;<pos:position pos:line="699" pos:column="14"/></operator><name pos:line="699" pos:column="11">set<pos:position pos:line="699" pos:column="14"/></name><operator pos:line="699" pos:column="14">.<pos:position pos:line="699" pos:column="15"/></operator><name pos:line="699" pos:column="15">crlf<pos:position pos:line="699" pos:column="19"/></name></name> <operator pos:line="699" pos:column="20">=<pos:position pos:line="699" pos:column="21"/></operator> <ternary><condition><expr><call><name pos:line="699" pos:column="22">va_arg<pos:position pos:line="699" pos:column="28"/></name><argument_list pos:line="699" pos:column="28">(<argument><expr><name pos:line="699" pos:column="29">param<pos:position pos:line="699" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="36">long<pos:position pos:line="699" pos:column="40"/></name></expr></argument>)<pos:position pos:line="699" pos:column="41"/></argument_list></call></expr>?<pos:position pos:line="699" pos:column="42"/></condition><then><expr><name pos:line="699" pos:column="42">TRUE<pos:position pos:line="699" pos:column="46"/></name></expr></then><else pos:line="699" pos:column="46">:<expr><name pos:line="699" pos:column="47">FALSE<pos:position pos:line="699" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="699" pos:column="53"/></expr_stmt>
    <break pos:line="700" pos:column="5">break;<pos:position pos:line="700" pos:column="11"/></break>
  <case pos:line="701" pos:column="3">case <expr><name pos:line="701" pos:column="8">CURLOPT_INTERFACE<pos:position pos:line="701" pos:column="25"/></name></expr>:<pos:position pos:line="701" pos:column="26"/></case>
    <comment type="block" pos:line="702" pos:column="5">/*
     * Set what interface to bind to when performing an operation and thus
     * what from-IP your connection will use.
     */</comment>
    <expr_stmt><expr><name><name pos:line="706" pos:column="5">data<pos:position pos:line="706" pos:column="9"/></name><operator pos:line="706" pos:column="9">-&gt;<pos:position pos:line="706" pos:column="14"/></operator><name pos:line="706" pos:column="11">set<pos:position pos:line="706" pos:column="14"/></name><operator pos:line="706" pos:column="14">.<pos:position pos:line="706" pos:column="15"/></operator><name pos:line="706" pos:column="15">device<pos:position pos:line="706" pos:column="21"/></name></name> <operator pos:line="706" pos:column="22">=<pos:position pos:line="706" pos:column="23"/></operator> <call><name pos:line="706" pos:column="24">va_arg<pos:position pos:line="706" pos:column="30"/></name><argument_list pos:line="706" pos:column="30">(<argument><expr><name pos:line="706" pos:column="31">param<pos:position pos:line="706" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="706" pos:column="38">char<pos:position pos:line="706" pos:column="42"/></name> <operator pos:line="706" pos:column="43">*<pos:position pos:line="706" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="706" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="706" pos:column="46"/></expr_stmt>
    <break pos:line="707" pos:column="5">break;<pos:position pos:line="707" pos:column="11"/></break>
  <case pos:line="708" pos:column="3">case <expr><name pos:line="708" pos:column="8">CURLOPT_KRB4LEVEL<pos:position pos:line="708" pos:column="25"/></name></expr>:<pos:position pos:line="708" pos:column="26"/></case>
    <comment type="block" pos:line="709" pos:column="5">/*
     * A string that defines the krb4 security level.
     */</comment>
    <expr_stmt><expr><name><name pos:line="712" pos:column="5">data<pos:position pos:line="712" pos:column="9"/></name><operator pos:line="712" pos:column="9">-&gt;<pos:position pos:line="712" pos:column="14"/></operator><name pos:line="712" pos:column="11">set<pos:position pos:line="712" pos:column="14"/></name><operator pos:line="712" pos:column="14">.<pos:position pos:line="712" pos:column="15"/></operator><name pos:line="712" pos:column="15">krb4_level<pos:position pos:line="712" pos:column="25"/></name></name> <operator pos:line="712" pos:column="26">=<pos:position pos:line="712" pos:column="27"/></operator> <call><name pos:line="712" pos:column="28">va_arg<pos:position pos:line="712" pos:column="34"/></name><argument_list pos:line="712" pos:column="34">(<argument><expr><name pos:line="712" pos:column="35">param<pos:position pos:line="712" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="712" pos:column="42">char<pos:position pos:line="712" pos:column="46"/></name> <operator pos:line="712" pos:column="47">*<pos:position pos:line="712" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="712" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="712" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="713" pos:column="5">data<pos:position pos:line="713" pos:column="9"/></name><operator pos:line="713" pos:column="9">-&gt;<pos:position pos:line="713" pos:column="14"/></operator><name pos:line="713" pos:column="11">set<pos:position pos:line="713" pos:column="14"/></name><operator pos:line="713" pos:column="14">.<pos:position pos:line="713" pos:column="15"/></operator><name pos:line="713" pos:column="15">krb4<pos:position pos:line="713" pos:column="19"/></name></name><operator pos:line="713" pos:column="19">=<pos:position pos:line="713" pos:column="20"/></operator><ternary><condition><expr><name><name pos:line="713" pos:column="20">data<pos:position pos:line="713" pos:column="24"/></name><operator pos:line="713" pos:column="24">-&gt;<pos:position pos:line="713" pos:column="29"/></operator><name pos:line="713" pos:column="26">set<pos:position pos:line="713" pos:column="29"/></name><operator pos:line="713" pos:column="29">.<pos:position pos:line="713" pos:column="30"/></operator><name pos:line="713" pos:column="30">krb4_level<pos:position pos:line="713" pos:column="40"/></name></name></expr>?<pos:position pos:line="713" pos:column="41"/></condition><then><expr><name pos:line="713" pos:column="41">TRUE<pos:position pos:line="713" pos:column="45"/></name></expr></then><else pos:line="713" pos:column="45">:<expr><name pos:line="713" pos:column="46">FALSE<pos:position pos:line="713" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="713" pos:column="52"/></expr_stmt>
    <break pos:line="714" pos:column="5">break;<pos:position pos:line="714" pos:column="11"/></break>
  <case pos:line="715" pos:column="3">case <expr><name pos:line="715" pos:column="8">CURLOPT_SSL_VERIFYPEER<pos:position pos:line="715" pos:column="30"/></name></expr>:<pos:position pos:line="715" pos:column="31"/></case>
    <comment type="block" pos:line="716" pos:column="5">/*
     * Enable peer SSL verifying.
     */</comment>
    <expr_stmt><expr><name><name pos:line="719" pos:column="5">data<pos:position pos:line="719" pos:column="9"/></name><operator pos:line="719" pos:column="9">-&gt;<pos:position pos:line="719" pos:column="14"/></operator><name pos:line="719" pos:column="11">set<pos:position pos:line="719" pos:column="14"/></name><operator pos:line="719" pos:column="14">.<pos:position pos:line="719" pos:column="15"/></operator><name pos:line="719" pos:column="15">ssl<pos:position pos:line="719" pos:column="18"/></name><operator pos:line="719" pos:column="18">.<pos:position pos:line="719" pos:column="19"/></operator><name pos:line="719" pos:column="19">verifypeer<pos:position pos:line="719" pos:column="29"/></name></name> <operator pos:line="719" pos:column="30">=<pos:position pos:line="719" pos:column="31"/></operator> <call><name pos:line="719" pos:column="32">va_arg<pos:position pos:line="719" pos:column="38"/></name><argument_list pos:line="719" pos:column="38">(<argument><expr><name pos:line="719" pos:column="39">param<pos:position pos:line="719" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="719" pos:column="46">long<pos:position pos:line="719" pos:column="50"/></name></expr></argument>)<pos:position pos:line="719" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="719" pos:column="52"/></expr_stmt>
    <break pos:line="720" pos:column="5">break;<pos:position pos:line="720" pos:column="11"/></break>
  <case pos:line="721" pos:column="3">case <expr><name pos:line="721" pos:column="8">CURLOPT_SSL_VERIFYHOST<pos:position pos:line="721" pos:column="30"/></name></expr>:<pos:position pos:line="721" pos:column="31"/></case>
    <comment type="block" pos:line="722" pos:column="5">/*
     * Enable verification of the CN contained in the peer certificate
     */</comment>
    <expr_stmt><expr><name><name pos:line="725" pos:column="5">data<pos:position pos:line="725" pos:column="9"/></name><operator pos:line="725" pos:column="9">-&gt;<pos:position pos:line="725" pos:column="14"/></operator><name pos:line="725" pos:column="11">set<pos:position pos:line="725" pos:column="14"/></name><operator pos:line="725" pos:column="14">.<pos:position pos:line="725" pos:column="15"/></operator><name pos:line="725" pos:column="15">ssl<pos:position pos:line="725" pos:column="18"/></name><operator pos:line="725" pos:column="18">.<pos:position pos:line="725" pos:column="19"/></operator><name pos:line="725" pos:column="19">verifyhost<pos:position pos:line="725" pos:column="29"/></name></name> <operator pos:line="725" pos:column="30">=<pos:position pos:line="725" pos:column="31"/></operator> <call><name pos:line="725" pos:column="32">va_arg<pos:position pos:line="725" pos:column="38"/></name><argument_list pos:line="725" pos:column="38">(<argument><expr><name pos:line="725" pos:column="39">param<pos:position pos:line="725" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="725" pos:column="46">long<pos:position pos:line="725" pos:column="50"/></name></expr></argument>)<pos:position pos:line="725" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="725" pos:column="52"/></expr_stmt>
    <break pos:line="726" pos:column="5">break;<pos:position pos:line="726" pos:column="11"/></break>
  <case pos:line="727" pos:column="3">case <expr><name pos:line="727" pos:column="8">CURLOPT_CAINFO<pos:position pos:line="727" pos:column="22"/></name></expr>:<pos:position pos:line="727" pos:column="23"/></case>
    <comment type="block" pos:line="728" pos:column="5">/*
     * Set CA info for SSL connection. Specify file name of the CA certificate
     */</comment>
    <expr_stmt><expr><name><name pos:line="731" pos:column="5">data<pos:position pos:line="731" pos:column="9"/></name><operator pos:line="731" pos:column="9">-&gt;<pos:position pos:line="731" pos:column="14"/></operator><name pos:line="731" pos:column="11">set<pos:position pos:line="731" pos:column="14"/></name><operator pos:line="731" pos:column="14">.<pos:position pos:line="731" pos:column="15"/></operator><name pos:line="731" pos:column="15">ssl<pos:position pos:line="731" pos:column="18"/></name><operator pos:line="731" pos:column="18">.<pos:position pos:line="731" pos:column="19"/></operator><name pos:line="731" pos:column="19">CAfile<pos:position pos:line="731" pos:column="25"/></name></name> <operator pos:line="731" pos:column="26">=<pos:position pos:line="731" pos:column="27"/></operator> <call><name pos:line="731" pos:column="28">va_arg<pos:position pos:line="731" pos:column="34"/></name><argument_list pos:line="731" pos:column="34">(<argument><expr><name pos:line="731" pos:column="35">param<pos:position pos:line="731" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="42">char<pos:position pos:line="731" pos:column="46"/></name> <operator pos:line="731" pos:column="47">*<pos:position pos:line="731" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="731" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="50"/></expr_stmt>
    <break pos:line="732" pos:column="5">break;<pos:position pos:line="732" pos:column="11"/></break>
  <case pos:line="733" pos:column="3">case <expr><name pos:line="733" pos:column="8">CURLOPT_CAPATH<pos:position pos:line="733" pos:column="22"/></name></expr>:<pos:position pos:line="733" pos:column="23"/></case>
    <comment type="block" pos:line="734" pos:column="5">/*
     * Set CA path info for SSL connection. Specify directory name of the CA
     * certificates which have been prepared using openssl c_rehash utility.
     */</comment>
    <comment type="block" pos:line="738" pos:column="5">/* This does not work on windows. */</comment>
    <expr_stmt><expr><name><name pos:line="739" pos:column="5">data<pos:position pos:line="739" pos:column="9"/></name><operator pos:line="739" pos:column="9">-&gt;<pos:position pos:line="739" pos:column="14"/></operator><name pos:line="739" pos:column="11">set<pos:position pos:line="739" pos:column="14"/></name><operator pos:line="739" pos:column="14">.<pos:position pos:line="739" pos:column="15"/></operator><name pos:line="739" pos:column="15">ssl<pos:position pos:line="739" pos:column="18"/></name><operator pos:line="739" pos:column="18">.<pos:position pos:line="739" pos:column="19"/></operator><name pos:line="739" pos:column="19">CApath<pos:position pos:line="739" pos:column="25"/></name></name> <operator pos:line="739" pos:column="26">=<pos:position pos:line="739" pos:column="27"/></operator> <call><name pos:line="739" pos:column="28">va_arg<pos:position pos:line="739" pos:column="34"/></name><argument_list pos:line="739" pos:column="34">(<argument><expr><name pos:line="739" pos:column="35">param<pos:position pos:line="739" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="739" pos:column="42">char<pos:position pos:line="739" pos:column="46"/></name> <operator pos:line="739" pos:column="47">*<pos:position pos:line="739" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="739" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="739" pos:column="50"/></expr_stmt>
    <break pos:line="740" pos:column="5">break;<pos:position pos:line="740" pos:column="11"/></break>
  <case pos:line="741" pos:column="3">case <expr><name pos:line="741" pos:column="8">CURLOPT_TELNETOPTIONS<pos:position pos:line="741" pos:column="29"/></name></expr>:<pos:position pos:line="741" pos:column="30"/></case>
    <comment type="block" pos:line="742" pos:column="5">/*
     * Set a linked list of telnet options
     */</comment>
    <expr_stmt><expr><name><name pos:line="745" pos:column="5">data<pos:position pos:line="745" pos:column="9"/></name><operator pos:line="745" pos:column="9">-&gt;<pos:position pos:line="745" pos:column="14"/></operator><name pos:line="745" pos:column="11">set<pos:position pos:line="745" pos:column="14"/></name><operator pos:line="745" pos:column="14">.<pos:position pos:line="745" pos:column="15"/></operator><name pos:line="745" pos:column="15">telnet_options<pos:position pos:line="745" pos:column="29"/></name></name> <operator pos:line="745" pos:column="30">=<pos:position pos:line="745" pos:column="31"/></operator> <call><name pos:line="745" pos:column="32">va_arg<pos:position pos:line="745" pos:column="38"/></name><argument_list pos:line="745" pos:column="38">(<argument><expr><name pos:line="745" pos:column="39">param<pos:position pos:line="745" pos:column="44"/></name></expr></argument>, <argument><expr pos:line="745" pos:column="46">struct <name pos:line="745" pos:column="53">curl_slist<pos:position pos:line="745" pos:column="63"/></name> <operator pos:line="745" pos:column="64">*<pos:position pos:line="745" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="745" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="745" pos:column="67"/></expr_stmt>
    <break pos:line="746" pos:column="5">break;<pos:position pos:line="746" pos:column="11"/></break>

  <case pos:line="748" pos:column="3">case <expr><name pos:line="748" pos:column="8">CURLOPT_BUFFERSIZE<pos:position pos:line="748" pos:column="26"/></name></expr>:<pos:position pos:line="748" pos:column="27"/></case>
    <comment type="block" pos:line="749" pos:column="5">/*
     * The application kindly asks for a differently sized receive buffer.
     * If it seems reasonable, we'll use it.
     */</comment>
    <expr_stmt><expr><name><name pos:line="753" pos:column="5">data<pos:position pos:line="753" pos:column="9"/></name><operator pos:line="753" pos:column="9">-&gt;<pos:position pos:line="753" pos:column="14"/></operator><name pos:line="753" pos:column="11">set<pos:position pos:line="753" pos:column="14"/></name><operator pos:line="753" pos:column="14">.<pos:position pos:line="753" pos:column="15"/></operator><name pos:line="753" pos:column="15">buffer_size<pos:position pos:line="753" pos:column="26"/></name></name> <operator pos:line="753" pos:column="27">=<pos:position pos:line="753" pos:column="28"/></operator> <call><name pos:line="753" pos:column="29">va_arg<pos:position pos:line="753" pos:column="35"/></name><argument_list pos:line="753" pos:column="35">(<argument><expr><name pos:line="753" pos:column="36">param<pos:position pos:line="753" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="753" pos:column="43">long<pos:position pos:line="753" pos:column="47"/></name></expr></argument>)<pos:position pos:line="753" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="753" pos:column="49"/></expr_stmt>

    <if pos:line="755" pos:column="5">if<condition pos:line="755" pos:column="7">(<expr><name><name pos:line="755" pos:column="8">data<pos:position pos:line="755" pos:column="12"/></name><operator pos:line="755" pos:column="12">-&gt;<pos:position pos:line="755" pos:column="17"/></operator><name pos:line="755" pos:column="14">set<pos:position pos:line="755" pos:column="17"/></name><operator pos:line="755" pos:column="17">.<pos:position pos:line="755" pos:column="18"/></operator><name pos:line="755" pos:column="18">buffer_size<pos:position pos:line="755" pos:column="29"/></name></name><operator pos:line="755" pos:column="29">&gt;<pos:position pos:line="755" pos:column="33"/></operator> <operator pos:line="755" pos:column="31">(<pos:position pos:line="755" pos:column="32"/></operator><name pos:line="755" pos:column="32">BUFSIZE<pos:position pos:line="755" pos:column="39"/></name> <operator pos:line="755" pos:column="40">-<pos:position pos:line="755" pos:column="41"/></operator><literal type="number" pos:line="755" pos:column="41">1<pos:position pos:line="755" pos:column="42"/></literal> <operator pos:line="755" pos:column="43">)<pos:position pos:line="755" pos:column="44"/></operator></expr>)<pos:position pos:line="755" pos:column="45"/></condition><then pos:line="755" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="756" pos:column="7">data<pos:position pos:line="756" pos:column="11"/></name><operator pos:line="756" pos:column="11">-&gt;<pos:position pos:line="756" pos:column="16"/></operator><name pos:line="756" pos:column="13">set<pos:position pos:line="756" pos:column="16"/></name><operator pos:line="756" pos:column="16">.<pos:position pos:line="756" pos:column="17"/></operator><name pos:line="756" pos:column="17">buffer_size<pos:position pos:line="756" pos:column="28"/></name></name> <operator pos:line="756" pos:column="29">=<pos:position pos:line="756" pos:column="30"/></operator> <literal type="number" pos:line="756" pos:column="31">0<pos:position pos:line="756" pos:column="32"/></literal></expr>;<pos:position pos:line="756" pos:column="33"/></expr_stmt></block></then></if> <comment type="block" pos:line="756" pos:column="34">/* huge internal default */</comment>

    <break pos:line="758" pos:column="5">break;<pos:position pos:line="758" pos:column="11"/></break>

  <case pos:line="760" pos:column="3">case <expr><name pos:line="760" pos:column="8">CURLOPT_NOSIGNAL<pos:position pos:line="760" pos:column="24"/></name></expr>:<pos:position pos:line="760" pos:column="25"/></case>
    <comment type="block" pos:line="761" pos:column="5">/*
     * The application asks not to set any signal() or alarm() handlers,
     * even when using a timeout.
     */</comment>
    <expr_stmt><expr><name><name pos:line="765" pos:column="5">data<pos:position pos:line="765" pos:column="9"/></name><operator pos:line="765" pos:column="9">-&gt;<pos:position pos:line="765" pos:column="14"/></operator><name pos:line="765" pos:column="11">set<pos:position pos:line="765" pos:column="14"/></name><operator pos:line="765" pos:column="14">.<pos:position pos:line="765" pos:column="15"/></operator><name pos:line="765" pos:column="15">no_signal<pos:position pos:line="765" pos:column="24"/></name></name> <operator pos:line="765" pos:column="25">=<pos:position pos:line="765" pos:column="26"/></operator> <ternary><condition><expr><call><name pos:line="765" pos:column="27">va_arg<pos:position pos:line="765" pos:column="33"/></name><argument_list pos:line="765" pos:column="33">(<argument><expr><name pos:line="765" pos:column="34">param<pos:position pos:line="765" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="765" pos:column="41">long<pos:position pos:line="765" pos:column="45"/></name></expr></argument>)<pos:position pos:line="765" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="765" pos:column="48"/></condition><then pos:line="765" pos:column="48"> <expr><name pos:line="765" pos:column="49">TRUE<pos:position pos:line="765" pos:column="53"/></name></expr> <pos:position pos:line="765" pos:column="54"/></then><else pos:line="765" pos:column="54">: <expr><name pos:line="765" pos:column="56">FALSE<pos:position pos:line="765" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="765" pos:column="62"/></expr_stmt>
    <break pos:line="766" pos:column="5">break;<pos:position pos:line="766" pos:column="11"/></break>

  <case pos:line="768" pos:column="3">case <expr><name pos:line="768" pos:column="8">CURLOPT_SHARE<pos:position pos:line="768" pos:column="21"/></name></expr>:<pos:position pos:line="768" pos:column="22"/></case>
    <block pos:line="769" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="770" pos:column="7">struct<pos:position pos:line="770" pos:column="13"/></name> <name pos:line="770" pos:column="14">Curl_share<pos:position pos:line="770" pos:column="24"/></name></name> <modifier pos:line="770" pos:column="25">*<pos:position pos:line="770" pos:column="26"/></modifier></type><name pos:line="770" pos:column="26">set<pos:position pos:line="770" pos:column="29"/></name></decl>;<pos:position pos:line="770" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><name pos:line="771" pos:column="7">set<pos:position pos:line="771" pos:column="10"/></name> <operator pos:line="771" pos:column="11">=<pos:position pos:line="771" pos:column="12"/></operator> <call><name pos:line="771" pos:column="13">va_arg<pos:position pos:line="771" pos:column="19"/></name><argument_list pos:line="771" pos:column="19">(<argument><expr><name pos:line="771" pos:column="20">param<pos:position pos:line="771" pos:column="25"/></name></expr></argument>, <argument><expr pos:line="771" pos:column="27">struct <name pos:line="771" pos:column="34">Curl_share<pos:position pos:line="771" pos:column="44"/></name> <operator pos:line="771" pos:column="45">*<pos:position pos:line="771" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="771" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="771" pos:column="48"/></expr_stmt>
      <if pos:line="772" pos:column="7">if<condition pos:line="772" pos:column="9">(<expr><name><name pos:line="772" pos:column="10">data<pos:position pos:line="772" pos:column="14"/></name><operator pos:line="772" pos:column="14">-&gt;<pos:position pos:line="772" pos:column="19"/></operator><name pos:line="772" pos:column="16">share<pos:position pos:line="772" pos:column="21"/></name></name></expr>)<pos:position pos:line="772" pos:column="22"/></condition><then pos:line="772" pos:column="22">
      <block pos:line="773" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="774" pos:column="9">Curl_share_lock<pos:position pos:line="774" pos:column="24"/></name><argument_list pos:line="774" pos:column="24">(<argument><expr><name pos:line="774" pos:column="25">data<pos:position pos:line="774" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="774" pos:column="31">CURL_LOCK_DATA_SHARE<pos:position pos:line="774" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="774" pos:column="53">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="774" pos:column="76"/></name></expr></argument>)<pos:position pos:line="774" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="774" pos:column="78"/></expr_stmt>

        <comment type="block" pos:line="776" pos:column="9">/* checking the dns cache stuff */</comment>
        <if pos:line="777" pos:column="9">if<condition pos:line="777" pos:column="11">(<expr><name><name pos:line="777" pos:column="12">data<pos:position pos:line="777" pos:column="16"/></name><operator pos:line="777" pos:column="16">-&gt;<pos:position pos:line="777" pos:column="21"/></operator><name pos:line="777" pos:column="18">share<pos:position pos:line="777" pos:column="23"/></name><operator pos:line="777" pos:column="23">-&gt;<pos:position pos:line="777" pos:column="28"/></operator><name pos:line="777" pos:column="25">hostcache<pos:position pos:line="777" pos:column="34"/></name></name> <operator pos:line="777" pos:column="35">==<pos:position pos:line="777" pos:column="37"/></operator> <name><name pos:line="777" pos:column="38">data<pos:position pos:line="777" pos:column="42"/></name><operator pos:line="777" pos:column="42">-&gt;<pos:position pos:line="777" pos:column="47"/></operator><name pos:line="777" pos:column="44">hostcache<pos:position pos:line="777" pos:column="53"/></name></name></expr>)<pos:position pos:line="777" pos:column="54"/></condition><then pos:line="777" pos:column="54">
        <block pos:line="778" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="779" pos:column="11">data<pos:position pos:line="779" pos:column="15"/></name><operator pos:line="779" pos:column="15">-&gt;<pos:position pos:line="779" pos:column="20"/></operator><name pos:line="779" pos:column="17">hostcache<pos:position pos:line="779" pos:column="26"/></name></name> <operator pos:line="779" pos:column="27">=<pos:position pos:line="779" pos:column="28"/></operator> <name pos:line="779" pos:column="29">NULL<pos:position pos:line="779" pos:column="33"/></name></expr>;<pos:position pos:line="779" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="780" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="782" pos:column="9">data<pos:position pos:line="782" pos:column="13"/></name><operator pos:line="782" pos:column="13">-&gt;<pos:position pos:line="782" pos:column="18"/></operator><name pos:line="782" pos:column="15">share<pos:position pos:line="782" pos:column="20"/></name><operator pos:line="782" pos:column="20">-&gt;<pos:position pos:line="782" pos:column="25"/></operator><name pos:line="782" pos:column="22">dirty<pos:position pos:line="782" pos:column="27"/></name></name><operator pos:line="782" pos:column="27">--<pos:position pos:line="782" pos:column="29"/></operator></expr>;<pos:position pos:line="782" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="784" pos:column="9">Curl_share_unlock<pos:position pos:line="784" pos:column="26"/></name><argument_list pos:line="784" pos:column="26">(<argument><expr><name pos:line="784" pos:column="27">data<pos:position pos:line="784" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="784" pos:column="33">CURL_LOCK_DATA_SHARE<pos:position pos:line="784" pos:column="53"/></name></expr></argument>)<pos:position pos:line="784" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="784" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="785" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="787" pos:column="7">data<pos:position pos:line="787" pos:column="11"/></name><operator pos:line="787" pos:column="11">-&gt;<pos:position pos:line="787" pos:column="16"/></operator><name pos:line="787" pos:column="13">share<pos:position pos:line="787" pos:column="18"/></name></name> <operator pos:line="787" pos:column="19">=<pos:position pos:line="787" pos:column="20"/></operator> <name pos:line="787" pos:column="21">set<pos:position pos:line="787" pos:column="24"/></name></expr>;<pos:position pos:line="787" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="789" pos:column="7">Curl_share_lock<pos:position pos:line="789" pos:column="22"/></name><argument_list pos:line="789" pos:column="22">(<argument><expr><name pos:line="789" pos:column="23">data<pos:position pos:line="789" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="789" pos:column="29">CURL_LOCK_DATA_SHARE<pos:position pos:line="789" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="789" pos:column="51">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="789" pos:column="74"/></name></expr></argument>)<pos:position pos:line="789" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="789" pos:column="76"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="791" pos:column="7">data<pos:position pos:line="791" pos:column="11"/></name><operator pos:line="791" pos:column="11">-&gt;<pos:position pos:line="791" pos:column="16"/></operator><name pos:line="791" pos:column="13">share<pos:position pos:line="791" pos:column="18"/></name><operator pos:line="791" pos:column="18">-&gt;<pos:position pos:line="791" pos:column="23"/></operator><name pos:line="791" pos:column="20">dirty<pos:position pos:line="791" pos:column="25"/></name></name><operator pos:line="791" pos:column="25">++<pos:position pos:line="791" pos:column="27"/></operator></expr>;<pos:position pos:line="791" pos:column="28"/></expr_stmt>

      <if pos:line="793" pos:column="7">if<condition pos:line="793" pos:column="9">( <expr><name><name pos:line="793" pos:column="11">data<pos:position pos:line="793" pos:column="15"/></name><operator pos:line="793" pos:column="15">-&gt;<pos:position pos:line="793" pos:column="20"/></operator><name pos:line="793" pos:column="17">hostcache<pos:position pos:line="793" pos:column="26"/></name></name></expr> )<pos:position pos:line="793" pos:column="28"/></condition><then pos:line="793" pos:column="28">
      <block pos:line="794" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="795" pos:column="9">Curl_hash_destroy<pos:position pos:line="795" pos:column="26"/></name><argument_list pos:line="795" pos:column="26">(<argument><expr><name><name pos:line="795" pos:column="27">data<pos:position pos:line="795" pos:column="31"/></name><operator pos:line="795" pos:column="31">-&gt;<pos:position pos:line="795" pos:column="36"/></operator><name pos:line="795" pos:column="33">hostcache<pos:position pos:line="795" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="795" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="795" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="796" pos:column="9">data<pos:position pos:line="796" pos:column="13"/></name><operator pos:line="796" pos:column="13">-&gt;<pos:position pos:line="796" pos:column="18"/></operator><name pos:line="796" pos:column="15">hostcache<pos:position pos:line="796" pos:column="24"/></name></name> <operator pos:line="796" pos:column="25">=<pos:position pos:line="796" pos:column="26"/></operator> <name><name pos:line="796" pos:column="27">data<pos:position pos:line="796" pos:column="31"/></name><operator pos:line="796" pos:column="31">-&gt;<pos:position pos:line="796" pos:column="36"/></operator><name pos:line="796" pos:column="33">share<pos:position pos:line="796" pos:column="38"/></name><operator pos:line="796" pos:column="38">-&gt;<pos:position pos:line="796" pos:column="43"/></operator><name pos:line="796" pos:column="40">hostcache<pos:position pos:line="796" pos:column="49"/></name></name></expr>;<pos:position pos:line="796" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="797" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="799" pos:column="7">Curl_share_unlock<pos:position pos:line="799" pos:column="24"/></name><argument_list pos:line="799" pos:column="24">(<argument><expr><name pos:line="799" pos:column="25">data<pos:position pos:line="799" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="799" pos:column="31">CURL_LOCK_DATA_SHARE<pos:position pos:line="799" pos:column="51"/></name></expr></argument>)<pos:position pos:line="799" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="799" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="800" pos:column="6"/></block>
    <break pos:line="801" pos:column="5">break;<pos:position pos:line="801" pos:column="11"/></break>

  <case pos:line="803" pos:column="3">case <expr><name pos:line="803" pos:column="8">CURLOPT_PROXYTYPE<pos:position pos:line="803" pos:column="25"/></name></expr>:<pos:position pos:line="803" pos:column="26"/></case>
    <comment type="block" pos:line="804" pos:column="5">/*
     * Set proxy type. HTTP/SOCKS4/SOCKS5
     */</comment>
    <expr_stmt><expr><name><name pos:line="807" pos:column="5">data<pos:position pos:line="807" pos:column="9"/></name><operator pos:line="807" pos:column="9">-&gt;<pos:position pos:line="807" pos:column="14"/></operator><name pos:line="807" pos:column="11">set<pos:position pos:line="807" pos:column="14"/></name><operator pos:line="807" pos:column="14">.<pos:position pos:line="807" pos:column="15"/></operator><name pos:line="807" pos:column="15">proxytype<pos:position pos:line="807" pos:column="24"/></name></name> <operator pos:line="807" pos:column="25">=<pos:position pos:line="807" pos:column="26"/></operator> <call><name pos:line="807" pos:column="27">va_arg<pos:position pos:line="807" pos:column="33"/></name><argument_list pos:line="807" pos:column="33">(<argument><expr><name pos:line="807" pos:column="34">param<pos:position pos:line="807" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="807" pos:column="41">long<pos:position pos:line="807" pos:column="45"/></name></expr></argument>)<pos:position pos:line="807" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="807" pos:column="47"/></expr_stmt>
    <break pos:line="808" pos:column="5">break;<pos:position pos:line="808" pos:column="11"/></break>

  <case pos:line="810" pos:column="3">case <expr><name pos:line="810" pos:column="8">CURLOPT_PRIVATE<pos:position pos:line="810" pos:column="23"/></name></expr>:<pos:position pos:line="810" pos:column="24"/></case>
    <comment type="block" pos:line="811" pos:column="5">/*
     * Set private data pointer.
     */</comment>
    <expr_stmt><expr><name><name pos:line="814" pos:column="5">data<pos:position pos:line="814" pos:column="9"/></name><operator pos:line="814" pos:column="9">-&gt;<pos:position pos:line="814" pos:column="14"/></operator><name pos:line="814" pos:column="11">set<pos:position pos:line="814" pos:column="14"/></name><operator pos:line="814" pos:column="14">.<pos:position pos:line="814" pos:column="15"/></operator></name><specifier pos:line="814" pos:column="15">private<pos:position pos:line="814" pos:column="22"/></specifier> <operator pos:line="814" pos:column="23">=<pos:position pos:line="814" pos:column="24"/></operator> <call><name pos:line="814" pos:column="25">va_arg<pos:position pos:line="814" pos:column="31"/></name><argument_list pos:line="814" pos:column="31">(<argument><expr><name pos:line="814" pos:column="32">param<pos:position pos:line="814" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="814" pos:column="39">char<pos:position pos:line="814" pos:column="43"/></name> <operator pos:line="814" pos:column="44">*<pos:position pos:line="814" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="814" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="814" pos:column="47"/></expr_stmt>
    <break pos:line="815" pos:column="5">break;<pos:position pos:line="815" pos:column="11"/></break>

  <case pos:line="817" pos:column="3">case <expr><name pos:line="817" pos:column="8">CURLOPT_HTTP200ALIASES<pos:position pos:line="817" pos:column="30"/></name></expr>:<pos:position pos:line="817" pos:column="31"/></case>
    <comment type="block" pos:line="818" pos:column="5">/*
     * Set a list of aliases for HTTP 200 in response header
     */</comment>
    <expr_stmt><expr><name><name pos:line="821" pos:column="5">data<pos:position pos:line="821" pos:column="9"/></name><operator pos:line="821" pos:column="9">-&gt;<pos:position pos:line="821" pos:column="14"/></operator><name pos:line="821" pos:column="11">set<pos:position pos:line="821" pos:column="14"/></name><operator pos:line="821" pos:column="14">.<pos:position pos:line="821" pos:column="15"/></operator><name pos:line="821" pos:column="15">http200aliases<pos:position pos:line="821" pos:column="29"/></name></name> <operator pos:line="821" pos:column="30">=<pos:position pos:line="821" pos:column="31"/></operator> <call><name pos:line="821" pos:column="32">va_arg<pos:position pos:line="821" pos:column="38"/></name><argument_list pos:line="821" pos:column="38">(<argument><expr><name pos:line="821" pos:column="39">param<pos:position pos:line="821" pos:column="44"/></name></expr></argument>, <argument><expr pos:line="821" pos:column="46">struct <name pos:line="821" pos:column="53">curl_slist<pos:position pos:line="821" pos:column="63"/></name> <operator pos:line="821" pos:column="64">*<pos:position pos:line="821" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="821" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="821" pos:column="67"/></expr_stmt>
    <break pos:line="822" pos:column="5">break;<pos:position pos:line="822" pos:column="11"/></break>

  <default pos:line="824" pos:column="3">default:<pos:position pos:line="824" pos:column="11"/></default>
    <comment type="block" pos:line="825" pos:column="5">/* unknown tag and its companion, just ignore: */</comment>
    <return pos:line="826" pos:column="5">return <expr><name pos:line="826" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="826" pos:column="29"/></name></expr>;<pos:position pos:line="826" pos:column="30"/></return> <comment type="block" pos:line="826" pos:column="31">/* correct this */</comment>
  }<pos:position pos:line="827" pos:column="4"/></block></switch>
  <return pos:line="828" pos:column="3">return <expr><name pos:line="828" pos:column="10">CURLE_OK<pos:position pos:line="828" pos:column="18"/></name></expr>;<pos:position pos:line="828" pos:column="19"/></return>
}<pos:position pos:line="829" pos:column="2"/></block></function></unit>

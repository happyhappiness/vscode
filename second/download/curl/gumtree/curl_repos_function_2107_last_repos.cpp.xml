<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2107_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_mime_data<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">curl_mimepart<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">part<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">data<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">size_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">datasize<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">part<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="5" pos:column="39"/></name></expr>;<pos:position pos:line="5" pos:column="40"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">cleanup_part_content<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">part<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">data<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11"> <block pos:line="9" pos:column="12">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">datasize<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">CURL_ZERO_TERMINATED<pos:position pos:line="10" pos:column="40"/></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="7">datasize<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">strlen<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">data<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">part<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">data<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">malloc<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">datasize<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">+<pos:position pos:line="13" pos:column="35"/></operator> <literal type="number" pos:line="13" pos:column="36">1<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name><name pos:line="14" pos:column="9">part<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">data<pos:position pos:line="14" pos:column="19"/></name></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">part<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">datasize<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">datasize<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">datasize<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">memcpy<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name><name pos:line="20" pos:column="14">part<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">data<pos:position pos:line="20" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">data<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">datasize<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">part<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">data<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><name pos:line="21" pos:column="16">datasize<pos:position pos:line="21" pos:column="24"/></name></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="char" pos:line="21" pos:column="28">'\0'<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>    <comment type="block" pos:line="21" pos:column="37">/* Set a nul terminator as sentinel. */</comment>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">part<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">readfunc<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">mime_mem_read<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">part<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">seekfunc<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">mime_mem_seek<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">part<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">freefunc<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">mime_mem_free<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">part<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">kind<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">MIMEKIND_DATA<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">CURLE_OK<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

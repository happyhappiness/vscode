<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_729_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_set_timeouts<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">tftp_state_data_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">state<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">time_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">maxtime<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">timeout<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">timeout_ms<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">time<pos:position pos:line="6" pos:column="7"/></name><argument_list pos:line="6" pos:column="7">(<argument><expr><operator pos:line="6" pos:column="8">&amp;<pos:position pos:line="6" pos:column="13"/></operator><name><name pos:line="6" pos:column="9">state<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">start_time<pos:position pos:line="6" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Compute drop-dead time */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">timeout_ms<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">Curl_timeleft<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">state<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">conn<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">NULL<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">TRUE<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">timeout_ms<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
    <comment type="block" pos:line="12" pos:column="5">/* time-out, bail out, go home */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">failf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name><name pos:line="13" pos:column="11">state<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">conn<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">data<pos:position pos:line="13" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"Connection time-out"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">state<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">state<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">TFTP_STATE_START<pos:position pos:line="17" pos:column="38"/></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{

    <expr_stmt><expr><name pos:line="19" pos:column="5">maxtime<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call pos:line="19" pos:column="15">(<name pos:line="19" pos:column="16">time_t<pos:position pos:line="19" pos:column="22"/></name>)<argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">timeout_ms<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">500<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call> <operator pos:line="19" pos:column="42">/<pos:position pos:line="19" pos:column="43"/></operator> <literal type="number" pos:line="19" pos:column="44">1000<pos:position pos:line="19" pos:column="48"/></literal></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">state<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">max_time<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name><name pos:line="20" pos:column="23">state<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">start_time<pos:position pos:line="20" pos:column="40"/></name></name><operator pos:line="20" pos:column="40">+<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">maxtime<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Set per-block timeout to total */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">timeout<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">maxtime<pos:position pos:line="23" pos:column="22"/></name></expr> ;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Average restart after 5 seconds */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">state<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">retry_max<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">timeout<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">/<pos:position pos:line="26" pos:column="32"/></operator><literal type="number" pos:line="26" pos:column="32">5<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>

    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">state<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">retry_max<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">&lt;<pos:position pos:line="28" pos:column="29"/></operator> <literal type="number" pos:line="28" pos:column="27">1<pos:position pos:line="28" pos:column="28"/></literal></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
      <comment type="block" pos:line="29" pos:column="7">/* avoid division by zero below */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="7">state<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">retry_max<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">1<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Compute the re-start interval to suit the timeout */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">state<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">retry_time<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">timeout<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">/<pos:position pos:line="33" pos:column="33"/></operator><name><name pos:line="33" pos:column="33">state<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">retry_max<pos:position pos:line="33" pos:column="49"/></name></name></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name><name pos:line="34" pos:column="8">state<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">retry_time<pos:position pos:line="34" pos:column="25"/></name></name><operator pos:line="34" pos:column="25">&lt;<pos:position pos:line="34" pos:column="29"/></operator><literal type="number" pos:line="34" pos:column="26">1<pos:position pos:line="34" pos:column="27"/></literal></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="7">state<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">retry_time<pos:position pos:line="35" pos:column="24"/></name></name><operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator><literal type="number" pos:line="35" pos:column="25">1<pos:position pos:line="35" pos:column="26"/></literal></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt></block></then></if>

  }<pos:position pos:line="37" pos:column="4"/></block></then>
  <else pos:line="38" pos:column="3">else <block pos:line="38" pos:column="8">{
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name pos:line="39" pos:column="8">timeout_ms<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&gt;<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">maxtime<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <call pos:line="40" pos:column="17">(<name pos:line="40" pos:column="18">time_t<pos:position pos:line="40" pos:column="24"/></name>)<argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">timeout_ms<pos:position pos:line="40" pos:column="36"/></name> <operator pos:line="40" pos:column="37">+<pos:position pos:line="40" pos:column="38"/></operator> <literal type="number" pos:line="40" pos:column="39">500<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call> <operator pos:line="40" pos:column="44">/<pos:position pos:line="40" pos:column="45"/></operator> <literal type="number" pos:line="40" pos:column="46">1000<pos:position pos:line="40" pos:column="50"/></literal></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt></block></then>
    <else pos:line="41" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">maxtime<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <literal type="number" pos:line="42" pos:column="17">3600<pos:position pos:line="42" pos:column="21"/></literal></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">state<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">max_time<pos:position pos:line="44" pos:column="20"/></name></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name><name pos:line="44" pos:column="23">state<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">start_time<pos:position pos:line="44" pos:column="40"/></name></name><operator pos:line="44" pos:column="40">+<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">maxtime<pos:position pos:line="44" pos:column="48"/></name></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Set per-block timeout to 10% of total */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">timeout<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">maxtime<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">/<pos:position pos:line="47" pos:column="23"/></operator><literal type="number" pos:line="47" pos:column="23">10<pos:position pos:line="47" pos:column="25"/></literal></expr> ;<pos:position pos:line="47" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Average reposting an ACK after 15 seconds */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">state<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">retry_max<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">timeout<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">/<pos:position pos:line="50" pos:column="32"/></operator><literal type="number" pos:line="50" pos:column="32">15<pos:position pos:line="50" pos:column="34"/></literal></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></else></if>
  <comment type="block" pos:line="52" pos:column="3">/* But bound the total number  */</comment>
  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">state<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">retry_max<pos:position pos:line="53" pos:column="22"/></name></name><operator pos:line="53" pos:column="22">&lt;<pos:position pos:line="53" pos:column="26"/></operator><literal type="number" pos:line="53" pos:column="23">3<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="5">state<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">retry_max<pos:position pos:line="54" pos:column="21"/></name></name><operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator><literal type="number" pos:line="54" pos:column="22">3<pos:position pos:line="54" pos:column="23"/></literal></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt></block></then></if>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name><name pos:line="56" pos:column="6">state<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">-&gt;<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="13">retry_max<pos:position pos:line="56" pos:column="22"/></name></name><operator pos:line="56" pos:column="22">&gt;<pos:position pos:line="56" pos:column="26"/></operator><literal type="number" pos:line="56" pos:column="23">50<pos:position pos:line="56" pos:column="25"/></literal></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="5">state<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">retry_max<pos:position pos:line="57" pos:column="21"/></name></name><operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator><literal type="number" pos:line="57" pos:column="22">50<pos:position pos:line="57" pos:column="24"/></literal></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* Compute the re-ACK interval to suit the timeout */</comment>
  <expr_stmt><expr><name><name pos:line="60" pos:column="3">state<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">-&gt;<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">retry_time<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">timeout<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">/<pos:position pos:line="60" pos:column="31"/></operator><name><name pos:line="60" pos:column="31">state<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">retry_max<pos:position pos:line="60" pos:column="47"/></name></name></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name><name pos:line="61" pos:column="6">state<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">retry_time<pos:position pos:line="61" pos:column="23"/></name></name><operator pos:line="61" pos:column="23">&lt;<pos:position pos:line="61" pos:column="27"/></operator><literal type="number" pos:line="61" pos:column="24">1<pos:position pos:line="61" pos:column="25"/></literal></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="5">state<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">retry_time<pos:position pos:line="62" pos:column="22"/></name></name><operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator><literal type="number" pos:line="62" pos:column="23">1<pos:position pos:line="62" pos:column="24"/></literal></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">infof<pos:position pos:line="64" pos:column="8"/></name><argument_list pos:line="64" pos:column="8">(<argument><expr><name><name pos:line="64" pos:column="9">state<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">conn<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">data<pos:position pos:line="64" pos:column="26"/></name></name></expr></argument>,
  	<argument><expr><literal type="string" pos:line="65" pos:column="9">"set timeouts for state %d; Total %d, retry %d maxtry %d\n"<pos:position pos:line="65" pos:column="68"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="66" pos:column="9">state<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">state<pos:position pos:line="66" pos:column="21"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="23">(<pos:position pos:line="66" pos:column="24"/></operator><name><name pos:line="66" pos:column="24">state<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">max_time<pos:position pos:line="66" pos:column="39"/></name></name><operator pos:line="66" pos:column="39">-<pos:position pos:line="66" pos:column="40"/></operator><name><name pos:line="66" pos:column="40">state<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">-&gt;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="47">start_time<pos:position pos:line="66" pos:column="57"/></name></name><operator pos:line="66" pos:column="57">)<pos:position pos:line="66" pos:column="58"/></operator></expr></argument>,
        <argument><expr><name><name pos:line="67" pos:column="9">state<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">retry_time<pos:position pos:line="67" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="28">state<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">-&gt;<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="35">retry_max<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>

  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">CURLE_OK<pos:position pos:line="69" pos:column="18"/></name></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

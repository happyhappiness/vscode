<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_284.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_ossl_connect<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">connectdata<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">sockindex<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">retcode<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">CURLE_OK<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">err<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">long<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">lerr<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">what<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type> <name pos:line="11" pos:column="10">str<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">SSL_METHOD<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">req_method<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">void<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">ssl_sessionid<pos:position pos:line="13" pos:column="22"/></name><init pos:line="13" pos:column="22">=<expr><name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">ASN1_TIME<pos:position pos:line="14" pos:column="12"/></name> <modifier pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></modifier></type><name pos:line="14" pos:column="14">certdate<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">curl_socket_t<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">sockfd<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name><name pos:line="15" pos:column="26">conn<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">sock<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><name pos:line="15" pos:column="37">sockindex<pos:position pos:line="15" pos:column="46"/></name></expr>]<pos:position pos:line="15" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">ssl_connect_data<pos:position pos:line="16" pos:column="26"/></name></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier></type><name pos:line="16" pos:column="28">connssl<pos:position pos:line="16" pos:column="35"/></name> <init pos:line="16" pos:column="36">= <expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name><name pos:line="16" pos:column="39">conn<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">ssl<pos:position pos:line="16" pos:column="48"/></name><index pos:line="16" pos:column="48">[<expr><name pos:line="16" pos:column="49">sockindex<pos:position pos:line="16" pos:column="58"/></name></expr>]<pos:position pos:line="16" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">ssl_seeded<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">||<pos:position pos:line="18" pos:column="20"/></operator> <name><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">set<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">ssl<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">random_file<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">||<pos:position pos:line="18" pos:column="49"/></operator> <name><name pos:line="18" pos:column="50">data<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">set<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">ssl<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">.<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="64">egdsocket<pos:position pos:line="18" pos:column="73"/></name></name></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
    <comment type="block" pos:line="19" pos:column="5">/* Make funny stuff to get random input */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">random_the_seed<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">data<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">ssl_seeded<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">TRUE<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* check to see if we've been told to use an explicit SSL/TLS version */</comment>
  <switch pos:line="26" pos:column="3">switch<condition pos:line="26" pos:column="9">(<expr><name><name pos:line="26" pos:column="10">data<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">set<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">ssl<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">version<pos:position pos:line="26" pos:column="31"/></name></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition> <block pos:line="26" pos:column="33">{
  <default pos:line="27" pos:column="3">default:<pos:position pos:line="27" pos:column="11"/></default>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="28" pos:column="31"/></name></expr>:<pos:position pos:line="28" pos:column="32"/></case>
    <comment type="block" pos:line="29" pos:column="5">/* we try to figure out version */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">req_method<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">SSLv23_client_method<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">()<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="32" pos:column="29"/></name></expr>:<pos:position pos:line="32" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="33" pos:column="5">req_method<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">TLSv1_client_method<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">()<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="35" pos:column="29"/></name></expr>:<pos:position pos:line="35" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="36" pos:column="5">req_method<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">SSLv2_client_method<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">()<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="38" pos:column="29"/></name></expr>:<pos:position pos:line="38" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">req_method<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">SSLv3_client_method<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">()<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  }<pos:position pos:line="41" pos:column="4"/></block></switch>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">connssl<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">ctx<pos:position pos:line="43" pos:column="15"/></name></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">SSL_CTX_new<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">req_method<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><operator pos:line="45" pos:column="6">!<pos:position pos:line="45" pos:column="7"/></operator><name><name pos:line="45" pos:column="7">connssl<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">ctx<pos:position pos:line="45" pos:column="19"/></name></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">failf<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">data<pos:position pos:line="46" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="17">"SSL: couldn't create a context!"<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="50" pos:column="33"/></name></cpp:ifdef>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name><name pos:line="51" pos:column="7">data<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">set<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">fdebug<pos:position pos:line="51" pos:column="23"/></name></name></expr>)<pos:position pos:line="51" pos:column="24"/></condition><then pos:line="51" pos:column="24"> <block pos:line="51" pos:column="25">{
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><call><name pos:line="52" pos:column="10">SSL_CTX_callback_ctrl<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name><name pos:line="52" pos:column="32">connssl<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">ctx<pos:position pos:line="52" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="52" pos:column="71"/></name></expr></argument>,
                               <argument><expr><name pos:line="53" pos:column="32">ssl_tls_trace<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47"> <block pos:line="53" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">failf<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">data<pos:position pos:line="54" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="19">"SSL: couldn't set callback!"<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="55" pos:column="37"/></name></expr>;<pos:position pos:line="55" pos:column="38"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><call><name pos:line="58" pos:column="10">SSL_CTX_ctrl<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name><name pos:line="58" pos:column="23">connssl<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">-&gt;<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="32">ctx<pos:position pos:line="58" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">SSL_CTRL_SET_MSG_CALLBACK_ARG<pos:position pos:line="58" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="68">0<pos:position pos:line="58" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="71">conn<pos:position pos:line="58" pos:column="75"/></name></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="77"/></condition><then pos:line="58" pos:column="77"> <block pos:line="58" pos:column="78">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">failf<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><name pos:line="59" pos:column="13">data<pos:position pos:line="59" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="19">"SSL: couldn't set callback argument!"<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
      <return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="65" pos:column="3">/* OpenSSL contains code to work-around lots of bugs and flaws in various
     SSL-implementations. SSL_CTX_set_options() is used to enabled those
     work-arounds. The man page for this option states that SSL_OP_ALL enables
     ll the work-arounds and that "It is usually safe to use SSL_OP_ALL to
     enable the bug workaround options if compatibility with somewhat broken
     implementations is desired."

  */</comment>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">SSL_CTX_set_options<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name><name pos:line="73" pos:column="23">connssl<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">-&gt;<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="32">ctx<pos:position pos:line="73" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="37">SSL_OP_ALL<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>

<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if<pos:position pos:line="75" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="75" pos:column="5">0<pos:position pos:line="75" pos:column="6"/></literal></expr></cpp:if>
  <comment type="block" pos:line="76" pos:column="3">/*
   * Not sure it's needed to tell SSL_connect() that socket is
   * non-blocking. It doesn't seem to care, but just return with
   * SSL_ERROR_WANT_x.
   */</comment>
  if (data-&gt;state.used_interface == Curl_if_multi)
    SSL_CTX_ctrl(connssl-&gt;ctx, BIO_C_SET_NBIO, 1, NULL);
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="85" pos:column="3">if<condition pos:line="85" pos:column="5">(<expr><name><name pos:line="85" pos:column="6">data<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">set<pos:position pos:line="85" pos:column="15"/></name><operator pos:line="85" pos:column="15">.<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="16">cert<pos:position pos:line="85" pos:column="20"/></name></name></expr>)<pos:position pos:line="85" pos:column="21"/></condition><then pos:line="85" pos:column="21"> <block pos:line="85" pos:column="22">{
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><operator pos:line="86" pos:column="8">!<pos:position pos:line="86" pos:column="9"/></operator><call><name pos:line="86" pos:column="9">cert_stuff<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">conn<pos:position pos:line="86" pos:column="24"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="87" pos:column="20">connssl<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">ctx<pos:position pos:line="87" pos:column="32"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="88" pos:column="20">data<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">-&gt;<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="26">set<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">.<pos:position pos:line="88" pos:column="30"/></operator><name pos:line="88" pos:column="30">cert<pos:position pos:line="88" pos:column="34"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="89" pos:column="20">data<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">-&gt;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="26">set<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">.<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="30">cert_type<pos:position pos:line="89" pos:column="39"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="90" pos:column="20">data<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">-&gt;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="26">set<pos:position pos:line="90" pos:column="29"/></name><operator pos:line="90" pos:column="29">.<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="30">key<pos:position pos:line="90" pos:column="33"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="91" pos:column="20">data<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">set<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">.<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="30">key_type<pos:position pos:line="91" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="40"/></condition><then pos:line="91" pos:column="40"> <block pos:line="91" pos:column="41">{
      <comment type="block" pos:line="92" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <return pos:line="93" pos:column="7">return <expr><name pos:line="93" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="93" pos:column="35"/></name></expr>;<pos:position pos:line="93" pos:column="36"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><name><name pos:line="97" pos:column="6">data<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">set<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">ssl<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">.<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="20">cipher_list<pos:position pos:line="97" pos:column="31"/></name></name></expr>)<pos:position pos:line="97" pos:column="32"/></condition><then pos:line="97" pos:column="32"> <block pos:line="97" pos:column="33">{
    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><operator pos:line="98" pos:column="8">!<pos:position pos:line="98" pos:column="9"/></operator><call><name pos:line="98" pos:column="9">SSL_CTX_set_cipher_list<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><name><name pos:line="98" pos:column="33">connssl<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">-&gt;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="42">ctx<pos:position pos:line="98" pos:column="45"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="99" pos:column="33">data<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">-&gt;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="39">set<pos:position pos:line="99" pos:column="42"/></name><operator pos:line="99" pos:column="42">.<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="43">ssl<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">cipher_list<pos:position pos:line="99" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="60"/></condition><then pos:line="99" pos:column="60"> <block pos:line="99" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">failf<pos:position pos:line="100" pos:column="12"/></name><argument_list pos:line="100" pos:column="12">(<argument><expr><name pos:line="100" pos:column="13">data<pos:position pos:line="100" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="19">"failed setting cipher list"<pos:position pos:line="100" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="49"/></expr_stmt>
      <return pos:line="101" pos:column="7">return <expr><name pos:line="101" pos:column="14">CURLE_SSL_CIPHER<pos:position pos:line="101" pos:column="30"/></name></expr>;<pos:position pos:line="101" pos:column="31"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if>

  <if pos:line="105" pos:column="3">if <condition pos:line="105" pos:column="6">(<expr><name><name pos:line="105" pos:column="7">data<pos:position pos:line="105" pos:column="11"/></name><operator pos:line="105" pos:column="11">-&gt;<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="13">set<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">.<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">ssl<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">.<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">CAfile<pos:position pos:line="105" pos:column="27"/></name></name> <operator pos:line="105" pos:column="28">||<pos:position pos:line="105" pos:column="30"/></operator> <name><name pos:line="105" pos:column="31">data<pos:position pos:line="105" pos:column="35"/></name><operator pos:line="105" pos:column="35">-&gt;<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="37">set<pos:position pos:line="105" pos:column="40"/></name><operator pos:line="105" pos:column="40">.<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="41">ssl<pos:position pos:line="105" pos:column="44"/></name><operator pos:line="105" pos:column="44">.<pos:position pos:line="105" pos:column="45"/></operator><name pos:line="105" pos:column="45">CApath<pos:position pos:line="105" pos:column="51"/></name></name></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52"> <block pos:line="105" pos:column="53">{
    <comment type="block" pos:line="106" pos:column="5">/* tell SSL where to find CA certificates that are used to verify
       the servers certificate. */</comment>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><operator pos:line="108" pos:column="9">!<pos:position pos:line="108" pos:column="10"/></operator><call><name pos:line="108" pos:column="10">SSL_CTX_load_verify_locations<pos:position pos:line="108" pos:column="39"/></name><argument_list pos:line="108" pos:column="39">(<argument><expr><name><name pos:line="108" pos:column="40">connssl<pos:position pos:line="108" pos:column="47"/></name><operator pos:line="108" pos:column="47">-&gt;<pos:position pos:line="108" pos:column="52"/></operator><name pos:line="108" pos:column="49">ctx<pos:position pos:line="108" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="54">data<pos:position pos:line="108" pos:column="58"/></name><operator pos:line="108" pos:column="58">-&gt;<pos:position pos:line="108" pos:column="63"/></operator><name pos:line="108" pos:column="60">set<pos:position pos:line="108" pos:column="63"/></name><operator pos:line="108" pos:column="63">.<pos:position pos:line="108" pos:column="64"/></operator><name pos:line="108" pos:column="64">ssl<pos:position pos:line="108" pos:column="67"/></name><operator pos:line="108" pos:column="67">.<pos:position pos:line="108" pos:column="68"/></operator><name pos:line="108" pos:column="68">CAfile<pos:position pos:line="108" pos:column="74"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="109" pos:column="40">data<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">-&gt;<pos:position pos:line="109" pos:column="49"/></operator><name pos:line="109" pos:column="46">set<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">.<pos:position pos:line="109" pos:column="50"/></operator><name pos:line="109" pos:column="50">ssl<pos:position pos:line="109" pos:column="53"/></name><operator pos:line="109" pos:column="53">.<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="54">CApath<pos:position pos:line="109" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="62"/></condition><then pos:line="109" pos:column="62"> <block pos:line="109" pos:column="63">{
      <if pos:line="110" pos:column="7">if <condition pos:line="110" pos:column="10">(<expr><name><name pos:line="110" pos:column="11">data<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">set<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">.<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="21">ssl<pos:position pos:line="110" pos:column="24"/></name><operator pos:line="110" pos:column="24">.<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="25">verifypeer<pos:position pos:line="110" pos:column="35"/></name></name></expr>)<pos:position pos:line="110" pos:column="36"/></condition><then pos:line="110" pos:column="36"> <block pos:line="110" pos:column="37">{
        <comment type="block" pos:line="111" pos:column="9">/* Fail if we insist on successfully verifying the server. */</comment>
        <expr_stmt><expr><call><name pos:line="112" pos:column="9">failf<pos:position pos:line="112" pos:column="14"/></name><argument_list pos:line="112" pos:column="14">(<argument><expr><name pos:line="112" pos:column="15">data<pos:position pos:line="112" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="112" pos:column="20">"error setting certificate verify locations:\n"<pos:position pos:line="112" pos:column="67"/></literal>
              <literal type="string" pos:line="113" pos:column="15">"  CAfile: %s\n  CApath: %s\n"<pos:position pos:line="113" pos:column="45"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="114" pos:column="15">data<pos:position pos:line="114" pos:column="19"/></name><operator pos:line="114" pos:column="19">-&gt;<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="21">set<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">.<pos:position pos:line="114" pos:column="25"/></operator><name pos:line="114" pos:column="25">ssl<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">.<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="29">CAfile<pos:position pos:line="114" pos:column="35"/></name></name></expr> ?<pos:position pos:line="114" pos:column="37"/></condition><then pos:line="114" pos:column="37"> <expr><name><name pos:line="114" pos:column="38">data<pos:position pos:line="114" pos:column="42"/></name><operator pos:line="114" pos:column="42">-&gt;<pos:position pos:line="114" pos:column="47"/></operator><name pos:line="114" pos:column="44">set<pos:position pos:line="114" pos:column="47"/></name><operator pos:line="114" pos:column="47">.<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="48">ssl<pos:position pos:line="114" pos:column="51"/></name><operator pos:line="114" pos:column="51">.<pos:position pos:line="114" pos:column="52"/></operator><name pos:line="114" pos:column="52">CAfile<pos:position pos:line="114" pos:column="58"/></name></name></expr> <pos:position pos:line="114" pos:column="59"/></then><else pos:line="114" pos:column="59">: <expr><literal type="string" pos:line="114" pos:column="61">"none"<pos:position pos:line="114" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="115" pos:column="15">data<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">set<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">.<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">ssl<pos:position pos:line="115" pos:column="28"/></name><operator pos:line="115" pos:column="28">.<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="29">CApath<pos:position pos:line="115" pos:column="35"/></name></name></expr> ?<pos:position pos:line="115" pos:column="37"/></condition><then pos:line="115" pos:column="37"> <expr><name><name pos:line="115" pos:column="38">data<pos:position pos:line="115" pos:column="42"/></name><operator pos:line="115" pos:column="42">-&gt;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="44">set<pos:position pos:line="115" pos:column="47"/></name><operator pos:line="115" pos:column="47">.<pos:position pos:line="115" pos:column="48"/></operator><name pos:line="115" pos:column="48">ssl<pos:position pos:line="115" pos:column="51"/></name><operator pos:line="115" pos:column="51">.<pos:position pos:line="115" pos:column="52"/></operator><name pos:line="115" pos:column="52">CApath<pos:position pos:line="115" pos:column="58"/></name></name></expr> <pos:position pos:line="115" pos:column="59"/></then><else pos:line="115" pos:column="59">: <expr><literal type="string" pos:line="115" pos:column="61">"none"<pos:position pos:line="115" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="69"/></expr_stmt>
        <return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="116" pos:column="32"/></name></expr>;<pos:position pos:line="116" pos:column="33"/></return>
      }<pos:position pos:line="117" pos:column="8"/></block></then>
      <else pos:line="118" pos:column="7">else <block pos:line="118" pos:column="12">{
        <comment type="block" pos:line="119" pos:column="9">/* Just continue with a warning if no strict  certificate verification
           is required. */</comment>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">infof<pos:position pos:line="121" pos:column="14"/></name><argument_list pos:line="121" pos:column="14">(<argument><expr><name pos:line="121" pos:column="15">data<pos:position pos:line="121" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="21">"error setting certificate verify locations,"<pos:position pos:line="121" pos:column="66"/></literal>
              <literal type="string" pos:line="122" pos:column="15">" continuing anyway:\n"<pos:position pos:line="122" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="123" pos:column="8"/></block></else></if>
    }<pos:position pos:line="124" pos:column="6"/></block></then>
    <else pos:line="125" pos:column="5">else <block pos:line="125" pos:column="10">{
      <comment type="block" pos:line="126" pos:column="7">/* Everything is fine. */</comment>
      <expr_stmt><expr><call><name pos:line="127" pos:column="7">infof<pos:position pos:line="127" pos:column="12"/></name><argument_list pos:line="127" pos:column="12">(<argument><expr><name pos:line="127" pos:column="13">data<pos:position pos:line="127" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="19">"successfully set certificate verify locations:\n"<pos:position pos:line="127" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">infof<pos:position pos:line="129" pos:column="10"/></name><argument_list pos:line="129" pos:column="10">(<argument><expr><name pos:line="129" pos:column="11">data<pos:position pos:line="129" pos:column="15"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="130" pos:column="11">"  CAfile: %s\n"<pos:position pos:line="130" pos:column="27"/></literal>
          <literal type="string" pos:line="131" pos:column="11">"  CApath: %s\n"<pos:position pos:line="131" pos:column="27"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="132" pos:column="11">data<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">-&gt;<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="17">set<pos:position pos:line="132" pos:column="20"/></name><operator pos:line="132" pos:column="20">.<pos:position pos:line="132" pos:column="21"/></operator><name pos:line="132" pos:column="21">ssl<pos:position pos:line="132" pos:column="24"/></name><operator pos:line="132" pos:column="24">.<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="25">CAfile<pos:position pos:line="132" pos:column="31"/></name></name></expr> ?<pos:position pos:line="132" pos:column="33"/></condition><then pos:line="132" pos:column="33"> <expr><name><name pos:line="132" pos:column="34">data<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">set<pos:position pos:line="132" pos:column="43"/></name><operator pos:line="132" pos:column="43">.<pos:position pos:line="132" pos:column="44"/></operator><name pos:line="132" pos:column="44">ssl<pos:position pos:line="132" pos:column="47"/></name><operator pos:line="132" pos:column="47">.<pos:position pos:line="132" pos:column="48"/></operator><name pos:line="132" pos:column="48">CAfile<pos:position pos:line="132" pos:column="54"/></name></name></expr> <pos:position pos:line="132" pos:column="55"/></then><else pos:line="132" pos:column="55">: <expr><literal type="string" pos:line="132" pos:column="57">"none"<pos:position pos:line="132" pos:column="63"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="133" pos:column="11">data<pos:position pos:line="133" pos:column="15"/></name><operator pos:line="133" pos:column="15">-&gt;<pos:position pos:line="133" pos:column="20"/></operator><name pos:line="133" pos:column="17">set<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">.<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="21">ssl<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">.<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="25">CApath<pos:position pos:line="133" pos:column="31"/></name></name></expr> ?<pos:position pos:line="133" pos:column="33"/></condition><then pos:line="133" pos:column="33"> <expr><name><name pos:line="133" pos:column="34">data<pos:position pos:line="133" pos:column="38"/></name><operator pos:line="133" pos:column="38">-&gt;<pos:position pos:line="133" pos:column="43"/></operator><name pos:line="133" pos:column="40">set<pos:position pos:line="133" pos:column="43"/></name><operator pos:line="133" pos:column="43">.<pos:position pos:line="133" pos:column="44"/></operator><name pos:line="133" pos:column="44">ssl<pos:position pos:line="133" pos:column="47"/></name><operator pos:line="133" pos:column="47">.<pos:position pos:line="133" pos:column="48"/></operator><name pos:line="133" pos:column="48">CApath<pos:position pos:line="133" pos:column="54"/></name></name></expr> <pos:position pos:line="133" pos:column="55"/></then><else pos:line="133" pos:column="55">: <expr><literal type="string" pos:line="133" pos:column="57">"none"<pos:position pos:line="133" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="133" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="65"/></expr_stmt>
  }<pos:position pos:line="134" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="135" pos:column="3">/* SSL always tries to verify the peer, this only says whether it should
   * fail to connect if the verification fails, or if it should continue
   * anyway. In the latter case the result of the verification is checked with
   * SSL_get_verify_result() below. */</comment>
  <expr_stmt><expr><call><name pos:line="139" pos:column="3">SSL_CTX_set_verify<pos:position pos:line="139" pos:column="21"/></name><argument_list pos:line="139" pos:column="21">(<argument><expr><name><name pos:line="139" pos:column="22">connssl<pos:position pos:line="139" pos:column="29"/></name><operator pos:line="139" pos:column="29">-&gt;<pos:position pos:line="139" pos:column="34"/></operator><name pos:line="139" pos:column="31">ctx<pos:position pos:line="139" pos:column="34"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="140" pos:column="22">data<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">-&gt;<pos:position pos:line="140" pos:column="31"/></operator><name pos:line="140" pos:column="28">set<pos:position pos:line="140" pos:column="31"/></name><operator pos:line="140" pos:column="31">.<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="32">ssl<pos:position pos:line="140" pos:column="35"/></name><operator pos:line="140" pos:column="35">.<pos:position pos:line="140" pos:column="36"/></operator><name pos:line="140" pos:column="36">verifypeer<pos:position pos:line="140" pos:column="46"/></name></name></expr>?<pos:position pos:line="140" pos:column="47"/></condition><then><expr><name pos:line="140" pos:column="47">SSL_VERIFY_PEER<pos:position pos:line="140" pos:column="62"/></name></expr></then><else pos:line="140" pos:column="62">:<expr><name pos:line="140" pos:column="63">SSL_VERIFY_NONE<pos:position pos:line="140" pos:column="78"/></name></expr></else></ternary></expr></argument>,
                     <argument><expr><name pos:line="141" pos:column="22">cert_verify_callback<pos:position pos:line="141" pos:column="42"/></name></expr></argument>)<pos:position pos:line="141" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="143" pos:column="3">/* give application a chance to interfere with SSL set up. */</comment>
  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><name><name pos:line="144" pos:column="6">data<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">-&gt;<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="12">set<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">.<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="16">ssl<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">.<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="20">fsslctx<pos:position pos:line="144" pos:column="27"/></name></name></expr>)<pos:position pos:line="144" pos:column="28"/></condition><then pos:line="144" pos:column="28"> <block pos:line="144" pos:column="29">{
    <expr_stmt><expr><name pos:line="145" pos:column="5">retcode<pos:position pos:line="145" pos:column="12"/></name> <operator pos:line="145" pos:column="13">=<pos:position pos:line="145" pos:column="14"/></operator> <call pos:line="145" pos:column="15">(<modifier pos:line="145" pos:column="16">*<pos:position pos:line="145" pos:column="17"/></modifier><name><name pos:line="145" pos:column="17">data<pos:position pos:line="145" pos:column="21"/></name><operator pos:line="145" pos:column="21">-&gt;<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="23">set<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">.<pos:position pos:line="145" pos:column="27"/></operator><name pos:line="145" pos:column="27">ssl<pos:position pos:line="145" pos:column="30"/></name><operator pos:line="145" pos:column="30">.<pos:position pos:line="145" pos:column="31"/></operator><name pos:line="145" pos:column="31">fsslctx<pos:position pos:line="145" pos:column="38"/></name></name>)<argument_list pos:line="145" pos:column="39">(<argument><expr><name pos:line="145" pos:column="40">data<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="46">connssl<pos:position pos:line="145" pos:column="53"/></name><operator pos:line="145" pos:column="53">-&gt;<pos:position pos:line="145" pos:column="58"/></operator><name pos:line="145" pos:column="55">ctx<pos:position pos:line="145" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="146" pos:column="40">data<pos:position pos:line="146" pos:column="44"/></name><operator pos:line="146" pos:column="44">-&gt;<pos:position pos:line="146" pos:column="49"/></operator><name pos:line="146" pos:column="46">set<pos:position pos:line="146" pos:column="49"/></name><operator pos:line="146" pos:column="49">.<pos:position pos:line="146" pos:column="50"/></operator><name pos:line="146" pos:column="50">ssl<pos:position pos:line="146" pos:column="53"/></name><operator pos:line="146" pos:column="53">.<pos:position pos:line="146" pos:column="54"/></operator><name pos:line="146" pos:column="54">fsslctxp<pos:position pos:line="146" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="64"/></expr_stmt>
    <if pos:line="147" pos:column="5">if<condition pos:line="147" pos:column="7">(<expr><name pos:line="147" pos:column="8">retcode<pos:position pos:line="147" pos:column="15"/></name></expr>)<pos:position pos:line="147" pos:column="16"/></condition><then pos:line="147" pos:column="16"> <block pos:line="147" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="148" pos:column="7">failf<pos:position pos:line="148" pos:column="12"/></name><argument_list pos:line="148" pos:column="12">(<argument><expr><name pos:line="148" pos:column="13">data<pos:position pos:line="148" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="148" pos:column="18">"error signaled by ssl ctx callback"<pos:position pos:line="148" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="56"/></expr_stmt>
      <return pos:line="149" pos:column="7">return <expr><name pos:line="149" pos:column="14">retcode<pos:position pos:line="149" pos:column="21"/></name></expr>;<pos:position pos:line="149" pos:column="22"/></return>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if>
  }<pos:position pos:line="151" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="153" pos:column="3">/* Lets make an SSL structure */</comment>
  <expr_stmt><expr><name><name pos:line="154" pos:column="3">connssl<pos:position pos:line="154" pos:column="10"/></name><operator pos:line="154" pos:column="10">-&gt;<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="12">handle<pos:position pos:line="154" pos:column="18"/></name></name> <operator pos:line="154" pos:column="19">=<pos:position pos:line="154" pos:column="20"/></operator> <call><name pos:line="154" pos:column="21">SSL_new<pos:position pos:line="154" pos:column="28"/></name><argument_list pos:line="154" pos:column="28">(<argument><expr><name><name pos:line="154" pos:column="29">connssl<pos:position pos:line="154" pos:column="36"/></name><operator pos:line="154" pos:column="36">-&gt;<pos:position pos:line="154" pos:column="41"/></operator><name pos:line="154" pos:column="38">ctx<pos:position pos:line="154" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="43"/></expr_stmt>
  <if pos:line="155" pos:column="3">if <condition pos:line="155" pos:column="6">(<expr><operator pos:line="155" pos:column="7">!<pos:position pos:line="155" pos:column="8"/></operator><name><name pos:line="155" pos:column="8">connssl<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">-&gt;<pos:position pos:line="155" pos:column="20"/></operator><name pos:line="155" pos:column="17">handle<pos:position pos:line="155" pos:column="23"/></name></name></expr>)<pos:position pos:line="155" pos:column="24"/></condition><then pos:line="155" pos:column="24"> <block pos:line="155" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="156" pos:column="5">failf<pos:position pos:line="156" pos:column="10"/></name><argument_list pos:line="156" pos:column="10">(<argument><expr><name pos:line="156" pos:column="11">data<pos:position pos:line="156" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="17">"SSL: couldn't create a context (handle)!"<pos:position pos:line="156" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="61"/></expr_stmt>
    <return pos:line="157" pos:column="5">return <expr><name pos:line="157" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="157" pos:column="31"/></name></expr>;<pos:position pos:line="157" pos:column="32"/></return>
  }<pos:position pos:line="158" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="159" pos:column="3">SSL_set_connect_state<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name><name pos:line="159" pos:column="25">connssl<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">handle<pos:position pos:line="159" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="161" pos:column="3">connssl<pos:position pos:line="161" pos:column="10"/></name><operator pos:line="161" pos:column="10">-&gt;<pos:position pos:line="161" pos:column="15"/></operator><name pos:line="161" pos:column="12">server_cert<pos:position pos:line="161" pos:column="23"/></name></name> <operator pos:line="161" pos:column="24">=<pos:position pos:line="161" pos:column="25"/></operator> <literal type="number" pos:line="161" pos:column="26">0x0<pos:position pos:line="161" pos:column="29"/></literal></expr>;<pos:position pos:line="161" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="163" pos:column="3">/* Check if there's a cached ID we can/should use here! */</comment>
  <if pos:line="164" pos:column="3">if<condition pos:line="164" pos:column="5">(<expr><operator pos:line="164" pos:column="6">!<pos:position pos:line="164" pos:column="7"/></operator><call><name pos:line="164" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">conn<pos:position pos:line="164" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="35">&amp;<pos:position pos:line="164" pos:column="40"/></operator><name pos:line="164" pos:column="36">ssl_sessionid<pos:position pos:line="164" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="51">NULL<pos:position pos:line="164" pos:column="55"/></name></expr></argument>)<pos:position pos:line="164" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="57"/></condition><then pos:line="164" pos:column="57"> <block pos:line="164" pos:column="58">{
    <comment type="block" pos:line="165" pos:column="5">/* we got a session id, use it! */</comment>
    <if pos:line="166" pos:column="5">if <condition pos:line="166" pos:column="8">(<expr><operator pos:line="166" pos:column="9">!<pos:position pos:line="166" pos:column="10"/></operator><call><name pos:line="166" pos:column="10">SSL_set_session<pos:position pos:line="166" pos:column="25"/></name><argument_list pos:line="166" pos:column="25">(<argument><expr><name><name pos:line="166" pos:column="26">connssl<pos:position pos:line="166" pos:column="33"/></name><operator pos:line="166" pos:column="33">-&gt;<pos:position pos:line="166" pos:column="38"/></operator><name pos:line="166" pos:column="35">handle<pos:position pos:line="166" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="43">ssl_sessionid<pos:position pos:line="166" pos:column="56"/></name></expr></argument>)<pos:position pos:line="166" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="58"/></condition><then pos:line="166" pos:column="58"> <block pos:line="166" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="167" pos:column="7">failf<pos:position pos:line="167" pos:column="12"/></name><argument_list pos:line="167" pos:column="12">(<argument><expr><name pos:line="167" pos:column="13">data<pos:position pos:line="167" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="19">"SSL: SSL_set_session failed: %s"<pos:position pos:line="167" pos:column="52"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="168" pos:column="13">ERR_error_string<pos:position pos:line="168" pos:column="29"/></name><argument_list pos:line="168" pos:column="29">(<argument><expr><call><name pos:line="168" pos:column="30">ERR_get_error<pos:position pos:line="168" pos:column="43"/></name><argument_list pos:line="168" pos:column="43">()<pos:position pos:line="168" pos:column="45"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="168" pos:column="46">NULL<pos:position pos:line="168" pos:column="50"/></name></expr></argument>)<pos:position pos:line="168" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="168" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="53"/></expr_stmt>
      <return pos:line="169" pos:column="7">return <expr><name pos:line="169" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="169" pos:column="37"/></name></expr>;<pos:position pos:line="169" pos:column="38"/></return>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="171" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">infof<pos:position pos:line="172" pos:column="10"/></name> <argument_list pos:line="172" pos:column="11">(<argument><expr><name pos:line="172" pos:column="12">data<pos:position pos:line="172" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="18">"SSL re-using session ID\n"<pos:position pos:line="172" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="173" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="175" pos:column="3">/* pass the raw socket into the SSL layers */</comment>
  <if pos:line="176" pos:column="3">if <condition pos:line="176" pos:column="6">(<expr><operator pos:line="176" pos:column="7">!<pos:position pos:line="176" pos:column="8"/></operator><call><name pos:line="176" pos:column="8">SSL_set_fd<pos:position pos:line="176" pos:column="18"/></name><argument_list pos:line="176" pos:column="18">(<argument><expr><name><name pos:line="176" pos:column="19">connssl<pos:position pos:line="176" pos:column="26"/></name><operator pos:line="176" pos:column="26">-&gt;<pos:position pos:line="176" pos:column="31"/></operator><name pos:line="176" pos:column="28">handle<pos:position pos:line="176" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="36">sockfd<pos:position pos:line="176" pos:column="42"/></name></expr></argument>)<pos:position pos:line="176" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="44"/></condition><then pos:line="176" pos:column="44"> <block pos:line="176" pos:column="45">{
     <expr_stmt><expr><call><name pos:line="177" pos:column="6">failf<pos:position pos:line="177" pos:column="11"/></name><argument_list pos:line="177" pos:column="11">(<argument><expr><name pos:line="177" pos:column="12">data<pos:position pos:line="177" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="18">"SSL: SSL_set_fd failed: %s"<pos:position pos:line="177" pos:column="46"/></literal></expr></argument>,
           <argument><expr><call><name pos:line="178" pos:column="12">ERR_error_string<pos:position pos:line="178" pos:column="28"/></name><argument_list pos:line="178" pos:column="28">(<argument><expr><call><name pos:line="178" pos:column="29">ERR_get_error<pos:position pos:line="178" pos:column="42"/></name><argument_list pos:line="178" pos:column="42">()<pos:position pos:line="178" pos:column="44"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="178" pos:column="45">NULL<pos:position pos:line="178" pos:column="49"/></name></expr></argument>)<pos:position pos:line="178" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="178" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="52"/></expr_stmt>
     <return pos:line="179" pos:column="6">return <expr><name pos:line="179" pos:column="13">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="179" pos:column="36"/></name></expr>;<pos:position pos:line="179" pos:column="37"/></return>
  }<pos:position pos:line="180" pos:column="4"/></block></then></if>

  <while pos:line="182" pos:column="3">while<condition pos:line="182" pos:column="8">(<expr><literal type="number" pos:line="182" pos:column="9">1<pos:position pos:line="182" pos:column="10"/></literal></expr>)<pos:position pos:line="182" pos:column="11"/></condition> <block pos:line="182" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="183" pos:column="5">int<pos:position pos:line="183" pos:column="8"/></name></type> <name pos:line="183" pos:column="9">writefd<pos:position pos:line="183" pos:column="16"/></name></decl>;<pos:position pos:line="183" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="184" pos:column="5">int<pos:position pos:line="184" pos:column="8"/></name></type> <name pos:line="184" pos:column="9">readfd<pos:position pos:line="184" pos:column="15"/></name></decl>;<pos:position pos:line="184" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="185" pos:column="5">long<pos:position pos:line="185" pos:column="9"/></name></type> <name pos:line="185" pos:column="10">timeout_ms<pos:position pos:line="185" pos:column="20"/></name></decl>;<pos:position pos:line="185" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="186" pos:column="5">long<pos:position pos:line="186" pos:column="9"/></name></type> <name pos:line="186" pos:column="10">has_passed<pos:position pos:line="186" pos:column="20"/></name></decl>;<pos:position pos:line="186" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="188" pos:column="5">/* Find out if any timeout is set. If not, use 300 seconds.
       Otherwise, figure out the most strict timeout of the two possible one
       and then how much time that has elapsed to know how much time we
       allow for the connect call */</comment>
    <if pos:line="192" pos:column="5">if<condition pos:line="192" pos:column="7">(<expr><name><name pos:line="192" pos:column="8">data<pos:position pos:line="192" pos:column="12"/></name><operator pos:line="192" pos:column="12">-&gt;<pos:position pos:line="192" pos:column="17"/></operator><name pos:line="192" pos:column="14">set<pos:position pos:line="192" pos:column="17"/></name><operator pos:line="192" pos:column="17">.<pos:position pos:line="192" pos:column="18"/></operator><name pos:line="192" pos:column="18">timeout<pos:position pos:line="192" pos:column="25"/></name></name> <operator pos:line="192" pos:column="26">||<pos:position pos:line="192" pos:column="28"/></operator> <name><name pos:line="192" pos:column="29">data<pos:position pos:line="192" pos:column="33"/></name><operator pos:line="192" pos:column="33">-&gt;<pos:position pos:line="192" pos:column="38"/></operator><name pos:line="192" pos:column="35">set<pos:position pos:line="192" pos:column="38"/></name><operator pos:line="192" pos:column="38">.<pos:position pos:line="192" pos:column="39"/></operator><name pos:line="192" pos:column="39">connecttimeout<pos:position pos:line="192" pos:column="53"/></name></name></expr>)<pos:position pos:line="192" pos:column="54"/></condition><then pos:line="192" pos:column="54"> <block pos:line="192" pos:column="55">{

      <comment type="block" pos:line="194" pos:column="7">/* get the most strict timeout of the ones converted to milliseconds */</comment>
      <if pos:line="195" pos:column="7">if<condition pos:line="195" pos:column="9">(<expr><name><name pos:line="195" pos:column="10">data<pos:position pos:line="195" pos:column="14"/></name><operator pos:line="195" pos:column="14">-&gt;<pos:position pos:line="195" pos:column="19"/></operator><name pos:line="195" pos:column="16">set<pos:position pos:line="195" pos:column="19"/></name><operator pos:line="195" pos:column="19">.<pos:position pos:line="195" pos:column="20"/></operator><name pos:line="195" pos:column="20">timeout<pos:position pos:line="195" pos:column="27"/></name></name> <operator pos:line="195" pos:column="28">&amp;&amp;<pos:position pos:line="195" pos:column="38"/></operator>
         <operator pos:line="196" pos:column="10">(<pos:position pos:line="196" pos:column="11"/></operator><name><name pos:line="196" pos:column="11">data<pos:position pos:line="196" pos:column="15"/></name><operator pos:line="196" pos:column="15">-&gt;<pos:position pos:line="196" pos:column="20"/></operator><name pos:line="196" pos:column="17">set<pos:position pos:line="196" pos:column="20"/></name><operator pos:line="196" pos:column="20">.<pos:position pos:line="196" pos:column="21"/></operator><name pos:line="196" pos:column="21">timeout<pos:position pos:line="196" pos:column="28"/></name></name><operator pos:line="196" pos:column="28">&gt;<pos:position pos:line="196" pos:column="32"/></operator><name><name pos:line="196" pos:column="29">data<pos:position pos:line="196" pos:column="33"/></name><operator pos:line="196" pos:column="33">-&gt;<pos:position pos:line="196" pos:column="38"/></operator><name pos:line="196" pos:column="35">set<pos:position pos:line="196" pos:column="38"/></name><operator pos:line="196" pos:column="38">.<pos:position pos:line="196" pos:column="39"/></operator><name pos:line="196" pos:column="39">connecttimeout<pos:position pos:line="196" pos:column="53"/></name></name><operator pos:line="196" pos:column="53">)<pos:position pos:line="196" pos:column="54"/></operator></expr>)<pos:position pos:line="196" pos:column="55"/></condition><then pos:line="196" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="197" pos:column="9">timeout_ms<pos:position pos:line="197" pos:column="19"/></name> <operator pos:line="197" pos:column="20">=<pos:position pos:line="197" pos:column="21"/></operator> <name><name pos:line="197" pos:column="22">data<pos:position pos:line="197" pos:column="26"/></name><operator pos:line="197" pos:column="26">-&gt;<pos:position pos:line="197" pos:column="31"/></operator><name pos:line="197" pos:column="28">set<pos:position pos:line="197" pos:column="31"/></name><operator pos:line="197" pos:column="31">.<pos:position pos:line="197" pos:column="32"/></operator><name pos:line="197" pos:column="32">timeout<pos:position pos:line="197" pos:column="39"/></name></name><operator pos:line="197" pos:column="39">*<pos:position pos:line="197" pos:column="40"/></operator><literal type="number" pos:line="197" pos:column="40">1000<pos:position pos:line="197" pos:column="44"/></literal></expr>;<pos:position pos:line="197" pos:column="45"/></expr_stmt></block></then>
      <else pos:line="198" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="9">timeout_ms<pos:position pos:line="199" pos:column="19"/></name> <operator pos:line="199" pos:column="20">=<pos:position pos:line="199" pos:column="21"/></operator> <name><name pos:line="199" pos:column="22">data<pos:position pos:line="199" pos:column="26"/></name><operator pos:line="199" pos:column="26">-&gt;<pos:position pos:line="199" pos:column="31"/></operator><name pos:line="199" pos:column="28">set<pos:position pos:line="199" pos:column="31"/></name><operator pos:line="199" pos:column="31">.<pos:position pos:line="199" pos:column="32"/></operator><name pos:line="199" pos:column="32">connecttimeout<pos:position pos:line="199" pos:column="46"/></name></name><operator pos:line="199" pos:column="46">*<pos:position pos:line="199" pos:column="47"/></operator><literal type="number" pos:line="199" pos:column="47">1000<pos:position pos:line="199" pos:column="51"/></literal></expr>;<pos:position pos:line="199" pos:column="52"/></expr_stmt></block></else></if>
    }<pos:position pos:line="200" pos:column="6"/></block></then>
    <else pos:line="201" pos:column="5">else
      <comment type="block" pos:line="202" pos:column="7">/* no particular time-out has been set */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="203" pos:column="7">timeout_ms<pos:position pos:line="203" pos:column="17"/></name><operator pos:line="203" pos:column="17">=<pos:position pos:line="203" pos:column="18"/></operator> <name pos:line="203" pos:column="19">DEFAULT_CONNECT_TIMEOUT<pos:position pos:line="203" pos:column="42"/></name></expr>;<pos:position pos:line="203" pos:column="43"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="205" pos:column="5">/* Evaluate in milliseconds how much time that has passed */</comment>
    <expr_stmt><expr><name pos:line="206" pos:column="5">has_passed<pos:position pos:line="206" pos:column="15"/></name> <operator pos:line="206" pos:column="16">=<pos:position pos:line="206" pos:column="17"/></operator> <call><name pos:line="206" pos:column="18">Curl_tvdiff<pos:position pos:line="206" pos:column="29"/></name><argument_list pos:line="206" pos:column="29">(<argument><expr><call><name pos:line="206" pos:column="30">Curl_tvnow<pos:position pos:line="206" pos:column="40"/></name><argument_list pos:line="206" pos:column="40">()<pos:position pos:line="206" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="44">data<pos:position pos:line="206" pos:column="48"/></name><operator pos:line="206" pos:column="48">-&gt;<pos:position pos:line="206" pos:column="53"/></operator><name pos:line="206" pos:column="50">progress<pos:position pos:line="206" pos:column="58"/></name><operator pos:line="206" pos:column="58">.<pos:position pos:line="206" pos:column="59"/></operator><name pos:line="206" pos:column="59">t_startsingle<pos:position pos:line="206" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="74"/></expr_stmt>

    <comment type="block" pos:line="208" pos:column="5">/* subtract the passed time */</comment>
    <expr_stmt><expr><name pos:line="209" pos:column="5">timeout_ms<pos:position pos:line="209" pos:column="15"/></name> <operator pos:line="209" pos:column="16">-=<pos:position pos:line="209" pos:column="18"/></operator> <name pos:line="209" pos:column="19">has_passed<pos:position pos:line="209" pos:column="29"/></name></expr>;<pos:position pos:line="209" pos:column="30"/></expr_stmt>

    <if pos:line="211" pos:column="5">if<condition pos:line="211" pos:column="7">(<expr><name pos:line="211" pos:column="8">timeout_ms<pos:position pos:line="211" pos:column="18"/></name> <operator pos:line="211" pos:column="19">&lt;<pos:position pos:line="211" pos:column="23"/></operator> <literal type="number" pos:line="211" pos:column="21">0<pos:position pos:line="211" pos:column="22"/></literal></expr>)<pos:position pos:line="211" pos:column="23"/></condition><then pos:line="211" pos:column="23"> <block pos:line="211" pos:column="24">{
      <comment type="block" pos:line="212" pos:column="7">/* a precaution, no need to continue if time already is up */</comment>
      <expr_stmt><expr><call><name pos:line="213" pos:column="7">failf<pos:position pos:line="213" pos:column="12"/></name><argument_list pos:line="213" pos:column="12">(<argument><expr><name pos:line="213" pos:column="13">data<pos:position pos:line="213" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="19">"SSL connection timeout"<pos:position pos:line="213" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="45"/></expr_stmt>
      <return pos:line="214" pos:column="7">return <expr><name pos:line="214" pos:column="14">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="214" pos:column="39"/></name></expr>;<pos:position pos:line="214" pos:column="40"/></return>
    }<pos:position pos:line="215" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="217" pos:column="5">readfd<pos:position pos:line="217" pos:column="11"/></name> <operator pos:line="217" pos:column="12">=<pos:position pos:line="217" pos:column="13"/></operator> <name pos:line="217" pos:column="14">CURL_SOCKET_BAD<pos:position pos:line="217" pos:column="29"/></name></expr>;<pos:position pos:line="217" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="218" pos:column="5">writefd<pos:position pos:line="218" pos:column="12"/></name> <operator pos:line="218" pos:column="13">=<pos:position pos:line="218" pos:column="14"/></operator> <name pos:line="218" pos:column="15">CURL_SOCKET_BAD<pos:position pos:line="218" pos:column="30"/></name></expr>;<pos:position pos:line="218" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="220" pos:column="5">err<pos:position pos:line="220" pos:column="8"/></name> <operator pos:line="220" pos:column="9">=<pos:position pos:line="220" pos:column="10"/></operator> <call><name pos:line="220" pos:column="11">SSL_connect<pos:position pos:line="220" pos:column="22"/></name><argument_list pos:line="220" pos:column="22">(<argument><expr><name><name pos:line="220" pos:column="23">connssl<pos:position pos:line="220" pos:column="30"/></name><operator pos:line="220" pos:column="30">-&gt;<pos:position pos:line="220" pos:column="35"/></operator><name pos:line="220" pos:column="32">handle<pos:position pos:line="220" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="222" pos:column="5">/* 1  is fine
       0  is "not successful but was shut down controlled"
       &lt;0 is "handshake was not successful, because a fatal error occurred" */</comment>
    <if pos:line="225" pos:column="5">if<condition pos:line="225" pos:column="7">(<expr><literal type="number" pos:line="225" pos:column="8">1<pos:position pos:line="225" pos:column="9"/></literal> <operator pos:line="225" pos:column="10">!=<pos:position pos:line="225" pos:column="12"/></operator> <name pos:line="225" pos:column="13">err<pos:position pos:line="225" pos:column="16"/></name></expr>)<pos:position pos:line="225" pos:column="17"/></condition><then pos:line="225" pos:column="17"> <block pos:line="225" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="226" pos:column="7">int<pos:position pos:line="226" pos:column="10"/></name></type> <name pos:line="226" pos:column="11">detail<pos:position pos:line="226" pos:column="17"/></name> <init pos:line="226" pos:column="18">= <expr><call><name pos:line="226" pos:column="20">SSL_get_error<pos:position pos:line="226" pos:column="33"/></name><argument_list pos:line="226" pos:column="33">(<argument><expr><name><name pos:line="226" pos:column="34">connssl<pos:position pos:line="226" pos:column="41"/></name><operator pos:line="226" pos:column="41">-&gt;<pos:position pos:line="226" pos:column="46"/></operator><name pos:line="226" pos:column="43">handle<pos:position pos:line="226" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="51">err<pos:position pos:line="226" pos:column="54"/></name></expr></argument>)<pos:position pos:line="226" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="226" pos:column="56"/></decl_stmt>

      <if pos:line="228" pos:column="7">if<condition pos:line="228" pos:column="9">(<expr><name pos:line="228" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="228" pos:column="29"/></name> <operator pos:line="228" pos:column="30">==<pos:position pos:line="228" pos:column="32"/></operator> <name pos:line="228" pos:column="33">detail<pos:position pos:line="228" pos:column="39"/></name></expr>)<pos:position pos:line="228" pos:column="40"/></condition><then pos:line="228" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="229" pos:column="9">readfd<pos:position pos:line="229" pos:column="15"/></name> <operator pos:line="229" pos:column="16">=<pos:position pos:line="229" pos:column="17"/></operator> <name pos:line="229" pos:column="18">sockfd<pos:position pos:line="229" pos:column="24"/></name></expr>;<pos:position pos:line="229" pos:column="25"/></expr_stmt></block></then>
      <elseif pos:line="230" pos:column="7">else <if pos:line="230" pos:column="12">if<condition pos:line="230" pos:column="14">(<expr><name pos:line="230" pos:column="15">SSL_ERROR_WANT_WRITE<pos:position pos:line="230" pos:column="35"/></name> <operator pos:line="230" pos:column="36">==<pos:position pos:line="230" pos:column="38"/></operator> <name pos:line="230" pos:column="39">detail<pos:position pos:line="230" pos:column="45"/></name></expr>)<pos:position pos:line="230" pos:column="46"/></condition><then pos:line="230" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="231" pos:column="9">writefd<pos:position pos:line="231" pos:column="16"/></name> <operator pos:line="231" pos:column="17">=<pos:position pos:line="231" pos:column="18"/></operator> <name pos:line="231" pos:column="19">sockfd<pos:position pos:line="231" pos:column="25"/></name></expr>;<pos:position pos:line="231" pos:column="26"/></expr_stmt></block></then></if></elseif>
      <else pos:line="232" pos:column="7">else <block pos:line="232" pos:column="12">{
        <comment type="block" pos:line="233" pos:column="9">/* untreated error */</comment>
        <decl_stmt><decl><type><name pos:line="234" pos:column="9">unsigned<pos:position pos:line="234" pos:column="17"/></name> <name pos:line="234" pos:column="18">long<pos:position pos:line="234" pos:column="22"/></name></type> <name pos:line="234" pos:column="23">errdetail<pos:position pos:line="234" pos:column="32"/></name></decl>;<pos:position pos:line="234" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="235" pos:column="9">char<pos:position pos:line="235" pos:column="13"/></name></type> <name><name pos:line="235" pos:column="14">error_buffer<pos:position pos:line="235" pos:column="26"/></name><index pos:line="235" pos:column="26">[<expr><literal type="number" pos:line="235" pos:column="27">120<pos:position pos:line="235" pos:column="30"/></literal></expr>]<pos:position pos:line="235" pos:column="31"/></index></name></decl>;<pos:position pos:line="235" pos:column="32"/></decl_stmt> <comment type="block" pos:line="235" pos:column="33">/* OpenSSL documents that this must be at least
                                   120 bytes long. */</comment>
        <decl_stmt><decl><type><name pos:line="237" pos:column="9">CURLcode<pos:position pos:line="237" pos:column="17"/></name></type> <name pos:line="237" pos:column="18">rc<pos:position pos:line="237" pos:column="20"/></name></decl>;<pos:position pos:line="237" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="238" pos:column="9">const<pos:position pos:line="238" pos:column="14"/></specifier> <name pos:line="238" pos:column="15">char<pos:position pos:line="238" pos:column="19"/></name> <modifier pos:line="238" pos:column="20">*<pos:position pos:line="238" pos:column="21"/></modifier></type><name pos:line="238" pos:column="21">cert_problem<pos:position pos:line="238" pos:column="33"/></name> <init pos:line="238" pos:column="34">= <expr><name pos:line="238" pos:column="36">NULL<pos:position pos:line="238" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="238" pos:column="41"/></decl_stmt>

        <expr_stmt><expr><name pos:line="240" pos:column="9">errdetail<pos:position pos:line="240" pos:column="18"/></name> <operator pos:line="240" pos:column="19">=<pos:position pos:line="240" pos:column="20"/></operator> <call><name pos:line="240" pos:column="21">ERR_get_error<pos:position pos:line="240" pos:column="34"/></name><argument_list pos:line="240" pos:column="34">()<pos:position pos:line="240" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="37"/></expr_stmt> <comment type="block" pos:line="240" pos:column="38">/* Gets the earliest error code from the
                                        thread's error queue and removes the
                                        entry. */</comment>

        <switch pos:line="244" pos:column="9">switch<condition pos:line="244" pos:column="15">(<expr><name pos:line="244" pos:column="16">errdetail<pos:position pos:line="244" pos:column="25"/></name></expr>)<pos:position pos:line="244" pos:column="26"/></condition> <block pos:line="244" pos:column="27">{
        <case pos:line="245" pos:column="9">case <expr><literal type="number" pos:line="245" pos:column="14">0x1407E086<pos:position pos:line="245" pos:column="24"/></literal></expr>:<pos:position pos:line="245" pos:column="25"/></case>
          <comment type="block" pos:line="246" pos:column="11">/* 1407E086:
             SSL routines:
             SSL2_SET_CERTIFICATE:
             certificate verify failed */</comment>
          <comment type="block" pos:line="250" pos:column="11">/* fall-through */</comment>
        <case pos:line="251" pos:column="9">case <expr><literal type="number" pos:line="251" pos:column="14">0x14090086<pos:position pos:line="251" pos:column="24"/></literal></expr>:<pos:position pos:line="251" pos:column="25"/></case>
          <comment type="block" pos:line="252" pos:column="11">/* 14090086:
             SSL routines:
             SSL3_GET_SERVER_CERTIFICATE:
             certificate verify failed */</comment>
          <expr_stmt><expr><name pos:line="256" pos:column="11">cert_problem<pos:position pos:line="256" pos:column="23"/></name> <operator pos:line="256" pos:column="24">=<pos:position pos:line="256" pos:column="25"/></operator> <literal type="string" pos:line="256" pos:column="26">"SSL certificate problem, verify that the CA cert is"<pos:position pos:line="256" pos:column="79"/></literal>
                         <literal type="string" pos:line="257" pos:column="26">" OK. Details:\n"<pos:position pos:line="257" pos:column="43"/></literal></expr>;<pos:position pos:line="257" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><name pos:line="258" pos:column="11">rc<pos:position pos:line="258" pos:column="13"/></name> <operator pos:line="258" pos:column="14">=<pos:position pos:line="258" pos:column="15"/></operator> <name pos:line="258" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="258" pos:column="32"/></name></expr>;<pos:position pos:line="258" pos:column="33"/></expr_stmt>
          <break pos:line="259" pos:column="11">break;<pos:position pos:line="259" pos:column="17"/></break>
        <default pos:line="260" pos:column="9">default:<pos:position pos:line="260" pos:column="17"/></default>
          <expr_stmt><expr><name pos:line="261" pos:column="11">rc<pos:position pos:line="261" pos:column="13"/></name> <operator pos:line="261" pos:column="14">=<pos:position pos:line="261" pos:column="15"/></operator> <name pos:line="261" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="261" pos:column="39"/></name></expr>;<pos:position pos:line="261" pos:column="40"/></expr_stmt>
          <break pos:line="262" pos:column="11">break;<pos:position pos:line="262" pos:column="17"/></break>
        }<pos:position pos:line="263" pos:column="10"/></block></switch>

          <comment type="block" pos:line="265" pos:column="11">/* detail is already set to the SSL error above */</comment>

        <comment type="block" pos:line="267" pos:column="9">/* If we e.g. use SSLv2 request-method and the server doesn't like us
         * (RST connection etc.), OpenSSL gives no explanation whatsoever and
         * the SO_ERROR is also lost.
         */</comment>
        <if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><name pos:line="271" pos:column="13">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="271" pos:column="36"/></name> <operator pos:line="271" pos:column="37">==<pos:position pos:line="271" pos:column="39"/></operator> <name pos:line="271" pos:column="40">rc<pos:position pos:line="271" pos:column="42"/></name> <operator pos:line="271" pos:column="43">&amp;&amp;<pos:position pos:line="271" pos:column="53"/></operator> <name pos:line="271" pos:column="46">errdetail<pos:position pos:line="271" pos:column="55"/></name> <operator pos:line="271" pos:column="56">==<pos:position pos:line="271" pos:column="58"/></operator> <literal type="number" pos:line="271" pos:column="59">0<pos:position pos:line="271" pos:column="60"/></literal></expr>)<pos:position pos:line="271" pos:column="61"/></condition><then pos:line="271" pos:column="61"> <block pos:line="271" pos:column="62">{
          <expr_stmt><expr><call><name pos:line="272" pos:column="11">failf<pos:position pos:line="272" pos:column="16"/></name><argument_list pos:line="272" pos:column="16">(<argument><expr><name pos:line="272" pos:column="17">data<pos:position pos:line="272" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="23">"Unknown SSL protocol error in connection to %s:%d "<pos:position pos:line="272" pos:column="75"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="273" pos:column="17">conn<pos:position pos:line="273" pos:column="21"/></name><operator pos:line="273" pos:column="21">-&gt;<pos:position pos:line="273" pos:column="26"/></operator><name pos:line="273" pos:column="23">host<pos:position pos:line="273" pos:column="27"/></name><operator pos:line="273" pos:column="27">.<pos:position pos:line="273" pos:column="28"/></operator><name pos:line="273" pos:column="28">name<pos:position pos:line="273" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="34">conn<pos:position pos:line="273" pos:column="38"/></name><operator pos:line="273" pos:column="38">-&gt;<pos:position pos:line="273" pos:column="43"/></operator><name pos:line="273" pos:column="40">port<pos:position pos:line="273" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="273" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="46"/></expr_stmt>
          <return pos:line="274" pos:column="11">return <expr><name pos:line="274" pos:column="18">rc<pos:position pos:line="274" pos:column="20"/></name></expr>;<pos:position pos:line="274" pos:column="21"/></return>
        }<pos:position pos:line="275" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="276" pos:column="9">/* Could be a CERT problem */</comment>

        <expr_stmt><expr><call><name pos:line="278" pos:column="9">SSL_strerror<pos:position pos:line="278" pos:column="21"/></name><argument_list pos:line="278" pos:column="21">(<argument><expr><name pos:line="278" pos:column="22">errdetail<pos:position pos:line="278" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="33">error_buffer<pos:position pos:line="278" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="278" pos:column="47">sizeof<argument_list pos:line="278" pos:column="53">(<argument><expr><name pos:line="278" pos:column="54">error_buffer<pos:position pos:line="278" pos:column="66"/></name></expr></argument>)<pos:position pos:line="278" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="278" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="279" pos:column="9">failf<pos:position pos:line="279" pos:column="14"/></name><argument_list pos:line="279" pos:column="14">(<argument><expr><name pos:line="279" pos:column="15">data<pos:position pos:line="279" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="21">"%s%s"<pos:position pos:line="279" pos:column="27"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="279" pos:column="29">cert_problem<pos:position pos:line="279" pos:column="41"/></name></expr> ?<pos:position pos:line="279" pos:column="43"/></condition><then pos:line="279" pos:column="43"> <expr><name pos:line="279" pos:column="44">cert_problem<pos:position pos:line="279" pos:column="56"/></name></expr> <pos:position pos:line="279" pos:column="57"/></then><else pos:line="279" pos:column="57">: <expr><literal type="string" pos:line="279" pos:column="59">""<pos:position pos:line="279" pos:column="61"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="279" pos:column="63">error_buffer<pos:position pos:line="279" pos:column="75"/></name></expr></argument>)<pos:position pos:line="279" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="77"/></expr_stmt>
        <return pos:line="280" pos:column="9">return <expr><name pos:line="280" pos:column="16">rc<pos:position pos:line="280" pos:column="18"/></name></expr>;<pos:position pos:line="280" pos:column="19"/></return>
      }<pos:position pos:line="281" pos:column="8"/></block></else></if>
    }<pos:position pos:line="282" pos:column="6"/></block></then>
    <else pos:line="283" pos:column="5">else
      <comment type="block" pos:line="284" pos:column="7">/* we have been connected fine, get out of the connect loop */</comment>
      <block type="pseudo"><break pos:line="285" pos:column="7">break;<pos:position pos:line="285" pos:column="13"/></break></block></else></if>

    <while pos:line="287" pos:column="5">while<condition pos:line="287" pos:column="10">(<expr><literal type="number" pos:line="287" pos:column="11">1<pos:position pos:line="287" pos:column="12"/></literal></expr>)<pos:position pos:line="287" pos:column="13"/></condition> <block pos:line="287" pos:column="14">{
      <expr_stmt><expr><name pos:line="288" pos:column="7">what<pos:position pos:line="288" pos:column="11"/></name> <operator pos:line="288" pos:column="12">=<pos:position pos:line="288" pos:column="13"/></operator> <call><name pos:line="288" pos:column="14">Curl_select<pos:position pos:line="288" pos:column="25"/></name><argument_list pos:line="288" pos:column="25">(<argument><expr><name pos:line="288" pos:column="26">readfd<pos:position pos:line="288" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="34">writefd<pos:position pos:line="288" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="288" pos:column="43">(<pos:position pos:line="288" pos:column="44"/></operator><name pos:line="288" pos:column="44">int<pos:position pos:line="288" pos:column="47"/></name><operator pos:line="288" pos:column="47">)<pos:position pos:line="288" pos:column="48"/></operator><name pos:line="288" pos:column="48">timeout_ms<pos:position pos:line="288" pos:column="58"/></name></expr></argument>)<pos:position pos:line="288" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="60"/></expr_stmt>
      <if pos:line="289" pos:column="7">if<condition pos:line="289" pos:column="9">(<expr><name pos:line="289" pos:column="10">what<pos:position pos:line="289" pos:column="14"/></name> <operator pos:line="289" pos:column="15">&gt;<pos:position pos:line="289" pos:column="19"/></operator> <literal type="number" pos:line="289" pos:column="17">0<pos:position pos:line="289" pos:column="18"/></literal></expr>)<pos:position pos:line="289" pos:column="19"/></condition><then pos:line="289" pos:column="19">
        <comment type="block" pos:line="290" pos:column="9">/* reabable or writable, go loop in the outer loop */</comment>
        <block type="pseudo"><break pos:line="291" pos:column="9">break;<pos:position pos:line="291" pos:column="15"/></break></block></then>
      <elseif pos:line="292" pos:column="7">else <if pos:line="292" pos:column="12">if<condition pos:line="292" pos:column="14">(<expr><literal type="number" pos:line="292" pos:column="15">0<pos:position pos:line="292" pos:column="16"/></literal> <operator pos:line="292" pos:column="17">==<pos:position pos:line="292" pos:column="19"/></operator> <name pos:line="292" pos:column="20">what<pos:position pos:line="292" pos:column="24"/></name></expr>)<pos:position pos:line="292" pos:column="25"/></condition><then pos:line="292" pos:column="25"> <block pos:line="292" pos:column="26">{
        <comment type="block" pos:line="293" pos:column="9">/* timeout */</comment>
        <expr_stmt><expr><call><name pos:line="294" pos:column="9">failf<pos:position pos:line="294" pos:column="14"/></name><argument_list pos:line="294" pos:column="14">(<argument><expr><name pos:line="294" pos:column="15">data<pos:position pos:line="294" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="21">"SSL connection timeout"<pos:position pos:line="294" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="47"/></expr_stmt>
        <return pos:line="295" pos:column="9">return <expr><name pos:line="295" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="295" pos:column="40"/></name></expr>;<pos:position pos:line="295" pos:column="41"/></return>
      }<pos:position pos:line="296" pos:column="8"/></block></then></if></elseif>
      <else pos:line="297" pos:column="7">else <block pos:line="297" pos:column="12">{
        <comment type="block" pos:line="298" pos:column="9">/* anything that gets here is fatally bad */</comment>
        <expr_stmt><expr><call><name pos:line="299" pos:column="9">failf<pos:position pos:line="299" pos:column="14"/></name><argument_list pos:line="299" pos:column="14">(<argument><expr><name pos:line="299" pos:column="15">data<pos:position pos:line="299" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="299" pos:column="21">"select on SSL socket, errno: %d"<pos:position pos:line="299" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="299" pos:column="56">Curl_ourerrno<pos:position pos:line="299" pos:column="69"/></name><argument_list pos:line="299" pos:column="69">()<pos:position pos:line="299" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="299" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="73"/></expr_stmt>
        <return pos:line="300" pos:column="9">return <expr><name pos:line="300" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="300" pos:column="39"/></name></expr>;<pos:position pos:line="300" pos:column="40"/></return>
      }<pos:position pos:line="301" pos:column="8"/></block></else></if>
    }<pos:position pos:line="302" pos:column="6"/></block></while> <comment type="block" pos:line="302" pos:column="7">/* while()-loop for the select() */</comment>
  }<pos:position pos:line="303" pos:column="4"/></block></while> <comment type="block" pos:line="303" pos:column="5">/* while()-loop for the SSL_connect() */</comment>

  <comment type="block" pos:line="305" pos:column="3">/* Informational message */</comment>
  <expr_stmt><expr><call><name pos:line="306" pos:column="3">infof<pos:position pos:line="306" pos:column="8"/></name> <argument_list pos:line="306" pos:column="9">(<argument><expr><name pos:line="306" pos:column="10">data<pos:position pos:line="306" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="16">"SSL connection using %s\n"<pos:position pos:line="306" pos:column="43"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="307" pos:column="10">SSL_get_cipher<pos:position pos:line="307" pos:column="24"/></name><argument_list pos:line="307" pos:column="24">(<argument><expr><name><name pos:line="307" pos:column="25">connssl<pos:position pos:line="307" pos:column="32"/></name><operator pos:line="307" pos:column="32">-&gt;<pos:position pos:line="307" pos:column="37"/></operator><name pos:line="307" pos:column="34">handle<pos:position pos:line="307" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="307" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="307" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="43"/></expr_stmt>

  <if pos:line="309" pos:column="3">if<condition pos:line="309" pos:column="5">(<expr><operator pos:line="309" pos:column="6">!<pos:position pos:line="309" pos:column="7"/></operator><name pos:line="309" pos:column="7">ssl_sessionid<pos:position pos:line="309" pos:column="20"/></name></expr>)<pos:position pos:line="309" pos:column="21"/></condition><then pos:line="309" pos:column="21"> <block pos:line="309" pos:column="22">{
    <comment type="block" pos:line="310" pos:column="5">/* Since this is not a cached session ID, then we want to stach this one
       in the cache! */</comment>
    <decl_stmt><decl><type><name pos:line="312" pos:column="5">SSL_SESSION<pos:position pos:line="312" pos:column="16"/></name> <modifier pos:line="312" pos:column="17">*<pos:position pos:line="312" pos:column="18"/></modifier></type><name pos:line="312" pos:column="18">ssl_sessionid<pos:position pos:line="312" pos:column="31"/></name></decl>;<pos:position pos:line="312" pos:column="32"/></decl_stmt>
<cpp:ifdef pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">ifdef<pos:position pos:line="313" pos:column="7"/></cpp:directive> <name pos:line="313" pos:column="8">HAVE_SSL_GET1_SESSION<pos:position pos:line="313" pos:column="29"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="314" pos:column="5">ssl_sessionid<pos:position pos:line="314" pos:column="18"/></name> <operator pos:line="314" pos:column="19">=<pos:position pos:line="314" pos:column="20"/></operator> <call><name pos:line="314" pos:column="21">SSL_get1_session<pos:position pos:line="314" pos:column="37"/></name><argument_list pos:line="314" pos:column="37">(<argument><expr><name><name pos:line="314" pos:column="38">connssl<pos:position pos:line="314" pos:column="45"/></name><operator pos:line="314" pos:column="45">-&gt;<pos:position pos:line="314" pos:column="50"/></operator><name pos:line="314" pos:column="47">handle<pos:position pos:line="314" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="314" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="316" pos:column="5">/* SSL_get1_session() will increment the reference
       count and the session will stay in memory until explicitly freed with
       SSL_SESSION_free(3), regardless of its state.
       This function was introduced in openssl 0.9.5a. */</comment>
<cpp:else pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">else<pos:position pos:line="320" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="321" pos:column="5">ssl_sessionid<pos:position pos:line="321" pos:column="18"/></name> <operator pos:line="321" pos:column="19">=<pos:position pos:line="321" pos:column="20"/></operator> <call><name pos:line="321" pos:column="21">SSL_get_session<pos:position pos:line="321" pos:column="36"/></name><argument_list pos:line="321" pos:column="36">(<argument><expr><name><name pos:line="321" pos:column="37">connssl<pos:position pos:line="321" pos:column="44"/></name><operator pos:line="321" pos:column="44">-&gt;<pos:position pos:line="321" pos:column="49"/></operator><name pos:line="321" pos:column="46">handle<pos:position pos:line="321" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="321" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="323" pos:column="5">/* if SSL_get1_session() is unavailable, use SSL_get_session().
       This is an inferior option because the session can be flushed
       at any time by openssl. It is included only so curl compiles
       under versions of openssl &lt; 0.9.5a.

       WARNING: How curl behaves if it's session is flushed is
       untested.
    */</comment>
<cpp:endif pos:line="331" pos:column="1">#<cpp:directive pos:line="331" pos:column="2">endif<pos:position pos:line="331" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="332" pos:column="5">retcode<pos:position pos:line="332" pos:column="12"/></name> <operator pos:line="332" pos:column="13">=<pos:position pos:line="332" pos:column="14"/></operator> <call><name pos:line="332" pos:column="15">Curl_ssl_addsessionid<pos:position pos:line="332" pos:column="36"/></name><argument_list pos:line="332" pos:column="36">(<argument><expr><name pos:line="332" pos:column="37">conn<pos:position pos:line="332" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="332" pos:column="43">ssl_sessionid<pos:position pos:line="332" pos:column="56"/></name></expr></argument>,
                                    <argument><expr><literal type="number" pos:line="333" pos:column="37">0<pos:position pos:line="333" pos:column="38"/></literal></expr></argument> <comment type="block" pos:line="333" pos:column="39">/* unknown size */</comment>)<pos:position pos:line="333" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="59"/></expr_stmt>
    <if pos:line="334" pos:column="5">if<condition pos:line="334" pos:column="7">(<expr><name pos:line="334" pos:column="8">retcode<pos:position pos:line="334" pos:column="15"/></name></expr>)<pos:position pos:line="334" pos:column="16"/></condition><then pos:line="334" pos:column="16"> <block pos:line="334" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="335" pos:column="7">failf<pos:position pos:line="335" pos:column="12"/></name><argument_list pos:line="335" pos:column="12">(<argument><expr><name pos:line="335" pos:column="13">data<pos:position pos:line="335" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="19">"failed to store ssl session"<pos:position pos:line="335" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="50"/></expr_stmt>
      <return pos:line="336" pos:column="7">return <expr><name pos:line="336" pos:column="14">retcode<pos:position pos:line="336" pos:column="21"/></name></expr>;<pos:position pos:line="336" pos:column="22"/></return>
    }<pos:position pos:line="337" pos:column="6"/></block></then></if>
  }<pos:position pos:line="338" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="341" pos:column="3">/* Get server's certificate (note: beware of dynamic allocation) - opt */</comment>
  <comment type="block" pos:line="342" pos:column="3">/* major serious hack alert -- we should check certificates
   * to authenticate the server; otherwise we risk man-in-the-middle
   * attack
   */</comment>

  <expr_stmt><expr><name><name pos:line="347" pos:column="3">connssl<pos:position pos:line="347" pos:column="10"/></name><operator pos:line="347" pos:column="10">-&gt;<pos:position pos:line="347" pos:column="15"/></operator><name pos:line="347" pos:column="12">server_cert<pos:position pos:line="347" pos:column="23"/></name></name> <operator pos:line="347" pos:column="24">=<pos:position pos:line="347" pos:column="25"/></operator> <call><name pos:line="347" pos:column="26">SSL_get_peer_certificate<pos:position pos:line="347" pos:column="50"/></name><argument_list pos:line="347" pos:column="50">(<argument><expr><name><name pos:line="347" pos:column="51">connssl<pos:position pos:line="347" pos:column="58"/></name><operator pos:line="347" pos:column="58">-&gt;<pos:position pos:line="347" pos:column="63"/></operator><name pos:line="347" pos:column="60">handle<pos:position pos:line="347" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="347" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="68"/></expr_stmt>
  <if pos:line="348" pos:column="3">if<condition pos:line="348" pos:column="5">(<expr><operator pos:line="348" pos:column="6">!<pos:position pos:line="348" pos:column="7"/></operator><name><name pos:line="348" pos:column="7">connssl<pos:position pos:line="348" pos:column="14"/></name><operator pos:line="348" pos:column="14">-&gt;<pos:position pos:line="348" pos:column="19"/></operator><name pos:line="348" pos:column="16">server_cert<pos:position pos:line="348" pos:column="27"/></name></name></expr>)<pos:position pos:line="348" pos:column="28"/></condition><then pos:line="348" pos:column="28"> <block pos:line="348" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="349" pos:column="5">failf<pos:position pos:line="349" pos:column="10"/></name><argument_list pos:line="349" pos:column="10">(<argument><expr><name pos:line="349" pos:column="11">data<pos:position pos:line="349" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="349" pos:column="17">"SSL: couldn't get peer certificate!"<pos:position pos:line="349" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="56"/></expr_stmt>
    <return pos:line="350" pos:column="5">return <expr><name pos:line="350" pos:column="12">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="350" pos:column="38"/></name></expr>;<pos:position pos:line="350" pos:column="39"/></return>
  }<pos:position pos:line="351" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="352" pos:column="3">infof<pos:position pos:line="352" pos:column="8"/></name> <argument_list pos:line="352" pos:column="9">(<argument><expr><name pos:line="352" pos:column="10">data<pos:position pos:line="352" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="16">"Server certificate:\n"<pos:position pos:line="352" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="354" pos:column="3">str<pos:position pos:line="354" pos:column="6"/></name> <operator pos:line="354" pos:column="7">=<pos:position pos:line="354" pos:column="8"/></operator> <call><name pos:line="354" pos:column="9">X509_NAME_oneline<pos:position pos:line="354" pos:column="26"/></name><argument_list pos:line="354" pos:column="26">(<argument><expr><call><name pos:line="354" pos:column="27">X509_get_subject_name<pos:position pos:line="354" pos:column="48"/></name><argument_list pos:line="354" pos:column="48">(<argument><expr><name><name pos:line="354" pos:column="49">connssl<pos:position pos:line="354" pos:column="56"/></name><operator pos:line="354" pos:column="56">-&gt;<pos:position pos:line="354" pos:column="61"/></operator><name pos:line="354" pos:column="58">server_cert<pos:position pos:line="354" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="354" pos:column="70"/></argument_list></call></expr></argument>,
                          <argument><expr><name pos:line="355" pos:column="27">NULL<pos:position pos:line="355" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="355" pos:column="33">0<pos:position pos:line="355" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="355" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="36"/></expr_stmt>
  <if pos:line="356" pos:column="3">if<condition pos:line="356" pos:column="5">(<expr><operator pos:line="356" pos:column="6">!<pos:position pos:line="356" pos:column="7"/></operator><name pos:line="356" pos:column="7">str<pos:position pos:line="356" pos:column="10"/></name></expr>)<pos:position pos:line="356" pos:column="11"/></condition><then pos:line="356" pos:column="11"> <block pos:line="356" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="357" pos:column="5">failf<pos:position pos:line="357" pos:column="10"/></name><argument_list pos:line="357" pos:column="10">(<argument><expr><name pos:line="357" pos:column="11">data<pos:position pos:line="357" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="357" pos:column="17">"SSL: couldn't get X509-subject!"<pos:position pos:line="357" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="357" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="358" pos:column="5">X509_free<pos:position pos:line="358" pos:column="14"/></name><argument_list pos:line="358" pos:column="14">(<argument><expr><name><name pos:line="358" pos:column="15">connssl<pos:position pos:line="358" pos:column="22"/></name><operator pos:line="358" pos:column="22">-&gt;<pos:position pos:line="358" pos:column="27"/></operator><name pos:line="358" pos:column="24">server_cert<pos:position pos:line="358" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="358" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="359" pos:column="5">connssl<pos:position pos:line="359" pos:column="12"/></name><operator pos:line="359" pos:column="12">-&gt;<pos:position pos:line="359" pos:column="17"/></operator><name pos:line="359" pos:column="14">server_cert<pos:position pos:line="359" pos:column="25"/></name></name> <operator pos:line="359" pos:column="26">=<pos:position pos:line="359" pos:column="27"/></operator> <name pos:line="359" pos:column="28">NULL<pos:position pos:line="359" pos:column="32"/></name></expr>;<pos:position pos:line="359" pos:column="33"/></expr_stmt>
    <return pos:line="360" pos:column="5">return <expr><name pos:line="360" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="360" pos:column="35"/></name></expr>;<pos:position pos:line="360" pos:column="36"/></return>
  }<pos:position pos:line="361" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="362" pos:column="3">infof<pos:position pos:line="362" pos:column="8"/></name><argument_list pos:line="362" pos:column="8">(<argument><expr><name pos:line="362" pos:column="9">data<pos:position pos:line="362" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="362" pos:column="15">"\t subject: %s\n"<pos:position pos:line="362" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="362" pos:column="35">str<pos:position pos:line="362" pos:column="38"/></name></expr></argument>)<pos:position pos:line="362" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="363" pos:column="3">CRYPTO_free<pos:position pos:line="363" pos:column="14"/></name><argument_list pos:line="363" pos:column="14">(<argument><expr><name pos:line="363" pos:column="15">str<pos:position pos:line="363" pos:column="18"/></name></expr></argument>)<pos:position pos:line="363" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name pos:line="365" pos:column="3">certdate<pos:position pos:line="365" pos:column="11"/></name> <operator pos:line="365" pos:column="12">=<pos:position pos:line="365" pos:column="13"/></operator> <call><name pos:line="365" pos:column="14">X509_get_notBefore<pos:position pos:line="365" pos:column="32"/></name><argument_list pos:line="365" pos:column="32">(<argument><expr><name><name pos:line="365" pos:column="33">connssl<pos:position pos:line="365" pos:column="40"/></name><operator pos:line="365" pos:column="40">-&gt;<pos:position pos:line="365" pos:column="45"/></operator><name pos:line="365" pos:column="42">server_cert<pos:position pos:line="365" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="365" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="366" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="366" pos:column="27"/></name><argument_list pos:line="366" pos:column="27">(<argument><expr><name pos:line="366" pos:column="28">conn<pos:position pos:line="366" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="34">"\t start date: "<pos:position pos:line="366" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="366" pos:column="53">certdate<pos:position pos:line="366" pos:column="61"/></name></expr></argument>)<pos:position pos:line="366" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name pos:line="368" pos:column="3">certdate<pos:position pos:line="368" pos:column="11"/></name> <operator pos:line="368" pos:column="12">=<pos:position pos:line="368" pos:column="13"/></operator> <call><name pos:line="368" pos:column="14">X509_get_notAfter<pos:position pos:line="368" pos:column="31"/></name><argument_list pos:line="368" pos:column="31">(<argument><expr><name><name pos:line="368" pos:column="32">connssl<pos:position pos:line="368" pos:column="39"/></name><operator pos:line="368" pos:column="39">-&gt;<pos:position pos:line="368" pos:column="44"/></operator><name pos:line="368" pos:column="41">server_cert<pos:position pos:line="368" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="368" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="369" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="369" pos:column="27"/></name><argument_list pos:line="369" pos:column="27">(<argument><expr><name pos:line="369" pos:column="28">conn<pos:position pos:line="369" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="34">"\t expire date: "<pos:position pos:line="369" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="369" pos:column="54">certdate<pos:position pos:line="369" pos:column="62"/></name></expr></argument>)<pos:position pos:line="369" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="64"/></expr_stmt>

  <if pos:line="371" pos:column="3">if<condition pos:line="371" pos:column="5">(<expr><name><name pos:line="371" pos:column="6">data<pos:position pos:line="371" pos:column="10"/></name><operator pos:line="371" pos:column="10">-&gt;<pos:position pos:line="371" pos:column="15"/></operator><name pos:line="371" pos:column="12">set<pos:position pos:line="371" pos:column="15"/></name><operator pos:line="371" pos:column="15">.<pos:position pos:line="371" pos:column="16"/></operator><name pos:line="371" pos:column="16">ssl<pos:position pos:line="371" pos:column="19"/></name><operator pos:line="371" pos:column="19">.<pos:position pos:line="371" pos:column="20"/></operator><name pos:line="371" pos:column="20">verifyhost<pos:position pos:line="371" pos:column="30"/></name></name></expr>)<pos:position pos:line="371" pos:column="31"/></condition><then pos:line="371" pos:column="31"> <block pos:line="371" pos:column="32">{
    <expr_stmt><expr><name pos:line="372" pos:column="5">retcode<pos:position pos:line="372" pos:column="12"/></name> <operator pos:line="372" pos:column="13">=<pos:position pos:line="372" pos:column="14"/></operator> <call><name pos:line="372" pos:column="15">verifyhost<pos:position pos:line="372" pos:column="25"/></name><argument_list pos:line="372" pos:column="25">(<argument><expr><name pos:line="372" pos:column="26">conn<pos:position pos:line="372" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="372" pos:column="32">connssl<pos:position pos:line="372" pos:column="39"/></name><operator pos:line="372" pos:column="39">-&gt;<pos:position pos:line="372" pos:column="44"/></operator><name pos:line="372" pos:column="41">server_cert<pos:position pos:line="372" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="54"/></expr_stmt>
    <if pos:line="373" pos:column="5">if<condition pos:line="373" pos:column="7">(<expr><name pos:line="373" pos:column="8">retcode<pos:position pos:line="373" pos:column="15"/></name></expr>)<pos:position pos:line="373" pos:column="16"/></condition><then pos:line="373" pos:column="16"> <block pos:line="373" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="374" pos:column="7">X509_free<pos:position pos:line="374" pos:column="16"/></name><argument_list pos:line="374" pos:column="16">(<argument><expr><name><name pos:line="374" pos:column="17">connssl<pos:position pos:line="374" pos:column="24"/></name><operator pos:line="374" pos:column="24">-&gt;<pos:position pos:line="374" pos:column="29"/></operator><name pos:line="374" pos:column="26">server_cert<pos:position pos:line="374" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="374" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="375" pos:column="7">connssl<pos:position pos:line="375" pos:column="14"/></name><operator pos:line="375" pos:column="14">-&gt;<pos:position pos:line="375" pos:column="19"/></operator><name pos:line="375" pos:column="16">server_cert<pos:position pos:line="375" pos:column="27"/></name></name> <operator pos:line="375" pos:column="28">=<pos:position pos:line="375" pos:column="29"/></operator> <name pos:line="375" pos:column="30">NULL<pos:position pos:line="375" pos:column="34"/></name></expr>;<pos:position pos:line="375" pos:column="35"/></expr_stmt>
      <return pos:line="376" pos:column="7">return <expr><name pos:line="376" pos:column="14">retcode<pos:position pos:line="376" pos:column="21"/></name></expr>;<pos:position pos:line="376" pos:column="22"/></return>
    }<pos:position pos:line="377" pos:column="6"/></block></then></if>
  }<pos:position pos:line="378" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="380" pos:column="3">str<pos:position pos:line="380" pos:column="6"/></name> <operator pos:line="380" pos:column="7">=<pos:position pos:line="380" pos:column="8"/></operator> <call><name pos:line="380" pos:column="9">X509_NAME_oneline<pos:position pos:line="380" pos:column="26"/></name><argument_list pos:line="380" pos:column="26">(<argument><expr><call><name pos:line="380" pos:column="27">X509_get_issuer_name<pos:position pos:line="380" pos:column="47"/></name><argument_list pos:line="380" pos:column="47">(<argument><expr><name><name pos:line="380" pos:column="48">connssl<pos:position pos:line="380" pos:column="55"/></name><operator pos:line="380" pos:column="55">-&gt;<pos:position pos:line="380" pos:column="60"/></operator><name pos:line="380" pos:column="57">server_cert<pos:position pos:line="380" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="380" pos:column="69"/></argument_list></call></expr></argument>,
                          <argument><expr><name pos:line="381" pos:column="27">NULL<pos:position pos:line="381" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="381" pos:column="33">0<pos:position pos:line="381" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="381" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="36"/></expr_stmt>
  <if pos:line="382" pos:column="3">if<condition pos:line="382" pos:column="5">(<expr><operator pos:line="382" pos:column="6">!<pos:position pos:line="382" pos:column="7"/></operator><name pos:line="382" pos:column="7">str<pos:position pos:line="382" pos:column="10"/></name></expr>)<pos:position pos:line="382" pos:column="11"/></condition><then pos:line="382" pos:column="11"> <block pos:line="382" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="383" pos:column="5">failf<pos:position pos:line="383" pos:column="10"/></name><argument_list pos:line="383" pos:column="10">(<argument><expr><name pos:line="383" pos:column="11">data<pos:position pos:line="383" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="17">"SSL: couldn't get X509-issuer name!"<pos:position pos:line="383" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="383" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="384" pos:column="5">retcode<pos:position pos:line="384" pos:column="12"/></name> <operator pos:line="384" pos:column="13">=<pos:position pos:line="384" pos:column="14"/></operator> <name pos:line="384" pos:column="15">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="384" pos:column="38"/></name></expr>;<pos:position pos:line="384" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="385" pos:column="4"/></block></then>
  <else pos:line="386" pos:column="3">else <block pos:line="386" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="387" pos:column="5">infof<pos:position pos:line="387" pos:column="10"/></name><argument_list pos:line="387" pos:column="10">(<argument><expr><name pos:line="387" pos:column="11">data<pos:position pos:line="387" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="387" pos:column="17">"\t issuer: %s\n"<pos:position pos:line="387" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="387" pos:column="36">str<pos:position pos:line="387" pos:column="39"/></name></expr></argument>)<pos:position pos:line="387" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="388" pos:column="5">CRYPTO_free<pos:position pos:line="388" pos:column="16"/></name><argument_list pos:line="388" pos:column="16">(<argument><expr><name pos:line="388" pos:column="17">str<pos:position pos:line="388" pos:column="20"/></name></expr></argument>)<pos:position pos:line="388" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="390" pos:column="5">/* We could do all sorts of certificate verification stuff here before
       deallocating the certificate. */</comment>

    <expr_stmt><expr><name pos:line="393" pos:column="5">lerr<pos:position pos:line="393" pos:column="9"/></name> <operator pos:line="393" pos:column="10">=<pos:position pos:line="393" pos:column="11"/></operator> <name><name pos:line="393" pos:column="12">data<pos:position pos:line="393" pos:column="16"/></name><operator pos:line="393" pos:column="16">-&gt;<pos:position pos:line="393" pos:column="21"/></operator><name pos:line="393" pos:column="18">set<pos:position pos:line="393" pos:column="21"/></name><operator pos:line="393" pos:column="21">.<pos:position pos:line="393" pos:column="22"/></operator><name pos:line="393" pos:column="22">ssl<pos:position pos:line="393" pos:column="25"/></name><operator pos:line="393" pos:column="25">.<pos:position pos:line="393" pos:column="26"/></operator><name pos:line="393" pos:column="26">certverifyresult<pos:position pos:line="393" pos:column="42"/></name></name><operator pos:line="393" pos:column="42">=<pos:position pos:line="393" pos:column="43"/></operator>
      <call><name pos:line="394" pos:column="7">SSL_get_verify_result<pos:position pos:line="394" pos:column="28"/></name><argument_list pos:line="394" pos:column="28">(<argument><expr><name><name pos:line="394" pos:column="29">connssl<pos:position pos:line="394" pos:column="36"/></name><operator pos:line="394" pos:column="36">-&gt;<pos:position pos:line="394" pos:column="41"/></operator><name pos:line="394" pos:column="38">handle<pos:position pos:line="394" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="394" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="46"/></expr_stmt>
    <if pos:line="395" pos:column="5">if<condition pos:line="395" pos:column="7">(<expr><name><name pos:line="395" pos:column="8">data<pos:position pos:line="395" pos:column="12"/></name><operator pos:line="395" pos:column="12">-&gt;<pos:position pos:line="395" pos:column="17"/></operator><name pos:line="395" pos:column="14">set<pos:position pos:line="395" pos:column="17"/></name><operator pos:line="395" pos:column="17">.<pos:position pos:line="395" pos:column="18"/></operator><name pos:line="395" pos:column="18">ssl<pos:position pos:line="395" pos:column="21"/></name><operator pos:line="395" pos:column="21">.<pos:position pos:line="395" pos:column="22"/></operator><name pos:line="395" pos:column="22">certverifyresult<pos:position pos:line="395" pos:column="38"/></name></name> <operator pos:line="395" pos:column="39">!=<pos:position pos:line="395" pos:column="41"/></operator> <name pos:line="395" pos:column="42">X509_V_OK<pos:position pos:line="395" pos:column="51"/></name></expr>)<pos:position pos:line="395" pos:column="52"/></condition><then pos:line="395" pos:column="52"> <block pos:line="395" pos:column="53">{
      <if pos:line="396" pos:column="7">if<condition pos:line="396" pos:column="9">(<expr><name><name pos:line="396" pos:column="10">data<pos:position pos:line="396" pos:column="14"/></name><operator pos:line="396" pos:column="14">-&gt;<pos:position pos:line="396" pos:column="19"/></operator><name pos:line="396" pos:column="16">set<pos:position pos:line="396" pos:column="19"/></name><operator pos:line="396" pos:column="19">.<pos:position pos:line="396" pos:column="20"/></operator><name pos:line="396" pos:column="20">ssl<pos:position pos:line="396" pos:column="23"/></name><operator pos:line="396" pos:column="23">.<pos:position pos:line="396" pos:column="24"/></operator><name pos:line="396" pos:column="24">verifypeer<pos:position pos:line="396" pos:column="34"/></name></name></expr>)<pos:position pos:line="396" pos:column="35"/></condition><then pos:line="396" pos:column="35"> <block pos:line="396" pos:column="36">{
        <comment type="block" pos:line="397" pos:column="9">/* We probably never reach this, because SSL_connect() will fail
           and we return earlyer if verifypeer is set? */</comment>
        <expr_stmt><expr><call><name pos:line="399" pos:column="9">failf<pos:position pos:line="399" pos:column="14"/></name><argument_list pos:line="399" pos:column="14">(<argument><expr><name pos:line="399" pos:column="15">data<pos:position pos:line="399" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="399" pos:column="21">"SSL certificate verify result: %s (%ld)"<pos:position pos:line="399" pos:column="62"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="400" pos:column="15">X509_verify_cert_error_string<pos:position pos:line="400" pos:column="44"/></name><argument_list pos:line="400" pos:column="44">(<argument><expr><name pos:line="400" pos:column="45">lerr<pos:position pos:line="400" pos:column="49"/></name></expr></argument>)<pos:position pos:line="400" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="400" pos:column="52">lerr<pos:position pos:line="400" pos:column="56"/></name></expr></argument>)<pos:position pos:line="400" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="401" pos:column="9">retcode<pos:position pos:line="401" pos:column="16"/></name> <operator pos:line="401" pos:column="17">=<pos:position pos:line="401" pos:column="18"/></operator> <name pos:line="401" pos:column="19">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="401" pos:column="45"/></name></expr>;<pos:position pos:line="401" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="402" pos:column="8"/></block></then>
      <else pos:line="403" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="404" pos:column="9">infof<pos:position pos:line="404" pos:column="14"/></name><argument_list pos:line="404" pos:column="14">(<argument><expr><name pos:line="404" pos:column="15">data<pos:position pos:line="404" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="404" pos:column="21">"SSL certificate verify result: %s (%ld),"<pos:position pos:line="404" pos:column="63"/></literal>
              <literal type="string" pos:line="405" pos:column="15">" continuing anyway.\n"<pos:position pos:line="405" pos:column="38"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="406" pos:column="15">X509_verify_cert_error_string<pos:position pos:line="406" pos:column="44"/></name><argument_list pos:line="406" pos:column="44">(<argument><expr><name pos:line="406" pos:column="45">err<pos:position pos:line="406" pos:column="48"/></name></expr></argument>)<pos:position pos:line="406" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="406" pos:column="51">lerr<pos:position pos:line="406" pos:column="55"/></name></expr></argument>)<pos:position pos:line="406" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="57"/></expr_stmt></block></else></if>
    }<pos:position pos:line="407" pos:column="6"/></block></then>
    <else pos:line="408" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="409" pos:column="7">infof<pos:position pos:line="409" pos:column="12"/></name><argument_list pos:line="409" pos:column="12">(<argument><expr><name pos:line="409" pos:column="13">data<pos:position pos:line="409" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="409" pos:column="19">"SSL certificate verify ok.\n"<pos:position pos:line="409" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="409" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="51"/></expr_stmt></block></else></if>
  }<pos:position pos:line="410" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="412" pos:column="3">X509_free<pos:position pos:line="412" pos:column="12"/></name><argument_list pos:line="412" pos:column="12">(<argument><expr><name><name pos:line="412" pos:column="13">connssl<pos:position pos:line="412" pos:column="20"/></name><operator pos:line="412" pos:column="20">-&gt;<pos:position pos:line="412" pos:column="25"/></operator><name pos:line="412" pos:column="22">server_cert<pos:position pos:line="412" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="412" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="413" pos:column="3">connssl<pos:position pos:line="413" pos:column="10"/></name><operator pos:line="413" pos:column="10">-&gt;<pos:position pos:line="413" pos:column="15"/></operator><name pos:line="413" pos:column="12">server_cert<pos:position pos:line="413" pos:column="23"/></name></name> <operator pos:line="413" pos:column="24">=<pos:position pos:line="413" pos:column="25"/></operator> <name pos:line="413" pos:column="26">NULL<pos:position pos:line="413" pos:column="30"/></name></expr>;<pos:position pos:line="413" pos:column="31"/></expr_stmt>
  <return pos:line="414" pos:column="3">return <expr><name pos:line="414" pos:column="10">retcode<pos:position pos:line="414" pos:column="17"/></name></expr>;<pos:position pos:line="414" pos:column="18"/></return>
}<pos:position pos:line="415" pos:column="2"/></block></function></unit>

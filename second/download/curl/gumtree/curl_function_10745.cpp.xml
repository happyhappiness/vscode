<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_10745.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">warnf<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name><name pos:line="1" pos:column="12">struct<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">OperationConfig<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">config<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fmt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="61">...<pos:position pos:line="1" pos:column="64"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><operator pos:line="3" pos:column="6">!<pos:position pos:line="3" pos:column="7"/></operator><name><name pos:line="3" pos:column="7">config<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">global<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="23">mute<pos:position pos:line="3" pos:column="27"/></name></name></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28"> <block pos:line="3" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">va_list<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ap<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">len<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">ptr<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">print_buffer<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><literal type="number" pos:line="7" pos:column="23">256<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">va_start<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">ap<pos:position pos:line="9" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="18">fmt<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">len<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">vsnprintf<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">print_buffer<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof<argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">print_buffer<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">fmt<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">ap<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">va_end<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">ap<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">ptr<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name pos:line="13" pos:column="11">print_buffer<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <while pos:line="14" pos:column="5">while<condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">len<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&gt;<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition> <block pos:line="14" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">fputs<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">WARN_PREFIX<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="26">config<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">global<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">errors<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>

      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><name pos:line="17" pos:column="10">len<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&gt;<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">)<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">WARN_TEXTWIDTH<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">cut<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><name pos:line="18" pos:column="19">WARN_TEXTWIDTH<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator><literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="36"/></decl_stmt>

        <while pos:line="20" pos:column="9">while<condition pos:line="20" pos:column="14">(<expr><operator pos:line="20" pos:column="15">!<pos:position pos:line="20" pos:column="16"/></operator><call><name pos:line="20" pos:column="16">ISSPACE<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">ptr<pos:position pos:line="20" pos:column="27"/></name><index pos:line="20" pos:column="27">[<expr><name pos:line="20" pos:column="28">cut<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call> <operator pos:line="20" pos:column="34">&amp;&amp;<pos:position pos:line="20" pos:column="44"/></operator> <name pos:line="20" pos:column="37">cut<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition> <block pos:line="20" pos:column="42">{
          <expr_stmt><expr><name pos:line="21" pos:column="11">cut<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">--<pos:position pos:line="21" pos:column="16"/></operator></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></while>
        <if pos:line="23" pos:column="9">if<condition pos:line="23" pos:column="11">(<expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal> <operator pos:line="23" pos:column="14">==<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">cut<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
          <comment type="block" pos:line="24" pos:column="11">/* not a single cutting position was found, just cut it at the
             max text width then! */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="11">cut<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">WARN_TEXTWIDTH<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-<pos:position pos:line="26" pos:column="32"/></operator><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt></block></then></if>

        <expr_stmt><expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">void<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">)<pos:position pos:line="28" pos:column="15"/></operator><call><name pos:line="28" pos:column="15">fwrite<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">ptr<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">cut<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">+<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">1<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="39">config<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">global<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">errors<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">fputs<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="string" pos:line="29" pos:column="15">"\n"<pos:position pos:line="29" pos:column="19"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="21">config<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">global<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">errors<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">ptr<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">+=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">cut<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">+<pos:position pos:line="30" pos:column="20"/></operator><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt> <comment type="block" pos:line="30" pos:column="23">/* skip the space too */</comment>
        <expr_stmt><expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">-=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">cut<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then>
      <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">fputs<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">ptr<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="20">config<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">global<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">errors<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">len<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

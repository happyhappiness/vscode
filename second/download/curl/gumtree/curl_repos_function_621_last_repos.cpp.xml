<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_621_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buff<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">HOSTNAME_MAX<pos:position pos:line="3" pos:column="25"/></name></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">argc<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">!=<pos:position pos:line="4" pos:column="13"/></operator> <literal type="number" pos:line="4" pos:column="14">2<pos:position pos:line="4" pos:column="15"/></literal></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16"> <block pos:line="4" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">printf<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="string" pos:line="5" pos:column="12">"Usage: %s EXPECTED_HOSTNAME\n"<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="45">argv<pos:position pos:line="5" pos:column="49"/></name><index pos:line="5" pos:column="49">[<expr><literal type="number" pos:line="5" pos:column="50">0<pos:position pos:line="5" pos:column="51"/></literal></expr>]<pos:position pos:line="5" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><call><name pos:line="9" pos:column="6">Curl_gethostname<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">buff<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">HOSTNAME_MAX<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">printf<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"Curl_gethostname() failed\n"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* compare the name returned by Curl_gethostname() with the expected one */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><call><name pos:line="15" pos:column="6">strncmp<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">buff<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="20">argv<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>]<pos:position pos:line="15" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">HOSTNAME_MAX<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">printf<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"got unexpected host name back, LD_PRELOAD failed\n"<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <return pos:line="19" pos:column="3">return <expr><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

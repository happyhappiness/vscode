<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1689_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pop3_perform_command<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">connectdata<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conn<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">POP3<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">pop3<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">data<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">req<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">protop<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">command<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Calculate the default command */</comment>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">pop3<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">id<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <literal type="char" pos:line="9" pos:column="21">'\0'<pos:position pos:line="9" pos:column="25"/></literal> <operator pos:line="9" pos:column="26">||<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="29">conn<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">data<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">set<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">ftp_list_only<pos:position pos:line="9" pos:column="58"/></name></name></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59"> <block pos:line="9" pos:column="60">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">command<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="string" pos:line="10" pos:column="15">"LIST"<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name><name pos:line="12" pos:column="8">pop3<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">id<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>]<pos:position pos:line="12" pos:column="19"/></index></name> <operator pos:line="12" pos:column="20">!=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="char" pos:line="12" pos:column="23">'\0'<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
      <comment type="block" pos:line="13" pos:column="7">/* Message specific LIST so skip the BODY transfer */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="7">pop3<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">transfer<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">FTPTRANSFER_INFO<pos:position pos:line="14" pos:column="40"/></name></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">command<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="string" pos:line="17" pos:column="15">"RETR"<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="19" pos:column="3">/* Send the command */</comment>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name><name pos:line="20" pos:column="6">pop3<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">id<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>]<pos:position pos:line="20" pos:column="17"/></index></name> <operator pos:line="20" pos:column="18">!=<pos:position pos:line="20" pos:column="20"/></operator> <literal type="char" pos:line="20" pos:column="21">'\0'<pos:position pos:line="20" pos:column="25"/></literal></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">result<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">Curl_pp_sendf<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name><name pos:line="21" pos:column="29">conn<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">proto<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">pop3c<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">.<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">pp<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="51">"%s %s"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>,
                           <argument><expr><operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><ternary><condition><expr><name><name pos:line="22" pos:column="29">pop3<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">custom<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">&amp;&amp;<pos:position pos:line="22" pos:column="52"/></operator> <name><name pos:line="22" pos:column="45">pop3<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">custom<pos:position pos:line="22" pos:column="57"/></name><index pos:line="22" pos:column="57">[<expr><literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr>]<pos:position pos:line="22" pos:column="60"/></index></name> <operator pos:line="22" pos:column="61">!=<pos:position pos:line="22" pos:column="63"/></operator> <literal type="char" pos:line="22" pos:column="64">'\0'<pos:position pos:line="22" pos:column="68"/></literal></expr> ?<pos:position pos:line="22" pos:column="70"/></condition><then pos:line="22" pos:column="70">
                            <expr><name><name pos:line="23" pos:column="29">pop3<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">custom<pos:position pos:line="23" pos:column="41"/></name></name></expr> <pos:position pos:line="23" pos:column="42"/></then><else pos:line="23" pos:column="42">: <expr><name pos:line="23" pos:column="44">command<pos:position pos:line="23" pos:column="51"/></name></expr></else></ternary><operator pos:line="23" pos:column="51">)<pos:position pos:line="23" pos:column="52"/></operator></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="54">pop3<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">id<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="5">result<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">Curl_pp_sendf<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator><name><name pos:line="25" pos:column="29">conn<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">proto<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">.<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">pop3c<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="47">pp<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="51">"%s"<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>,
                           <argument><expr><operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><ternary><condition><expr><name><name pos:line="26" pos:column="29">pop3<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">custom<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">&amp;&amp;<pos:position pos:line="26" pos:column="52"/></operator> <name><name pos:line="26" pos:column="45">pop3<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">custom<pos:position pos:line="26" pos:column="57"/></name><index pos:line="26" pos:column="57">[<expr><literal type="number" pos:line="26" pos:column="58">0<pos:position pos:line="26" pos:column="59"/></literal></expr>]<pos:position pos:line="26" pos:column="60"/></index></name> <operator pos:line="26" pos:column="61">!=<pos:position pos:line="26" pos:column="63"/></operator> <literal type="char" pos:line="26" pos:column="64">'\0'<pos:position pos:line="26" pos:column="68"/></literal></expr> ?<pos:position pos:line="26" pos:column="70"/></condition><then pos:line="26" pos:column="70">
                            <expr><name><name pos:line="27" pos:column="29">pop3<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">custom<pos:position pos:line="27" pos:column="41"/></name></name></expr> <pos:position pos:line="27" pos:column="42"/></then><else pos:line="27" pos:column="42">: <expr><name pos:line="27" pos:column="44">command<pos:position pos:line="27" pos:column="51"/></name></expr></else></ternary><operator pos:line="27" pos:column="51">)<pos:position pos:line="27" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt></block></else></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><operator pos:line="29" pos:column="6">!<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">result<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">state<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">conn<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="17">POP3_COMMAND<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">result<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

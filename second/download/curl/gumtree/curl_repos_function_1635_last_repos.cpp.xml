<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1635_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLMcode<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">multi_addtimeout<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">Curl_easy<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">data<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                 <parameter><decl><type><name><name pos:line="3" pos:column="18">struct<pos:position pos:line="3" pos:column="24"/></name> <name pos:line="3" pos:column="25">curltime<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">stamp<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="4" pos:column="18">expire_id<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">eid<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="32"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_llist_element<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">e<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">time_node<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">node<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curl_llist_element<pos:position pos:line="8" pos:column="28"/></name></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">prev<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><name pos:line="8" pos:column="37">NULL<pos:position pos:line="8" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">curl_llist<pos:position pos:line="10" pos:column="20"/></name></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">timeoutlist<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="37">data<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">state<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">timeoutlist<pos:position pos:line="10" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">node<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <operator pos:line="12" pos:column="10">&amp;<pos:position pos:line="12" pos:column="15"/></operator><name><name pos:line="12" pos:column="11">data<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">state<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">expires<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><name pos:line="12" pos:column="31">eid<pos:position pos:line="12" pos:column="34"/></name></expr>]<pos:position pos:line="12" pos:column="35"/></index></name></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* copy the timestamp and id */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memcpy<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><operator pos:line="15" pos:column="10">&amp;<pos:position pos:line="15" pos:column="15"/></operator><name><name pos:line="15" pos:column="11">node<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">time<pos:position pos:line="15" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">stamp<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="30">sizeof<argument_list pos:line="15" pos:column="36">(<argument><expr><operator pos:line="15" pos:column="37">*<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">stamp<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">node<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">eid<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">eid<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt> <comment type="block" pos:line="16" pos:column="20">/* also marks it as in use */</comment>

  <expr_stmt><expr><name pos:line="18" pos:column="3">n<pos:position pos:line="18" pos:column="4"/></name> <operator pos:line="18" pos:column="5">=<pos:position pos:line="18" pos:column="6"/></operator> <call><name pos:line="18" pos:column="7">Curl_llist_count<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">timeoutlist<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">n<pos:position pos:line="19" pos:column="7"/></name></expr>)<pos:position pos:line="19" pos:column="8"/></condition><then pos:line="19" pos:column="8"> <block pos:line="19" pos:column="9">{
    <comment type="block" pos:line="20" pos:column="5">/* find the correct spot in the list */</comment>
    <for pos:line="21" pos:column="5">for<control pos:line="21" pos:column="8">(<init><expr><name pos:line="21" pos:column="9">e<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">timeoutlist<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">head<pos:position pos:line="21" pos:column="30"/></name></name></expr>;<pos:position pos:line="21" pos:column="31"/></init> <condition><expr><name pos:line="21" pos:column="32">e<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></condition> <incr><expr><name pos:line="21" pos:column="35">e<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <name><name pos:line="21" pos:column="39">e<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">next<pos:position pos:line="21" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="47"/></control> <block pos:line="21" pos:column="48">{
      <decl_stmt><decl><type><name><name pos:line="22" pos:column="7">struct<pos:position pos:line="22" pos:column="13"/></name> <name pos:line="22" pos:column="14">time_node<pos:position pos:line="22" pos:column="23"/></name></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">check<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><operator pos:line="22" pos:column="33">(<pos:position pos:line="22" pos:column="34"/></operator>struct <name pos:line="22" pos:column="41">time_node<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">*<pos:position pos:line="22" pos:column="52"/></operator><operator pos:line="22" pos:column="52">)<pos:position pos:line="22" pos:column="53"/></operator><name><name pos:line="22" pos:column="53">e<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">-&gt;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="56">ptr<pos:position pos:line="22" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="22" pos:column="60"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">time_t<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">diff<pos:position pos:line="23" pos:column="18"/></name> <init pos:line="23" pos:column="19">= <expr><call><name pos:line="23" pos:column="21">curlx_tvdiff<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">check<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">time<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="47">node<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">time<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="59"/></decl_stmt>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">diff<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&gt;<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
        <block type="pseudo"><break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="26" pos:column="7">prev<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">e<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="30" pos:column="3">/* else
     this is the first timeout on the list */</comment>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">Curl_llist_insert_next<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">timeoutlist<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">prev<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">node<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="51">&amp;<pos:position pos:line="33" pos:column="56"/></operator><name><name pos:line="33" pos:column="52">node<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">-&gt;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="58">list<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">CURLM_OK<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

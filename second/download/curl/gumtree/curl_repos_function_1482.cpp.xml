<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1482.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_expire_latest<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">SessionHandle<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">long<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">milli<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">timeval<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">expire<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">&amp;<pos:position pos:line="3" pos:column="33"/></operator><name><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">state<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">.<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">expiretime<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">set<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">set<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">Curl_tvnow<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">set<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">.<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">tv_sec<pos:position pos:line="8" pos:column="13"/></name></name> <operator pos:line="8" pos:column="14">+=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">milli<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">/<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">1000<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">set<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">tv_usec<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">+=<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">milli<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">%<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="27">1000<pos:position pos:line="9" pos:column="31"/></literal><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="35">1000<pos:position pos:line="9" pos:column="39"/></literal></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">set<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">.<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">tv_usec<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">&gt;=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">1000000<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">set<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">.<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">tv_sec<pos:position pos:line="12" pos:column="15"/></name></name><operator pos:line="12" pos:column="15">++<pos:position pos:line="12" pos:column="17"/></operator></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">set<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">tv_usec<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">-=<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">1000000<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">expire<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">tv_sec<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">||<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">expire<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">tv_usec<pos:position pos:line="16" pos:column="39"/></name></name></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
    <comment type="block" pos:line="17" pos:column="5">/* This means that the struct is added as a node in the splay tree.
       Compare if the new time is earlier, and only remove-old/add-new if it
         is. */</comment>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">long<pos:position pos:line="20" pos:column="9"/></name></type> <name pos:line="20" pos:column="10">diff<pos:position pos:line="20" pos:column="14"/></name> <init pos:line="20" pos:column="15">= <expr><call><name pos:line="20" pos:column="17">curlx_tvdiff<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">set<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">expire<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="44"/></decl_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">diff<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&gt;<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
      <comment type="block" pos:line="22" pos:column="7">/* the new expire time was later than the top time, so just skip this */</comment>
      <block type="pseudo"><return pos:line="23" pos:column="7">return;<pos:position pos:line="23" pos:column="14"/></return></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* Just add the timeout like normal */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">Curl_expire<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">milli<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

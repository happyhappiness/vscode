<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2677_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_polarsslthreadlock_thread_cleanup<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">mutex_buf<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="7" pos:column="15">/* error, no threads locks defined */</comment>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_PTHREAD_H<pos:position pos:line="9" pos:column="22"/></name></cpp:ifdef>
  <for pos:line="10" pos:column="3">for<control pos:line="10" pos:column="6">(<init><expr><name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></init> <condition><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&lt;<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="18">NUMT<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></condition> <incr><expr><name pos:line="10" pos:column="24">i<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">++<pos:position pos:line="10" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="28"/></control> <block pos:line="10" pos:column="29">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">ret<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">pthread_mutex_destroy<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name><name pos:line="11" pos:column="34">mutex_buf<pos:position pos:line="11" pos:column="43"/></name><index pos:line="11" pos:column="43">[<expr><name pos:line="11" pos:column="44">i<pos:position pos:line="11" pos:column="45"/></name></expr>]<pos:position pos:line="11" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">ret<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="13" pos:column="17">/* pthread_mutex_destroy failed */</comment>
  }<pos:position pos:line="14" pos:column="4"/></block></for>
<cpp:elif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">elif<pos:position pos:line="15" pos:column="6"/></cpp:directive> <expr><call><name pos:line="15" pos:column="7">defined<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">HAVE_PROCESS_H<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr></cpp:elif>
  <for pos:line="16" pos:column="3">for<control pos:line="16" pos:column="6">(<init><expr><name pos:line="16" pos:column="7">i<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>;<pos:position pos:line="16" pos:column="13"/></init> <condition><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="18">NUMT<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></condition> <incr><expr><name pos:line="16" pos:column="24">i<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">++<pos:position pos:line="16" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="28"/></control> <block pos:line="16" pos:column="29">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">ret<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">CloseHandle<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">mutex_buf<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><name pos:line="17" pos:column="33">i<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="19" pos:column="17">/* CloseHandle failed */</comment>
  }<pos:position pos:line="20" pos:column="4"/></block></for>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="21" pos:column="8">/* HAVE_PTHREAD_H */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">free<pos:position pos:line="22" pos:column="7"/></name><argument_list pos:line="22" pos:column="7">(<argument><expr><name pos:line="22" pos:column="8">mutex_buf<pos:position pos:line="22" pos:column="17"/></name></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">mutex_buf<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">NULL<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">1<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return> <comment type="block" pos:line="25" pos:column="13">/* OK */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2731_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Curl_gtls_random<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">Curl_easy<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">entropy<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">size_t<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">length<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><call><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">USE_GNUTLS_NETTLE<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">void<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">data<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">rc<pos:position pos:line="7" pos:column="5"/></name> <operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator> <call><name pos:line="7" pos:column="8">gnutls_rnd<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">GNUTLS_RND_RANDOM<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">entropy<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">length<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
  <return pos:line="8" pos:column="3">return <expr><ternary><condition><expr><name pos:line="8" pos:column="10">rc<pos:position pos:line="8" pos:column="12"/></name></expr>?<pos:position pos:line="8" pos:column="13"/></condition><then><expr><name pos:line="8" pos:column="13">CURLE_FAILED_INIT<pos:position pos:line="8" pos:column="30"/></name></expr></then><else pos:line="8" pos:column="30">:<expr><name pos:line="8" pos:column="31">CURLE_OK<pos:position pos:line="8" pos:column="39"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="40"/></return>
<cpp:elif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">elif<pos:position pos:line="9" pos:column="6"/></cpp:directive> <expr><call><name pos:line="9" pos:column="7">defined<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">USE_GNUTLS<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr></cpp:elif>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">data<pos:position pos:line="10" pos:column="10"/></name></expr>)<pos:position pos:line="10" pos:column="11"/></condition><then pos:line="10" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">Curl_gtls_seed<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">data<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt></block></then></if> <comment type="block" pos:line="11" pos:column="27">/* Initiate the seed if not already done */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">gcry_randomize<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">entropy<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">length<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">GCRY_STRONG_RANDOM<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">CURLE_OK<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_519_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">mk_nt_hash<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">SessionHandle<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">data<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">password<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">unsigned<pos:position pos:line="3" pos:column="36"/></name> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">ntbuffer<pos:position pos:line="3" pos:column="51"/></name></decl></parameter> <comment type="block" pos:line="3" pos:column="52">/* 21 bytes */</comment>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><call><name pos:line="5" pos:column="16">strlen<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">password<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">pw<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">malloc<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><name pos:line="6" pos:column="30">len<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></operator><literal type="number" pos:line="6" pos:column="34">2<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">pw<pos:position pos:line="7" pos:column="9"/></name></expr>)<pos:position pos:line="7" pos:column="10"/></condition><then pos:line="7" pos:column="10">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">utf8_to_unicode_le<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">pw<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">password<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">len<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="12" pos:column="29"/></name></cpp:ifdef>
  <comment type="block" pos:line="13" pos:column="3">/*
   * The NT hashed password needs to be created using the
   * password in the network encoding not the host encoding.
   */</comment>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">data<pos:position pos:line="17" pos:column="10"/></name></expr>)<pos:position pos:line="17" pos:column="11"/></condition><then pos:line="17" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">Curl_convert_to_network<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">data<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="35">(<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">char<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">pw<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">len<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">*<pos:position pos:line="18" pos:column="51"/></operator><literal type="number" pos:line="18" pos:column="51">2<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt></block></then></if>
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">(<pos:position pos:line="20" pos:column="4"/></operator><name pos:line="20" pos:column="4">void<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">)<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* Create NT hashed password. */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">MD4_CTX<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">MD4pw<pos:position pos:line="25" pos:column="18"/></name></decl>;<pos:position pos:line="25" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">MD4_Init<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><operator pos:line="27" pos:column="14">&amp;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="15">MD4pw<pos:position pos:line="27" pos:column="20"/></name></expr></argument>)<pos:position pos:line="27" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">MD4_Update<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="17">MD4pw<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">pw<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="28">2<pos:position pos:line="28" pos:column="29"/></literal><operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">len<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">MD4_Final<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">ntbuffer<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="25">&amp;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="26">MD4pw<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">memset<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">ntbuffer<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">+<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">16<pos:position pos:line="31" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="27">0<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="30">21<pos:position pos:line="31" pos:column="32"/></literal> <operator pos:line="31" pos:column="33">-<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="35">16<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">free<pos:position pos:line="34" pos:column="7"/></name><argument_list pos:line="34" pos:column="7">(<argument><expr><name pos:line="34" pos:column="8">pw<pos:position pos:line="34" pos:column="10"/></name></expr></argument>)<pos:position pos:line="34" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="12"/></expr_stmt>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">CURLE_OK<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

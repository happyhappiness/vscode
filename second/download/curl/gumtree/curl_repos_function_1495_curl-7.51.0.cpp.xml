<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1495_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">curl_hash_element<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type>
<name pos:line="2" pos:column="1">mk_hash_element<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">void<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">key<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">size_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">key_len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">void<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">p<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_hash_element<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">he<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><call><name pos:line="4" pos:column="34">malloc<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><sizeof pos:line="4" pos:column="41">sizeof<argument_list pos:line="4" pos:column="47">(<argument><expr pos:line="4" pos:column="48">struct <name pos:line="4" pos:column="55">curl_hash_element<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="75"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">he<pos:position pos:line="6" pos:column="8"/></name></expr>)<pos:position pos:line="6" pos:column="9"/></condition><then pos:line="6" pos:column="9"> <block pos:line="6" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">dupkey<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><call><name pos:line="7" pos:column="20">malloc<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">key_len<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><name pos:line="8" pos:column="8">dupkey<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
      <comment type="block" pos:line="9" pos:column="7">/* copy the key */</comment>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">memcpy<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">dupkey<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">key<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">key_len<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="12" pos:column="7">he<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">key<pos:position pos:line="12" pos:column="14"/></name></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">dupkey<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">he<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">key_len<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">key_len<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">he<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">ptr<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">void<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">p<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
      <comment type="block" pos:line="17" pos:column="7">/* failed to duplicate the key, free memory and fail */</comment>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">free<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">he<pos:position pos:line="18" pos:column="14"/></name></expr></argument>)<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">he<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">he<pos:position pos:line="22" pos:column="12"/></name></expr>;<pos:position pos:line="22" pos:column="13"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

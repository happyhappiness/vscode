<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1673_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_read_plain<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">curl_socket_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">sockfd<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">buf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">size_t<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">bytesfromsocket<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="4" pos:column="26">ssize_t<pos:position pos:line="4" pos:column="33"/></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">n<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="37"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><call><name pos:line="6" pos:column="19">sread<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">sockfd<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">buf<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">bytesfromsocket<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="55"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">-<pos:position pos:line="8" pos:column="7"/></operator><literal type="number" pos:line="8" pos:column="7">1<pos:position pos:line="8" pos:column="8"/></literal> <operator pos:line="8" pos:column="9">==<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">nread<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">err<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name pos:line="9" pos:column="15">SOCKERRNO<pos:position pos:line="9" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">return_error<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_WINSOCK<pos:position pos:line="11" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="12" pos:column="5">return_error<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">WSAEWOULDBLOCK<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">err<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="14" pos:column="5">return_error<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">EWOULDBLOCK<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">==<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">err<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">||<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">EAGAIN<pos:position pos:line="14" pos:column="48"/></name> <operator pos:line="14" pos:column="49">==<pos:position pos:line="14" pos:column="51"/></operator> <name pos:line="14" pos:column="52">err<pos:position pos:line="14" pos:column="55"/></name> <operator pos:line="14" pos:column="56">||<pos:position pos:line="14" pos:column="58"/></operator> <name pos:line="14" pos:column="59">EINTR<pos:position pos:line="14" pos:column="64"/></name> <operator pos:line="14" pos:column="65">==<pos:position pos:line="14" pos:column="67"/></operator> <name pos:line="14" pos:column="68">err<pos:position pos:line="14" pos:column="71"/></name></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">return_error<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">CURLE_AGAIN<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* we only return number of bytes read when we return OK */</comment>
  <expr_stmt><expr><operator pos:line="22" pos:column="3">*<pos:position pos:line="22" pos:column="4"/></operator><name pos:line="22" pos:column="4">n<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <name pos:line="22" pos:column="8">nread<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">CURLE_OK<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2646_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">nss_init_core<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">Curl_easy<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">data<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">cert_dir<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">NSSInitParameters<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">initparams<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">nss_context<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">CURLE_OK<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">void<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></operator><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator> <operator pos:line="8" pos:column="19">&amp;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="20">initparams<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="32">'\0'<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="38">sizeof<argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">initparams<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">initparams<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">length<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <sizeof pos:line="9" pos:column="23">sizeof<argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">initparams<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">cert_dir<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">certpath<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><call><name pos:line="12" pos:column="22">aprintf<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"sql:%s"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">cert_dir<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">!<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">certpath<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
      <block type="pseudo"><return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">infof<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">data<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="17">"Initializing NSS with certpath: %s\n"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">certpath<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">nss_context<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">NSS_InitContext<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">certpath<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="45">""<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="49">""<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="53">""<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="57">&amp;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="58">initparams<pos:position pos:line="17" pos:column="68"/></name></expr></argument>,
            <argument><expr><name pos:line="18" pos:column="13">NSS_INIT_READONLY<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">|<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">NSS_INIT_PK11RELOAD<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">free<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><name pos:line="19" pos:column="10">certpath<pos:position pos:line="19" pos:column="18"/></name></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">nss_context<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">!=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">NULL<pos:position pos:line="21" pos:column="27"/></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28">
      <block type="pseudo"><return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">CURLE_OK<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">infof<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">data<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="17">"Unable to initialize NSS database\n"<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">infof<pos:position pos:line="27" pos:column="8"/></name><argument_list pos:line="27" pos:column="8">(<argument><expr><name pos:line="27" pos:column="9">data<pos:position pos:line="27" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="15">"Initializing NSS with certpath: none\n"<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">nss_context<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">NSS_InitContext<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><literal type="string" pos:line="28" pos:column="33">""<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="37">""<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">""<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="45">""<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="49">&amp;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="50">initparams<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">NSS_INIT_READONLY<pos:position pos:line="28" pos:column="79"/></name>
         <operator pos:line="29" pos:column="10">|<pos:position pos:line="29" pos:column="11"/></operator> <name pos:line="29" pos:column="12">NSS_INIT_NOCERTDB<pos:position pos:line="29" pos:column="29"/></name>   <operator pos:line="29" pos:column="32">|<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">NSS_INIT_NOMODDB<pos:position pos:line="29" pos:column="50"/></name>       <operator pos:line="29" pos:column="57">|<pos:position pos:line="29" pos:column="58"/></operator> <name pos:line="29" pos:column="59">NSS_INIT_FORCEOPEN<pos:position pos:line="29" pos:column="77"/></name>
         <operator pos:line="30" pos:column="10">|<pos:position pos:line="30" pos:column="11"/></operator> <name pos:line="30" pos:column="12">NSS_INIT_NOROOTINIT<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">|<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">NSS_INIT_OPTIMIZESPACE<pos:position pos:line="30" pos:column="56"/></name> <operator pos:line="30" pos:column="57">|<pos:position pos:line="30" pos:column="58"/></operator> <name pos:line="30" pos:column="59">NSS_INIT_PK11RELOAD<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">nss_context<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">!=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">NULL<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">CURLE_OK<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">infof<pos:position pos:line="34" pos:column="8"/></name><argument_list pos:line="34" pos:column="8">(<argument><expr><name pos:line="34" pos:column="9">data<pos:position pos:line="34" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="15">"Unable to initialize NSS\n"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="35" pos:column="34"/></name></expr>;<pos:position pos:line="35" pos:column="35"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

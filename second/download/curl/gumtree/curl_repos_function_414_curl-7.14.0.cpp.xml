<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_414_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_disconnect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">conn<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">CURLE_OK<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if> <comment type="block" pos:line="5" pos:column="22">/* this is closed and fine already */</comment>

  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name><name pos:line="7" pos:column="10">conn<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">data<pos:position pos:line="7" pos:column="20"/></name></name></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><call><name pos:line="9" pos:column="5">defined<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">CURLDEBUG<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <call><name pos:line="9" pos:column="27">defined<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">AGGRESIVE_TEST<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="10" pos:column="3">/* scan for DNS cache entries still marked as in use */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">Curl_hash_apply<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name><name pos:line="11" pos:column="19">data<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">hostcache<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>,
                  <argument><expr><name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">Curl_scan_cache_used<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">Curl_hostcache_prune<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">data<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt> <comment type="block" pos:line="15" pos:column="31">/* kill old DNS cache entries */</comment>

  <comment type="block" pos:line="17" pos:column="3">/*
   * The range string is usually freed in curl_done(), but we might
   * get here *instead* if we fail prematurely. Thus we need to be able
   * to free this resource here as well.
   */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">conn<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">bits<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">rangestringalloc<pos:position pos:line="22" pos:column="33"/></name></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">free<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name><name pos:line="23" pos:column="10">conn<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">range<pos:position pos:line="23" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">conn<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">bits<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">.<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">rangestringalloc<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">FALSE<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><operator pos:line="27" pos:column="6">(<pos:position pos:line="27" pos:column="7"/></operator><name><name pos:line="27" pos:column="7">conn<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">ntlm<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">state<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">NTLMSTATE_NONE<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="43">||<pos:position pos:line="27" pos:column="45"/></operator>
     <operator pos:line="28" pos:column="6">(<pos:position pos:line="28" pos:column="7"/></operator><name><name pos:line="28" pos:column="7">conn<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">proxyntlm<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">state<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">!=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">NTLMSTATE_NONE<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48"> <block pos:line="28" pos:column="49">{
    <comment type="block" pos:line="29" pos:column="5">/* Authentication data is a mix of connection-related and sessionhandle-
       related stuff. NTLM is connection-related so when we close the shop
       we shall forget. */</comment>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">data<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">state<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">authhost<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">.<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">done<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">FALSE<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">data<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">state<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">authhost<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">.<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">picked<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator>
      <name><name pos:line="34" pos:column="7">data<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">state<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">authhost<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">want<pos:position pos:line="34" pos:column="32"/></name></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">data<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">state<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">authproxy<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">done<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">FALSE<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">data<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">state<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">authproxy<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">picked<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">=<pos:position pos:line="37" pos:column="35"/></operator>
      <name><name pos:line="38" pos:column="7">data<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">state<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">authproxy<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">want<pos:position pos:line="38" pos:column="33"/></name></name></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">data<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">state<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">authproblem<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">FALSE<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">Curl_ntlm_cleanup<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">conn<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name><name pos:line="45" pos:column="6">conn<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">curl_disconnect<pos:position pos:line="45" pos:column="27"/></name></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
    <comment type="block" pos:line="46" pos:column="5">/* This is set if protocol-specific cleanups should be made */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="47" pos:column="5">conn<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">curl_disconnect<pos:position pos:line="47" pos:column="26"/></name></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">conn<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt></block></then></if>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">-<pos:position pos:line="49" pos:column="7"/></operator><literal type="number" pos:line="49" pos:column="7">1<pos:position pos:line="49" pos:column="8"/></literal> <operator pos:line="49" pos:column="9">!=<pos:position pos:line="49" pos:column="11"/></operator> <name><name pos:line="49" pos:column="12">conn<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">connectindex<pos:position pos:line="49" pos:column="30"/></name></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31"> <block pos:line="49" pos:column="32">{
    <comment type="block" pos:line="50" pos:column="5">/* unlink ourselves! */</comment>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">infof<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">data<pos:position pos:line="51" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="17">"Closing connection #%ld\n"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="46">conn<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">-&gt;<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="52">connectindex<pos:position pos:line="51" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">data<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">state<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">.<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">connects<pos:position pos:line="52" pos:column="25"/></name><index pos:line="52" pos:column="25">[<expr><name><name pos:line="52" pos:column="26">conn<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">connectindex<pos:position pos:line="52" pos:column="44"/></name></name></expr>]<pos:position pos:line="52" pos:column="45"/></index></name> <operator pos:line="52" pos:column="46">=<pos:position pos:line="52" pos:column="47"/></operator> <name pos:line="52" pos:column="48">NULL<pos:position pos:line="52" pos:column="52"/></name></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">Curl_safefree<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name><name pos:line="55" pos:column="17">conn<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">proto<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">.<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">generic<pos:position pos:line="55" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">Curl_safefree<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name><name pos:line="56" pos:column="17">conn<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">newurl<pos:position pos:line="56" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">Curl_safefree<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name><name pos:line="57" pos:column="17">conn<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">pathbuffer<pos:position pos:line="57" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt> <comment type="block" pos:line="57" pos:column="36">/* the URL path buffer */</comment>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">Curl_safefree<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name><name pos:line="59" pos:column="17">conn<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">host<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">rawalloc<pos:position pos:line="59" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt> <comment type="block" pos:line="59" pos:column="39">/* host name buffer */</comment>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">Curl_safefree<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name><name pos:line="60" pos:column="17">conn<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">proxy<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">.<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">rawalloc<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt> <comment type="block" pos:line="60" pos:column="40">/* proxy name buffer */</comment>
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">USE_LIBIDN<pos:position pos:line="61" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="62" pos:column="3">if<condition pos:line="62" pos:column="5">(<expr><name><name pos:line="62" pos:column="6">conn<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">host<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">encalloc<pos:position pos:line="62" pos:column="25"/></name></name></expr>)<pos:position pos:line="62" pos:column="26"/></condition><then pos:line="62" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="5">idn_free<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><name><name pos:line="63" pos:column="14">conn<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">host<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">.<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="25">encalloc<pos:position pos:line="63" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt></block></then></if> <comment type="block" pos:line="63" pos:column="36">/* encoded host name buffer, must be freed
                                      with idn_free() since this was allocated
                                      by libidn */</comment>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name><name pos:line="66" pos:column="6">conn<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">proxy<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">encalloc<pos:position pos:line="66" pos:column="26"/></name></name></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">idn_free<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name><name pos:line="67" pos:column="14">conn<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-&gt;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="20">proxy<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">.<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">encalloc<pos:position pos:line="67" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt></block></then></if> <comment type="block" pos:line="67" pos:column="37">/* encoded proxy name buffer, must be
                                       freed with idn_free() since this was
                                       allocated by libidn */</comment>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">Curl_ssl_close<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">conn<pos:position pos:line="71" pos:column="22"/></name></expr></argument>)<pos:position pos:line="71" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="73" pos:column="3">/* close possibly still open sockets */</comment>
  <if pos:line="74" pos:column="3">if<condition pos:line="74" pos:column="5">(<expr><name pos:line="74" pos:column="6">CURL_SOCKET_BAD<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">!=<pos:position pos:line="74" pos:column="24"/></operator> <name><name pos:line="74" pos:column="25">conn<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">sock<pos:position pos:line="74" pos:column="35"/></name><index pos:line="74" pos:column="35">[<expr><name pos:line="74" pos:column="36">SECONDARYSOCKET<pos:position pos:line="74" pos:column="51"/></name></expr>]<pos:position pos:line="74" pos:column="52"/></index></name></expr>)<pos:position pos:line="74" pos:column="53"/></condition><then pos:line="74" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="5">sclose<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><name><name pos:line="75" pos:column="12">conn<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">sock<pos:position pos:line="75" pos:column="22"/></name><index pos:line="75" pos:column="22">[<expr><name pos:line="75" pos:column="23">SECONDARYSOCKET<pos:position pos:line="75" pos:column="38"/></name></expr>]<pos:position pos:line="75" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt></block></then></if>
  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><name pos:line="76" pos:column="6">CURL_SOCKET_BAD<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">!=<pos:position pos:line="76" pos:column="24"/></operator> <name><name pos:line="76" pos:column="25">conn<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">sock<pos:position pos:line="76" pos:column="35"/></name><index pos:line="76" pos:column="35">[<expr><name pos:line="76" pos:column="36">FIRSTSOCKET<pos:position pos:line="76" pos:column="47"/></name></expr>]<pos:position pos:line="76" pos:column="48"/></index></name></expr>)<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="5">sclose<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><name><name pos:line="77" pos:column="12">conn<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">-&gt;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="18">sock<pos:position pos:line="77" pos:column="22"/></name><index pos:line="77" pos:column="22">[<expr><name pos:line="77" pos:column="23">FIRSTSOCKET<pos:position pos:line="77" pos:column="34"/></name></expr>]<pos:position pos:line="77" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">Curl_safefree<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">(<argument><expr><name><name pos:line="79" pos:column="17">conn<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">-&gt;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="23">user<pos:position pos:line="79" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">Curl_safefree<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><name><name pos:line="80" pos:column="17">conn<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">-&gt;<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="23">passwd<pos:position pos:line="80" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">Curl_safefree<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">conn<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">proxyuser<pos:position pos:line="81" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">Curl_safefree<pos:position pos:line="82" pos:column="16"/></name><argument_list pos:line="82" pos:column="16">(<argument><expr><name><name pos:line="82" pos:column="17">conn<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">proxypasswd<pos:position pos:line="82" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">Curl_safefree<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name><name pos:line="83" pos:column="17">conn<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">allocptr<pos:position pos:line="83" pos:column="31"/></name><operator pos:line="83" pos:column="31">.<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">proxyuserpwd<pos:position pos:line="83" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">Curl_safefree<pos:position pos:line="84" pos:column="16"/></name><argument_list pos:line="84" pos:column="16">(<argument><expr><name><name pos:line="84" pos:column="17">conn<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">-&gt;<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="23">allocptr<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">.<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">uagent<pos:position pos:line="84" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">Curl_safefree<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name><name pos:line="85" pos:column="17">conn<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">allocptr<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">.<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="32">userpwd<pos:position pos:line="85" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">Curl_safefree<pos:position pos:line="86" pos:column="16"/></name><argument_list pos:line="86" pos:column="16">(<argument><expr><name><name pos:line="86" pos:column="17">conn<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">allocptr<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">.<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="32">accept_encoding<pos:position pos:line="86" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">Curl_safefree<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><name><name pos:line="87" pos:column="17">conn<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">-&gt;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="23">allocptr<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">.<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="32">rangeline<pos:position pos:line="87" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">Curl_safefree<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><name><name pos:line="88" pos:column="17">conn<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">-&gt;<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="23">allocptr<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">.<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="32">ref<pos:position pos:line="88" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">Curl_safefree<pos:position pos:line="89" pos:column="16"/></name><argument_list pos:line="89" pos:column="16">(<argument><expr><name><name pos:line="89" pos:column="17">conn<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">-&gt;<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="23">allocptr<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">.<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">host<pos:position pos:line="89" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">Curl_safefree<pos:position pos:line="90" pos:column="16"/></name><argument_list pos:line="90" pos:column="16">(<argument><expr><name><name pos:line="90" pos:column="17">conn<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">allocptr<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">.<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="32">cookiehost<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">Curl_safefree<pos:position pos:line="91" pos:column="16"/></name><argument_list pos:line="91" pos:column="16">(<argument><expr><name><name pos:line="91" pos:column="17">conn<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-&gt;<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="23">ip_addr_str<pos:position pos:line="91" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="93" pos:column="3">/* possible left-overs from the async name resolvers */</comment>
<cpp:if pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">if<pos:position pos:line="94" pos:column="4"/></cpp:directive> <expr><call><name pos:line="94" pos:column="5">defined<pos:position pos:line="94" pos:column="12"/></name><argument_list pos:line="94" pos:column="12">(<argument><expr><name pos:line="94" pos:column="13">USE_ARES<pos:position pos:line="94" pos:column="21"/></name></expr></argument>)<pos:position pos:line="94" pos:column="22"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">Curl_safefree<pos:position pos:line="95" pos:column="16"/></name><argument_list pos:line="95" pos:column="16">(<argument><expr><name><name pos:line="95" pos:column="17">conn<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">-&gt;<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="23">async<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">.<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="29">hostname<pos:position pos:line="95" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">Curl_safefree<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><name><name pos:line="96" pos:column="17">conn<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">async<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">.<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="29">os_specific<pos:position pos:line="96" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="42"/></expr_stmt>
<cpp:elif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">elif<pos:position pos:line="97" pos:column="6"/></cpp:directive> <expr><call><name pos:line="97" pos:column="7">defined<pos:position pos:line="97" pos:column="14"/></name><argument_list pos:line="97" pos:column="14">(<argument><expr><name pos:line="97" pos:column="15">CURLRES_THREADED<pos:position pos:line="97" pos:column="31"/></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">Curl_destroy_thread_data<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><operator pos:line="98" pos:column="28">&amp;<pos:position pos:line="98" pos:column="33"/></operator><name><name pos:line="98" pos:column="29">conn<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">-&gt;<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="35">async<pos:position pos:line="98" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="101" pos:column="3">Curl_free_ssl_config<pos:position pos:line="101" pos:column="23"/></name><argument_list pos:line="101" pos:column="23">(<argument><expr><operator pos:line="101" pos:column="24">&amp;<pos:position pos:line="101" pos:column="29"/></operator><name><name pos:line="101" pos:column="25">conn<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">-&gt;<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="31">ssl_config<pos:position pos:line="101" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="103" pos:column="3">free<pos:position pos:line="103" pos:column="7"/></name><argument_list pos:line="103" pos:column="7">(<argument><expr><name pos:line="103" pos:column="8">conn<pos:position pos:line="103" pos:column="12"/></name></expr></argument>)<pos:position pos:line="103" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="14"/></expr_stmt> <comment type="block" pos:line="103" pos:column="15">/* free all the connection oriented data */</comment>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">CURLE_OK<pos:position pos:line="105" pos:column="18"/></name></expr>;<pos:position pos:line="105" pos:column="19"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1318.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_getoff_all_pipelines<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">SessionHandle<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">connectdata<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">conn<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">recv_head<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><ternary><condition><expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name><name pos:line="4" pos:column="21">conn<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">readchannel_inuse<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">&amp;&amp;<pos:position pos:line="4" pos:column="55"/></operator>
    <operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><call><name pos:line="5" pos:column="6">gethandleathead<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name><name pos:line="5" pos:column="22">conn<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">recv_pipe<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call> <operator pos:line="5" pos:column="39">==<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="42">data<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">)<pos:position pos:line="5" pos:column="47"/></operator><operator pos:line="5" pos:column="47">)<pos:position pos:line="5" pos:column="48"/></operator></expr> ?<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50"> <expr><name pos:line="5" pos:column="51">TRUE<pos:position pos:line="5" pos:column="55"/></name></expr> <pos:position pos:line="5" pos:column="56"/></then><else pos:line="5" pos:column="56">: <expr><name pos:line="5" pos:column="58">FALSE<pos:position pos:line="5" pos:column="63"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">send_head<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><ternary><condition><expr><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><name><name pos:line="7" pos:column="21">conn<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">writechannel_inuse<pos:position pos:line="7" pos:column="45"/></name></name> <operator pos:line="7" pos:column="46">&amp;&amp;<pos:position pos:line="7" pos:column="56"/></operator>
    <operator pos:line="8" pos:column="5">(<pos:position pos:line="8" pos:column="6"/></operator><call><name pos:line="8" pos:column="6">gethandleathead<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name><name pos:line="8" pos:column="22">conn<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">send_pipe<pos:position pos:line="8" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call> <operator pos:line="8" pos:column="39">==<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">data<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator></expr> ?<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50"> <expr><name pos:line="8" pos:column="51">TRUE<pos:position pos:line="8" pos:column="55"/></name></expr> <pos:position pos:line="8" pos:column="56"/></then><else pos:line="8" pos:column="56">: <expr><name pos:line="8" pos:column="58">FALSE<pos:position pos:line="8" pos:column="63"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><call><name pos:line="10" pos:column="6">Curl_removeHandleFromPipeline<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">data<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="42">conn<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">recv_pipe<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call> <operator pos:line="10" pos:column="59">&amp;&amp;<pos:position pos:line="10" pos:column="69"/></operator> <name pos:line="10" pos:column="62">recv_head<pos:position pos:line="10" pos:column="71"/></name></expr>)<pos:position pos:line="10" pos:column="72"/></condition><then pos:line="10" pos:column="72">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="5">conn<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">readchannel_inuse<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">FALSE<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then></if>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><call><name pos:line="12" pos:column="6">Curl_removeHandleFromPipeline<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">data<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="42">conn<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">send_pipe<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call> <operator pos:line="12" pos:column="59">&amp;&amp;<pos:position pos:line="12" pos:column="69"/></operator> <name pos:line="12" pos:column="62">send_head<pos:position pos:line="12" pos:column="71"/></name></expr>)<pos:position pos:line="12" pos:column="72"/></condition><then pos:line="12" pos:column="72">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">conn<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">writechannel_inuse<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">FALSE<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

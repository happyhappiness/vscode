<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1831_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_pubkey<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">Curl_easy<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">data<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">certnum<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">algo<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">curl_asn1Element<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">param<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">curl_asn1Element<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">pubkey<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_asn1Element<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">elem<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_asn1Element<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">pk<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">q<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">long<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">len<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">int<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Generate all information records for the public key. */</comment>

  <comment type="block" pos:line="14" pos:column="3">/* Get the public key (single element). */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">Curl_getASN1Element<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><operator pos:line="15" pos:column="23">&amp;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="24">pk<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="28">pubkey<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">beg<pos:position pos:line="15" pos:column="39"/></name></name> <operator pos:line="15" pos:column="40">+<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="42">1<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="45">pubkey<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">end<pos:position pos:line="15" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><call><name pos:line="17" pos:column="6">strcasecompare<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">algo<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"rsaEncryption"<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44"> <block pos:line="17" pos:column="45">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">p<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <call><name pos:line="18" pos:column="9">Curl_getASN1Element<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">&amp;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="30">elem<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">pk<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">.<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">beg<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="44">pk<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">.<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">end<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* Compute key length. */</comment>
    <for pos:line="20" pos:column="5">for<control pos:line="20" pos:column="8">(<init><expr><name pos:line="20" pos:column="9">q<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name><name pos:line="20" pos:column="13">elem<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">beg<pos:position pos:line="20" pos:column="21"/></name></name></expr>;<pos:position pos:line="20" pos:column="22"/></init> <condition><expr><operator pos:line="20" pos:column="23">!<pos:position pos:line="20" pos:column="24"/></operator><operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">q<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&amp;&amp;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="30">q<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">&lt;<pos:position pos:line="20" pos:column="36"/></operator> <name><name pos:line="20" pos:column="34">elem<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">end<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></condition> <incr><expr><name pos:line="20" pos:column="44">q<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">++<pos:position pos:line="20" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="48"/></control>
      <block type="pseudo"><empty_stmt pos:line="21" pos:column="7">;<pos:position pos:line="21" pos:column="8"/></empty_stmt></block></for>
    <expr_stmt><expr><name pos:line="22" pos:column="5">len<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call pos:line="22" pos:column="11">(<name pos:line="22" pos:column="12">unsigned<pos:position pos:line="22" pos:column="20"/></name> <name pos:line="22" pos:column="21">long<pos:position pos:line="22" pos:column="25"/></name>)<argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name><name pos:line="22" pos:column="28">elem<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">end<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">q<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator> <operator pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">8<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">len<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition><then pos:line="23" pos:column="12">
      <block type="pseudo"><for pos:line="24" pos:column="7">for<control pos:line="24" pos:column="10">(<init><expr><name pos:line="24" pos:column="11">i<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <operator pos:line="24" pos:column="15">*<pos:position pos:line="24" pos:column="16"/></operator><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">unsigned<pos:position pos:line="24" pos:column="25"/></name> <name pos:line="24" pos:column="26">char<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">q<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></init> <condition><expr><operator pos:line="24" pos:column="37">!<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">(<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">i<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">&amp;<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="43">0x80<pos:position pos:line="24" pos:column="47"/></literal><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr>;<pos:position pos:line="24" pos:column="49"/></condition> <incr><expr><name pos:line="24" pos:column="50">i<pos:position pos:line="24" pos:column="51"/></name> <operator pos:line="24" pos:column="52">&lt;&lt;=<pos:position pos:line="24" pos:column="61"/></operator> <literal type="number" pos:line="24" pos:column="56">1<pos:position pos:line="24" pos:column="57"/></literal></expr></incr>)<pos:position pos:line="24" pos:column="58"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">len<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">--<pos:position pos:line="25" pos:column="14"/></operator></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt></block></for></block></then></if>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">len<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&gt;<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="14">32<pos:position pos:line="26" pos:column="16"/></literal></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="7">elem<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">beg<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">q<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt></block></then></if>     <comment type="block" pos:line="27" pos:column="25">/* Strip leading zero bytes. */</comment>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">certnum<pos:position pos:line="28" pos:column="16"/></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">infof<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">data<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"   RSA Public Key (%lu bits)\n"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">len<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then></if>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name><name pos:line="30" pos:column="8">data<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">set<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">ssl<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">certinfo<pos:position pos:line="30" pos:column="30"/></name></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">q<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <call><name pos:line="31" pos:column="11">curl_maprintf<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"%lu"<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">len<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">q<pos:position pos:line="32" pos:column="11"/></name></expr>)<pos:position pos:line="32" pos:column="12"/></condition><then pos:line="32" pos:column="12"> <block pos:line="32" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">Curl_ssl_push_certinfo<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">data<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">certnum<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="47">"RSA Public Key"<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">q<pos:position pos:line="33" pos:column="66"/></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">free<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">q<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="37" pos:column="5">/* Generate coefficients. */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">do_pubkey_field<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">data<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">certnum<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="36">"rsa(n)"<pos:position pos:line="38" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="46">&amp;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="47">elem<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">Curl_getASN1Element<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><operator pos:line="39" pos:column="25">&amp;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="26">elem<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">p<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="35">pk<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">.<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">end<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">do_pubkey_field<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">data<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">certnum<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="36">"rsa(e)"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="46">&amp;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="47">elem<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then>
  <elseif pos:line="42" pos:column="3">else <if pos:line="42" pos:column="8">if<condition pos:line="42" pos:column="10">(<expr><call><name pos:line="42" pos:column="11">strcasecompare<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">algo<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="32">"dsa"<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
    <expr_stmt><expr><name pos:line="43" pos:column="5">p<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <call><name pos:line="43" pos:column="9">Curl_getASN1Element<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">elem<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">param<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">beg<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="48">param<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">end<pos:position pos:line="43" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">do_pubkey_field<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">data<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">certnum<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="36">"dsa(p)"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="46">&amp;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="47">elem<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">p<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <call><name pos:line="45" pos:column="9">Curl_getASN1Element<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><operator pos:line="45" pos:column="29">&amp;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="30">elem<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">p<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="39">param<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">end<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">do_pubkey_field<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">data<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">certnum<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="36">"dsa(q)"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="46">&amp;<pos:position pos:line="46" pos:column="51"/></operator><name pos:line="46" pos:column="47">elem<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">Curl_getASN1Element<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><operator pos:line="47" pos:column="25">&amp;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="26">elem<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">p<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="35">param<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">end<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">do_pubkey_field<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">data<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">certnum<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="36">"dsa(g)"<pos:position pos:line="48" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="46">&amp;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="47">elem<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">do_pubkey_field<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">data<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="27">certnum<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"dsa(pub_key)"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="52">&amp;<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="53">pk<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="51" pos:column="3">else <if pos:line="51" pos:column="8">if<condition pos:line="51" pos:column="10">(<expr><call><name pos:line="51" pos:column="11">strcasecompare<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">algo<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="32">"dhpublicnumber"<pos:position pos:line="51" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="50"/></condition><then pos:line="51" pos:column="50"> <block pos:line="51" pos:column="51">{
    <expr_stmt><expr><name pos:line="52" pos:column="5">p<pos:position pos:line="52" pos:column="6"/></name> <operator pos:line="52" pos:column="7">=<pos:position pos:line="52" pos:column="8"/></operator> <call><name pos:line="52" pos:column="9">Curl_getASN1Element<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="30">elem<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="36">param<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">beg<pos:position pos:line="52" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="48">param<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">-&gt;<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="55">end<pos:position pos:line="52" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">do_pubkey_field<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">data<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">certnum<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="36">"dh(p)"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="45">&amp;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="46">elem<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">Curl_getASN1Element<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><operator pos:line="54" pos:column="25">&amp;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="26">elem<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="32">param<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">-&gt;<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="39">beg<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="44">param<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">end<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">do_pubkey_field<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">data<pos:position pos:line="55" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="27">certnum<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="36">"dh(g)"<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="45">&amp;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="46">elem<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">do_pubkey_field<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">data<pos:position pos:line="56" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="27">certnum<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="36">"dh(pub_key)"<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">pk<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if></elseif></if>
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="58" pos:column="5">0<pos:position pos:line="58" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="58" pos:column="7">/* Patent-encumbered. */</comment>
  else if(strcasecompare(algo, "ecPublicKey")) {
    <comment type="block" pos:line="60" pos:column="5">/* Left TODO. */</comment>
  }
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1365_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_SOCKS4<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">proxy_user<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">hostname<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">remote_port<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="4" pos:column="22">int<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">sockindex<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>,
                     <parameter><decl><type><name><name pos:line="5" pos:column="22">struct<pos:position pos:line="5" pos:column="28"/></name> <name pos:line="5" pos:column="29">connectdata<pos:position pos:line="5" pos:column="40"/></name></name> <modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier></type><name pos:line="5" pos:column="42">conn<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="47"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">bool<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">protocol4a<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">=
    <expr><ternary><condition><expr><operator pos:line="8" pos:column="5">(<pos:position pos:line="8" pos:column="6"/></operator><name><name pos:line="8" pos:column="6">conn<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">socks_proxy<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">proxytype<pos:position pos:line="8" pos:column="33"/></name></name> <operator pos:line="8" pos:column="34">==<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">CURLPROXY_SOCKS4A<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator></expr> ?<pos:position pos:line="8" pos:column="57"/></condition><then pos:line="8" pos:column="57"> <expr><name pos:line="8" pos:column="58">TRUE<pos:position pos:line="8" pos:column="62"/></name></expr> <pos:position pos:line="8" pos:column="63"/></then><else pos:line="8" pos:column="63">: <expr><name pos:line="8" pos:column="65">FALSE<pos:position pos:line="8" pos:column="70"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="71"/></decl_stmt>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">SOCKS4REQLEN<pos:position pos:line="9" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="9" pos:column="22">262<pos:position pos:line="9" pos:column="25"/></cpp:value></cpp:define>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">socksreq<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">SOCKS4REQLEN<pos:position pos:line="10" pos:column="38"/></name></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt> <comment type="block" pos:line="10" pos:column="41">/* room for SOCKS4 request incl. user
                                           id */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">result<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">CURLcode<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">code<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">curl_socket_t<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">sock<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><name><name pos:line="14" pos:column="24">conn<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">sock<pos:position pos:line="14" pos:column="34"/></name><index pos:line="14" pos:column="34">[<expr><name pos:line="14" pos:column="35">sockindex<pos:position pos:line="14" pos:column="44"/></name></expr>]<pos:position pos:line="14" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">Curl_easy<pos:position pos:line="15" pos:column="19"/></name></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">data<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><name><name pos:line="15" pos:column="28">conn<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">data<pos:position pos:line="15" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><call><name pos:line="17" pos:column="6">Curl_timeleft<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">data<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">NULL<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">TRUE<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">&lt;<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="40">0<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
    <comment type="block" pos:line="18" pos:column="5">/* time-out, bail out, go home */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">failf<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="17">"Connection time-out"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name><name pos:line="23" pos:column="6">conn<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">bits<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">httpproxy<pos:position pos:line="23" pos:column="26"/></name></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">infof<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name><name pos:line="24" pos:column="11">conn<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">data<pos:position pos:line="24" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"SOCKS4%s: connecting to HTTP proxy %s port %d\n"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="11">protocol4a<pos:position pos:line="25" pos:column="21"/></name></expr> ?<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <expr><literal type="string" pos:line="25" pos:column="24">"a"<pos:position pos:line="25" pos:column="27"/></literal></expr> <pos:position pos:line="25" pos:column="28"/></then><else pos:line="25" pos:column="28">: <expr><literal type="string" pos:line="25" pos:column="30">""<pos:position pos:line="25" pos:column="32"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">hostname<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">remote_port<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt></block></then></if>

  <expr_stmt><expr><operator pos:line="27" pos:column="3">(<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">void<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">)<pos:position pos:line="27" pos:column="9"/></operator><call><name pos:line="27" pos:column="9">curlx_nonblock<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">sock<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">FALSE<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">infof<pos:position pos:line="29" pos:column="8"/></name><argument_list pos:line="29" pos:column="8">(<argument><expr><name pos:line="29" pos:column="9">data<pos:position pos:line="29" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="15">"SOCKS4 communication to %s:%d\n"<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">hostname<pos:position pos:line="29" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="60">remote_port<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="31" pos:column="3">/*
   * Compose socks4 request
   *
   * Request format
   *
   *     +----+----+----+----+----+----+----+----+----+----+....+----+
   *     | VN | CD | DSTPORT |      DSTIP        | USERID       |NULL|
   *     +----+----+----+----+----+----+----+----+----+----+....+----+
   * # of bytes:  1    1      2              4           variable       1
   */</comment>

  <expr_stmt><expr><name><name pos:line="42" pos:column="3">socksreq<pos:position pos:line="42" pos:column="11"/></name><index pos:line="42" pos:column="11">[<expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>]<pos:position pos:line="42" pos:column="14"/></index></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <literal type="number" pos:line="42" pos:column="17">4<pos:position pos:line="42" pos:column="18"/></literal></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt> <comment type="block" pos:line="42" pos:column="20">/* version (SOCKS4) */</comment>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">socksreq<pos:position pos:line="43" pos:column="11"/></name><index pos:line="43" pos:column="11">[<expr><literal type="number" pos:line="43" pos:column="12">1<pos:position pos:line="43" pos:column="13"/></literal></expr>]<pos:position pos:line="43" pos:column="14"/></index></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt> <comment type="block" pos:line="43" pos:column="20">/* connect */</comment>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">socksreq<pos:position pos:line="44" pos:column="11"/></name><index pos:line="44" pos:column="11">[<expr><literal type="number" pos:line="44" pos:column="12">2<pos:position pos:line="44" pos:column="13"/></literal></expr>]<pos:position pos:line="44" pos:column="14"/></index></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <call pos:line="44" pos:column="17">(<name pos:line="44" pos:column="18">unsigned<pos:position pos:line="44" pos:column="26"/></name> <name pos:line="44" pos:column="27">char<pos:position pos:line="44" pos:column="31"/></name>)<argument_list pos:line="44" pos:column="32">(<argument><expr><operator pos:line="44" pos:column="33">(<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">remote_port<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">&gt;&gt;<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="49">8<pos:position pos:line="44" pos:column="50"/></literal><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator> <operator pos:line="44" pos:column="52">&amp;<pos:position pos:line="44" pos:column="57"/></operator> <literal type="number" pos:line="44" pos:column="54">0xff<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt> <comment type="block" pos:line="44" pos:column="61">/* PORT MSB */</comment>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">socksreq<pos:position pos:line="45" pos:column="11"/></name><index pos:line="45" pos:column="11">[<expr><literal type="number" pos:line="45" pos:column="12">3<pos:position pos:line="45" pos:column="13"/></literal></expr>]<pos:position pos:line="45" pos:column="14"/></index></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <call pos:line="45" pos:column="17">(<name pos:line="45" pos:column="18">unsigned<pos:position pos:line="45" pos:column="26"/></name> <name pos:line="45" pos:column="27">char<pos:position pos:line="45" pos:column="31"/></name>)<argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">remote_port<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator> <literal type="number" pos:line="45" pos:column="47">0xff<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>        <comment type="block" pos:line="45" pos:column="61">/* PORT LSB */</comment>

  <comment type="block" pos:line="47" pos:column="3">/* DNS resolve only for SOCKS4, not SOCKS4a */</comment>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><operator pos:line="48" pos:column="6">!<pos:position pos:line="48" pos:column="7"/></operator><name pos:line="48" pos:column="7">protocol4a<pos:position pos:line="48" pos:column="17"/></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <block pos:line="48" pos:column="19">{
    <decl_stmt><decl><type><name><name pos:line="49" pos:column="5">struct<pos:position pos:line="49" pos:column="11"/></name> <name pos:line="49" pos:column="12">Curl_dns_entry<pos:position pos:line="49" pos:column="26"/></name></name> <modifier pos:line="49" pos:column="27">*<pos:position pos:line="49" pos:column="28"/></modifier></type><name pos:line="49" pos:column="28">dns<pos:position pos:line="49" pos:column="31"/></name></decl>;<pos:position pos:line="49" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">Curl_addrinfo<pos:position pos:line="50" pos:column="18"/></name> <modifier pos:line="50" pos:column="19">*<pos:position pos:line="50" pos:column="20"/></modifier></type><name pos:line="50" pos:column="20">hp<pos:position pos:line="50" pos:column="22"/></name> <init pos:line="50" pos:column="23">= <expr><name pos:line="50" pos:column="25">NULL<pos:position pos:line="50" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">int<pos:position pos:line="51" pos:column="8"/></name></type> <name pos:line="51" pos:column="9">rc<pos:position pos:line="51" pos:column="11"/></name></decl>;<pos:position pos:line="51" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">rc<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">Curl_resolv<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">conn<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">hostname<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">remote_port<pos:position pos:line="53" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="51">&amp;<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="52">dns<pos:position pos:line="53" pos:column="55"/></name></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="57"/></expr_stmt>

    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">rc<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">==<pos:position pos:line="55" pos:column="13"/></operator> <name pos:line="55" pos:column="14">CURLRESOLV_ERROR<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31">
      <block type="pseudo"><return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></return></block></then></if>

    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><name pos:line="58" pos:column="8">rc<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">==<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="58" pos:column="32"/></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33">
      <comment type="block" pos:line="59" pos:column="7">/* ignores the return code, but 'dns' remains NULL on failure */</comment>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="60" pos:column="7">(<pos:position pos:line="60" pos:column="8"/></operator><name pos:line="60" pos:column="8">void<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">)<pos:position pos:line="60" pos:column="13"/></operator><call><name pos:line="60" pos:column="13">Curl_resolver_wait_resolv<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">conn<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="45">&amp;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="46">dns<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/*
     * We cannot use 'hostent' as a struct that Curl_resolv() returns.  It
     * returns a Curl_addrinfo pointer that may not always look the same.
     */</comment>
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name pos:line="66" pos:column="8">dns<pos:position pos:line="66" pos:column="11"/></name></expr>)<pos:position pos:line="66" pos:column="12"/></condition><then pos:line="66" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="7">hp<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <name><name pos:line="67" pos:column="12">dns<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">addr<pos:position pos:line="67" pos:column="21"/></name></name></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt></block></then></if>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name pos:line="68" pos:column="8">hp<pos:position pos:line="68" pos:column="10"/></name></expr>)<pos:position pos:line="68" pos:column="11"/></condition><then pos:line="68" pos:column="11"> <block pos:line="68" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="69" pos:column="7">char<pos:position pos:line="69" pos:column="11"/></name></type> <name><name pos:line="69" pos:column="12">buf<pos:position pos:line="69" pos:column="15"/></name><index pos:line="69" pos:column="15">[<expr><literal type="number" pos:line="69" pos:column="16">64<pos:position pos:line="69" pos:column="18"/></literal></expr>]<pos:position pos:line="69" pos:column="19"/></index></name></decl>;<pos:position pos:line="69" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">Curl_printable_address<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">hp<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="34">buf<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="39">sizeof<argument_list pos:line="70" pos:column="45">(<argument><expr><name pos:line="70" pos:column="46">buf<pos:position pos:line="70" pos:column="49"/></name></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>

      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">(<expr><name><name pos:line="72" pos:column="10">hp<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">ai_family<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">==<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">AF_INET<pos:position pos:line="72" pos:column="34"/></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <block pos:line="72" pos:column="36">{
        <decl_stmt><decl><type><name><name pos:line="73" pos:column="9">struct<pos:position pos:line="73" pos:column="15"/></name> <name pos:line="73" pos:column="16">sockaddr_in<pos:position pos:line="73" pos:column="27"/></name></name> <modifier pos:line="73" pos:column="28">*<pos:position pos:line="73" pos:column="29"/></modifier></type><name pos:line="73" pos:column="29">saddr_in<pos:position pos:line="73" pos:column="37"/></name></decl>;<pos:position pos:line="73" pos:column="38"/></decl_stmt>

        <expr_stmt><expr><name pos:line="75" pos:column="9">saddr_in<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <operator pos:line="75" pos:column="20">(<pos:position pos:line="75" pos:column="21"/></operator>struct <name pos:line="75" pos:column="28">sockaddr_in<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></operator><operator pos:line="75" pos:column="41">)<pos:position pos:line="75" pos:column="42"/></operator><operator pos:line="75" pos:column="42">(<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="43">void<pos:position pos:line="75" pos:column="47"/></name> <operator pos:line="75" pos:column="48">*<pos:position pos:line="75" pos:column="49"/></operator><operator pos:line="75" pos:column="49">)<pos:position pos:line="75" pos:column="50"/></operator><name><name pos:line="75" pos:column="50">hp<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">-&gt;<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="54">ai_addr<pos:position pos:line="75" pos:column="61"/></name></name></expr>;<pos:position pos:line="75" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">socksreq<pos:position pos:line="76" pos:column="17"/></name><index pos:line="76" pos:column="17">[<expr><literal type="number" pos:line="76" pos:column="18">4<pos:position pos:line="76" pos:column="19"/></literal></expr>]<pos:position pos:line="76" pos:column="20"/></index></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="23">(<pos:position pos:line="76" pos:column="24"/></operator><operator pos:line="76" pos:column="24">(<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">unsigned<pos:position pos:line="76" pos:column="33"/></name> <name pos:line="76" pos:column="34">char<pos:position pos:line="76" pos:column="38"/></name> <operator pos:line="76" pos:column="39">*<pos:position pos:line="76" pos:column="40"/></operator><operator pos:line="76" pos:column="40">)<pos:position pos:line="76" pos:column="41"/></operator><operator pos:line="76" pos:column="41">&amp;<pos:position pos:line="76" pos:column="46"/></operator><name><name pos:line="76" pos:column="42">saddr_in<pos:position pos:line="76" pos:column="50"/></name><operator pos:line="76" pos:column="50">-&gt;<pos:position pos:line="76" pos:column="55"/></operator><name pos:line="76" pos:column="52">sin_addr<pos:position pos:line="76" pos:column="60"/></name><operator pos:line="76" pos:column="60">.<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="61">s_addr<pos:position pos:line="76" pos:column="67"/></name></name><operator pos:line="76" pos:column="67">)<pos:position pos:line="76" pos:column="68"/></operator><index pos:line="76" pos:column="68">[<expr><literal type="number" pos:line="76" pos:column="69">0<pos:position pos:line="76" pos:column="70"/></literal></expr>]<pos:position pos:line="76" pos:column="71"/></index></expr>;<pos:position pos:line="76" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">socksreq<pos:position pos:line="77" pos:column="17"/></name><index pos:line="77" pos:column="17">[<expr><literal type="number" pos:line="77" pos:column="18">5<pos:position pos:line="77" pos:column="19"/></literal></expr>]<pos:position pos:line="77" pos:column="20"/></index></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <operator pos:line="77" pos:column="23">(<pos:position pos:line="77" pos:column="24"/></operator><operator pos:line="77" pos:column="24">(<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="25">unsigned<pos:position pos:line="77" pos:column="33"/></name> <name pos:line="77" pos:column="34">char<pos:position pos:line="77" pos:column="38"/></name> <operator pos:line="77" pos:column="39">*<pos:position pos:line="77" pos:column="40"/></operator><operator pos:line="77" pos:column="40">)<pos:position pos:line="77" pos:column="41"/></operator><operator pos:line="77" pos:column="41">&amp;<pos:position pos:line="77" pos:column="46"/></operator><name><name pos:line="77" pos:column="42">saddr_in<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">-&gt;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="52">sin_addr<pos:position pos:line="77" pos:column="60"/></name><operator pos:line="77" pos:column="60">.<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="61">s_addr<pos:position pos:line="77" pos:column="67"/></name></name><operator pos:line="77" pos:column="67">)<pos:position pos:line="77" pos:column="68"/></operator><index pos:line="77" pos:column="68">[<expr><literal type="number" pos:line="77" pos:column="69">1<pos:position pos:line="77" pos:column="70"/></literal></expr>]<pos:position pos:line="77" pos:column="71"/></index></expr>;<pos:position pos:line="77" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">socksreq<pos:position pos:line="78" pos:column="17"/></name><index pos:line="78" pos:column="17">[<expr><literal type="number" pos:line="78" pos:column="18">6<pos:position pos:line="78" pos:column="19"/></literal></expr>]<pos:position pos:line="78" pos:column="20"/></index></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <operator pos:line="78" pos:column="23">(<pos:position pos:line="78" pos:column="24"/></operator><operator pos:line="78" pos:column="24">(<pos:position pos:line="78" pos:column="25"/></operator><name pos:line="78" pos:column="25">unsigned<pos:position pos:line="78" pos:column="33"/></name> <name pos:line="78" pos:column="34">char<pos:position pos:line="78" pos:column="38"/></name> <operator pos:line="78" pos:column="39">*<pos:position pos:line="78" pos:column="40"/></operator><operator pos:line="78" pos:column="40">)<pos:position pos:line="78" pos:column="41"/></operator><operator pos:line="78" pos:column="41">&amp;<pos:position pos:line="78" pos:column="46"/></operator><name><name pos:line="78" pos:column="42">saddr_in<pos:position pos:line="78" pos:column="50"/></name><operator pos:line="78" pos:column="50">-&gt;<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="52">sin_addr<pos:position pos:line="78" pos:column="60"/></name><operator pos:line="78" pos:column="60">.<pos:position pos:line="78" pos:column="61"/></operator><name pos:line="78" pos:column="61">s_addr<pos:position pos:line="78" pos:column="67"/></name></name><operator pos:line="78" pos:column="67">)<pos:position pos:line="78" pos:column="68"/></operator><index pos:line="78" pos:column="68">[<expr><literal type="number" pos:line="78" pos:column="69">2<pos:position pos:line="78" pos:column="70"/></literal></expr>]<pos:position pos:line="78" pos:column="71"/></index></expr>;<pos:position pos:line="78" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">socksreq<pos:position pos:line="79" pos:column="17"/></name><index pos:line="79" pos:column="17">[<expr><literal type="number" pos:line="79" pos:column="18">7<pos:position pos:line="79" pos:column="19"/></literal></expr>]<pos:position pos:line="79" pos:column="20"/></index></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <operator pos:line="79" pos:column="23">(<pos:position pos:line="79" pos:column="24"/></operator><operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">unsigned<pos:position pos:line="79" pos:column="33"/></name> <name pos:line="79" pos:column="34">char<pos:position pos:line="79" pos:column="38"/></name> <operator pos:line="79" pos:column="39">*<pos:position pos:line="79" pos:column="40"/></operator><operator pos:line="79" pos:column="40">)<pos:position pos:line="79" pos:column="41"/></operator><operator pos:line="79" pos:column="41">&amp;<pos:position pos:line="79" pos:column="46"/></operator><name><name pos:line="79" pos:column="42">saddr_in<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">-&gt;<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="52">sin_addr<pos:position pos:line="79" pos:column="60"/></name><operator pos:line="79" pos:column="60">.<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="61">s_addr<pos:position pos:line="79" pos:column="67"/></name></name><operator pos:line="79" pos:column="67">)<pos:position pos:line="79" pos:column="68"/></operator><index pos:line="79" pos:column="68">[<expr><literal type="number" pos:line="79" pos:column="69">3<pos:position pos:line="79" pos:column="70"/></literal></expr>]<pos:position pos:line="79" pos:column="71"/></index></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="81" pos:column="9">infof<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">data<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="21">"SOCKS4 connect to IPv4 %s (locally resolved)\n"<pos:position pos:line="81" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="71">buf<pos:position pos:line="81" pos:column="74"/></name></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="82" pos:column="8"/></block></then>
      <else pos:line="83" pos:column="7">else <block pos:line="83" pos:column="12">{
        <expr_stmt><expr><name pos:line="84" pos:column="9">hp<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <name pos:line="84" pos:column="14">NULL<pos:position pos:line="84" pos:column="18"/></name></expr>;<pos:position pos:line="84" pos:column="19"/></expr_stmt> <comment type="block" pos:line="84" pos:column="20">/* fail! */</comment>

        <expr_stmt><expr><call><name pos:line="86" pos:column="9">failf<pos:position pos:line="86" pos:column="14"/></name><argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">data<pos:position pos:line="86" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="21">"SOCKS4 connection to %s not supported\n"<pos:position pos:line="86" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="64">buf<pos:position pos:line="86" pos:column="67"/></name></expr></argument>)<pos:position pos:line="86" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="87" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="89" pos:column="7">Curl_resolv_unlock<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">data<pos:position pos:line="89" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="32">dns<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt> <comment type="block" pos:line="89" pos:column="38">/* not used anymore from now on */</comment>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <if pos:line="91" pos:column="5">if<condition pos:line="91" pos:column="7">(<expr><operator pos:line="91" pos:column="8">!<pos:position pos:line="91" pos:column="9"/></operator><name pos:line="91" pos:column="9">hp<pos:position pos:line="91" pos:column="11"/></name></expr>)<pos:position pos:line="91" pos:column="12"/></condition><then pos:line="91" pos:column="12"> <block pos:line="91" pos:column="13">{
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">failf<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">data<pos:position pos:line="92" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="19">"Failed to resolve \"%s\" for SOCKS4 connect."<pos:position pos:line="92" pos:column="65"/></literal></expr></argument>,
            <argument><expr><name pos:line="93" pos:column="13">hostname<pos:position pos:line="93" pos:column="21"/></name></expr></argument>)<pos:position pos:line="93" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>
      <return pos:line="94" pos:column="7">return <expr><name pos:line="94" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="94" pos:column="40"/></name></expr>;<pos:position pos:line="94" pos:column="41"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="98" pos:column="3">/*
   * This is currently not supporting "Identification Protocol (RFC1413)".
   */</comment>
  <expr_stmt><expr><name><name pos:line="101" pos:column="3">socksreq<pos:position pos:line="101" pos:column="11"/></name><index pos:line="101" pos:column="11">[<expr><literal type="number" pos:line="101" pos:column="12">8<pos:position pos:line="101" pos:column="13"/></literal></expr>]<pos:position pos:line="101" pos:column="14"/></index></name> <operator pos:line="101" pos:column="15">=<pos:position pos:line="101" pos:column="16"/></operator> <literal type="number" pos:line="101" pos:column="17">0<pos:position pos:line="101" pos:column="18"/></literal></expr>;<pos:position pos:line="101" pos:column="19"/></expr_stmt> <comment type="block" pos:line="101" pos:column="20">/* ensure empty userid is NUL-terminated */</comment>
  <if pos:line="102" pos:column="3">if<condition pos:line="102" pos:column="5">(<expr><name pos:line="102" pos:column="6">proxy_user<pos:position pos:line="102" pos:column="16"/></name></expr>)<pos:position pos:line="102" pos:column="17"/></condition><then pos:line="102" pos:column="17"> <block pos:line="102" pos:column="18">{
    <decl_stmt><decl><type><name pos:line="103" pos:column="5">size_t<pos:position pos:line="103" pos:column="11"/></name></type> <name pos:line="103" pos:column="12">plen<pos:position pos:line="103" pos:column="16"/></name> <init pos:line="103" pos:column="17">= <expr><call><name pos:line="103" pos:column="19">strlen<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><name pos:line="103" pos:column="26">proxy_user<pos:position pos:line="103" pos:column="36"/></name></expr></argument>)<pos:position pos:line="103" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="103" pos:column="38"/></decl_stmt>
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><name pos:line="104" pos:column="8">plen<pos:position pos:line="104" pos:column="12"/></name> <operator pos:line="104" pos:column="13">&gt;=<pos:position pos:line="104" pos:column="18"/></operator> <sizeof pos:line="104" pos:column="16">sizeof<argument_list pos:line="104" pos:column="22">(<argument><expr><name pos:line="104" pos:column="23">socksreq<pos:position pos:line="104" pos:column="31"/></name></expr></argument>)<pos:position pos:line="104" pos:column="32"/></argument_list></sizeof> <operator pos:line="104" pos:column="33">-<pos:position pos:line="104" pos:column="34"/></operator> <literal type="number" pos:line="104" pos:column="35">8<pos:position pos:line="104" pos:column="36"/></literal></expr>)<pos:position pos:line="104" pos:column="37"/></condition><then pos:line="104" pos:column="37"> <block pos:line="104" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">failf<pos:position pos:line="105" pos:column="12"/></name><argument_list pos:line="105" pos:column="12">(<argument><expr><name pos:line="105" pos:column="13">data<pos:position pos:line="105" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="19">"Too long SOCKS proxy name, can't use!\n"<pos:position pos:line="105" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>
      <return pos:line="106" pos:column="7">return <expr><name pos:line="106" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="106" pos:column="35"/></name></expr>;<pos:position pos:line="106" pos:column="36"/></return>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="108" pos:column="5">/* copy the proxy name WITH trailing zero */</comment>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">memcpy<pos:position pos:line="109" pos:column="11"/></name><argument_list pos:line="109" pos:column="11">(<argument><expr><name pos:line="109" pos:column="12">socksreq<pos:position pos:line="109" pos:column="20"/></name> <operator pos:line="109" pos:column="21">+<pos:position pos:line="109" pos:column="22"/></operator> <literal type="number" pos:line="109" pos:column="23">8<pos:position pos:line="109" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="26">proxy_user<pos:position pos:line="109" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="38">plen<pos:position pos:line="109" pos:column="42"/></name> <operator pos:line="109" pos:column="43">+<pos:position pos:line="109" pos:column="44"/></operator> <literal type="number" pos:line="109" pos:column="45">1<pos:position pos:line="109" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="110" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="112" pos:column="3">/*
   * Make connection
   */</comment>
  <block pos:line="115" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="116" pos:column="5">ssize_t<pos:position pos:line="116" pos:column="12"/></name></type> <name pos:line="116" pos:column="13">actualread<pos:position pos:line="116" pos:column="23"/></name></decl>;<pos:position pos:line="116" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="117" pos:column="5">ssize_t<pos:position pos:line="117" pos:column="12"/></name></type> <name pos:line="117" pos:column="13">written<pos:position pos:line="117" pos:column="20"/></name></decl>;<pos:position pos:line="117" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="118" pos:column="5">ssize_t<pos:position pos:line="118" pos:column="12"/></name></type> <name pos:line="118" pos:column="13">hostnamelen<pos:position pos:line="118" pos:column="24"/></name> <init pos:line="118" pos:column="25">= <expr><literal type="number" pos:line="118" pos:column="27">0<pos:position pos:line="118" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="118" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="119" pos:column="5">int<pos:position pos:line="119" pos:column="8"/></name></type> <name pos:line="119" pos:column="9">packetsize<pos:position pos:line="119" pos:column="19"/></name> <init pos:line="119" pos:column="20">= <expr><literal type="number" pos:line="119" pos:column="22">9<pos:position pos:line="119" pos:column="23"/></literal> <operator pos:line="119" pos:column="24">+<pos:position pos:line="119" pos:column="25"/></operator>
      <operator pos:line="120" pos:column="7">(<pos:position pos:line="120" pos:column="8"/></operator><name pos:line="120" pos:column="8">int<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">)<pos:position pos:line="120" pos:column="12"/></operator><call><name pos:line="120" pos:column="12">strlen<pos:position pos:line="120" pos:column="18"/></name><argument_list pos:line="120" pos:column="18">(<argument><expr><operator pos:line="120" pos:column="19">(<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">char<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">*<pos:position pos:line="120" pos:column="26"/></operator><operator pos:line="120" pos:column="26">)<pos:position pos:line="120" pos:column="27"/></operator><name pos:line="120" pos:column="27">socksreq<pos:position pos:line="120" pos:column="35"/></name> <operator pos:line="120" pos:column="36">+<pos:position pos:line="120" pos:column="37"/></operator> <literal type="number" pos:line="120" pos:column="38">8<pos:position pos:line="120" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="120" pos:column="41"/></decl_stmt> <comment type="block" pos:line="120" pos:column="42">/* size including NUL */</comment>

    <comment type="block" pos:line="122" pos:column="5">/* If SOCKS4a, set special invalid IP address 0.0.0.x */</comment>
    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">(<expr><name pos:line="123" pos:column="8">protocol4a<pos:position pos:line="123" pos:column="18"/></name></expr>)<pos:position pos:line="123" pos:column="19"/></condition><then pos:line="123" pos:column="19"> <block pos:line="123" pos:column="20">{
      <expr_stmt><expr><name><name pos:line="124" pos:column="7">socksreq<pos:position pos:line="124" pos:column="15"/></name><index pos:line="124" pos:column="15">[<expr><literal type="number" pos:line="124" pos:column="16">4<pos:position pos:line="124" pos:column="17"/></literal></expr>]<pos:position pos:line="124" pos:column="18"/></index></name> <operator pos:line="124" pos:column="19">=<pos:position pos:line="124" pos:column="20"/></operator> <literal type="number" pos:line="124" pos:column="21">0<pos:position pos:line="124" pos:column="22"/></literal></expr>;<pos:position pos:line="124" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="125" pos:column="7">socksreq<pos:position pos:line="125" pos:column="15"/></name><index pos:line="125" pos:column="15">[<expr><literal type="number" pos:line="125" pos:column="16">5<pos:position pos:line="125" pos:column="17"/></literal></expr>]<pos:position pos:line="125" pos:column="18"/></index></name> <operator pos:line="125" pos:column="19">=<pos:position pos:line="125" pos:column="20"/></operator> <literal type="number" pos:line="125" pos:column="21">0<pos:position pos:line="125" pos:column="22"/></literal></expr>;<pos:position pos:line="125" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="126" pos:column="7">socksreq<pos:position pos:line="126" pos:column="15"/></name><index pos:line="126" pos:column="15">[<expr><literal type="number" pos:line="126" pos:column="16">6<pos:position pos:line="126" pos:column="17"/></literal></expr>]<pos:position pos:line="126" pos:column="18"/></index></name> <operator pos:line="126" pos:column="19">=<pos:position pos:line="126" pos:column="20"/></operator> <literal type="number" pos:line="126" pos:column="21">0<pos:position pos:line="126" pos:column="22"/></literal></expr>;<pos:position pos:line="126" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="127" pos:column="7">socksreq<pos:position pos:line="127" pos:column="15"/></name><index pos:line="127" pos:column="15">[<expr><literal type="number" pos:line="127" pos:column="16">7<pos:position pos:line="127" pos:column="17"/></literal></expr>]<pos:position pos:line="127" pos:column="18"/></index></name> <operator pos:line="127" pos:column="19">=<pos:position pos:line="127" pos:column="20"/></operator> <literal type="number" pos:line="127" pos:column="21">1<pos:position pos:line="127" pos:column="22"/></literal></expr>;<pos:position pos:line="127" pos:column="23"/></expr_stmt>
      <comment type="block" pos:line="128" pos:column="7">/* If still enough room in buffer, also append hostname */</comment>
      <expr_stmt><expr><name pos:line="129" pos:column="7">hostnamelen<pos:position pos:line="129" pos:column="18"/></name> <operator pos:line="129" pos:column="19">=<pos:position pos:line="129" pos:column="20"/></operator> <operator pos:line="129" pos:column="21">(<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="22">ssize_t<pos:position pos:line="129" pos:column="29"/></name><operator pos:line="129" pos:column="29">)<pos:position pos:line="129" pos:column="30"/></operator><call><name pos:line="129" pos:column="30">strlen<pos:position pos:line="129" pos:column="36"/></name><argument_list pos:line="129" pos:column="36">(<argument><expr><name pos:line="129" pos:column="37">hostname<pos:position pos:line="129" pos:column="45"/></name></expr></argument>)<pos:position pos:line="129" pos:column="46"/></argument_list></call> <operator pos:line="129" pos:column="47">+<pos:position pos:line="129" pos:column="48"/></operator> <literal type="number" pos:line="129" pos:column="49">1<pos:position pos:line="129" pos:column="50"/></literal></expr>;<pos:position pos:line="129" pos:column="51"/></expr_stmt> <comment type="block" pos:line="129" pos:column="52">/* length including NUL */</comment>
      <if pos:line="130" pos:column="7">if<condition pos:line="130" pos:column="9">(<expr><name pos:line="130" pos:column="10">packetsize<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">+<pos:position pos:line="130" pos:column="22"/></operator> <name pos:line="130" pos:column="23">hostnamelen<pos:position pos:line="130" pos:column="34"/></name> <operator pos:line="130" pos:column="35">&lt;=<pos:position pos:line="130" pos:column="40"/></operator> <name pos:line="130" pos:column="38">SOCKS4REQLEN<pos:position pos:line="130" pos:column="50"/></name></expr>)<pos:position pos:line="130" pos:column="51"/></condition><then pos:line="130" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="9">strcpy<pos:position pos:line="131" pos:column="15"/></name><argument_list pos:line="131" pos:column="15">(<argument><expr><operator pos:line="131" pos:column="16">(<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="17">char<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">*<pos:position pos:line="131" pos:column="23"/></operator><operator pos:line="131" pos:column="23">)<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="24">socksreq<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">+<pos:position pos:line="131" pos:column="34"/></operator> <name pos:line="131" pos:column="35">packetsize<pos:position pos:line="131" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="47">hostname<pos:position pos:line="131" pos:column="55"/></name></expr></argument>)<pos:position pos:line="131" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="57"/></expr_stmt></block></then>
      <else pos:line="132" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="9">hostnamelen<pos:position pos:line="133" pos:column="20"/></name> <operator pos:line="133" pos:column="21">=<pos:position pos:line="133" pos:column="22"/></operator> <literal type="number" pos:line="133" pos:column="23">0<pos:position pos:line="133" pos:column="24"/></literal></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt></block></else></if> <comment type="block" pos:line="133" pos:column="26">/* Flag: hostname did not fit in buffer */</comment>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="136" pos:column="5">/* Send request */</comment>
    <expr_stmt><expr><name pos:line="137" pos:column="5">code<pos:position pos:line="137" pos:column="9"/></name> <operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator> <call><name pos:line="137" pos:column="12">Curl_write_plain<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><name pos:line="137" pos:column="29">conn<pos:position pos:line="137" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="35">sock<pos:position pos:line="137" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="41">(<pos:position pos:line="137" pos:column="42"/></operator><name pos:line="137" pos:column="42">char<pos:position pos:line="137" pos:column="46"/></name> <operator pos:line="137" pos:column="47">*<pos:position pos:line="137" pos:column="48"/></operator><operator pos:line="137" pos:column="48">)<pos:position pos:line="137" pos:column="49"/></operator><name pos:line="137" pos:column="49">socksreq<pos:position pos:line="137" pos:column="57"/></name></expr></argument>,
                            <argument><expr><name pos:line="138" pos:column="29">packetsize<pos:position pos:line="138" pos:column="39"/></name> <operator pos:line="138" pos:column="40">+<pos:position pos:line="138" pos:column="41"/></operator> <name pos:line="138" pos:column="42">hostnamelen<pos:position pos:line="138" pos:column="53"/></name></expr></argument>,
                            <argument><expr><operator pos:line="139" pos:column="29">&amp;<pos:position pos:line="139" pos:column="34"/></operator><name pos:line="139" pos:column="30">written<pos:position pos:line="139" pos:column="37"/></name></expr></argument>)<pos:position pos:line="139" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>
    <if pos:line="140" pos:column="5">if<condition pos:line="140" pos:column="7">(<expr><name pos:line="140" pos:column="8">code<pos:position pos:line="140" pos:column="12"/></name> <operator pos:line="140" pos:column="13">||<pos:position pos:line="140" pos:column="15"/></operator> <operator pos:line="140" pos:column="16">(<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="17">written<pos:position pos:line="140" pos:column="24"/></name> <operator pos:line="140" pos:column="25">!=<pos:position pos:line="140" pos:column="27"/></operator> <name pos:line="140" pos:column="28">packetsize<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">+<pos:position pos:line="140" pos:column="40"/></operator> <name pos:line="140" pos:column="41">hostnamelen<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">)<pos:position pos:line="140" pos:column="53"/></operator></expr>)<pos:position pos:line="140" pos:column="54"/></condition><then pos:line="140" pos:column="54"> <block pos:line="140" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="141" pos:column="7">failf<pos:position pos:line="141" pos:column="12"/></name><argument_list pos:line="141" pos:column="12">(<argument><expr><name pos:line="141" pos:column="13">data<pos:position pos:line="141" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="19">"Failed to send SOCKS4 connect request."<pos:position pos:line="141" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
      <return pos:line="142" pos:column="7">return <expr><name pos:line="142" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="142" pos:column="35"/></name></expr>;<pos:position pos:line="142" pos:column="36"/></return>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if>
    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">(<expr><name pos:line="144" pos:column="8">protocol4a<pos:position pos:line="144" pos:column="18"/></name> <operator pos:line="144" pos:column="19">&amp;&amp;<pos:position pos:line="144" pos:column="29"/></operator> <name pos:line="144" pos:column="22">hostnamelen<pos:position pos:line="144" pos:column="33"/></name> <operator pos:line="144" pos:column="34">==<pos:position pos:line="144" pos:column="36"/></operator> <literal type="number" pos:line="144" pos:column="37">0<pos:position pos:line="144" pos:column="38"/></literal></expr>)<pos:position pos:line="144" pos:column="39"/></condition><then pos:line="144" pos:column="39"> <block pos:line="144" pos:column="40">{
      <comment type="block" pos:line="145" pos:column="7">/* SOCKS4a with very long hostname - send that name separately */</comment>
      <expr_stmt><expr><name pos:line="146" pos:column="7">hostnamelen<pos:position pos:line="146" pos:column="18"/></name> <operator pos:line="146" pos:column="19">=<pos:position pos:line="146" pos:column="20"/></operator> <operator pos:line="146" pos:column="21">(<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="22">ssize_t<pos:position pos:line="146" pos:column="29"/></name><operator pos:line="146" pos:column="29">)<pos:position pos:line="146" pos:column="30"/></operator><call><name pos:line="146" pos:column="30">strlen<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><name pos:line="146" pos:column="37">hostname<pos:position pos:line="146" pos:column="45"/></name></expr></argument>)<pos:position pos:line="146" pos:column="46"/></argument_list></call> <operator pos:line="146" pos:column="47">+<pos:position pos:line="146" pos:column="48"/></operator> <literal type="number" pos:line="146" pos:column="49">1<pos:position pos:line="146" pos:column="50"/></literal></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="147" pos:column="7">code<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <call><name pos:line="147" pos:column="14">Curl_write_plain<pos:position pos:line="147" pos:column="30"/></name><argument_list pos:line="147" pos:column="30">(<argument><expr><name pos:line="147" pos:column="31">conn<pos:position pos:line="147" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="37">sock<pos:position pos:line="147" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="43">(<pos:position pos:line="147" pos:column="44"/></operator><name pos:line="147" pos:column="44">char<pos:position pos:line="147" pos:column="48"/></name> <operator pos:line="147" pos:column="49">*<pos:position pos:line="147" pos:column="50"/></operator><operator pos:line="147" pos:column="50">)<pos:position pos:line="147" pos:column="51"/></operator><name pos:line="147" pos:column="51">hostname<pos:position pos:line="147" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="61">hostnamelen<pos:position pos:line="147" pos:column="72"/></name></expr></argument>,
                              <argument><expr><operator pos:line="148" pos:column="31">&amp;<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="32">written<pos:position pos:line="148" pos:column="39"/></name></expr></argument>)<pos:position pos:line="148" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>
      <if pos:line="149" pos:column="7">if<condition pos:line="149" pos:column="9">(<expr><name pos:line="149" pos:column="10">code<pos:position pos:line="149" pos:column="14"/></name> <operator pos:line="149" pos:column="15">||<pos:position pos:line="149" pos:column="17"/></operator> <operator pos:line="149" pos:column="18">(<pos:position pos:line="149" pos:column="19"/></operator><name pos:line="149" pos:column="19">written<pos:position pos:line="149" pos:column="26"/></name> <operator pos:line="149" pos:column="27">!=<pos:position pos:line="149" pos:column="29"/></operator> <name pos:line="149" pos:column="30">hostnamelen<pos:position pos:line="149" pos:column="41"/></name><operator pos:line="149" pos:column="41">)<pos:position pos:line="149" pos:column="42"/></operator></expr>)<pos:position pos:line="149" pos:column="43"/></condition><then pos:line="149" pos:column="43"> <block pos:line="149" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="150" pos:column="9">failf<pos:position pos:line="150" pos:column="14"/></name><argument_list pos:line="150" pos:column="14">(<argument><expr><name pos:line="150" pos:column="15">data<pos:position pos:line="150" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="21">"Failed to send SOCKS4 connect request."<pos:position pos:line="150" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="63"/></expr_stmt>
        <return pos:line="151" pos:column="9">return <expr><name pos:line="151" pos:column="16">CURLE_COULDNT_CONNECT<pos:position pos:line="151" pos:column="37"/></name></expr>;<pos:position pos:line="151" pos:column="38"/></return>
      }<pos:position pos:line="152" pos:column="8"/></block></then></if>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="155" pos:column="5">packetsize<pos:position pos:line="155" pos:column="15"/></name> <operator pos:line="155" pos:column="16">=<pos:position pos:line="155" pos:column="17"/></operator> <literal type="number" pos:line="155" pos:column="18">8<pos:position pos:line="155" pos:column="19"/></literal></expr>;<pos:position pos:line="155" pos:column="20"/></expr_stmt> <comment type="block" pos:line="155" pos:column="21">/* receive data size */</comment>

    <comment type="block" pos:line="157" pos:column="5">/* Receive response */</comment>
    <expr_stmt><expr><name pos:line="158" pos:column="5">result<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">=<pos:position pos:line="158" pos:column="13"/></operator> <call><name pos:line="158" pos:column="14">Curl_blockread_all<pos:position pos:line="158" pos:column="32"/></name><argument_list pos:line="158" pos:column="32">(<argument><expr><name pos:line="158" pos:column="33">conn<pos:position pos:line="158" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="39">sock<pos:position pos:line="158" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="45">(<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="46">char<pos:position pos:line="158" pos:column="50"/></name> <operator pos:line="158" pos:column="51">*<pos:position pos:line="158" pos:column="52"/></operator><operator pos:line="158" pos:column="52">)<pos:position pos:line="158" pos:column="53"/></operator><name pos:line="158" pos:column="53">socksreq<pos:position pos:line="158" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="63">packetsize<pos:position pos:line="158" pos:column="73"/></name></expr></argument>,
                                <argument><expr><operator pos:line="159" pos:column="33">&amp;<pos:position pos:line="159" pos:column="38"/></operator><name pos:line="159" pos:column="34">actualread<pos:position pos:line="159" pos:column="44"/></name></expr></argument>)<pos:position pos:line="159" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="46"/></expr_stmt>
    <if pos:line="160" pos:column="5">if<condition pos:line="160" pos:column="7">(<expr><name pos:line="160" pos:column="8">result<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">||<pos:position pos:line="160" pos:column="17"/></operator> <operator pos:line="160" pos:column="18">(<pos:position pos:line="160" pos:column="19"/></operator><name pos:line="160" pos:column="19">actualread<pos:position pos:line="160" pos:column="29"/></name> <operator pos:line="160" pos:column="30">!=<pos:position pos:line="160" pos:column="32"/></operator> <name pos:line="160" pos:column="33">packetsize<pos:position pos:line="160" pos:column="43"/></name><operator pos:line="160" pos:column="43">)<pos:position pos:line="160" pos:column="44"/></operator></expr>)<pos:position pos:line="160" pos:column="45"/></condition><then pos:line="160" pos:column="45"> <block pos:line="160" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="161" pos:column="7">failf<pos:position pos:line="161" pos:column="12"/></name><argument_list pos:line="161" pos:column="12">(<argument><expr><name pos:line="161" pos:column="13">data<pos:position pos:line="161" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="19">"Failed to receive SOCKS4 connect request ack."<pos:position pos:line="161" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="68"/></expr_stmt>
      <return pos:line="162" pos:column="7">return <expr><name pos:line="162" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="162" pos:column="35"/></name></expr>;<pos:position pos:line="162" pos:column="36"/></return>
    }<pos:position pos:line="163" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="165" pos:column="5">/*
     * Response format
     *
     *     +----+----+----+----+----+----+----+----+
     *     | VN | CD | DSTPORT |      DSTIP        |
     *     +----+----+----+----+----+----+----+----+
     * # of bytes:  1    1      2              4
     *
     * VN is the version of the reply code and should be 0. CD is the result
     * code with one of the following values:
     *
     * 90: request granted
     * 91: request rejected or failed
     * 92: request rejected because SOCKS server cannot connect to
     *     identd on the client
     * 93: request rejected because the client program and identd
     *     report different user-ids
     */</comment>

    <comment type="block" pos:line="184" pos:column="5">/* wrong version ? */</comment>
    <if pos:line="185" pos:column="5">if<condition pos:line="185" pos:column="7">(<expr><name><name pos:line="185" pos:column="8">socksreq<pos:position pos:line="185" pos:column="16"/></name><index pos:line="185" pos:column="16">[<expr><literal type="number" pos:line="185" pos:column="17">0<pos:position pos:line="185" pos:column="18"/></literal></expr>]<pos:position pos:line="185" pos:column="19"/></index></name> <operator pos:line="185" pos:column="20">!=<pos:position pos:line="185" pos:column="22"/></operator> <literal type="number" pos:line="185" pos:column="23">0<pos:position pos:line="185" pos:column="24"/></literal></expr>)<pos:position pos:line="185" pos:column="25"/></condition><then pos:line="185" pos:column="25"> <block pos:line="185" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="186" pos:column="7">failf<pos:position pos:line="186" pos:column="12"/></name><argument_list pos:line="186" pos:column="12">(<argument><expr><name pos:line="186" pos:column="13">data<pos:position pos:line="186" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="187" pos:column="13">"SOCKS4 reply has wrong version, version should be 4."<pos:position pos:line="187" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="69"/></expr_stmt>
      <return pos:line="188" pos:column="7">return <expr><name pos:line="188" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="188" pos:column="35"/></name></expr>;<pos:position pos:line="188" pos:column="36"/></return>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="191" pos:column="5">/* Result */</comment>
    <switch pos:line="192" pos:column="5">switch<condition pos:line="192" pos:column="11">(<expr><name><name pos:line="192" pos:column="12">socksreq<pos:position pos:line="192" pos:column="20"/></name><index pos:line="192" pos:column="20">[<expr><literal type="number" pos:line="192" pos:column="21">1<pos:position pos:line="192" pos:column="22"/></literal></expr>]<pos:position pos:line="192" pos:column="23"/></index></name></expr>)<pos:position pos:line="192" pos:column="24"/></condition> <block pos:line="192" pos:column="25">{
    <case pos:line="193" pos:column="5">case <expr><literal type="number" pos:line="193" pos:column="10">90<pos:position pos:line="193" pos:column="12"/></literal></expr>:<pos:position pos:line="193" pos:column="13"/></case>
      <expr_stmt><expr><call><name pos:line="194" pos:column="7">infof<pos:position pos:line="194" pos:column="12"/></name><argument_list pos:line="194" pos:column="12">(<argument><expr><name pos:line="194" pos:column="13">data<pos:position pos:line="194" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="19">"SOCKS4%s request granted.\n"<pos:position pos:line="194" pos:column="48"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="194" pos:column="50">protocol4a<pos:position pos:line="194" pos:column="60"/></name></expr>?<pos:position pos:line="194" pos:column="61"/></condition><then><expr><literal type="string" pos:line="194" pos:column="61">"a"<pos:position pos:line="194" pos:column="64"/></literal></expr></then><else pos:line="194" pos:column="64">:<expr><literal type="string" pos:line="194" pos:column="65">""<pos:position pos:line="194" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="194" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="69"/></expr_stmt>
      <break pos:line="195" pos:column="7">break;<pos:position pos:line="195" pos:column="13"/></break>
    <case pos:line="196" pos:column="5">case <expr><literal type="number" pos:line="196" pos:column="10">91<pos:position pos:line="196" pos:column="12"/></literal></expr>:<pos:position pos:line="196" pos:column="13"/></case>
      <expr_stmt><expr><call><name pos:line="197" pos:column="7">failf<pos:position pos:line="197" pos:column="12"/></name><argument_list pos:line="197" pos:column="12">(<argument><expr><name pos:line="197" pos:column="13">data<pos:position pos:line="197" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="198" pos:column="13">"Can't complete SOCKS4 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="198" pos:column="71"/></literal>
            <literal type="string" pos:line="199" pos:column="13">", request rejected or failed."<pos:position pos:line="199" pos:column="44"/></literal></expr></argument>,
            <argument><expr><operator pos:line="200" pos:column="13">(<pos:position pos:line="200" pos:column="14"/></operator><name pos:line="200" pos:column="14">unsigned<pos:position pos:line="200" pos:column="22"/></name> <name pos:line="200" pos:column="23">char<pos:position pos:line="200" pos:column="27"/></name><operator pos:line="200" pos:column="27">)<pos:position pos:line="200" pos:column="28"/></operator><name><name pos:line="200" pos:column="28">socksreq<pos:position pos:line="200" pos:column="36"/></name><index pos:line="200" pos:column="36">[<expr><literal type="number" pos:line="200" pos:column="37">4<pos:position pos:line="200" pos:column="38"/></literal></expr>]<pos:position pos:line="200" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="200" pos:column="41">(<pos:position pos:line="200" pos:column="42"/></operator><name pos:line="200" pos:column="42">unsigned<pos:position pos:line="200" pos:column="50"/></name> <name pos:line="200" pos:column="51">char<pos:position pos:line="200" pos:column="55"/></name><operator pos:line="200" pos:column="55">)<pos:position pos:line="200" pos:column="56"/></operator><name><name pos:line="200" pos:column="56">socksreq<pos:position pos:line="200" pos:column="64"/></name><index pos:line="200" pos:column="64">[<expr><literal type="number" pos:line="200" pos:column="65">5<pos:position pos:line="200" pos:column="66"/></literal></expr>]<pos:position pos:line="200" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="201" pos:column="13">(<pos:position pos:line="201" pos:column="14"/></operator><name pos:line="201" pos:column="14">unsigned<pos:position pos:line="201" pos:column="22"/></name> <name pos:line="201" pos:column="23">char<pos:position pos:line="201" pos:column="27"/></name><operator pos:line="201" pos:column="27">)<pos:position pos:line="201" pos:column="28"/></operator><name><name pos:line="201" pos:column="28">socksreq<pos:position pos:line="201" pos:column="36"/></name><index pos:line="201" pos:column="36">[<expr><literal type="number" pos:line="201" pos:column="37">6<pos:position pos:line="201" pos:column="38"/></literal></expr>]<pos:position pos:line="201" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="201" pos:column="41">(<pos:position pos:line="201" pos:column="42"/></operator><name pos:line="201" pos:column="42">unsigned<pos:position pos:line="201" pos:column="50"/></name> <name pos:line="201" pos:column="51">char<pos:position pos:line="201" pos:column="55"/></name><operator pos:line="201" pos:column="55">)<pos:position pos:line="201" pos:column="56"/></operator><name><name pos:line="201" pos:column="56">socksreq<pos:position pos:line="201" pos:column="64"/></name><index pos:line="201" pos:column="64">[<expr><literal type="number" pos:line="201" pos:column="65">7<pos:position pos:line="201" pos:column="66"/></literal></expr>]<pos:position pos:line="201" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="202" pos:column="13">(<pos:position pos:line="202" pos:column="14"/></operator><operator pos:line="202" pos:column="14">(<pos:position pos:line="202" pos:column="15"/></operator><operator pos:line="202" pos:column="15">(<pos:position pos:line="202" pos:column="16"/></operator><name pos:line="202" pos:column="16">unsigned<pos:position pos:line="202" pos:column="24"/></name> <name pos:line="202" pos:column="25">char<pos:position pos:line="202" pos:column="29"/></name><operator pos:line="202" pos:column="29">)<pos:position pos:line="202" pos:column="30"/></operator><name><name pos:line="202" pos:column="30">socksreq<pos:position pos:line="202" pos:column="38"/></name><index pos:line="202" pos:column="38">[<expr><literal type="number" pos:line="202" pos:column="39">2<pos:position pos:line="202" pos:column="40"/></literal></expr>]<pos:position pos:line="202" pos:column="41"/></index></name> <operator pos:line="202" pos:column="42">&lt;&lt;<pos:position pos:line="202" pos:column="50"/></operator> <literal type="number" pos:line="202" pos:column="45">8<pos:position pos:line="202" pos:column="46"/></literal><operator pos:line="202" pos:column="46">)<pos:position pos:line="202" pos:column="47"/></operator> <operator pos:line="202" pos:column="48">|<pos:position pos:line="202" pos:column="49"/></operator> <operator pos:line="202" pos:column="50">(<pos:position pos:line="202" pos:column="51"/></operator><name pos:line="202" pos:column="51">unsigned<pos:position pos:line="202" pos:column="59"/></name> <name pos:line="202" pos:column="60">char<pos:position pos:line="202" pos:column="64"/></name><operator pos:line="202" pos:column="64">)<pos:position pos:line="202" pos:column="65"/></operator><name><name pos:line="202" pos:column="65">socksreq<pos:position pos:line="202" pos:column="73"/></name><index pos:line="202" pos:column="73">[<expr><literal type="number" pos:line="202" pos:column="74">3<pos:position pos:line="202" pos:column="75"/></literal></expr>]<pos:position pos:line="202" pos:column="76"/></index></name><operator pos:line="202" pos:column="76">)<pos:position pos:line="202" pos:column="77"/></operator></expr></argument>,
            <argument><expr><operator pos:line="203" pos:column="13">(<pos:position pos:line="203" pos:column="14"/></operator><name pos:line="203" pos:column="14">unsigned<pos:position pos:line="203" pos:column="22"/></name> <name pos:line="203" pos:column="23">char<pos:position pos:line="203" pos:column="27"/></name><operator pos:line="203" pos:column="27">)<pos:position pos:line="203" pos:column="28"/></operator><name><name pos:line="203" pos:column="28">socksreq<pos:position pos:line="203" pos:column="36"/></name><index pos:line="203" pos:column="36">[<expr><literal type="number" pos:line="203" pos:column="37">1<pos:position pos:line="203" pos:column="38"/></literal></expr>]<pos:position pos:line="203" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="203" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="41"/></expr_stmt>
      <return pos:line="204" pos:column="7">return <expr><name pos:line="204" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="204" pos:column="35"/></name></expr>;<pos:position pos:line="204" pos:column="36"/></return>
    <case pos:line="205" pos:column="5">case <expr><literal type="number" pos:line="205" pos:column="10">92<pos:position pos:line="205" pos:column="12"/></literal></expr>:<pos:position pos:line="205" pos:column="13"/></case>
      <expr_stmt><expr><call><name pos:line="206" pos:column="7">failf<pos:position pos:line="206" pos:column="12"/></name><argument_list pos:line="206" pos:column="12">(<argument><expr><name pos:line="206" pos:column="13">data<pos:position pos:line="206" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="207" pos:column="13">"Can't complete SOCKS4 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="207" pos:column="71"/></literal>
            <literal type="string" pos:line="208" pos:column="13">", request rejected because SOCKS server cannot connect to "<pos:position pos:line="208" pos:column="73"/></literal>
            <literal type="string" pos:line="209" pos:column="13">"identd on the client."<pos:position pos:line="209" pos:column="36"/></literal></expr></argument>,
            <argument><expr><operator pos:line="210" pos:column="13">(<pos:position pos:line="210" pos:column="14"/></operator><name pos:line="210" pos:column="14">unsigned<pos:position pos:line="210" pos:column="22"/></name> <name pos:line="210" pos:column="23">char<pos:position pos:line="210" pos:column="27"/></name><operator pos:line="210" pos:column="27">)<pos:position pos:line="210" pos:column="28"/></operator><name><name pos:line="210" pos:column="28">socksreq<pos:position pos:line="210" pos:column="36"/></name><index pos:line="210" pos:column="36">[<expr><literal type="number" pos:line="210" pos:column="37">4<pos:position pos:line="210" pos:column="38"/></literal></expr>]<pos:position pos:line="210" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="41">(<pos:position pos:line="210" pos:column="42"/></operator><name pos:line="210" pos:column="42">unsigned<pos:position pos:line="210" pos:column="50"/></name> <name pos:line="210" pos:column="51">char<pos:position pos:line="210" pos:column="55"/></name><operator pos:line="210" pos:column="55">)<pos:position pos:line="210" pos:column="56"/></operator><name><name pos:line="210" pos:column="56">socksreq<pos:position pos:line="210" pos:column="64"/></name><index pos:line="210" pos:column="64">[<expr><literal type="number" pos:line="210" pos:column="65">5<pos:position pos:line="210" pos:column="66"/></literal></expr>]<pos:position pos:line="210" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="211" pos:column="13">(<pos:position pos:line="211" pos:column="14"/></operator><name pos:line="211" pos:column="14">unsigned<pos:position pos:line="211" pos:column="22"/></name> <name pos:line="211" pos:column="23">char<pos:position pos:line="211" pos:column="27"/></name><operator pos:line="211" pos:column="27">)<pos:position pos:line="211" pos:column="28"/></operator><name><name pos:line="211" pos:column="28">socksreq<pos:position pos:line="211" pos:column="36"/></name><index pos:line="211" pos:column="36">[<expr><literal type="number" pos:line="211" pos:column="37">6<pos:position pos:line="211" pos:column="38"/></literal></expr>]<pos:position pos:line="211" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="211" pos:column="41">(<pos:position pos:line="211" pos:column="42"/></operator><name pos:line="211" pos:column="42">unsigned<pos:position pos:line="211" pos:column="50"/></name> <name pos:line="211" pos:column="51">char<pos:position pos:line="211" pos:column="55"/></name><operator pos:line="211" pos:column="55">)<pos:position pos:line="211" pos:column="56"/></operator><name><name pos:line="211" pos:column="56">socksreq<pos:position pos:line="211" pos:column="64"/></name><index pos:line="211" pos:column="64">[<expr><literal type="number" pos:line="211" pos:column="65">7<pos:position pos:line="211" pos:column="66"/></literal></expr>]<pos:position pos:line="211" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="212" pos:column="13">(<pos:position pos:line="212" pos:column="14"/></operator><operator pos:line="212" pos:column="14">(<pos:position pos:line="212" pos:column="15"/></operator><operator pos:line="212" pos:column="15">(<pos:position pos:line="212" pos:column="16"/></operator><name pos:line="212" pos:column="16">unsigned<pos:position pos:line="212" pos:column="24"/></name> <name pos:line="212" pos:column="25">char<pos:position pos:line="212" pos:column="29"/></name><operator pos:line="212" pos:column="29">)<pos:position pos:line="212" pos:column="30"/></operator><name><name pos:line="212" pos:column="30">socksreq<pos:position pos:line="212" pos:column="38"/></name><index pos:line="212" pos:column="38">[<expr><literal type="number" pos:line="212" pos:column="39">2<pos:position pos:line="212" pos:column="40"/></literal></expr>]<pos:position pos:line="212" pos:column="41"/></index></name> <operator pos:line="212" pos:column="42">&lt;&lt;<pos:position pos:line="212" pos:column="50"/></operator> <literal type="number" pos:line="212" pos:column="45">8<pos:position pos:line="212" pos:column="46"/></literal><operator pos:line="212" pos:column="46">)<pos:position pos:line="212" pos:column="47"/></operator> <operator pos:line="212" pos:column="48">|<pos:position pos:line="212" pos:column="49"/></operator> <operator pos:line="212" pos:column="50">(<pos:position pos:line="212" pos:column="51"/></operator><name pos:line="212" pos:column="51">unsigned<pos:position pos:line="212" pos:column="59"/></name> <name pos:line="212" pos:column="60">char<pos:position pos:line="212" pos:column="64"/></name><operator pos:line="212" pos:column="64">)<pos:position pos:line="212" pos:column="65"/></operator><name><name pos:line="212" pos:column="65">socksreq<pos:position pos:line="212" pos:column="73"/></name><index pos:line="212" pos:column="73">[<expr><literal type="number" pos:line="212" pos:column="74">3<pos:position pos:line="212" pos:column="75"/></literal></expr>]<pos:position pos:line="212" pos:column="76"/></index></name><operator pos:line="212" pos:column="76">)<pos:position pos:line="212" pos:column="77"/></operator></expr></argument>,
            <argument><expr><operator pos:line="213" pos:column="13">(<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="14">unsigned<pos:position pos:line="213" pos:column="22"/></name> <name pos:line="213" pos:column="23">char<pos:position pos:line="213" pos:column="27"/></name><operator pos:line="213" pos:column="27">)<pos:position pos:line="213" pos:column="28"/></operator><name><name pos:line="213" pos:column="28">socksreq<pos:position pos:line="213" pos:column="36"/></name><index pos:line="213" pos:column="36">[<expr><literal type="number" pos:line="213" pos:column="37">1<pos:position pos:line="213" pos:column="38"/></literal></expr>]<pos:position pos:line="213" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="213" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="41"/></expr_stmt>
      <return pos:line="214" pos:column="7">return <expr><name pos:line="214" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="214" pos:column="35"/></name></expr>;<pos:position pos:line="214" pos:column="36"/></return>
    <case pos:line="215" pos:column="5">case <expr><literal type="number" pos:line="215" pos:column="10">93<pos:position pos:line="215" pos:column="12"/></literal></expr>:<pos:position pos:line="215" pos:column="13"/></case>
      <expr_stmt><expr><call><name pos:line="216" pos:column="7">failf<pos:position pos:line="216" pos:column="12"/></name><argument_list pos:line="216" pos:column="12">(<argument><expr><name pos:line="216" pos:column="13">data<pos:position pos:line="216" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="217" pos:column="13">"Can't complete SOCKS4 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="217" pos:column="71"/></literal>
            <literal type="string" pos:line="218" pos:column="13">", request rejected because the client program and identd "<pos:position pos:line="218" pos:column="72"/></literal>
            <literal type="string" pos:line="219" pos:column="13">"report different user-ids."<pos:position pos:line="219" pos:column="41"/></literal></expr></argument>,
            <argument><expr><operator pos:line="220" pos:column="13">(<pos:position pos:line="220" pos:column="14"/></operator><name pos:line="220" pos:column="14">unsigned<pos:position pos:line="220" pos:column="22"/></name> <name pos:line="220" pos:column="23">char<pos:position pos:line="220" pos:column="27"/></name><operator pos:line="220" pos:column="27">)<pos:position pos:line="220" pos:column="28"/></operator><name><name pos:line="220" pos:column="28">socksreq<pos:position pos:line="220" pos:column="36"/></name><index pos:line="220" pos:column="36">[<expr><literal type="number" pos:line="220" pos:column="37">4<pos:position pos:line="220" pos:column="38"/></literal></expr>]<pos:position pos:line="220" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="220" pos:column="41">(<pos:position pos:line="220" pos:column="42"/></operator><name pos:line="220" pos:column="42">unsigned<pos:position pos:line="220" pos:column="50"/></name> <name pos:line="220" pos:column="51">char<pos:position pos:line="220" pos:column="55"/></name><operator pos:line="220" pos:column="55">)<pos:position pos:line="220" pos:column="56"/></operator><name><name pos:line="220" pos:column="56">socksreq<pos:position pos:line="220" pos:column="64"/></name><index pos:line="220" pos:column="64">[<expr><literal type="number" pos:line="220" pos:column="65">5<pos:position pos:line="220" pos:column="66"/></literal></expr>]<pos:position pos:line="220" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="221" pos:column="13">(<pos:position pos:line="221" pos:column="14"/></operator><name pos:line="221" pos:column="14">unsigned<pos:position pos:line="221" pos:column="22"/></name> <name pos:line="221" pos:column="23">char<pos:position pos:line="221" pos:column="27"/></name><operator pos:line="221" pos:column="27">)<pos:position pos:line="221" pos:column="28"/></operator><name><name pos:line="221" pos:column="28">socksreq<pos:position pos:line="221" pos:column="36"/></name><index pos:line="221" pos:column="36">[<expr><literal type="number" pos:line="221" pos:column="37">6<pos:position pos:line="221" pos:column="38"/></literal></expr>]<pos:position pos:line="221" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="221" pos:column="41">(<pos:position pos:line="221" pos:column="42"/></operator><name pos:line="221" pos:column="42">unsigned<pos:position pos:line="221" pos:column="50"/></name> <name pos:line="221" pos:column="51">char<pos:position pos:line="221" pos:column="55"/></name><operator pos:line="221" pos:column="55">)<pos:position pos:line="221" pos:column="56"/></operator><name><name pos:line="221" pos:column="56">socksreq<pos:position pos:line="221" pos:column="64"/></name><index pos:line="221" pos:column="64">[<expr><literal type="number" pos:line="221" pos:column="65">7<pos:position pos:line="221" pos:column="66"/></literal></expr>]<pos:position pos:line="221" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="222" pos:column="13">(<pos:position pos:line="222" pos:column="14"/></operator><operator pos:line="222" pos:column="14">(<pos:position pos:line="222" pos:column="15"/></operator><operator pos:line="222" pos:column="15">(<pos:position pos:line="222" pos:column="16"/></operator><name pos:line="222" pos:column="16">unsigned<pos:position pos:line="222" pos:column="24"/></name> <name pos:line="222" pos:column="25">char<pos:position pos:line="222" pos:column="29"/></name><operator pos:line="222" pos:column="29">)<pos:position pos:line="222" pos:column="30"/></operator><name><name pos:line="222" pos:column="30">socksreq<pos:position pos:line="222" pos:column="38"/></name><index pos:line="222" pos:column="38">[<expr><literal type="number" pos:line="222" pos:column="39">2<pos:position pos:line="222" pos:column="40"/></literal></expr>]<pos:position pos:line="222" pos:column="41"/></index></name> <operator pos:line="222" pos:column="42">&lt;&lt;<pos:position pos:line="222" pos:column="50"/></operator> <literal type="number" pos:line="222" pos:column="45">8<pos:position pos:line="222" pos:column="46"/></literal><operator pos:line="222" pos:column="46">)<pos:position pos:line="222" pos:column="47"/></operator> <operator pos:line="222" pos:column="48">|<pos:position pos:line="222" pos:column="49"/></operator> <operator pos:line="222" pos:column="50">(<pos:position pos:line="222" pos:column="51"/></operator><name pos:line="222" pos:column="51">unsigned<pos:position pos:line="222" pos:column="59"/></name> <name pos:line="222" pos:column="60">char<pos:position pos:line="222" pos:column="64"/></name><operator pos:line="222" pos:column="64">)<pos:position pos:line="222" pos:column="65"/></operator><name><name pos:line="222" pos:column="65">socksreq<pos:position pos:line="222" pos:column="73"/></name><index pos:line="222" pos:column="73">[<expr><literal type="number" pos:line="222" pos:column="74">3<pos:position pos:line="222" pos:column="75"/></literal></expr>]<pos:position pos:line="222" pos:column="76"/></index></name><operator pos:line="222" pos:column="76">)<pos:position pos:line="222" pos:column="77"/></operator></expr></argument>,
            <argument><expr><operator pos:line="223" pos:column="13">(<pos:position pos:line="223" pos:column="14"/></operator><name pos:line="223" pos:column="14">unsigned<pos:position pos:line="223" pos:column="22"/></name> <name pos:line="223" pos:column="23">char<pos:position pos:line="223" pos:column="27"/></name><operator pos:line="223" pos:column="27">)<pos:position pos:line="223" pos:column="28"/></operator><name><name pos:line="223" pos:column="28">socksreq<pos:position pos:line="223" pos:column="36"/></name><index pos:line="223" pos:column="36">[<expr><literal type="number" pos:line="223" pos:column="37">1<pos:position pos:line="223" pos:column="38"/></literal></expr>]<pos:position pos:line="223" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="223" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="41"/></expr_stmt>
      <return pos:line="224" pos:column="7">return <expr><name pos:line="224" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="224" pos:column="35"/></name></expr>;<pos:position pos:line="224" pos:column="36"/></return>
    <default pos:line="225" pos:column="5">default:<pos:position pos:line="225" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="226" pos:column="7">failf<pos:position pos:line="226" pos:column="12"/></name><argument_list pos:line="226" pos:column="12">(<argument><expr><name pos:line="226" pos:column="13">data<pos:position pos:line="226" pos:column="17"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="227" pos:column="13">"Can't complete SOCKS4 connection to %d.%d.%d.%d:%d. (%d)"<pos:position pos:line="227" pos:column="71"/></literal>
            <literal type="string" pos:line="228" pos:column="13">", Unknown."<pos:position pos:line="228" pos:column="25"/></literal></expr></argument>,
            <argument><expr><operator pos:line="229" pos:column="13">(<pos:position pos:line="229" pos:column="14"/></operator><name pos:line="229" pos:column="14">unsigned<pos:position pos:line="229" pos:column="22"/></name> <name pos:line="229" pos:column="23">char<pos:position pos:line="229" pos:column="27"/></name><operator pos:line="229" pos:column="27">)<pos:position pos:line="229" pos:column="28"/></operator><name><name pos:line="229" pos:column="28">socksreq<pos:position pos:line="229" pos:column="36"/></name><index pos:line="229" pos:column="36">[<expr><literal type="number" pos:line="229" pos:column="37">4<pos:position pos:line="229" pos:column="38"/></literal></expr>]<pos:position pos:line="229" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="229" pos:column="41">(<pos:position pos:line="229" pos:column="42"/></operator><name pos:line="229" pos:column="42">unsigned<pos:position pos:line="229" pos:column="50"/></name> <name pos:line="229" pos:column="51">char<pos:position pos:line="229" pos:column="55"/></name><operator pos:line="229" pos:column="55">)<pos:position pos:line="229" pos:column="56"/></operator><name><name pos:line="229" pos:column="56">socksreq<pos:position pos:line="229" pos:column="64"/></name><index pos:line="229" pos:column="64">[<expr><literal type="number" pos:line="229" pos:column="65">5<pos:position pos:line="229" pos:column="66"/></literal></expr>]<pos:position pos:line="229" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="230" pos:column="13">(<pos:position pos:line="230" pos:column="14"/></operator><name pos:line="230" pos:column="14">unsigned<pos:position pos:line="230" pos:column="22"/></name> <name pos:line="230" pos:column="23">char<pos:position pos:line="230" pos:column="27"/></name><operator pos:line="230" pos:column="27">)<pos:position pos:line="230" pos:column="28"/></operator><name><name pos:line="230" pos:column="28">socksreq<pos:position pos:line="230" pos:column="36"/></name><index pos:line="230" pos:column="36">[<expr><literal type="number" pos:line="230" pos:column="37">6<pos:position pos:line="230" pos:column="38"/></literal></expr>]<pos:position pos:line="230" pos:column="39"/></index></name></expr></argument>, <argument><expr><operator pos:line="230" pos:column="41">(<pos:position pos:line="230" pos:column="42"/></operator><name pos:line="230" pos:column="42">unsigned<pos:position pos:line="230" pos:column="50"/></name> <name pos:line="230" pos:column="51">char<pos:position pos:line="230" pos:column="55"/></name><operator pos:line="230" pos:column="55">)<pos:position pos:line="230" pos:column="56"/></operator><name><name pos:line="230" pos:column="56">socksreq<pos:position pos:line="230" pos:column="64"/></name><index pos:line="230" pos:column="64">[<expr><literal type="number" pos:line="230" pos:column="65">7<pos:position pos:line="230" pos:column="66"/></literal></expr>]<pos:position pos:line="230" pos:column="67"/></index></name></expr></argument>,
            <argument><expr><operator pos:line="231" pos:column="13">(<pos:position pos:line="231" pos:column="14"/></operator><operator pos:line="231" pos:column="14">(<pos:position pos:line="231" pos:column="15"/></operator><operator pos:line="231" pos:column="15">(<pos:position pos:line="231" pos:column="16"/></operator><name pos:line="231" pos:column="16">unsigned<pos:position pos:line="231" pos:column="24"/></name> <name pos:line="231" pos:column="25">char<pos:position pos:line="231" pos:column="29"/></name><operator pos:line="231" pos:column="29">)<pos:position pos:line="231" pos:column="30"/></operator><name><name pos:line="231" pos:column="30">socksreq<pos:position pos:line="231" pos:column="38"/></name><index pos:line="231" pos:column="38">[<expr><literal type="number" pos:line="231" pos:column="39">2<pos:position pos:line="231" pos:column="40"/></literal></expr>]<pos:position pos:line="231" pos:column="41"/></index></name> <operator pos:line="231" pos:column="42">&lt;&lt;<pos:position pos:line="231" pos:column="50"/></operator> <literal type="number" pos:line="231" pos:column="45">8<pos:position pos:line="231" pos:column="46"/></literal><operator pos:line="231" pos:column="46">)<pos:position pos:line="231" pos:column="47"/></operator> <operator pos:line="231" pos:column="48">|<pos:position pos:line="231" pos:column="49"/></operator> <operator pos:line="231" pos:column="50">(<pos:position pos:line="231" pos:column="51"/></operator><name pos:line="231" pos:column="51">unsigned<pos:position pos:line="231" pos:column="59"/></name> <name pos:line="231" pos:column="60">char<pos:position pos:line="231" pos:column="64"/></name><operator pos:line="231" pos:column="64">)<pos:position pos:line="231" pos:column="65"/></operator><name><name pos:line="231" pos:column="65">socksreq<pos:position pos:line="231" pos:column="73"/></name><index pos:line="231" pos:column="73">[<expr><literal type="number" pos:line="231" pos:column="74">3<pos:position pos:line="231" pos:column="75"/></literal></expr>]<pos:position pos:line="231" pos:column="76"/></index></name><operator pos:line="231" pos:column="76">)<pos:position pos:line="231" pos:column="77"/></operator></expr></argument>,
            <argument><expr><operator pos:line="232" pos:column="13">(<pos:position pos:line="232" pos:column="14"/></operator><name pos:line="232" pos:column="14">unsigned<pos:position pos:line="232" pos:column="22"/></name> <name pos:line="232" pos:column="23">char<pos:position pos:line="232" pos:column="27"/></name><operator pos:line="232" pos:column="27">)<pos:position pos:line="232" pos:column="28"/></operator><name><name pos:line="232" pos:column="28">socksreq<pos:position pos:line="232" pos:column="36"/></name><index pos:line="232" pos:column="36">[<expr><literal type="number" pos:line="232" pos:column="37">1<pos:position pos:line="232" pos:column="38"/></literal></expr>]<pos:position pos:line="232" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="232" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="41"/></expr_stmt>
      <return pos:line="233" pos:column="7">return <expr><name pos:line="233" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="233" pos:column="35"/></name></expr>;<pos:position pos:line="233" pos:column="36"/></return>
    }<pos:position pos:line="234" pos:column="6"/></block></switch>
  }<pos:position pos:line="235" pos:column="4"/></block>

  <expr_stmt><expr><operator pos:line="237" pos:column="3">(<pos:position pos:line="237" pos:column="4"/></operator><name pos:line="237" pos:column="4">void<pos:position pos:line="237" pos:column="8"/></name><operator pos:line="237" pos:column="8">)<pos:position pos:line="237" pos:column="9"/></operator><call><name pos:line="237" pos:column="9">curlx_nonblock<pos:position pos:line="237" pos:column="23"/></name><argument_list pos:line="237" pos:column="23">(<argument><expr><name pos:line="237" pos:column="24">sock<pos:position pos:line="237" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="30">TRUE<pos:position pos:line="237" pos:column="34"/></name></expr></argument>)<pos:position pos:line="237" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="36"/></expr_stmt>

  <return pos:line="239" pos:column="3">return <expr><name pos:line="239" pos:column="10">CURLE_OK<pos:position pos:line="239" pos:column="18"/></name></expr>;<pos:position pos:line="239" pos:column="19"/></return> <comment type="block" pos:line="239" pos:column="20">/* Proxy was successful! */</comment>
}<pos:position pos:line="240" pos:column="2"/></block></function></unit>

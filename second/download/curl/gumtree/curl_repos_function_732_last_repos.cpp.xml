<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_732_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">logmsg<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><specifier pos:line="1" pos:column="13">const<pos:position pos:line="1" pos:column="18"/></specifier> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">msg<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="30">...<pos:position pos:line="1" pos:column="33"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">va_list<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ap<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">2048<pos:position pos:line="4" pos:column="19"/></literal> <operator pos:line="4" pos:column="20">+<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="22">1<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">logfp<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">error<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curltime<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">tv<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">time_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">sec<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">tm<pos:position pos:line="9" pos:column="12"/></name></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">now<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">timebuf<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><literal type="number" pos:line="10" pos:column="16">20<pos:position pos:line="10" pos:column="18"/></literal></expr>]<pos:position pos:line="10" pos:column="19"/></index></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><name pos:line="11" pos:column="10">time_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">epoch_offset<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="12" pos:column="3">static<pos:position pos:line="12" pos:column="9"/></specifier> <type><name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type>    <name pos:line="12" pos:column="17">known_offset<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">serverlogfile<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fprintf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">stderr<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="21">"Error: serverlogfile not set\n"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <return pos:line="16" pos:column="5">return;<pos:position pos:line="16" pos:column="12"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">tv<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <call><name pos:line="19" pos:column="8">curlx_tvnow<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">()<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">known_offset<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">epoch_offset<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">time<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call> <operator pos:line="21" pos:column="31">-<pos:position pos:line="21" pos:column="32"/></operator> <name><name pos:line="21" pos:column="33">tv<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">tv_sec<pos:position pos:line="21" pos:column="42"/></name></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">known_offset<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="20">1<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="24" pos:column="3">sec<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <name pos:line="24" pos:column="9">epoch_offset<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">+<pos:position pos:line="24" pos:column="23"/></operator> <name><name pos:line="24" pos:column="24">tv<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">tv_sec<pos:position pos:line="24" pos:column="33"/></name></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">now<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">localtime<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><operator pos:line="25" pos:column="19">&amp;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="20">sec<pos:position pos:line="25" pos:column="23"/></name></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt> <comment type="block" pos:line="25" pos:column="26">/* not thread safe but we don't care */</comment>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">snprintf<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">timebuf<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="21">sizeof<argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">timebuf<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="38">"%02d:%02d:%02d.%06ld"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>,
    <argument><expr><operator pos:line="28" pos:column="5">(<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">int<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">)<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">now<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">tm_hour<pos:position pos:line="28" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">int<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">)<pos:position pos:line="28" pos:column="29"/></operator><name><name pos:line="28" pos:column="29">now<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">tm_min<pos:position pos:line="28" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">(<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">int<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator><name><name pos:line="28" pos:column="47">now<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">tm_sec<pos:position pos:line="28" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="60">(<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="61">long<pos:position pos:line="28" pos:column="65"/></name><operator pos:line="28" pos:column="65">)<pos:position pos:line="28" pos:column="66"/></operator><name><name pos:line="28" pos:column="66">tv<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">.<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="69">tv_usec<pos:position pos:line="28" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="78"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">va_start<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">ap<pos:position pos:line="30" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="16">msg<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">vsnprintf<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">buffer<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="21">sizeof<argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">buffer<pos:position pos:line="31" pos:column="34"/></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">msg<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">ap<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">va_end<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name pos:line="32" pos:column="10">ap<pos:position pos:line="32" pos:column="12"/></name></expr></argument>)<pos:position pos:line="32" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name pos:line="34" pos:column="3">logfp<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">fopen<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">serverlogfile<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"ab"<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">logfp<pos:position pos:line="35" pos:column="11"/></name></expr>)<pos:position pos:line="35" pos:column="12"/></condition><then pos:line="35" pos:column="12"> <block pos:line="35" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fprintf<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">logfp<pos:position pos:line="36" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="20">"%s %s\n"<pos:position pos:line="36" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">timebuf<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">buffer<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">fclose<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">logfp<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then>
  <else pos:line="39" pos:column="3">else <block pos:line="39" pos:column="8">{
    <expr_stmt><expr><name pos:line="40" pos:column="5">error<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <name pos:line="40" pos:column="13">errno<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fprintf<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">stderr<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"fopen() failed with error: %d %s\n"<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name pos:line="42" pos:column="13">error<pos:position pos:line="42" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="20">strerror<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">error<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">fprintf<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">stderr<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="21">"Error opening file: %s\n"<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">serverlogfile<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fprintf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">stderr<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"Msg not logged: %s %s\n"<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">timebuf<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="57">buffer<pos:position pos:line="44" pos:column="63"/></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></else></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

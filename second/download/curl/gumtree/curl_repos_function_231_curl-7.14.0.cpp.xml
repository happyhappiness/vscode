<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_231_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_is_resolved<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">Curl_dns_entry<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">entry<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><operator pos:line="4" pos:column="3">*<pos:position pos:line="4" pos:column="4"/></operator><name pos:line="4" pos:column="4">entry<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">=<pos:position pos:line="4" pos:column="11"/></operator> <name pos:line="4" pos:column="12">NULL<pos:position pos:line="4" pos:column="16"/></name></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">conn<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">async<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">done<pos:position pos:line="6" pos:column="23"/></name></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
    <comment type="block" pos:line="7" pos:column="5">/* we're done */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Curl_destroy_thread_data<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">&amp;<pos:position pos:line="8" pos:column="35"/></operator><name><name pos:line="8" pos:column="31">conn<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">async<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">conn<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">async<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">dns<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">TRACE<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><literal type="string" pos:line="10" pos:column="14">"Curl_is_resolved(): CURLE_COULDNT_RESOLVE_HOST\n"<pos:position pos:line="10" pos:column="64"/></literal><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><name pos:line="11" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">entry<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name><name pos:line="13" pos:column="14">conn<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">async<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">dns<pos:position pos:line="13" pos:column="29"/></name></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">TRACE<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><literal type="string" pos:line="14" pos:column="12">"resolved okay, dns %p\n"<pos:position pos:line="14" pos:column="37"/></literal><operator pos:line="14" pos:column="37">,<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">entry<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">CURLE_OK<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

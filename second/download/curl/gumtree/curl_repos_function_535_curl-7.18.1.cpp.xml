<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_535_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ssh_connect<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">bool<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">done<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="3" pos:column="26"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">curl_socket_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">sock<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ssh_conn<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ssh<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">SessionHandle<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name><name pos:line="8" pos:column="32">conn<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">data<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* We default to persistent connections. We set this already in this connect
     function to make the re-use checks properly be able to check this bit. */</comment>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">conn<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">bits<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">close<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">FALSE<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* If there already is a protocol-specific struct allocated for this
     sessionhandle, deal with it */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">Curl_reset_reqproto<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">conn<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="18" pos:column="3">result<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">ssh_init<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">conn<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">result<pos:position pos:line="19" pos:column="12"/></name></expr>)<pos:position pos:line="19" pos:column="13"/></condition><then pos:line="19" pos:column="13">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">result<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">ssh<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <operator pos:line="22" pos:column="9">&amp;<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="10">conn<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">proto<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">sshc<pos:position pos:line="22" pos:column="26"/></name></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="24" pos:column="26"/></name></cpp:ifdef>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name><name pos:line="25" pos:column="6">conn<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">user<pos:position pos:line="25" pos:column="16"/></name></name></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17"> <block pos:line="25" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">infof<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">data<pos:position pos:line="26" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="17">"User: %s\n"<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="31">conn<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">user<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name><name pos:line="28" pos:column="6">conn<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">passwd<pos:position pos:line="28" pos:column="18"/></name></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">infof<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">data<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="17">"Password: %s\n"<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="35">conn<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">passwd<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="31" pos:column="3">sock<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <name><name pos:line="31" pos:column="10">conn<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">sock<pos:position pos:line="31" pos:column="20"/></name><index pos:line="31" pos:column="20">[<expr><name pos:line="31" pos:column="21">FIRSTSOCKET<pos:position pos:line="31" pos:column="32"/></name></expr>]<pos:position pos:line="31" pos:column="33"/></index></name></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* CURL_LIBSSH2_DEBUG */</comment>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">ssh<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">ssh_session<pos:position pos:line="34" pos:column="19"/></name></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">libssh2_session_init_ex<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">libssh2_malloc<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">libssh2_free<pos:position pos:line="34" pos:column="74"/></name></expr></argument>,
                                             <argument><expr><name pos:line="35" pos:column="46">libssh2_realloc<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">conn<pos:position pos:line="35" pos:column="67"/></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name><name pos:line="36" pos:column="6">ssh<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">ssh_session<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">failf<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="17">"Failure initialising ssh session"<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">CURLE_FAILED_INIT<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="41" pos:column="26"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">libssh2_trace<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name><name pos:line="42" pos:column="17">ssh<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">ssh_session<pos:position pos:line="42" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">LIBSSH2_TRACE_CONN<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">|<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">LIBSSH2_TRACE_TRANS<pos:position pos:line="42" pos:column="73"/></name><operator pos:line="42" pos:column="73">|<pos:position pos:line="42" pos:column="74"/></operator>
                <name pos:line="43" pos:column="17">LIBSSH2_TRACE_KEX<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">|<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">LIBSSH2_TRACE_AUTH<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">|<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="54">LIBSSH2_TRACE_SCP<pos:position pos:line="43" pos:column="71"/></name><operator pos:line="43" pos:column="71">|<pos:position pos:line="43" pos:column="72"/></operator>
                <name pos:line="44" pos:column="17">LIBSSH2_TRACE_SFTP<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">|<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">LIBSSH2_TRACE_ERROR<pos:position pos:line="44" pos:column="55"/></name><operator pos:line="44" pos:column="55">|<pos:position pos:line="44" pos:column="56"/></operator>
                <name pos:line="45" pos:column="17">LIBSSH2_TRACE_PUBLICKEY<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">infof<pos:position pos:line="46" pos:column="8"/></name><argument_list pos:line="46" pos:column="8">(<argument><expr><name pos:line="46" pos:column="9">data<pos:position pos:line="46" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="15">"SSH socket: %d\n"<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="35">sock<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="47" pos:column="8">/* CURL_LIBSSH2_DEBUG */</comment>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">state<pos:position pos:line="49" pos:column="8"/></name><argument_list pos:line="49" pos:column="8">(<argument><expr><name pos:line="49" pos:column="9">conn<pos:position pos:line="49" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="15">SSH_S_STARTUP<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><name><name pos:line="51" pos:column="6">data<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">state<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">used_interface<pos:position pos:line="51" pos:column="32"/></name></name> <operator pos:line="51" pos:column="33">==<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="36">Curl_if_multi<pos:position pos:line="51" pos:column="49"/></name></expr>)<pos:position pos:line="51" pos:column="50"/></condition><then pos:line="51" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="5">result<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">ssh_multi_statemach<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">conn<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">done<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt></block></then>
  <else pos:line="53" pos:column="3">else <block pos:line="53" pos:column="8">{
    <expr_stmt><expr><name pos:line="54" pos:column="5">result<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">ssh_easy_statemach<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">conn<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">result<pos:position pos:line="55" pos:column="15"/></name></expr>)<pos:position pos:line="55" pos:column="16"/></condition><then pos:line="55" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="56" pos:column="7">*<pos:position pos:line="56" pos:column="8"/></operator><name pos:line="56" pos:column="8">done<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">TRUE<pos:position pos:line="56" pos:column="19"/></name></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></else></if>

  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">result<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

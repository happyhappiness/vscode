<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_408_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">handle<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">duphandle<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLM<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">mhandle<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">res<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">still_running<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">start_test_timing<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">global_init<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">CURL_GLOBAL_ALL<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">easy_init<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">handle<pos:position pos:line="13" pos:column="19"/></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">easy_setopt<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">handle<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">CURLOPT_URL<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">URL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">easy_setopt<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">handle<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">CURLOPT_WILDCARDMATCH<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="46">1L<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">easy_setopt<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name pos:line="17" pos:column="15">handle<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">CURLOPT_VERBOSE<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="40">1L<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">res<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">curl_easy_perform<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">handle<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">res<pos:position pos:line="20" pos:column="9"/></name></expr>)<pos:position pos:line="20" pos:column="10"/></condition><then pos:line="20" pos:column="10">
    <block type="pseudo"><goto pos:line="21" pos:column="5">goto <name pos:line="21" pos:column="10">test_cleanup<pos:position pos:line="21" pos:column="22"/></name>;<pos:position pos:line="21" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="23" pos:column="3">res<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">curl_easy_perform<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">handle<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">res<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10">
    <block type="pseudo"><goto pos:line="25" pos:column="5">goto <name pos:line="25" pos:column="10">test_cleanup<pos:position pos:line="25" pos:column="22"/></name>;<pos:position pos:line="25" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">duphandle<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">curl_easy_duphandle<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">handle<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">duphandle<pos:position pos:line="28" pos:column="16"/></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17">
    <block type="pseudo"><goto pos:line="29" pos:column="5">goto <name pos:line="29" pos:column="10">test_cleanup<pos:position pos:line="29" pos:column="22"/></name>;<pos:position pos:line="29" pos:column="23"/></goto></block></then></if>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">curl_easy_cleanup<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">handle<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="31" pos:column="3">handle<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">duphandle<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">multi_init<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">mhandle<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">multi_add_handle<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">mhandle<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">handle<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">multi_perform<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">mhandle<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="26">&amp;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="27">still_running<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">abort_on_test_timeout<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">()<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>

  <while pos:line="41" pos:column="3">while<condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">still_running<pos:position pos:line="41" pos:column="22"/></name></expr>)<pos:position pos:line="41" pos:column="23"/></condition> <block pos:line="41" pos:column="24">{
    <decl_stmt><decl><type><name><name pos:line="42" pos:column="5">struct<pos:position pos:line="42" pos:column="11"/></name> <name pos:line="42" pos:column="12">timeval<pos:position pos:line="42" pos:column="19"/></name></name></type> <name pos:line="42" pos:column="20">timeout<pos:position pos:line="42" pos:column="27"/></name></decl>;<pos:position pos:line="42" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">fd_set<pos:position pos:line="43" pos:column="11"/></name></type> <name pos:line="43" pos:column="12">fdread<pos:position pos:line="43" pos:column="18"/></name></decl>;<pos:position pos:line="43" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">fd_set<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">fdwrite<pos:position pos:line="44" pos:column="19"/></name></decl>;<pos:position pos:line="44" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">fd_set<pos:position pos:line="45" pos:column="11"/></name></type> <name pos:line="45" pos:column="12">fdexcep<pos:position pos:line="45" pos:column="19"/></name></decl>;<pos:position pos:line="45" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">int<pos:position pos:line="46" pos:column="8"/></name></type> <name pos:line="46" pos:column="9">maxfd<pos:position pos:line="46" pos:column="14"/></name> <init pos:line="46" pos:column="15">= <expr><operator pos:line="46" pos:column="17">-<pos:position pos:line="46" pos:column="18"/></operator><literal type="number" pos:line="46" pos:column="18">99<pos:position pos:line="46" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">timeout<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">.<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">tv_sec<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="22">0<pos:position pos:line="48" pos:column="23"/></literal></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">timeout<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">.<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">tv_usec<pos:position pos:line="49" pos:column="20"/></name></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <literal type="number" pos:line="49" pos:column="23">100000L<pos:position pos:line="49" pos:column="30"/></literal></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt> <comment type="block" pos:line="49" pos:column="32">/* 100 ms */</comment>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">FD_ZERO<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><operator pos:line="51" pos:column="13">&amp;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="14">fdread<pos:position pos:line="51" pos:column="20"/></name></expr></argument>)<pos:position pos:line="51" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">FD_ZERO<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><operator pos:line="52" pos:column="13">&amp;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="14">fdwrite<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">FD_ZERO<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><operator pos:line="53" pos:column="13">&amp;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="14">fdexcep<pos:position pos:line="53" pos:column="21"/></name></expr></argument>)<pos:position pos:line="53" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">multi_fdset<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">mhandle<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="26">&amp;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="27">fdread<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="35">&amp;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="36">fdwrite<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="45">&amp;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="46">fdexcep<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="55">&amp;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="56">maxfd<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">select_test<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">maxfd<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">+<pos:position pos:line="59" pos:column="24"/></operator> <literal type="number" pos:line="59" pos:column="25">1<pos:position pos:line="59" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="28">&amp;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="29">fdread<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="37">&amp;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="38">fdwrite<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="47">&amp;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="48">fdexcep<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="57">&amp;<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="58">timeout<pos:position pos:line="59" pos:column="65"/></name></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">abort_on_test_timeout<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">()<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">multi_perform<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">mhandle<pos:position pos:line="63" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="28">&amp;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="29">still_running<pos:position pos:line="63" pos:column="42"/></name></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">abort_on_test_timeout<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">()<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></while>

<label><name pos:line="68" pos:column="1">test_cleanup<pos:position pos:line="68" pos:column="13"/></name>:<pos:position pos:line="68" pos:column="14"/></label>

  <comment type="block" pos:line="70" pos:column="3">/* undocumented cleanup sequence - type UA */</comment>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">curl_multi_cleanup<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">mhandle<pos:position pos:line="72" pos:column="29"/></name></expr></argument>)<pos:position pos:line="72" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">curl_easy_cleanup<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">handle<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">curl_global_cleanup<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">()<pos:position pos:line="74" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>

  <return pos:line="76" pos:column="3">return <expr><name pos:line="76" pos:column="10">res<pos:position pos:line="76" pos:column="13"/></name></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

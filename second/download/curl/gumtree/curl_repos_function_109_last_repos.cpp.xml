<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_109_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">my_trace<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">CURL<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">handle<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">curl_infotype<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">type<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="3" pos:column="14">unsigned<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">size_t<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">size<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="4" pos:column="14">void<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">userp<pos:position pos:line="4" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="26"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">text<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">userp<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">handle<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt> <comment type="block" pos:line="9" pos:column="17">/* prevent compiler warning */</comment>

  <switch pos:line="11" pos:column="3">switch<condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">type<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition> <block pos:line="11" pos:column="16">{
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">CURLINFO_TEXT<pos:position pos:line="12" pos:column="21"/></name></expr>:<pos:position pos:line="12" pos:column="22"/></case>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">fprintf<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">stderr<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"== Info: %s"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">data<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* FALLTHROUGH */</comment>
  <default pos:line="15" pos:column="3">default:<pos:position pos:line="15" pos:column="11"/></default> <comment type="block" pos:line="15" pos:column="12">/* in case a new one is introduced to shock us */</comment>
    <return pos:line="16" pos:column="5">return <expr><literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></return>

  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">CURLINFO_HEADER_OUT<pos:position pos:line="18" pos:column="27"/></name></expr>:<pos:position pos:line="18" pos:column="28"/></case>
    <expr_stmt><expr><name pos:line="19" pos:column="5">text<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="string" pos:line="19" pos:column="12">"=&gt; Send header"<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <break pos:line="20" pos:column="5">break;<pos:position pos:line="20" pos:column="11"/></break>
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">CURLINFO_DATA_OUT<pos:position pos:line="21" pos:column="25"/></name></expr>:<pos:position pos:line="21" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="22" pos:column="5">text<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="string" pos:line="22" pos:column="12">"=&gt; Send data"<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">CURLINFO_HEADER_IN<pos:position pos:line="24" pos:column="26"/></name></expr>:<pos:position pos:line="24" pos:column="27"/></case>
    <expr_stmt><expr><name pos:line="25" pos:column="5">text<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="string" pos:line="25" pos:column="12">"&lt;= Recv header"<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">CURLINFO_DATA_IN<pos:position pos:line="27" pos:column="24"/></name></expr>:<pos:position pos:line="27" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="28" pos:column="5">text<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="string" pos:line="28" pos:column="12">"&lt;= Recv data"<pos:position pos:line="28" pos:column="29"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <break pos:line="29" pos:column="5">break;<pos:position pos:line="29" pos:column="11"/></break>
  }<pos:position pos:line="30" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">dump<pos:position pos:line="32" pos:column="7"/></name><argument_list pos:line="32" pos:column="7">(<argument><expr><name pos:line="32" pos:column="8">text<pos:position pos:line="32" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="14">stderr<pos:position pos:line="32" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="22">data<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="28">size<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">TRUE<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

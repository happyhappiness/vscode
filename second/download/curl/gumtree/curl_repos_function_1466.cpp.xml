<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1466.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMsg<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">curl_multi_info_read<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CURLM<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">multi_handle<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">msgs_in_queue<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">multi<pos:position pos:line="3" pos:column="27"/></name><init pos:line="3" pos:column="27">=<expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">Curl_multi<pos:position pos:line="3" pos:column="46"/></name> <operator pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">)<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">multi_handle<pos:position pos:line="3" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_message<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">msg<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="6" pos:column="3">*<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">msgs_in_queue<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt> <comment type="block" pos:line="6" pos:column="23">/* default to none */</comment>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><call><name pos:line="8" pos:column="6">GOOD_MULTI_HANDLE<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">multi<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call> <operator pos:line="8" pos:column="31">&amp;&amp;<pos:position pos:line="8" pos:column="41"/></operator> <call><name pos:line="8" pos:column="34">Curl_llist_count<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><name><name pos:line="8" pos:column="51">multi<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">msglist<pos:position pos:line="8" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="67"/></condition><then pos:line="8" pos:column="67"> <block pos:line="8" pos:column="68">{
    <comment type="block" pos:line="9" pos:column="5">/* there is one or more messages in the list */</comment>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">curl_llist_element<pos:position pos:line="10" pos:column="30"/></name></name> <modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier></type><name pos:line="10" pos:column="32">e<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* extract the head of the list to return */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">e<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <name><name pos:line="13" pos:column="9">multi<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">msglist<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">head<pos:position pos:line="13" pos:column="29"/></name></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">msg<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name><name pos:line="15" pos:column="11">e<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">ptr<pos:position pos:line="15" pos:column="17"/></name></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* remove the extracted entry */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">Curl_llist_remove<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name><name pos:line="18" pos:column="23">multi<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">msglist<pos:position pos:line="18" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">e<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">msgs_in_queue<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">curlx_uztosi<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><call><name pos:line="20" pos:column="35">Curl_llist_count<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name><name pos:line="20" pos:column="52">multi<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">msglist<pos:position pos:line="20" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>

    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">&amp;<pos:position pos:line="22" pos:column="17"/></operator><name><name pos:line="22" pos:column="13">msg<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">extmsg<pos:position pos:line="22" pos:column="24"/></name></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return></block></else></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

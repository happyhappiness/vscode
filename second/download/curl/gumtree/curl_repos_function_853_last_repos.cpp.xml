<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_853_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SANITIZEcode<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">sanitize_file_name<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier></type> <name pos:line="1" pos:column="46">sanitized<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">file_name<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">flags<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>, <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="13">target<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">SANITIZEcode<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">sc<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">max_sanitized_len<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">sanitized<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">SANITIZE_ERR_BAD_ARGUMENT<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="12" pos:column="3">*<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">sanitized<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">file_name<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">SANITIZE_ERR_BAD_ARGUMENT<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></return></block></then></if>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">(<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">flags<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&amp;<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="15">SANITIZE_ALLOW_PATH<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
<cpp:ifndef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifndef<pos:position pos:line="18" pos:column="8"/></cpp:directive> <name pos:line="18" pos:column="9">MSDOS<pos:position pos:line="18" pos:column="14"/></name></cpp:ifndef>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name><name pos:line="19" pos:column="8">file_name<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>]<pos:position pos:line="19" pos:column="20"/></index></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <literal type="char" pos:line="19" pos:column="24">'\\'<pos:position pos:line="19" pos:column="28"/></literal> <operator pos:line="19" pos:column="29">&amp;&amp;<pos:position pos:line="19" pos:column="39"/></operator> <name><name pos:line="19" pos:column="32">file_name<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal></expr>]<pos:position pos:line="19" pos:column="44"/></index></name> <operator pos:line="19" pos:column="45">==<pos:position pos:line="19" pos:column="47"/></operator> <literal type="char" pos:line="19" pos:column="48">'\\'<pos:position pos:line="19" pos:column="52"/></literal></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53">
      <comment type="block" pos:line="20" pos:column="7">/* UNC prefixed path \\ (eg \\?\C:\foo) */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">max_sanitized_len<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">32767<pos:position pos:line="21" pos:column="32"/></literal><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">1<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></then>
    <else pos:line="22" pos:column="5">else
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">max_sanitized_len<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">PATH_MAX<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-<pos:position pos:line="24" pos:column="36"/></operator><literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></else></if>
  }<pos:position pos:line="25" pos:column="4"/></block></then>
  <else pos:line="26" pos:column="3">else
    <comment type="block" pos:line="27" pos:column="5">/* The maximum length of a filename.
       FILENAME_MAX is often the same as PATH_MAX, in other words it is 260 and
       does not discount the path information therefore we shouldn't use it. */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="5">max_sanitized_len<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="30" pos:column="25">(<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">PATH_MAX<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-<pos:position pos:line="30" pos:column="35"/></operator><literal type="number" pos:line="30" pos:column="35">1<pos:position pos:line="30" pos:column="36"/></literal> <operator pos:line="30" pos:column="37">&gt;<pos:position pos:line="30" pos:column="41"/></operator> <literal type="number" pos:line="30" pos:column="39">255<pos:position pos:line="30" pos:column="42"/></literal><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator></expr> ?<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45"> <expr><literal type="number" pos:line="30" pos:column="46">255<pos:position pos:line="30" pos:column="49"/></literal></expr> <pos:position pos:line="30" pos:column="50"/></then><else pos:line="30" pos:column="50">: <expr><name pos:line="30" pos:column="52">PATH_MAX<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-<pos:position pos:line="30" pos:column="61"/></operator><literal type="number" pos:line="30" pos:column="61">1<pos:position pos:line="30" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">len<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">strlen<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">file_name<pos:position pos:line="32" pos:column="25"/></name></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">len<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">&gt;<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="12">max_sanitized_len<pos:position pos:line="33" pos:column="29"/></name></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30"> <block pos:line="33" pos:column="31">{
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">flags<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&amp;<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="18">SANITIZE_ALLOW_TRUNCATE<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator> <operator pos:line="34" pos:column="43">||<pos:position pos:line="34" pos:column="45"/></operator>
       <call><name pos:line="35" pos:column="8">truncate_dryrun<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">file_name<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">max_sanitized_len<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54">
      <block type="pseudo"><return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">SANITIZE_ERR_INVALID_PATH<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">len<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <name pos:line="38" pos:column="11">max_sanitized_len<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="41" pos:column="3">target<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <call><name pos:line="41" pos:column="12">malloc<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">len<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">+<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><operator pos:line="42" pos:column="6">!<pos:position pos:line="42" pos:column="7"/></operator><name pos:line="42" pos:column="7">target<pos:position pos:line="42" pos:column="13"/></name></expr>)<pos:position pos:line="42" pos:column="14"/></condition><then pos:line="42" pos:column="14">
    <block type="pseudo"><return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">SANITIZE_ERR_OUT_OF_MEMORY<pos:position pos:line="43" pos:column="38"/></name></expr>;<pos:position pos:line="43" pos:column="39"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">strncpy<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">target<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="19">file_name<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">len<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">target<pos:position pos:line="46" pos:column="9"/></name><index pos:line="46" pos:column="9">[<expr><name pos:line="46" pos:column="10">len<pos:position pos:line="46" pos:column="13"/></name></expr>]<pos:position pos:line="46" pos:column="14"/></index></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <literal type="char" pos:line="46" pos:column="17">'\0'<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>

<cpp:ifndef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifndef<pos:position pos:line="48" pos:column="8"/></cpp:directive> <name pos:line="48" pos:column="9">MSDOS<pos:position pos:line="48" pos:column="14"/></name></cpp:ifndef>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">(<pos:position pos:line="49" pos:column="7"/></operator><name pos:line="49" pos:column="7">flags<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&amp;<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="15">SANITIZE_ALLOW_PATH<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">)<pos:position pos:line="49" pos:column="35"/></operator> <operator pos:line="49" pos:column="36">&amp;&amp;<pos:position pos:line="49" pos:column="46"/></operator> <operator pos:line="49" pos:column="39">!<pos:position pos:line="49" pos:column="40"/></operator><call><name pos:line="49" pos:column="40">strncmp<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">target<pos:position pos:line="49" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="56">"\\\\?\\"<pos:position pos:line="49" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="67">4<pos:position pos:line="49" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="70"/></condition><then pos:line="49" pos:column="70">
    <comment type="block" pos:line="50" pos:column="5">/* Skip the literal path prefix \\?\ */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">p<pos:position pos:line="51" pos:column="6"/></name> <operator pos:line="51" pos:column="7">=<pos:position pos:line="51" pos:column="8"/></operator> <name pos:line="51" pos:column="9">target<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">+<pos:position pos:line="51" pos:column="17"/></operator> <literal type="number" pos:line="51" pos:column="18">4<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt></block></then>
  <else pos:line="52" pos:column="3">else
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="5">p<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">=<pos:position pos:line="54" pos:column="8"/></operator> <name pos:line="54" pos:column="9">target<pos:position pos:line="54" pos:column="15"/></name></expr>;<pos:position pos:line="54" pos:column="16"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="56" pos:column="3">/* replace control characters and other banned characters */</comment>
  <for pos:line="57" pos:column="3">for<control pos:line="57" pos:column="6">(<init pos:line="57" pos:column="7">;<pos:position pos:line="57" pos:column="8"/></init> <condition><expr><operator pos:line="57" pos:column="9">*<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">p<pos:position pos:line="57" pos:column="11"/></name></expr>;<pos:position pos:line="57" pos:column="12"/></condition> <incr><expr><operator pos:line="57" pos:column="13">++<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">p<pos:position pos:line="57" pos:column="16"/></name></expr></incr>)<pos:position pos:line="57" pos:column="17"/></control> <block pos:line="57" pos:column="18">{
    <decl_stmt><decl><type><specifier pos:line="58" pos:column="5">const<pos:position pos:line="58" pos:column="10"/></specifier> <name pos:line="58" pos:column="11">char<pos:position pos:line="58" pos:column="15"/></name> <modifier pos:line="58" pos:column="16">*<pos:position pos:line="58" pos:column="17"/></modifier></type><name pos:line="58" pos:column="17">banned<pos:position pos:line="58" pos:column="23"/></name></decl>;<pos:position pos:line="58" pos:column="24"/></decl_stmt>

    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><operator pos:line="60" pos:column="8">(<pos:position pos:line="60" pos:column="9"/></operator><literal type="number" pos:line="60" pos:column="9">1<pos:position pos:line="60" pos:column="10"/></literal> <operator pos:line="60" pos:column="11">&lt;=<pos:position pos:line="60" pos:column="16"/></operator> <operator pos:line="60" pos:column="14">*<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">p<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">&amp;&amp;<pos:position pos:line="60" pos:column="27"/></operator> <operator pos:line="60" pos:column="20">*<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="21">p<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">&lt;=<pos:position pos:line="60" pos:column="28"/></operator> <literal type="number" pos:line="60" pos:column="26">31<pos:position pos:line="60" pos:column="28"/></literal><operator pos:line="60" pos:column="28">)<pos:position pos:line="60" pos:column="29"/></operator> <operator pos:line="60" pos:column="30">||<pos:position pos:line="60" pos:column="32"/></operator>
       <operator pos:line="61" pos:column="8">(<pos:position pos:line="61" pos:column="9"/></operator><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">flags<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">&amp;<pos:position pos:line="61" pos:column="22"/></operator> <operator pos:line="61" pos:column="19">(<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">SANITIZE_ALLOW_COLONS<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">|<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="42">SANITIZE_ALLOW_PATH<pos:position pos:line="61" pos:column="61"/></name><operator pos:line="61" pos:column="61">)<pos:position pos:line="61" pos:column="62"/></operator><operator pos:line="61" pos:column="62">)<pos:position pos:line="61" pos:column="63"/></operator> <operator pos:line="61" pos:column="64">&amp;&amp;<pos:position pos:line="61" pos:column="74"/></operator> <operator pos:line="61" pos:column="67">*<pos:position pos:line="61" pos:column="68"/></operator><name pos:line="61" pos:column="68">p<pos:position pos:line="61" pos:column="69"/></name> <operator pos:line="61" pos:column="70">==<pos:position pos:line="61" pos:column="72"/></operator> <literal type="char" pos:line="61" pos:column="73">':'<pos:position pos:line="61" pos:column="76"/></literal><operator pos:line="61" pos:column="76">)<pos:position pos:line="61" pos:column="77"/></operator> <operator pos:line="61" pos:column="78">||<pos:position pos:line="61" pos:column="80"/></operator>
       <operator pos:line="62" pos:column="8">(<pos:position pos:line="62" pos:column="9"/></operator><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">flags<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">&amp;<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="19">SANITIZE_ALLOW_PATH<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">)<pos:position pos:line="62" pos:column="39"/></operator> <operator pos:line="62" pos:column="40">&amp;&amp;<pos:position pos:line="62" pos:column="50"/></operator> <operator pos:line="62" pos:column="43">(<pos:position pos:line="62" pos:column="44"/></operator><operator pos:line="62" pos:column="44">*<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">p<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">==<pos:position pos:line="62" pos:column="49"/></operator> <literal type="char" pos:line="62" pos:column="50">'/'<pos:position pos:line="62" pos:column="53"/></literal> <operator pos:line="62" pos:column="54">||<pos:position pos:line="62" pos:column="56"/></operator> <operator pos:line="62" pos:column="57">*<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="58">p<pos:position pos:line="62" pos:column="59"/></name> <operator pos:line="62" pos:column="60">==<pos:position pos:line="62" pos:column="62"/></operator> <literal type="char" pos:line="62" pos:column="63">'\\'<pos:position pos:line="62" pos:column="67"/></literal><operator pos:line="62" pos:column="67">)<pos:position pos:line="62" pos:column="68"/></operator><operator pos:line="62" pos:column="68">)<pos:position pos:line="62" pos:column="69"/></operator></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70"> <block pos:line="62" pos:column="71">{
      <expr_stmt><expr><operator pos:line="63" pos:column="7">*<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">p<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <literal type="char" pos:line="63" pos:column="12">'_'<pos:position pos:line="63" pos:column="15"/></literal></expr>;<pos:position pos:line="63" pos:column="16"/></expr_stmt>
      <continue pos:line="64" pos:column="7">continue;<pos:position pos:line="64" pos:column="16"/></continue>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <for pos:line="67" pos:column="5">for<control pos:line="67" pos:column="8">(<init><expr><name pos:line="67" pos:column="9">banned<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="string" pos:line="67" pos:column="18">"|&lt;&gt;\"?*"<pos:position pos:line="67" pos:column="33"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></init> <condition><expr><operator pos:line="67" pos:column="29">*<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">banned<pos:position pos:line="67" pos:column="36"/></name></expr>;<pos:position pos:line="67" pos:column="37"/></condition> <incr><expr><operator pos:line="67" pos:column="38">++<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="40">banned<pos:position pos:line="67" pos:column="46"/></name></expr></incr>)<pos:position pos:line="67" pos:column="47"/></control> <block pos:line="67" pos:column="48">{
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">(<expr><operator pos:line="68" pos:column="10">*<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">p<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">==<pos:position pos:line="68" pos:column="15"/></operator> <operator pos:line="68" pos:column="16">*<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">banned<pos:position pos:line="68" pos:column="23"/></name></expr>)<pos:position pos:line="68" pos:column="24"/></condition><then pos:line="68" pos:column="24"> <block pos:line="68" pos:column="25">{
        <expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">p<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <literal type="char" pos:line="69" pos:column="14">'_'<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></expr_stmt>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></for>
  }<pos:position pos:line="73" pos:column="4"/></block></for>

  <comment type="block" pos:line="75" pos:column="3">/* remove trailing spaces and periods if not allowing paths */</comment>
  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><operator pos:line="76" pos:column="6">!<pos:position pos:line="76" pos:column="7"/></operator><operator pos:line="76" pos:column="7">(<pos:position pos:line="76" pos:column="8"/></operator><name pos:line="76" pos:column="8">flags<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">&amp;<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="16">SANITIZE_ALLOW_PATH<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">)<pos:position pos:line="76" pos:column="36"/></operator> <operator pos:line="76" pos:column="37">&amp;&amp;<pos:position pos:line="76" pos:column="47"/></operator> <name pos:line="76" pos:column="40">len<pos:position pos:line="76" pos:column="43"/></name></expr>)<pos:position pos:line="76" pos:column="44"/></condition><then pos:line="76" pos:column="44"> <block pos:line="76" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">char<pos:position pos:line="77" pos:column="9"/></name> <modifier pos:line="77" pos:column="10">*<pos:position pos:line="77" pos:column="11"/></modifier></type><name pos:line="77" pos:column="11">clip<pos:position pos:line="77" pos:column="15"/></name> <init pos:line="77" pos:column="16">= <expr><name pos:line="77" pos:column="18">NULL<pos:position pos:line="77" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="79" pos:column="5">p<pos:position pos:line="79" pos:column="6"/></name> <operator pos:line="79" pos:column="7">=<pos:position pos:line="79" pos:column="8"/></operator> <operator pos:line="79" pos:column="9">&amp;<pos:position pos:line="79" pos:column="14"/></operator><name><name pos:line="79" pos:column="10">target<pos:position pos:line="79" pos:column="16"/></name><index pos:line="79" pos:column="16">[<expr><name pos:line="79" pos:column="17">len<pos:position pos:line="79" pos:column="20"/></name></expr>]<pos:position pos:line="79" pos:column="21"/></index></name></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>
    <do pos:line="80" pos:column="5">do <block pos:line="80" pos:column="8">{
      <expr_stmt><expr><operator pos:line="81" pos:column="7">--<pos:position pos:line="81" pos:column="9"/></operator><name pos:line="81" pos:column="9">p<pos:position pos:line="81" pos:column="10"/></name></expr>;<pos:position pos:line="81" pos:column="11"/></expr_stmt>
      <if pos:line="82" pos:column="7">if<condition pos:line="82" pos:column="9">(<expr><operator pos:line="82" pos:column="10">*<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">p<pos:position pos:line="82" pos:column="12"/></name> <operator pos:line="82" pos:column="13">!=<pos:position pos:line="82" pos:column="15"/></operator> <literal type="char" pos:line="82" pos:column="16">' '<pos:position pos:line="82" pos:column="19"/></literal> <operator pos:line="82" pos:column="20">&amp;&amp;<pos:position pos:line="82" pos:column="30"/></operator> <operator pos:line="82" pos:column="23">*<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">p<pos:position pos:line="82" pos:column="25"/></name> <operator pos:line="82" pos:column="26">!=<pos:position pos:line="82" pos:column="28"/></operator> <literal type="char" pos:line="82" pos:column="29">'.'<pos:position pos:line="82" pos:column="32"/></literal></expr>)<pos:position pos:line="82" pos:column="33"/></condition><then pos:line="82" pos:column="33">
        <block type="pseudo"><break pos:line="83" pos:column="9">break;<pos:position pos:line="83" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="84" pos:column="7">clip<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <name pos:line="84" pos:column="14">p<pos:position pos:line="84" pos:column="15"/></name></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block> while<condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">p<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">!=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">target<pos:position pos:line="85" pos:column="24"/></name></expr>)<pos:position pos:line="85" pos:column="25"/></condition>;<pos:position pos:line="85" pos:column="26"/></do>

    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name pos:line="87" pos:column="8">clip<pos:position pos:line="87" pos:column="12"/></name></expr>)<pos:position pos:line="87" pos:column="13"/></condition><then pos:line="87" pos:column="13"> <block pos:line="87" pos:column="14">{
      <expr_stmt><expr><operator pos:line="88" pos:column="7">*<pos:position pos:line="88" pos:column="8"/></operator><name pos:line="88" pos:column="8">clip<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <literal type="char" pos:line="88" pos:column="15">'\0'<pos:position pos:line="88" pos:column="19"/></literal></expr>;<pos:position pos:line="88" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="89" pos:column="7">len<pos:position pos:line="89" pos:column="10"/></name> <operator pos:line="89" pos:column="11">=<pos:position pos:line="89" pos:column="12"/></operator> <name pos:line="89" pos:column="13">clip<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">-<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">target<pos:position pos:line="89" pos:column="26"/></name></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">ifdef<pos:position pos:line="93" pos:column="7"/></cpp:directive> <name pos:line="93" pos:column="8">MSDOS<pos:position pos:line="93" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="94" pos:column="3">sc<pos:position pos:line="94" pos:column="5"/></name> <operator pos:line="94" pos:column="6">=<pos:position pos:line="94" pos:column="7"/></operator> <call><name pos:line="94" pos:column="8">msdosify<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><operator pos:line="94" pos:column="17">&amp;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="18">p<pos:position pos:line="94" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="21">target<pos:position pos:line="94" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="29">flags<pos:position pos:line="94" pos:column="34"/></name></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">free<pos:position pos:line="95" pos:column="7"/></name><argument_list pos:line="95" pos:column="7">(<argument><expr><name pos:line="95" pos:column="8">target<pos:position pos:line="95" pos:column="14"/></name></expr></argument>)<pos:position pos:line="95" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="16"/></expr_stmt>
  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><name pos:line="96" pos:column="6">sc<pos:position pos:line="96" pos:column="8"/></name></expr>)<pos:position pos:line="96" pos:column="9"/></condition><then pos:line="96" pos:column="9">
    <block type="pseudo"><return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">sc<pos:position pos:line="97" pos:column="14"/></name></expr>;<pos:position pos:line="97" pos:column="15"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="98" pos:column="3">target<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">=<pos:position pos:line="98" pos:column="11"/></operator> <name pos:line="98" pos:column="12">p<pos:position pos:line="98" pos:column="13"/></name></expr>;<pos:position pos:line="98" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="99" pos:column="3">len<pos:position pos:line="99" pos:column="6"/></name> <operator pos:line="99" pos:column="7">=<pos:position pos:line="99" pos:column="8"/></operator> <call><name pos:line="99" pos:column="9">strlen<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">target<pos:position pos:line="99" pos:column="22"/></name></expr></argument>)<pos:position pos:line="99" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>

  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><name pos:line="101" pos:column="6">len<pos:position pos:line="101" pos:column="9"/></name> <operator pos:line="101" pos:column="10">&gt;<pos:position pos:line="101" pos:column="14"/></operator> <name pos:line="101" pos:column="12">max_sanitized_len<pos:position pos:line="101" pos:column="29"/></name></expr>)<pos:position pos:line="101" pos:column="30"/></condition><then pos:line="101" pos:column="30"> <block pos:line="101" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">free<pos:position pos:line="102" pos:column="9"/></name><argument_list pos:line="102" pos:column="9">(<argument><expr><name pos:line="102" pos:column="10">target<pos:position pos:line="102" pos:column="16"/></name></expr></argument>)<pos:position pos:line="102" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="18"/></expr_stmt>
    <return pos:line="103" pos:column="5">return <expr><name pos:line="103" pos:column="12">SANITIZE_ERR_INVALID_PATH<pos:position pos:line="103" pos:column="37"/></name></expr>;<pos:position pos:line="103" pos:column="38"/></return>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><operator pos:line="107" pos:column="6">!<pos:position pos:line="107" pos:column="7"/></operator><operator pos:line="107" pos:column="7">(<pos:position pos:line="107" pos:column="8"/></operator><name pos:line="107" pos:column="8">flags<pos:position pos:line="107" pos:column="13"/></name> <operator pos:line="107" pos:column="14">&amp;<pos:position pos:line="107" pos:column="19"/></operator> <name pos:line="107" pos:column="16">SANITIZE_ALLOW_RESERVED<pos:position pos:line="107" pos:column="39"/></name><operator pos:line="107" pos:column="39">)<pos:position pos:line="107" pos:column="40"/></operator></expr>)<pos:position pos:line="107" pos:column="41"/></condition><then pos:line="107" pos:column="41"> <block pos:line="107" pos:column="42">{
    <expr_stmt><expr><name pos:line="108" pos:column="5">sc<pos:position pos:line="108" pos:column="7"/></name> <operator pos:line="108" pos:column="8">=<pos:position pos:line="108" pos:column="9"/></operator> <call><name pos:line="108" pos:column="10">rename_if_reserved_dos_device_name<pos:position pos:line="108" pos:column="44"/></name><argument_list pos:line="108" pos:column="44">(<argument><expr><operator pos:line="108" pos:column="45">&amp;<pos:position pos:line="108" pos:column="50"/></operator><name pos:line="108" pos:column="46">p<pos:position pos:line="108" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="49">target<pos:position pos:line="108" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">flags<pos:position pos:line="108" pos:column="62"/></name></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">free<pos:position pos:line="109" pos:column="9"/></name><argument_list pos:line="109" pos:column="9">(<argument><expr><name pos:line="109" pos:column="10">target<pos:position pos:line="109" pos:column="16"/></name></expr></argument>)<pos:position pos:line="109" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="18"/></expr_stmt>
    <if pos:line="110" pos:column="5">if<condition pos:line="110" pos:column="7">(<expr><name pos:line="110" pos:column="8">sc<pos:position pos:line="110" pos:column="10"/></name></expr>)<pos:position pos:line="110" pos:column="11"/></condition><then pos:line="110" pos:column="11">
      <block type="pseudo"><return pos:line="111" pos:column="7">return <expr><name pos:line="111" pos:column="14">sc<pos:position pos:line="111" pos:column="16"/></name></expr>;<pos:position pos:line="111" pos:column="17"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="112" pos:column="5">target<pos:position pos:line="112" pos:column="11"/></name> <operator pos:line="112" pos:column="12">=<pos:position pos:line="112" pos:column="13"/></operator> <name pos:line="112" pos:column="14">p<pos:position pos:line="112" pos:column="15"/></name></expr>;<pos:position pos:line="112" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="113" pos:column="5">len<pos:position pos:line="113" pos:column="8"/></name> <operator pos:line="113" pos:column="9">=<pos:position pos:line="113" pos:column="10"/></operator> <call><name pos:line="113" pos:column="11">strlen<pos:position pos:line="113" pos:column="17"/></name><argument_list pos:line="113" pos:column="17">(<argument><expr><name pos:line="113" pos:column="18">target<pos:position pos:line="113" pos:column="24"/></name></expr></argument>)<pos:position pos:line="113" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="26"/></expr_stmt>

    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><name pos:line="115" pos:column="8">len<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">&gt;<pos:position pos:line="115" pos:column="16"/></operator> <name pos:line="115" pos:column="14">max_sanitized_len<pos:position pos:line="115" pos:column="31"/></name></expr>)<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32"> <block pos:line="115" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">free<pos:position pos:line="116" pos:column="11"/></name><argument_list pos:line="116" pos:column="11">(<argument><expr><name pos:line="116" pos:column="12">target<pos:position pos:line="116" pos:column="18"/></name></expr></argument>)<pos:position pos:line="116" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="20"/></expr_stmt>
      <return pos:line="117" pos:column="7">return <expr><name pos:line="117" pos:column="14">SANITIZE_ERR_INVALID_PATH<pos:position pos:line="117" pos:column="39"/></name></expr>;<pos:position pos:line="117" pos:column="40"/></return>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="121" pos:column="3">*<pos:position pos:line="121" pos:column="4"/></operator><name pos:line="121" pos:column="4">sanitized<pos:position pos:line="121" pos:column="13"/></name> <operator pos:line="121" pos:column="14">=<pos:position pos:line="121" pos:column="15"/></operator> <name pos:line="121" pos:column="16">target<pos:position pos:line="121" pos:column="22"/></name></expr>;<pos:position pos:line="121" pos:column="23"/></expr_stmt>
  <return pos:line="122" pos:column="3">return <expr><name pos:line="122" pos:column="10">SANITIZE_ERR_OK<pos:position pos:line="122" pos:column="25"/></name></expr>;<pos:position pos:line="122" pos:column="26"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

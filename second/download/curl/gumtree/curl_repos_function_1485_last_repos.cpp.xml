<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1485_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">create_conn_helper_init_proxy<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">connectdata<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">conn<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">proxy<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">socksproxy<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">no_proxy<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

  <comment type="block" format="doxygen" pos:line="9" pos:column="3">/*************************************************************
   * Extract the user and password from the authentication string
   *************************************************************/</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">conn<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">bits<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">proxy_user_passwd<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">result<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">parse_proxy_auth<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">data<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">conn<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">result<pos:position pos:line="14" pos:column="14"/></name></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
      <block type="pseudo"><goto pos:line="15" pos:column="7">goto <name pos:line="15" pos:column="12">out<pos:position pos:line="15" pos:column="15"/></name>;<pos:position pos:line="15" pos:column="16"/></goto></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="18" pos:column="3">/*************************************************************
   * Detect what (if any) proxy to use
   *************************************************************/</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">data<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">set<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">str<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><name pos:line="21" pos:column="20">STRING_PROXY<pos:position pos:line="21" pos:column="32"/></name></expr>]<pos:position pos:line="21" pos:column="33"/></index></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">proxy<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">strdup<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">data<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">set<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">str<pos:position pos:line="22" pos:column="33"/></name><index pos:line="22" pos:column="33">[<expr><name pos:line="22" pos:column="34">STRING_PROXY<pos:position pos:line="22" pos:column="46"/></name></expr>]<pos:position pos:line="22" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="23" pos:column="5">/* if global proxy is set, this is it */</comment>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">NULL<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">==<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">proxy<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">failf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">data<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="19">"memory shortage"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">result<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
      <goto pos:line="27" pos:column="7">goto <name pos:line="27" pos:column="12">out<pos:position pos:line="27" pos:column="15"/></name>;<pos:position pos:line="27" pos:column="16"/></goto>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name><name pos:line="31" pos:column="6">data<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">set<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">str<pos:position pos:line="31" pos:column="19"/></name><index pos:line="31" pos:column="19">[<expr><name pos:line="31" pos:column="20">STRING_PRE_PROXY<pos:position pos:line="31" pos:column="36"/></name></expr>]<pos:position pos:line="31" pos:column="37"/></index></name></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
    <expr_stmt><expr><name pos:line="32" pos:column="5">socksproxy<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">strdup<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name><name pos:line="32" pos:column="25">data<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">set<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">.<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">str<pos:position pos:line="32" pos:column="38"/></name><index pos:line="32" pos:column="38">[<expr><name pos:line="32" pos:column="39">STRING_PRE_PROXY<pos:position pos:line="32" pos:column="55"/></name></expr>]<pos:position pos:line="32" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
    <comment type="block" pos:line="33" pos:column="5">/* if global socks proxy is set, this is it */</comment>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">NULL<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">==<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">socksproxy<pos:position pos:line="34" pos:column="26"/></name></expr>)<pos:position pos:line="34" pos:column="27"/></condition><then pos:line="34" pos:column="27"> <block pos:line="34" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">failf<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">data<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"memory shortage"<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="36" pos:column="35"/></name></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
      <goto pos:line="37" pos:column="7">goto <name pos:line="37" pos:column="12">out<pos:position pos:line="37" pos:column="15"/></name>;<pos:position pos:line="37" pos:column="16"/></goto>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name><name pos:line="41" pos:column="7">data<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">set<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">str<pos:position pos:line="41" pos:column="20"/></name><index pos:line="41" pos:column="20">[<expr><name pos:line="41" pos:column="21">STRING_NOPROXY<pos:position pos:line="41" pos:column="35"/></name></expr>]<pos:position pos:line="41" pos:column="36"/></index></name></expr>)<pos:position pos:line="41" pos:column="37"/></condition><then pos:line="41" pos:column="37"> <block pos:line="41" pos:column="38">{
    <expr_stmt><expr><name pos:line="42" pos:column="5">no_proxy<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">curl_getenv<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><literal type="string" pos:line="42" pos:column="28">"no_proxy"<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><operator pos:line="43" pos:column="8">!<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="9">no_proxy<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">no_proxy<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">curl_getenv<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><literal type="string" pos:line="44" pos:column="30">"NO_PROXY"<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><call><name pos:line="47" pos:column="6">check_noproxy<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name><name pos:line="47" pos:column="20">conn<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">host<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">.<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="31">name<pos:position pos:line="47" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="47" pos:column="37">data<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">-&gt;<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="43">set<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">.<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="47">str<pos:position pos:line="47" pos:column="50"/></name><index pos:line="47" pos:column="50">[<expr><name pos:line="47" pos:column="51">STRING_NOPROXY<pos:position pos:line="47" pos:column="65"/></name></expr>]<pos:position pos:line="47" pos:column="66"/></index></name></expr> ?<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
      <expr><name><name pos:line="48" pos:column="7">data<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">set<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">.<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">str<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">STRING_NOPROXY<pos:position pos:line="48" pos:column="35"/></name></expr>]<pos:position pos:line="48" pos:column="36"/></index></name></expr> <pos:position pos:line="48" pos:column="37"/></then><else pos:line="48" pos:column="37">: <expr><name pos:line="48" pos:column="39">no_proxy<pos:position pos:line="48" pos:column="47"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <block pos:line="48" pos:column="50">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">Curl_safefree<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">proxy<pos:position pos:line="49" pos:column="24"/></name></expr></argument>)<pos:position pos:line="49" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">Curl_safefree<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><name pos:line="50" pos:column="19">socksproxy<pos:position pos:line="50" pos:column="29"/></name></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then>
<cpp:ifndef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifndef<pos:position pos:line="52" pos:column="8"/></cpp:directive> <name pos:line="52" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="52" pos:column="26"/></name></cpp:ifndef>
  <elseif pos:line="53" pos:column="3">else <if pos:line="53" pos:column="8">if<condition pos:line="53" pos:column="10">(<expr><operator pos:line="53" pos:column="11">!<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="12">proxy<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&amp;&amp;<pos:position pos:line="53" pos:column="28"/></operator> <operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">socksproxy<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33">
    <comment type="block" pos:line="54" pos:column="5">/* if the host is not in the noproxy list, detect proxy. */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">proxy<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">detect_proxy<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">conn<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="56" pos:column="8">/* CURL_DISABLE_HTTP */</comment>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">Curl_safefree<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">no_proxy<pos:position pos:line="58" pos:column="25"/></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>

<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef<pos:position pos:line="60" pos:column="7"/></cpp:directive> <name pos:line="60" pos:column="8">USE_UNIX_SOCKETS<pos:position pos:line="60" pos:column="24"/></name></cpp:ifdef>
  <comment type="block" pos:line="61" pos:column="3">/* For the time being do not mix proxy and unix domain sockets. See #1274 */</comment>
  <if pos:line="62" pos:column="3">if<condition pos:line="62" pos:column="5">(<expr><name pos:line="62" pos:column="6">proxy<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">&amp;&amp;<pos:position pos:line="62" pos:column="22"/></operator> <name><name pos:line="62" pos:column="15">conn<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">unix_domain_socket<pos:position pos:line="62" pos:column="39"/></name></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">free<pos:position pos:line="63" pos:column="9"/></name><argument_list pos:line="63" pos:column="9">(<argument><expr><name pos:line="63" pos:column="10">proxy<pos:position pos:line="63" pos:column="15"/></name></expr></argument>)<pos:position pos:line="63" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="64" pos:column="5">proxy<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <name pos:line="64" pos:column="13">NULL<pos:position pos:line="64" pos:column="17"/></name></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="68" pos:column="3">if<condition pos:line="68" pos:column="5">(<expr><name pos:line="68" pos:column="6">proxy<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">&amp;&amp;<pos:position pos:line="68" pos:column="22"/></operator> <operator pos:line="68" pos:column="15">(<pos:position pos:line="68" pos:column="16"/></operator><operator pos:line="68" pos:column="16">!<pos:position pos:line="68" pos:column="17"/></operator><operator pos:line="68" pos:column="17">*<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">proxy<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">||<pos:position pos:line="68" pos:column="26"/></operator> <operator pos:line="68" pos:column="27">(<pos:position pos:line="68" pos:column="28"/></operator><name><name pos:line="68" pos:column="28">conn<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">handler<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">flags<pos:position pos:line="68" pos:column="48"/></name></name> <operator pos:line="68" pos:column="49">&amp;<pos:position pos:line="68" pos:column="54"/></operator> <name pos:line="68" pos:column="51">PROTOPT_NONETWORK<pos:position pos:line="68" pos:column="68"/></name><operator pos:line="68" pos:column="68">)<pos:position pos:line="68" pos:column="69"/></operator><operator pos:line="68" pos:column="69">)<pos:position pos:line="68" pos:column="70"/></operator></expr>)<pos:position pos:line="68" pos:column="71"/></condition><then pos:line="68" pos:column="71"> <block pos:line="68" pos:column="72">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">free<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><name pos:line="69" pos:column="10">proxy<pos:position pos:line="69" pos:column="15"/></name></expr></argument>)<pos:position pos:line="69" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="17"/></expr_stmt>  <comment type="block" pos:line="69" pos:column="19">/* Don't bother with an empty proxy string or if the
                     protocol doesn't work with network */</comment>
    <expr_stmt><expr><name pos:line="71" pos:column="5">proxy<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">=<pos:position pos:line="71" pos:column="12"/></operator> <name pos:line="71" pos:column="13">NULL<pos:position pos:line="71" pos:column="17"/></name></expr>;<pos:position pos:line="71" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><name pos:line="73" pos:column="6">socksproxy<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">&amp;&amp;<pos:position pos:line="73" pos:column="27"/></operator> <operator pos:line="73" pos:column="20">(<pos:position pos:line="73" pos:column="21"/></operator><operator pos:line="73" pos:column="21">!<pos:position pos:line="73" pos:column="22"/></operator><operator pos:line="73" pos:column="22">*<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="23">socksproxy<pos:position pos:line="73" pos:column="33"/></name> <operator pos:line="73" pos:column="34">||<pos:position pos:line="73" pos:column="36"/></operator>
                    <operator pos:line="74" pos:column="21">(<pos:position pos:line="74" pos:column="22"/></operator><name><name pos:line="74" pos:column="22">conn<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">handler<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">flags<pos:position pos:line="74" pos:column="42"/></name></name> <operator pos:line="74" pos:column="43">&amp;<pos:position pos:line="74" pos:column="48"/></operator> <name pos:line="74" pos:column="45">PROTOPT_NONETWORK<pos:position pos:line="74" pos:column="62"/></name><operator pos:line="74" pos:column="62">)<pos:position pos:line="74" pos:column="63"/></operator><operator pos:line="74" pos:column="63">)<pos:position pos:line="74" pos:column="64"/></operator></expr>)<pos:position pos:line="74" pos:column="65"/></condition><then pos:line="74" pos:column="65"> <block pos:line="74" pos:column="66">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">free<pos:position pos:line="75" pos:column="9"/></name><argument_list pos:line="75" pos:column="9">(<argument><expr><name pos:line="75" pos:column="10">socksproxy<pos:position pos:line="75" pos:column="20"/></name></expr></argument>)<pos:position pos:line="75" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>  <comment type="block" pos:line="75" pos:column="24">/* Don't bother with an empty socks proxy string or if
                          the protocol doesn't work with network */</comment>
    <expr_stmt><expr><name pos:line="77" pos:column="5">socksproxy<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="18">NULL<pos:position pos:line="77" pos:column="22"/></name></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="80" pos:column="3">/***********************************************************************
   * If this is supposed to use a proxy, we need to figure out the proxy host
   * name, proxy type and port number, so that we can re-use an existing
   * connection that may exist registered to the same proxy host.
   ***********************************************************************/</comment>
  <if pos:line="85" pos:column="3">if<condition pos:line="85" pos:column="5">(<expr><name pos:line="85" pos:column="6">proxy<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">||<pos:position pos:line="85" pos:column="14"/></operator> <name pos:line="85" pos:column="15">socksproxy<pos:position pos:line="85" pos:column="25"/></name></expr>)<pos:position pos:line="85" pos:column="26"/></condition><then pos:line="85" pos:column="26"> <block pos:line="85" pos:column="27">{
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><name pos:line="86" pos:column="8">proxy<pos:position pos:line="86" pos:column="13"/></name></expr>)<pos:position pos:line="86" pos:column="14"/></condition><then pos:line="86" pos:column="14"> <block pos:line="86" pos:column="15">{
      <expr_stmt><expr><name pos:line="87" pos:column="7">result<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <call><name pos:line="87" pos:column="16">parse_proxy<pos:position pos:line="87" pos:column="27"/></name><argument_list pos:line="87" pos:column="27">(<argument><expr><name pos:line="87" pos:column="28">data<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="34">conn<pos:position pos:line="87" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="40">proxy<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="47">conn<pos:position pos:line="87" pos:column="51"/></name><operator pos:line="87" pos:column="51">-&gt;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="53">http_proxy<pos:position pos:line="87" pos:column="63"/></name><operator pos:line="87" pos:column="63">.<pos:position pos:line="87" pos:column="64"/></operator><name pos:line="87" pos:column="64">proxytype<pos:position pos:line="87" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">Curl_safefree<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">proxy<pos:position pos:line="88" pos:column="26"/></name></expr></argument>)<pos:position pos:line="88" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt> <comment type="block" pos:line="88" pos:column="29">/* parse_proxy copies the proxy string */</comment>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">result<pos:position pos:line="89" pos:column="16"/></name></expr>)<pos:position pos:line="89" pos:column="17"/></condition><then pos:line="89" pos:column="17">
        <block type="pseudo"><goto pos:line="90" pos:column="9">goto <name pos:line="90" pos:column="14">out<pos:position pos:line="90" pos:column="17"/></name>;<pos:position pos:line="90" pos:column="18"/></goto></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><name pos:line="93" pos:column="8">socksproxy<pos:position pos:line="93" pos:column="18"/></name></expr>)<pos:position pos:line="93" pos:column="19"/></condition><then pos:line="93" pos:column="19"> <block pos:line="93" pos:column="20">{
      <expr_stmt><expr><name pos:line="94" pos:column="7">result<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <call><name pos:line="94" pos:column="16">parse_proxy<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">data<pos:position pos:line="94" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="34">conn<pos:position pos:line="94" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="40">socksproxy<pos:position pos:line="94" pos:column="50"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="95" pos:column="28">conn<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">socks_proxy<pos:position pos:line="95" pos:column="45"/></name><operator pos:line="95" pos:column="45">.<pos:position pos:line="95" pos:column="46"/></operator><name pos:line="95" pos:column="46">proxytype<pos:position pos:line="95" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
      <comment type="block" pos:line="96" pos:column="7">/* parse_proxy copies the socks proxy string */</comment>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">Curl_safefree<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">socksproxy<pos:position pos:line="97" pos:column="31"/></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>
      <if pos:line="98" pos:column="7">if<condition pos:line="98" pos:column="9">(<expr><name pos:line="98" pos:column="10">result<pos:position pos:line="98" pos:column="16"/></name></expr>)<pos:position pos:line="98" pos:column="17"/></condition><then pos:line="98" pos:column="17">
        <block type="pseudo"><goto pos:line="99" pos:column="9">goto <name pos:line="99" pos:column="14">out<pos:position pos:line="99" pos:column="17"/></name>;<pos:position pos:line="99" pos:column="18"/></goto></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">conn<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">-&gt;<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="14">http_proxy<pos:position pos:line="102" pos:column="24"/></name><operator pos:line="102" pos:column="24">.<pos:position pos:line="102" pos:column="25"/></operator><name pos:line="102" pos:column="25">host<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">.<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">rawalloc<pos:position pos:line="102" pos:column="38"/></name></name></expr>)<pos:position pos:line="102" pos:column="39"/></condition><then pos:line="102" pos:column="39"> <block pos:line="102" pos:column="40">{
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">CURL_DISABLE_HTTP<pos:position pos:line="103" pos:column="25"/></name></cpp:ifdef>
      <comment type="block" pos:line="104" pos:column="7">/* asking for a HTTP proxy is a bit funny when HTTP is disabled... */</comment>
      <expr_stmt><expr><name pos:line="105" pos:column="7">result<pos:position pos:line="105" pos:column="13"/></name> <operator pos:line="105" pos:column="14">=<pos:position pos:line="105" pos:column="15"/></operator> <name pos:line="105" pos:column="16">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="105" pos:column="42"/></name></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>
      <goto pos:line="106" pos:column="7">goto <name pos:line="106" pos:column="12">out<pos:position pos:line="106" pos:column="15"/></name>;<pos:position pos:line="106" pos:column="16"/></goto>
<cpp:else pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">else<pos:position pos:line="107" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="108" pos:column="7">/* force this connection's protocol to become HTTP if compatible */</comment>
      <if pos:line="109" pos:column="7">if<condition pos:line="109" pos:column="9">(<expr><operator pos:line="109" pos:column="10">!<pos:position pos:line="109" pos:column="11"/></operator><operator pos:line="109" pos:column="11">(<pos:position pos:line="109" pos:column="12"/></operator><name><name pos:line="109" pos:column="12">conn<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">handler<pos:position pos:line="109" pos:column="25"/></name><operator pos:line="109" pos:column="25">-&gt;<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="27">protocol<pos:position pos:line="109" pos:column="35"/></name></name> <operator pos:line="109" pos:column="36">&amp;<pos:position pos:line="109" pos:column="41"/></operator> <name pos:line="109" pos:column="38">PROTO_FAMILY_HTTP<pos:position pos:line="109" pos:column="55"/></name><operator pos:line="109" pos:column="55">)<pos:position pos:line="109" pos:column="56"/></operator></expr>)<pos:position pos:line="109" pos:column="57"/></condition><then pos:line="109" pos:column="57"> <block pos:line="109" pos:column="58">{
        <if pos:line="110" pos:column="9">if<condition pos:line="110" pos:column="11">(<expr><operator pos:line="110" pos:column="12">(<pos:position pos:line="110" pos:column="13"/></operator><name><name pos:line="110" pos:column="13">conn<pos:position pos:line="110" pos:column="17"/></name><operator pos:line="110" pos:column="17">-&gt;<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="19">handler<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">-&gt;<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="28">flags<pos:position pos:line="110" pos:column="33"/></name></name> <operator pos:line="110" pos:column="34">&amp;<pos:position pos:line="110" pos:column="39"/></operator> <name pos:line="110" pos:column="36">PROTOPT_PROXY_AS_HTTP<pos:position pos:line="110" pos:column="57"/></name><operator pos:line="110" pos:column="57">)<pos:position pos:line="110" pos:column="58"/></operator> <operator pos:line="110" pos:column="59">&amp;&amp;<pos:position pos:line="110" pos:column="69"/></operator>
           <operator pos:line="111" pos:column="12">!<pos:position pos:line="111" pos:column="13"/></operator><name><name pos:line="111" pos:column="13">conn<pos:position pos:line="111" pos:column="17"/></name><operator pos:line="111" pos:column="17">-&gt;<pos:position pos:line="111" pos:column="22"/></operator><name pos:line="111" pos:column="19">bits<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">.<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">tunnel_proxy<pos:position pos:line="111" pos:column="36"/></name></name></expr>)<pos:position pos:line="111" pos:column="37"/></condition><then pos:line="111" pos:column="37">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="112" pos:column="11">conn<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">-&gt;<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="17">handler<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <operator pos:line="112" pos:column="27">&amp;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="28">Curl_handler_http<pos:position pos:line="112" pos:column="45"/></name></expr>;<pos:position pos:line="112" pos:column="46"/></expr_stmt></block></then>
        <else pos:line="113" pos:column="9">else
          <comment type="block" pos:line="114" pos:column="11">/* if not converting to HTTP over the proxy, enforce tunneling */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="115" pos:column="11">conn<pos:position pos:line="115" pos:column="15"/></name><operator pos:line="115" pos:column="15">-&gt;<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="17">bits<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">.<pos:position pos:line="115" pos:column="22"/></operator><name pos:line="115" pos:column="22">tunnel_proxy<pos:position pos:line="115" pos:column="34"/></name></name> <operator pos:line="115" pos:column="35">=<pos:position pos:line="115" pos:column="36"/></operator> <name pos:line="115" pos:column="37">TRUE<pos:position pos:line="115" pos:column="41"/></name></expr>;<pos:position pos:line="115" pos:column="42"/></expr_stmt></block></else></if>
      }<pos:position pos:line="116" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="117" pos:column="7">conn<pos:position pos:line="117" pos:column="11"/></name><operator pos:line="117" pos:column="11">-&gt;<pos:position pos:line="117" pos:column="16"/></operator><name pos:line="117" pos:column="13">bits<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">.<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="18">httpproxy<pos:position pos:line="117" pos:column="27"/></name></name> <operator pos:line="117" pos:column="28">=<pos:position pos:line="117" pos:column="29"/></operator> <name pos:line="117" pos:column="30">TRUE<pos:position pos:line="117" pos:column="34"/></name></expr>;<pos:position pos:line="117" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="119" pos:column="6"/></block></then>
    <else pos:line="120" pos:column="5">else <block pos:line="120" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="121" pos:column="7">conn<pos:position pos:line="121" pos:column="11"/></name><operator pos:line="121" pos:column="11">-&gt;<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="13">bits<pos:position pos:line="121" pos:column="17"/></name><operator pos:line="121" pos:column="17">.<pos:position pos:line="121" pos:column="18"/></operator><name pos:line="121" pos:column="18">httpproxy<pos:position pos:line="121" pos:column="27"/></name></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <name pos:line="121" pos:column="30">FALSE<pos:position pos:line="121" pos:column="35"/></name></expr>;<pos:position pos:line="121" pos:column="36"/></expr_stmt> <comment type="block" pos:line="121" pos:column="37">/* not a HTTP proxy */</comment>
      <expr_stmt><expr><name><name pos:line="122" pos:column="7">conn<pos:position pos:line="122" pos:column="11"/></name><operator pos:line="122" pos:column="11">-&gt;<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="13">bits<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">.<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="18">tunnel_proxy<pos:position pos:line="122" pos:column="30"/></name></name> <operator pos:line="122" pos:column="31">=<pos:position pos:line="122" pos:column="32"/></operator> <name pos:line="122" pos:column="33">FALSE<pos:position pos:line="122" pos:column="38"/></name></expr>;<pos:position pos:line="122" pos:column="39"/></expr_stmt> <comment type="block" pos:line="122" pos:column="40">/* no tunneling if not HTTP */</comment>
    }<pos:position pos:line="123" pos:column="6"/></block></else></if>

    <if pos:line="125" pos:column="5">if<condition pos:line="125" pos:column="7">(<expr><name><name pos:line="125" pos:column="8">conn<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">-&gt;<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="14">socks_proxy<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">.<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="26">host<pos:position pos:line="125" pos:column="30"/></name><operator pos:line="125" pos:column="30">.<pos:position pos:line="125" pos:column="31"/></operator><name pos:line="125" pos:column="31">rawalloc<pos:position pos:line="125" pos:column="39"/></name></name></expr>)<pos:position pos:line="125" pos:column="40"/></condition><then pos:line="125" pos:column="40"> <block pos:line="125" pos:column="41">{
      <if pos:line="126" pos:column="7">if<condition pos:line="126" pos:column="9">(<expr><operator pos:line="126" pos:column="10">!<pos:position pos:line="126" pos:column="11"/></operator><name><name pos:line="126" pos:column="11">conn<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">-&gt;<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="17">http_proxy<pos:position pos:line="126" pos:column="27"/></name><operator pos:line="126" pos:column="27">.<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="28">host<pos:position pos:line="126" pos:column="32"/></name><operator pos:line="126" pos:column="32">.<pos:position pos:line="126" pos:column="33"/></operator><name pos:line="126" pos:column="33">rawalloc<pos:position pos:line="126" pos:column="41"/></name></name></expr>)<pos:position pos:line="126" pos:column="42"/></condition><then pos:line="126" pos:column="42"> <block pos:line="126" pos:column="43">{
        <comment type="block" pos:line="127" pos:column="9">/* once a socks proxy */</comment>
        <if pos:line="128" pos:column="9">if<condition pos:line="128" pos:column="11">(<expr><operator pos:line="128" pos:column="12">!<pos:position pos:line="128" pos:column="13"/></operator><name><name pos:line="128" pos:column="13">conn<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">-&gt;<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="19">socks_proxy<pos:position pos:line="128" pos:column="30"/></name><operator pos:line="128" pos:column="30">.<pos:position pos:line="128" pos:column="31"/></operator><name pos:line="128" pos:column="31">user<pos:position pos:line="128" pos:column="35"/></name></name></expr>)<pos:position pos:line="128" pos:column="36"/></condition><then pos:line="128" pos:column="36"> <block pos:line="128" pos:column="37">{
          <expr_stmt><expr><name><name pos:line="129" pos:column="11">conn<pos:position pos:line="129" pos:column="15"/></name><operator pos:line="129" pos:column="15">-&gt;<pos:position pos:line="129" pos:column="20"/></operator><name pos:line="129" pos:column="17">socks_proxy<pos:position pos:line="129" pos:column="28"/></name><operator pos:line="129" pos:column="28">.<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="29">user<pos:position pos:line="129" pos:column="33"/></name></name> <operator pos:line="129" pos:column="34">=<pos:position pos:line="129" pos:column="35"/></operator> <name><name pos:line="129" pos:column="36">conn<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">-&gt;<pos:position pos:line="129" pos:column="45"/></operator><name pos:line="129" pos:column="42">http_proxy<pos:position pos:line="129" pos:column="52"/></name><operator pos:line="129" pos:column="52">.<pos:position pos:line="129" pos:column="53"/></operator><name pos:line="129" pos:column="53">user<pos:position pos:line="129" pos:column="57"/></name></name></expr>;<pos:position pos:line="129" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="130" pos:column="11">conn<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">http_proxy<pos:position pos:line="130" pos:column="27"/></name><operator pos:line="130" pos:column="27">.<pos:position pos:line="130" pos:column="28"/></operator><name pos:line="130" pos:column="28">user<pos:position pos:line="130" pos:column="32"/></name></name> <operator pos:line="130" pos:column="33">=<pos:position pos:line="130" pos:column="34"/></operator> <name pos:line="130" pos:column="35">NULL<pos:position pos:line="130" pos:column="39"/></name></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="131" pos:column="11">Curl_safefree<pos:position pos:line="131" pos:column="24"/></name><argument_list pos:line="131" pos:column="24">(<argument><expr><name><name pos:line="131" pos:column="25">conn<pos:position pos:line="131" pos:column="29"/></name><operator pos:line="131" pos:column="29">-&gt;<pos:position pos:line="131" pos:column="34"/></operator><name pos:line="131" pos:column="31">socks_proxy<pos:position pos:line="131" pos:column="42"/></name><operator pos:line="131" pos:column="42">.<pos:position pos:line="131" pos:column="43"/></operator><name pos:line="131" pos:column="43">passwd<pos:position pos:line="131" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="51"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="132" pos:column="11">conn<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">-&gt;<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="17">socks_proxy<pos:position pos:line="132" pos:column="28"/></name><operator pos:line="132" pos:column="28">.<pos:position pos:line="132" pos:column="29"/></operator><name pos:line="132" pos:column="29">passwd<pos:position pos:line="132" pos:column="35"/></name></name> <operator pos:line="132" pos:column="36">=<pos:position pos:line="132" pos:column="37"/></operator> <name><name pos:line="132" pos:column="38">conn<pos:position pos:line="132" pos:column="42"/></name><operator pos:line="132" pos:column="42">-&gt;<pos:position pos:line="132" pos:column="47"/></operator><name pos:line="132" pos:column="44">http_proxy<pos:position pos:line="132" pos:column="54"/></name><operator pos:line="132" pos:column="54">.<pos:position pos:line="132" pos:column="55"/></operator><name pos:line="132" pos:column="55">passwd<pos:position pos:line="132" pos:column="61"/></name></name></expr>;<pos:position pos:line="132" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="133" pos:column="11">conn<pos:position pos:line="133" pos:column="15"/></name><operator pos:line="133" pos:column="15">-&gt;<pos:position pos:line="133" pos:column="20"/></operator><name pos:line="133" pos:column="17">http_proxy<pos:position pos:line="133" pos:column="27"/></name><operator pos:line="133" pos:column="27">.<pos:position pos:line="133" pos:column="28"/></operator><name pos:line="133" pos:column="28">passwd<pos:position pos:line="133" pos:column="34"/></name></name> <operator pos:line="133" pos:column="35">=<pos:position pos:line="133" pos:column="36"/></operator> <name pos:line="133" pos:column="37">NULL<pos:position pos:line="133" pos:column="41"/></name></expr>;<pos:position pos:line="133" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if>
      }<pos:position pos:line="135" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="136" pos:column="7">conn<pos:position pos:line="136" pos:column="11"/></name><operator pos:line="136" pos:column="11">-&gt;<pos:position pos:line="136" pos:column="16"/></operator><name pos:line="136" pos:column="13">bits<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">.<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="18">socksproxy<pos:position pos:line="136" pos:column="28"/></name></name> <operator pos:line="136" pos:column="29">=<pos:position pos:line="136" pos:column="30"/></operator> <name pos:line="136" pos:column="31">TRUE<pos:position pos:line="136" pos:column="35"/></name></expr>;<pos:position pos:line="136" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then>
    <else pos:line="138" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="139" pos:column="7">conn<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">-&gt;<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="13">bits<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">.<pos:position pos:line="139" pos:column="18"/></operator><name pos:line="139" pos:column="18">socksproxy<pos:position pos:line="139" pos:column="28"/></name></name> <operator pos:line="139" pos:column="29">=<pos:position pos:line="139" pos:column="30"/></operator> <name pos:line="139" pos:column="31">FALSE<pos:position pos:line="139" pos:column="36"/></name></expr>;<pos:position pos:line="139" pos:column="37"/></expr_stmt></block></else></if> <comment type="block" pos:line="139" pos:column="38">/* not a socks proxy */</comment>
  }<pos:position pos:line="140" pos:column="4"/></block></then>
  <else pos:line="141" pos:column="3">else <block pos:line="141" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="142" pos:column="5">conn<pos:position pos:line="142" pos:column="9"/></name><operator pos:line="142" pos:column="9">-&gt;<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="11">bits<pos:position pos:line="142" pos:column="15"/></name><operator pos:line="142" pos:column="15">.<pos:position pos:line="142" pos:column="16"/></operator><name pos:line="142" pos:column="16">socksproxy<pos:position pos:line="142" pos:column="26"/></name></name> <operator pos:line="142" pos:column="27">=<pos:position pos:line="142" pos:column="28"/></operator> <name pos:line="142" pos:column="29">FALSE<pos:position pos:line="142" pos:column="34"/></name></expr>;<pos:position pos:line="142" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="143" pos:column="5">conn<pos:position pos:line="143" pos:column="9"/></name><operator pos:line="143" pos:column="9">-&gt;<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="11">bits<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">.<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">httpproxy<pos:position pos:line="143" pos:column="25"/></name></name> <operator pos:line="143" pos:column="26">=<pos:position pos:line="143" pos:column="27"/></operator> <name pos:line="143" pos:column="28">FALSE<pos:position pos:line="143" pos:column="33"/></name></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="144" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="145" pos:column="3">conn<pos:position pos:line="145" pos:column="7"/></name><operator pos:line="145" pos:column="7">-&gt;<pos:position pos:line="145" pos:column="12"/></operator><name pos:line="145" pos:column="9">bits<pos:position pos:line="145" pos:column="13"/></name><operator pos:line="145" pos:column="13">.<pos:position pos:line="145" pos:column="14"/></operator><name pos:line="145" pos:column="14">proxy<pos:position pos:line="145" pos:column="19"/></name></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <name><name pos:line="145" pos:column="22">conn<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">-&gt;<pos:position pos:line="145" pos:column="31"/></operator><name pos:line="145" pos:column="28">bits<pos:position pos:line="145" pos:column="32"/></name><operator pos:line="145" pos:column="32">.<pos:position pos:line="145" pos:column="33"/></operator><name pos:line="145" pos:column="33">httpproxy<pos:position pos:line="145" pos:column="42"/></name></name> <operator pos:line="145" pos:column="43">||<pos:position pos:line="145" pos:column="45"/></operator> <name><name pos:line="145" pos:column="46">conn<pos:position pos:line="145" pos:column="50"/></name><operator pos:line="145" pos:column="50">-&gt;<pos:position pos:line="145" pos:column="55"/></operator><name pos:line="145" pos:column="52">bits<pos:position pos:line="145" pos:column="56"/></name><operator pos:line="145" pos:column="56">.<pos:position pos:line="145" pos:column="57"/></operator><name pos:line="145" pos:column="57">socksproxy<pos:position pos:line="145" pos:column="67"/></name></name></expr>;<pos:position pos:line="145" pos:column="68"/></expr_stmt>

  <if pos:line="147" pos:column="3">if<condition pos:line="147" pos:column="5">(<expr><operator pos:line="147" pos:column="6">!<pos:position pos:line="147" pos:column="7"/></operator><name><name pos:line="147" pos:column="7">conn<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">bits<pos:position pos:line="147" pos:column="17"/></name><operator pos:line="147" pos:column="17">.<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">proxy<pos:position pos:line="147" pos:column="23"/></name></name></expr>)<pos:position pos:line="147" pos:column="24"/></condition><then pos:line="147" pos:column="24"> <block pos:line="147" pos:column="25">{
    <comment type="block" pos:line="148" pos:column="5">/* we aren't using the proxy after all... */</comment>
    <expr_stmt><expr><name><name pos:line="149" pos:column="5">conn<pos:position pos:line="149" pos:column="9"/></name><operator pos:line="149" pos:column="9">-&gt;<pos:position pos:line="149" pos:column="14"/></operator><name pos:line="149" pos:column="11">bits<pos:position pos:line="149" pos:column="15"/></name><operator pos:line="149" pos:column="15">.<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">proxy<pos:position pos:line="149" pos:column="21"/></name></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <name pos:line="149" pos:column="24">FALSE<pos:position pos:line="149" pos:column="29"/></name></expr>;<pos:position pos:line="149" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="150" pos:column="5">conn<pos:position pos:line="150" pos:column="9"/></name><operator pos:line="150" pos:column="9">-&gt;<pos:position pos:line="150" pos:column="14"/></operator><name pos:line="150" pos:column="11">bits<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">.<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="16">httpproxy<pos:position pos:line="150" pos:column="25"/></name></name> <operator pos:line="150" pos:column="26">=<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="28">FALSE<pos:position pos:line="150" pos:column="33"/></name></expr>;<pos:position pos:line="150" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="151" pos:column="5">conn<pos:position pos:line="151" pos:column="9"/></name><operator pos:line="151" pos:column="9">-&gt;<pos:position pos:line="151" pos:column="14"/></operator><name pos:line="151" pos:column="11">bits<pos:position pos:line="151" pos:column="15"/></name><operator pos:line="151" pos:column="15">.<pos:position pos:line="151" pos:column="16"/></operator><name pos:line="151" pos:column="16">socksproxy<pos:position pos:line="151" pos:column="26"/></name></name> <operator pos:line="151" pos:column="27">=<pos:position pos:line="151" pos:column="28"/></operator> <name pos:line="151" pos:column="29">FALSE<pos:position pos:line="151" pos:column="34"/></name></expr>;<pos:position pos:line="151" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="152" pos:column="5">conn<pos:position pos:line="152" pos:column="9"/></name><operator pos:line="152" pos:column="9">-&gt;<pos:position pos:line="152" pos:column="14"/></operator><name pos:line="152" pos:column="11">bits<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">.<pos:position pos:line="152" pos:column="16"/></operator><name pos:line="152" pos:column="16">proxy_user_passwd<pos:position pos:line="152" pos:column="33"/></name></name> <operator pos:line="152" pos:column="34">=<pos:position pos:line="152" pos:column="35"/></operator> <name pos:line="152" pos:column="36">FALSE<pos:position pos:line="152" pos:column="41"/></name></expr>;<pos:position pos:line="152" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="153" pos:column="5">conn<pos:position pos:line="153" pos:column="9"/></name><operator pos:line="153" pos:column="9">-&gt;<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="11">bits<pos:position pos:line="153" pos:column="15"/></name><operator pos:line="153" pos:column="15">.<pos:position pos:line="153" pos:column="16"/></operator><name pos:line="153" pos:column="16">tunnel_proxy<pos:position pos:line="153" pos:column="28"/></name></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <name pos:line="153" pos:column="31">FALSE<pos:position pos:line="153" pos:column="36"/></name></expr>;<pos:position pos:line="153" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="154" pos:column="4"/></block></then></if>

<label><name pos:line="156" pos:column="1">out<pos:position pos:line="156" pos:column="4"/></name>:<pos:position pos:line="156" pos:column="5"/></label>

  <expr_stmt><expr><call><name pos:line="158" pos:column="3">free<pos:position pos:line="158" pos:column="7"/></name><argument_list pos:line="158" pos:column="7">(<argument><expr><name pos:line="158" pos:column="8">socksproxy<pos:position pos:line="158" pos:column="18"/></name></expr></argument>)<pos:position pos:line="158" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="159" pos:column="3">free<pos:position pos:line="159" pos:column="7"/></name><argument_list pos:line="159" pos:column="7">(<argument><expr><name pos:line="159" pos:column="8">proxy<pos:position pos:line="159" pos:column="13"/></name></expr></argument>)<pos:position pos:line="159" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="15"/></expr_stmt>
  <return pos:line="160" pos:column="3">return <expr><name pos:line="160" pos:column="10">result<pos:position pos:line="160" pos:column="16"/></name></expr>;<pos:position pos:line="160" pos:column="17"/></return>
}<pos:position pos:line="161" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_83.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> 
<name pos:line="2" pos:column="1">Transfer<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">CURLconnect<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">c_conn<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>,
         <comment type="block" pos:line="3" pos:column="10">/* READ stuff */</comment>
	  <parameter><decl><type><name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">sockfd<pos:position pos:line="4" pos:column="21"/></name></decl></parameter>,		<comment type="block" pos:line="4" pos:column="33">/* socket to read from or -1 */</comment>
	  <parameter><decl><type><name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">size<pos:position pos:line="5" pos:column="19"/></name></decl></parameter>,		<comment type="block" pos:line="5" pos:column="33">/* -1 if unknown at this point */</comment>
	  <parameter><decl><type><name pos:line="6" pos:column="11">bool<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">getheader<pos:position pos:line="6" pos:column="25"/></name></decl></parameter>,	<comment type="block" pos:line="6" pos:column="33">/* TRUE if header parsing is wanted */</comment>
	  <parameter><decl><type><name pos:line="7" pos:column="11">long<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">bytecountp<pos:position pos:line="7" pos:column="27"/></name></decl></parameter>,	<comment type="block" pos:line="7" pos:column="33">/* return number of bytes read or NULL */</comment>
          
          <comment type="block" pos:line="9" pos:column="11">/* WRITE stuff */</comment>
          <parameter><decl><type><name pos:line="10" pos:column="11">int<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">writesockfd<pos:position pos:line="10" pos:column="26"/></name></decl></parameter>,      <comment type="block" pos:line="10" pos:column="33">/* socket to write to, it may very well be
                                   the same we read from. -1 disables */</comment>
          <parameter><decl><type><name pos:line="12" pos:column="11">long<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">writebytecountp<pos:position pos:line="12" pos:column="32"/></name></decl></parameter> <comment type="block" pos:line="12" pos:column="33">/* return number of bytes written or NULL */</comment>
          )<pos:position pos:line="13" pos:column="12"/></parameter_list>
<block pos:line="14" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">connectdata<pos:position pos:line="15" pos:column="21"/></name></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">conn<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><operator pos:line="15" pos:column="30">(<pos:position pos:line="15" pos:column="31"/></operator>struct <name pos:line="15" pos:column="38">connectdata<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></operator><operator pos:line="15" pos:column="51">)<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">c_conn<pos:position pos:line="15" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="59"/></decl_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">conn<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></return></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* now copy all input parameters */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">conn<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">sockfd<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">sockfd<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">conn<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">size<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">size<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">conn<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">getheader<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">getheader<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">conn<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">bytecountp<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">bytecountp<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">conn<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">writesockfd<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">writesockfd<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">conn<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">writebytecountp<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">writebytecountp<pos:position pos:line="25" pos:column="42"/></name></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>

  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">CURLE_OK<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>

}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

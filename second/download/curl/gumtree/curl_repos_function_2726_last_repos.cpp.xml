<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2726_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Curl_gtls_shutdown<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">sockindex<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ssl_connect_data<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">connssl<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name><name pos:line="3" pos:column="39">conn<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">ssl<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[<expr><name pos:line="3" pos:column="49">sockindex<pos:position pos:line="3" pos:column="58"/></name></expr>]<pos:position pos:line="3" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">result<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">retval<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">done<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buf<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><literal type="number" pos:line="8" pos:column="12">120<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* This has only been tested on the proftpd server, and the mod_tls code
     sends a close notify alert without waiting for a close notify alert in
     response. Thus we wait for a close notify alert from the server, but
     we do not send one. Let's hope other servers do the same... */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">data<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">set<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">ftp_ccc<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">CURLFTPSSL_CCC_ACTIVE<pos:position pos:line="15" pos:column="48"/></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">gnutls_bye<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name><name pos:line="16" pos:column="18">BACKEND<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">session<pos:position pos:line="16" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">GNUTLS_SHUT_WR<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt></block></then></if>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name><name pos:line="18" pos:column="6">BACKEND<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">session<pos:position pos:line="18" pos:column="22"/></name></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
    <while pos:line="19" pos:column="5">while<condition pos:line="19" pos:column="10">(<expr><operator pos:line="19" pos:column="11">!<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">done<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition> <block pos:line="19" pos:column="18">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">int<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">what<pos:position pos:line="20" pos:column="15"/></name> <init pos:line="20" pos:column="16">= <expr><call><name pos:line="20" pos:column="18">SOCKET_READABLE<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">conn<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">sock<pos:position pos:line="20" pos:column="44"/></name><index pos:line="20" pos:column="44">[<expr><name pos:line="20" pos:column="45">sockindex<pos:position pos:line="20" pos:column="54"/></name></expr>]<pos:position pos:line="20" pos:column="55"/></index></name></expr></argument>,
                                 <argument><expr><name pos:line="21" pos:column="34">SSL_SHUTDOWN_TIMEOUT<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="56"/></decl_stmt>
      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><name pos:line="22" pos:column="10">what<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">&gt;<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <comment type="block" pos:line="23" pos:column="9">/* Something to read, let's do it and hope that it is the close
           notify alert from the server */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">result<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">gnutls_record_recv<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name><name pos:line="25" pos:column="37">BACKEND<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">session<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="26" pos:column="37">buf<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="42">sizeof<argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">buf<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
        <switch pos:line="27" pos:column="9">switch<condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">result<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition> <block pos:line="27" pos:column="24">{
        <case pos:line="28" pos:column="9">case <expr><literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>:<pos:position pos:line="28" pos:column="16"/></case>
          <comment type="block" pos:line="29" pos:column="11">/* This is the expected response. There was no data but only
             the close notify alert */</comment>
          <expr_stmt><expr><name pos:line="31" pos:column="11">done<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="18">1<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
          <break pos:line="32" pos:column="11">break;<pos:position pos:line="32" pos:column="17"/></break>
        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">GNUTLS_E_AGAIN<pos:position pos:line="33" pos:column="28"/></name></expr>:<pos:position pos:line="33" pos:column="29"/></case>
        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">GNUTLS_E_INTERRUPTED<pos:position pos:line="34" pos:column="34"/></name></expr>:<pos:position pos:line="34" pos:column="35"/></case>
          <expr_stmt><expr><call><name pos:line="35" pos:column="11">infof<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">data<pos:position pos:line="35" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"GNUTLS_E_AGAIN || GNUTLS_E_INTERRUPTED\n"<pos:position pos:line="35" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
          <break pos:line="36" pos:column="11">break;<pos:position pos:line="36" pos:column="17"/></break>
        <default pos:line="37" pos:column="9">default:<pos:position pos:line="37" pos:column="17"/></default>
          <expr_stmt><expr><name pos:line="38" pos:column="11">retval<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">-<pos:position pos:line="38" pos:column="21"/></operator><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name pos:line="39" pos:column="11">done<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
          <break pos:line="40" pos:column="11">break;<pos:position pos:line="40" pos:column="17"/></break>
        }<pos:position pos:line="41" pos:column="10"/></block></switch>
      }<pos:position pos:line="42" pos:column="8"/></block></then>
      <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if<condition pos:line="43" pos:column="14">(<expr><literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal> <operator pos:line="43" pos:column="17">==<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">what<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25"> <block pos:line="43" pos:column="26">{
        <comment type="block" pos:line="44" pos:column="9">/* timeout */</comment>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">failf<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">data<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"SSL shutdown timeout"<pos:position pos:line="45" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">done<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></expr_stmt>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if></elseif>
      <else pos:line="49" pos:column="7">else <block pos:line="49" pos:column="12">{
        <comment type="block" pos:line="50" pos:column="9">/* anything that gets here is fatally bad */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">failf<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">data<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="21">"select/poll on SSL socket, errno: %d"<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">SOCKERRNO<pos:position pos:line="51" pos:column="70"/></name></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">retval<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">-<pos:position pos:line="52" pos:column="19"/></operator><literal type="number" pos:line="52" pos:column="19">1<pos:position pos:line="52" pos:column="20"/></literal></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">done<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">gnutls_deinit<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name><name pos:line="56" pos:column="19">BACKEND<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">session<pos:position pos:line="56" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">gnutls_certificate_free_credentials<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><name><name pos:line="58" pos:column="39">BACKEND<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">cred<pos:position pos:line="58" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>

<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef<pos:position pos:line="60" pos:column="7"/></cpp:directive> <name pos:line="60" pos:column="8">USE_TLS_SRP<pos:position pos:line="60" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><call><name pos:line="61" pos:column="6">SSL_SET_OPTION<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">authtype<pos:position pos:line="61" pos:column="29"/></name></expr></argument>)<pos:position pos:line="61" pos:column="30"/></argument_list></call> <operator pos:line="61" pos:column="31">==<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">CURL_TLSAUTH_SRP<pos:position pos:line="61" pos:column="50"/></name>
     <operator pos:line="62" pos:column="6">&amp;&amp;<pos:position pos:line="62" pos:column="16"/></operator> <call><name pos:line="62" pos:column="9">SSL_SET_OPTION<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">username<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call> <operator pos:line="62" pos:column="34">!=<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">NULL<pos:position pos:line="62" pos:column="41"/></name></expr>)<pos:position pos:line="62" pos:column="42"/></condition><then pos:line="62" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="5">gnutls_srp_free_client_credentials<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name><name pos:line="63" pos:column="40">BACKEND<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">-&gt;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="49">srp_client_cred<pos:position pos:line="63" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt></block></then></if>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="66" pos:column="3">BACKEND<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">cred<pos:position pos:line="66" pos:column="16"/></name></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <name pos:line="66" pos:column="19">NULL<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="67" pos:column="3">BACKEND<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">session<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <name pos:line="67" pos:column="22">NULL<pos:position pos:line="67" pos:column="26"/></name></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>

  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">retval<pos:position pos:line="69" pos:column="16"/></name></expr>;<pos:position pos:line="69" pos:column="17"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

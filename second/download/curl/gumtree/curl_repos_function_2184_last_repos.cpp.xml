<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2184_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">printsub<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">Curl_easy<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">direction<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,             <comment type="block" pos:line="2" pos:column="49">/* '&lt;' or '&gt;' */</comment>
                     <parameter><decl><type><name pos:line="3" pos:column="22">unsigned<pos:position pos:line="3" pos:column="30"/></name> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">pointer<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,    <comment type="block" pos:line="3" pos:column="49">/* where suboption data is */</comment>
                     <parameter><decl><type><name pos:line="4" pos:column="22">size_t<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">length<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="36"/></parameter_list>             <comment type="block" pos:line="4" pos:column="49">/* length of suboption data */</comment>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">set<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">verbose<pos:position pos:line="8" pos:column="23"/></name></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><name pos:line="9" pos:column="8">direction<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">infof<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">data<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"%s IAC SB "<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="10" pos:column="33">(<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">direction<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">==<pos:position pos:line="10" pos:column="46"/></operator> <literal type="char" pos:line="10" pos:column="47">'&lt;'<pos:position pos:line="10" pos:column="53"/></literal><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator></expr>?<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <expr><literal type="string" pos:line="10" pos:column="53">"RCVD"<pos:position pos:line="10" pos:column="59"/></literal></expr></then><else pos:line="10" pos:column="59">:<expr><literal type="string" pos:line="10" pos:column="60">"SENT"<pos:position pos:line="10" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">length<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&gt;=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">j<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name><name pos:line="14" pos:column="13">pointer<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><name pos:line="14" pos:column="21">length<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-<pos:position pos:line="14" pos:column="28"/></operator><literal type="number" pos:line="14" pos:column="28">2<pos:position pos:line="14" pos:column="29"/></literal></expr>]<pos:position pos:line="14" pos:column="30"/></index></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">j<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">pointer<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><name pos:line="15" pos:column="21">length<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-<pos:position pos:line="15" pos:column="28"/></operator><literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr>]<pos:position pos:line="15" pos:column="30"/></index></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>

        <if pos:line="17" pos:column="9">if<condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">CURL_IAC<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">j<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">!=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">CURL_SE<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
          <expr_stmt><expr><call><name pos:line="18" pos:column="11">infof<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">data<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"(terminated by "<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
          <if pos:line="19" pos:column="11">if<condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">CURL_TELOPT_OK<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">infof<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">data<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"%s "<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="32">CURL_TELOPT<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">i<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></then>
          <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if<condition pos:line="21" pos:column="18">(<expr><call><name pos:line="21" pos:column="19">CURL_TELCMD_OK<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">i<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">infof<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"%s "<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="32">CURL_TELCMD<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt></block></then></if></elseif>
          <else pos:line="23" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">infof<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">data<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="25">"%u "<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">i<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt></block></else></if>
          <if pos:line="25" pos:column="11">if<condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">CURL_TELOPT_OK<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">j<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">infof<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">data<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"%s"<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="31">CURL_TELOPT<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name pos:line="26" pos:column="43">j<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then>
          <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if<condition pos:line="27" pos:column="18">(<expr><call><name pos:line="27" pos:column="19">CURL_TELCMD_OK<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">j<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">infof<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">data<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"%s"<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="31">CURL_TELCMD<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">j<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt></block></then></if></elseif>
          <else pos:line="29" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="13">infof<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">data<pos:position pos:line="30" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="25">"%d"<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">j<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt></block></else></if>
          <expr_stmt><expr><call><name pos:line="31" pos:column="11">infof<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">data<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">", not IAC SE!) "<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="34" pos:column="7">length<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">-=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">2<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">length<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">&lt;<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19"> <block pos:line="36" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">infof<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">data<pos:position pos:line="37" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"(Empty suboption?)"<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
      <return pos:line="38" pos:column="7">return;<pos:position pos:line="38" pos:column="14"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><call><name pos:line="41" pos:column="8">CURL_TELOPT_OK<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name><name pos:line="41" pos:column="23">pointer<pos:position pos:line="41" pos:column="30"/></name><index pos:line="41" pos:column="30">[<expr><literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr>]<pos:position pos:line="41" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35"> <block pos:line="41" pos:column="36">{
      <switch pos:line="42" pos:column="7">switch<condition pos:line="42" pos:column="13">(<expr><name><name pos:line="42" pos:column="14">pointer<pos:position pos:line="42" pos:column="21"/></name><index pos:line="42" pos:column="21">[<expr><literal type="number" pos:line="42" pos:column="22">0<pos:position pos:line="42" pos:column="23"/></literal></expr>]<pos:position pos:line="42" pos:column="24"/></index></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition> <block pos:line="42" pos:column="26">{
      <case pos:line="43" pos:column="7">case <expr><name pos:line="43" pos:column="12">CURL_TELOPT_TTYPE<pos:position pos:line="43" pos:column="29"/></name></expr>:<pos:position pos:line="43" pos:column="30"/></case>
      <case pos:line="44" pos:column="7">case <expr><name pos:line="44" pos:column="12">CURL_TELOPT_XDISPLOC<pos:position pos:line="44" pos:column="32"/></name></expr>:<pos:position pos:line="44" pos:column="33"/></case>
      <case pos:line="45" pos:column="7">case <expr><name pos:line="45" pos:column="12">CURL_TELOPT_NEW_ENVIRON<pos:position pos:line="45" pos:column="35"/></name></expr>:<pos:position pos:line="45" pos:column="36"/></case>
      <case pos:line="46" pos:column="7">case <expr><name pos:line="46" pos:column="12">CURL_TELOPT_NAWS<pos:position pos:line="46" pos:column="28"/></name></expr>:<pos:position pos:line="46" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">infof<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">data<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="21">"%s"<pos:position pos:line="47" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="27">CURL_TELOPT<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><name><name pos:line="47" pos:column="39">pointer<pos:position pos:line="47" pos:column="46"/></name><index pos:line="47" pos:column="46">[<expr><literal type="number" pos:line="47" pos:column="47">0<pos:position pos:line="47" pos:column="48"/></literal></expr>]<pos:position pos:line="47" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>
      <default pos:line="49" pos:column="7">default:<pos:position pos:line="49" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">infof<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">data<pos:position pos:line="50" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="21">"%s (unsupported)"<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="41">CURL_TELOPT<pos:position pos:line="50" pos:column="52"/></name><argument_list pos:line="50" pos:column="52">(<argument><expr><name><name pos:line="50" pos:column="53">pointer<pos:position pos:line="50" pos:column="60"/></name><index pos:line="50" pos:column="60">[<expr><literal type="number" pos:line="50" pos:column="61">0<pos:position pos:line="50" pos:column="62"/></literal></expr>]<pos:position pos:line="50" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
        <break pos:line="51" pos:column="9">break;<pos:position pos:line="51" pos:column="15"/></break>
      }<pos:position pos:line="52" pos:column="8"/></block></switch>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">infof<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">data<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="19">"%d (unknown)"<pos:position pos:line="55" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="35">pointer<pos:position pos:line="55" pos:column="42"/></name><index pos:line="55" pos:column="42">[<expr><name pos:line="55" pos:column="43">i<pos:position pos:line="55" pos:column="44"/></name></expr>]<pos:position pos:line="55" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt></block></else></if>

    <switch pos:line="57" pos:column="5">switch<condition pos:line="57" pos:column="11">(<expr><name><name pos:line="57" pos:column="12">pointer<pos:position pos:line="57" pos:column="19"/></name><index pos:line="57" pos:column="19">[<expr><literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr>]<pos:position pos:line="57" pos:column="22"/></index></name></expr>)<pos:position pos:line="57" pos:column="23"/></condition> <block pos:line="57" pos:column="24">{
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">CURL_TELOPT_NAWS<pos:position pos:line="58" pos:column="26"/></name></expr>:<pos:position pos:line="58" pos:column="27"/></case>
      <if pos:line="59" pos:column="7">if<condition pos:line="59" pos:column="9">(<expr><name pos:line="59" pos:column="10">length<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&gt;<pos:position pos:line="59" pos:column="21"/></operator> <literal type="number" pos:line="59" pos:column="19">4<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="9">infof<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">data<pos:position pos:line="60" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="21">"Width: %hu ; Height: %hu"<pos:position pos:line="60" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="49">(<pos:position pos:line="60" pos:column="50"/></operator><name><name pos:line="60" pos:column="50">pointer<pos:position pos:line="60" pos:column="57"/></name><index pos:line="60" pos:column="57">[<expr><literal type="number" pos:line="60" pos:column="58">1<pos:position pos:line="60" pos:column="59"/></literal></expr>]<pos:position pos:line="60" pos:column="60"/></index></name><operator pos:line="60" pos:column="60">&lt;&lt;<pos:position pos:line="60" pos:column="68"/></operator><literal type="number" pos:line="60" pos:column="62">8<pos:position pos:line="60" pos:column="63"/></literal><operator pos:line="60" pos:column="63">)<pos:position pos:line="60" pos:column="64"/></operator> <operator pos:line="60" pos:column="65">|<pos:position pos:line="60" pos:column="66"/></operator> <name><name pos:line="60" pos:column="67">pointer<pos:position pos:line="60" pos:column="74"/></name><index pos:line="60" pos:column="74">[<expr><literal type="number" pos:line="60" pos:column="75">2<pos:position pos:line="60" pos:column="76"/></literal></expr>]<pos:position pos:line="60" pos:column="77"/></index></name></expr></argument>,
              <argument><expr><operator pos:line="61" pos:column="15">(<pos:position pos:line="61" pos:column="16"/></operator><name><name pos:line="61" pos:column="16">pointer<pos:position pos:line="61" pos:column="23"/></name><index pos:line="61" pos:column="23">[<expr><literal type="number" pos:line="61" pos:column="24">3<pos:position pos:line="61" pos:column="25"/></literal></expr>]<pos:position pos:line="61" pos:column="26"/></index></name><operator pos:line="61" pos:column="26">&lt;&lt;<pos:position pos:line="61" pos:column="34"/></operator><literal type="number" pos:line="61" pos:column="28">8<pos:position pos:line="61" pos:column="29"/></literal><operator pos:line="61" pos:column="29">)<pos:position pos:line="61" pos:column="30"/></operator> <operator pos:line="61" pos:column="31">|<pos:position pos:line="61" pos:column="32"/></operator> <name><name pos:line="61" pos:column="33">pointer<pos:position pos:line="61" pos:column="40"/></name><index pos:line="61" pos:column="40">[<expr><literal type="number" pos:line="61" pos:column="41">4<pos:position pos:line="61" pos:column="42"/></literal></expr>]<pos:position pos:line="61" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt></block></then></if>
      <break pos:line="62" pos:column="7">break;<pos:position pos:line="62" pos:column="13"/></break>
    <default pos:line="63" pos:column="5">default:<pos:position pos:line="63" pos:column="13"/></default>
      <switch pos:line="64" pos:column="7">switch<condition pos:line="64" pos:column="13">(<expr><name><name pos:line="64" pos:column="14">pointer<pos:position pos:line="64" pos:column="21"/></name><index pos:line="64" pos:column="21">[<expr><literal type="number" pos:line="64" pos:column="22">1<pos:position pos:line="64" pos:column="23"/></literal></expr>]<pos:position pos:line="64" pos:column="24"/></index></name></expr>)<pos:position pos:line="64" pos:column="25"/></condition> <block pos:line="64" pos:column="26">{
      <case pos:line="65" pos:column="7">case <expr><name pos:line="65" pos:column="12">CURL_TELQUAL_IS<pos:position pos:line="65" pos:column="27"/></name></expr>:<pos:position pos:line="65" pos:column="28"/></case>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">infof<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">data<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="21">" IS"<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>
      <case pos:line="68" pos:column="7">case <expr><name pos:line="68" pos:column="12">CURL_TELQUAL_SEND<pos:position pos:line="68" pos:column="29"/></name></expr>:<pos:position pos:line="68" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">infof<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><name pos:line="69" pos:column="15">data<pos:position pos:line="69" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="21">" SEND"<pos:position pos:line="69" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>
      <case pos:line="71" pos:column="7">case <expr><name pos:line="71" pos:column="12">CURL_TELQUAL_INFO<pos:position pos:line="71" pos:column="29"/></name></expr>:<pos:position pos:line="71" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">infof<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><name pos:line="72" pos:column="15">data<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="21">" INFO/REPLY"<pos:position pos:line="72" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
        <break pos:line="73" pos:column="9">break;<pos:position pos:line="73" pos:column="15"/></break>
      <case pos:line="74" pos:column="7">case <expr><name pos:line="74" pos:column="12">CURL_TELQUAL_NAME<pos:position pos:line="74" pos:column="29"/></name></expr>:<pos:position pos:line="74" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">infof<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">data<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="21">" NAME"<pos:position pos:line="75" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
        <break pos:line="76" pos:column="9">break;<pos:position pos:line="76" pos:column="15"/></break>
      }<pos:position pos:line="77" pos:column="8"/></block></switch>

      <switch pos:line="79" pos:column="7">switch<condition pos:line="79" pos:column="13">(<expr><name><name pos:line="79" pos:column="14">pointer<pos:position pos:line="79" pos:column="21"/></name><index pos:line="79" pos:column="21">[<expr><literal type="number" pos:line="79" pos:column="22">0<pos:position pos:line="79" pos:column="23"/></literal></expr>]<pos:position pos:line="79" pos:column="24"/></index></name></expr>)<pos:position pos:line="79" pos:column="25"/></condition> <block pos:line="79" pos:column="26">{
      <case pos:line="80" pos:column="7">case <expr><name pos:line="80" pos:column="12">CURL_TELOPT_TTYPE<pos:position pos:line="80" pos:column="29"/></name></expr>:<pos:position pos:line="80" pos:column="30"/></case>
      <case pos:line="81" pos:column="7">case <expr><name pos:line="81" pos:column="12">CURL_TELOPT_XDISPLOC<pos:position pos:line="81" pos:column="32"/></name></expr>:<pos:position pos:line="81" pos:column="33"/></case>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">pointer<pos:position pos:line="82" pos:column="16"/></name><index pos:line="82" pos:column="16">[<expr><name pos:line="82" pos:column="17">length<pos:position pos:line="82" pos:column="23"/></name></expr>]<pos:position pos:line="82" pos:column="24"/></index></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <literal type="number" pos:line="82" pos:column="27">0<pos:position pos:line="82" pos:column="28"/></literal></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">infof<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">data<pos:position pos:line="83" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="21">" \"%s\""<pos:position pos:line="83" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="83" pos:column="32">&amp;<pos:position pos:line="83" pos:column="37"/></operator><name><name pos:line="83" pos:column="33">pointer<pos:position pos:line="83" pos:column="40"/></name><index pos:line="83" pos:column="40">[<expr><literal type="number" pos:line="83" pos:column="41">2<pos:position pos:line="83" pos:column="42"/></literal></expr>]<pos:position pos:line="83" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
        <break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break>
      <case pos:line="85" pos:column="7">case <expr><name pos:line="85" pos:column="12">CURL_TELOPT_NEW_ENVIRON<pos:position pos:line="85" pos:column="35"/></name></expr>:<pos:position pos:line="85" pos:column="36"/></case>
        <if pos:line="86" pos:column="9">if<condition pos:line="86" pos:column="11">(<expr><name><name pos:line="86" pos:column="12">pointer<pos:position pos:line="86" pos:column="19"/></name><index pos:line="86" pos:column="19">[<expr><literal type="number" pos:line="86" pos:column="20">1<pos:position pos:line="86" pos:column="21"/></literal></expr>]<pos:position pos:line="86" pos:column="22"/></index></name> <operator pos:line="86" pos:column="23">==<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">CURL_TELQUAL_IS<pos:position pos:line="86" pos:column="41"/></name></expr>)<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <block pos:line="86" pos:column="43">{
          <expr_stmt><expr><call><name pos:line="87" pos:column="11">infof<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><name pos:line="87" pos:column="17">data<pos:position pos:line="87" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="23">" "<pos:position pos:line="87" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>
          <for pos:line="88" pos:column="11">for<control pos:line="88" pos:column="14">(<init><expr><name pos:line="88" pos:column="15">i<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <literal type="number" pos:line="88" pos:column="19">3<pos:position pos:line="88" pos:column="20"/></literal></expr>;<pos:position pos:line="88" pos:column="21"/></init> <condition><expr><name pos:line="88" pos:column="22">i<pos:position pos:line="88" pos:column="23"/></name> <operator pos:line="88" pos:column="24">&lt;<pos:position pos:line="88" pos:column="28"/></operator> <name pos:line="88" pos:column="26">length<pos:position pos:line="88" pos:column="32"/></name></expr>;<pos:position pos:line="88" pos:column="33"/></condition> <incr><expr><name pos:line="88" pos:column="34">i<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">++<pos:position pos:line="88" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="88" pos:column="38"/></control> <block pos:line="88" pos:column="39">{
            <switch pos:line="89" pos:column="13">switch<condition pos:line="89" pos:column="19">(<expr><name><name pos:line="89" pos:column="20">pointer<pos:position pos:line="89" pos:column="27"/></name><index pos:line="89" pos:column="27">[<expr><name pos:line="89" pos:column="28">i<pos:position pos:line="89" pos:column="29"/></name></expr>]<pos:position pos:line="89" pos:column="30"/></index></name></expr>)<pos:position pos:line="89" pos:column="31"/></condition> <block pos:line="89" pos:column="32">{
            <case pos:line="90" pos:column="13">case <expr><name pos:line="90" pos:column="18">CURL_NEW_ENV_VAR<pos:position pos:line="90" pos:column="34"/></name></expr>:<pos:position pos:line="90" pos:column="35"/></case>
              <expr_stmt><expr><call><name pos:line="91" pos:column="15">infof<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">data<pos:position pos:line="91" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="27">", "<pos:position pos:line="91" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt>
              <break pos:line="92" pos:column="15">break;<pos:position pos:line="92" pos:column="21"/></break>
            <case pos:line="93" pos:column="13">case <expr><name pos:line="93" pos:column="18">CURL_NEW_ENV_VALUE<pos:position pos:line="93" pos:column="36"/></name></expr>:<pos:position pos:line="93" pos:column="37"/></case>
              <expr_stmt><expr><call><name pos:line="94" pos:column="15">infof<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">data<pos:position pos:line="94" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="27">" = "<pos:position pos:line="94" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
              <break pos:line="95" pos:column="15">break;<pos:position pos:line="95" pos:column="21"/></break>
            <default pos:line="96" pos:column="13">default:<pos:position pos:line="96" pos:column="21"/></default>
              <expr_stmt><expr><call><name pos:line="97" pos:column="15">infof<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">data<pos:position pos:line="97" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="27">"%c"<pos:position pos:line="97" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="33">pointer<pos:position pos:line="97" pos:column="40"/></name><index pos:line="97" pos:column="40">[<expr><name pos:line="97" pos:column="41">i<pos:position pos:line="97" pos:column="42"/></name></expr>]<pos:position pos:line="97" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>
              <break pos:line="98" pos:column="15">break;<pos:position pos:line="98" pos:column="21"/></break>
            }<pos:position pos:line="99" pos:column="14"/></block></switch>
          }<pos:position pos:line="100" pos:column="12"/></block></for>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>
        <break pos:line="102" pos:column="9">break;<pos:position pos:line="102" pos:column="15"/></break>
      <default pos:line="103" pos:column="7">default:<pos:position pos:line="103" pos:column="15"/></default>
        <for pos:line="104" pos:column="9">for<control pos:line="104" pos:column="12">(<init><expr><name pos:line="104" pos:column="13">i<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <literal type="number" pos:line="104" pos:column="17">2<pos:position pos:line="104" pos:column="18"/></literal></expr>;<pos:position pos:line="104" pos:column="19"/></init> <condition><expr><name pos:line="104" pos:column="20">i<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">&lt;<pos:position pos:line="104" pos:column="26"/></operator> <name pos:line="104" pos:column="24">length<pos:position pos:line="104" pos:column="30"/></name></expr>;<pos:position pos:line="104" pos:column="31"/></condition> <incr><expr><name pos:line="104" pos:column="32">i<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">++<pos:position pos:line="104" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="104" pos:column="36"/></control>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="11">infof<pos:position pos:line="105" pos:column="16"/></name><argument_list pos:line="105" pos:column="16">(<argument><expr><name pos:line="105" pos:column="17">data<pos:position pos:line="105" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="23">" %.2x"<pos:position pos:line="105" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="32">pointer<pos:position pos:line="105" pos:column="39"/></name><index pos:line="105" pos:column="39">[<expr><name pos:line="105" pos:column="40">i<pos:position pos:line="105" pos:column="41"/></name></expr>]<pos:position pos:line="105" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="44"/></expr_stmt></block></for>
        <break pos:line="106" pos:column="9">break;<pos:position pos:line="106" pos:column="15"/></break>
      }<pos:position pos:line="107" pos:column="8"/></block></switch>
    }<pos:position pos:line="108" pos:column="6"/></block></switch>
    <if pos:line="109" pos:column="5">if<condition pos:line="109" pos:column="7">(<expr><name pos:line="109" pos:column="8">direction<pos:position pos:line="109" pos:column="17"/></name></expr>)<pos:position pos:line="109" pos:column="18"/></condition><then pos:line="109" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="7">infof<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">data<pos:position pos:line="110" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="19">"\n"<pos:position pos:line="110" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

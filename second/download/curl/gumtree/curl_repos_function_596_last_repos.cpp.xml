<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_596_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">curl<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hd_src<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">hd<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">struct_stat<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">file_info<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLM<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">m<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">running<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">start_test_timing<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">libtest_arg2<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">LIB529<pos:position pos:line="14" pos:column="14"/></name></cpp:ifdef>
    <comment type="block" pos:line="15" pos:column="5">/* test 529 */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">stderr<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"Usage: lib529 [url] [uploadfile]\n"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="18" pos:column="5">/* test 525 */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"Usage: lib525 [url] [uploadfile]\n"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">TEST_ERR_USAGE<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">hd_src<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">fopen<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">libtest_arg2<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"rb"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">NULL<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">==<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">hd_src<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">fprintf<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name pos:line="26" pos:column="13">stderr<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="21">"fopen failed with error: %d (%s)\n"<pos:position pos:line="26" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name pos:line="27" pos:column="13">errno<pos:position pos:line="27" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="20">strerror<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">errno<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">stderr<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"Error opening file: (%s)\n"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">libtest_arg2<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">TEST_ERR_FOPEN<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* get the file size of the local file */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">hd<pos:position pos:line="33" pos:column="5"/></name> <operator pos:line="33" pos:column="6">=<pos:position pos:line="33" pos:column="7"/></operator> <call><name pos:line="33" pos:column="8">fstat<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><call><name pos:line="33" pos:column="14">fileno<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">hd_src<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="33" pos:column="30">&amp;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="31">file_info<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name pos:line="34" pos:column="6">hd<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">==<pos:position pos:line="34" pos:column="11"/></operator> <operator pos:line="34" pos:column="12">-<pos:position pos:line="34" pos:column="13"/></operator><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>)<pos:position pos:line="34" pos:column="15"/></condition><then pos:line="34" pos:column="15"> <block pos:line="34" pos:column="16">{
    <comment type="block" pos:line="35" pos:column="5">/* can't open file, bail out */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">fprintf<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">stderr<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="21">"fstat() failed with error: %d (%s)\n"<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>,
            <argument><expr><name pos:line="37" pos:column="13">errno<pos:position pos:line="37" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="20">strerror<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">errno<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">fprintf<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">stderr<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="21">"ERROR: cannot open file (%s)\n"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">libtest_arg2<pos:position pos:line="38" pos:column="67"/></name></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fclose<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name pos:line="39" pos:column="12">hd_src<pos:position pos:line="39" pos:column="18"/></name></expr></argument>)<pos:position pos:line="39" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">TEST_ERR_FSTAT<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">res_global_init<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name pos:line="43" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name pos:line="44" pos:column="6">res<pos:position pos:line="44" pos:column="9"/></name></expr>)<pos:position pos:line="44" pos:column="10"/></condition><then pos:line="44" pos:column="10"> <block pos:line="44" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">fclose<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">hd_src<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">res<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">easy_init<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">curl<pos:position pos:line="49" pos:column="17"/></name></expr></argument>)<pos:position pos:line="49" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="51" pos:column="3">/* enable uploading */</comment>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">easy_setopt<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">curl<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">CURLOPT_UPLOAD<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="37">1L<pos:position pos:line="52" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="54" pos:column="3">/* specify target */</comment>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">easy_setopt<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">curl<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">CURLOPT_URL<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">URL<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* go verbose */</comment>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">easy_setopt<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">curl<pos:position pos:line="58" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="21">CURLOPT_VERBOSE<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="38">1L<pos:position pos:line="58" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="60" pos:column="3">/* use active FTP */</comment>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">easy_setopt<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">curl<pos:position pos:line="61" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="21">CURLOPT_FTPPORT<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="38">"-"<pos:position pos:line="61" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="63" pos:column="3">/* now specify which file to upload */</comment>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">easy_setopt<pos:position pos:line="64" pos:column="14"/></name><argument_list pos:line="64" pos:column="14">(<argument><expr><name pos:line="64" pos:column="15">curl<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="21">CURLOPT_READDATA<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">hd_src<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="66" pos:column="3">/* NOTE: if you want this code to work on Windows with libcurl as a DLL, you
     MUST also provide a read callback with CURLOPT_READFUNCTION. Failing to
     do so will give you a crash since a DLL may not use the variable's memory
     when passed in to it from an app like this. */</comment>

  <comment type="block" pos:line="71" pos:column="3">/* Set the size of the file to upload (optional).  If you give a *_LARGE
     option you MUST make sure that the type of the passed-in argument is a
     curl_off_t. If you use CURLOPT_INFILESIZE (without _LARGE) you must
     make sure that to pass in a type 'long' argument. */</comment>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">easy_setopt<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">curl<pos:position pos:line="75" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="21">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="75" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="47">(<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="48">curl_off_t<pos:position pos:line="75" pos:column="58"/></name><operator pos:line="75" pos:column="58">)<pos:position pos:line="75" pos:column="59"/></operator><name><name pos:line="75" pos:column="59">file_info<pos:position pos:line="75" pos:column="68"/></name><operator pos:line="75" pos:column="68">.<pos:position pos:line="75" pos:column="69"/></operator><name pos:line="75" pos:column="69">st_size<pos:position pos:line="75" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="78"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="77" pos:column="3">multi_init<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">(<argument><expr><name pos:line="77" pos:column="14">m<pos:position pos:line="77" pos:column="15"/></name></expr></argument>)<pos:position pos:line="77" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">multi_add_handle<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">m<pos:position pos:line="79" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="23">curl<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>

  <for pos:line="81" pos:column="3">for<control pos:line="81" pos:column="6">(<init pos:line="81" pos:column="7">;<pos:position pos:line="81" pos:column="8"/></init><condition pos:line="81" pos:column="8">;<pos:position pos:line="81" pos:column="9"/></condition><incr/>)<pos:position pos:line="81" pos:column="10"/></control> <block pos:line="81" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="82" pos:column="5">struct<pos:position pos:line="82" pos:column="11"/></name> <name pos:line="82" pos:column="12">timeval<pos:position pos:line="82" pos:column="19"/></name></name></type> <name pos:line="82" pos:column="20">interval<pos:position pos:line="82" pos:column="28"/></name></decl>;<pos:position pos:line="82" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="83" pos:column="5">fd_set<pos:position pos:line="83" pos:column="11"/></name></type> <name pos:line="83" pos:column="12">rd<pos:position pos:line="83" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="83" pos:column="16">wr<pos:position pos:line="83" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="83" pos:column="20">exc<pos:position pos:line="83" pos:column="23"/></name></decl>;<pos:position pos:line="83" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="84" pos:column="5">int<pos:position pos:line="84" pos:column="8"/></name></type> <name pos:line="84" pos:column="9">maxfd<pos:position pos:line="84" pos:column="14"/></name> <init pos:line="84" pos:column="15">= <expr><operator pos:line="84" pos:column="17">-<pos:position pos:line="84" pos:column="18"/></operator><literal type="number" pos:line="84" pos:column="18">99<pos:position pos:line="84" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="86" pos:column="5">interval<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">.<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">tv_sec<pos:position pos:line="86" pos:column="20"/></name></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <literal type="number" pos:line="86" pos:column="23">1<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">interval<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">.<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">tv_usec<pos:position pos:line="87" pos:column="21"/></name></name> <operator pos:line="87" pos:column="22">=<pos:position pos:line="87" pos:column="23"/></operator> <literal type="number" pos:line="87" pos:column="24">0<pos:position pos:line="87" pos:column="25"/></literal></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">multi_perform<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><name pos:line="89" pos:column="19">m<pos:position pos:line="89" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="22">&amp;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="23">running<pos:position pos:line="89" pos:column="30"/></name></expr></argument>)<pos:position pos:line="89" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">abort_on_test_timeout<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">()<pos:position pos:line="91" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>

    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><operator pos:line="93" pos:column="8">!<pos:position pos:line="93" pos:column="9"/></operator><name pos:line="93" pos:column="9">running<pos:position pos:line="93" pos:column="16"/></name></expr>)<pos:position pos:line="93" pos:column="17"/></condition><then pos:line="93" pos:column="17">
      <block type="pseudo"><break pos:line="94" pos:column="7">break;<pos:position pos:line="94" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="94" pos:column="14">/* done */</comment>

    <expr_stmt><expr><call><name pos:line="96" pos:column="5">FD_ZERO<pos:position pos:line="96" pos:column="12"/></name><argument_list pos:line="96" pos:column="12">(<argument><expr><operator pos:line="96" pos:column="13">&amp;<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="14">rd<pos:position pos:line="96" pos:column="16"/></name></expr></argument>)<pos:position pos:line="96" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">FD_ZERO<pos:position pos:line="97" pos:column="12"/></name><argument_list pos:line="97" pos:column="12">(<argument><expr><operator pos:line="97" pos:column="13">&amp;<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="14">wr<pos:position pos:line="97" pos:column="16"/></name></expr></argument>)<pos:position pos:line="97" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">FD_ZERO<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><operator pos:line="98" pos:column="13">&amp;<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="14">exc<pos:position pos:line="98" pos:column="17"/></name></expr></argument>)<pos:position pos:line="98" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">multi_fdset<pos:position pos:line="100" pos:column="16"/></name><argument_list pos:line="100" pos:column="16">(<argument><expr><name pos:line="100" pos:column="17">m<pos:position pos:line="100" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="20">&amp;<pos:position pos:line="100" pos:column="25"/></operator><name pos:line="100" pos:column="21">rd<pos:position pos:line="100" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="25">&amp;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="26">wr<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="30">&amp;<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="31">exc<pos:position pos:line="100" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="36">&amp;<pos:position pos:line="100" pos:column="41"/></operator><name pos:line="100" pos:column="37">maxfd<pos:position pos:line="100" pos:column="42"/></name></expr></argument>)<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="102" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="104" pos:column="5">select_test<pos:position pos:line="104" pos:column="16"/></name><argument_list pos:line="104" pos:column="16">(<argument><expr><name pos:line="104" pos:column="17">maxfd<pos:position pos:line="104" pos:column="22"/></name> <operator pos:line="104" pos:column="23">+<pos:position pos:line="104" pos:column="24"/></operator> <literal type="number" pos:line="104" pos:column="25">1<pos:position pos:line="104" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="28">&amp;<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="29">rd<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="33">&amp;<pos:position pos:line="104" pos:column="38"/></operator><name pos:line="104" pos:column="34">wr<pos:position pos:line="104" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="38">&amp;<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="39">exc<pos:position pos:line="104" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="44">&amp;<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="45">interval<pos:position pos:line="104" pos:column="53"/></name></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="106" pos:column="5">abort_on_test_timeout<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">()<pos:position pos:line="106" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="107" pos:column="4"/></block></for>

<label><name pos:line="109" pos:column="1">test_cleanup<pos:position pos:line="109" pos:column="13"/></name>:<pos:position pos:line="109" pos:column="14"/></label>

<cpp:ifdef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifdef<pos:position pos:line="111" pos:column="7"/></cpp:directive> <name pos:line="111" pos:column="8">LIB529<pos:position pos:line="111" pos:column="14"/></name></cpp:ifdef>
  <comment type="block" pos:line="112" pos:column="3">/* test 529 */</comment>
  <comment type="block" pos:line="113" pos:column="3">/* proper cleanup sequence - type PA */</comment>
  <expr_stmt><expr><call><name pos:line="114" pos:column="3">curl_multi_remove_handle<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">m<pos:position pos:line="114" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="31">curl<pos:position pos:line="114" pos:column="35"/></name></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="115" pos:column="3">curl_multi_cleanup<pos:position pos:line="115" pos:column="21"/></name><argument_list pos:line="115" pos:column="21">(<argument><expr><name pos:line="115" pos:column="22">m<pos:position pos:line="115" pos:column="23"/></name></expr></argument>)<pos:position pos:line="115" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="116" pos:column="3">curl_easy_cleanup<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">curl<pos:position pos:line="116" pos:column="25"/></name></expr></argument>)<pos:position pos:line="116" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="117" pos:column="3">curl_global_cleanup<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">()<pos:position pos:line="117" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="25"/></expr_stmt>
<cpp:else pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">else<pos:position pos:line="118" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="119" pos:column="3">/* test 525 */</comment>
  <comment type="block" pos:line="120" pos:column="3">/* proper cleanup sequence - type PB */</comment>
  <expr_stmt><expr><call><name pos:line="121" pos:column="3">curl_multi_remove_handle<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">m<pos:position pos:line="121" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="31">curl<pos:position pos:line="121" pos:column="35"/></name></expr></argument>)<pos:position pos:line="121" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="122" pos:column="3">curl_easy_cleanup<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><name pos:line="122" pos:column="21">curl<pos:position pos:line="122" pos:column="25"/></name></expr></argument>)<pos:position pos:line="122" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="123" pos:column="3">curl_multi_cleanup<pos:position pos:line="123" pos:column="21"/></name><argument_list pos:line="123" pos:column="21">(<argument><expr><name pos:line="123" pos:column="22">m<pos:position pos:line="123" pos:column="23"/></name></expr></argument>)<pos:position pos:line="123" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="124" pos:column="3">curl_global_cleanup<pos:position pos:line="124" pos:column="22"/></name><argument_list pos:line="124" pos:column="22">()<pos:position pos:line="124" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="127" pos:column="3">/* close the local file */</comment>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">fclose<pos:position pos:line="128" pos:column="9"/></name><argument_list pos:line="128" pos:column="9">(<argument><expr><name pos:line="128" pos:column="10">hd_src<pos:position pos:line="128" pos:column="16"/></name></expr></argument>)<pos:position pos:line="128" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="18"/></expr_stmt>

  <return pos:line="130" pos:column="3">return <expr><name pos:line="130" pos:column="10">res<pos:position pos:line="130" pos:column="13"/></name></expr>;<pos:position pos:line="130" pos:column="14"/></return>
}<pos:position pos:line="131" pos:column="2"/></block></function></unit>

 "       curl displays this data to the terminal by default, so  if  you  invoke\n"
 "       curl  to do an operation and it is about to write data to the terminal,\n"
 "       it disables the progress meter as otherwise it would mess up the output\n"
 "       mixing progress meter and response data.\n"
 "\n"
 "       If you want a progress meter for HTTP POST or PUT requests, you need to\n"
-"       redirect the response output to a file, using shell  redirect  (>),  -o\n"
-"       [file] or similar.\n"
+"       redirect the response output to a file, using shell redirect  (>),  -o,\n"
+"       --output or similar.\n"
 "\n"
 , stdout);
  fputs(
 "       It  is not the same case for FTP upload as that operation does not spit\n"
 "       out any response data to the terminal.\n"
 "\n"
 "       If you prefer a progress  \"bar\"  instead  of  the  regular  meter,  -#,\n"
-"       --progress-bar is your friend.\n"
+"       --progress-bar  is your friend. You can also disable the progress meter\n"
+"       completely with the -s, --silent option.\n"
 "\n"
 "OPTIONS\n"
-"       Options  start  with  one or two dashes. Many of the options require an\n"
+"       Options start with one or two dashes. Many of the  options  require  an\n"
 "       additional value next to them.\n"
 "\n"
-"       The short \"single-dash\" form of the options, -d  for  example,  may  be\n"
 , stdout);
  fputs(
+"       The  short  \"single-dash\"  form  of the options, -d for example, may be\n"
 "       used with or without a space between it and its value, although a space\n"
 "       is a recommended separator. The long \"double-dash\" form, -d, --data for\n"
 "       example, requires a space between it and its value.\n"
 "\n"
 "       Short version options that don't need any additional values can be used\n"
-"       immediately next to each other, like for example you  can  specify  all\n"
-"       the options -O, -L and -v at once as -OLv.\n"
-"\n"
+"       immediately  next  to  each other, like for example you can specify all\n"
 , stdout);
  fputs(
+"       the options -O, -L and -v at once as -OLv.\n"
+"\n"
 "       In general, all boolean options are enabled with --option and yet again\n"
-"       disabled with --no-option. That is, you use the exact same option  name\n"
+"       disabled  with --no-option. That is, you use the exact same option name\n"
 "       but prefix it with \"no-\". However, in this list we mostly only list and\n"
-"       show the --option version of them. (This concept with --no options  was\n"
-"       added  in  7.19.0.  Previously  most  options  were  toggled  on/off on\n"
+"       show  the --option version of them. (This concept with --no options was\n"
+"       added in  7.19.0.  Previously  most  options  were  toggled  on/off  on\n"
 "       repeated use of the same command line option.)\n"
+, stdout);
+ fputs(
+"\n"
+"       --abstract-unix-socket <path>\n"
+"              (HTTP)  Connect  through an abstract Unix domain socket, instead\n"
+"              of using the network.   Note:  netstat  shows  the  path  of  an\n"
+"              abstract  socket  prefixed with '@', however the <path> argument\n"
+"              should not have this leading character.\n"
+"\n"
+"              Added in 7.53.0.\n"
 "\n"
 "       --anyauth\n"
+"              (HTTP) Tells curl to figure out authentication method by itself,\n"
 , stdout);
  fputs(
-"              (HTTP) Tells curl to figure out authentication method by itself,\n"
 "              and  use  the most secure one the remote site claims to support.\n"
 "              This is done by first doing a request and checking the response-\n"
 "              headers,  thus  possibly  inducing  an extra network round-trip.\n"
 "              This is  used  instead  of  setting  a  specific  authentication\n"
 "              method,  which  you  can  do with --basic, --digest, --ntlm, and\n"
-, stdout);
- fputs(
 "              --negotiate.\n"
 "\n"
+, stdout);
+ fputs(
 "              Using --anyauth is not recommended if you do uploads from stdin,\n"
 "              since  it  may require data to be sent twice and then the client\n"
 "              must be able to rewind. If the need should arise when  uploading\n"
 "              from stdin, the upload operation will fail.\n"
 "\n"
 "              Used together with -u, --user.\n"

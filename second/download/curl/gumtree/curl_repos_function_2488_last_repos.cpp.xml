<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2488_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">OSStatus<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">CopyIdentityWithLabel<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">label<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">SecIdentityRef<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">out_cert_and_key<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">OSStatus<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">status<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">errSecItemNotFound<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">CURL_BUILD_MAC_10_7<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">||<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">CURL_BUILD_IOS<pos:position pos:line="6" pos:column="42"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CFArrayRef<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">keys_list<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CFIndex<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">keys_list_count<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CFIndex<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">i<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CFStringRef<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">common_name<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* SecItemCopyMatching() was introduced in iOS and Snow Leopard.
     kSecClassIdentity was introduced in Lion. If both exist, let's use them
     to find the certificate. */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">SecItemCopyMatching<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">NULL<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">&amp;&amp;<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="37">kSecClassIdentity<pos:position pos:line="15" pos:column="54"/></name> <operator pos:line="15" pos:column="55">!=<pos:position pos:line="15" pos:column="57"/></operator> <name pos:line="15" pos:column="58">NULL<pos:position pos:line="15" pos:column="62"/></name></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63"> <block pos:line="15" pos:column="64">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">CFTypeRef<pos:position pos:line="16" pos:column="14"/></name></type> <name><name pos:line="16" pos:column="15">keys<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><literal type="number" pos:line="16" pos:column="20">5<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">CFTypeRef<pos:position pos:line="17" pos:column="14"/></name></type> <name><name pos:line="17" pos:column="15">values<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><literal type="number" pos:line="17" pos:column="22">5<pos:position pos:line="17" pos:column="23"/></literal></expr>]<pos:position pos:line="17" pos:column="24"/></index></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">CFDictionaryRef<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">query_dict<pos:position pos:line="18" pos:column="31"/></name></decl>;<pos:position pos:line="18" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">CFStringRef<pos:position pos:line="19" pos:column="16"/></name></type> <name pos:line="19" pos:column="17">label_cf<pos:position pos:line="19" pos:column="25"/></name> <init pos:line="19" pos:column="26">= <expr><call><name pos:line="19" pos:column="28">CFStringCreateWithCString<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name pos:line="19" pos:column="54">NULL<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">label<pos:position pos:line="19" pos:column="65"/></name></expr></argument>,
      <argument><expr><name pos:line="20" pos:column="7">kCFStringEncodingUTF8<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Set up our search criteria and expected results: */</comment>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">values<pos:position pos:line="23" pos:column="11"/></name><index pos:line="23" pos:column="11">[<expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>]<pos:position pos:line="23" pos:column="14"/></index></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">kSecClassIdentity<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt> <comment type="block" pos:line="23" pos:column="36">/* we want a certificate and a key */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">keys<pos:position pos:line="24" pos:column="9"/></name><index pos:line="24" pos:column="9">[<expr><literal type="number" pos:line="24" pos:column="10">0<pos:position pos:line="24" pos:column="11"/></literal></expr>]<pos:position pos:line="24" pos:column="12"/></index></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">kSecClass<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">values<pos:position pos:line="25" pos:column="11"/></name><index pos:line="25" pos:column="11">[<expr><literal type="number" pos:line="25" pos:column="12">1<pos:position pos:line="25" pos:column="13"/></literal></expr>]<pos:position pos:line="25" pos:column="14"/></index></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">kCFBooleanTrue<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>    <comment type="block" pos:line="25" pos:column="36">/* we want a reference */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">keys<pos:position pos:line="26" pos:column="9"/></name><index pos:line="26" pos:column="9">[<expr><literal type="number" pos:line="26" pos:column="10">1<pos:position pos:line="26" pos:column="11"/></literal></expr>]<pos:position pos:line="26" pos:column="12"/></index></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">kSecReturnRef<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">values<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><literal type="number" pos:line="27" pos:column="12">2<pos:position pos:line="27" pos:column="13"/></literal></expr>]<pos:position pos:line="27" pos:column="14"/></index></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">kSecMatchLimitAll<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt> <comment type="block" pos:line="27" pos:column="36">/* kSecMatchLimitOne would be better if the
                                    * label matching below worked correctly */</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">keys<pos:position pos:line="29" pos:column="9"/></name><index pos:line="29" pos:column="9">[<expr><literal type="number" pos:line="29" pos:column="10">2<pos:position pos:line="29" pos:column="11"/></literal></expr>]<pos:position pos:line="29" pos:column="12"/></index></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">kSecMatchLimit<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* identity searches need a SecPolicyRef in order to work */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">values<pos:position pos:line="31" pos:column="11"/></name><index pos:line="31" pos:column="11">[<expr><literal type="number" pos:line="31" pos:column="12">3<pos:position pos:line="31" pos:column="13"/></literal></expr>]<pos:position pos:line="31" pos:column="14"/></index></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name pos:line="31" pos:column="17">SecPolicyCreateSSL<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><literal type="boolean" pos:line="31" pos:column="36">false<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">NULL<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">keys<pos:position pos:line="32" pos:column="9"/></name><index pos:line="32" pos:column="9">[<expr><literal type="number" pos:line="32" pos:column="10">3<pos:position pos:line="32" pos:column="11"/></literal></expr>]<pos:position pos:line="32" pos:column="12"/></index></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">kSecMatchPolicy<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="33" pos:column="5">/* match the name of the certificate (doesn't work in macOS 10.12.1) */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">values<pos:position pos:line="34" pos:column="11"/></name><index pos:line="34" pos:column="11">[<expr><literal type="number" pos:line="34" pos:column="12">4<pos:position pos:line="34" pos:column="13"/></literal></expr>]<pos:position pos:line="34" pos:column="14"/></index></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">label_cf<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">keys<pos:position pos:line="35" pos:column="9"/></name><index pos:line="35" pos:column="9">[<expr><literal type="number" pos:line="35" pos:column="10">4<pos:position pos:line="35" pos:column="11"/></literal></expr>]<pos:position pos:line="35" pos:column="12"/></index></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">kSecAttrLabel<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">query_dict<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">CFDictionaryCreate<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">NULL<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">(<pos:position pos:line="36" pos:column="44"/></operator><specifier pos:line="36" pos:column="44">const<pos:position pos:line="36" pos:column="49"/></specifier> <name pos:line="36" pos:column="50">void<pos:position pos:line="36" pos:column="54"/></name> <operator pos:line="36" pos:column="55">*<pos:position pos:line="36" pos:column="56"/></operator><operator pos:line="36" pos:column="56">*<pos:position pos:line="36" pos:column="57"/></operator><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="58">keys<pos:position pos:line="36" pos:column="62"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="37" pos:column="37">(<pos:position pos:line="37" pos:column="38"/></operator><specifier pos:line="37" pos:column="38">const<pos:position pos:line="37" pos:column="43"/></specifier> <name pos:line="37" pos:column="44">void<pos:position pos:line="37" pos:column="48"/></name> <operator pos:line="37" pos:column="49">*<pos:position pos:line="37" pos:column="50"/></operator><operator pos:line="37" pos:column="50">*<pos:position pos:line="37" pos:column="51"/></operator><operator pos:line="37" pos:column="51">)<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">values<pos:position pos:line="37" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="60">5L<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>,
                                    <argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="38">kCFCopyStringDictionaryKeyCallBacks<pos:position pos:line="38" pos:column="73"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="39" pos:column="37">&amp;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="38">kCFTypeDictionaryValueCallBacks<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">CFRelease<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name><name pos:line="40" pos:column="15">values<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><literal type="number" pos:line="40" pos:column="22">3<pos:position pos:line="40" pos:column="23"/></literal></expr>]<pos:position pos:line="40" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Do we have a match? */</comment>
    <expr_stmt><expr><name pos:line="43" pos:column="5">status<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">SecItemCopyMatching<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">query_dict<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="46">(<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">CFTypeRef<pos:position pos:line="43" pos:column="56"/></name> <operator pos:line="43" pos:column="57">*<pos:position pos:line="43" pos:column="58"/></operator><operator pos:line="43" pos:column="58">)<pos:position pos:line="43" pos:column="59"/></operator> <operator pos:line="43" pos:column="60">&amp;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="61">keys_list<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* Because kSecAttrLabel matching doesn't work with kSecClassIdentity,
     * we need to find the correct identity ourselves */</comment>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">status<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">==<pos:position pos:line="47" pos:column="17"/></operator> <name pos:line="47" pos:column="18">noErr<pos:position pos:line="47" pos:column="23"/></name></expr>)<pos:position pos:line="47" pos:column="24"/></condition><then pos:line="47" pos:column="24"> <block pos:line="47" pos:column="25">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">keys_list_count<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <call><name pos:line="48" pos:column="25">CFArrayGetCount<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">keys_list<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="49" pos:column="7">*<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">out_cert_and_key<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">NULL<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
      <for pos:line="51" pos:column="7">for<control pos:line="51" pos:column="10">(<init><expr><name pos:line="51" pos:column="11">i<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <literal type="number" pos:line="51" pos:column="15">0<pos:position pos:line="51" pos:column="16"/></literal></expr>;<pos:position pos:line="51" pos:column="17"/></init> <condition><expr><name pos:line="51" pos:column="18">i<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">&lt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">keys_list_count<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></condition> <incr><expr><name pos:line="51" pos:column="37">i<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">++<pos:position pos:line="51" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="41"/></control> <block pos:line="51" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="52" pos:column="9">OSStatus<pos:position pos:line="52" pos:column="17"/></name></type> <name pos:line="52" pos:column="18">err<pos:position pos:line="52" pos:column="21"/></name> <init pos:line="52" pos:column="22">= <expr><name pos:line="52" pos:column="24">noErr<pos:position pos:line="52" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="52" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="53" pos:column="9">SecCertificateRef<pos:position pos:line="53" pos:column="26"/></name></type> <name pos:line="53" pos:column="27">cert<pos:position pos:line="53" pos:column="31"/></name> <init pos:line="53" pos:column="32">= <expr><name pos:line="53" pos:column="34">NULL<pos:position pos:line="53" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="53" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">SecIdentityRef<pos:position pos:line="54" pos:column="23"/></name></type> <name pos:line="54" pos:column="24">identity<pos:position pos:line="54" pos:column="32"/></name> <init pos:line="54" pos:column="33">=
          <expr><operator pos:line="55" pos:column="11">(<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="12">SecIdentityRef<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">)<pos:position pos:line="55" pos:column="27"/></operator> <call><name pos:line="55" pos:column="28">CFArrayGetValueAtIndex<pos:position pos:line="55" pos:column="50"/></name><argument_list pos:line="55" pos:column="50">(<argument><expr><name pos:line="55" pos:column="51">keys_list<pos:position pos:line="55" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="62">i<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="65"/></decl_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">err<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">SecIdentityCopyCertificate<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">identity<pos:position pos:line="56" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="52">&amp;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="53">cert<pos:position pos:line="56" pos:column="57"/></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt>
        <if pos:line="57" pos:column="9">if<condition pos:line="57" pos:column="11">(<expr><name pos:line="57" pos:column="12">err<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">==<pos:position pos:line="57" pos:column="18"/></operator> <name pos:line="57" pos:column="19">noErr<pos:position pos:line="57" pos:column="24"/></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25"> <block pos:line="57" pos:column="26">{
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">CURL_BUILD_IOS<pos:position pos:line="58" pos:column="19"/></name></expr></cpp:if>
          <expr_stmt><expr><name pos:line="59" pos:column="11">common_name<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <call><name pos:line="59" pos:column="25">SecCertificateCopySubjectSummary<pos:position pos:line="59" pos:column="57"/></name><argument_list pos:line="59" pos:column="57">(<argument><expr><name pos:line="59" pos:column="58">cert<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
<cpp:elif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">elif<pos:position pos:line="60" pos:column="6"/></cpp:directive> <expr><name pos:line="60" pos:column="7">CURL_BUILD_MAC_10_7<pos:position pos:line="60" pos:column="26"/></name></expr></cpp:elif>
          <expr_stmt><expr><call><name pos:line="61" pos:column="11">SecCertificateCopyCommonName<pos:position pos:line="61" pos:column="39"/></name><argument_list pos:line="61" pos:column="39">(<argument><expr><name pos:line="61" pos:column="40">cert<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="47">common_name<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
          <if pos:line="63" pos:column="11">if<condition pos:line="63" pos:column="13">(<expr><call><name pos:line="63" pos:column="14">CFStringCompare<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><name pos:line="63" pos:column="30">common_name<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">label_cf<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="53">0<pos:position pos:line="63" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call> <operator pos:line="63" pos:column="56">==<pos:position pos:line="63" pos:column="58"/></operator> <name pos:line="63" pos:column="59">kCFCompareEqualTo<pos:position pos:line="63" pos:column="76"/></name></expr>)<pos:position pos:line="63" pos:column="77"/></condition><then pos:line="63" pos:column="77"> <block pos:line="63" pos:column="78">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">CFRelease<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">cert<pos:position pos:line="64" pos:column="27"/></name></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">CFRelease<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">common_name<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">CFRetain<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">identity<pos:position pos:line="66" pos:column="30"/></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="67" pos:column="13">*<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">out_cert_and_key<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">=<pos:position pos:line="67" pos:column="32"/></operator> <name pos:line="67" pos:column="33">identity<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="68" pos:column="13">status<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="22">noErr<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
            <break pos:line="69" pos:column="13">break;<pos:position pos:line="69" pos:column="19"/></break>
          }<pos:position pos:line="70" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="71" pos:column="11">CFRelease<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">common_name<pos:position pos:line="71" pos:column="32"/></name></expr></argument>)<pos:position pos:line="71" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">CFRelease<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">cert<pos:position pos:line="73" pos:column="23"/></name></expr></argument>)<pos:position pos:line="73" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="74" pos:column="8"/></block></for>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">(<expr><name pos:line="77" pos:column="8">keys_list<pos:position pos:line="77" pos:column="17"/></name></expr>)<pos:position pos:line="77" pos:column="18"/></condition><then pos:line="77" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="7">CFRelease<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">keys_list<pos:position pos:line="78" pos:column="26"/></name></expr></argument>)<pos:position pos:line="78" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">CFRelease<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><name pos:line="79" pos:column="15">query_dict<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">CFRelease<pos:position pos:line="80" pos:column="14"/></name><argument_list pos:line="80" pos:column="14">(<argument><expr><name pos:line="80" pos:column="15">label_cf<pos:position pos:line="80" pos:column="23"/></name></expr></argument>)<pos:position pos:line="80" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block></then>
  <else pos:line="82" pos:column="3">else <block pos:line="82" pos:column="8">{
<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if<pos:position pos:line="83" pos:column="4"/></cpp:directive> <expr><name pos:line="83" pos:column="5">CURL_SUPPORT_MAC_10_6<pos:position pos:line="83" pos:column="26"/></name></expr></cpp:if>
    <comment type="block" pos:line="84" pos:column="5">/* On Leopard and Snow Leopard, fall back to SecKeychainSearch. */</comment>
    <expr_stmt><expr><name pos:line="85" pos:column="5">status<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">=<pos:position pos:line="85" pos:column="13"/></operator> <call><name pos:line="85" pos:column="14">CopyIdentityWithLabelOldSchool<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name pos:line="85" pos:column="45">label<pos:position pos:line="85" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="52">out_cert_and_key<pos:position pos:line="85" pos:column="68"/></name></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif<pos:position pos:line="86" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="86" pos:column="8">/* CURL_SUPPORT_MAC_10_6 */</comment>
  }<pos:position pos:line="87" pos:column="4"/></block></else></if>
<cpp:elif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">elif<pos:position pos:line="88" pos:column="6"/></cpp:directive> <expr><name pos:line="88" pos:column="7">CURL_SUPPORT_MAC_10_6<pos:position pos:line="88" pos:column="28"/></name></expr></cpp:elif>
  <comment type="block" pos:line="89" pos:column="3">/* For developers building on older cats, we have no choice but to fall back
     to SecKeychainSearch. */</comment>
  <expr_stmt><expr><name pos:line="91" pos:column="3">status<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <call><name pos:line="91" pos:column="12">CopyIdentityWithLabelOldSchool<pos:position pos:line="91" pos:column="42"/></name><argument_list pos:line="91" pos:column="42">(<argument><expr><name pos:line="91" pos:column="43">label<pos:position pos:line="91" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="50">out_cert_and_key<pos:position pos:line="91" pos:column="66"/></name></expr></argument>)<pos:position pos:line="91" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="92" pos:column="8">/* CURL_BUILD_MAC_10_7 || CURL_BUILD_IOS */</comment>
  <return pos:line="93" pos:column="3">return <expr><name pos:line="93" pos:column="10">status<pos:position pos:line="93" pos:column="16"/></name></expr>;<pos:position pos:line="93" pos:column="17"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

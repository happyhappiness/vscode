<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_110_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">http_handle<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">multi_handle<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">still_running<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt> <comment type="block" pos:line="6" pos:column="22">/* keep number of running handles */</comment>

  <expr_stmt><expr><name pos:line="8" pos:column="3">http_handle<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">curl_easy_init<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">()<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* set the options (I left out a few, you'll get the point anyway) */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">curl_easy_setopt<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">http_handle<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">CURLOPT_URL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="46">"http://www.example.com/"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">curl_easy_setopt<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">http_handle<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">CURLOPT_DEBUGFUNCTION<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">my_trace<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curl_easy_setopt<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">http_handle<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">CURLOPT_VERBOSE<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="50">1L<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* init a multi stack */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">multi_handle<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">curl_multi_init<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">()<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* add the individual transfers */</comment>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">curl_multi_add_handle<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">multi_handle<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">http_handle<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* we start some action by calling perform right away */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_multi_perform<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">multi_handle<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="36">&amp;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="37">still_running<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

  <do pos:line="25" pos:column="3">do <block pos:line="25" pos:column="6">{
    <decl_stmt><decl><type><name><name pos:line="26" pos:column="5">struct<pos:position pos:line="26" pos:column="11"/></name> <name pos:line="26" pos:column="12">timeval<pos:position pos:line="26" pos:column="19"/></name></name></type> <name pos:line="26" pos:column="20">timeout<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">rc<pos:position pos:line="27" pos:column="11"/></name></decl>;<pos:position pos:line="27" pos:column="12"/></decl_stmt> <comment type="block" pos:line="27" pos:column="13">/* select() return code */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">CURLMcode<pos:position pos:line="28" pos:column="14"/></name></type> <name pos:line="28" pos:column="15">mc<pos:position pos:line="28" pos:column="17"/></name></decl>;<pos:position pos:line="28" pos:column="18"/></decl_stmt> <comment type="block" pos:line="28" pos:column="19">/* curl_multi_fdset() return code */</comment>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">fd_set<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">fdread<pos:position pos:line="30" pos:column="18"/></name></decl>;<pos:position pos:line="30" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">fd_set<pos:position pos:line="31" pos:column="11"/></name></type> <name pos:line="31" pos:column="12">fdwrite<pos:position pos:line="31" pos:column="19"/></name></decl>;<pos:position pos:line="31" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">fd_set<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">fdexcep<pos:position pos:line="32" pos:column="19"/></name></decl>;<pos:position pos:line="32" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">int<pos:position pos:line="33" pos:column="8"/></name></type> <name pos:line="33" pos:column="9">maxfd<pos:position pos:line="33" pos:column="14"/></name> <init pos:line="33" pos:column="15">= <expr><operator pos:line="33" pos:column="17">-<pos:position pos:line="33" pos:column="18"/></operator><literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="35" pos:column="5">long<pos:position pos:line="35" pos:column="9"/></name></type> <name pos:line="35" pos:column="10">curl_timeo<pos:position pos:line="35" pos:column="20"/></name> <init pos:line="35" pos:column="21">= <expr><operator pos:line="35" pos:column="23">-<pos:position pos:line="35" pos:column="24"/></operator><literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">FD_ZERO<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><operator pos:line="37" pos:column="13">&amp;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="14">fdread<pos:position pos:line="37" pos:column="20"/></name></expr></argument>)<pos:position pos:line="37" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">FD_ZERO<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><operator pos:line="38" pos:column="13">&amp;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="14">fdwrite<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">FD_ZERO<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><operator pos:line="39" pos:column="13">&amp;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="14">fdexcep<pos:position pos:line="39" pos:column="21"/></name></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* set a suitable timeout to play around with */</comment>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">timeout<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">tv_sec<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">timeout<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">tv_usec<pos:position pos:line="43" pos:column="20"/></name></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <literal type="number" pos:line="43" pos:column="23">0<pos:position pos:line="43" pos:column="24"/></literal></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">curl_multi_timeout<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">multi_handle<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="38">&amp;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="39">curl_timeo<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
    <if pos:line="46" pos:column="5">if<condition pos:line="46" pos:column="7">(<expr><name pos:line="46" pos:column="8">curl_timeo<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&gt;=<pos:position pos:line="46" pos:column="24"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">timeout<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">tv_sec<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">curl_timeo<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">/<pos:position pos:line="47" pos:column="36"/></operator> <literal type="number" pos:line="47" pos:column="37">1000<pos:position pos:line="47" pos:column="41"/></literal></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><name><name pos:line="48" pos:column="10">timeout<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">tv_sec<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">&gt;<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="27">1<pos:position pos:line="48" pos:column="28"/></literal></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="9">timeout<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">.<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">tv_sec<pos:position pos:line="49" pos:column="23"/></name></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">1<pos:position pos:line="49" pos:column="27"/></literal></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt></block></then>
      <else pos:line="50" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="9">timeout<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">tv_usec<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <operator pos:line="51" pos:column="27">(<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">curl_timeo<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">%<pos:position pos:line="51" pos:column="40"/></operator> <literal type="number" pos:line="51" pos:column="41">1000<pos:position pos:line="51" pos:column="45"/></literal><operator pos:line="51" pos:column="45">)<pos:position pos:line="51" pos:column="46"/></operator> <operator pos:line="51" pos:column="47">*<pos:position pos:line="51" pos:column="48"/></operator> <literal type="number" pos:line="51" pos:column="49">1000<pos:position pos:line="51" pos:column="53"/></literal></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt></block></else></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* get file descriptors from the transfers */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">mc<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <call><name pos:line="55" pos:column="10">curl_multi_fdset<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">multi_handle<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="41">&amp;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="42">fdread<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="50">&amp;<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="51">fdwrite<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="60">&amp;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="61">fdexcep<pos:position pos:line="55" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="70">&amp;<pos:position pos:line="55" pos:column="75"/></operator><name pos:line="55" pos:column="71">maxfd<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt>

    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">mc<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">!=<pos:position pos:line="57" pos:column="13"/></operator> <name pos:line="57" pos:column="14">CURLM_OK<pos:position pos:line="57" pos:column="22"/></name></expr>)<pos:position pos:line="57" pos:column="23"/></condition><then pos:line="57" pos:column="23"> <block pos:line="57" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">fprintf<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">stderr<pos:position pos:line="58" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="23">"curl_multi_fdset() failed, code %d.\n"<pos:position pos:line="58" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="64">mc<pos:position pos:line="58" pos:column="66"/></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
      <break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* On success the value of maxfd is guaranteed to be &gt;= -1. We call
       select(maxfd + 1, ...); specially in case of (maxfd == -1) there are
       no fds ready yet so we call select(0, ...) --or Sleep() on Windows--
       to sleep 100ms, which is the minimum suggested value in the
       curl_multi_fdset() doc. */</comment>

    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name pos:line="68" pos:column="8">maxfd<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">==<pos:position pos:line="68" pos:column="16"/></operator> <operator pos:line="68" pos:column="17">-<pos:position pos:line="68" pos:column="18"/></operator><literal type="number" pos:line="68" pos:column="18">1<pos:position pos:line="68" pos:column="19"/></literal></expr>)<pos:position pos:line="68" pos:column="20"/></condition><then pos:line="68" pos:column="20"> <block pos:line="68" pos:column="21">{
<cpp:ifdef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifdef<pos:position pos:line="69" pos:column="7"/></cpp:directive> <name pos:line="69" pos:column="8">_WIN32<pos:position pos:line="69" pos:column="14"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">Sleep<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><literal type="number" pos:line="70" pos:column="13">100<pos:position pos:line="70" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="71" pos:column="7">rc<pos:position pos:line="71" pos:column="9"/></name> <operator pos:line="71" pos:column="10">=<pos:position pos:line="71" pos:column="11"/></operator> <literal type="number" pos:line="71" pos:column="12">0<pos:position pos:line="71" pos:column="13"/></literal></expr>;<pos:position pos:line="71" pos:column="14"/></expr_stmt>
<cpp:else pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">else<pos:position pos:line="72" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="73" pos:column="7">/* Portable sleep for platforms other than Windows. */</comment>
      <decl_stmt><decl><type><name><name pos:line="74" pos:column="7">struct<pos:position pos:line="74" pos:column="13"/></name> <name pos:line="74" pos:column="14">timeval<pos:position pos:line="74" pos:column="21"/></name></name></type> <name pos:line="74" pos:column="22">wait<pos:position pos:line="74" pos:column="26"/></name> <init pos:line="74" pos:column="27">= <expr><block pos:line="74" pos:column="29">{ <expr><literal type="number" pos:line="74" pos:column="31">0<pos:position pos:line="74" pos:column="32"/></literal></expr>, <expr><literal type="number" pos:line="74" pos:column="34">100<pos:position pos:line="74" pos:column="37"/></literal> <operator pos:line="74" pos:column="38">*<pos:position pos:line="74" pos:column="39"/></operator> <literal type="number" pos:line="74" pos:column="40">1000<pos:position pos:line="74" pos:column="44"/></literal></expr> }<pos:position pos:line="74" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="74" pos:column="47"/></decl_stmt> <comment type="block" pos:line="74" pos:column="48">/* 100ms */</comment>
      <expr_stmt><expr><name pos:line="75" pos:column="7">rc<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <call><name pos:line="75" pos:column="12">select<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><literal type="number" pos:line="75" pos:column="19">0<pos:position pos:line="75" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="22">NULL<pos:position pos:line="75" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="28">NULL<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">NULL<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="40">&amp;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="41">wait<pos:position pos:line="75" pos:column="45"/></name></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="77" pos:column="6"/></block></then>
    <else pos:line="78" pos:column="5">else <block pos:line="78" pos:column="10">{
      <comment type="block" pos:line="79" pos:column="7">/* Note that on some platforms 'timeout' may be modified by select().
         If you need access to the original value save a copy beforehand. */</comment>
      <expr_stmt><expr><name pos:line="81" pos:column="7">rc<pos:position pos:line="81" pos:column="9"/></name> <operator pos:line="81" pos:column="10">=<pos:position pos:line="81" pos:column="11"/></operator> <call><name pos:line="81" pos:column="12">select<pos:position pos:line="81" pos:column="18"/></name><argument_list pos:line="81" pos:column="18">(<argument><expr><name pos:line="81" pos:column="19">maxfd<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">+<pos:position pos:line="81" pos:column="26"/></operator> <literal type="number" pos:line="81" pos:column="27">1<pos:position pos:line="81" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="30">&amp;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="31">fdread<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="40">fdwrite<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="49">&amp;<pos:position pos:line="81" pos:column="54"/></operator><name pos:line="81" pos:column="50">fdexcep<pos:position pos:line="81" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="59">&amp;<pos:position pos:line="81" pos:column="64"/></operator><name pos:line="81" pos:column="60">timeout<pos:position pos:line="81" pos:column="67"/></name></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></else></if>

    <switch pos:line="84" pos:column="5">switch<condition pos:line="84" pos:column="11">(<expr><name pos:line="84" pos:column="12">rc<pos:position pos:line="84" pos:column="14"/></name></expr>)<pos:position pos:line="84" pos:column="15"/></condition> <block pos:line="84" pos:column="16">{
    <case pos:line="85" pos:column="5">case <expr><operator pos:line="85" pos:column="10">-<pos:position pos:line="85" pos:column="11"/></operator><literal type="number" pos:line="85" pos:column="11">1<pos:position pos:line="85" pos:column="12"/></literal></expr>:<pos:position pos:line="85" pos:column="13"/></case>
      <comment type="block" pos:line="86" pos:column="7">/* select error */</comment>
      <expr_stmt><expr><name pos:line="87" pos:column="7">still_running<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <literal type="number" pos:line="87" pos:column="23">0<pos:position pos:line="87" pos:column="24"/></literal></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">printf<pos:position pos:line="88" pos:column="13"/></name><argument_list pos:line="88" pos:column="13">(<argument><expr><literal type="string" pos:line="88" pos:column="14">"select() returns error, this is badness\n"<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="59"/></expr_stmt>
      <break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break>
    <case pos:line="90" pos:column="5">case <expr><literal type="number" pos:line="90" pos:column="10">0<pos:position pos:line="90" pos:column="11"/></literal></expr>:<pos:position pos:line="90" pos:column="12"/></case>
    <default pos:line="91" pos:column="5">default:<pos:position pos:line="91" pos:column="13"/></default>
      <comment type="block" pos:line="92" pos:column="7">/* timeout or readable/writable sockets */</comment>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">curl_multi_perform<pos:position pos:line="93" pos:column="25"/></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">multi_handle<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="40">&amp;<pos:position pos:line="93" pos:column="45"/></operator><name pos:line="93" pos:column="41">still_running<pos:position pos:line="93" pos:column="54"/></name></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
      <break pos:line="94" pos:column="7">break;<pos:position pos:line="94" pos:column="13"/></break>
    }<pos:position pos:line="95" pos:column="6"/></block></switch>
  }<pos:position pos:line="96" pos:column="4"/></block> while<condition pos:line="96" pos:column="10">(<expr><name pos:line="96" pos:column="11">still_running<pos:position pos:line="96" pos:column="24"/></name></expr>)<pos:position pos:line="96" pos:column="25"/></condition>;<pos:position pos:line="96" pos:column="26"/></do>

  <expr_stmt><expr><call><name pos:line="98" pos:column="3">curl_multi_cleanup<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">multi_handle<pos:position pos:line="98" pos:column="34"/></name></expr></argument>)<pos:position pos:line="98" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">curl_easy_cleanup<pos:position pos:line="100" pos:column="20"/></name><argument_list pos:line="100" pos:column="20">(<argument><expr><name pos:line="100" pos:column="21">http_handle<pos:position pos:line="100" pos:column="32"/></name></expr></argument>)<pos:position pos:line="100" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="34"/></expr_stmt>

  <return pos:line="102" pos:column="3">return <expr><literal type="number" pos:line="102" pos:column="10">0<pos:position pos:line="102" pos:column="11"/></literal></expr>;<pos:position pos:line="102" pos:column="12"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

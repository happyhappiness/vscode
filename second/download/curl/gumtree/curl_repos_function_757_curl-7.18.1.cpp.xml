<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_757_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">sh_delentry<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">curl_hash<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">sh<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">curl_socket_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">s<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_sh_entry<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">there<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">=
    <expr><call><name pos:line="4" pos:column="5">Curl_hash_pick<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">sh<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">char<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><operator pos:line="4" pos:column="31">)<pos:position pos:line="4" pos:column="32"/></operator><operator pos:line="4" pos:column="32">&amp;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="33">s<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="36">sizeof<argument_list pos:line="4" pos:column="42">(<argument><expr><name pos:line="4" pos:column="43">curl_socket_t<pos:position pos:line="4" pos:column="56"/></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">there<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition><then pos:line="6" pos:column="12"> <block pos:line="6" pos:column="13">{
    <comment type="block" pos:line="7" pos:column="5">/* this socket is in the hash */</comment>
    <comment type="block" pos:line="8" pos:column="5">/* We remove the hash entry. (This'll end up in a call to
       sh_freeentry().) */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">Curl_hash_delete<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">sh<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">char<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">&amp;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="35">s<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="38">sizeof<argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">curl_socket_t<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

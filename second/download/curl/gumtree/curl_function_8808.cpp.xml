<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_8808.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">tool_version_info<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><specifier pos:line="3" pos:column="15">const<pos:position pos:line="3" pos:column="20"/></specifier> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">proto<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">printf<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">CURL_ID<pos:position pos:line="5" pos:column="17"/></name> <literal type="string" pos:line="5" pos:column="18">"%s\n"<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="26">curl_version<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name><name pos:line="6" pos:column="6">curlinfo<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">protocols<pos:position pos:line="6" pos:column="25"/></name></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">printf<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="string" pos:line="7" pos:column="12">"Protocols: "<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
    <for pos:line="8" pos:column="5">for<control pos:line="8" pos:column="8">(<init><expr><name pos:line="8" pos:column="9">proto<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">curlinfo<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">protocols<pos:position pos:line="8" pos:column="36"/></name></name></expr>;<pos:position pos:line="8" pos:column="37"/></init> <condition><expr><operator pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">proto<pos:position pos:line="8" pos:column="44"/></name></expr>;<pos:position pos:line="8" pos:column="45"/></condition> <incr><expr><operator pos:line="8" pos:column="46">++<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">proto<pos:position pos:line="8" pos:column="53"/></name></expr></incr>)<pos:position pos:line="8" pos:column="54"/></control> <block pos:line="8" pos:column="55">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">printf<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"%s "<pos:position pos:line="9" pos:column="19"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">proto<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">puts<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><literal type="string" pos:line="11" pos:column="10">""<pos:position pos:line="11" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt> <comment type="block" pos:line="11" pos:column="15">/* newline */</comment>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">curlinfo<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">features<pos:position pos:line="13" pos:column="24"/></name></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">unsigned<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">int<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">i<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">printf<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"Features: "<pos:position pos:line="15" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <for pos:line="16" pos:column="5">for<control pos:line="16" pos:column="8">(<init><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></init> <condition><expr><name pos:line="16" pos:column="16">i<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&lt;<pos:position pos:line="16" pos:column="22"/></operator> <sizeof pos:line="16" pos:column="20">sizeof<argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">feats<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></sizeof><operator pos:line="16" pos:column="33">/<pos:position pos:line="16" pos:column="34"/></operator><sizeof pos:line="16" pos:column="34">sizeof<argument_list pos:line="16" pos:column="40">(<argument><expr><name><name pos:line="16" pos:column="41">feats<pos:position pos:line="16" pos:column="46"/></name><index pos:line="16" pos:column="46">[<expr><literal type="number" pos:line="16" pos:column="47">0<pos:position pos:line="16" pos:column="48"/></literal></expr>]<pos:position pos:line="16" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="51"/></condition> <incr><expr><name pos:line="16" pos:column="52">i<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">++<pos:position pos:line="16" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="56"/></control> <block pos:line="16" pos:column="57">{
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><name><name pos:line="17" pos:column="10">curlinfo<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">features<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">&amp;<pos:position pos:line="17" pos:column="34"/></operator> <name><name pos:line="17" pos:column="31">feats<pos:position pos:line="17" pos:column="36"/></name><index pos:line="17" pos:column="36">[<expr><name pos:line="17" pos:column="37">i<pos:position pos:line="17" pos:column="38"/></name></expr>]<pos:position pos:line="17" pos:column="39"/></index></name><operator pos:line="17" pos:column="39">.<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">bitmask<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">printf<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"%s "<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="23">feats<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><name pos:line="18" pos:column="29">i<pos:position pos:line="18" pos:column="30"/></name></expr>]<pos:position pos:line="18" pos:column="31"/></index></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">name<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">USE_METALINK<pos:position pos:line="20" pos:column="20"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">printf<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"Metalink "<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">puts<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><literal type="string" pos:line="23" pos:column="10">""<pos:position pos:line="23" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt> <comment type="block" pos:line="23" pos:column="15">/* newline */</comment>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2172_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_pp_moredata<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">pingpong<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">pp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <return pos:line="3" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><operator pos:line="3" pos:column="11">!<pos:position pos:line="3" pos:column="12"/></operator><name><name pos:line="3" pos:column="12">pp<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">sendleft<pos:position pos:line="3" pos:column="24"/></name></name> <operator pos:line="3" pos:column="25">&amp;&amp;<pos:position pos:line="3" pos:column="35"/></operator> <name><name pos:line="3" pos:column="28">pp<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">cache<pos:position pos:line="3" pos:column="37"/></name></name> <operator pos:line="3" pos:column="38">&amp;&amp;<pos:position pos:line="3" pos:column="48"/></operator> <name><name pos:line="3" pos:column="41">pp<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">nread_resp<pos:position pos:line="3" pos:column="55"/></name></name> <operator pos:line="3" pos:column="56">&lt;<pos:position pos:line="3" pos:column="60"/></operator> <name><name pos:line="3" pos:column="58">pp<pos:position pos:line="3" pos:column="60"/></name><operator pos:line="3" pos:column="60">-&gt;<pos:position pos:line="3" pos:column="65"/></operator><name pos:line="3" pos:column="62">cache_size<pos:position pos:line="3" pos:column="72"/></name></name><operator pos:line="3" pos:column="72">)<pos:position pos:line="3" pos:column="73"/></operator></expr> ?<pos:position pos:line="3" pos:column="75"/></condition><then pos:line="3" pos:column="75">
         <expr><name pos:line="4" pos:column="10">TRUE<pos:position pos:line="4" pos:column="14"/></name></expr> <pos:position pos:line="4" pos:column="15"/></then><else pos:line="4" pos:column="15">: <expr><name pos:line="4" pos:column="17">FALSE<pos:position pos:line="4" pos:column="22"/></name></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="23"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1963_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sec_set_protection_level<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">code<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pbsz<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">unsigned<pos:position pos:line="5" pos:column="18"/></name> <name pos:line="5" pos:column="19">int<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">buffer_size<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><literal type="number" pos:line="5" pos:column="37">1<pos:position pos:line="5" pos:column="38"/></literal> <operator pos:line="5" pos:column="39">&lt;&lt;<pos:position pos:line="5" pos:column="47"/></operator> <literal type="number" pos:line="5" pos:column="42">20<pos:position pos:line="5" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt> <comment type="block" pos:line="5" pos:column="46">/* 1048576 */</comment>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">enum<pos:position pos:line="6" pos:column="7"/></name> <name pos:line="6" pos:column="8">protection_level<pos:position pos:line="6" pos:column="24"/></name></name></type> <name pos:line="6" pos:column="25">level<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name><name pos:line="6" pos:column="33">conn<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">request_data_prot<pos:position pos:line="6" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">DEBUGASSERT<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">level<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&gt;<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="23">PROT_NONE<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&amp;&amp;<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="36">level<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">&lt;<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="44">PROT_LAST<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">conn<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">sec_complete<pos:position pos:line="10" pos:column="25"/></name></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">infof<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name><name pos:line="11" pos:column="11">conn<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">data<pos:position pos:line="11" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"Trying to change the protection level after the"<pos:position pos:line="11" pos:column="72"/></literal>
                      <literal type="string" pos:line="12" pos:column="23">"completion of the data exchange.\n"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* Bail out if we try to set up the same level */</comment>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">conn<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">data_prot<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">level<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return></block></then></if>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">level<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12"> <block pos:line="20" pos:column="13">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">code<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">ftp_send_command<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">conn<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"PBSZ %u"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">buffer_size<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><name pos:line="22" pos:column="8">code<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&lt;<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return></block></then></if>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name pos:line="25" pos:column="8">code<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">/<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">100<pos:position pos:line="25" pos:column="16"/></literal> <operator pos:line="25" pos:column="17">!=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">2<pos:position pos:line="25" pos:column="21"/></literal></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">failf<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name><name pos:line="26" pos:column="13">conn<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">data<pos:position pos:line="26" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"Failed to set the protection's buffer size."<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">conn<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">buffer_size<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">buffer_size<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">pbsz<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">strstr<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name><name pos:line="31" pos:column="19">conn<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">data<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">state<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">buffer<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="45">"PBSZ="<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">pbsz<pos:position pos:line="32" pos:column="12"/></name></expr>)<pos:position pos:line="32" pos:column="13"/></condition><then pos:line="32" pos:column="13"> <block pos:line="32" pos:column="14">{
      <comment type="block" pos:line="33" pos:column="7">/* ignore return code, use default value if it fails */</comment>
      <expr_stmt><expr><operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">void<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">)<pos:position pos:line="34" pos:column="13"/></operator><call><name pos:line="34" pos:column="13">sscanf<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">pbsz<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">"PBSZ=%u"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">buffer_size<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><name pos:line="35" pos:column="10">buffer_size<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">&lt;<pos:position pos:line="35" pos:column="26"/></operator> <name><name pos:line="35" pos:column="24">conn<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">buffer_size<pos:position pos:line="35" pos:column="41"/></name></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="9">conn<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">buffer_size<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">buffer_size<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* Now try to negiociate the protection level. */</comment>
  <expr_stmt><expr><name pos:line="41" pos:column="3">code<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">ftp_send_command<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">conn<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"PROT %c"<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="44">level_to_char<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><name pos:line="41" pos:column="58">level<pos:position pos:line="41" pos:column="63"/></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>

  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><name pos:line="43" pos:column="6">code<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">&lt;<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="13">0<pos:position pos:line="43" pos:column="14"/></literal></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15">
    <block type="pseudo"><return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">-<pos:position pos:line="44" pos:column="13"/></operator><literal type="number" pos:line="44" pos:column="13">1<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></return></block></then></if>

  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">code<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">/<pos:position pos:line="46" pos:column="11"/></operator><literal type="number" pos:line="46" pos:column="11">100<pos:position pos:line="46" pos:column="14"/></literal> <operator pos:line="46" pos:column="15">!=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="number" pos:line="46" pos:column="18">2<pos:position pos:line="46" pos:column="19"/></literal></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20"> <block pos:line="46" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">failf<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name><name pos:line="47" pos:column="11">conn<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">data<pos:position pos:line="47" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"Failed to set the protection level."<pos:position pos:line="47" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">-<pos:position pos:line="48" pos:column="13"/></operator><literal type="number" pos:line="48" pos:column="13">1<pos:position pos:line="48" pos:column="14"/></literal></expr>;<pos:position pos:line="48" pos:column="15"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="51" pos:column="3">conn<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">-&gt;<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="9">data_prot<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">level<pos:position pos:line="51" pos:column="26"/></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><name pos:line="52" pos:column="6">level<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">==<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">PROT_PRIVATE<pos:position pos:line="52" pos:column="27"/></name></expr>)<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="5">conn<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">command_prot<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <name pos:line="53" pos:column="26">level<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><literal type="number" pos:line="55" pos:column="10">0<pos:position pos:line="55" pos:column="11"/></literal></expr>;<pos:position pos:line="55" pos:column="12"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

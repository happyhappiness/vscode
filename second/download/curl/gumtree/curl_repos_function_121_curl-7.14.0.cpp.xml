<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_121_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_request<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">sock<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">httprequest<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">req<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fail<pos:position pos:line="3" pos:column="11"/></name><init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">FALSE<pos:position pos:line="3" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">reqbuf<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name><name pos:line="4" pos:column="18">req<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-&gt;<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="23">reqbuf<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <comment type="block" format="doxygen" pos:line="6" pos:column="3">/*** Init the httpreqest structure properly for the upcoming request ***/</comment>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">req<pos:position pos:line="7" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="18">sizeof<argument_list pos:line="7" pos:column="24">(<argument><expr pos:line="7" pos:column="25">struct <name pos:line="7" pos:column="32">httprequest<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* here's what should not be 0 from the start */</comment>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">req<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">testno<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">DOCNUMBER_NOTHING<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt> <comment type="block" pos:line="10" pos:column="36">/* safe default */</comment>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">req<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">open<pos:position pos:line="11" pos:column="12"/></name></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">TRUE<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt> <comment type="block" pos:line="11" pos:column="21">/* connection should remain open and wait for more
                       commands */</comment>

  <comment type="block" format="doxygen" pos:line="14" pos:column="3">/*** end of httprequest init ***/</comment>

  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><name><name pos:line="16" pos:column="10">req<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">offset<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">&lt;<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="24">REQBUFSIZ<pos:position pos:line="16" pos:column="33"/></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition> <block pos:line="16" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">got<pos:position pos:line="17" pos:column="12"/></name> <init pos:line="17" pos:column="13">= <expr><call><name pos:line="17" pos:column="15">sread<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">sock<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">reqbuf<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">+<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="36">req<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">offset<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">REQBUFSIZ<pos:position pos:line="17" pos:column="58"/></name> <operator pos:line="17" pos:column="59">-<pos:position pos:line="17" pos:column="60"/></operator> <name><name pos:line="17" pos:column="61">req<pos:position pos:line="17" pos:column="64"/></name><operator pos:line="17" pos:column="64">-&gt;<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="66">offset<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="74"/></decl_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">got<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&lt;=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18"> <block pos:line="18" pos:column="19">{
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">got<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">&lt;<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">perror<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"recv"<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">logmsg<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="string" pos:line="21" pos:column="16">"recv() returned error"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DOCNUMBER_INTERNAL<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></return>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">logmsg<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="string" pos:line="24" pos:column="14">"Connection closed by client"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">reqbuf<pos:position pos:line="25" pos:column="13"/></name><index pos:line="25" pos:column="13">[<expr><name><name pos:line="25" pos:column="14">req<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">offset<pos:position pos:line="25" pos:column="25"/></name></name></expr>]<pos:position pos:line="25" pos:column="26"/></index></name><operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator><literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>

      <comment type="block" pos:line="27" pos:column="7">/* dump the request receivied so far to the external file */</comment>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">storerequest<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">reqbuf<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">DOCNUMBER_INTERNAL<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">req<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">offset<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">+=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">got<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">reqbuf<pos:position pos:line="33" pos:column="11"/></name><index pos:line="33" pos:column="11">[<expr><name><name pos:line="33" pos:column="12">req<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">offset<pos:position pos:line="33" pos:column="23"/></name></name></expr>]<pos:position pos:line="33" pos:column="24"/></index></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <literal type="number" pos:line="33" pos:column="27">0<pos:position pos:line="33" pos:column="28"/></literal></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><call><name pos:line="35" pos:column="8">ProcessRequest<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">req<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28">
      <block type="pseudo"><break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></while>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">req<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">offset<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">&gt;=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="22">REQBUFSIZ<pos:position pos:line="39" pos:column="31"/></name></expr>)<pos:position pos:line="39" pos:column="32"/></condition><then pos:line="39" pos:column="32"> <block pos:line="39" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">logmsg<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"Request buffer overflow, closing connection"<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">reqbuf<pos:position pos:line="41" pos:column="11"/></name><index pos:line="41" pos:column="11">[<expr><name pos:line="41" pos:column="12">REQBUFSIZ<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-<pos:position pos:line="41" pos:column="22"/></operator><literal type="number" pos:line="41" pos:column="22">1<pos:position pos:line="41" pos:column="23"/></literal></expr>]<pos:position pos:line="41" pos:column="24"/></index></name><operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator><literal type="number" pos:line="41" pos:column="25">0<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">fail<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <name pos:line="42" pos:column="12">TRUE<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="43" pos:column="5">/* dump the request to an external file anyway */</comment>
  }<pos:position pos:line="44" pos:column="4"/></block></then>
  <else pos:line="45" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="5">reqbuf<pos:position pos:line="46" pos:column="11"/></name><index pos:line="46" pos:column="11">[<expr><name><name pos:line="46" pos:column="12">req<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">offset<pos:position pos:line="46" pos:column="23"/></name></name></expr>]<pos:position pos:line="46" pos:column="24"/></index></name><operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator><literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="48" pos:column="3">/* dump the request to an external file */</comment>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">storerequest<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">reqbuf<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>

  <return pos:line="51" pos:column="3">return <expr><name pos:line="51" pos:column="10">fail<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></return> <comment type="block" pos:line="51" pos:column="16">/* success */</comment>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

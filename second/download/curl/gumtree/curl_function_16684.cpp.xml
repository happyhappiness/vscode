<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_16684.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hugehelp<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
<expr_stmt><expr><call><name pos:line="3" pos:column="1">puts<pos:position pos:line="3" pos:column="5"/></name> <argument_list pos:line="3" pos:column="6">(
<argument><expr><literal type="string" pos:line="4" pos:column="1">"                                  _   _ ____  _     \n"<pos:position pos:line="4" pos:column="57"/></literal>
<literal type="string" pos:line="5" pos:column="1">"  Project                     ___| | | |  _ \\| |    \n"<pos:position pos:line="5" pos:column="58"/></literal>
<literal type="string" pos:line="6" pos:column="1">"                             / __| | | | |_) | |    \n"<pos:position pos:line="6" pos:column="57"/></literal>
<literal type="string" pos:line="7" pos:column="1">"                            | (__| |_| |  _ &lt;| |___ \n"<pos:position pos:line="7" pos:column="60"/></literal>
<literal type="string" pos:line="8" pos:column="1">"                             \\___|\\___/|_| \\_\\_____|\n"<pos:position pos:line="8" pos:column="61"/></literal>
<literal type="string" pos:line="9" pos:column="1">"NAME\n"<pos:position pos:line="9" pos:column="9"/></literal>
<literal type="string" pos:line="10" pos:column="1">"     curl - get a URL with FTP, TELNET, LDAP, GOPHER, DICT, FILE,\n"<pos:position pos:line="10" pos:column="70"/></literal>
<literal type="string" pos:line="11" pos:column="1">"     HTTP or HTTPS syntax.\n"<pos:position pos:line="11" pos:column="31"/></literal>
<literal type="string" pos:line="12" pos:column="1">"\n"<pos:position pos:line="12" pos:column="5"/></literal>
<literal type="string" pos:line="13" pos:column="1">"SYNOPSIS\n"<pos:position pos:line="13" pos:column="13"/></literal>
<literal type="string" pos:line="14" pos:column="1">"     curl [options] [URL...]\n"<pos:position pos:line="14" pos:column="33"/></literal>
<literal type="string" pos:line="15" pos:column="1">"\n"<pos:position pos:line="15" pos:column="5"/></literal>
<literal type="string" pos:line="16" pos:column="1">"DESCRIPTION\n"<pos:position pos:line="16" pos:column="16"/></literal>
<literal type="string" pos:line="17" pos:column="1">"     curl is a client to get documents/files from or  send  docuï¿½\n"<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="18" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="19" pos:column="2">puts<pos:position pos:line="19" pos:column="6"/></name><argument_list pos:line="19" pos:column="6">(
<argument><expr><literal type="string" pos:line="20" pos:column="1">"     ments  to  a  server,  using  any of the supported protocols\n"<pos:position pos:line="20" pos:column="70"/></literal>
<literal type="string" pos:line="21" pos:column="1">"     (HTTP, HTTPS, FTP, GOPHER, DICT, TELNET, LDAP or FILE).  The\n"<pos:position pos:line="21" pos:column="70"/></literal>
<literal type="string" pos:line="22" pos:column="1">"     command  is designed to work without user interaction or any\n"<pos:position pos:line="22" pos:column="70"/></literal>
<literal type="string" pos:line="23" pos:column="1">"     kind of interactivity.\n"<pos:position pos:line="23" pos:column="32"/></literal>
<literal type="string" pos:line="24" pos:column="1">"\n"<pos:position pos:line="24" pos:column="5"/></literal>
<literal type="string" pos:line="25" pos:column="1">"     curl offers a busload of useful tricks like  proxy  support,\n"<pos:position pos:line="25" pos:column="70"/></literal>
<literal type="string" pos:line="26" pos:column="1">"     user  authentication,  ftp  upload,  HTTP post, SSL (https:)\n"<pos:position pos:line="26" pos:column="70"/></literal>
<literal type="string" pos:line="27" pos:column="1">"     connections, cookies, file transfer resume and more.\n"<pos:position pos:line="27" pos:column="62"/></literal>
<literal type="string" pos:line="28" pos:column="1">"\n"<pos:position pos:line="28" pos:column="5"/></literal>
<literal type="string" pos:line="29" pos:column="1">"URL\n"<pos:position pos:line="29" pos:column="8"/></literal>
<literal type="string" pos:line="30" pos:column="1">"     The URL syntax is protocol dependent. You'll find a detailed\n"<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="31" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="32" pos:column="2">puts<pos:position pos:line="32" pos:column="6"/></name><argument_list pos:line="32" pos:column="6">(
<argument><expr><literal type="string" pos:line="33" pos:column="1">"     description in RFC 2396.\n"<pos:position pos:line="33" pos:column="34"/></literal>
<literal type="string" pos:line="34" pos:column="1">"\n"<pos:position pos:line="34" pos:column="5"/></literal>
<literal type="string" pos:line="35" pos:column="1">"     You  can  specify  multiple URLs or parts of URLs by writing\n"<pos:position pos:line="35" pos:column="70"/></literal>
<literal type="string" pos:line="36" pos:column="1">"     part sets within braces as in:\n"<pos:position pos:line="36" pos:column="40"/></literal>
<literal type="string" pos:line="37" pos:column="1">"\n"<pos:position pos:line="37" pos:column="5"/></literal>
<literal type="string" pos:line="38" pos:column="1">"      http://site.{one,two,three}.com\n"<pos:position pos:line="38" pos:column="42"/></literal>
<literal type="string" pos:line="39" pos:column="1">"\n"<pos:position pos:line="39" pos:column="5"/></literal>
<literal type="string" pos:line="40" pos:column="1">"     or you can get sequences of alphanumeric series by using  []\n"<pos:position pos:line="40" pos:column="70"/></literal>
<literal type="string" pos:line="41" pos:column="1">"     as in:\n"<pos:position pos:line="41" pos:column="16"/></literal>
<literal type="string" pos:line="42" pos:column="1">"\n"<pos:position pos:line="42" pos:column="5"/></literal>
<literal type="string" pos:line="43" pos:column="1">"      ftp://ftp.numericals.com/file[1-100].txt\n"<pos:position pos:line="43" pos:column="51"/></literal>
<literal type="string" pos:line="44" pos:column="1">"      ftp://ftp.numericals.com/file[001-100].txt    (with leading\n"<pos:position pos:line="44" pos:column="70"/></literal>
<literal type="string" pos:line="45" pos:column="1">"     zeros)\n"<pos:position pos:line="45" pos:column="16"/></literal>
<literal type="string" pos:line="46" pos:column="1">"      ftp://ftp.letters.com/file[a-z].txt\n"<pos:position pos:line="46" pos:column="46"/></literal>
<literal type="string" pos:line="47" pos:column="1">"\n"<pos:position pos:line="47" pos:column="5"/></literal>
<literal type="string" pos:line="48" pos:column="1">"     It is possible to specify up to 9 sets or series for a  URL,\n"<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="49" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="50" pos:column="2">puts<pos:position pos:line="50" pos:column="6"/></name><argument_list pos:line="50" pos:column="6">(
<argument><expr><literal type="string" pos:line="51" pos:column="1">"     but no nesting is supported at the moment:\n"<pos:position pos:line="51" pos:column="52"/></literal>
<literal type="string" pos:line="52" pos:column="1">"\n"<pos:position pos:line="52" pos:column="5"/></literal>
<literal type="string" pos:line="53" pos:column="1">"      http://www.any.org/archive[1996-1999]/volï¿½\n"<pos:position pos:line="53" pos:column="58"/></literal>
<literal type="string" pos:line="54" pos:column="1">"     ume[1-4]part{a,b,c,index}.html\n"<pos:position pos:line="54" pos:column="40"/></literal>
<literal type="string" pos:line="55" pos:column="1">"\n"<pos:position pos:line="55" pos:column="5"/></literal>
<literal type="string" pos:line="56" pos:column="1">"     Starting with curl 7.6, you can specify any amount  of  URLs\n"<pos:position pos:line="56" pos:column="70"/></literal>
<literal type="string" pos:line="57" pos:column="1">"     on  the  command  line. They will be fetched in a sequential\n"<pos:position pos:line="57" pos:column="70"/></literal>
<literal type="string" pos:line="58" pos:column="1">"     manner in the specified order.\n"<pos:position pos:line="58" pos:column="40"/></literal>
<literal type="string" pos:line="59" pos:column="1">"\n"<pos:position pos:line="59" pos:column="5"/></literal>
<literal type="string" pos:line="60" pos:column="1">"     Starting with curl 7.7, curl will attempt to re-use  connecï¿½\n"<pos:position pos:line="60" pos:column="75"/></literal>
<literal type="string" pos:line="61" pos:column="1">"     tions  for  multiple  file  transfers,  so that getting many\n"<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="62" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="63" pos:column="2">puts<pos:position pos:line="63" pos:column="6"/></name><argument_list pos:line="63" pos:column="6">(
<argument><expr><literal type="string" pos:line="64" pos:column="1">"     files from  the  same  server  will  not  do  multiple  conï¿½\n"<pos:position pos:line="64" pos:column="75"/></literal>
<literal type="string" pos:line="65" pos:column="1">"     nects/handshakes.  This  improves  speed.  Of course this is\n"<pos:position pos:line="65" pos:column="70"/></literal>
<literal type="string" pos:line="66" pos:column="1">"     only done on files specified on a single  command  line  and\n"<pos:position pos:line="66" pos:column="70"/></literal>
<literal type="string" pos:line="67" pos:column="1">"     cannot be used between separate curl invokes.\n"<pos:position pos:line="67" pos:column="55"/></literal>
<literal type="string" pos:line="68" pos:column="1">"OPTIONS\n"<pos:position pos:line="68" pos:column="12"/></literal>
<literal type="string" pos:line="69" pos:column="1">"     -a/--append\n"<pos:position pos:line="69" pos:column="21"/></literal>
<literal type="string" pos:line="70" pos:column="1">"          (FTP) When used in a ftp upload, this will tell curl to\n"<pos:position pos:line="70" pos:column="70"/></literal>
<literal type="string" pos:line="71" pos:column="1">"          append to the target file instead of overwriting it. If\n"<pos:position pos:line="71" pos:column="70"/></literal>
<literal type="string" pos:line="72" pos:column="1">"          the file doesn't exist, it will be created.\n"<pos:position pos:line="72" pos:column="58"/></literal>
<literal type="string" pos:line="73" pos:column="1">"\n"<pos:position pos:line="73" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="74" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="75" pos:column="2">puts<pos:position pos:line="75" pos:column="6"/></name><argument_list pos:line="75" pos:column="6">(
<argument><expr><literal type="string" pos:line="76" pos:column="1">"          If  this option is used twice, the second one will disï¿½\n"<pos:position pos:line="76" pos:column="75"/></literal>
<literal type="string" pos:line="77" pos:column="1">"          able append mode again.\n"<pos:position pos:line="77" pos:column="38"/></literal>
<literal type="string" pos:line="78" pos:column="1">"\n"<pos:position pos:line="78" pos:column="5"/></literal>
<literal type="string" pos:line="79" pos:column="1">"     -A/--user-agent &lt;agent string&gt;\n"<pos:position pos:line="79" pos:column="46"/></literal>
<literal type="string" pos:line="80" pos:column="1">"          (HTTP) Specify the User-Agent string  to  send  to  the\n"<pos:position pos:line="80" pos:column="70"/></literal>
<literal type="string" pos:line="81" pos:column="1">"          HTTP  server.  Some badly done CGIs fail if its not set\n"<pos:position pos:line="81" pos:column="70"/></literal>
<literal type="string" pos:line="82" pos:column="1">"          to \"Mozilla/4.0\".  To encode blanks in the string, surï¿½\n"<pos:position pos:line="82" pos:column="77"/></literal>
<literal type="string" pos:line="83" pos:column="1">"          round  the  string  with  single quote marks.  This can\n"<pos:position pos:line="83" pos:column="70"/></literal>
<literal type="string" pos:line="84" pos:column="1">"          also be set with the -H/--header flag of course.\n"<pos:position pos:line="84" pos:column="63"/></literal>
<literal type="string" pos:line="85" pos:column="1">"\n"<pos:position pos:line="85" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="86" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="87" pos:column="2">puts<pos:position pos:line="87" pos:column="6"/></name><argument_list pos:line="87" pos:column="6">(
<argument><expr><literal type="string" pos:line="88" pos:column="1">"          If this option is used more than  once,  the  last  one\n"<pos:position pos:line="88" pos:column="70"/></literal>
<literal type="string" pos:line="89" pos:column="1">"          will be the one to be used.\n"<pos:position pos:line="89" pos:column="42"/></literal>
<literal type="string" pos:line="90" pos:column="1">"\n"<pos:position pos:line="90" pos:column="5"/></literal>
<literal type="string" pos:line="91" pos:column="1">"     -b/--cookie &lt;name=data&gt;\n"<pos:position pos:line="91" pos:column="39"/></literal>
<literal type="string" pos:line="92" pos:column="1">"          (HTTP) Pass the data to the HTTP server as a cookie. It\n"<pos:position pos:line="92" pos:column="70"/></literal>
<literal type="string" pos:line="93" pos:column="1">"          is supposedly the data  previously  received  from  the\n"<pos:position pos:line="93" pos:column="70"/></literal>
<literal type="string" pos:line="94" pos:column="1">"          server  in a \"Set-Cookie:\" line.  The data should be in\n"<pos:position pos:line="94" pos:column="72"/></literal>
<literal type="string" pos:line="95" pos:column="1">"          the format \"NAME1=VALUE1; NAME2=VALUE2\".\n"<pos:position pos:line="95" pos:column="57"/></literal>
<literal type="string" pos:line="96" pos:column="1">"\n"<pos:position pos:line="96" pos:column="5"/></literal>
<literal type="string" pos:line="97" pos:column="1">"          If no '=' letter is used in the line, it is treated  as\n"<pos:position pos:line="97" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="98" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="99" pos:column="2">puts<pos:position pos:line="99" pos:column="6"/></name><argument_list pos:line="99" pos:column="6">(
<argument><expr><literal type="string" pos:line="100" pos:column="1">"          a  filename  to  use  to  read previously stored cookie\n"<pos:position pos:line="100" pos:column="70"/></literal>
<literal type="string" pos:line="101" pos:column="1">"          lines from, which should be used  in  this  session  if\n"<pos:position pos:line="101" pos:column="70"/></literal>
<literal type="string" pos:line="102" pos:column="1">"          they  match.  Using  this  method  also  activates  the\n"<pos:position pos:line="102" pos:column="70"/></literal>
<literal type="string" pos:line="103" pos:column="1">"          \"cookie parser\" which will make  curl  record  incoming\n"<pos:position pos:line="103" pos:column="72"/></literal>
<literal type="string" pos:line="104" pos:column="1">"          cookies too, which may be handy if you're using this in\n"<pos:position pos:line="104" pos:column="70"/></literal>
<literal type="string" pos:line="105" pos:column="1">"          combination with the  -L/--location  option.  The  file\n"<pos:position pos:line="105" pos:column="70"/></literal>
<literal type="string" pos:line="106" pos:column="1">"          format of the file to read cookies from should be plain\n"<pos:position pos:line="106" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="107" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="108" pos:column="2">puts<pos:position pos:line="108" pos:column="6"/></name><argument_list pos:line="108" pos:column="6">(
<argument><expr><literal type="string" pos:line="109" pos:column="1">"          HTTP headers or the netscape cookie file format.\n"<pos:position pos:line="109" pos:column="63"/></literal>
<literal type="string" pos:line="110" pos:column="1">"\n"<pos:position pos:line="110" pos:column="5"/></literal>
<literal type="string" pos:line="111" pos:column="1">"          NOTE that the file specified with -b/--cookie  is  only\n"<pos:position pos:line="111" pos:column="70"/></literal>
<literal type="string" pos:line="112" pos:column="1">"          used  as  input. No cookies will be stored in the file.\n"<pos:position pos:line="112" pos:column="70"/></literal>
<literal type="string" pos:line="113" pos:column="1">"          To store cookies, save the HTTP headers to a file using\n"<pos:position pos:line="113" pos:column="70"/></literal>
<literal type="string" pos:line="114" pos:column="1">"          -D/--dump-header!\n"<pos:position pos:line="114" pos:column="32"/></literal>
<literal type="string" pos:line="115" pos:column="1">"\n"<pos:position pos:line="115" pos:column="5"/></literal>
<literal type="string" pos:line="116" pos:column="1">"          If  this  option  is  used more than once, the last one\n"<pos:position pos:line="116" pos:column="70"/></literal>
<literal type="string" pos:line="117" pos:column="1">"          will be the one to be used.\n"<pos:position pos:line="117" pos:column="42"/></literal>
<literal type="string" pos:line="118" pos:column="1">"\n"<pos:position pos:line="118" pos:column="5"/></literal>
<literal type="string" pos:line="119" pos:column="1">"     -B/--use-ascii\n"<pos:position pos:line="119" pos:column="24"/></literal>
<literal type="string" pos:line="120" pos:column="1">"          Use ASCII transfer when getting an  FTP  file  or  LDAP\n"<pos:position pos:line="120" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="121" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="122" pos:column="2">puts<pos:position pos:line="122" pos:column="6"/></name><argument_list pos:line="122" pos:column="6">(
<argument><expr><literal type="string" pos:line="123" pos:column="1">"          info.  For  FTP,  this can also be enforced by using an\n"<pos:position pos:line="123" pos:column="70"/></literal>
<literal type="string" pos:line="124" pos:column="1">"          URL that ends with \";type=A\". This option  causes  data\n"<pos:position pos:line="124" pos:column="72"/></literal>
<literal type="string" pos:line="125" pos:column="1">"          sent to stdout to be in text mode for win32 systems.\n"<pos:position pos:line="125" pos:column="67"/></literal>
<literal type="string" pos:line="126" pos:column="1">"\n"<pos:position pos:line="126" pos:column="5"/></literal>
<literal type="string" pos:line="127" pos:column="1">"          If  this option is used twice, the second one will disï¿½\n"<pos:position pos:line="127" pos:column="75"/></literal>
<literal type="string" pos:line="128" pos:column="1">"          able ASCII usage.\n"<pos:position pos:line="128" pos:column="32"/></literal>
<literal type="string" pos:line="129" pos:column="1">"     --connect-timeout &lt;seconds&gt;\n"<pos:position pos:line="129" pos:column="43"/></literal>
<literal type="string" pos:line="130" pos:column="1">"          Maximum time in seconds that you allow  the  connection\n"<pos:position pos:line="130" pos:column="70"/></literal>
<literal type="string" pos:line="131" pos:column="1">"          to the server to take.  This only limits the connection\n"<pos:position pos:line="131" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="132" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="133" pos:column="2">puts<pos:position pos:line="133" pos:column="6"/></name><argument_list pos:line="133" pos:column="6">(
<argument><expr><literal type="string" pos:line="134" pos:column="1">"          phase, once curl has connected this  option  is  of  no\n"<pos:position pos:line="134" pos:column="70"/></literal>
<literal type="string" pos:line="135" pos:column="1">"          more  use.  This  option doesn't work in win32 systems.\n"<pos:position pos:line="135" pos:column="70"/></literal>
<literal type="string" pos:line="136" pos:column="1">"          See also the --max-time option.\n"<pos:position pos:line="136" pos:column="46"/></literal>
<literal type="string" pos:line="137" pos:column="1">"\n"<pos:position pos:line="137" pos:column="5"/></literal>
<literal type="string" pos:line="138" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="138" pos:column="70"/></literal>
<literal type="string" pos:line="139" pos:column="1">"          will be used.\n"<pos:position pos:line="139" pos:column="28"/></literal>
<literal type="string" pos:line="140" pos:column="1">"\n"<pos:position pos:line="140" pos:column="5"/></literal>
<literal type="string" pos:line="141" pos:column="1">"     -c/--continue\n"<pos:position pos:line="141" pos:column="23"/></literal>
<literal type="string" pos:line="142" pos:column="1">"          Deprecated. Use '-C -' instead.  Continue/Resume a preï¿½\n"<pos:position pos:line="142" pos:column="75"/></literal>
<literal type="string" pos:line="143" pos:column="1">"          vious file transfer. This instructs  curl  to  continue\n"<pos:position pos:line="143" pos:column="70"/></literal>
<literal type="string" pos:line="144" pos:column="1">"          appending  data  on  the  file  where it was previously\n"<pos:position pos:line="144" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="145" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="146" pos:column="2">puts<pos:position pos:line="146" pos:column="6"/></name><argument_list pos:line="146" pos:column="6">(
<argument><expr><literal type="string" pos:line="147" pos:column="1">"          left, possibly because of a broken  connection  to  the\n"<pos:position pos:line="147" pos:column="70"/></literal>
<literal type="string" pos:line="148" pos:column="1">"          server.  There  must be a named physical file to append\n"<pos:position pos:line="148" pos:column="70"/></literal>
<literal type="string" pos:line="149" pos:column="1">"          to for this to work.  Note: Upload resume  is  depening\n"<pos:position pos:line="149" pos:column="70"/></literal>
<literal type="string" pos:line="150" pos:column="1">"          on  a  command named SIZE not always present in all ftp\n"<pos:position pos:line="150" pos:column="70"/></literal>
<literal type="string" pos:line="151" pos:column="1">"          servers! Upload resume is for FTP only.  HTTP resume is\n"<pos:position pos:line="151" pos:column="70"/></literal>
<literal type="string" pos:line="152" pos:column="1">"          only possible with HTTP/1.1 or later servers.\n"<pos:position pos:line="152" pos:column="60"/></literal>
<literal type="string" pos:line="153" pos:column="1">"\n"<pos:position pos:line="153" pos:column="5"/></literal>
<literal type="string" pos:line="154" pos:column="1">"     -C/--continue-at &lt;offset&gt;\n"<pos:position pos:line="154" pos:column="41"/></literal>
<literal type="string" pos:line="155" pos:column="1">"          Continue/Resume  a  previous file transfer at the given\n"<pos:position pos:line="155" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="156" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="157" pos:column="2">puts<pos:position pos:line="157" pos:column="6"/></name><argument_list pos:line="157" pos:column="6">(
<argument><expr><literal type="string" pos:line="158" pos:column="1">"          offset. The given offset is the exact number  of  bytes\n"<pos:position pos:line="158" pos:column="70"/></literal>
<literal type="string" pos:line="159" pos:column="1">"          that  will be skipped counted from the beginning of the\n"<pos:position pos:line="159" pos:column="70"/></literal>
<literal type="string" pos:line="160" pos:column="1">"          source file before it is transfered to the destination.\n"<pos:position pos:line="160" pos:column="70"/></literal>
<literal type="string" pos:line="161" pos:column="1">"          If  used with uploads, the ftp server command SIZE will\n"<pos:position pos:line="161" pos:column="70"/></literal>
<literal type="string" pos:line="162" pos:column="1">"          not be used by curl. Upload resume  is  for  FTP  only.\n"<pos:position pos:line="162" pos:column="70"/></literal>
<literal type="string" pos:line="163" pos:column="1">"          HTTP  resume  is  only  possible with HTTP/1.1 or later\n"<pos:position pos:line="163" pos:column="70"/></literal>
<literal type="string" pos:line="164" pos:column="1">"          servers.\n"<pos:position pos:line="164" pos:column="23"/></literal>
<literal type="string" pos:line="165" pos:column="1">"\n"<pos:position pos:line="165" pos:column="5"/></literal>
<literal type="string" pos:line="166" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="166" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="167" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="168" pos:column="2">puts<pos:position pos:line="168" pos:column="6"/></name><argument_list pos:line="168" pos:column="6">(
<argument><expr><literal type="string" pos:line="169" pos:column="1">"          will be used.\n"<pos:position pos:line="169" pos:column="28"/></literal>
<literal type="string" pos:line="170" pos:column="1">"\n"<pos:position pos:line="170" pos:column="5"/></literal>
<literal type="string" pos:line="171" pos:column="1">"     -d/--data &lt;data&gt;\n"<pos:position pos:line="171" pos:column="32"/></literal>
<literal type="string" pos:line="172" pos:column="1">"          (HTTP)  Sends  the  specified data in a POST request to\n"<pos:position pos:line="172" pos:column="70"/></literal>
<literal type="string" pos:line="173" pos:column="1">"          the HTTP server, in a way that can emulate as if a user\n"<pos:position pos:line="173" pos:column="70"/></literal>
<literal type="string" pos:line="174" pos:column="1">"          has  filled  in a HTML form and pressed the submit butï¿½\n"<pos:position pos:line="174" pos:column="75"/></literal>
<literal type="string" pos:line="175" pos:column="1">"          ton. Note that the data is sent  exactly  as  specified\n"<pos:position pos:line="175" pos:column="70"/></literal>
<literal type="string" pos:line="176" pos:column="1">"          with  no  extra processing (with all newlines cut off).\n"<pos:position pos:line="176" pos:column="70"/></literal>
<literal type="string" pos:line="177" pos:column="1">"          The data is expected to  be  \"url-encoded\".  This  will\n"<pos:position pos:line="177" pos:column="72"/></literal></expr></argument>
)<pos:position pos:line="178" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="179" pos:column="2">puts<pos:position pos:line="179" pos:column="6"/></name><argument_list pos:line="179" pos:column="6">(
<argument><expr><literal type="string" pos:line="180" pos:column="1">"          cause  curl  to  pass  the data to the server using the\n"<pos:position pos:line="180" pos:column="70"/></literal>
<literal type="string" pos:line="181" pos:column="1">"          content-type application/x-www-form-urlencoded. Compare\n"<pos:position pos:line="181" pos:column="70"/></literal>
<literal type="string" pos:line="182" pos:column="1">"          to -F. If more than one -d/--data option is used on the\n"<pos:position pos:line="182" pos:column="70"/></literal>
<literal type="string" pos:line="183" pos:column="1">"          same command line, the data pieces  specified  will  be\n"<pos:position pos:line="183" pos:column="70"/></literal>
<literal type="string" pos:line="184" pos:column="1">"          merged together with a separating &amp;-letter. Thus, using\n"<pos:position pos:line="184" pos:column="74"/></literal>
<literal type="string" pos:line="185" pos:column="1">"          '-d name=daniel -d skill=lousy' would generate  a  post\n"<pos:position pos:line="185" pos:column="70"/></literal>
<literal type="string" pos:line="186" pos:column="1">"          chunk that looks like 'name=daniel&amp;skill=lousy'.\n"<pos:position pos:line="186" pos:column="67"/></literal>
<literal type="string" pos:line="187" pos:column="1">"\n"<pos:position pos:line="187" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="188" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="189" pos:column="2">puts<pos:position pos:line="189" pos:column="6"/></name><argument_list pos:line="189" pos:column="6">(
<argument><expr><literal type="string" pos:line="190" pos:column="1">"          If  you  start  the  data  with  the letter @, the rest\n"<pos:position pos:line="190" pos:column="70"/></literal>
<literal type="string" pos:line="191" pos:column="1">"          should be a file name to read the data from,  or  -  if\n"<pos:position pos:line="191" pos:column="70"/></literal>
<literal type="string" pos:line="192" pos:column="1">"          you  want  curl  to  read  the  data  from  stdin.  The\n"<pos:position pos:line="192" pos:column="70"/></literal>
<literal type="string" pos:line="193" pos:column="1">"          contents of the file must already be url-encoded.  Mulï¿½\n"<pos:position pos:line="193" pos:column="75"/></literal>
<literal type="string" pos:line="194" pos:column="1">"          tiple files can also be specified.\n"<pos:position pos:line="194" pos:column="49"/></literal>
<literal type="string" pos:line="195" pos:column="1">"\n"<pos:position pos:line="195" pos:column="5"/></literal>
<literal type="string" pos:line="196" pos:column="1">"          To  post data purely binary, you should instead use the\n"<pos:position pos:line="196" pos:column="70"/></literal>
<literal type="string" pos:line="197" pos:column="1">"          --data-binary option.\n"<pos:position pos:line="197" pos:column="36"/></literal>
<literal type="string" pos:line="198" pos:column="1">"\n"<pos:position pos:line="198" pos:column="5"/></literal>
<literal type="string" pos:line="199" pos:column="1">"          -d/--data is the same as --data-ascii.\n"<pos:position pos:line="199" pos:column="53"/></literal>
<literal type="string" pos:line="200" pos:column="1">"\n"<pos:position pos:line="200" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="201" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="202" pos:column="2">puts<pos:position pos:line="202" pos:column="6"/></name><argument_list pos:line="202" pos:column="6">(
<argument><expr><literal type="string" pos:line="203" pos:column="1">"          If this option is used serveral times, the ones followï¿½\n"<pos:position pos:line="203" pos:column="75"/></literal>
<literal type="string" pos:line="204" pos:column="1">"          ing the first will append data.\n"<pos:position pos:line="204" pos:column="46"/></literal>
<literal type="string" pos:line="205" pos:column="1">"\n"<pos:position pos:line="205" pos:column="5"/></literal>
<literal type="string" pos:line="206" pos:column="1">"     --data-ascii &lt;data&gt;\n"<pos:position pos:line="206" pos:column="35"/></literal>
<literal type="string" pos:line="207" pos:column="1">"          (HTTP) This is an alias for the -d/--data option.\n"<pos:position pos:line="207" pos:column="64"/></literal>
<literal type="string" pos:line="208" pos:column="1">"\n"<pos:position pos:line="208" pos:column="5"/></literal>
<literal type="string" pos:line="209" pos:column="1">"          If this option is used serveral times, the ones followï¿½\n"<pos:position pos:line="209" pos:column="75"/></literal>
<literal type="string" pos:line="210" pos:column="1">"          ing the first will append data.\n"<pos:position pos:line="210" pos:column="46"/></literal>
<literal type="string" pos:line="211" pos:column="1">"\n"<pos:position pos:line="211" pos:column="5"/></literal>
<literal type="string" pos:line="212" pos:column="1">"     --data-binary &lt;data&gt;\n"<pos:position pos:line="212" pos:column="36"/></literal>
<literal type="string" pos:line="213" pos:column="1">"          (HTTP) This posts data in a similar manner  as  --data-\n"<pos:position pos:line="213" pos:column="70"/></literal>
<literal type="string" pos:line="214" pos:column="1">"          ascii  does, although when using this option the entire\n"<pos:position pos:line="214" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="215" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="216" pos:column="2">puts<pos:position pos:line="216" pos:column="6"/></name><argument_list pos:line="216" pos:column="6">(
<argument><expr><literal type="string" pos:line="217" pos:column="1">"          context of the posted data is kept as-is. If  you  want\n"<pos:position pos:line="217" pos:column="70"/></literal>
<literal type="string" pos:line="218" pos:column="1">"          to  post  a binary file without the strip-newlines feaï¿½\n"<pos:position pos:line="218" pos:column="75"/></literal>
<literal type="string" pos:line="219" pos:column="1">"          ture of the --data-ascii option, this is for you.\n"<pos:position pos:line="219" pos:column="64"/></literal>
<literal type="string" pos:line="220" pos:column="1">"\n"<pos:position pos:line="220" pos:column="5"/></literal>
<literal type="string" pos:line="221" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="221" pos:column="70"/></literal>
<literal type="string" pos:line="222" pos:column="1">"          will be used.\n"<pos:position pos:line="222" pos:column="28"/></literal>
<literal type="string" pos:line="223" pos:column="1">"\n"<pos:position pos:line="223" pos:column="5"/></literal>
<literal type="string" pos:line="224" pos:column="1">"          If this option is used serveral times, the ones followï¿½\n"<pos:position pos:line="224" pos:column="75"/></literal>
<literal type="string" pos:line="225" pos:column="1">"          ing the first will append data.\n"<pos:position pos:line="225" pos:column="46"/></literal>
<literal type="string" pos:line="226" pos:column="1">"\n"<pos:position pos:line="226" pos:column="5"/></literal>
<literal type="string" pos:line="227" pos:column="1">"     -D/--dump-header &lt;file&gt;\n"<pos:position pos:line="227" pos:column="39"/></literal>
<literal type="string" pos:line="228" pos:column="1">"          (HTTP/FTP) Write the HTTP headers to this  file.  Write\n"<pos:position pos:line="228" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="229" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="230" pos:column="2">puts<pos:position pos:line="230" pos:column="6"/></name><argument_list pos:line="230" pos:column="6">(
<argument><expr><literal type="string" pos:line="231" pos:column="1">"          the FTP file info to this file if -I/--head is used.\n"<pos:position pos:line="231" pos:column="67"/></literal>
<literal type="string" pos:line="232" pos:column="1">"\n"<pos:position pos:line="232" pos:column="5"/></literal>
<literal type="string" pos:line="233" pos:column="1">"          This  option is handy to use when you want to store the\n"<pos:position pos:line="233" pos:column="70"/></literal>
<literal type="string" pos:line="234" pos:column="1">"          cookies that a HTTP site  sends  to  you.  The  cookies\n"<pos:position pos:line="234" pos:column="70"/></literal>
<literal type="string" pos:line="235" pos:column="1">"          could then be read in a second curl invoke by using the\n"<pos:position pos:line="235" pos:column="70"/></literal>
<literal type="string" pos:line="236" pos:column="1">"          -b/--cookie option!\n"<pos:position pos:line="236" pos:column="34"/></literal>
<literal type="string" pos:line="237" pos:column="1">"\n"<pos:position pos:line="237" pos:column="5"/></literal>
<literal type="string" pos:line="238" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="238" pos:column="70"/></literal>
<literal type="string" pos:line="239" pos:column="1">"          will be used.\n"<pos:position pos:line="239" pos:column="28"/></literal>
<literal type="string" pos:line="240" pos:column="1">"\n"<pos:position pos:line="240" pos:column="5"/></literal>
<literal type="string" pos:line="241" pos:column="1">"     -e/--referer &lt;URL&gt;\n"<pos:position pos:line="241" pos:column="34"/></literal>
<literal type="string" pos:line="242" pos:column="1">"          (HTTP) Sends the \"Referer Page\" information to the HTTP\n"<pos:position pos:line="242" pos:column="72"/></literal></expr></argument>
)<pos:position pos:line="243" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="244" pos:column="2">puts<pos:position pos:line="244" pos:column="6"/></name><argument_list pos:line="244" pos:column="6">(
<argument><expr><literal type="string" pos:line="245" pos:column="1">"          server. This can also be set with the -H/--header  flag\n"<pos:position pos:line="245" pos:column="70"/></literal>
<literal type="string" pos:line="246" pos:column="1">"          of course.  When used with -L/--location you can append\n"<pos:position pos:line="246" pos:column="70"/></literal>
<literal type="string" pos:line="247" pos:column="1">"          \";auto\" to the referer URL to make  curl  automatically\n"<pos:position pos:line="247" pos:column="72"/></literal>
<literal type="string" pos:line="248" pos:column="1">"          set  the  previous  URL  when  it  follows  a Location:\n"<pos:position pos:line="248" pos:column="70"/></literal>
<literal type="string" pos:line="249" pos:column="1">"          header. The \";auto\" string can be used alone,  even  if\n"<pos:position pos:line="249" pos:column="72"/></literal>
<literal type="string" pos:line="250" pos:column="1">"          you don't set an initial referer.\n"<pos:position pos:line="250" pos:column="48"/></literal>
<literal type="string" pos:line="251" pos:column="1">"\n"<pos:position pos:line="251" pos:column="5"/></literal>
<literal type="string" pos:line="252" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="252" pos:column="70"/></literal>
<literal type="string" pos:line="253" pos:column="1">"          will be used.\n"<pos:position pos:line="253" pos:column="28"/></literal>
<literal type="string" pos:line="254" pos:column="1">"\n"<pos:position pos:line="254" pos:column="5"/></literal>
<literal type="string" pos:line="255" pos:column="1">"     --egd-file &lt;file&gt;\n"<pos:position pos:line="255" pos:column="33"/></literal></expr></argument>
)<pos:position pos:line="256" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="257" pos:column="2">puts<pos:position pos:line="257" pos:column="6"/></name><argument_list pos:line="257" pos:column="6">(
<argument><expr><literal type="string" pos:line="258" pos:column="1">"          (HTTPS) Specify the path name to the Entropy  Gathering\n"<pos:position pos:line="258" pos:column="70"/></literal>
<literal type="string" pos:line="259" pos:column="1">"          Daemon  socket.  The  socket is used to seed the random\n"<pos:position pos:line="259" pos:column="70"/></literal>
<literal type="string" pos:line="260" pos:column="1">"          engine for SSL connections. See also the  --random-file\n"<pos:position pos:line="260" pos:column="70"/></literal>
<literal type="string" pos:line="261" pos:column="1">"          option.\n"<pos:position pos:line="261" pos:column="22"/></literal>
<literal type="string" pos:line="262" pos:column="1">"\n"<pos:position pos:line="262" pos:column="5"/></literal>
<literal type="string" pos:line="263" pos:column="1">"     -E/--cert &lt;certificate[:password]&gt;\n"<pos:position pos:line="263" pos:column="50"/></literal>
<literal type="string" pos:line="264" pos:column="1">"          (HTTPS)  Tells  curl  to  use the specified certificate\n"<pos:position pos:line="264" pos:column="70"/></literal>
<literal type="string" pos:line="265" pos:column="1">"          file when getting a file with  HTTPS.  The  certificate\n"<pos:position pos:line="265" pos:column="70"/></literal>
<literal type="string" pos:line="266" pos:column="1">"          must  be in PEM format.  If the optional password isn't\n"<pos:position pos:line="266" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="267" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="268" pos:column="2">puts<pos:position pos:line="268" pos:column="6"/></name><argument_list pos:line="268" pos:column="6">(
<argument><expr><literal type="string" pos:line="269" pos:column="1">"          specified, it will be queried for on the terminal. Note\n"<pos:position pos:line="269" pos:column="70"/></literal>
<literal type="string" pos:line="270" pos:column="1">"          that  this  certificate is the private key and the priï¿½\n"<pos:position pos:line="270" pos:column="75"/></literal>
<literal type="string" pos:line="271" pos:column="1">"          vate certificate concatenated!\n"<pos:position pos:line="271" pos:column="45"/></literal>
<literal type="string" pos:line="272" pos:column="1">"\n"<pos:position pos:line="272" pos:column="5"/></literal>
<literal type="string" pos:line="273" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="273" pos:column="70"/></literal>
<literal type="string" pos:line="274" pos:column="1">"          will be used.\n"<pos:position pos:line="274" pos:column="28"/></literal>
<literal type="string" pos:line="275" pos:column="1">"\n"<pos:position pos:line="275" pos:column="5"/></literal>
<literal type="string" pos:line="276" pos:column="1">"     --cacert &lt;CA certificate&gt;\n"<pos:position pos:line="276" pos:column="41"/></literal>
<literal type="string" pos:line="277" pos:column="1">"          (HTTPS)  Tells  curl  to  use the specified certificate\n"<pos:position pos:line="277" pos:column="70"/></literal>
<literal type="string" pos:line="278" pos:column="1">"          file to verify the peer. The certificate must be in PEM\n"<pos:position pos:line="278" pos:column="70"/></literal>
<literal type="string" pos:line="279" pos:column="1">"          format.\n"<pos:position pos:line="279" pos:column="22"/></literal>
<literal type="string" pos:line="280" pos:column="1">"\n"<pos:position pos:line="280" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="281" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="282" pos:column="2">puts<pos:position pos:line="282" pos:column="6"/></name><argument_list pos:line="282" pos:column="6">(
<argument><expr><literal type="string" pos:line="283" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="283" pos:column="70"/></literal>
<literal type="string" pos:line="284" pos:column="1">"          will be used.\n"<pos:position pos:line="284" pos:column="28"/></literal>
<literal type="string" pos:line="285" pos:column="1">"\n"<pos:position pos:line="285" pos:column="5"/></literal>
<literal type="string" pos:line="286" pos:column="1">"     -f/--fail\n"<pos:position pos:line="286" pos:column="19"/></literal>
<literal type="string" pos:line="287" pos:column="1">"          (HTTP) Fail silently  (no  output  at  all)  on  server\n"<pos:position pos:line="287" pos:column="70"/></literal>
<literal type="string" pos:line="288" pos:column="1">"          errors.  This is mostly done like this to better enable\n"<pos:position pos:line="288" pos:column="70"/></literal>
<literal type="string" pos:line="289" pos:column="1">"          scripts etc to better deal  with  failed  attempts.  In\n"<pos:position pos:line="289" pos:column="70"/></literal>
<literal type="string" pos:line="290" pos:column="1">"          normal cases when a HTTP server fails to deliver a docï¿½\n"<pos:position pos:line="290" pos:column="75"/></literal>
<literal type="string" pos:line="291" pos:column="1">"          ument, it returns a HTML  document  stating  so  (which\n"<pos:position pos:line="291" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="292" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="293" pos:column="2">puts<pos:position pos:line="293" pos:column="6"/></name><argument_list pos:line="293" pos:column="6">(
<argument><expr><literal type="string" pos:line="294" pos:column="1">"          often also describes why and more). This flag will preï¿½\n"<pos:position pos:line="294" pos:column="75"/></literal>
<literal type="string" pos:line="295" pos:column="1">"          vent  curl  from  outputting  that  and  fail  silently\n"<pos:position pos:line="295" pos:column="70"/></literal>
<literal type="string" pos:line="296" pos:column="1">"          instead.\n"<pos:position pos:line="296" pos:column="23"/></literal>
<literal type="string" pos:line="297" pos:column="1">"\n"<pos:position pos:line="297" pos:column="5"/></literal>
<literal type="string" pos:line="298" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="298" pos:column="70"/></literal>
<literal type="string" pos:line="299" pos:column="1">"          disable silent failure.\n"<pos:position pos:line="299" pos:column="38"/></literal>
<literal type="string" pos:line="300" pos:column="1">"\n"<pos:position pos:line="300" pos:column="5"/></literal>
<literal type="string" pos:line="301" pos:column="1">"     -F/--form &lt;name=content&gt;\n"<pos:position pos:line="301" pos:column="40"/></literal>
<literal type="string" pos:line="302" pos:column="1">"          (HTTP) This lets curl emulate a filled in form in which\n"<pos:position pos:line="302" pos:column="70"/></literal>
<literal type="string" pos:line="303" pos:column="1">"          a  user has pressed the submit button. This causes curl\n"<pos:position pos:line="303" pos:column="70"/></literal>
<literal type="string" pos:line="304" pos:column="1">"          to POST data using the content-type multipart/form-data\n"<pos:position pos:line="304" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="305" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="306" pos:column="2">puts<pos:position pos:line="306" pos:column="6"/></name><argument_list pos:line="306" pos:column="6">(
<argument><expr><literal type="string" pos:line="307" pos:column="1">"          according  to RFC1867. This enables uploading of binary\n"<pos:position pos:line="307" pos:column="70"/></literal>
<literal type="string" pos:line="308" pos:column="1">"          files etc. To force the 'content' part to be be a file,\n"<pos:position pos:line="308" pos:column="70"/></literal>
<literal type="string" pos:line="309" pos:column="1">"          prefix  the  file  name with an @ sign. To just get the\n"<pos:position pos:line="309" pos:column="70"/></literal>
<literal type="string" pos:line="310" pos:column="1">"          content part from a file, prefix the file name with the\n"<pos:position pos:line="310" pos:column="70"/></literal>
<literal type="string" pos:line="311" pos:column="1">"          letter &lt;. The difference between @ and &lt; is then that @\n"<pos:position pos:line="311" pos:column="76"/></literal>
<literal type="string" pos:line="312" pos:column="1">"          makes a file get attached in the post as a file upload,\n"<pos:position pos:line="312" pos:column="70"/></literal>
<literal type="string" pos:line="313" pos:column="1">"          while  the  &lt;  makes a text field and just get the conï¿½\n"<pos:position pos:line="313" pos:column="78"/></literal></expr></argument>
)<pos:position pos:line="314" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="315" pos:column="2">puts<pos:position pos:line="315" pos:column="6"/></name><argument_list pos:line="315" pos:column="6">(
<argument><expr><literal type="string" pos:line="316" pos:column="1">"          tents for that text field from a file.\n"<pos:position pos:line="316" pos:column="53"/></literal>
<literal type="string" pos:line="317" pos:column="1">"          Example, to send your  password  file  to  the  server,\n"<pos:position pos:line="317" pos:column="70"/></literal>
<literal type="string" pos:line="318" pos:column="1">"          where 'password' is the name of the form-field to which\n"<pos:position pos:line="318" pos:column="70"/></literal>
<literal type="string" pos:line="319" pos:column="1">"          /etc/passwd will be the input:\n"<pos:position pos:line="319" pos:column="45"/></literal>
<literal type="string" pos:line="320" pos:column="1">"\n"<pos:position pos:line="320" pos:column="5"/></literal>
<literal type="string" pos:line="321" pos:column="1">"          curl -F password=@/etc/passwd www.mypasswords.com\n"<pos:position pos:line="321" pos:column="64"/></literal>
<literal type="string" pos:line="322" pos:column="1">"\n"<pos:position pos:line="322" pos:column="5"/></literal>
<literal type="string" pos:line="323" pos:column="1">"          To read the file's content from stdin insted of a file,\n"<pos:position pos:line="323" pos:column="70"/></literal>
<literal type="string" pos:line="324" pos:column="1">"          use - where the file name should've been. This goes for\n"<pos:position pos:line="324" pos:column="70"/></literal>
<literal type="string" pos:line="325" pos:column="1">"          both @ and &lt; constructs.\n"<pos:position pos:line="325" pos:column="42"/></literal>
<literal type="string" pos:line="326" pos:column="1">"\n"<pos:position pos:line="326" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="327" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="328" pos:column="2">puts<pos:position pos:line="328" pos:column="6"/></name><argument_list pos:line="328" pos:column="6">(
<argument><expr><literal type="string" pos:line="329" pos:column="1">"          This option can be used multiple times.\n"<pos:position pos:line="329" pos:column="54"/></literal>
<literal type="string" pos:line="330" pos:column="1">"\n"<pos:position pos:line="330" pos:column="5"/></literal>
<literal type="string" pos:line="331" pos:column="1">"     -g/--globoff\n"<pos:position pos:line="331" pos:column="22"/></literal>
<literal type="string" pos:line="332" pos:column="1">"          This option switches off  the  \"URL  globbing  parser\".\n"<pos:position pos:line="332" pos:column="72"/></literal>
<literal type="string" pos:line="333" pos:column="1">"          When  you  set  this  option, you can specify URLs that\n"<pos:position pos:line="333" pos:column="70"/></literal>
<literal type="string" pos:line="334" pos:column="1">"          contain the letters  {}[]  without  having  them  being\n"<pos:position pos:line="334" pos:column="70"/></literal>
<literal type="string" pos:line="335" pos:column="1">"          interpreted by curl itself. Note that these letters are\n"<pos:position pos:line="335" pos:column="70"/></literal>
<literal type="string" pos:line="336" pos:column="1">"          not normal  legal  URL  contents  but  they  should  be\n"<pos:position pos:line="336" pos:column="70"/></literal>
<literal type="string" pos:line="337" pos:column="1">"          encoded according to the URI standard. (Option added in\n"<pos:position pos:line="337" pos:column="70"/></literal>
<literal type="string" pos:line="338" pos:column="1">"          curl 7.6)\n"<pos:position pos:line="338" pos:column="24"/></literal>
<literal type="string" pos:line="339" pos:column="1">"\n"<pos:position pos:line="339" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="340" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="341" pos:column="2">puts<pos:position pos:line="341" pos:column="6"/></name><argument_list pos:line="341" pos:column="6">(
<argument><expr><literal type="string" pos:line="342" pos:column="1">"     -h/--help\n"<pos:position pos:line="342" pos:column="19"/></literal>
<literal type="string" pos:line="343" pos:column="1">"          Usage help.\n"<pos:position pos:line="343" pos:column="26"/></literal>
<literal type="string" pos:line="344" pos:column="1">"\n"<pos:position pos:line="344" pos:column="5"/></literal>
<literal type="string" pos:line="345" pos:column="1">"     -H/--header &lt;header&gt;\n"<pos:position pos:line="345" pos:column="36"/></literal>
<literal type="string" pos:line="346" pos:column="1">"          (HTTP) Extra header to use when getting a web page. You\n"<pos:position pos:line="346" pos:column="70"/></literal>
<literal type="string" pos:line="347" pos:column="1">"          may  specify  any number of extra headers. Note that if\n"<pos:position pos:line="347" pos:column="70"/></literal>
<literal type="string" pos:line="348" pos:column="1">"          you should add a custom header that has the  same  name\n"<pos:position pos:line="348" pos:column="70"/></literal>
<literal type="string" pos:line="349" pos:column="1">"          as one of the internal ones curl would use, your exterï¿½\n"<pos:position pos:line="349" pos:column="75"/></literal>
<literal type="string" pos:line="350" pos:column="1">"          nally set header will be used instead of  the  internal\n"<pos:position pos:line="350" pos:column="70"/></literal>
<literal type="string" pos:line="351" pos:column="1">"          one.  This  allows you to make even trickier stuff than\n"<pos:position pos:line="351" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="352" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="353" pos:column="2">puts<pos:position pos:line="353" pos:column="6"/></name><argument_list pos:line="353" pos:column="6">(
<argument><expr><literal type="string" pos:line="354" pos:column="1">"          curl would normally do. You should not  replace  interï¿½\n"<pos:position pos:line="354" pos:column="75"/></literal>
<literal type="string" pos:line="355" pos:column="1">"          nally  set  headers without knowing perfectly well what\n"<pos:position pos:line="355" pos:column="70"/></literal>
<literal type="string" pos:line="356" pos:column="1">"          you're doing. Replacing an  internal  header  with  one\n"<pos:position pos:line="356" pos:column="70"/></literal>
<literal type="string" pos:line="357" pos:column="1">"          without  content  on  the  right side of the colon will\n"<pos:position pos:line="357" pos:column="70"/></literal>
<literal type="string" pos:line="358" pos:column="1">"          prevent that header from appearing.\n"<pos:position pos:line="358" pos:column="50"/></literal>
<literal type="string" pos:line="359" pos:column="1">"\n"<pos:position pos:line="359" pos:column="5"/></literal>
<literal type="string" pos:line="360" pos:column="1">"          This option can be used multiple times.\n"<pos:position pos:line="360" pos:column="54"/></literal>
<literal type="string" pos:line="361" pos:column="1">"\n"<pos:position pos:line="361" pos:column="5"/></literal>
<literal type="string" pos:line="362" pos:column="1">"     -i/--include\n"<pos:position pos:line="362" pos:column="22"/></literal>
<literal type="string" pos:line="363" pos:column="1">"          (HTTP) Include the HTTP-header in the output. The HTTP-\n"<pos:position pos:line="363" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="364" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="365" pos:column="2">puts<pos:position pos:line="365" pos:column="6"/></name><argument_list pos:line="365" pos:column="6">(
<argument><expr><literal type="string" pos:line="366" pos:column="1">"          header  includes  things  like server-name, date of the\n"<pos:position pos:line="366" pos:column="70"/></literal>
<literal type="string" pos:line="367" pos:column="1">"          document, HTTP-version and more...\n"<pos:position pos:line="367" pos:column="49"/></literal>
<literal type="string" pos:line="368" pos:column="1">"\n"<pos:position pos:line="368" pos:column="5"/></literal>
<literal type="string" pos:line="369" pos:column="1">"          If this option is used twice,  the  second  will  again\n"<pos:position pos:line="369" pos:column="70"/></literal>
<literal type="string" pos:line="370" pos:column="1">"          disable header include.\n"<pos:position pos:line="370" pos:column="38"/></literal>
<literal type="string" pos:line="371" pos:column="1">"\n"<pos:position pos:line="371" pos:column="5"/></literal>
<literal type="string" pos:line="372" pos:column="1">"     --interface &lt;name&gt;\n"<pos:position pos:line="372" pos:column="34"/></literal>
<literal type="string" pos:line="373" pos:column="1">"          Perform  an  operation using a specified interface. You\n"<pos:position pos:line="373" pos:column="70"/></literal>
<literal type="string" pos:line="374" pos:column="1">"          can enter interface name, IP address or host  name.  An\n"<pos:position pos:line="374" pos:column="70"/></literal>
<literal type="string" pos:line="375" pos:column="1">"          example could look like:\n"<pos:position pos:line="375" pos:column="39"/></literal>
<literal type="string" pos:line="376" pos:column="1">"          curl --interface eth0:1 http://www.netscape.com/\n"<pos:position pos:line="376" pos:column="63"/></literal>
<literal type="string" pos:line="377" pos:column="1">"\n"<pos:position pos:line="377" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="378" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="379" pos:column="2">puts<pos:position pos:line="379" pos:column="6"/></name><argument_list pos:line="379" pos:column="6">(
<argument><expr><literal type="string" pos:line="380" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="380" pos:column="70"/></literal>
<literal type="string" pos:line="381" pos:column="1">"          will be used.\n"<pos:position pos:line="381" pos:column="28"/></literal>
<literal type="string" pos:line="382" pos:column="1">"\n"<pos:position pos:line="382" pos:column="5"/></literal>
<literal type="string" pos:line="383" pos:column="1">"     -I/--head\n"<pos:position pos:line="383" pos:column="19"/></literal>
<literal type="string" pos:line="384" pos:column="1">"          (HTTP/FTP) Fetch  the  HTTP-header  only!  HTTP-servers\n"<pos:position pos:line="384" pos:column="70"/></literal>
<literal type="string" pos:line="385" pos:column="1">"          feature the command HEAD which this uses to get nothing\n"<pos:position pos:line="385" pos:column="70"/></literal>
<literal type="string" pos:line="386" pos:column="1">"          but the header of a document. When used on a FTP  file,\n"<pos:position pos:line="386" pos:column="70"/></literal>
<literal type="string" pos:line="387" pos:column="1">"          curl displays the file size only.\n"<pos:position pos:line="387" pos:column="48"/></literal>
<literal type="string" pos:line="388" pos:column="1">"\n"<pos:position pos:line="388" pos:column="5"/></literal>
<literal type="string" pos:line="389" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="389" pos:column="70"/></literal>
<literal type="string" pos:line="390" pos:column="1">"          disable header only.\n"<pos:position pos:line="390" pos:column="35"/></literal>
<literal type="string" pos:line="391" pos:column="1">"\n"<pos:position pos:line="391" pos:column="5"/></literal>
<literal type="string" pos:line="392" pos:column="1">"     --krb4 &lt;level&gt;\n"<pos:position pos:line="392" pos:column="30"/></literal></expr></argument>
)<pos:position pos:line="393" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="394" pos:column="2">puts<pos:position pos:line="394" pos:column="6"/></name><argument_list pos:line="394" pos:column="6">(
<argument><expr><literal type="string" pos:line="395" pos:column="1">"          (FTP) Enable  kerberos4  authentication  and  use.  The\n"<pos:position pos:line="395" pos:column="70"/></literal>
<literal type="string" pos:line="396" pos:column="1">"          level  must  be  entered  and should be one of 'clear',\n"<pos:position pos:line="396" pos:column="70"/></literal>
<literal type="string" pos:line="397" pos:column="1">"          'safe', 'confidential' or 'private'. Should you  use  a\n"<pos:position pos:line="397" pos:column="70"/></literal>
<literal type="string" pos:line="398" pos:column="1">"          level  that is not one of these, 'private' will instead\n"<pos:position pos:line="398" pos:column="70"/></literal>
<literal type="string" pos:line="399" pos:column="1">"          be used.\n"<pos:position pos:line="399" pos:column="23"/></literal>
<literal type="string" pos:line="400" pos:column="1">"\n"<pos:position pos:line="400" pos:column="5"/></literal>
<literal type="string" pos:line="401" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="401" pos:column="70"/></literal>
<literal type="string" pos:line="402" pos:column="1">"          will be used.\n"<pos:position pos:line="402" pos:column="28"/></literal>
<literal type="string" pos:line="403" pos:column="1">"\n"<pos:position pos:line="403" pos:column="5"/></literal>
<literal type="string" pos:line="404" pos:column="1">"     -K/--config &lt;config file&gt;\n"<pos:position pos:line="404" pos:column="41"/></literal>
<literal type="string" pos:line="405" pos:column="1">"          Specify  which config file to read curl arguments from.\n"<pos:position pos:line="405" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="406" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="407" pos:column="2">puts<pos:position pos:line="407" pos:column="6"/></name><argument_list pos:line="407" pos:column="6">(
<argument><expr><literal type="string" pos:line="408" pos:column="1">"          The config file is a text file in  which  command  line\n"<pos:position pos:line="408" pos:column="70"/></literal>
<literal type="string" pos:line="409" pos:column="1">"          arguments  can be written which then will be used as if\n"<pos:position pos:line="409" pos:column="70"/></literal>
<literal type="string" pos:line="410" pos:column="1">"          they were written on the actual command  line.  Options\n"<pos:position pos:line="410" pos:column="70"/></literal>
<literal type="string" pos:line="411" pos:column="1">"          and their parameters must be specified on the same conï¿½\n"<pos:position pos:line="411" pos:column="75"/></literal>
<literal type="string" pos:line="412" pos:column="1">"          fig file line. If the parameter  is  to  contain  white\n"<pos:position pos:line="412" pos:column="70"/></literal>
<literal type="string" pos:line="413" pos:column="1">"          spaces,  the  parameter must be inclosed within quotes.\n"<pos:position pos:line="413" pos:column="70"/></literal>
<literal type="string" pos:line="414" pos:column="1">"          If the first column of a config line is a  '#'  characï¿½\n"<pos:position pos:line="414" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="415" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="416" pos:column="2">puts<pos:position pos:line="416" pos:column="6"/></name><argument_list pos:line="416" pos:column="6">(
<argument><expr><literal type="string" pos:line="417" pos:column="1">"          ter, the rest of the line will be treated as a comment.\n"<pos:position pos:line="417" pos:column="70"/></literal>
<literal type="string" pos:line="418" pos:column="1">"\n"<pos:position pos:line="418" pos:column="5"/></literal>
<literal type="string" pos:line="419" pos:column="1">"          Specify the filename as '-' to make curl read the  file\n"<pos:position pos:line="419" pos:column="70"/></literal>
<literal type="string" pos:line="420" pos:column="1">"          from stdin.\n"<pos:position pos:line="420" pos:column="26"/></literal>
<literal type="string" pos:line="421" pos:column="1">"\n"<pos:position pos:line="421" pos:column="5"/></literal>
<literal type="string" pos:line="422" pos:column="1">"          This option can be used multiple times.\n"<pos:position pos:line="422" pos:column="54"/></literal>
<literal type="string" pos:line="423" pos:column="1">"\n"<pos:position pos:line="423" pos:column="5"/></literal>
<literal type="string" pos:line="424" pos:column="1">"     -l/--list-only\n"<pos:position pos:line="424" pos:column="24"/></literal>
<literal type="string" pos:line="425" pos:column="1">"          (FTP) When listing an FTP directory, this switch forces\n"<pos:position pos:line="425" pos:column="70"/></literal>
<literal type="string" pos:line="426" pos:column="1">"          a name-only view.  Especially useful  if  you  want  to\n"<pos:position pos:line="426" pos:column="70"/></literal>
<literal type="string" pos:line="427" pos:column="1">"          machine-parse  the  contents  of an FTP directory since\n"<pos:position pos:line="427" pos:column="70"/></literal>
<literal type="string" pos:line="428" pos:column="1">"          the normal directory view doesn't use a  standard  look\n"<pos:position pos:line="428" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="429" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="430" pos:column="2">puts<pos:position pos:line="430" pos:column="6"/></name><argument_list pos:line="430" pos:column="6">(
<argument><expr><literal type="string" pos:line="431" pos:column="1">"          or format.\n"<pos:position pos:line="431" pos:column="25"/></literal>
<literal type="string" pos:line="432" pos:column="1">"\n"<pos:position pos:line="432" pos:column="5"/></literal>
<literal type="string" pos:line="433" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="433" pos:column="70"/></literal>
<literal type="string" pos:line="434" pos:column="1">"          disable list only.\n"<pos:position pos:line="434" pos:column="33"/></literal>
<literal type="string" pos:line="435" pos:column="1">"\n"<pos:position pos:line="435" pos:column="5"/></literal>
<literal type="string" pos:line="436" pos:column="1">"     -L/--location\n"<pos:position pos:line="436" pos:column="23"/></literal>
<literal type="string" pos:line="437" pos:column="1">"          (HTTP/HTTPS) If the server reports that  the  requested\n"<pos:position pos:line="437" pos:column="70"/></literal>
<literal type="string" pos:line="438" pos:column="1">"          page  has  a  different  location  (indicated  with the\n"<pos:position pos:line="438" pos:column="70"/></literal>
<literal type="string" pos:line="439" pos:column="1">"          header line Location:) this flag will let curl  attempt\n"<pos:position pos:line="439" pos:column="70"/></literal>
<literal type="string" pos:line="440" pos:column="1">"          to reattempt the get on the new place. If used together\n"<pos:position pos:line="440" pos:column="70"/></literal>
<literal type="string" pos:line="441" pos:column="1">"          with -i or -I, headers from all requested pages will be\n"<pos:position pos:line="441" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="442" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="443" pos:column="2">puts<pos:position pos:line="443" pos:column="6"/></name><argument_list pos:line="443" pos:column="6">(
<argument><expr><literal type="string" pos:line="444" pos:column="1">"          shown.  If  this  flag is used when making a HTTP POST,\n"<pos:position pos:line="444" pos:column="70"/></literal>
<literal type="string" pos:line="445" pos:column="1">"          curl will automatically switch to GET after the initial\n"<pos:position pos:line="445" pos:column="70"/></literal>
<literal type="string" pos:line="446" pos:column="1">"          POST has been done.\n"<pos:position pos:line="446" pos:column="34"/></literal>
<literal type="string" pos:line="447" pos:column="1">"\n"<pos:position pos:line="447" pos:column="5"/></literal>
<literal type="string" pos:line="448" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="448" pos:column="70"/></literal>
<literal type="string" pos:line="449" pos:column="1">"          disable location following.\n"<pos:position pos:line="449" pos:column="42"/></literal>
<literal type="string" pos:line="450" pos:column="1">"\n"<pos:position pos:line="450" pos:column="5"/></literal>
<literal type="string" pos:line="451" pos:column="1">"     -m/--max-time &lt;seconds&gt;\n"<pos:position pos:line="451" pos:column="39"/></literal>
<literal type="string" pos:line="452" pos:column="1">"          Maximum time in seconds that you allow the whole operaï¿½\n"<pos:position pos:line="452" pos:column="75"/></literal>
<literal type="string" pos:line="453" pos:column="1">"          tion to take.  This is useful for preventing your batch\n"<pos:position pos:line="453" pos:column="70"/></literal>
<literal type="string" pos:line="454" pos:column="1">"          jobs from hanging for hours due  to  slow  networks  or\n"<pos:position pos:line="454" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="455" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="456" pos:column="2">puts<pos:position pos:line="456" pos:column="6"/></name><argument_list pos:line="456" pos:column="6">(
<argument><expr><literal type="string" pos:line="457" pos:column="1">"          links  going  down.   This  doesn't work fully in win32\n"<pos:position pos:line="457" pos:column="70"/></literal>
<literal type="string" pos:line="458" pos:column="1">"          systems.  See also the --connect-timeout option.\n"<pos:position pos:line="458" pos:column="63"/></literal>
<literal type="string" pos:line="459" pos:column="1">"\n"<pos:position pos:line="459" pos:column="5"/></literal>
<literal type="string" pos:line="460" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="460" pos:column="70"/></literal>
<literal type="string" pos:line="461" pos:column="1">"          will be used.\n"<pos:position pos:line="461" pos:column="28"/></literal>
<literal type="string" pos:line="462" pos:column="1">"\n"<pos:position pos:line="462" pos:column="5"/></literal>
<literal type="string" pos:line="463" pos:column="1">"     -M/--manual\n"<pos:position pos:line="463" pos:column="21"/></literal>
<literal type="string" pos:line="464" pos:column="1">"          Manual. Display the huge help text.\n"<pos:position pos:line="464" pos:column="50"/></literal>
<literal type="string" pos:line="465" pos:column="1">"\n"<pos:position pos:line="465" pos:column="5"/></literal>
<literal type="string" pos:line="466" pos:column="1">"     -n/--netrc\n"<pos:position pos:line="466" pos:column="20"/></literal>
<literal type="string" pos:line="467" pos:column="1">"          Makes  curl  scan  the  .netrc  file in the user's home\n"<pos:position pos:line="467" pos:column="70"/></literal>
<literal type="string" pos:line="468" pos:column="1">"          directory for login name and password.  This  is  typiï¿½\n"<pos:position pos:line="468" pos:column="75"/></literal>
<literal type="string" pos:line="469" pos:column="1">"          cally  used  for  ftp  on unix. If used with http, curl\n"<pos:position pos:line="469" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="470" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="471" pos:column="2">puts<pos:position pos:line="471" pos:column="6"/></name><argument_list pos:line="471" pos:column="6">(
<argument><expr><literal type="string" pos:line="472" pos:column="1">"          will  enable  user  authentication.  See  netrc(4)  for\n"<pos:position pos:line="472" pos:column="70"/></literal>
<literal type="string" pos:line="473" pos:column="1">"          details  on  the file format. Curl will not complain if\n"<pos:position pos:line="473" pos:column="70"/></literal>
<literal type="string" pos:line="474" pos:column="1">"          that file hasn't the right permissions (it  should  not\n"<pos:position pos:line="474" pos:column="70"/></literal>
<literal type="string" pos:line="475" pos:column="1">"          be  world nor group readable). The environment variable\n"<pos:position pos:line="475" pos:column="70"/></literal>
<literal type="string" pos:line="476" pos:column="1">"          \"HOME\" is used to find the home directory.\n"<pos:position pos:line="476" pos:column="59"/></literal>
<literal type="string" pos:line="477" pos:column="1">"\n"<pos:position pos:line="477" pos:column="5"/></literal>
<literal type="string" pos:line="478" pos:column="1">"          A quick and very simple  example  of  how  to  setup  a\n"<pos:position pos:line="478" pos:column="70"/></literal>
<literal type="string" pos:line="479" pos:column="1">"          .netrc   to   allow   curl   to   ftp  to  the  machine\n"<pos:position pos:line="479" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="480" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="481" pos:column="2">puts<pos:position pos:line="481" pos:column="6"/></name><argument_list pos:line="481" pos:column="6">(
<argument><expr><literal type="string" pos:line="482" pos:column="1">"          host.domain.com with user name  'myself'  and  password\n"<pos:position pos:line="482" pos:column="70"/></literal>
<literal type="string" pos:line="483" pos:column="1">"          'secret' should look similar to:\n"<pos:position pos:line="483" pos:column="47"/></literal>
<literal type="string" pos:line="484" pos:column="1">"\n"<pos:position pos:line="484" pos:column="5"/></literal>
<literal type="string" pos:line="485" pos:column="1">"          machine host.domain.com login myself password secret\n"<pos:position pos:line="485" pos:column="67"/></literal>
<literal type="string" pos:line="486" pos:column="1">"\n"<pos:position pos:line="486" pos:column="5"/></literal>
<literal type="string" pos:line="487" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="487" pos:column="70"/></literal>
<literal type="string" pos:line="488" pos:column="1">"          disable netrc usage.\n"<pos:position pos:line="488" pos:column="35"/></literal>
<literal type="string" pos:line="489" pos:column="1">"\n"<pos:position pos:line="489" pos:column="5"/></literal>
<literal type="string" pos:line="490" pos:column="1">"     -N/--no-buffer\n"<pos:position pos:line="490" pos:column="24"/></literal>
<literal type="string" pos:line="491" pos:column="1">"          Disables the buffering of the output stream. In  normal\n"<pos:position pos:line="491" pos:column="70"/></literal>
<literal type="string" pos:line="492" pos:column="1">"          work situations, curl will use a standard buffered outï¿½\n"<pos:position pos:line="492" pos:column="75"/></literal>
<literal type="string" pos:line="493" pos:column="1">"          put stream that will have the effect that it will  outï¿½\n"<pos:position pos:line="493" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="494" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="495" pos:column="2">puts<pos:position pos:line="495" pos:column="6"/></name><argument_list pos:line="495" pos:column="6">(
<argument><expr><literal type="string" pos:line="496" pos:column="1">"          put  the  data  in chunks, not necessarily exactly when\n"<pos:position pos:line="496" pos:column="70"/></literal>
<literal type="string" pos:line="497" pos:column="1">"          the data arrives.  Using this option will disable  that\n"<pos:position pos:line="497" pos:column="70"/></literal>
<literal type="string" pos:line="498" pos:column="1">"          buffering.\n"<pos:position pos:line="498" pos:column="25"/></literal>
<literal type="string" pos:line="499" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="499" pos:column="70"/></literal>
<literal type="string" pos:line="500" pos:column="1">"          switch on buffering.\n"<pos:position pos:line="500" pos:column="35"/></literal>
<literal type="string" pos:line="501" pos:column="1">"\n"<pos:position pos:line="501" pos:column="5"/></literal>
<literal type="string" pos:line="502" pos:column="1">"     -o/--output &lt;file&gt;\n"<pos:position pos:line="502" pos:column="34"/></literal>
<literal type="string" pos:line="503" pos:column="1">"          Write output to &lt;file&gt; instead of stdout.  If  you  are\n"<pos:position pos:line="503" pos:column="76"/></literal>
<literal type="string" pos:line="504" pos:column="1">"          using {} or [] to fetch multiple documents, you can use\n"<pos:position pos:line="504" pos:column="70"/></literal>
<literal type="string" pos:line="505" pos:column="1">"          '#' followed by a number in the &lt;file&gt; specifier.  That\n"<pos:position pos:line="505" pos:column="76"/></literal></expr></argument>
)<pos:position pos:line="506" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="506" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="507" pos:column="2">puts<pos:position pos:line="507" pos:column="6"/></name><argument_list pos:line="507" pos:column="6">(
<argument><expr><literal type="string" pos:line="508" pos:column="1">"          variable  will  be replaced with the current string for\n"<pos:position pos:line="508" pos:column="70"/></literal>
<literal type="string" pos:line="509" pos:column="1">"          the URL being fetched. Like in:\n"<pos:position pos:line="509" pos:column="46"/></literal>
<literal type="string" pos:line="510" pos:column="1">"\n"<pos:position pos:line="510" pos:column="5"/></literal>
<literal type="string" pos:line="511" pos:column="1">"            curl http://{one,two}.site.com -o \"file_#1.txt\"\n"<pos:position pos:line="511" pos:column="66"/></literal>
<literal type="string" pos:line="512" pos:column="1">"\n"<pos:position pos:line="512" pos:column="5"/></literal>
<literal type="string" pos:line="513" pos:column="1">"          or use several variables like:\n"<pos:position pos:line="513" pos:column="45"/></literal>
<literal type="string" pos:line="514" pos:column="1">"\n"<pos:position pos:line="514" pos:column="5"/></literal>
<literal type="string" pos:line="515" pos:column="1">"            curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"<pos:position pos:line="515" pos:column="67"/></literal>
<literal type="string" pos:line="516" pos:column="1">"\n"<pos:position pos:line="516" pos:column="5"/></literal>
<literal type="string" pos:line="517" pos:column="1">"          You may use this option as many times as you have  numï¿½\n"<pos:position pos:line="517" pos:column="75"/></literal>
<literal type="string" pos:line="518" pos:column="1">"          ber of URLs.\n"<pos:position pos:line="518" pos:column="27"/></literal>
<literal type="string" pos:line="519" pos:column="1">"\n"<pos:position pos:line="519" pos:column="5"/></literal>
<literal type="string" pos:line="520" pos:column="1">"     -O/--remote-name\n"<pos:position pos:line="520" pos:column="26"/></literal>
<literal type="string" pos:line="521" pos:column="1">"          Write output to a local file named like the remote file\n"<pos:position pos:line="521" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="522" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="523" pos:column="2">puts<pos:position pos:line="523" pos:column="6"/></name><argument_list pos:line="523" pos:column="6">(
<argument><expr><literal type="string" pos:line="524" pos:column="1">"          we get. (Only the file part of the remote file is used,\n"<pos:position pos:line="524" pos:column="70"/></literal>
<literal type="string" pos:line="525" pos:column="1">"          the path is cut off.)\n"<pos:position pos:line="525" pos:column="36"/></literal>
<literal type="string" pos:line="526" pos:column="1">"\n"<pos:position pos:line="526" pos:column="5"/></literal>
<literal type="string" pos:line="527" pos:column="1">"          You  may use this option as many times as you have numï¿½\n"<pos:position pos:line="527" pos:column="75"/></literal>
<literal type="string" pos:line="528" pos:column="1">"          ber of URLs.\n"<pos:position pos:line="528" pos:column="27"/></literal>
<literal type="string" pos:line="529" pos:column="1">"\n"<pos:position pos:line="529" pos:column="5"/></literal>
<literal type="string" pos:line="530" pos:column="1">"     -p/--proxytunnel\n"<pos:position pos:line="530" pos:column="26"/></literal>
<literal type="string" pos:line="531" pos:column="1">"          When an HTTP proxy is used, this option will cause non-\n"<pos:position pos:line="531" pos:column="70"/></literal>
<literal type="string" pos:line="532" pos:column="1">"          HTTP  protocols  to attempt to tunnel through the proxy\n"<pos:position pos:line="532" pos:column="70"/></literal>
<literal type="string" pos:line="533" pos:column="1">"          instead of merely using it to do HTTP-like  operations.\n"<pos:position pos:line="533" pos:column="70"/></literal>
<literal type="string" pos:line="534" pos:column="1">"          The tunnel approach is made with the HTTP proxy CONNECT\n"<pos:position pos:line="534" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="535" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="535" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="536" pos:column="2">puts<pos:position pos:line="536" pos:column="6"/></name><argument_list pos:line="536" pos:column="6">(
<argument><expr><literal type="string" pos:line="537" pos:column="1">"          request and requires that the proxy allows direct  conï¿½\n"<pos:position pos:line="537" pos:column="75"/></literal>
<literal type="string" pos:line="538" pos:column="1">"          nect  to  the  remote  port number curl wants to tunnel\n"<pos:position pos:line="538" pos:column="70"/></literal>
<literal type="string" pos:line="539" pos:column="1">"          through to.\n"<pos:position pos:line="539" pos:column="26"/></literal>
<literal type="string" pos:line="540" pos:column="1">"\n"<pos:position pos:line="540" pos:column="5"/></literal>
<literal type="string" pos:line="541" pos:column="1">"          If this option is used twice,  the  second  will  again\n"<pos:position pos:line="541" pos:column="70"/></literal>
<literal type="string" pos:line="542" pos:column="1">"          disable proxy tunnel.\n"<pos:position pos:line="542" pos:column="36"/></literal>
<literal type="string" pos:line="543" pos:column="1">"\n"<pos:position pos:line="543" pos:column="5"/></literal>
<literal type="string" pos:line="544" pos:column="1">"     -P/--ftpport &lt;address&gt;\n"<pos:position pos:line="544" pos:column="38"/></literal>
<literal type="string" pos:line="545" pos:column="1">"          (FTP)  Reverses  the initiator/listener roles when conï¿½\n"<pos:position pos:line="545" pos:column="75"/></literal>
<literal type="string" pos:line="546" pos:column="1">"          necting with ftp. This switch makes Curl use  the  PORT\n"<pos:position pos:line="546" pos:column="70"/></literal>
<literal type="string" pos:line="547" pos:column="1">"          command  instead  of  PASV. In practice, PORT tells the\n"<pos:position pos:line="547" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="548" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="548" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="549" pos:column="2">puts<pos:position pos:line="549" pos:column="6"/></name><argument_list pos:line="549" pos:column="6">(
<argument><expr><literal type="string" pos:line="550" pos:column="1">"          server to connect to the client's specified address and\n"<pos:position pos:line="550" pos:column="70"/></literal>
<literal type="string" pos:line="551" pos:column="1">"          port,  while PASV asks the server for an ip address and\n"<pos:position pos:line="551" pos:column="70"/></literal>
<literal type="string" pos:line="552" pos:column="1">"          port to connect to. &lt;address&gt; should be one of:\n"<pos:position pos:line="552" pos:column="68"/></literal>
<literal type="string" pos:line="553" pos:column="1">"\n"<pos:position pos:line="553" pos:column="5"/></literal>
<literal type="string" pos:line="554" pos:column="1">"          interface   i.e \"eth0\" to specify which interface's  IP\n"<pos:position pos:line="554" pos:column="72"/></literal>
<literal type="string" pos:line="555" pos:column="1">"                      address you want to use  (Unix only)\n"<pos:position pos:line="555" pos:column="63"/></literal>
<literal type="string" pos:line="556" pos:column="1">"\n"<pos:position pos:line="556" pos:column="5"/></literal>
<literal type="string" pos:line="557" pos:column="1">"          IP address  i.e \"192.168.10.1\" to specify exact IP numï¿½\n"<pos:position pos:line="557" pos:column="77"/></literal>
<literal type="string" pos:line="558" pos:column="1">"                      ber\n"<pos:position pos:line="558" pos:column="30"/></literal>
<literal type="string" pos:line="559" pos:column="1">"          host name   i.e \"my.host.domain\" to specify machine\n"<pos:position pos:line="559" pos:column="68"/></literal>
<literal type="string" pos:line="560" pos:column="1">"\n"<pos:position pos:line="560" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="561" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="562" pos:column="2">puts<pos:position pos:line="562" pos:column="6"/></name><argument_list pos:line="562" pos:column="6">(
<argument><expr><literal type="string" pos:line="563" pos:column="1">"          -           (any single-letter string) to make it  pick\n"<pos:position pos:line="563" pos:column="70"/></literal>
<literal type="string" pos:line="564" pos:column="1">"                      the machine's default\n"<pos:position pos:line="564" pos:column="48"/></literal>
<literal type="string" pos:line="565" pos:column="1">"\n"<pos:position pos:line="565" pos:column="5"/></literal>
<literal type="string" pos:line="566" pos:column="1">"     If  this option is used serveral times, the last one will be\n"<pos:position pos:line="566" pos:column="70"/></literal>
<literal type="string" pos:line="567" pos:column="1">"     used.\n"<pos:position pos:line="567" pos:column="15"/></literal>
<literal type="string" pos:line="568" pos:column="1">"\n"<pos:position pos:line="568" pos:column="5"/></literal>
<literal type="string" pos:line="569" pos:column="1">"     -q   If used as the first parameter on the command line, the\n"<pos:position pos:line="569" pos:column="70"/></literal>
<literal type="string" pos:line="570" pos:column="1">"          $HOME/.curlrc  file will not be read and used as a conï¿½\n"<pos:position pos:line="570" pos:column="75"/></literal>
<literal type="string" pos:line="571" pos:column="1">"          fig file.\n"<pos:position pos:line="571" pos:column="24"/></literal>
<literal type="string" pos:line="572" pos:column="1">"\n"<pos:position pos:line="572" pos:column="5"/></literal>
<literal type="string" pos:line="573" pos:column="1">"     -Q/--quote &lt;comand&gt;\n"<pos:position pos:line="573" pos:column="35"/></literal>
<literal type="string" pos:line="574" pos:column="1">"          (FTP) Send an  arbitrary  command  to  the  remote  FTP\n"<pos:position pos:line="574" pos:column="70"/></literal>
<literal type="string" pos:line="575" pos:column="1">"          server,  by  using the QUOTE command of the server. Not\n"<pos:position pos:line="575" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="576" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="577" pos:column="2">puts<pos:position pos:line="577" pos:column="6"/></name><argument_list pos:line="577" pos:column="6">(
<argument><expr><literal type="string" pos:line="578" pos:column="1">"          all servers support this command, and the set of  QUOTE\n"<pos:position pos:line="578" pos:column="70"/></literal>
<literal type="string" pos:line="579" pos:column="1">"          commands  are  server specific! Quote commands are sent\n"<pos:position pos:line="579" pos:column="70"/></literal>
<literal type="string" pos:line="580" pos:column="1">"          BEFORE the transfer is taking place. To  make  commands\n"<pos:position pos:line="580" pos:column="70"/></literal>
<literal type="string" pos:line="581" pos:column="1">"          take  place  after  a  successful transfer, prefix them\n"<pos:position pos:line="581" pos:column="70"/></literal>
<literal type="string" pos:line="582" pos:column="1">"          with a dash '-'. You may specify any amount of commands\n"<pos:position pos:line="582" pos:column="70"/></literal>
<literal type="string" pos:line="583" pos:column="1">"          to  be run before and after the transfer. If the server\n"<pos:position pos:line="583" pos:column="70"/></literal>
<literal type="string" pos:line="584" pos:column="1">"          returns failure for one of  the  commands,  the  entire\n"<pos:position pos:line="584" pos:column="70"/></literal>
<literal type="string" pos:line="585" pos:column="1">"          operation will be aborted.\n"<pos:position pos:line="585" pos:column="41"/></literal>
<literal type="string" pos:line="586" pos:column="1">"\n"<pos:position pos:line="586" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="587" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="587" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="588" pos:column="2">puts<pos:position pos:line="588" pos:column="6"/></name><argument_list pos:line="588" pos:column="6">(
<argument><expr><literal type="string" pos:line="589" pos:column="1">"          This option can be used multiple times.\n"<pos:position pos:line="589" pos:column="54"/></literal>
<literal type="string" pos:line="590" pos:column="1">"\n"<pos:position pos:line="590" pos:column="5"/></literal>
<literal type="string" pos:line="591" pos:column="1">"     --random-file &lt;file&gt;\n"<pos:position pos:line="591" pos:column="36"/></literal>
<literal type="string" pos:line="592" pos:column="1">"          (HTTPS)  Specify  the path name to file containing what\n"<pos:position pos:line="592" pos:column="70"/></literal>
<literal type="string" pos:line="593" pos:column="1">"          will be considered as random data. The data is used  to\n"<pos:position pos:line="593" pos:column="70"/></literal>
<literal type="string" pos:line="594" pos:column="1">"          seed  the  random engine for SSL connections.  See also\n"<pos:position pos:line="594" pos:column="70"/></literal>
<literal type="string" pos:line="595" pos:column="1">"          the --edg-file option.\n"<pos:position pos:line="595" pos:column="37"/></literal>
<literal type="string" pos:line="596" pos:column="1">"\n"<pos:position pos:line="596" pos:column="5"/></literal>
<literal type="string" pos:line="597" pos:column="1">"     -r/--range &lt;range&gt;\n"<pos:position pos:line="597" pos:column="34"/></literal>
<literal type="string" pos:line="598" pos:column="1">"          (HTTP/FTP) Retrieve a byte range (i.e a  partial  docuï¿½\n"<pos:position pos:line="598" pos:column="75"/></literal>
<literal type="string" pos:line="599" pos:column="1">"          ment)  from  a  HTTP/1.1  or  FTP server. Ranges can be\n"<pos:position pos:line="599" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="600" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="600" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="601" pos:column="2">puts<pos:position pos:line="601" pos:column="6"/></name><argument_list pos:line="601" pos:column="6">(
<argument><expr><literal type="string" pos:line="602" pos:column="1">"          specified in a number of ways.\n"<pos:position pos:line="602" pos:column="45"/></literal>
<literal type="string" pos:line="603" pos:column="1">"\n"<pos:position pos:line="603" pos:column="5"/></literal>
<literal type="string" pos:line="604" pos:column="1">"          0-499     specifies the first 500 bytes\n"<pos:position pos:line="604" pos:column="54"/></literal>
<literal type="string" pos:line="605" pos:column="1">"\n"<pos:position pos:line="605" pos:column="5"/></literal>
<literal type="string" pos:line="606" pos:column="1">"          500-999   specifies the second 500 bytes\n"<pos:position pos:line="606" pos:column="55"/></literal>
<literal type="string" pos:line="607" pos:column="1">"\n"<pos:position pos:line="607" pos:column="5"/></literal>
<literal type="string" pos:line="608" pos:column="1">"          -500      specifies the last 500 bytes\n"<pos:position pos:line="608" pos:column="53"/></literal>
<literal type="string" pos:line="609" pos:column="1">"\n"<pos:position pos:line="609" pos:column="5"/></literal>
<literal type="string" pos:line="610" pos:column="1">"          9500      specifies the bytes from offset 9500 and forï¿½\n"<pos:position pos:line="610" pos:column="75"/></literal>
<literal type="string" pos:line="611" pos:column="1">"                    ward\n"<pos:position pos:line="611" pos:column="29"/></literal>
<literal type="string" pos:line="612" pos:column="1">"\n"<pos:position pos:line="612" pos:column="5"/></literal>
<literal type="string" pos:line="613" pos:column="1">"          0-0,-1    specifies the first and last byte only(*)(H)\n"<pos:position pos:line="613" pos:column="69"/></literal>
<literal type="string" pos:line="614" pos:column="1">"\n"<pos:position pos:line="614" pos:column="5"/></literal>
<literal type="string" pos:line="615" pos:column="1">"          500-700,600-799\n"<pos:position pos:line="615" pos:column="30"/></literal>
<literal type="string" pos:line="616" pos:column="1">"                    specifies 300 bytes from offset 500(H)\n"<pos:position pos:line="616" pos:column="63"/></literal>
<literal type="string" pos:line="617" pos:column="1">"\n"<pos:position pos:line="617" pos:column="5"/></literal>
<literal type="string" pos:line="618" pos:column="1">"          100-199,500-599\n"<pos:position pos:line="618" pos:column="30"/></literal></expr></argument>
)<pos:position pos:line="619" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="620" pos:column="2">puts<pos:position pos:line="620" pos:column="6"/></name><argument_list pos:line="620" pos:column="6">(
<argument><expr><literal type="string" pos:line="621" pos:column="1">"                    specifies two separate 100 bytes ranges(*)(H)\n"<pos:position pos:line="621" pos:column="70"/></literal>
<literal type="string" pos:line="622" pos:column="1">"\n"<pos:position pos:line="622" pos:column="5"/></literal>
<literal type="string" pos:line="623" pos:column="1">"     (*) = NOTE that this will cause the server to reply  with  a\n"<pos:position pos:line="623" pos:column="70"/></literal>
<literal type="string" pos:line="624" pos:column="1">"     multipart response!\n"<pos:position pos:line="624" pos:column="29"/></literal>
<literal type="string" pos:line="625" pos:column="1">"\n"<pos:position pos:line="625" pos:column="5"/></literal>
<literal type="string" pos:line="626" pos:column="1">"     You  should  also be aware that many HTTP/1.1 servers do not\n"<pos:position pos:line="626" pos:column="70"/></literal>
<literal type="string" pos:line="627" pos:column="1">"     have this feature enabled, so that when you attempt to get a\n"<pos:position pos:line="627" pos:column="70"/></literal>
<literal type="string" pos:line="628" pos:column="1">"     range, you'll instead get the whole document.\n"<pos:position pos:line="628" pos:column="55"/></literal>
<literal type="string" pos:line="629" pos:column="1">"\n"<pos:position pos:line="629" pos:column="5"/></literal>
<literal type="string" pos:line="630" pos:column="1">"     FTP  range  downloads only support the simple syntax 'start-\n"<pos:position pos:line="630" pos:column="70"/></literal>
<literal type="string" pos:line="631" pos:column="1">"     stop' (optionally with  one  of  the  numbers  omitted).  It\n"<pos:position pos:line="631" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="632" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="632" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="633" pos:column="2">puts<pos:position pos:line="633" pos:column="6"/></name><argument_list pos:line="633" pos:column="6">(
<argument><expr><literal type="string" pos:line="634" pos:column="1">"     depends on the non-RFC command SIZE.\n"<pos:position pos:line="634" pos:column="46"/></literal>
<literal type="string" pos:line="635" pos:column="1">"\n"<pos:position pos:line="635" pos:column="5"/></literal>
<literal type="string" pos:line="636" pos:column="1">"     If  this option is used serveral times, the last one will be\n"<pos:position pos:line="636" pos:column="70"/></literal>
<literal type="string" pos:line="637" pos:column="1">"     used.\n"<pos:position pos:line="637" pos:column="15"/></literal>
<literal type="string" pos:line="638" pos:column="1">"\n"<pos:position pos:line="638" pos:column="5"/></literal>
<literal type="string" pos:line="639" pos:column="1">"     -s/--silent\n"<pos:position pos:line="639" pos:column="21"/></literal>
<literal type="string" pos:line="640" pos:column="1">"          Silent mode. Don't show progress meter  or  error  mesï¿½\n"<pos:position pos:line="640" pos:column="75"/></literal>
<literal type="string" pos:line="641" pos:column="1">"          sages.  Makes Curl mute.\n"<pos:position pos:line="641" pos:column="39"/></literal>
<literal type="string" pos:line="642" pos:column="1">"\n"<pos:position pos:line="642" pos:column="5"/></literal>
<literal type="string" pos:line="643" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="643" pos:column="70"/></literal>
<literal type="string" pos:line="644" pos:column="1">"          disable mute.\n"<pos:position pos:line="644" pos:column="28"/></literal>
<literal type="string" pos:line="645" pos:column="1">"\n"<pos:position pos:line="645" pos:column="5"/></literal>
<literal type="string" pos:line="646" pos:column="1">"     -S/--show-error\n"<pos:position pos:line="646" pos:column="25"/></literal>
<literal type="string" pos:line="647" pos:column="1">"          When used with -s it makes curl show error  message  if\n"<pos:position pos:line="647" pos:column="70"/></literal>
<literal type="string" pos:line="648" pos:column="1">"          it fails.\n"<pos:position pos:line="648" pos:column="24"/></literal>
<literal type="string" pos:line="649" pos:column="1">"\n"<pos:position pos:line="649" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="650" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="650" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="651" pos:column="2">puts<pos:position pos:line="651" pos:column="6"/></name><argument_list pos:line="651" pos:column="6">(
<argument><expr><literal type="string" pos:line="652" pos:column="1">"          If  this  option  is  used twice, the second will again\n"<pos:position pos:line="652" pos:column="70"/></literal>
<literal type="string" pos:line="653" pos:column="1">"          disable show error.\n"<pos:position pos:line="653" pos:column="34"/></literal>
<literal type="string" pos:line="654" pos:column="1">"\n"<pos:position pos:line="654" pos:column="5"/></literal>
<literal type="string" pos:line="655" pos:column="1">"     -t/--telnet-option &lt;OPT=val&gt;\n"<pos:position pos:line="655" pos:column="44"/></literal>
<literal type="string" pos:line="656" pos:column="1">"          Pass options to the telnet protocol. Supported  options\n"<pos:position pos:line="656" pos:column="70"/></literal>
<literal type="string" pos:line="657" pos:column="1">"          are:\n"<pos:position pos:line="657" pos:column="19"/></literal>
<literal type="string" pos:line="658" pos:column="1">"\n"<pos:position pos:line="658" pos:column="5"/></literal>
<literal type="string" pos:line="659" pos:column="1">"          TTYPE=&lt;term&gt; Sets the terminal type.\n"<pos:position pos:line="659" pos:column="57"/></literal>
<literal type="string" pos:line="660" pos:column="1">"\n"<pos:position pos:line="660" pos:column="5"/></literal>
<literal type="string" pos:line="661" pos:column="1">"          XDISPLOC=&lt;X display&gt; Sets the X display location.\n"<pos:position pos:line="661" pos:column="70"/></literal>
<literal type="string" pos:line="662" pos:column="1">"\n"<pos:position pos:line="662" pos:column="5"/></literal>
<literal type="string" pos:line="663" pos:column="1">"          NEW_ENV=&lt;var,val&gt; Sets an environment variable.\n"<pos:position pos:line="663" pos:column="68"/></literal>
<literal type="string" pos:line="664" pos:column="1">"\n"<pos:position pos:line="664" pos:column="5"/></literal>
<literal type="string" pos:line="665" pos:column="1">"     -T/--upload-file &lt;file&gt;\n"<pos:position pos:line="665" pos:column="39"/></literal>
<literal type="string" pos:line="666" pos:column="1">"          Like  -t,  but this transfers the specified local file.\n"<pos:position pos:line="666" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="667" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="667" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="668" pos:column="2">puts<pos:position pos:line="668" pos:column="6"/></name><argument_list pos:line="668" pos:column="6">(
<argument><expr><literal type="string" pos:line="669" pos:column="1">"          If there is no file part in  the  specified  URL,  Curl\n"<pos:position pos:line="669" pos:column="70"/></literal>
<literal type="string" pos:line="670" pos:column="1">"          will append the local file name. NOTE that you must use\n"<pos:position pos:line="670" pos:column="70"/></literal>
<literal type="string" pos:line="671" pos:column="1">"          a trailing / on the last directory to really  prove  to\n"<pos:position pos:line="671" pos:column="70"/></literal>
<literal type="string" pos:line="672" pos:column="1">"          Curl that there is no file name or curl will think that\n"<pos:position pos:line="672" pos:column="70"/></literal>
<literal type="string" pos:line="673" pos:column="1">"          your last directory name is the  remote  file  name  to\n"<pos:position pos:line="673" pos:column="70"/></literal>
<literal type="string" pos:line="674" pos:column="1">"          use.  That  will most likely cause the upload operation\n"<pos:position pos:line="674" pos:column="70"/></literal>
<literal type="string" pos:line="675" pos:column="1">"          to fail. If this is used on a http(s) server,  the  PUT\n"<pos:position pos:line="675" pos:column="70"/></literal>
<literal type="string" pos:line="676" pos:column="1">"          command will be used.\n"<pos:position pos:line="676" pos:column="36"/></literal>
<literal type="string" pos:line="677" pos:column="1">"\n"<pos:position pos:line="677" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="678" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="679" pos:column="2">puts<pos:position pos:line="679" pos:column="6"/></name><argument_list pos:line="679" pos:column="6">(
<argument><expr><literal type="string" pos:line="680" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="680" pos:column="70"/></literal>
<literal type="string" pos:line="681" pos:column="1">"          will be used.\n"<pos:position pos:line="681" pos:column="28"/></literal>
<literal type="string" pos:line="682" pos:column="1">"\n"<pos:position pos:line="682" pos:column="5"/></literal>
<literal type="string" pos:line="683" pos:column="1">"     -u/--user &lt;user:password&gt;\n"<pos:position pos:line="683" pos:column="41"/></literal>
<literal type="string" pos:line="684" pos:column="1">"          Specify user and password to  use  when  fetching.  See\n"<pos:position pos:line="684" pos:column="70"/></literal>
<literal type="string" pos:line="685" pos:column="1">"          README.curl  for  detailed examples of how to use this.\n"<pos:position pos:line="685" pos:column="70"/></literal>
<literal type="string" pos:line="686" pos:column="1">"          If no password is  specified,  curl  will  ask  for  it\n"<pos:position pos:line="686" pos:column="70"/></literal>
<literal type="string" pos:line="687" pos:column="1">"          interactively.\n"<pos:position pos:line="687" pos:column="29"/></literal>
<literal type="string" pos:line="688" pos:column="1">"\n"<pos:position pos:line="688" pos:column="5"/></literal>
<literal type="string" pos:line="689" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="689" pos:column="70"/></literal>
<literal type="string" pos:line="690" pos:column="1">"          will be used.\n"<pos:position pos:line="690" pos:column="28"/></literal>
<literal type="string" pos:line="691" pos:column="1">"\n"<pos:position pos:line="691" pos:column="5"/></literal>
<literal type="string" pos:line="692" pos:column="1">"     -U/--proxy-user &lt;user:password&gt;\n"<pos:position pos:line="692" pos:column="47"/></literal></expr></argument>
)<pos:position pos:line="693" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="693" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="694" pos:column="2">puts<pos:position pos:line="694" pos:column="6"/></name><argument_list pos:line="694" pos:column="6">(
<argument><expr><literal type="string" pos:line="695" pos:column="1">"          Specify user and password to use for Proxy  authenticaï¿½\n"<pos:position pos:line="695" pos:column="75"/></literal>
<literal type="string" pos:line="696" pos:column="1">"          tion. If no password is specified, curl will ask for it\n"<pos:position pos:line="696" pos:column="70"/></literal>
<literal type="string" pos:line="697" pos:column="1">"          interactively.\n"<pos:position pos:line="697" pos:column="29"/></literal>
<literal type="string" pos:line="698" pos:column="1">"\n"<pos:position pos:line="698" pos:column="5"/></literal>
<literal type="string" pos:line="699" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="699" pos:column="70"/></literal>
<literal type="string" pos:line="700" pos:column="1">"          will be used.\n"<pos:position pos:line="700" pos:column="28"/></literal>
<literal type="string" pos:line="701" pos:column="1">"\n"<pos:position pos:line="701" pos:column="5"/></literal>
<literal type="string" pos:line="702" pos:column="1">"     --url &lt;URL&gt;\n"<pos:position pos:line="702" pos:column="27"/></literal>
<literal type="string" pos:line="703" pos:column="1">"          Specify  a  URL  to  fetch. This option is mostly handy\n"<pos:position pos:line="703" pos:column="70"/></literal>
<literal type="string" pos:line="704" pos:column="1">"          when you wanna specify URL(s) in a config file.\n"<pos:position pos:line="704" pos:column="62"/></literal>
<literal type="string" pos:line="705" pos:column="1">"\n"<pos:position pos:line="705" pos:column="5"/></literal>
<literal type="string" pos:line="706" pos:column="1">"          This option may be used any number of times. To control\n"<pos:position pos:line="706" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="707" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="707" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="708" pos:column="2">puts<pos:position pos:line="708" pos:column="6"/></name><argument_list pos:line="708" pos:column="6">(
<argument><expr><literal type="string" pos:line="709" pos:column="1">"          where  this  URL  is  written,  use  the  -o  or the -O\n"<pos:position pos:line="709" pos:column="70"/></literal>
<literal type="string" pos:line="710" pos:column="1">"          options.\n"<pos:position pos:line="710" pos:column="23"/></literal>
<literal type="string" pos:line="711" pos:column="1">"\n"<pos:position pos:line="711" pos:column="5"/></literal>
<literal type="string" pos:line="712" pos:column="1">"     -v/--verbose\n"<pos:position pos:line="712" pos:column="22"/></literal>
<literal type="string" pos:line="713" pos:column="1">"          Makes  the  fetching  more  verbose/talkative.   Mostly\n"<pos:position pos:line="713" pos:column="70"/></literal>
<literal type="string" pos:line="714" pos:column="1">"          usable  for  debugging.  Lines  starting with '&gt;' means\n"<pos:position pos:line="714" pos:column="73"/></literal>
<literal type="string" pos:line="715" pos:column="1">"          data sent by curl, '&lt;' means data received by curl that\n"<pos:position pos:line="715" pos:column="73"/></literal>
<literal type="string" pos:line="716" pos:column="1">"          is  hidden  in normal cases and lines starting with '*'\n"<pos:position pos:line="716" pos:column="70"/></literal>
<literal type="string" pos:line="717" pos:column="1">"          means additional info provided by curl.\n"<pos:position pos:line="717" pos:column="54"/></literal>
<literal type="string" pos:line="718" pos:column="1">"\n"<pos:position pos:line="718" pos:column="5"/></literal>
<literal type="string" pos:line="719" pos:column="1">"          If this option is used twice,  the  second  will  again\n"<pos:position pos:line="719" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="720" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="720" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="721" pos:column="2">puts<pos:position pos:line="721" pos:column="6"/></name><argument_list pos:line="721" pos:column="6">(
<argument><expr><literal type="string" pos:line="722" pos:column="1">"          disable verbose.\n"<pos:position pos:line="722" pos:column="31"/></literal>
<literal type="string" pos:line="723" pos:column="1">"\n"<pos:position pos:line="723" pos:column="5"/></literal>
<literal type="string" pos:line="724" pos:column="1">"     -V/--version\n"<pos:position pos:line="724" pos:column="22"/></literal>
<literal type="string" pos:line="725" pos:column="1">"          Displays  the  full  version of curl, libcurl and other\n"<pos:position pos:line="725" pos:column="70"/></literal>
<literal type="string" pos:line="726" pos:column="1">"          3rd party libraries linked with the executable.\n"<pos:position pos:line="726" pos:column="62"/></literal>
<literal type="string" pos:line="727" pos:column="1">"\n"<pos:position pos:line="727" pos:column="5"/></literal>
<literal type="string" pos:line="728" pos:column="1">"     -w/--write-out &lt;format&gt;\n"<pos:position pos:line="728" pos:column="39"/></literal>
<literal type="string" pos:line="729" pos:column="1">"          Defines what to display after a completed and  successï¿½\n"<pos:position pos:line="729" pos:column="75"/></literal>
<literal type="string" pos:line="730" pos:column="1">"          ful  operation. The format is a string that may contain\n"<pos:position pos:line="730" pos:column="70"/></literal>
<literal type="string" pos:line="731" pos:column="1">"          plain text mixed with  any  number  of  variables.  The\n"<pos:position pos:line="731" pos:column="70"/></literal>
<literal type="string" pos:line="732" pos:column="1">"          string can be specified as \"string\", to get read from a\n"<pos:position pos:line="732" pos:column="72"/></literal></expr></argument>
)<pos:position pos:line="733" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="733" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="734" pos:column="2">puts<pos:position pos:line="734" pos:column="6"/></name><argument_list pos:line="734" pos:column="6">(
<argument><expr><literal type="string" pos:line="735" pos:column="1">"          particular file you specify it \"@filename\" and to  tell\n"<pos:position pos:line="735" pos:column="72"/></literal>
<literal type="string" pos:line="736" pos:column="1">"          curl to read the format from stdin you write \"@-\".\n"<pos:position pos:line="736" pos:column="67"/></literal>
<literal type="string" pos:line="737" pos:column="1">"\n"<pos:position pos:line="737" pos:column="5"/></literal>
<literal type="string" pos:line="738" pos:column="1">"          The variables present in the output format will be subï¿½\n"<pos:position pos:line="738" pos:column="75"/></literal>
<literal type="string" pos:line="739" pos:column="1">"          stituted by the value or text that curl thinks fit,  as\n"<pos:position pos:line="739" pos:column="70"/></literal>
<literal type="string" pos:line="740" pos:column="1">"          described  below.  All  variables  are  specified  like\n"<pos:position pos:line="740" pos:column="70"/></literal>
<literal type="string" pos:line="741" pos:column="1">"          %{variable_name} and to output  a  normal  %  you  just\n"<pos:position pos:line="741" pos:column="70"/></literal>
<literal type="string" pos:line="742" pos:column="1">"          write  them  like %%. You can output a newline by using\n"<pos:position pos:line="742" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="743" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="743" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="744" pos:column="2">puts<pos:position pos:line="744" pos:column="6"/></name><argument_list pos:line="744" pos:column="6">(
<argument><expr><literal type="string" pos:line="745" pos:column="1">"          \\n, a carrige return with \\r and a tab space with \\t.\n"<pos:position pos:line="745" pos:column="71"/></literal>
<literal type="string" pos:line="746" pos:column="1">"\n"<pos:position pos:line="746" pos:column="5"/></literal>
<literal type="string" pos:line="747" pos:column="1">"          NOTE:  The  %-letter  is  a  special  letter   in   the\n"<pos:position pos:line="747" pos:column="70"/></literal>
<literal type="string" pos:line="748" pos:column="1">"          win32-environment,  where  all occurrences of % must be\n"<pos:position pos:line="748" pos:column="70"/></literal>
<literal type="string" pos:line="749" pos:column="1">"          doubled when using this option.\n"<pos:position pos:line="749" pos:column="46"/></literal>
<literal type="string" pos:line="750" pos:column="1">"\n"<pos:position pos:line="750" pos:column="5"/></literal>
<literal type="string" pos:line="751" pos:column="1">"          Available variables are at this point:\n"<pos:position pos:line="751" pos:column="53"/></literal>
<literal type="string" pos:line="752" pos:column="1">"\n"<pos:position pos:line="752" pos:column="5"/></literal>
<literal type="string" pos:line="753" pos:column="1">"          url_effective  The URL that was fetched last.  This  is\n"<pos:position pos:line="753" pos:column="70"/></literal>
<literal type="string" pos:line="754" pos:column="1">"                         mostly meaningful if you've told curl to\n"<pos:position pos:line="754" pos:column="70"/></literal>
<literal type="string" pos:line="755" pos:column="1">"                         follow location: headers.\n"<pos:position pos:line="755" pos:column="55"/></literal>
<literal type="string" pos:line="756" pos:column="1">"\n"<pos:position pos:line="756" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="757" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="757" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="758" pos:column="2">puts<pos:position pos:line="758" pos:column="6"/></name><argument_list pos:line="758" pos:column="6">(
<argument><expr><literal type="string" pos:line="759" pos:column="1">"          http_code      The numerical code that was found in the\n"<pos:position pos:line="759" pos:column="70"/></literal>
<literal type="string" pos:line="760" pos:column="1">"                         last retrieved HTTP(S) page.\n"<pos:position pos:line="760" pos:column="58"/></literal>
<literal type="string" pos:line="761" pos:column="1">"\n"<pos:position pos:line="761" pos:column="5"/></literal>
<literal type="string" pos:line="762" pos:column="1">"          time_total     The  total  time,  in  seconds, that the\n"<pos:position pos:line="762" pos:column="70"/></literal>
<literal type="string" pos:line="763" pos:column="1">"                         full operation lasted. The time will  be\n"<pos:position pos:line="763" pos:column="70"/></literal>
<literal type="string" pos:line="764" pos:column="1">"                         displayed with millisecond resolution.\n"<pos:position pos:line="764" pos:column="68"/></literal>
<literal type="string" pos:line="765" pos:column="1">"\n"<pos:position pos:line="765" pos:column="5"/></literal>
<literal type="string" pos:line="766" pos:column="1">"          time_namelookup\n"<pos:position pos:line="766" pos:column="30"/></literal>
<literal type="string" pos:line="767" pos:column="1">"                         The  time,  in seconds, it took from the\n"<pos:position pos:line="767" pos:column="70"/></literal>
<literal type="string" pos:line="768" pos:column="1">"                         start until the name resolving was  comï¿½\n"<pos:position pos:line="768" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="769" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="769" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="770" pos:column="2">puts<pos:position pos:line="770" pos:column="6"/></name><argument_list pos:line="770" pos:column="6">(
<argument><expr><literal type="string" pos:line="771" pos:column="1">"                         pleted.\n"<pos:position pos:line="771" pos:column="37"/></literal>
<literal type="string" pos:line="772" pos:column="1">"\n"<pos:position pos:line="772" pos:column="5"/></literal>
<literal type="string" pos:line="773" pos:column="1">"          time_connect   The  time,  in seconds, it took from the\n"<pos:position pos:line="773" pos:column="70"/></literal>
<literal type="string" pos:line="774" pos:column="1">"                         start until the connect  to  the  remote\n"<pos:position pos:line="774" pos:column="70"/></literal>
<literal type="string" pos:line="775" pos:column="1">"                         host (or proxy) was completed.\n"<pos:position pos:line="775" pos:column="60"/></literal>
<literal type="string" pos:line="776" pos:column="1">"\n"<pos:position pos:line="776" pos:column="5"/></literal>
<literal type="string" pos:line="777" pos:column="1">"          time_pretransfer\n"<pos:position pos:line="777" pos:column="31"/></literal>
<literal type="string" pos:line="778" pos:column="1">"                         The  time,  in seconds, it took from the\n"<pos:position pos:line="778" pos:column="70"/></literal>
<literal type="string" pos:line="779" pos:column="1">"                         start until the file  transfer  is  just\n"<pos:position pos:line="779" pos:column="70"/></literal>
<literal type="string" pos:line="780" pos:column="1">"                         about  to  begin. This includes all pre-\n"<pos:position pos:line="780" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="781" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="781" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="782" pos:column="2">puts<pos:position pos:line="782" pos:column="6"/></name><argument_list pos:line="782" pos:column="6">(
<argument><expr><literal type="string" pos:line="783" pos:column="1">"                         transfer commands and negotiations  that\n"<pos:position pos:line="783" pos:column="70"/></literal>
<literal type="string" pos:line="784" pos:column="1">"                         are  specific  to  the particular protoï¿½\n"<pos:position pos:line="784" pos:column="75"/></literal>
<literal type="string" pos:line="785" pos:column="1">"                         col(s) involved.\n"<pos:position pos:line="785" pos:column="46"/></literal>
<literal type="string" pos:line="786" pos:column="1">"\n"<pos:position pos:line="786" pos:column="5"/></literal>
<literal type="string" pos:line="787" pos:column="1">"          size_download  The total  amount  of  bytes  that  were\n"<pos:position pos:line="787" pos:column="70"/></literal>
<literal type="string" pos:line="788" pos:column="1">"                         downloaded.\n"<pos:position pos:line="788" pos:column="41"/></literal>
<literal type="string" pos:line="789" pos:column="1">"\n"<pos:position pos:line="789" pos:column="5"/></literal>
<literal type="string" pos:line="790" pos:column="1">"          size_upload    The  total  amount  of  bytes  that were\n"<pos:position pos:line="790" pos:column="70"/></literal>
<literal type="string" pos:line="791" pos:column="1">"                         uploaded.\n"<pos:position pos:line="791" pos:column="39"/></literal>
<literal type="string" pos:line="792" pos:column="1">"\n"<pos:position pos:line="792" pos:column="5"/></literal>
<literal type="string" pos:line="793" pos:column="1">"          size_header    The total amount of bytes of  the  downï¿½\n"<pos:position pos:line="793" pos:column="75"/></literal>
<literal type="string" pos:line="794" pos:column="1">"                         loaded headers.\n"<pos:position pos:line="794" pos:column="45"/></literal>
<literal type="string" pos:line="795" pos:column="1">"\n"<pos:position pos:line="795" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="796" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="796" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="797" pos:column="2">puts<pos:position pos:line="797" pos:column="6"/></name><argument_list pos:line="797" pos:column="6">(
<argument><expr><literal type="string" pos:line="798" pos:column="1">"          size_request   The total amount of bytes that were sent\n"<pos:position pos:line="798" pos:column="70"/></literal>
<literal type="string" pos:line="799" pos:column="1">"                         in the HTTP request.\n"<pos:position pos:line="799" pos:column="50"/></literal>
<literal type="string" pos:line="800" pos:column="1">"\n"<pos:position pos:line="800" pos:column="5"/></literal>
<literal type="string" pos:line="801" pos:column="1">"          speed_download The average  download  speed  that  curl\n"<pos:position pos:line="801" pos:column="70"/></literal>
<literal type="string" pos:line="802" pos:column="1">"                         measured for the complete download.\n"<pos:position pos:line="802" pos:column="65"/></literal>
<literal type="string" pos:line="803" pos:column="1">"          speed_upload   The  average upload speed that curl meaï¿½\n"<pos:position pos:line="803" pos:column="75"/></literal>
<literal type="string" pos:line="804" pos:column="1">"                         sured for the complete upload.\n"<pos:position pos:line="804" pos:column="60"/></literal>
<literal type="string" pos:line="805" pos:column="1">"\n"<pos:position pos:line="805" pos:column="5"/></literal>
<literal type="string" pos:line="806" pos:column="1">"     If this option is used serveral times, the last one will  be\n"<pos:position pos:line="806" pos:column="70"/></literal>
<literal type="string" pos:line="807" pos:column="1">"     used.\n"<pos:position pos:line="807" pos:column="15"/></literal>
<literal type="string" pos:line="808" pos:column="1">"\n"<pos:position pos:line="808" pos:column="5"/></literal>
<literal type="string" pos:line="809" pos:column="1">"     -x/--proxy &lt;proxyhost[:port]&gt;\n"<pos:position pos:line="809" pos:column="45"/></literal></expr></argument>
)<pos:position pos:line="810" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="810" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="811" pos:column="2">puts<pos:position pos:line="811" pos:column="6"/></name><argument_list pos:line="811" pos:column="6">(
<argument><expr><literal type="string" pos:line="812" pos:column="1">"          Use  specified  proxy. If the port number is not speciï¿½\n"<pos:position pos:line="812" pos:column="75"/></literal>
<literal type="string" pos:line="813" pos:column="1">"          fied, it is assumed at port 1080.\n"<pos:position pos:line="813" pos:column="48"/></literal>
<literal type="string" pos:line="814" pos:column="1">"\n"<pos:position pos:line="814" pos:column="5"/></literal>
<literal type="string" pos:line="815" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="815" pos:column="70"/></literal>
<literal type="string" pos:line="816" pos:column="1">"          will be used.\n"<pos:position pos:line="816" pos:column="28"/></literal>
<literal type="string" pos:line="817" pos:column="1">"\n"<pos:position pos:line="817" pos:column="5"/></literal>
<literal type="string" pos:line="818" pos:column="1">"     -X/--request &lt;command&gt;\n"<pos:position pos:line="818" pos:column="38"/></literal>
<literal type="string" pos:line="819" pos:column="1">"          (HTTP)  Specifies a custom request to use when communiï¿½\n"<pos:position pos:line="819" pos:column="75"/></literal>
<literal type="string" pos:line="820" pos:column="1">"          cating with the HTTP  server.   The  specified  request\n"<pos:position pos:line="820" pos:column="70"/></literal>
<literal type="string" pos:line="821" pos:column="1">"          will be used instead of the standard GET. Read the HTTP\n"<pos:position pos:line="821" pos:column="70"/></literal>
<literal type="string" pos:line="822" pos:column="1">"          1.1 specification for details and explanations.\n"<pos:position pos:line="822" pos:column="62"/></literal>
<literal type="string" pos:line="823" pos:column="1">"\n"<pos:position pos:line="823" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="824" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="824" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="825" pos:column="2">puts<pos:position pos:line="825" pos:column="6"/></name><argument_list pos:line="825" pos:column="6">(
<argument><expr><literal type="string" pos:line="826" pos:column="1">"          (FTP) Specifies a custom FTP command to use instead  of\n"<pos:position pos:line="826" pos:column="70"/></literal>
<literal type="string" pos:line="827" pos:column="1">"          LIST when doing file lists with ftp.\n"<pos:position pos:line="827" pos:column="51"/></literal>
<literal type="string" pos:line="828" pos:column="1">"\n"<pos:position pos:line="828" pos:column="5"/></literal>
<literal type="string" pos:line="829" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="829" pos:column="70"/></literal>
<literal type="string" pos:line="830" pos:column="1">"          will be used.\n"<pos:position pos:line="830" pos:column="28"/></literal>
<literal type="string" pos:line="831" pos:column="1">"\n"<pos:position pos:line="831" pos:column="5"/></literal>
<literal type="string" pos:line="832" pos:column="1">"     -y/--speed-time &lt;time&gt;\n"<pos:position pos:line="832" pos:column="38"/></literal>
<literal type="string" pos:line="833" pos:column="1">"          If a download is slower than speed-limit bytes per secï¿½\n"<pos:position pos:line="833" pos:column="75"/></literal>
<literal type="string" pos:line="834" pos:column="1">"          ond  during  a  speed-time  period,  the  download gets\n"<pos:position pos:line="834" pos:column="70"/></literal>
<literal type="string" pos:line="835" pos:column="1">"          aborted. If speed-time is used, the default speed-limit\n"<pos:position pos:line="835" pos:column="70"/></literal>
<literal type="string" pos:line="836" pos:column="1">"          will be 1 unless set with -y.\n"<pos:position pos:line="836" pos:column="44"/></literal>
<literal type="string" pos:line="837" pos:column="1">"\n"<pos:position pos:line="837" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="838" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="838" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="839" pos:column="2">puts<pos:position pos:line="839" pos:column="6"/></name><argument_list pos:line="839" pos:column="6">(
<argument><expr><literal type="string" pos:line="840" pos:column="1">"          If  this  option  is  used serveral times, the last one\n"<pos:position pos:line="840" pos:column="70"/></literal>
<literal type="string" pos:line="841" pos:column="1">"          will be used.\n"<pos:position pos:line="841" pos:column="28"/></literal>
<literal type="string" pos:line="842" pos:column="1">"\n"<pos:position pos:line="842" pos:column="5"/></literal>
<literal type="string" pos:line="843" pos:column="1">"     -Y/--speed-limit &lt;speed&gt;\n"<pos:position pos:line="843" pos:column="40"/></literal>
<literal type="string" pos:line="844" pos:column="1">"          If a download is slower than this given speed, in bytes\n"<pos:position pos:line="844" pos:column="70"/></literal>
<literal type="string" pos:line="845" pos:column="1">"          per  second,  for  speed-time  seconds it gets aborted.\n"<pos:position pos:line="845" pos:column="70"/></literal>
<literal type="string" pos:line="846" pos:column="1">"          speed-time is set with -Y and is 30 if not set.\n"<pos:position pos:line="846" pos:column="62"/></literal>
<literal type="string" pos:line="847" pos:column="1">"\n"<pos:position pos:line="847" pos:column="5"/></literal>
<literal type="string" pos:line="848" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="848" pos:column="70"/></literal>
<literal type="string" pos:line="849" pos:column="1">"          will be used.\n"<pos:position pos:line="849" pos:column="28"/></literal>
<literal type="string" pos:line="850" pos:column="1">"\n"<pos:position pos:line="850" pos:column="5"/></literal>
<literal type="string" pos:line="851" pos:column="1">"     -z/--time-cond &lt;date expression&gt;\n"<pos:position pos:line="851" pos:column="48"/></literal></expr></argument>
)<pos:position pos:line="852" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="852" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="853" pos:column="2">puts<pos:position pos:line="853" pos:column="6"/></name><argument_list pos:line="853" pos:column="6">(
<argument><expr><literal type="string" pos:line="854" pos:column="1">"          (HTTP)  Request  to  get  a file that has been modified\n"<pos:position pos:line="854" pos:column="70"/></literal>
<literal type="string" pos:line="855" pos:column="1">"          later than the given time and date,  or  one  that  has\n"<pos:position pos:line="855" pos:column="70"/></literal>
<literal type="string" pos:line="856" pos:column="1">"          been modified before that time. The date expression can\n"<pos:position pos:line="856" pos:column="70"/></literal>
<literal type="string" pos:line="857" pos:column="1">"          be all sorts of date strings or if it doesn't match any\n"<pos:position pos:line="857" pos:column="70"/></literal>
<literal type="string" pos:line="858" pos:column="1">"          internal  ones,  it  tries to get the time from a given\n"<pos:position pos:line="858" pos:column="70"/></literal>
<literal type="string" pos:line="859" pos:column="1">"          file name instead! See the  GNU  date(1)  or  curl_getï¿½\n"<pos:position pos:line="859" pos:column="75"/></literal>
<literal type="string" pos:line="860" pos:column="1">"          date(3) man pages for date expression details.\n"<pos:position pos:line="860" pos:column="61"/></literal>
<literal type="string" pos:line="861" pos:column="1">"\n"<pos:position pos:line="861" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="862" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="862" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="863" pos:column="2">puts<pos:position pos:line="863" pos:column="6"/></name><argument_list pos:line="863" pos:column="6">(
<argument><expr><literal type="string" pos:line="864" pos:column="1">"          Start  the  date  expression with a dash (-) to make it\n"<pos:position pos:line="864" pos:column="70"/></literal>
<literal type="string" pos:line="865" pos:column="1">"          request for a document that is  older  than  the  given\n"<pos:position pos:line="865" pos:column="70"/></literal>
<literal type="string" pos:line="866" pos:column="1">"          date/time, default is a document that is newer than the\n"<pos:position pos:line="866" pos:column="70"/></literal>
<literal type="string" pos:line="867" pos:column="1">"          specified date/time.\n"<pos:position pos:line="867" pos:column="35"/></literal>
<literal type="string" pos:line="868" pos:column="1">"\n"<pos:position pos:line="868" pos:column="5"/></literal>
<literal type="string" pos:line="869" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="869" pos:column="70"/></literal>
<literal type="string" pos:line="870" pos:column="1">"          will be used.\n"<pos:position pos:line="870" pos:column="28"/></literal>
<literal type="string" pos:line="871" pos:column="1">"\n"<pos:position pos:line="871" pos:column="5"/></literal>
<literal type="string" pos:line="872" pos:column="1">"     -3/--sslv3\n"<pos:position pos:line="872" pos:column="20"/></literal>
<literal type="string" pos:line="873" pos:column="1">"          (HTTPS) Forces curl to use SSL version 3 when negotiatï¿½\n"<pos:position pos:line="873" pos:column="75"/></literal>
<literal type="string" pos:line="874" pos:column="1">"          ing with a remote SSL server.\n"<pos:position pos:line="874" pos:column="44"/></literal>
<literal type="string" pos:line="875" pos:column="1">"\n"<pos:position pos:line="875" pos:column="5"/></literal>
<literal type="string" pos:line="876" pos:column="1">"     -2/--sslv2\n"<pos:position pos:line="876" pos:column="20"/></literal></expr></argument>
)<pos:position pos:line="877" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="877" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="878" pos:column="2">puts<pos:position pos:line="878" pos:column="6"/></name><argument_list pos:line="878" pos:column="6">(
<argument><expr><literal type="string" pos:line="879" pos:column="1">"          (HTTPS) Forces curl to use SSL version 2 when negotiatï¿½\n"<pos:position pos:line="879" pos:column="75"/></literal>
<literal type="string" pos:line="880" pos:column="1">"          ing with a remote SSL server.\n"<pos:position pos:line="880" pos:column="44"/></literal>
<literal type="string" pos:line="881" pos:column="1">"\n"<pos:position pos:line="881" pos:column="5"/></literal>
<literal type="string" pos:line="882" pos:column="1">"     -#/--progress-bar\n"<pos:position pos:line="882" pos:column="27"/></literal>
<literal type="string" pos:line="883" pos:column="1">"          Make  curl  display  progress information as a progress\n"<pos:position pos:line="883" pos:column="70"/></literal>
<literal type="string" pos:line="884" pos:column="1">"          bar instead of the default statistics.\n"<pos:position pos:line="884" pos:column="53"/></literal>
<literal type="string" pos:line="885" pos:column="1">"\n"<pos:position pos:line="885" pos:column="5"/></literal>
<literal type="string" pos:line="886" pos:column="1">"          If this option is used twice,  the  second  will  again\n"<pos:position pos:line="886" pos:column="70"/></literal>
<literal type="string" pos:line="887" pos:column="1">"          disable the progress bar.\n"<pos:position pos:line="887" pos:column="40"/></literal>
<literal type="string" pos:line="888" pos:column="1">"\n"<pos:position pos:line="888" pos:column="5"/></literal>
<literal type="string" pos:line="889" pos:column="1">"     --crlf\n"<pos:position pos:line="889" pos:column="16"/></literal>
<literal type="string" pos:line="890" pos:column="1">"          (FTP)  Convert  LF  to  CRLF  in upload. Useful for MVS\n"<pos:position pos:line="890" pos:column="70"/></literal>
<literal type="string" pos:line="891" pos:column="1">"          (OS/390).\n"<pos:position pos:line="891" pos:column="24"/></literal>
<literal type="string" pos:line="892" pos:column="1">"\n"<pos:position pos:line="892" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="893" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="893" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="894" pos:column="2">puts<pos:position pos:line="894" pos:column="6"/></name><argument_list pos:line="894" pos:column="6">(
<argument><expr><literal type="string" pos:line="895" pos:column="1">"          If this option is used twice,  the  second  will  again\n"<pos:position pos:line="895" pos:column="70"/></literal>
<literal type="string" pos:line="896" pos:column="1">"          disable crlf converting.\n"<pos:position pos:line="896" pos:column="39"/></literal>
<literal type="string" pos:line="897" pos:column="1">"\n"<pos:position pos:line="897" pos:column="5"/></literal>
<literal type="string" pos:line="898" pos:column="1">"     --stderr &lt;file&gt;\n"<pos:position pos:line="898" pos:column="31"/></literal>
<literal type="string" pos:line="899" pos:column="1">"          Redirect  all  writes  to  stderr to the specified file\n"<pos:position pos:line="899" pos:column="70"/></literal>
<literal type="string" pos:line="900" pos:column="1">"          instead. If the file name is a plain '-', it is instead\n"<pos:position pos:line="900" pos:column="70"/></literal>
<literal type="string" pos:line="901" pos:column="1">"          written to stdout. This option has no point when you're\n"<pos:position pos:line="901" pos:column="70"/></literal>
<literal type="string" pos:line="902" pos:column="1">"          using a shell with decent redirecting capabilities.\n"<pos:position pos:line="902" pos:column="66"/></literal>
<literal type="string" pos:line="903" pos:column="1">"\n"<pos:position pos:line="903" pos:column="5"/></literal>
<literal type="string" pos:line="904" pos:column="1">"          If this option is used serveral  times,  the  last  one\n"<pos:position pos:line="904" pos:column="70"/></literal>
<literal type="string" pos:line="905" pos:column="1">"          will be used.\n"<pos:position pos:line="905" pos:column="28"/></literal>
<literal type="string" pos:line="906" pos:column="1">"\n"<pos:position pos:line="906" pos:column="5"/></literal>
<literal type="string" pos:line="907" pos:column="1">"FILES\n"<pos:position pos:line="907" pos:column="10"/></literal>
<literal type="string" pos:line="908" pos:column="1">"     ~/.curlrc\n"<pos:position pos:line="908" pos:column="19"/></literal></expr></argument>
)<pos:position pos:line="909" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="909" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="910" pos:column="2">puts<pos:position pos:line="910" pos:column="6"/></name><argument_list pos:line="910" pos:column="6">(
<argument><expr><literal type="string" pos:line="911" pos:column="1">"          Default config file.\n"<pos:position pos:line="911" pos:column="35"/></literal>
<literal type="string" pos:line="912" pos:column="1">"\n"<pos:position pos:line="912" pos:column="5"/></literal>
<literal type="string" pos:line="913" pos:column="1">"ENVIRONMENT\n"<pos:position pos:line="913" pos:column="16"/></literal>
<literal type="string" pos:line="914" pos:column="1">"     HTTP_PROXY [protocol://]&lt;host&gt;[:port]\n"<pos:position pos:line="914" pos:column="53"/></literal>
<literal type="string" pos:line="915" pos:column="1">"          Sets proxy server to use for HTTP.\n"<pos:position pos:line="915" pos:column="49"/></literal>
<literal type="string" pos:line="916" pos:column="1">"\n"<pos:position pos:line="916" pos:column="5"/></literal>
<literal type="string" pos:line="917" pos:column="1">"     HTTPS_PROXY [protocol://]&lt;host&gt;[:port]\n"<pos:position pos:line="917" pos:column="54"/></literal>
<literal type="string" pos:line="918" pos:column="1">"          Sets proxy server to use for HTTPS.\n"<pos:position pos:line="918" pos:column="50"/></literal>
<literal type="string" pos:line="919" pos:column="1">"\n"<pos:position pos:line="919" pos:column="5"/></literal>
<literal type="string" pos:line="920" pos:column="1">"     FTP_PROXY [protocol://]&lt;host&gt;[:port]\n"<pos:position pos:line="920" pos:column="52"/></literal>
<literal type="string" pos:line="921" pos:column="1">"          Sets proxy server to use for FTP.\n"<pos:position pos:line="921" pos:column="48"/></literal>
<literal type="string" pos:line="922" pos:column="1">"     GOPHER_PROXY [protocol://]&lt;host&gt;[:port]\n"<pos:position pos:line="922" pos:column="55"/></literal>
<literal type="string" pos:line="923" pos:column="1">"          Sets proxy server to use for GOPHER.\n"<pos:position pos:line="923" pos:column="51"/></literal>
<literal type="string" pos:line="924" pos:column="1">"\n"<pos:position pos:line="924" pos:column="5"/></literal>
<literal type="string" pos:line="925" pos:column="1">"     ALL_PROXY [protocol://]&lt;host&gt;[:port]\n"<pos:position pos:line="925" pos:column="52"/></literal></expr></argument>
)<pos:position pos:line="926" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="926" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="927" pos:column="2">puts<pos:position pos:line="927" pos:column="6"/></name><argument_list pos:line="927" pos:column="6">(
<argument><expr><literal type="string" pos:line="928" pos:column="1">"          Sets  proxy server to use if no protocol-specific proxy\n"<pos:position pos:line="928" pos:column="70"/></literal>
<literal type="string" pos:line="929" pos:column="1">"          is set.\n"<pos:position pos:line="929" pos:column="22"/></literal>
<literal type="string" pos:line="930" pos:column="1">"\n"<pos:position pos:line="930" pos:column="5"/></literal>
<literal type="string" pos:line="931" pos:column="1">"     NO_PROXY &lt;comma-separated list of hosts&gt;\n"<pos:position pos:line="931" pos:column="56"/></literal>
<literal type="string" pos:line="932" pos:column="1">"          list of host names that shouldn't go through any proxy.\n"<pos:position pos:line="932" pos:column="70"/></literal>
<literal type="string" pos:line="933" pos:column="1">"          If set to a asterisk '*' only, it matches all hosts.\n"<pos:position pos:line="933" pos:column="67"/></literal>
<literal type="string" pos:line="934" pos:column="1">"\n"<pos:position pos:line="934" pos:column="5"/></literal>
<literal type="string" pos:line="935" pos:column="1">"     COLUMNS &lt;integer&gt;\n"<pos:position pos:line="935" pos:column="33"/></literal>
<literal type="string" pos:line="936" pos:column="1">"          The  width of the terminal.  This variable only affects\n"<pos:position pos:line="936" pos:column="70"/></literal>
<literal type="string" pos:line="937" pos:column="1">"          curl when the --progress-bar option is used.\n"<pos:position pos:line="937" pos:column="59"/></literal>
<literal type="string" pos:line="938" pos:column="1">"\n"<pos:position pos:line="938" pos:column="5"/></literal>
<literal type="string" pos:line="939" pos:column="1">"EXIT CODES\n"<pos:position pos:line="939" pos:column="15"/></literal>
<literal type="string" pos:line="940" pos:column="1">"     There exists a bunch of different error codes and their corï¿½\n"<pos:position pos:line="940" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="941" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="941" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="942" pos:column="2">puts<pos:position pos:line="942" pos:column="6"/></name><argument_list pos:line="942" pos:column="6">(
<argument><expr><literal type="string" pos:line="943" pos:column="1">"     responding  error messages that may appear during bad condiï¿½\n"<pos:position pos:line="943" pos:column="75"/></literal>
<literal type="string" pos:line="944" pos:column="1">"     tions. At the time of this writing, the exit codes are:\n"<pos:position pos:line="944" pos:column="65"/></literal>
<literal type="string" pos:line="945" pos:column="1">"\n"<pos:position pos:line="945" pos:column="5"/></literal>
<literal type="string" pos:line="946" pos:column="1">"     1    Unsupported protocol. This build of curl has no support\n"<pos:position pos:line="946" pos:column="70"/></literal>
<literal type="string" pos:line="947" pos:column="1">"          for this protocol.\n"<pos:position pos:line="947" pos:column="33"/></literal>
<literal type="string" pos:line="948" pos:column="1">"\n"<pos:position pos:line="948" pos:column="5"/></literal>
<literal type="string" pos:line="949" pos:column="1">"     2    Failed to initialize.\n"<pos:position pos:line="949" pos:column="36"/></literal>
<literal type="string" pos:line="950" pos:column="1">"\n"<pos:position pos:line="950" pos:column="5"/></literal>
<literal type="string" pos:line="951" pos:column="1">"     3    URL malformat. The syntax was not correct.\n"<pos:position pos:line="951" pos:column="57"/></literal>
<literal type="string" pos:line="952" pos:column="1">"\n"<pos:position pos:line="952" pos:column="5"/></literal>
<literal type="string" pos:line="953" pos:column="1">"     4    URL  user malformatted. The user-part of the URL syntax\n"<pos:position pos:line="953" pos:column="70"/></literal>
<literal type="string" pos:line="954" pos:column="1">"          was not correct.\n"<pos:position pos:line="954" pos:column="31"/></literal>
<literal type="string" pos:line="955" pos:column="1">"\n"<pos:position pos:line="955" pos:column="5"/></literal>
<literal type="string" pos:line="956" pos:column="1">"     5    Couldn't resolve proxy. The given proxy host could  not\n"<pos:position pos:line="956" pos:column="70"/></literal>
<literal type="string" pos:line="957" pos:column="1">"          be resolved.\n"<pos:position pos:line="957" pos:column="27"/></literal>
<literal type="string" pos:line="958" pos:column="1">"\n"<pos:position pos:line="958" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="959" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="959" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="960" pos:column="2">puts<pos:position pos:line="960" pos:column="6"/></name><argument_list pos:line="960" pos:column="6">(
<argument><expr><literal type="string" pos:line="961" pos:column="1">"     6    Couldn't  resolve  host.  The given remote host was not\n"<pos:position pos:line="961" pos:column="70"/></literal>
<literal type="string" pos:line="962" pos:column="1">"          resolved.\n"<pos:position pos:line="962" pos:column="24"/></literal>
<literal type="string" pos:line="963" pos:column="1">"\n"<pos:position pos:line="963" pos:column="5"/></literal>
<literal type="string" pos:line="964" pos:column="1">"     7    Failed to connect to host.\n"<pos:position pos:line="964" pos:column="41"/></literal>
<literal type="string" pos:line="965" pos:column="1">"\n"<pos:position pos:line="965" pos:column="5"/></literal>
<literal type="string" pos:line="966" pos:column="1">"     8    FTP weird server  reply.  The  server  sent  data  curl\n"<pos:position pos:line="966" pos:column="70"/></literal>
<literal type="string" pos:line="967" pos:column="1">"          couldn't parse.\n"<pos:position pos:line="967" pos:column="30"/></literal>
<literal type="string" pos:line="968" pos:column="1">"\n"<pos:position pos:line="968" pos:column="5"/></literal>
<literal type="string" pos:line="969" pos:column="1">"     9    FTP access denied. The server denied login.\n"<pos:position pos:line="969" pos:column="58"/></literal>
<literal type="string" pos:line="970" pos:column="1">"\n"<pos:position pos:line="970" pos:column="5"/></literal>
<literal type="string" pos:line="971" pos:column="1">"     10   FTP  user/password  incorrect.  Either one or both were\n"<pos:position pos:line="971" pos:column="70"/></literal>
<literal type="string" pos:line="972" pos:column="1">"          not accepted by the server.\n"<pos:position pos:line="972" pos:column="42"/></literal>
<literal type="string" pos:line="973" pos:column="1">"\n"<pos:position pos:line="973" pos:column="5"/></literal>
<literal type="string" pos:line="974" pos:column="1">"     11   FTP weird PASS reply. Curl  couldn't  parse  the  reply\n"<pos:position pos:line="974" pos:column="70"/></literal>
<literal type="string" pos:line="975" pos:column="1">"          sent to the PASS request.\n"<pos:position pos:line="975" pos:column="40"/></literal>
<literal type="string" pos:line="976" pos:column="1">"\n"<pos:position pos:line="976" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="977" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="977" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="978" pos:column="2">puts<pos:position pos:line="978" pos:column="6"/></name><argument_list pos:line="978" pos:column="6">(
<argument><expr><literal type="string" pos:line="979" pos:column="1">"     12   FTP  weird  USER  reply.  Curl couldn't parse the reply\n"<pos:position pos:line="979" pos:column="70"/></literal>
<literal type="string" pos:line="980" pos:column="1">"          sent to the USER request.\n"<pos:position pos:line="980" pos:column="40"/></literal>
<literal type="string" pos:line="981" pos:column="1">"     13   FTP weird PASV reply, Curl  couldn't  parse  the  reply\n"<pos:position pos:line="981" pos:column="70"/></literal>
<literal type="string" pos:line="982" pos:column="1">"          sent to the PASV request.\n"<pos:position pos:line="982" pos:column="40"/></literal>
<literal type="string" pos:line="983" pos:column="1">"\n"<pos:position pos:line="983" pos:column="5"/></literal>
<literal type="string" pos:line="984" pos:column="1">"     14   FTP  weird 227 format. Curl couldn't parse the 227-line\n"<pos:position pos:line="984" pos:column="70"/></literal>
<literal type="string" pos:line="985" pos:column="1">"          the server sent.\n"<pos:position pos:line="985" pos:column="31"/></literal>
<literal type="string" pos:line="986" pos:column="1">"\n"<pos:position pos:line="986" pos:column="5"/></literal>
<literal type="string" pos:line="987" pos:column="1">"     15   FTP can't get host. Couldn't resolve the host IP we got\n"<pos:position pos:line="987" pos:column="70"/></literal>
<literal type="string" pos:line="988" pos:column="1">"          in the 227-line.\n"<pos:position pos:line="988" pos:column="31"/></literal>
<literal type="string" pos:line="989" pos:column="1">"\n"<pos:position pos:line="989" pos:column="5"/></literal>
<literal type="string" pos:line="990" pos:column="1">"     16   FTP  can't  reconnect.  Couldn't connect to the host we\n"<pos:position pos:line="990" pos:column="70"/></literal>
<literal type="string" pos:line="991" pos:column="1">"          got in the 227-line.\n"<pos:position pos:line="991" pos:column="35"/></literal>
<literal type="string" pos:line="992" pos:column="1">"\n"<pos:position pos:line="992" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="993" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="993" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="994" pos:column="2">puts<pos:position pos:line="994" pos:column="6"/></name><argument_list pos:line="994" pos:column="6">(
<argument><expr><literal type="string" pos:line="995" pos:column="1">"     17   FTP  couldn't  set  binary.  Couldn't  change  transfer\n"<pos:position pos:line="995" pos:column="70"/></literal>
<literal type="string" pos:line="996" pos:column="1">"          method to binary.\n"<pos:position pos:line="996" pos:column="32"/></literal>
<literal type="string" pos:line="997" pos:column="1">"\n"<pos:position pos:line="997" pos:column="5"/></literal>
<literal type="string" pos:line="998" pos:column="1">"     18   Partial file. Only a part of the file was transfered.\n"<pos:position pos:line="998" pos:column="68"/></literal>
<literal type="string" pos:line="999" pos:column="1">"\n"<pos:position pos:line="999" pos:column="5"/></literal>
<literal type="string" pos:line="1000" pos:column="1">"     19   FTP couldn't RETR file. The RETR command failed.\n"<pos:position pos:line="1000" pos:column="63"/></literal>
<literal type="string" pos:line="1001" pos:column="1">"\n"<pos:position pos:line="1001" pos:column="5"/></literal>
<literal type="string" pos:line="1002" pos:column="1">"     20   FTP  write  error. The transfer was reported bad by the\n"<pos:position pos:line="1002" pos:column="70"/></literal>
<literal type="string" pos:line="1003" pos:column="1">"          server.\n"<pos:position pos:line="1003" pos:column="22"/></literal>
<literal type="string" pos:line="1004" pos:column="1">"\n"<pos:position pos:line="1004" pos:column="5"/></literal>
<literal type="string" pos:line="1005" pos:column="1">"     21   FTP quote error. A quote command  returned  error  from\n"<pos:position pos:line="1005" pos:column="70"/></literal>
<literal type="string" pos:line="1006" pos:column="1">"          the server.\n"<pos:position pos:line="1006" pos:column="26"/></literal>
<literal type="string" pos:line="1007" pos:column="1">"\n"<pos:position pos:line="1007" pos:column="5"/></literal>
<literal type="string" pos:line="1008" pos:column="1">"     22   HTTP  not found. The requested page was not found. This\n"<pos:position pos:line="1008" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="1009" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1009" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1010" pos:column="2">puts<pos:position pos:line="1010" pos:column="6"/></name><argument_list pos:line="1010" pos:column="6">(
<argument><expr><literal type="string" pos:line="1011" pos:column="1">"          return code only appears if --fail is used.\n"<pos:position pos:line="1011" pos:column="58"/></literal>
<literal type="string" pos:line="1012" pos:column="1">"\n"<pos:position pos:line="1012" pos:column="5"/></literal>
<literal type="string" pos:line="1013" pos:column="1">"     23   Write error.  Curl  couldn't  write  data  to  a  local\n"<pos:position pos:line="1013" pos:column="70"/></literal>
<literal type="string" pos:line="1014" pos:column="1">"          filesystem or similar.\n"<pos:position pos:line="1014" pos:column="37"/></literal>
<literal type="string" pos:line="1015" pos:column="1">"\n"<pos:position pos:line="1015" pos:column="5"/></literal>
<literal type="string" pos:line="1016" pos:column="1">"     24   Malformat user. User name badly specified.\n"<pos:position pos:line="1016" pos:column="57"/></literal>
<literal type="string" pos:line="1017" pos:column="1">"\n"<pos:position pos:line="1017" pos:column="5"/></literal>
<literal type="string" pos:line="1018" pos:column="1">"     25   FTP  couldn't  STOR  file.  The  server denied the STOR\n"<pos:position pos:line="1018" pos:column="70"/></literal>
<literal type="string" pos:line="1019" pos:column="1">"          operation.\n"<pos:position pos:line="1019" pos:column="25"/></literal>
<literal type="string" pos:line="1020" pos:column="1">"\n"<pos:position pos:line="1020" pos:column="5"/></literal>
<literal type="string" pos:line="1021" pos:column="1">"     26   Read error. Various reading problems.\n"<pos:position pos:line="1021" pos:column="52"/></literal>
<literal type="string" pos:line="1022" pos:column="1">"\n"<pos:position pos:line="1022" pos:column="5"/></literal>
<literal type="string" pos:line="1023" pos:column="1">"     27   Out of memory. A memory allocation request failed.\n"<pos:position pos:line="1023" pos:column="65"/></literal>
<literal type="string" pos:line="1024" pos:column="1">"\n"<pos:position pos:line="1024" pos:column="5"/></literal>
<literal type="string" pos:line="1025" pos:column="1">"     28   Operation timeout. The specified  time-out  period  was\n"<pos:position pos:line="1025" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="1026" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1026" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1027" pos:column="2">puts<pos:position pos:line="1027" pos:column="6"/></name><argument_list pos:line="1027" pos:column="6">(
<argument><expr><literal type="string" pos:line="1028" pos:column="1">"          reached according to the conditions.\n"<pos:position pos:line="1028" pos:column="51"/></literal>
<literal type="string" pos:line="1029" pos:column="1">"\n"<pos:position pos:line="1029" pos:column="5"/></literal>
<literal type="string" pos:line="1030" pos:column="1">"     29   FTP  couldn't set ASCII. The server returned an unknown\n"<pos:position pos:line="1030" pos:column="70"/></literal>
<literal type="string" pos:line="1031" pos:column="1">"          reply.\n"<pos:position pos:line="1031" pos:column="21"/></literal>
<literal type="string" pos:line="1032" pos:column="1">"\n"<pos:position pos:line="1032" pos:column="5"/></literal>
<literal type="string" pos:line="1033" pos:column="1">"     30   FTP PORT failed. The PORT command failed.\n"<pos:position pos:line="1033" pos:column="56"/></literal>
<literal type="string" pos:line="1034" pos:column="1">"\n"<pos:position pos:line="1034" pos:column="5"/></literal>
<literal type="string" pos:line="1035" pos:column="1">"     31   FTP couldn't use REST. The REST command failed.\n"<pos:position pos:line="1035" pos:column="62"/></literal>
<literal type="string" pos:line="1036" pos:column="1">"\n"<pos:position pos:line="1036" pos:column="5"/></literal>
<literal type="string" pos:line="1037" pos:column="1">"     32   FTP couldn't use SIZE. The  SIZE  command  failed.  The\n"<pos:position pos:line="1037" pos:column="70"/></literal>
<literal type="string" pos:line="1038" pos:column="1">"          command  is  an  extension to the original FTP spec RFC\n"<pos:position pos:line="1038" pos:column="70"/></literal>
<literal type="string" pos:line="1039" pos:column="1">"          959.\n"<pos:position pos:line="1039" pos:column="19"/></literal>
<literal type="string" pos:line="1040" pos:column="1">"\n"<pos:position pos:line="1040" pos:column="5"/></literal>
<literal type="string" pos:line="1041" pos:column="1">"     33   HTTP range error. The range \"command\" didn't work.\n"<pos:position pos:line="1041" pos:column="67"/></literal>
<literal type="string" pos:line="1042" pos:column="1">"\n"<pos:position pos:line="1042" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1043" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1043" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1044" pos:column="2">puts<pos:position pos:line="1044" pos:column="6"/></name><argument_list pos:line="1044" pos:column="6">(
<argument><expr><literal type="string" pos:line="1045" pos:column="1">"     34   HTTP  post  error.  Internal  post-request   generation\n"<pos:position pos:line="1045" pos:column="70"/></literal>
<literal type="string" pos:line="1046" pos:column="1">"          error.\n"<pos:position pos:line="1046" pos:column="21"/></literal>
<literal type="string" pos:line="1047" pos:column="1">"\n"<pos:position pos:line="1047" pos:column="5"/></literal>
<literal type="string" pos:line="1048" pos:column="1">"     35   SSL connect error. The SSL handshaking failed.\n"<pos:position pos:line="1048" pos:column="61"/></literal>
<literal type="string" pos:line="1049" pos:column="1">"\n"<pos:position pos:line="1049" pos:column="5"/></literal>
<literal type="string" pos:line="1050" pos:column="1">"     36   FTP  bad  download resume. Couldn't continue an earlier\n"<pos:position pos:line="1050" pos:column="70"/></literal>
<literal type="string" pos:line="1051" pos:column="1">"          aborted download.\n"<pos:position pos:line="1051" pos:column="32"/></literal>
<literal type="string" pos:line="1052" pos:column="1">"\n"<pos:position pos:line="1052" pos:column="5"/></literal>
<literal type="string" pos:line="1053" pos:column="1">"     37   FILE couldn't read file. Failed to open the file.  Perï¿½\n"<pos:position pos:line="1053" pos:column="75"/></literal>
<literal type="string" pos:line="1054" pos:column="1">"          missions?\n"<pos:position pos:line="1054" pos:column="24"/></literal>
<literal type="string" pos:line="1055" pos:column="1">"\n"<pos:position pos:line="1055" pos:column="5"/></literal>
<literal type="string" pos:line="1056" pos:column="1">"     38   LDAP cannot bind. LDAP bind operation failed.\n"<pos:position pos:line="1056" pos:column="60"/></literal>
<literal type="string" pos:line="1057" pos:column="1">"\n"<pos:position pos:line="1057" pos:column="5"/></literal>
<literal type="string" pos:line="1058" pos:column="1">"     39   LDAP search failed.\n"<pos:position pos:line="1058" pos:column="34"/></literal>
<literal type="string" pos:line="1059" pos:column="1">"\n"<pos:position pos:line="1059" pos:column="5"/></literal>
<literal type="string" pos:line="1060" pos:column="1">"     40   Library not found. The LDAP library was not found.\n"<pos:position pos:line="1060" pos:column="65"/></literal>
<literal type="string" pos:line="1061" pos:column="1">"\n"<pos:position pos:line="1061" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1062" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1063" pos:column="2">puts<pos:position pos:line="1063" pos:column="6"/></name><argument_list pos:line="1063" pos:column="6">(
<argument><expr><literal type="string" pos:line="1064" pos:column="1">"     41   Function  not  found.  A required LDAP function was not\n"<pos:position pos:line="1064" pos:column="70"/></literal>
<literal type="string" pos:line="1065" pos:column="1">"          found.\n"<pos:position pos:line="1065" pos:column="21"/></literal>
<literal type="string" pos:line="1066" pos:column="1">"\n"<pos:position pos:line="1066" pos:column="5"/></literal>
<literal type="string" pos:line="1067" pos:column="1">"     42   Aborted by callback. An application told curl to  abort\n"<pos:position pos:line="1067" pos:column="70"/></literal>
<literal type="string" pos:line="1068" pos:column="1">"          the operation.\n"<pos:position pos:line="1068" pos:column="29"/></literal>
<literal type="string" pos:line="1069" pos:column="1">"\n"<pos:position pos:line="1069" pos:column="5"/></literal>
<literal type="string" pos:line="1070" pos:column="1">"     43   Internal error. A function was called with a bad paramï¿½\n"<pos:position pos:line="1070" pos:column="75"/></literal>
<literal type="string" pos:line="1071" pos:column="1">"          eter.\n"<pos:position pos:line="1071" pos:column="20"/></literal>
<literal type="string" pos:line="1072" pos:column="1">"\n"<pos:position pos:line="1072" pos:column="5"/></literal>
<literal type="string" pos:line="1073" pos:column="1">"     44   Internal error. A function was called in a bad order.\n"<pos:position pos:line="1073" pos:column="68"/></literal>
<literal type="string" pos:line="1074" pos:column="1">"\n"<pos:position pos:line="1074" pos:column="5"/></literal>
<literal type="string" pos:line="1075" pos:column="1">"     45   Interface error. A specified outgoing  interface  could\n"<pos:position pos:line="1075" pos:column="70"/></literal>
<literal type="string" pos:line="1076" pos:column="1">"          not be used.\n"<pos:position pos:line="1076" pos:column="27"/></literal>
<literal type="string" pos:line="1077" pos:column="1">"\n"<pos:position pos:line="1077" pos:column="5"/></literal>
<literal type="string" pos:line="1078" pos:column="1">"     46   Bad  password  entered. An error was signalled when the\n"<pos:position pos:line="1078" pos:column="70"/></literal></expr></argument>
)<pos:position pos:line="1079" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1079" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1080" pos:column="2">puts<pos:position pos:line="1080" pos:column="6"/></name><argument_list pos:line="1080" pos:column="6">(
<argument><expr><literal type="string" pos:line="1081" pos:column="1">"          password was entered.\n"<pos:position pos:line="1081" pos:column="36"/></literal>
<literal type="string" pos:line="1082" pos:column="1">"\n"<pos:position pos:line="1082" pos:column="5"/></literal>
<literal type="string" pos:line="1083" pos:column="1">"     47   Too many redirects. When following redirects, curl  hit\n"<pos:position pos:line="1083" pos:column="70"/></literal>
<literal type="string" pos:line="1084" pos:column="1">"          the maximum amount.\n"<pos:position pos:line="1084" pos:column="34"/></literal>
<literal type="string" pos:line="1085" pos:column="1">"\n"<pos:position pos:line="1085" pos:column="5"/></literal>
<literal type="string" pos:line="1086" pos:column="1">"     XX   There  will  appear  more  error  codes  here in future\n"<pos:position pos:line="1086" pos:column="70"/></literal>
<literal type="string" pos:line="1087" pos:column="1">"          releases. The existing ones are meant to never  change.\n"<pos:position pos:line="1087" pos:column="70"/></literal>
<literal type="string" pos:line="1088" pos:column="1">"\n"<pos:position pos:line="1088" pos:column="5"/></literal>
<literal type="string" pos:line="1089" pos:column="1">"BUGS\n"<pos:position pos:line="1089" pos:column="9"/></literal>
<literal type="string" pos:line="1090" pos:column="1">"     If you do find bugs, mail them to curl-bug@haxx.se.\n"<pos:position pos:line="1090" pos:column="61"/></literal>
<literal type="string" pos:line="1091" pos:column="1">"\n"<pos:position pos:line="1091" pos:column="5"/></literal>
<literal type="string" pos:line="1092" pos:column="1">"AUTHORS / CONTRIBUTORS\n"<pos:position pos:line="1092" pos:column="27"/></literal>
<literal type="string" pos:line="1093" pos:column="1">"      - Daniel Stenberg &lt;Daniel.Stenberg@haxx.se&gt;\n"<pos:position pos:line="1093" pos:column="60"/></literal>
<literal type="string" pos:line="1094" pos:column="1">"      - Rafael Sagula &lt;sagula@inf.ufrgs.br&gt;\n"<pos:position pos:line="1094" pos:column="54"/></literal>
<literal type="string" pos:line="1095" pos:column="1">"      - Sampo Kellomaki &lt;sampo@iki.fi&gt;\n"<pos:position pos:line="1095" pos:column="49"/></literal></expr></argument>
)<pos:position pos:line="1096" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1096" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1097" pos:column="2">puts<pos:position pos:line="1097" pos:column="6"/></name><argument_list pos:line="1097" pos:column="6">(
<argument><expr><literal type="string" pos:line="1098" pos:column="1">"      - Linas Vepstas &lt;linas@linas.org&gt;\n"<pos:position pos:line="1098" pos:column="50"/></literal>
<literal type="string" pos:line="1099" pos:column="1">"      - Bjorn Reese &lt;breese@mail1.stofanet.dk&gt;\n"<pos:position pos:line="1099" pos:column="57"/></literal>
<literal type="string" pos:line="1100" pos:column="1">"      - Johan Anderson &lt;johan@homemail.com&gt;\n"<pos:position pos:line="1100" pos:column="54"/></literal>
<literal type="string" pos:line="1101" pos:column="1">"      - Kjell Ericson &lt;Kjell.Ericson@haxx.se&gt;\n"<pos:position pos:line="1101" pos:column="56"/></literal>
<literal type="string" pos:line="1102" pos:column="1">"      - Troy Engel &lt;tengel@sonic.net&gt;\n"<pos:position pos:line="1102" pos:column="48"/></literal>
<literal type="string" pos:line="1103" pos:column="1">"      - Ryan Nelson &lt;ryan@inch.com&gt;\n"<pos:position pos:line="1103" pos:column="46"/></literal>
<literal type="string" pos:line="1104" pos:column="1">"      - Bjï¿½rn Stenberg &lt;Bjorn.Stenberg@haxx.se&gt;\n"<pos:position pos:line="1104" pos:column="63"/></literal>
<literal type="string" pos:line="1105" pos:column="1">"      - Angus Mackay &lt;amackay@gus.ml.org&gt;\n"<pos:position pos:line="1105" pos:column="52"/></literal>
<literal type="string" pos:line="1106" pos:column="1">"      - Eric Young &lt;eay@cryptsoft.com&gt;\n"<pos:position pos:line="1106" pos:column="49"/></literal>
<literal type="string" pos:line="1107" pos:column="1">"      - Simon Dick &lt;simond@totally.irrelevant.org&gt;\n"<pos:position pos:line="1107" pos:column="61"/></literal>
<literal type="string" pos:line="1108" pos:column="1">"      - Oren Tirosh &lt;oren@monty.hishome.net&gt;\n"<pos:position pos:line="1108" pos:column="55"/></literal></expr></argument>
)<pos:position pos:line="1109" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1109" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1110" pos:column="2">puts<pos:position pos:line="1110" pos:column="6"/></name><argument_list pos:line="1110" pos:column="6">(
<argument><expr><literal type="string" pos:line="1111" pos:column="1">"      - Steven G. Johnson &lt;stevenj@alum.mit.edu&gt;\n"<pos:position pos:line="1111" pos:column="59"/></literal>
<literal type="string" pos:line="1112" pos:column="1">"      - Gilbert Ramirez Jr. &lt;gram@verdict.uthscsa.edu&gt;\n"<pos:position pos:line="1112" pos:column="65"/></literal>
<literal type="string" pos:line="1113" pos:column="1">"      - Andrï¿½s Garcï¿½a &lt;ornalux@redestb.es&gt;\n"<pos:position pos:line="1113" pos:column="63"/></literal>
<literal type="string" pos:line="1114" pos:column="1">"      - Douglas E. Wegscheid &lt;wegscd@whirlpool.com&gt;\n"<pos:position pos:line="1114" pos:column="62"/></literal>
<literal type="string" pos:line="1115" pos:column="1">"      - Mark Butler &lt;butlerm@xmission.com&gt;\n"<pos:position pos:line="1115" pos:column="53"/></literal>
<literal type="string" pos:line="1116" pos:column="1">"      - Eric Thelin &lt;eric@generation-i.com&gt;\n"<pos:position pos:line="1116" pos:column="54"/></literal>
<literal type="string" pos:line="1117" pos:column="1">"      - Marc Boucher &lt;marc@mbsi.ca&gt;\n"<pos:position pos:line="1117" pos:column="46"/></literal>
<literal type="string" pos:line="1118" pos:column="1">"      - Greg Onufer &lt;Greg.Onufer@Eng.Sun.COM&gt;\n"<pos:position pos:line="1118" pos:column="56"/></literal>
<literal type="string" pos:line="1119" pos:column="1">"      - Doug Kaufman &lt;dkaufman@rahul.net&gt;\n"<pos:position pos:line="1119" pos:column="52"/></literal>
<literal type="string" pos:line="1120" pos:column="1">"      - David Eriksson &lt;david@2good.com&gt;\n"<pos:position pos:line="1120" pos:column="51"/></literal>
<literal type="string" pos:line="1121" pos:column="1">"      - Ralph Beckmann &lt;rabe@uni-paderborn.de&gt;\n"<pos:position pos:line="1121" pos:column="57"/></literal></expr></argument>
)<pos:position pos:line="1122" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1122" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1123" pos:column="2">puts<pos:position pos:line="1123" pos:column="6"/></name><argument_list pos:line="1123" pos:column="6">(
<argument><expr><literal type="string" pos:line="1124" pos:column="1">"      - T. Yamada &lt;tai@imasy.or.jp&gt;\n"<pos:position pos:line="1124" pos:column="46"/></literal>
<literal type="string" pos:line="1125" pos:column="1">"      - Lars J. Aas &lt;larsa@sim.no&gt;\n"<pos:position pos:line="1125" pos:column="45"/></literal>
<literal type="string" pos:line="1126" pos:column="1">"      - Jï¿½rn Hartroth &lt;Joern.Hartroth@computer.org&gt;\n"<pos:position pos:line="1126" pos:column="67"/></literal>
<literal type="string" pos:line="1127" pos:column="1">"      - Matthew Clarke &lt;clamat@van.maves.ca&gt;\n"<pos:position pos:line="1127" pos:column="55"/></literal>
<literal type="string" pos:line="1128" pos:column="1">"      - Linus Nielsen Feltzing &lt;linus@haxx.se&gt;\n"<pos:position pos:line="1128" pos:column="57"/></literal>
<literal type="string" pos:line="1129" pos:column="1">"      - Felix von Leitner &lt;felix@convergence.de&gt;\n"<pos:position pos:line="1129" pos:column="59"/></literal>
<literal type="string" pos:line="1130" pos:column="1">"      - Dan Zitter &lt;dzitter@zitter.net&gt;\n"<pos:position pos:line="1130" pos:column="50"/></literal>
<literal type="string" pos:line="1131" pos:column="1">"      - Jongki Suwandi &lt;Jongki.Suwandi@eng.sun.com&gt;\n"<pos:position pos:line="1131" pos:column="62"/></literal>
<literal type="string" pos:line="1132" pos:column="1">"      - Chris Maltby &lt;chris@aurema.com&gt;\n"<pos:position pos:line="1132" pos:column="50"/></literal>
<literal type="string" pos:line="1133" pos:column="1">"      - Ron Zapp &lt;rzapper@yahoo.com&gt;\n"<pos:position pos:line="1133" pos:column="47"/></literal>
<literal type="string" pos:line="1134" pos:column="1">"      - Paul Marquis &lt;pmarquis@iname.com&gt;\n"<pos:position pos:line="1134" pos:column="52"/></literal></expr></argument>
)<pos:position pos:line="1135" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1135" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1136" pos:column="2">puts<pos:position pos:line="1136" pos:column="6"/></name><argument_list pos:line="1136" pos:column="6">(
<argument><expr><literal type="string" pos:line="1137" pos:column="1">"      - Ellis Pritchard &lt;ellis@citria.com&gt;\n"<pos:position pos:line="1137" pos:column="53"/></literal>
<literal type="string" pos:line="1138" pos:column="1">"      - Damien Adant &lt;dams@usa.net&gt;\n"<pos:position pos:line="1138" pos:column="46"/></literal>
<literal type="string" pos:line="1139" pos:column="1">"      - Chris &lt;cbayliss@csc.come&gt;\n"<pos:position pos:line="1139" pos:column="44"/></literal>
<literal type="string" pos:line="1140" pos:column="1">"      - Marco G. Salvagno &lt;mgs@whiz.cjb.net&gt;\n"<pos:position pos:line="1140" pos:column="55"/></literal>
<literal type="string" pos:line="1141" pos:column="1">"      - Paul Marquis &lt;pmarquis@iname.com&gt;\n"<pos:position pos:line="1141" pos:column="52"/></literal>
<literal type="string" pos:line="1142" pos:column="1">"      - David LeBlanc &lt;dleblanc@qnx.com&gt;\n"<pos:position pos:line="1142" pos:column="51"/></literal>
<literal type="string" pos:line="1143" pos:column="1">"      - Rich Gray at Plus Technologies\n"<pos:position pos:line="1143" pos:column="43"/></literal>
<literal type="string" pos:line="1144" pos:column="1">"      - Luong Dinh Dung &lt;u8luong@lhsystems.hu&gt;\n"<pos:position pos:line="1144" pos:column="57"/></literal>
<literal type="string" pos:line="1145" pos:column="1">"      - Torsten Foertsch &lt;torsten.foertsch@gmx.net&gt;\n"<pos:position pos:line="1145" pos:column="62"/></literal>
<literal type="string" pos:line="1146" pos:column="1">"      - Kristian Kï¿½hntopp &lt;kris@koehntopp.de&gt;\n"<pos:position pos:line="1146" pos:column="61"/></literal>
<literal type="string" pos:line="1147" pos:column="1">"      - Fred Noz &lt;FNoz@siac.com&gt;\n"<pos:position pos:line="1147" pos:column="43"/></literal></expr></argument>
)<pos:position pos:line="1148" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1148" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1149" pos:column="2">puts<pos:position pos:line="1149" pos:column="6"/></name><argument_list pos:line="1149" pos:column="6">(
<argument><expr><literal type="string" pos:line="1150" pos:column="1">"      - Caolan McNamara &lt;caolan@csn.ul.ie&gt;\n"<pos:position pos:line="1150" pos:column="53"/></literal>
<literal type="string" pos:line="1151" pos:column="1">"      - Albert Chin-A-Young &lt;china@thewrittenword.com&gt;\n"<pos:position pos:line="1151" pos:column="65"/></literal>
<literal type="string" pos:line="1152" pos:column="1">"      - Stephen Kick &lt;skick@epicrealm.com&gt;\n"<pos:position pos:line="1152" pos:column="53"/></literal>
<literal type="string" pos:line="1153" pos:column="1">"      - Martin Hedenfalk &lt;mhe@stacken.kth.se&gt;\n"<pos:position pos:line="1153" pos:column="56"/></literal>
<literal type="string" pos:line="1154" pos:column="1">"      - Richard Prescott\n"<pos:position pos:line="1154" pos:column="29"/></literal>
<literal type="string" pos:line="1155" pos:column="1">"      - Jason S. Priebe &lt;priebe@wral-tv.com&gt;\n"<pos:position pos:line="1155" pos:column="55"/></literal>
<literal type="string" pos:line="1156" pos:column="1">"      - T. Bharath &lt;TBharath@responsenetworks.com&gt;\n"<pos:position pos:line="1156" pos:column="61"/></literal>
<literal type="string" pos:line="1157" pos:column="1">"      - Alexander Kourakos &lt;awk@users.sourceforge.net&gt;\n"<pos:position pos:line="1157" pos:column="65"/></literal>
<literal type="string" pos:line="1158" pos:column="1">"      - James Griffiths &lt;griffiths_james@yahoo.com&gt;\n"<pos:position pos:line="1158" pos:column="62"/></literal>
<literal type="string" pos:line="1159" pos:column="1">"      - Loic Dachary &lt;loic@senga.org&gt;\n"<pos:position pos:line="1159" pos:column="48"/></literal></expr></argument>
)<pos:position pos:line="1160" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1160" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1161" pos:column="2">puts<pos:position pos:line="1161" pos:column="6"/></name><argument_list pos:line="1161" pos:column="6">(
<argument><expr><literal type="string" pos:line="1162" pos:column="1">"      - Robert Weaver &lt;robert.weaver@sabre.com&gt;\n"<pos:position pos:line="1162" pos:column="58"/></literal>
<literal type="string" pos:line="1163" pos:column="1">"      - Ingo Ralf Blum &lt;ingoralfblum@ingoralfblum.com&gt;\n"<pos:position pos:line="1163" pos:column="65"/></literal>
<literal type="string" pos:line="1164" pos:column="1">"      - Jun-ichiro itojun Hagino &lt;itojun@iijlab.net&gt;\n"<pos:position pos:line="1164" pos:column="63"/></literal>
<literal type="string" pos:line="1165" pos:column="1">"\n"<pos:position pos:line="1165" pos:column="5"/></literal>
<literal type="string" pos:line="1166" pos:column="1">"WWW\n"<pos:position pos:line="1166" pos:column="8"/></literal>
<literal type="string" pos:line="1167" pos:column="1">"     http://curl.haxx.se\n"<pos:position pos:line="1167" pos:column="29"/></literal>
<literal type="string" pos:line="1168" pos:column="1">"\n"<pos:position pos:line="1168" pos:column="5"/></literal>
<literal type="string" pos:line="1169" pos:column="1">"FTP\n"<pos:position pos:line="1169" pos:column="8"/></literal>
<literal type="string" pos:line="1170" pos:column="1">"     ftp://ftp.sunet.se/pub/www/utilities/curl/\n"<pos:position pos:line="1170" pos:column="52"/></literal>
<literal type="string" pos:line="1171" pos:column="1">"\n"<pos:position pos:line="1171" pos:column="5"/></literal>
<literal type="string" pos:line="1172" pos:column="1">"SEE ALSO\n"<pos:position pos:line="1172" pos:column="13"/></literal>
<literal type="string" pos:line="1173" pos:column="1">"     ftp(1), wget(1), snarf(1)\n"<pos:position pos:line="1173" pos:column="35"/></literal>
<literal type="string" pos:line="1174" pos:column="1">"\n"<pos:position pos:line="1174" pos:column="5"/></literal>
<literal type="string" pos:line="1175" pos:column="1">"LATEST VERSION\n"<pos:position pos:line="1175" pos:column="19"/></literal>
<literal type="string" pos:line="1176" pos:column="1">"\n"<pos:position pos:line="1176" pos:column="5"/></literal>
<literal type="string" pos:line="1177" pos:column="1">"  You always find news about what's going on as well as the latest versions\n"<pos:position pos:line="1177" pos:column="80"/></literal>
<literal type="string" pos:line="1178" pos:column="1">"  from the curl web pages, located at:\n"<pos:position pos:line="1178" pos:column="43"/></literal>
<literal type="string" pos:line="1179" pos:column="1">"\n"<pos:position pos:line="1179" pos:column="5"/></literal>
<literal type="string" pos:line="1180" pos:column="1">"        http://curl.haxx.se\n"<pos:position pos:line="1180" pos:column="32"/></literal>
<literal type="string" pos:line="1181" pos:column="1">"\n"<pos:position pos:line="1181" pos:column="5"/></literal>
<literal type="string" pos:line="1182" pos:column="1">"SIMPLE USAGE\n"<pos:position pos:line="1182" pos:column="17"/></literal>
<literal type="string" pos:line="1183" pos:column="1">"\n"<pos:position pos:line="1183" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1184" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1184" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1185" pos:column="2">puts<pos:position pos:line="1185" pos:column="6"/></name><argument_list pos:line="1185" pos:column="6">(
<argument><expr><literal type="string" pos:line="1186" pos:column="1">"  Get the main page from netscape's web-server:\n"<pos:position pos:line="1186" pos:column="52"/></literal>
<literal type="string" pos:line="1187" pos:column="1">"\n"<pos:position pos:line="1187" pos:column="5"/></literal>
<literal type="string" pos:line="1188" pos:column="1">"        curl http://www.netscape.com/\n"<pos:position pos:line="1188" pos:column="42"/></literal>
<literal type="string" pos:line="1189" pos:column="1">"\n"<pos:position pos:line="1189" pos:column="5"/></literal>
<literal type="string" pos:line="1190" pos:column="1">"  Get the root README file from funet's ftp-server:\n"<pos:position pos:line="1190" pos:column="56"/></literal>
<literal type="string" pos:line="1191" pos:column="1">"\n"<pos:position pos:line="1191" pos:column="5"/></literal>
<literal type="string" pos:line="1192" pos:column="1">"        curl ftp://ftp.funet.fi/README\n"<pos:position pos:line="1192" pos:column="43"/></literal>
<literal type="string" pos:line="1193" pos:column="1">"\n"<pos:position pos:line="1193" pos:column="5"/></literal>
<literal type="string" pos:line="1194" pos:column="1">"  Get a web page from a server using port 8000:\n"<pos:position pos:line="1194" pos:column="52"/></literal>
<literal type="string" pos:line="1195" pos:column="1">"\n"<pos:position pos:line="1195" pos:column="5"/></literal>
<literal type="string" pos:line="1196" pos:column="1">"        curl http://www.weirdserver.com:8000/\n"<pos:position pos:line="1196" pos:column="50"/></literal>
<literal type="string" pos:line="1197" pos:column="1">"\n"<pos:position pos:line="1197" pos:column="5"/></literal>
<literal type="string" pos:line="1198" pos:column="1">"  Get a list of the root directory of an FTP site:\n"<pos:position pos:line="1198" pos:column="55"/></literal>
<literal type="string" pos:line="1199" pos:column="1">"\n"<pos:position pos:line="1199" pos:column="5"/></literal>
<literal type="string" pos:line="1200" pos:column="1">"        curl ftp://cool.haxx.se/\n"<pos:position pos:line="1200" pos:column="37"/></literal>
<literal type="string" pos:line="1201" pos:column="1">"\n"<pos:position pos:line="1201" pos:column="5"/></literal>
<literal type="string" pos:line="1202" pos:column="1">"  Get a gopher document from funet's gopher server:\n"<pos:position pos:line="1202" pos:column="56"/></literal>
<literal type="string" pos:line="1203" pos:column="1">"\n"<pos:position pos:line="1203" pos:column="5"/></literal>
<literal type="string" pos:line="1204" pos:column="1">"        curl gopher://gopher.funet.fi\n"<pos:position pos:line="1204" pos:column="42"/></literal>
<literal type="string" pos:line="1205" pos:column="1">"\n"<pos:position pos:line="1205" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1206" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1206" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1207" pos:column="2">puts<pos:position pos:line="1207" pos:column="6"/></name><argument_list pos:line="1207" pos:column="6">(
<argument><expr><literal type="string" pos:line="1208" pos:column="1">"  Get the definition of curl from a dictionary:\n"<pos:position pos:line="1208" pos:column="52"/></literal>
<literal type="string" pos:line="1209" pos:column="1">"\n"<pos:position pos:line="1209" pos:column="5"/></literal>
<literal type="string" pos:line="1210" pos:column="1">"        curl dict://dict.org/m:curl\n"<pos:position pos:line="1210" pos:column="40"/></literal>
<literal type="string" pos:line="1211" pos:column="1">"\n"<pos:position pos:line="1211" pos:column="5"/></literal>
<literal type="string" pos:line="1212" pos:column="1">"  Fetch two documents at once:\n"<pos:position pos:line="1212" pos:column="35"/></literal>
<literal type="string" pos:line="1213" pos:column="1">"\n"<pos:position pos:line="1213" pos:column="5"/></literal>
<literal type="string" pos:line="1214" pos:column="1">"        curl ftp://cool.haxx.se/ http://www.weirdserver.com:8000/\n"<pos:position pos:line="1214" pos:column="70"/></literal>
<literal type="string" pos:line="1215" pos:column="1">"\n"<pos:position pos:line="1215" pos:column="5"/></literal>
<literal type="string" pos:line="1216" pos:column="1">"DOWNLOAD TO A FILE\n"<pos:position pos:line="1216" pos:column="23"/></literal>
<literal type="string" pos:line="1217" pos:column="1">"\n"<pos:position pos:line="1217" pos:column="5"/></literal>
<literal type="string" pos:line="1218" pos:column="1">"  Get a web page and store in a local file:\n"<pos:position pos:line="1218" pos:column="48"/></literal>
<literal type="string" pos:line="1219" pos:column="1">"\n"<pos:position pos:line="1219" pos:column="5"/></literal>
<literal type="string" pos:line="1220" pos:column="1">"        curl -o thatpage.html http://www.netscape.com/\n"<pos:position pos:line="1220" pos:column="59"/></literal>
<literal type="string" pos:line="1221" pos:column="1">"\n"<pos:position pos:line="1221" pos:column="5"/></literal>
<literal type="string" pos:line="1222" pos:column="1">"  Get a web page and store in a local file, make the local file get the name\n"<pos:position pos:line="1222" pos:column="81"/></literal>
<literal type="string" pos:line="1223" pos:column="1">"  of the remote document (if no file name part is specified in the URL, this\n"<pos:position pos:line="1223" pos:column="81"/></literal>
<literal type="string" pos:line="1224" pos:column="1">"  will fail):\n"<pos:position pos:line="1224" pos:column="18"/></literal>
<literal type="string" pos:line="1225" pos:column="1">"\n"<pos:position pos:line="1225" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1226" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1226" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1227" pos:column="2">puts<pos:position pos:line="1227" pos:column="6"/></name><argument_list pos:line="1227" pos:column="6">(
<argument><expr><literal type="string" pos:line="1228" pos:column="1">"        curl -O http://www.netscape.com/index.html\n"<pos:position pos:line="1228" pos:column="55"/></literal>
<literal type="string" pos:line="1229" pos:column="1">"\n"<pos:position pos:line="1229" pos:column="5"/></literal>
<literal type="string" pos:line="1230" pos:column="1">"  Fetch two files and store them with their remote names:\n"<pos:position pos:line="1230" pos:column="62"/></literal>
<literal type="string" pos:line="1231" pos:column="1">"\n"<pos:position pos:line="1231" pos:column="5"/></literal>
<literal type="string" pos:line="1232" pos:column="1">"        curl -O www.haxx.se/index.html -O curl.haxx.se/download.html\n"<pos:position pos:line="1232" pos:column="73"/></literal>
<literal type="string" pos:line="1233" pos:column="1">"\n"<pos:position pos:line="1233" pos:column="5"/></literal>
<literal type="string" pos:line="1234" pos:column="1">"USING PASSWORDS\n"<pos:position pos:line="1234" pos:column="20"/></literal>
<literal type="string" pos:line="1235" pos:column="1">"\n"<pos:position pos:line="1235" pos:column="5"/></literal>
<literal type="string" pos:line="1236" pos:column="1">" FTP\n"<pos:position pos:line="1236" pos:column="9"/></literal>
<literal type="string" pos:line="1237" pos:column="1">"\n"<pos:position pos:line="1237" pos:column="5"/></literal>
<literal type="string" pos:line="1238" pos:column="1">"   To ftp files using name+passwd, include them in the URL like:\n"<pos:position pos:line="1238" pos:column="69"/></literal>
<literal type="string" pos:line="1239" pos:column="1">"\n"<pos:position pos:line="1239" pos:column="5"/></literal>
<literal type="string" pos:line="1240" pos:column="1">"        curl ftp://name:passwd@machine.domain:port/full/path/to/file\n"<pos:position pos:line="1240" pos:column="73"/></literal>
<literal type="string" pos:line="1241" pos:column="1">"\n"<pos:position pos:line="1241" pos:column="5"/></literal>
<literal type="string" pos:line="1242" pos:column="1">"   or specify them with the -u flag like\n"<pos:position pos:line="1242" pos:column="45"/></literal>
<literal type="string" pos:line="1243" pos:column="1">"\n"<pos:position pos:line="1243" pos:column="5"/></literal>
<literal type="string" pos:line="1244" pos:column="1">"        curl -u name:passwd ftp://machine.domain:port/full/path/to/file\n"<pos:position pos:line="1244" pos:column="76"/></literal>
<literal type="string" pos:line="1245" pos:column="1">"\n"<pos:position pos:line="1245" pos:column="5"/></literal>
<literal type="string" pos:line="1246" pos:column="1">" HTTP\n"<pos:position pos:line="1246" pos:column="10"/></literal>
<literal type="string" pos:line="1247" pos:column="1">"\n"<pos:position pos:line="1247" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1248" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1248" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1249" pos:column="2">puts<pos:position pos:line="1249" pos:column="6"/></name><argument_list pos:line="1249" pos:column="6">(
<argument><expr><literal type="string" pos:line="1250" pos:column="1">"   The HTTP URL doesn't support user and password in the URL string. Curl\n"<pos:position pos:line="1250" pos:column="78"/></literal>
<literal type="string" pos:line="1251" pos:column="1">"   does support that anyway to provide a ftp-style interface and thus you can\n"<pos:position pos:line="1251" pos:column="82"/></literal>
<literal type="string" pos:line="1252" pos:column="1">"   pick a file like:\n"<pos:position pos:line="1252" pos:column="25"/></literal>
<literal type="string" pos:line="1253" pos:column="1">"\n"<pos:position pos:line="1253" pos:column="5"/></literal>
<literal type="string" pos:line="1254" pos:column="1">"        curl http://name:passwd@machine.domain/full/path/to/file\n"<pos:position pos:line="1254" pos:column="69"/></literal>
<literal type="string" pos:line="1255" pos:column="1">"\n"<pos:position pos:line="1255" pos:column="5"/></literal>
<literal type="string" pos:line="1256" pos:column="1">"   or specify user and password separately like in\n"<pos:position pos:line="1256" pos:column="55"/></literal>
<literal type="string" pos:line="1257" pos:column="1">"\n"<pos:position pos:line="1257" pos:column="5"/></literal>
<literal type="string" pos:line="1258" pos:column="1">"        curl -u name:passwd http://machine.domain/full/path/to/file\n"<pos:position pos:line="1258" pos:column="72"/></literal>
<literal type="string" pos:line="1259" pos:column="1">"\n"<pos:position pos:line="1259" pos:column="5"/></literal>
<literal type="string" pos:line="1260" pos:column="1">"   NOTE! Since HTTP URLs don't support user and password, you can't use that\n"<pos:position pos:line="1260" pos:column="81"/></literal></expr></argument>
)<pos:position pos:line="1261" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1261" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1262" pos:column="2">puts<pos:position pos:line="1262" pos:column="6"/></name><argument_list pos:line="1262" pos:column="6">(
<argument><expr><literal type="string" pos:line="1263" pos:column="1">"   style when using Curl via a proxy. You _must_ use the -u style fetch\n"<pos:position pos:line="1263" pos:column="76"/></literal>
<literal type="string" pos:line="1264" pos:column="1">"   during such circumstances.\n"<pos:position pos:line="1264" pos:column="34"/></literal>
<literal type="string" pos:line="1265" pos:column="1">"\n"<pos:position pos:line="1265" pos:column="5"/></literal>
<literal type="string" pos:line="1266" pos:column="1">" HTTPS\n"<pos:position pos:line="1266" pos:column="11"/></literal>
<literal type="string" pos:line="1267" pos:column="1">"\n"<pos:position pos:line="1267" pos:column="5"/></literal>
<literal type="string" pos:line="1268" pos:column="1">"   Probably most commonly used with private certificates, as explained below.\n"<pos:position pos:line="1268" pos:column="82"/></literal>
<literal type="string" pos:line="1269" pos:column="1">"\n"<pos:position pos:line="1269" pos:column="5"/></literal>
<literal type="string" pos:line="1270" pos:column="1">" GOPHER\n"<pos:position pos:line="1270" pos:column="12"/></literal>
<literal type="string" pos:line="1271" pos:column="1">"\n"<pos:position pos:line="1271" pos:column="5"/></literal>
<literal type="string" pos:line="1272" pos:column="1">"   Curl features no password support for gopher.\n"<pos:position pos:line="1272" pos:column="53"/></literal>
<literal type="string" pos:line="1273" pos:column="1">"\n"<pos:position pos:line="1273" pos:column="5"/></literal>
<literal type="string" pos:line="1274" pos:column="1">"PROXY\n"<pos:position pos:line="1274" pos:column="10"/></literal>
<literal type="string" pos:line="1275" pos:column="1">"\n"<pos:position pos:line="1275" pos:column="5"/></literal>
<literal type="string" pos:line="1276" pos:column="1">" Get an ftp file using a proxy named my-proxy that uses port 888:\n"<pos:position pos:line="1276" pos:column="70"/></literal>
<literal type="string" pos:line="1277" pos:column="1">"\n"<pos:position pos:line="1277" pos:column="5"/></literal>
<literal type="string" pos:line="1278" pos:column="1">"        curl -x my-proxy:888 ftp://ftp.leachsite.com/README\n"<pos:position pos:line="1278" pos:column="64"/></literal>
<literal type="string" pos:line="1279" pos:column="1">"\n"<pos:position pos:line="1279" pos:column="5"/></literal>
<literal type="string" pos:line="1280" pos:column="1">" Get a file from a HTTP server that requires user and password, using the\n"<pos:position pos:line="1280" pos:column="78"/></literal>
<literal type="string" pos:line="1281" pos:column="1">" same proxy as above:\n"<pos:position pos:line="1281" pos:column="26"/></literal>
<literal type="string" pos:line="1282" pos:column="1">"\n"<pos:position pos:line="1282" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1283" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1283" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1284" pos:column="2">puts<pos:position pos:line="1284" pos:column="6"/></name><argument_list pos:line="1284" pos:column="6">(
<argument><expr><literal type="string" pos:line="1285" pos:column="1">"        curl -u user:passwd -x my-proxy:888 http://www.get.this/\n"<pos:position pos:line="1285" pos:column="69"/></literal>
<literal type="string" pos:line="1286" pos:column="1">"\n"<pos:position pos:line="1286" pos:column="5"/></literal>
<literal type="string" pos:line="1287" pos:column="1">" Some proxies require special authentication. Specify by using -U as above:\n"<pos:position pos:line="1287" pos:column="80"/></literal>
<literal type="string" pos:line="1288" pos:column="1">"\n"<pos:position pos:line="1288" pos:column="5"/></literal>
<literal type="string" pos:line="1289" pos:column="1">"        curl -U user:passwd -x my-proxy:888 http://www.get.this/\n"<pos:position pos:line="1289" pos:column="69"/></literal>
<literal type="string" pos:line="1290" pos:column="1">"\n"<pos:position pos:line="1290" pos:column="5"/></literal>
<literal type="string" pos:line="1291" pos:column="1">" See also the environment variables Curl support that offer further proxy\n"<pos:position pos:line="1291" pos:column="78"/></literal>
<literal type="string" pos:line="1292" pos:column="1">" control.\n"<pos:position pos:line="1292" pos:column="14"/></literal>
<literal type="string" pos:line="1293" pos:column="1">"\n"<pos:position pos:line="1293" pos:column="5"/></literal>
<literal type="string" pos:line="1294" pos:column="1">"RANGES\n"<pos:position pos:line="1294" pos:column="11"/></literal>
<literal type="string" pos:line="1295" pos:column="1">"\n"<pos:position pos:line="1295" pos:column="5"/></literal>
<literal type="string" pos:line="1296" pos:column="1">"  With HTTP 1.1 byte-ranges were introduced. Using this, a client can request\n"<pos:position pos:line="1296" pos:column="82"/></literal>
<literal type="string" pos:line="1297" pos:column="1">"  to get only one or more subparts of a specified document. Curl supports\n"<pos:position pos:line="1297" pos:column="78"/></literal>
<literal type="string" pos:line="1298" pos:column="1">"  this with the -r flag.\n"<pos:position pos:line="1298" pos:column="29"/></literal>
<literal type="string" pos:line="1299" pos:column="1">"\n"<pos:position pos:line="1299" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1300" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1300" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1301" pos:column="2">puts<pos:position pos:line="1301" pos:column="6"/></name><argument_list pos:line="1301" pos:column="6">(
<argument><expr><literal type="string" pos:line="1302" pos:column="1">"  Get the first 100 bytes of a document:\n"<pos:position pos:line="1302" pos:column="45"/></literal>
<literal type="string" pos:line="1303" pos:column="1">"\n"<pos:position pos:line="1303" pos:column="5"/></literal>
<literal type="string" pos:line="1304" pos:column="1">"        curl -r 0-99 http://www.get.this/\n"<pos:position pos:line="1304" pos:column="46"/></literal>
<literal type="string" pos:line="1305" pos:column="1">"\n"<pos:position pos:line="1305" pos:column="5"/></literal>
<literal type="string" pos:line="1306" pos:column="1">"  Get the last 500 bytes of a document:\n"<pos:position pos:line="1306" pos:column="44"/></literal>
<literal type="string" pos:line="1307" pos:column="1">"\n"<pos:position pos:line="1307" pos:column="5"/></literal>
<literal type="string" pos:line="1308" pos:column="1">"        curl -r -500 http://www.get.this/\n"<pos:position pos:line="1308" pos:column="46"/></literal>
<literal type="string" pos:line="1309" pos:column="1">"\n"<pos:position pos:line="1309" pos:column="5"/></literal>
<literal type="string" pos:line="1310" pos:column="1">"  Curl also supports simple ranges for FTP files as well. Then you can only\n"<pos:position pos:line="1310" pos:column="80"/></literal>
<literal type="string" pos:line="1311" pos:column="1">"  specify start and stop position.\n"<pos:position pos:line="1311" pos:column="39"/></literal>
<literal type="string" pos:line="1312" pos:column="1">"\n"<pos:position pos:line="1312" pos:column="5"/></literal>
<literal type="string" pos:line="1313" pos:column="1">"  Get the first 100 bytes of a document using FTP:\n"<pos:position pos:line="1313" pos:column="55"/></literal>
<literal type="string" pos:line="1314" pos:column="1">"\n"<pos:position pos:line="1314" pos:column="5"/></literal>
<literal type="string" pos:line="1315" pos:column="1">"        curl -r 0-99 ftp://www.get.this/README  \n"<pos:position pos:line="1315" pos:column="53"/></literal>
<literal type="string" pos:line="1316" pos:column="1">"\n"<pos:position pos:line="1316" pos:column="5"/></literal>
<literal type="string" pos:line="1317" pos:column="1">"UPLOADING\n"<pos:position pos:line="1317" pos:column="14"/></literal>
<literal type="string" pos:line="1318" pos:column="1">"\n"<pos:position pos:line="1318" pos:column="5"/></literal>
<literal type="string" pos:line="1319" pos:column="1">" FTP\n"<pos:position pos:line="1319" pos:column="9"/></literal>
<literal type="string" pos:line="1320" pos:column="1">"\n"<pos:position pos:line="1320" pos:column="5"/></literal>
<literal type="string" pos:line="1321" pos:column="1">"  Upload all data on stdin to a specified ftp site:\n"<pos:position pos:line="1321" pos:column="56"/></literal>
<literal type="string" pos:line="1322" pos:column="1">"\n"<pos:position pos:line="1322" pos:column="5"/></literal>
<literal type="string" pos:line="1323" pos:column="1">"        curl -t ftp://ftp.upload.com/myfile\n"<pos:position pos:line="1323" pos:column="48"/></literal>
<literal type="string" pos:line="1324" pos:column="1">"\n"<pos:position pos:line="1324" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1325" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1325" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1326" pos:column="2">puts<pos:position pos:line="1326" pos:column="6"/></name><argument_list pos:line="1326" pos:column="6">(
<argument><expr><literal type="string" pos:line="1327" pos:column="1">"  Upload data from a specified file, login with user and password:\n"<pos:position pos:line="1327" pos:column="71"/></literal>
<literal type="string" pos:line="1328" pos:column="1">"\n"<pos:position pos:line="1328" pos:column="5"/></literal>
<literal type="string" pos:line="1329" pos:column="1">"        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/myfile\n"<pos:position pos:line="1329" pos:column="74"/></literal>
<literal type="string" pos:line="1330" pos:column="1">"\n"<pos:position pos:line="1330" pos:column="5"/></literal>
<literal type="string" pos:line="1331" pos:column="1">"  Upload a local file to the remote site, and use the local file name remote\n"<pos:position pos:line="1331" pos:column="81"/></literal>
<literal type="string" pos:line="1332" pos:column="1">"  too:\n"<pos:position pos:line="1332" pos:column="11"/></literal>
<literal type="string" pos:line="1333" pos:column="1">" \n"<pos:position pos:line="1333" pos:column="6"/></literal>
<literal type="string" pos:line="1334" pos:column="1">"        curl -T uploadfile -u user:passwd ftp://ftp.upload.com/\n"<pos:position pos:line="1334" pos:column="68"/></literal>
<literal type="string" pos:line="1335" pos:column="1">"\n"<pos:position pos:line="1335" pos:column="5"/></literal>
<literal type="string" pos:line="1336" pos:column="1">"  Upload a local file to get appended to the remote file using ftp:\n"<pos:position pos:line="1336" pos:column="72"/></literal>
<literal type="string" pos:line="1337" pos:column="1">"\n"<pos:position pos:line="1337" pos:column="5"/></literal>
<literal type="string" pos:line="1338" pos:column="1">"        curl -T localfile -a ftp://ftp.upload.com/remotefile\n"<pos:position pos:line="1338" pos:column="65"/></literal>
<literal type="string" pos:line="1339" pos:column="1">"\n"<pos:position pos:line="1339" pos:column="5"/></literal>
<literal type="string" pos:line="1340" pos:column="1">"  Curl also supports ftp upload through a proxy, but only if the proxy is\n"<pos:position pos:line="1340" pos:column="78"/></literal></expr></argument>
)<pos:position pos:line="1341" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1341" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1342" pos:column="2">puts<pos:position pos:line="1342" pos:column="6"/></name><argument_list pos:line="1342" pos:column="6">(
<argument><expr><literal type="string" pos:line="1343" pos:column="1">"  configured to allow that kind of tunneling. If it does, you can run curl in\n"<pos:position pos:line="1343" pos:column="82"/></literal>
<literal type="string" pos:line="1344" pos:column="1">"  a fashion similar to:\n"<pos:position pos:line="1344" pos:column="28"/></literal>
<literal type="string" pos:line="1345" pos:column="1">"\n"<pos:position pos:line="1345" pos:column="5"/></literal>
<literal type="string" pos:line="1346" pos:column="1">"        curl --proxytunnel -x proxy:port -T localfile ftp.upload.com\n"<pos:position pos:line="1346" pos:column="73"/></literal>
<literal type="string" pos:line="1347" pos:column="1">"\n"<pos:position pos:line="1347" pos:column="5"/></literal>
<literal type="string" pos:line="1348" pos:column="1">" HTTP\n"<pos:position pos:line="1348" pos:column="10"/></literal>
<literal type="string" pos:line="1349" pos:column="1">"\n"<pos:position pos:line="1349" pos:column="5"/></literal>
<literal type="string" pos:line="1350" pos:column="1">"  Upload all data on stdin to a specified http site:\n"<pos:position pos:line="1350" pos:column="57"/></literal>
<literal type="string" pos:line="1351" pos:column="1">"\n"<pos:position pos:line="1351" pos:column="5"/></literal>
<literal type="string" pos:line="1352" pos:column="1">"        curl -t http://www.upload.com/myfile\n"<pos:position pos:line="1352" pos:column="49"/></literal>
<literal type="string" pos:line="1353" pos:column="1">"\n"<pos:position pos:line="1353" pos:column="5"/></literal>
<literal type="string" pos:line="1354" pos:column="1">"  Note that the http server must've been configured to accept PUT before this\n"<pos:position pos:line="1354" pos:column="82"/></literal>
<literal type="string" pos:line="1355" pos:column="1">"  can be done successfully.\n"<pos:position pos:line="1355" pos:column="32"/></literal>
<literal type="string" pos:line="1356" pos:column="1">"\n"<pos:position pos:line="1356" pos:column="5"/></literal>
<literal type="string" pos:line="1357" pos:column="1">"  For other ways to do http data upload, see the POST section below.\n"<pos:position pos:line="1357" pos:column="73"/></literal>
<literal type="string" pos:line="1358" pos:column="1">"\n"<pos:position pos:line="1358" pos:column="5"/></literal>
<literal type="string" pos:line="1359" pos:column="1">"VERBOSE / DEBUG\n"<pos:position pos:line="1359" pos:column="20"/></literal>
<literal type="string" pos:line="1360" pos:column="1">"\n"<pos:position pos:line="1360" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1361" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1361" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1362" pos:column="2">puts<pos:position pos:line="1362" pos:column="6"/></name><argument_list pos:line="1362" pos:column="6">(
<argument><expr><literal type="string" pos:line="1363" pos:column="1">"  If curl fails where it isn't supposed to, if the servers don't let you\n"<pos:position pos:line="1363" pos:column="77"/></literal>
<literal type="string" pos:line="1364" pos:column="1">"  in, if you can't understand the responses: use the -v flag to get VERBOSE\n"<pos:position pos:line="1364" pos:column="80"/></literal>
<literal type="string" pos:line="1365" pos:column="1">"  fetching. Curl will output lots of info and all data it sends and\n"<pos:position pos:line="1365" pos:column="72"/></literal>
<literal type="string" pos:line="1366" pos:column="1">"  receives in order to let the user see all client-server interaction.\n"<pos:position pos:line="1366" pos:column="75"/></literal>
<literal type="string" pos:line="1367" pos:column="1">"\n"<pos:position pos:line="1367" pos:column="5"/></literal>
<literal type="string" pos:line="1368" pos:column="1">"        curl -v ftp://ftp.upload.com/\n"<pos:position pos:line="1368" pos:column="42"/></literal>
<literal type="string" pos:line="1369" pos:column="1">"\n"<pos:position pos:line="1369" pos:column="5"/></literal>
<literal type="string" pos:line="1370" pos:column="1">"DETAILED INFORMATION\n"<pos:position pos:line="1370" pos:column="25"/></literal>
<literal type="string" pos:line="1371" pos:column="1">"\n"<pos:position pos:line="1371" pos:column="5"/></literal>
<literal type="string" pos:line="1372" pos:column="1">"  Different protocols provide different ways of getting detailed information\n"<pos:position pos:line="1372" pos:column="81"/></literal></expr></argument>
)<pos:position pos:line="1373" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1373" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1374" pos:column="2">puts<pos:position pos:line="1374" pos:column="6"/></name><argument_list pos:line="1374" pos:column="6">(
<argument><expr><literal type="string" pos:line="1375" pos:column="1">"  about specific files/documents. To get curl to show detailed information\n"<pos:position pos:line="1375" pos:column="79"/></literal>
<literal type="string" pos:line="1376" pos:column="1">"  about a single file, you should use -I/--head option. It displays all\n"<pos:position pos:line="1376" pos:column="76"/></literal>
<literal type="string" pos:line="1377" pos:column="1">"  available info on a single file for HTTP and FTP. The HTTP information is a\n"<pos:position pos:line="1377" pos:column="82"/></literal>
<literal type="string" pos:line="1378" pos:column="1">"  lot more extensive.\n"<pos:position pos:line="1378" pos:column="26"/></literal>
<literal type="string" pos:line="1379" pos:column="1">"\n"<pos:position pos:line="1379" pos:column="5"/></literal>
<literal type="string" pos:line="1380" pos:column="1">"  For HTTP, you can get the header information (the same as -I would show)\n"<pos:position pos:line="1380" pos:column="79"/></literal>
<literal type="string" pos:line="1381" pos:column="1">"  shown before the data by using -i/--include. Curl understands the\n"<pos:position pos:line="1381" pos:column="72"/></literal>
<literal type="string" pos:line="1382" pos:column="1">"  -D/--dump-header option when getting files from both FTP and HTTP, and it\n"<pos:position pos:line="1382" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1383" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1383" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1384" pos:column="2">puts<pos:position pos:line="1384" pos:column="6"/></name><argument_list pos:line="1384" pos:column="6">(
<argument><expr><literal type="string" pos:line="1385" pos:column="1">"  will then store the headers in the specified file.\n"<pos:position pos:line="1385" pos:column="57"/></literal>
<literal type="string" pos:line="1386" pos:column="1">"\n"<pos:position pos:line="1386" pos:column="5"/></literal>
<literal type="string" pos:line="1387" pos:column="1">"  Store the HTTP headers in a separate file (headers.txt in the example):\n"<pos:position pos:line="1387" pos:column="78"/></literal>
<literal type="string" pos:line="1388" pos:column="1">"\n"<pos:position pos:line="1388" pos:column="5"/></literal>
<literal type="string" pos:line="1389" pos:column="1">"        curl --dump-header headers.txt curl.haxx.se\n"<pos:position pos:line="1389" pos:column="56"/></literal>
<literal type="string" pos:line="1390" pos:column="1">"\n"<pos:position pos:line="1390" pos:column="5"/></literal>
<literal type="string" pos:line="1391" pos:column="1">"  Note that headers stored in a separate file can be very useful at a later\n"<pos:position pos:line="1391" pos:column="80"/></literal>
<literal type="string" pos:line="1392" pos:column="1">"  time if you want curl to use cookies sent by the server. More about that in\n"<pos:position pos:line="1392" pos:column="82"/></literal>
<literal type="string" pos:line="1393" pos:column="1">"  the cookies section.\n"<pos:position pos:line="1393" pos:column="27"/></literal>
<literal type="string" pos:line="1394" pos:column="1">"\n"<pos:position pos:line="1394" pos:column="5"/></literal>
<literal type="string" pos:line="1395" pos:column="1">"POST (HTTP)\n"<pos:position pos:line="1395" pos:column="16"/></literal>
<literal type="string" pos:line="1396" pos:column="1">"\n"<pos:position pos:line="1396" pos:column="5"/></literal>
<literal type="string" pos:line="1397" pos:column="1">"  It's easy to post data using curl. This is done using the -d &lt;data&gt;\n"<pos:position pos:line="1397" pos:column="80"/></literal>
<literal type="string" pos:line="1398" pos:column="1">"  option.  The post data must be urlencoded.\n"<pos:position pos:line="1398" pos:column="49"/></literal>
<literal type="string" pos:line="1399" pos:column="1">"\n"<pos:position pos:line="1399" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1400" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1400" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1401" pos:column="2">puts<pos:position pos:line="1401" pos:column="6"/></name><argument_list pos:line="1401" pos:column="6">(
<argument><expr><literal type="string" pos:line="1402" pos:column="1">"  Post a simple \"name\" and \"phone\" guestbook.\n"<pos:position pos:line="1402" pos:column="54"/></literal>
<literal type="string" pos:line="1403" pos:column="1">"\n"<pos:position pos:line="1403" pos:column="5"/></literal>
<literal type="string" pos:line="1404" pos:column="1">"        curl -d \"name=Rafael%20Sagula&amp;phone=3320780\" \\\n"<pos:position pos:line="1404" pos:column="66"/></literal>
<literal type="string" pos:line="1405" pos:column="1">"                http://www.where.com/guest.cgi\n"<pos:position pos:line="1405" pos:column="51"/></literal>
<literal type="string" pos:line="1406" pos:column="1">"\n"<pos:position pos:line="1406" pos:column="5"/></literal>
<literal type="string" pos:line="1407" pos:column="1">"  How to post a form with curl, lesson #1:\n"<pos:position pos:line="1407" pos:column="47"/></literal>
<literal type="string" pos:line="1408" pos:column="1">"\n"<pos:position pos:line="1408" pos:column="5"/></literal>
<literal type="string" pos:line="1409" pos:column="1">"  Dig out all the &lt;input&gt; tags in the form that you want to fill in. (There's\n"<pos:position pos:line="1409" pos:column="88"/></literal>
<literal type="string" pos:line="1410" pos:column="1">"  a perl program called formfind.pl on the curl site that helps with this).\n"<pos:position pos:line="1410" pos:column="80"/></literal>
<literal type="string" pos:line="1411" pos:column="1">"\n"<pos:position pos:line="1411" pos:column="5"/></literal>
<literal type="string" pos:line="1412" pos:column="1">"  If there's a \"normal\" post, you use -d to post. -d takes a full \"post\n"<pos:position pos:line="1412" pos:column="79"/></literal>
<literal type="string" pos:line="1413" pos:column="1">"  string\", which is in the format\n"<pos:position pos:line="1413" pos:column="39"/></literal>
<literal type="string" pos:line="1414" pos:column="1">"\n"<pos:position pos:line="1414" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1415" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1415" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1416" pos:column="2">puts<pos:position pos:line="1416" pos:column="6"/></name><argument_list pos:line="1416" pos:column="6">(
<argument><expr><literal type="string" pos:line="1417" pos:column="1">"        &lt;variable1&gt;=&lt;data1&gt;&amp;&lt;variable2&gt;=&lt;data2&gt;&amp;...\n"<pos:position pos:line="1417" pos:column="88"/></literal>
<literal type="string" pos:line="1418" pos:column="1">"\n"<pos:position pos:line="1418" pos:column="5"/></literal>
<literal type="string" pos:line="1419" pos:column="1">"  The 'variable' names are the names set with \"name=\" in the &lt;input&gt; tags, and\n"<pos:position pos:line="1419" pos:column="91"/></literal>
<literal type="string" pos:line="1420" pos:column="1">"  the data is the contents you want to fill in for the inputs. The data *must*\n"<pos:position pos:line="1420" pos:column="83"/></literal>
<literal type="string" pos:line="1421" pos:column="1">"  be properly URL encoded. That means you replace space with + and that you\n"<pos:position pos:line="1421" pos:column="80"/></literal>
<literal type="string" pos:line="1422" pos:column="1">"  write weird letters with %XX where XX is the hexadecimal representation of\n"<pos:position pos:line="1422" pos:column="81"/></literal>
<literal type="string" pos:line="1423" pos:column="1">"  the letter's ASCII code.\n"<pos:position pos:line="1423" pos:column="31"/></literal>
<literal type="string" pos:line="1424" pos:column="1">"\n"<pos:position pos:line="1424" pos:column="5"/></literal>
<literal type="string" pos:line="1425" pos:column="1">"  Example:\n"<pos:position pos:line="1425" pos:column="15"/></literal>
<literal type="string" pos:line="1426" pos:column="1">"\n"<pos:position pos:line="1426" pos:column="5"/></literal>
<literal type="string" pos:line="1427" pos:column="1">"  (page located at http://www.formpost.com/getthis/\n"<pos:position pos:line="1427" pos:column="56"/></literal>
<literal type="string" pos:line="1428" pos:column="1">"\n"<pos:position pos:line="1428" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1429" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1429" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1430" pos:column="2">puts<pos:position pos:line="1430" pos:column="6"/></name><argument_list pos:line="1430" pos:column="6">(
<argument><expr><literal type="string" pos:line="1431" pos:column="1">"        &lt;form action=\"post.cgi\" method=\"post\"&gt;\n"<pos:position pos:line="1431" pos:column="61"/></literal>
<literal type="string" pos:line="1432" pos:column="1">"        &lt;input name=user size=10&gt;\n"<pos:position pos:line="1432" pos:column="44"/></literal>
<literal type="string" pos:line="1433" pos:column="1">"        &lt;input name=pass type=password size=10&gt;\n"<pos:position pos:line="1433" pos:column="58"/></literal>
<literal type="string" pos:line="1434" pos:column="1">"        &lt;input name=id type=hidden value=\"blablabla\"&gt;\n"<pos:position pos:line="1434" pos:column="66"/></literal>
<literal type="string" pos:line="1435" pos:column="1">"        &lt;input name=ding value=\"submit\"&gt;\n"<pos:position pos:line="1435" pos:column="53"/></literal>
<literal type="string" pos:line="1436" pos:column="1">"        &lt;/form&gt;\n"<pos:position pos:line="1436" pos:column="26"/></literal>
<literal type="string" pos:line="1437" pos:column="1">"\n"<pos:position pos:line="1437" pos:column="5"/></literal>
<literal type="string" pos:line="1438" pos:column="1">"  We want to enter user 'foobar' with password '12345'.\n"<pos:position pos:line="1438" pos:column="60"/></literal>
<literal type="string" pos:line="1439" pos:column="1">"\n"<pos:position pos:line="1439" pos:column="5"/></literal>
<literal type="string" pos:line="1440" pos:column="1">"  To post to this, you enter a curl command line like:\n"<pos:position pos:line="1440" pos:column="59"/></literal>
<literal type="string" pos:line="1441" pos:column="1">"\n"<pos:position pos:line="1441" pos:column="5"/></literal>
<literal type="string" pos:line="1442" pos:column="1">"        curl -d \"user=foobar&amp;pass=12345&amp;id=blablabla&amp;dig=submit\"  (continues)\n"<pos:position pos:line="1442" pos:column="96"/></literal>
<literal type="string" pos:line="1443" pos:column="1">"          http://www.formpost.com/getthis/post.cgi\n"<pos:position pos:line="1443" pos:column="55"/></literal>
<literal type="string" pos:line="1444" pos:column="1">"\n"<pos:position pos:line="1444" pos:column="5"/></literal>
<literal type="string" pos:line="1445" pos:column="1">"\n"<pos:position pos:line="1445" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1446" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1446" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1447" pos:column="2">puts<pos:position pos:line="1447" pos:column="6"/></name><argument_list pos:line="1447" pos:column="6">(
<argument><expr><literal type="string" pos:line="1448" pos:column="1">"  While -d uses the application/x-www-form-urlencoded mime-type, generally\n"<pos:position pos:line="1448" pos:column="79"/></literal>
<literal type="string" pos:line="1449" pos:column="1">"  understood by CGI's and similar, curl also supports the more capable\n"<pos:position pos:line="1449" pos:column="75"/></literal>
<literal type="string" pos:line="1450" pos:column="1">"  multipart/form-data type. This latter type supports things like file upload.\n"<pos:position pos:line="1450" pos:column="83"/></literal>
<literal type="string" pos:line="1451" pos:column="1">"\n"<pos:position pos:line="1451" pos:column="5"/></literal>
<literal type="string" pos:line="1452" pos:column="1">"  -F accepts parameters like -F \"name=contents\". If you want the contents to\n"<pos:position pos:line="1452" pos:column="83"/></literal>
<literal type="string" pos:line="1453" pos:column="1">"  be read from a file, use &lt;@filename&gt; as contents. When specifying a file,\n"<pos:position pos:line="1453" pos:column="86"/></literal>
<literal type="string" pos:line="1454" pos:column="1">"  you can also specify the file content type by appending ';type=&lt;mime type&gt;'\n"<pos:position pos:line="1454" pos:column="88"/></literal></expr></argument>
)<pos:position pos:line="1455" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1455" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1456" pos:column="2">puts<pos:position pos:line="1456" pos:column="6"/></name><argument_list pos:line="1456" pos:column="6">(
<argument><expr><literal type="string" pos:line="1457" pos:column="1">"  to the file name. You can also post the contents of several files in one field.\n"<pos:position pos:line="1457" pos:column="86"/></literal>
<literal type="string" pos:line="1458" pos:column="1">"  For example, the field name 'coolfiles' is used to send three  files, with\n"<pos:position pos:line="1458" pos:column="81"/></literal>
<literal type="string" pos:line="1459" pos:column="1">"  different content types using the following syntax:\n"<pos:position pos:line="1459" pos:column="58"/></literal>
<literal type="string" pos:line="1460" pos:column="1">"\n"<pos:position pos:line="1460" pos:column="5"/></literal>
<literal type="string" pos:line="1461" pos:column="1">"        curl -F \"coolfiles=@fil1.gif;type=image/gif,fil2.txt,fil3.html\" \\\n"<pos:position pos:line="1461" pos:column="81"/></literal>
<literal type="string" pos:line="1462" pos:column="1">"        http://www.post.com/postit.cgi\n"<pos:position pos:line="1462" pos:column="43"/></literal>
<literal type="string" pos:line="1463" pos:column="1">"\n"<pos:position pos:line="1463" pos:column="5"/></literal>
<literal type="string" pos:line="1464" pos:column="1">"  If the content-type is not specified, curl will try to guess from the file\n"<pos:position pos:line="1464" pos:column="81"/></literal>
<literal type="string" pos:line="1465" pos:column="1">"  extension  (it only knows a few), or use the previously specified type\n"<pos:position pos:line="1465" pos:column="77"/></literal></expr></argument>
)<pos:position pos:line="1466" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1466" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1467" pos:column="2">puts<pos:position pos:line="1467" pos:column="6"/></name><argument_list pos:line="1467" pos:column="6">(
<argument><expr><literal type="string" pos:line="1468" pos:column="1">"  (from an earlier file if several files are specified in a list) or else it\n"<pos:position pos:line="1468" pos:column="81"/></literal>
<literal type="string" pos:line="1469" pos:column="1">"  will  using the default type 'text/plain'.\n"<pos:position pos:line="1469" pos:column="49"/></literal>
<literal type="string" pos:line="1470" pos:column="1">"\n"<pos:position pos:line="1470" pos:column="5"/></literal>
<literal type="string" pos:line="1471" pos:column="1">"  Emulate a fill-in form with -F. Let's say you fill in three fields in a\n"<pos:position pos:line="1471" pos:column="78"/></literal>
<literal type="string" pos:line="1472" pos:column="1">"  form. One field is a file name which to post, one field is your name and one\n"<pos:position pos:line="1472" pos:column="83"/></literal>
<literal type="string" pos:line="1473" pos:column="1">"  field is a file description. We want to post the file we have written named\n"<pos:position pos:line="1473" pos:column="82"/></literal>
<literal type="string" pos:line="1474" pos:column="1">"  \"cooltext.txt\". To let curl do the posting of this data instead of your\n"<pos:position pos:line="1474" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1475" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1475" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1476" pos:column="2">puts<pos:position pos:line="1476" pos:column="6"/></name><argument_list pos:line="1476" pos:column="6">(
<argument><expr><literal type="string" pos:line="1477" pos:column="1">"  favourite browser, you have to read the HTML source of the form page and find\n"<pos:position pos:line="1477" pos:column="84"/></literal>
<literal type="string" pos:line="1478" pos:column="1">"  the names of the input fields. In our example, the input field names are\n"<pos:position pos:line="1478" pos:column="79"/></literal>
<literal type="string" pos:line="1479" pos:column="1">"  'file', 'yourname' and 'filedescription'.\n"<pos:position pos:line="1479" pos:column="48"/></literal>
<literal type="string" pos:line="1480" pos:column="1">"\n"<pos:position pos:line="1480" pos:column="5"/></literal>
<literal type="string" pos:line="1481" pos:column="1">"        curl -F \"file=@cooltext.txt\" -F \"yourname=Daniel\" \\\n"<pos:position pos:line="1481" pos:column="69"/></literal>
<literal type="string" pos:line="1482" pos:column="1">"             -F \"filedescription=Cool text file with cool text inside\" \\\n"<pos:position pos:line="1482" pos:column="80"/></literal>
<literal type="string" pos:line="1483" pos:column="1">"             http://www.post.com/postit.cgi\n"<pos:position pos:line="1483" pos:column="48"/></literal>
<literal type="string" pos:line="1484" pos:column="1">"\n"<pos:position pos:line="1484" pos:column="5"/></literal>
<literal type="string" pos:line="1485" pos:column="1">"  To send two files in one post you can do it in two ways:\n"<pos:position pos:line="1485" pos:column="63"/></literal>
<literal type="string" pos:line="1486" pos:column="1">"\n"<pos:position pos:line="1486" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1487" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1487" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1488" pos:column="2">puts<pos:position pos:line="1488" pos:column="6"/></name><argument_list pos:line="1488" pos:column="6">(
<argument><expr><literal type="string" pos:line="1489" pos:column="1">"  1. Send multiple files in a single \"field\" with a single field name:\n"<pos:position pos:line="1489" pos:column="77"/></literal>
<literal type="string" pos:line="1490" pos:column="1">" \n"<pos:position pos:line="1490" pos:column="6"/></literal>
<literal type="string" pos:line="1491" pos:column="1">"        curl -F \"pictures=@dog.gif,cat.gif\" \n"<pos:position pos:line="1491" pos:column="51"/></literal>
<literal type="string" pos:line="1492" pos:column="1">" \n"<pos:position pos:line="1492" pos:column="6"/></literal>
<literal type="string" pos:line="1493" pos:column="1">"  2. Send two fields with two field names: \n"<pos:position pos:line="1493" pos:column="48"/></literal>
<literal type="string" pos:line="1494" pos:column="1">"\n"<pos:position pos:line="1494" pos:column="5"/></literal>
<literal type="string" pos:line="1495" pos:column="1">"        curl -F \"docpicture=@dog.gif\" -F \"catpicture=@cat.gif\" \n"<pos:position pos:line="1495" pos:column="72"/></literal>
<literal type="string" pos:line="1496" pos:column="1">"\n"<pos:position pos:line="1496" pos:column="5"/></literal>
<literal type="string" pos:line="1497" pos:column="1">"REFERRER\n"<pos:position pos:line="1497" pos:column="13"/></literal>
<literal type="string" pos:line="1498" pos:column="1">"\n"<pos:position pos:line="1498" pos:column="5"/></literal>
<literal type="string" pos:line="1499" pos:column="1">"  A HTTP request has the option to include information about which address\n"<pos:position pos:line="1499" pos:column="79"/></literal>
<literal type="string" pos:line="1500" pos:column="1">"  that referred to actual page.  Curl allows you to specify the\n"<pos:position pos:line="1500" pos:column="68"/></literal>
<literal type="string" pos:line="1501" pos:column="1">"  referrer to be used on the command line. It is especially useful to\n"<pos:position pos:line="1501" pos:column="74"/></literal></expr></argument>
)<pos:position pos:line="1502" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1502" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1503" pos:column="2">puts<pos:position pos:line="1503" pos:column="6"/></name><argument_list pos:line="1503" pos:column="6">(
<argument><expr><literal type="string" pos:line="1504" pos:column="1">"  fool or trick stupid servers or CGI scripts that rely on that information\n"<pos:position pos:line="1504" pos:column="80"/></literal>
<literal type="string" pos:line="1505" pos:column="1">"  being available or contain certain data.\n"<pos:position pos:line="1505" pos:column="47"/></literal>
<literal type="string" pos:line="1506" pos:column="1">"\n"<pos:position pos:line="1506" pos:column="5"/></literal>
<literal type="string" pos:line="1507" pos:column="1">"        curl -e www.coolsite.com http://www.showme.com/\n"<pos:position pos:line="1507" pos:column="60"/></literal>
<literal type="string" pos:line="1508" pos:column="1">"\n"<pos:position pos:line="1508" pos:column="5"/></literal>
<literal type="string" pos:line="1509" pos:column="1">"  NOTE: The referer field is defined in the HTTP spec to be a full URL.\n"<pos:position pos:line="1509" pos:column="76"/></literal>
<literal type="string" pos:line="1510" pos:column="1">"\n"<pos:position pos:line="1510" pos:column="5"/></literal>
<literal type="string" pos:line="1511" pos:column="1">"USER AGENT\n"<pos:position pos:line="1511" pos:column="15"/></literal>
<literal type="string" pos:line="1512" pos:column="1">"\n"<pos:position pos:line="1512" pos:column="5"/></literal>
<literal type="string" pos:line="1513" pos:column="1">"  A HTTP request has the option to include information about the browser\n"<pos:position pos:line="1513" pos:column="77"/></literal>
<literal type="string" pos:line="1514" pos:column="1">"  that generated the request. Curl allows it to be specified on the command\n"<pos:position pos:line="1514" pos:column="80"/></literal>
<literal type="string" pos:line="1515" pos:column="1">"  line. It is especially useful to fool or trick stupid servers or CGI\n"<pos:position pos:line="1515" pos:column="75"/></literal></expr></argument>
)<pos:position pos:line="1516" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1516" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1517" pos:column="2">puts<pos:position pos:line="1517" pos:column="6"/></name><argument_list pos:line="1517" pos:column="6">(
<argument><expr><literal type="string" pos:line="1518" pos:column="1">"  scripts that only accept certain browsers.\n"<pos:position pos:line="1518" pos:column="49"/></literal>
<literal type="string" pos:line="1519" pos:column="1">"\n"<pos:position pos:line="1519" pos:column="5"/></literal>
<literal type="string" pos:line="1520" pos:column="1">"  Example:\n"<pos:position pos:line="1520" pos:column="15"/></literal>
<literal type="string" pos:line="1521" pos:column="1">"\n"<pos:position pos:line="1521" pos:column="5"/></literal>
<literal type="string" pos:line="1522" pos:column="1">"  curl -A 'Mozilla/3.0 (Win95; I)' http://www.nationsbank.com/\n"<pos:position pos:line="1522" pos:column="67"/></literal>
<literal type="string" pos:line="1523" pos:column="1">"\n"<pos:position pos:line="1523" pos:column="5"/></literal>
<literal type="string" pos:line="1524" pos:column="1">"  Other common strings:\n"<pos:position pos:line="1524" pos:column="28"/></literal>
<literal type="string" pos:line="1525" pos:column="1">"    'Mozilla/3.0 (Win95; I)'     Netscape Version 3 for Windows 95\n"<pos:position pos:line="1525" pos:column="71"/></literal>
<literal type="string" pos:line="1526" pos:column="1">"    'Mozilla/3.04 (Win95; U)'    Netscape Version 3 for Windows 95\n"<pos:position pos:line="1526" pos:column="71"/></literal>
<literal type="string" pos:line="1527" pos:column="1">"    'Mozilla/2.02 (OS/2; U)'     Netscape Version 2 for OS/2\n"<pos:position pos:line="1527" pos:column="65"/></literal>
<literal type="string" pos:line="1528" pos:column="1">"    'Mozilla/4.04 [en] (X11; U; AIX 4.2; Nav)'           NS for AIX\n"<pos:position pos:line="1528" pos:column="72"/></literal>
<literal type="string" pos:line="1529" pos:column="1">"    'Mozilla/4.05 [en] (X11; U; Linux 2.0.32 i586)'      NS for Linux\n"<pos:position pos:line="1529" pos:column="74"/></literal>
<literal type="string" pos:line="1530" pos:column="1">"\n"<pos:position pos:line="1530" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1531" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1531" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1532" pos:column="2">puts<pos:position pos:line="1532" pos:column="6"/></name><argument_list pos:line="1532" pos:column="6">(
<argument><expr><literal type="string" pos:line="1533" pos:column="1">"  Note that Internet Explorer tries hard to be compatible in every way:\n"<pos:position pos:line="1533" pos:column="76"/></literal>
<literal type="string" pos:line="1534" pos:column="1">"    'Mozilla/4.0 (compatible; MSIE 4.01; Windows 95)'    MSIE for W95\n"<pos:position pos:line="1534" pos:column="74"/></literal>
<literal type="string" pos:line="1535" pos:column="1">"\n"<pos:position pos:line="1535" pos:column="5"/></literal>
<literal type="string" pos:line="1536" pos:column="1">"  Mozilla is not the only possible User-Agent name:\n"<pos:position pos:line="1536" pos:column="56"/></literal>
<literal type="string" pos:line="1537" pos:column="1">"    'Konqueror/1.0'             KDE File Manager desktop client\n"<pos:position pos:line="1537" pos:column="68"/></literal>
<literal type="string" pos:line="1538" pos:column="1">"    'Lynx/2.7.1 libwww-FM/2.14' Lynx command line browser\n"<pos:position pos:line="1538" pos:column="62"/></literal>
<literal type="string" pos:line="1539" pos:column="1">"\n"<pos:position pos:line="1539" pos:column="5"/></literal>
<literal type="string" pos:line="1540" pos:column="1">"COOKIES\n"<pos:position pos:line="1540" pos:column="12"/></literal>
<literal type="string" pos:line="1541" pos:column="1">"\n"<pos:position pos:line="1541" pos:column="5"/></literal>
<literal type="string" pos:line="1542" pos:column="1">"  Cookies are generally used by web servers to keep state information at the\n"<pos:position pos:line="1542" pos:column="81"/></literal>
<literal type="string" pos:line="1543" pos:column="1">"  client's side. The server sets cookies by sending a response line in the\n"<pos:position pos:line="1543" pos:column="79"/></literal></expr></argument>
)<pos:position pos:line="1544" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1544" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1545" pos:column="2">puts<pos:position pos:line="1545" pos:column="6"/></name><argument_list pos:line="1545" pos:column="6">(
<argument><expr><literal type="string" pos:line="1546" pos:column="1">"  headers that looks like 'Set-Cookie: &lt;data&gt;' where the data part then\n"<pos:position pos:line="1546" pos:column="82"/></literal>
<literal type="string" pos:line="1547" pos:column="1">"  typically contains a set of NAME=VALUE pairs (separated by semicolons ';'\n"<pos:position pos:line="1547" pos:column="80"/></literal>
<literal type="string" pos:line="1548" pos:column="1">"  like \"NAME1=VALUE1; NAME2=VALUE2;\"). The server can also specify for what\n"<pos:position pos:line="1548" pos:column="82"/></literal>
<literal type="string" pos:line="1549" pos:column="1">"  path the \"cookie\" should be used for (by specifying \"path=value\"), when the\n"<pos:position pos:line="1549" pos:column="86"/></literal>
<literal type="string" pos:line="1550" pos:column="1">"  cookie should expire (\"expire=DATE\"), for what domain to use it\n"<pos:position pos:line="1550" pos:column="72"/></literal>
<literal type="string" pos:line="1551" pos:column="1">"  (\"domain=NAME\") and if it should be used on secure connections only\n"<pos:position pos:line="1551" pos:column="76"/></literal>
<literal type="string" pos:line="1552" pos:column="1">"  (\"secure\").\n"<pos:position pos:line="1552" pos:column="20"/></literal>
<literal type="string" pos:line="1553" pos:column="1">"\n"<pos:position pos:line="1553" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1554" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1554" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1555" pos:column="2">puts<pos:position pos:line="1555" pos:column="6"/></name><argument_list pos:line="1555" pos:column="6">(
<argument><expr><literal type="string" pos:line="1556" pos:column="1">"  If you've received a page from a server that contains a header like:\n"<pos:position pos:line="1556" pos:column="75"/></literal>
<literal type="string" pos:line="1557" pos:column="1">"        Set-Cookie: sessionid=boo123; path=\"/foo\";\n"<pos:position pos:line="1557" pos:column="57"/></literal>
<literal type="string" pos:line="1558" pos:column="1">"\n"<pos:position pos:line="1558" pos:column="5"/></literal>
<literal type="string" pos:line="1559" pos:column="1">"  it means the server wants that first pair passed on when we get anything in\n"<pos:position pos:line="1559" pos:column="82"/></literal>
<literal type="string" pos:line="1560" pos:column="1">"  a path beginning with \"/foo\".\n"<pos:position pos:line="1560" pos:column="38"/></literal>
<literal type="string" pos:line="1561" pos:column="1">"\n"<pos:position pos:line="1561" pos:column="5"/></literal>
<literal type="string" pos:line="1562" pos:column="1">"  Example, get a page that wants my name passed in a cookie:\n"<pos:position pos:line="1562" pos:column="65"/></literal>
<literal type="string" pos:line="1563" pos:column="1">"\n"<pos:position pos:line="1563" pos:column="5"/></literal>
<literal type="string" pos:line="1564" pos:column="1">"        curl -b \"name=Daniel\" www.sillypage.com\n"<pos:position pos:line="1564" pos:column="54"/></literal>
<literal type="string" pos:line="1565" pos:column="1">"\n"<pos:position pos:line="1565" pos:column="5"/></literal>
<literal type="string" pos:line="1566" pos:column="1">"  Curl also has the ability to use previously received cookies in following\n"<pos:position pos:line="1566" pos:column="80"/></literal>
<literal type="string" pos:line="1567" pos:column="1">"  sessions. If you get cookies from a server and store them in a file in a\n"<pos:position pos:line="1567" pos:column="79"/></literal></expr></argument>
)<pos:position pos:line="1568" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1568" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1569" pos:column="2">puts<pos:position pos:line="1569" pos:column="6"/></name><argument_list pos:line="1569" pos:column="6">(
<argument><expr><literal type="string" pos:line="1570" pos:column="1">"  manner similar to:\n"<pos:position pos:line="1570" pos:column="25"/></literal>
<literal type="string" pos:line="1571" pos:column="1">"\n"<pos:position pos:line="1571" pos:column="5"/></literal>
<literal type="string" pos:line="1572" pos:column="1">"        curl --dump-header headers www.example.com\n"<pos:position pos:line="1572" pos:column="55"/></literal>
<literal type="string" pos:line="1573" pos:column="1">"\n"<pos:position pos:line="1573" pos:column="5"/></literal>
<literal type="string" pos:line="1574" pos:column="1">"  ... you can then in a second connect to that (or another) site, use the\n"<pos:position pos:line="1574" pos:column="78"/></literal>
<literal type="string" pos:line="1575" pos:column="1">"  cookies from the 'headers' file like:\n"<pos:position pos:line="1575" pos:column="44"/></literal>
<literal type="string" pos:line="1576" pos:column="1">"\n"<pos:position pos:line="1576" pos:column="5"/></literal>
<literal type="string" pos:line="1577" pos:column="1">"        curl -b headers www.example.com\n"<pos:position pos:line="1577" pos:column="44"/></literal>
<literal type="string" pos:line="1578" pos:column="1">"\n"<pos:position pos:line="1578" pos:column="5"/></literal>
<literal type="string" pos:line="1579" pos:column="1">"  Note that by specifying -b you enable the \"cookie awareness\" and with -L\n"<pos:position pos:line="1579" pos:column="81"/></literal>
<literal type="string" pos:line="1580" pos:column="1">"  you can make curl follow a location: (which often is used in combination\n"<pos:position pos:line="1580" pos:column="79"/></literal>
<literal type="string" pos:line="1581" pos:column="1">"  with cookies). So that if a site sends cookies and a location, you can\n"<pos:position pos:line="1581" pos:column="77"/></literal></expr></argument>
)<pos:position pos:line="1582" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1582" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1583" pos:column="2">puts<pos:position pos:line="1583" pos:column="6"/></name><argument_list pos:line="1583" pos:column="6">(
<argument><expr><literal type="string" pos:line="1584" pos:column="1">"  use a non-existing file to trigger the cookie awareness like:\n"<pos:position pos:line="1584" pos:column="68"/></literal>
<literal type="string" pos:line="1585" pos:column="1">"\n"<pos:position pos:line="1585" pos:column="5"/></literal>
<literal type="string" pos:line="1586" pos:column="1">"        curl -L -b empty.txt www.example.com\n"<pos:position pos:line="1586" pos:column="49"/></literal>
<literal type="string" pos:line="1587" pos:column="1">"\n"<pos:position pos:line="1587" pos:column="5"/></literal>
<literal type="string" pos:line="1588" pos:column="1">"  The file to read cookies from must be formatted using plain HTTP headers OR\n"<pos:position pos:line="1588" pos:column="82"/></literal>
<literal type="string" pos:line="1589" pos:column="1">"  as netscape's cookie file. Curl will determine what kind it is based on the\n"<pos:position pos:line="1589" pos:column="82"/></literal>
<literal type="string" pos:line="1590" pos:column="1">"  file contents.  In the above command, curl will parse the header and store\n"<pos:position pos:line="1590" pos:column="81"/></literal>
<literal type="string" pos:line="1591" pos:column="1">"  the cookies received from www.example.com.  curl will send to the server the\n"<pos:position pos:line="1591" pos:column="83"/></literal>
<literal type="string" pos:line="1592" pos:column="1">"  stored cookies which match the request as it follows the location.  The\n"<pos:position pos:line="1592" pos:column="78"/></literal></expr></argument>
)<pos:position pos:line="1593" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1593" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1594" pos:column="2">puts<pos:position pos:line="1594" pos:column="6"/></name><argument_list pos:line="1594" pos:column="6">(
<argument><expr><literal type="string" pos:line="1595" pos:column="1">"  file \"empty.txt\" may be a non-existant file.\n"<pos:position pos:line="1595" pos:column="53"/></literal>
<literal type="string" pos:line="1596" pos:column="1">"  \n"<pos:position pos:line="1596" pos:column="7"/></literal>
<literal type="string" pos:line="1597" pos:column="1">"\n"<pos:position pos:line="1597" pos:column="5"/></literal>
<literal type="string" pos:line="1598" pos:column="1">"PROGRESS METER\n"<pos:position pos:line="1598" pos:column="19"/></literal>
<literal type="string" pos:line="1599" pos:column="1">"\n"<pos:position pos:line="1599" pos:column="5"/></literal>
<literal type="string" pos:line="1600" pos:column="1">"  The progress meter exists to show a user that something actually is\n"<pos:position pos:line="1600" pos:column="74"/></literal>
<literal type="string" pos:line="1601" pos:column="1">"  happening. The different fields in the output have the following meaning:\n"<pos:position pos:line="1601" pos:column="80"/></literal>
<literal type="string" pos:line="1602" pos:column="1">"\n"<pos:position pos:line="1602" pos:column="5"/></literal>
<literal type="string" pos:line="1603" pos:column="1">"  % Total    % Received % Xferd  Average Speed          Time             Curr.\n"<pos:position pos:line="1603" pos:column="83"/></literal>
<literal type="string" pos:line="1604" pos:column="1">"                                 Dload  Upload Total    Current  Left    Speed\n"<pos:position pos:line="1604" pos:column="83"/></literal>
<literal type="string" pos:line="1605" pos:column="1">"  0  151M    0 38608    0     0   9406      0  4:41:43  0:00:04  4:41:39  9287\n"<pos:position pos:line="1605" pos:column="83"/></literal>
<literal type="string" pos:line="1606" pos:column="1">"\n"<pos:position pos:line="1606" pos:column="5"/></literal>
<literal type="string" pos:line="1607" pos:column="1">"  From left-to-right:\n"<pos:position pos:line="1607" pos:column="26"/></literal></expr></argument>
)<pos:position pos:line="1608" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1608" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1609" pos:column="2">puts<pos:position pos:line="1609" pos:column="6"/></name><argument_list pos:line="1609" pos:column="6">(
<argument><expr><literal type="string" pos:line="1610" pos:column="1">"   %             - percentage completed of the whole transfer\n"<pos:position pos:line="1610" pos:column="66"/></literal>
<literal type="string" pos:line="1611" pos:column="1">"   Total         - total size of the whole expected transfer\n"<pos:position pos:line="1611" pos:column="65"/></literal>
<literal type="string" pos:line="1612" pos:column="1">"   %             - percentage completed of the download\n"<pos:position pos:line="1612" pos:column="60"/></literal>
<literal type="string" pos:line="1613" pos:column="1">"   Received      - currently downloaded amount of bytes\n"<pos:position pos:line="1613" pos:column="60"/></literal>
<literal type="string" pos:line="1614" pos:column="1">"   %             - percentage completed of the upload\n"<pos:position pos:line="1614" pos:column="58"/></literal>
<literal type="string" pos:line="1615" pos:column="1">"   Xferd         - currently uploaded amount of bytes\n"<pos:position pos:line="1615" pos:column="58"/></literal>
<literal type="string" pos:line="1616" pos:column="1">"   Average Speed\n"<pos:position pos:line="1616" pos:column="21"/></literal>
<literal type="string" pos:line="1617" pos:column="1">"   Dload         - the average transfer speed of the download\n"<pos:position pos:line="1617" pos:column="66"/></literal>
<literal type="string" pos:line="1618" pos:column="1">"   Average Speed\n"<pos:position pos:line="1618" pos:column="21"/></literal>
<literal type="string" pos:line="1619" pos:column="1">"   Upload        - the average transfer speed of the upload\n"<pos:position pos:line="1619" pos:column="64"/></literal></expr></argument>
)<pos:position pos:line="1620" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1620" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1621" pos:column="2">puts<pos:position pos:line="1621" pos:column="6"/></name><argument_list pos:line="1621" pos:column="6">(
<argument><expr><literal type="string" pos:line="1622" pos:column="1">"   Time Total    - expected time to complete the operation\n"<pos:position pos:line="1622" pos:column="63"/></literal>
<literal type="string" pos:line="1623" pos:column="1">"   Time Current  - time passed since the invoke\n"<pos:position pos:line="1623" pos:column="52"/></literal>
<literal type="string" pos:line="1624" pos:column="1">"   Time Left     - expected time left to completetion\n"<pos:position pos:line="1624" pos:column="58"/></literal>
<literal type="string" pos:line="1625" pos:column="1">"   Curr.Speed    - the average transfer speed the last 5 seconds (the first\n"<pos:position pos:line="1625" pos:column="80"/></literal>
<literal type="string" pos:line="1626" pos:column="1">"                   5 seconds of a transfer is based on less time of course.)\n"<pos:position pos:line="1626" pos:column="81"/></literal>
<literal type="string" pos:line="1627" pos:column="1">"\n"<pos:position pos:line="1627" pos:column="5"/></literal>
<literal type="string" pos:line="1628" pos:column="1">"  The -# option will display a totally different progress bar that doesn't\n"<pos:position pos:line="1628" pos:column="79"/></literal>
<literal type="string" pos:line="1629" pos:column="1">"  need much explanation!\n"<pos:position pos:line="1629" pos:column="29"/></literal>
<literal type="string" pos:line="1630" pos:column="1">"\n"<pos:position pos:line="1630" pos:column="5"/></literal>
<literal type="string" pos:line="1631" pos:column="1">"SPEED LIMIT\n"<pos:position pos:line="1631" pos:column="16"/></literal>
<literal type="string" pos:line="1632" pos:column="1">"\n"<pos:position pos:line="1632" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1633" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1633" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1634" pos:column="2">puts<pos:position pos:line="1634" pos:column="6"/></name><argument_list pos:line="1634" pos:column="6">(
<argument><expr><literal type="string" pos:line="1635" pos:column="1">"  Curl allows the user to set the transfer speed conditions that must be met\n"<pos:position pos:line="1635" pos:column="81"/></literal>
<literal type="string" pos:line="1636" pos:column="1">"  to let the transfer keep going. By using the switch -y and -Y you\n"<pos:position pos:line="1636" pos:column="72"/></literal>
<literal type="string" pos:line="1637" pos:column="1">"  can make curl abort transfers if the transfer speed is below the specified\n"<pos:position pos:line="1637" pos:column="81"/></literal>
<literal type="string" pos:line="1638" pos:column="1">"  lowest limit for a specified time.\n"<pos:position pos:line="1638" pos:column="41"/></literal>
<literal type="string" pos:line="1639" pos:column="1">"\n"<pos:position pos:line="1639" pos:column="5"/></literal>
<literal type="string" pos:line="1640" pos:column="1">"  To have curl abort the download if the speed is slower than 3000 bytes per\n"<pos:position pos:line="1640" pos:column="81"/></literal>
<literal type="string" pos:line="1641" pos:column="1">"  second for 1 minute, run:\n"<pos:position pos:line="1641" pos:column="32"/></literal>
<literal type="string" pos:line="1642" pos:column="1">"\n"<pos:position pos:line="1642" pos:column="5"/></literal>
<literal type="string" pos:line="1643" pos:column="1">"        curl -y 3000 -Y 60 www.far-away-site.com\n"<pos:position pos:line="1643" pos:column="53"/></literal>
<literal type="string" pos:line="1644" pos:column="1">"\n"<pos:position pos:line="1644" pos:column="5"/></literal>
<literal type="string" pos:line="1645" pos:column="1">"  This can very well be used in combination with the overall time limit, so\n"<pos:position pos:line="1645" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1646" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1646" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1647" pos:column="2">puts<pos:position pos:line="1647" pos:column="6"/></name><argument_list pos:line="1647" pos:column="6">(
<argument><expr><literal type="string" pos:line="1648" pos:column="1">"  that the above operatioin must be completed in whole within 30 minutes:\n"<pos:position pos:line="1648" pos:column="78"/></literal>
<literal type="string" pos:line="1649" pos:column="1">"\n"<pos:position pos:line="1649" pos:column="5"/></literal>
<literal type="string" pos:line="1650" pos:column="1">"        curl -m 1800 -y 3000 -Y 60 www.far-away-site.com\n"<pos:position pos:line="1650" pos:column="61"/></literal>
<literal type="string" pos:line="1651" pos:column="1">"\n"<pos:position pos:line="1651" pos:column="5"/></literal>
<literal type="string" pos:line="1652" pos:column="1">"CONFIG FILE\n"<pos:position pos:line="1652" pos:column="16"/></literal>
<literal type="string" pos:line="1653" pos:column="1">"\n"<pos:position pos:line="1653" pos:column="5"/></literal>
<literal type="string" pos:line="1654" pos:column="1">"  Curl automatically tries to read the .curlrc file (or _curlrc file on win32\n"<pos:position pos:line="1654" pos:column="82"/></literal>
<literal type="string" pos:line="1655" pos:column="1">"  systems) from the user's home dir on startup.\n"<pos:position pos:line="1655" pos:column="52"/></literal>
<literal type="string" pos:line="1656" pos:column="1">"\n"<pos:position pos:line="1656" pos:column="5"/></literal>
<literal type="string" pos:line="1657" pos:column="1">"  The config file could be made up with normal command line switches, but you\n"<pos:position pos:line="1657" pos:column="82"/></literal>
<literal type="string" pos:line="1658" pos:column="1">"  can also specify the long options without the dashes to make it more\n"<pos:position pos:line="1658" pos:column="75"/></literal>
<literal type="string" pos:line="1659" pos:column="1">"  readable. You can separate the options and the parameter with spaces, or\n"<pos:position pos:line="1659" pos:column="79"/></literal></expr></argument>
)<pos:position pos:line="1660" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1660" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1661" pos:column="2">puts<pos:position pos:line="1661" pos:column="6"/></name><argument_list pos:line="1661" pos:column="6">(
<argument><expr><literal type="string" pos:line="1662" pos:column="1">"  with = or :. Comments can be used within the file. If the first letter on a\n"<pos:position pos:line="1662" pos:column="82"/></literal>
<literal type="string" pos:line="1663" pos:column="1">"  line is a '#'-letter the rest of the line is treated as a comment.\n"<pos:position pos:line="1663" pos:column="73"/></literal>
<literal type="string" pos:line="1664" pos:column="1">"\n"<pos:position pos:line="1664" pos:column="5"/></literal>
<literal type="string" pos:line="1665" pos:column="1">"  If you want the parameter to contain spaces, you must inclose the entire\n"<pos:position pos:line="1665" pos:column="79"/></literal>
<literal type="string" pos:line="1666" pos:column="1">"  parameter within double quotes (\"). Within those quotes, you specify a\n"<pos:position pos:line="1666" pos:column="78"/></literal>
<literal type="string" pos:line="1667" pos:column="1">"  quote as \\\".\n"<pos:position pos:line="1667" pos:column="21"/></literal>
<literal type="string" pos:line="1668" pos:column="1">"\n"<pos:position pos:line="1668" pos:column="5"/></literal>
<literal type="string" pos:line="1669" pos:column="1">"  NOTE: You must specify options and their arguments on the same line.\n"<pos:position pos:line="1669" pos:column="75"/></literal>
<literal type="string" pos:line="1670" pos:column="1">"\n"<pos:position pos:line="1670" pos:column="5"/></literal>
<literal type="string" pos:line="1671" pos:column="1">"  Example, set default time out and proxy in a config file:\n"<pos:position pos:line="1671" pos:column="64"/></literal>
<literal type="string" pos:line="1672" pos:column="1">"\n"<pos:position pos:line="1672" pos:column="5"/></literal>
<literal type="string" pos:line="1673" pos:column="1">"        # We want a 30 minute timeout:\n"<pos:position pos:line="1673" pos:column="43"/></literal>
<literal type="string" pos:line="1674" pos:column="1">"        -m 1800\n"<pos:position pos:line="1674" pos:column="20"/></literal></expr></argument>
)<pos:position pos:line="1675" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1675" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1676" pos:column="2">puts<pos:position pos:line="1676" pos:column="6"/></name><argument_list pos:line="1676" pos:column="6">(
<argument><expr><literal type="string" pos:line="1677" pos:column="1">"        # ... and we use a proxy for all accesses:\n"<pos:position pos:line="1677" pos:column="55"/></literal>
<literal type="string" pos:line="1678" pos:column="1">"        proxy = proxy.our.domain.com:8080\n"<pos:position pos:line="1678" pos:column="46"/></literal>
<literal type="string" pos:line="1679" pos:column="1">"\n"<pos:position pos:line="1679" pos:column="5"/></literal>
<literal type="string" pos:line="1680" pos:column="1">"  White spaces ARE significant at the end of lines, but all white spaces\n"<pos:position pos:line="1680" pos:column="77"/></literal>
<literal type="string" pos:line="1681" pos:column="1">"  leading up to the first characters of each line are ignored.\n"<pos:position pos:line="1681" pos:column="67"/></literal>
<literal type="string" pos:line="1682" pos:column="1">"\n"<pos:position pos:line="1682" pos:column="5"/></literal>
<literal type="string" pos:line="1683" pos:column="1">"  Prevent curl from reading the default file by using -q as the first command\n"<pos:position pos:line="1683" pos:column="82"/></literal>
<literal type="string" pos:line="1684" pos:column="1">"  line parameter, like:\n"<pos:position pos:line="1684" pos:column="28"/></literal>
<literal type="string" pos:line="1685" pos:column="1">"\n"<pos:position pos:line="1685" pos:column="5"/></literal>
<literal type="string" pos:line="1686" pos:column="1">"        curl -q www.thatsite.com\n"<pos:position pos:line="1686" pos:column="37"/></literal>
<literal type="string" pos:line="1687" pos:column="1">"\n"<pos:position pos:line="1687" pos:column="5"/></literal>
<literal type="string" pos:line="1688" pos:column="1">"  Force curl to get and display a local help page in case it is invoked\n"<pos:position pos:line="1688" pos:column="76"/></literal>
<literal type="string" pos:line="1689" pos:column="1">"  without URL by making a config file similar to:\n"<pos:position pos:line="1689" pos:column="54"/></literal>
<literal type="string" pos:line="1690" pos:column="1">"\n"<pos:position pos:line="1690" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1691" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1691" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1692" pos:column="2">puts<pos:position pos:line="1692" pos:column="6"/></name><argument_list pos:line="1692" pos:column="6">(
<argument><expr><literal type="string" pos:line="1693" pos:column="1">"        # default url to get\n"<pos:position pos:line="1693" pos:column="33"/></literal>
<literal type="string" pos:line="1694" pos:column="1">"        url = \"http://help.with.curl.com/curlhelp.html\"\n"<pos:position pos:line="1694" pos:column="62"/></literal>
<literal type="string" pos:line="1695" pos:column="1">"\n"<pos:position pos:line="1695" pos:column="5"/></literal>
<literal type="string" pos:line="1696" pos:column="1">"  You can specify another config file to be read by using the -K/--config\n"<pos:position pos:line="1696" pos:column="78"/></literal>
<literal type="string" pos:line="1697" pos:column="1">"  flag. If you set config file name to \"-\" it'll read the config from stdin,\n"<pos:position pos:line="1697" pos:column="83"/></literal>
<literal type="string" pos:line="1698" pos:column="1">"  which can be handy if you want to hide options from being visible in process\n"<pos:position pos:line="1698" pos:column="83"/></literal>
<literal type="string" pos:line="1699" pos:column="1">"  tables etc:\n"<pos:position pos:line="1699" pos:column="18"/></literal>
<literal type="string" pos:line="1700" pos:column="1">"\n"<pos:position pos:line="1700" pos:column="5"/></literal>
<literal type="string" pos:line="1701" pos:column="1">"        echo \"user = user:passwd\" | curl -K - http://that.secret.site.com\n"<pos:position pos:line="1701" pos:column="80"/></literal>
<literal type="string" pos:line="1702" pos:column="1">"\n"<pos:position pos:line="1702" pos:column="5"/></literal>
<literal type="string" pos:line="1703" pos:column="1">"EXTRA HEADERS\n"<pos:position pos:line="1703" pos:column="18"/></literal>
<literal type="string" pos:line="1704" pos:column="1">"\n"<pos:position pos:line="1704" pos:column="5"/></literal>
<literal type="string" pos:line="1705" pos:column="1">"  When using curl in your own very special programs, you may end up needing\n"<pos:position pos:line="1705" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1706" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1706" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1707" pos:column="2">puts<pos:position pos:line="1707" pos:column="6"/></name><argument_list pos:line="1707" pos:column="6">(
<argument><expr><literal type="string" pos:line="1708" pos:column="1">"  to pass on your own custom headers when getting a web page. You can do\n"<pos:position pos:line="1708" pos:column="77"/></literal>
<literal type="string" pos:line="1709" pos:column="1">"  this by using the -H flag.\n"<pos:position pos:line="1709" pos:column="33"/></literal>
<literal type="string" pos:line="1710" pos:column="1">"\n"<pos:position pos:line="1710" pos:column="5"/></literal>
<literal type="string" pos:line="1711" pos:column="1">"  Example, send the header \"X-you-and-me: yes\" to the server when getting a\n"<pos:position pos:line="1711" pos:column="82"/></literal>
<literal type="string" pos:line="1712" pos:column="1">"  page:\n"<pos:position pos:line="1712" pos:column="12"/></literal>
<literal type="string" pos:line="1713" pos:column="1">"\n"<pos:position pos:line="1713" pos:column="5"/></literal>
<literal type="string" pos:line="1714" pos:column="1">"        curl -H \"X-you-and-me: yes\" www.love.com\n"<pos:position pos:line="1714" pos:column="55"/></literal>
<literal type="string" pos:line="1715" pos:column="1">"\n"<pos:position pos:line="1715" pos:column="5"/></literal>
<literal type="string" pos:line="1716" pos:column="1">"  This can also be useful in case you want curl to send a different text in a\n"<pos:position pos:line="1716" pos:column="82"/></literal>
<literal type="string" pos:line="1717" pos:column="1">"  header than it normally does. The -H header you specify then replaces the\n"<pos:position pos:line="1717" pos:column="80"/></literal>
<literal type="string" pos:line="1718" pos:column="1">"  header curl would normally send. If you replace an internal header with an\n"<pos:position pos:line="1718" pos:column="81"/></literal></expr></argument>
)<pos:position pos:line="1719" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1719" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1720" pos:column="2">puts<pos:position pos:line="1720" pos:column="6"/></name><argument_list pos:line="1720" pos:column="6">(
<argument><expr><literal type="string" pos:line="1721" pos:column="1">"  empty one, you prevent that header from being sent. To prevent the Host:\n"<pos:position pos:line="1721" pos:column="79"/></literal>
<literal type="string" pos:line="1722" pos:column="1">"  header from being used:\n"<pos:position pos:line="1722" pos:column="30"/></literal>
<literal type="string" pos:line="1723" pos:column="1">"\n"<pos:position pos:line="1723" pos:column="5"/></literal>
<literal type="string" pos:line="1724" pos:column="1">"        curl -H \"Host:\" www.server.com\n"<pos:position pos:line="1724" pos:column="45"/></literal>
<literal type="string" pos:line="1725" pos:column="1">"\n"<pos:position pos:line="1725" pos:column="5"/></literal>
<literal type="string" pos:line="1726" pos:column="1">"FTP and PATH NAMES\n"<pos:position pos:line="1726" pos:column="23"/></literal>
<literal type="string" pos:line="1727" pos:column="1">"\n"<pos:position pos:line="1727" pos:column="5"/></literal>
<literal type="string" pos:line="1728" pos:column="1">"  Do note that when getting files with the ftp:// URL, the given path is\n"<pos:position pos:line="1728" pos:column="77"/></literal>
<literal type="string" pos:line="1729" pos:column="1">"  relative the directory you enter. To get the file 'README' from your home\n"<pos:position pos:line="1729" pos:column="80"/></literal>
<literal type="string" pos:line="1730" pos:column="1">"  directory at your ftp site, do:\n"<pos:position pos:line="1730" pos:column="38"/></literal>
<literal type="string" pos:line="1731" pos:column="1">"\n"<pos:position pos:line="1731" pos:column="5"/></literal>
<literal type="string" pos:line="1732" pos:column="1">"        curl ftp://user:passwd@my.site.com/README\n"<pos:position pos:line="1732" pos:column="54"/></literal>
<literal type="string" pos:line="1733" pos:column="1">"\n"<pos:position pos:line="1733" pos:column="5"/></literal>
<literal type="string" pos:line="1734" pos:column="1">"  But if you want the README file from the root directory of that very same\n"<pos:position pos:line="1734" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1735" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1735" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1736" pos:column="2">puts<pos:position pos:line="1736" pos:column="6"/></name><argument_list pos:line="1736" pos:column="6">(
<argument><expr><literal type="string" pos:line="1737" pos:column="1">"  site, you need to specify the absolute file name:\n"<pos:position pos:line="1737" pos:column="56"/></literal>
<literal type="string" pos:line="1738" pos:column="1">"\n"<pos:position pos:line="1738" pos:column="5"/></literal>
<literal type="string" pos:line="1739" pos:column="1">"        curl ftp://user:passwd@my.site.com//README\n"<pos:position pos:line="1739" pos:column="55"/></literal>
<literal type="string" pos:line="1740" pos:column="1">"\n"<pos:position pos:line="1740" pos:column="5"/></literal>
<literal type="string" pos:line="1741" pos:column="1">"  (I.e with an extra slash in front of the file name.)\n"<pos:position pos:line="1741" pos:column="59"/></literal>
<literal type="string" pos:line="1742" pos:column="1">"\n"<pos:position pos:line="1742" pos:column="5"/></literal>
<literal type="string" pos:line="1743" pos:column="1">"FTP and firewalls\n"<pos:position pos:line="1743" pos:column="22"/></literal>
<literal type="string" pos:line="1744" pos:column="1">"\n"<pos:position pos:line="1744" pos:column="5"/></literal>
<literal type="string" pos:line="1745" pos:column="1">"  The FTP protocol requires one of the involved parties to open a second\n"<pos:position pos:line="1745" pos:column="77"/></literal>
<literal type="string" pos:line="1746" pos:column="1">"  connction as soon as data is about to get transfered. There are two ways to\n"<pos:position pos:line="1746" pos:column="82"/></literal>
<literal type="string" pos:line="1747" pos:column="1">"  do this.\n"<pos:position pos:line="1747" pos:column="15"/></literal>
<literal type="string" pos:line="1748" pos:column="1">"\n"<pos:position pos:line="1748" pos:column="5"/></literal>
<literal type="string" pos:line="1749" pos:column="1">"  The default way for curl is to issue the PASV command which causes the\n"<pos:position pos:line="1749" pos:column="77"/></literal>
<literal type="string" pos:line="1750" pos:column="1">"  server to open another port and await another connection performed by the\n"<pos:position pos:line="1750" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1751" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1751" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1752" pos:column="2">puts<pos:position pos:line="1752" pos:column="6"/></name><argument_list pos:line="1752" pos:column="6">(
<argument><expr><literal type="string" pos:line="1753" pos:column="1">"  client. This is good if the client is behind a firewall that don't allow\n"<pos:position pos:line="1753" pos:column="79"/></literal>
<literal type="string" pos:line="1754" pos:column="1">"  incoming connections.\n"<pos:position pos:line="1754" pos:column="28"/></literal>
<literal type="string" pos:line="1755" pos:column="1">"\n"<pos:position pos:line="1755" pos:column="5"/></literal>
<literal type="string" pos:line="1756" pos:column="1">"        curl ftp.download.com\n"<pos:position pos:line="1756" pos:column="34"/></literal>
<literal type="string" pos:line="1757" pos:column="1">"\n"<pos:position pos:line="1757" pos:column="5"/></literal>
<literal type="string" pos:line="1758" pos:column="1">"  If the server for example, is behind a firewall that don't allow connections\n"<pos:position pos:line="1758" pos:column="83"/></literal>
<literal type="string" pos:line="1759" pos:column="1">"  on other ports than 21 (or if it just doesn't support the PASV command), the\n"<pos:position pos:line="1759" pos:column="83"/></literal>
<literal type="string" pos:line="1760" pos:column="1">"  other way to do it is to use the PORT command and instruct the server to\n"<pos:position pos:line="1760" pos:column="79"/></literal>
<literal type="string" pos:line="1761" pos:column="1">"  connect to the client on the given (as parameters to the PORT command) IP\n"<pos:position pos:line="1761" pos:column="80"/></literal>
<literal type="string" pos:line="1762" pos:column="1">"  number and port.\n"<pos:position pos:line="1762" pos:column="23"/></literal>
<literal type="string" pos:line="1763" pos:column="1">"\n"<pos:position pos:line="1763" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1764" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1764" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1765" pos:column="2">puts<pos:position pos:line="1765" pos:column="6"/></name><argument_list pos:line="1765" pos:column="6">(
<argument><expr><literal type="string" pos:line="1766" pos:column="1">"  The -P flag to curl supports a few different options. Your machine may have\n"<pos:position pos:line="1766" pos:column="82"/></literal>
<literal type="string" pos:line="1767" pos:column="1">"  several IP-addresses and/or network interfaces and curl allows you to select\n"<pos:position pos:line="1767" pos:column="83"/></literal>
<literal type="string" pos:line="1768" pos:column="1">"  which of them to use. Default address can also be used:\n"<pos:position pos:line="1768" pos:column="62"/></literal>
<literal type="string" pos:line="1769" pos:column="1">"\n"<pos:position pos:line="1769" pos:column="5"/></literal>
<literal type="string" pos:line="1770" pos:column="1">"        curl -P - ftp.download.com\n"<pos:position pos:line="1770" pos:column="39"/></literal>
<literal type="string" pos:line="1771" pos:column="1">"\n"<pos:position pos:line="1771" pos:column="5"/></literal>
<literal type="string" pos:line="1772" pos:column="1">"  Download with PORT but use the IP address of our 'le0' interface (this does\n"<pos:position pos:line="1772" pos:column="82"/></literal>
<literal type="string" pos:line="1773" pos:column="1">"  not work on windows):\n"<pos:position pos:line="1773" pos:column="28"/></literal>
<literal type="string" pos:line="1774" pos:column="1">"\n"<pos:position pos:line="1774" pos:column="5"/></literal>
<literal type="string" pos:line="1775" pos:column="1">"        curl -P le0 ftp.download.com\n"<pos:position pos:line="1775" pos:column="41"/></literal>
<literal type="string" pos:line="1776" pos:column="1">"\n"<pos:position pos:line="1776" pos:column="5"/></literal>
<literal type="string" pos:line="1777" pos:column="1">"  Download with PORT but use 192.168.0.10 as our IP address to use:\n"<pos:position pos:line="1777" pos:column="72"/></literal>
<literal type="string" pos:line="1778" pos:column="1">"\n"<pos:position pos:line="1778" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1779" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1779" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1780" pos:column="2">puts<pos:position pos:line="1780" pos:column="6"/></name><argument_list pos:line="1780" pos:column="6">(
<argument><expr><literal type="string" pos:line="1781" pos:column="1">"        curl -P 192.168.0.10 ftp.download.com\n"<pos:position pos:line="1781" pos:column="50"/></literal>
<literal type="string" pos:line="1782" pos:column="1">"\n"<pos:position pos:line="1782" pos:column="5"/></literal>
<literal type="string" pos:line="1783" pos:column="1">"NETWORK INTERFACE\n"<pos:position pos:line="1783" pos:column="22"/></literal>
<literal type="string" pos:line="1784" pos:column="1">"\n"<pos:position pos:line="1784" pos:column="5"/></literal>
<literal type="string" pos:line="1785" pos:column="1">"  Get a web page from a server using a specified port for the interface:\n"<pos:position pos:line="1785" pos:column="77"/></literal>
<literal type="string" pos:line="1786" pos:column="1">"\n"<pos:position pos:line="1786" pos:column="5"/></literal>
<literal type="string" pos:line="1787" pos:column="1">"	curl --interface eth0:1 http://www.netscape.com/\n"<pos:position pos:line="1787" pos:column="54"/></literal>
<literal type="string" pos:line="1788" pos:column="1">"\n"<pos:position pos:line="1788" pos:column="5"/></literal>
<literal type="string" pos:line="1789" pos:column="1">"  or\n"<pos:position pos:line="1789" pos:column="9"/></literal>
<literal type="string" pos:line="1790" pos:column="1">"\n"<pos:position pos:line="1790" pos:column="5"/></literal>
<literal type="string" pos:line="1791" pos:column="1">"	curl --interface 192.168.1.10 http://www.netscape.com/\n"<pos:position pos:line="1791" pos:column="60"/></literal>
<literal type="string" pos:line="1792" pos:column="1">"\n"<pos:position pos:line="1792" pos:column="5"/></literal>
<literal type="string" pos:line="1793" pos:column="1">"HTTPS\n"<pos:position pos:line="1793" pos:column="10"/></literal>
<literal type="string" pos:line="1794" pos:column="1">"\n"<pos:position pos:line="1794" pos:column="5"/></literal>
<literal type="string" pos:line="1795" pos:column="1">"  Secure HTTP requires SSL libraries to be installed and used when curl is\n"<pos:position pos:line="1795" pos:column="79"/></literal>
<literal type="string" pos:line="1796" pos:column="1">"  built. If that is done, curl is capable of retrieving and posting documents\n"<pos:position pos:line="1796" pos:column="82"/></literal>
<literal type="string" pos:line="1797" pos:column="1">"  using the HTTPS procotol.\n"<pos:position pos:line="1797" pos:column="32"/></literal>
<literal type="string" pos:line="1798" pos:column="1">"\n"<pos:position pos:line="1798" pos:column="5"/></literal>
<literal type="string" pos:line="1799" pos:column="1">"  Example:\n"<pos:position pos:line="1799" pos:column="15"/></literal>
<literal type="string" pos:line="1800" pos:column="1">"\n"<pos:position pos:line="1800" pos:column="5"/></literal>
<literal type="string" pos:line="1801" pos:column="1">"        curl https://www.secure-site.com\n"<pos:position pos:line="1801" pos:column="45"/></literal>
<literal type="string" pos:line="1802" pos:column="1">"\n"<pos:position pos:line="1802" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1803" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1803" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1804" pos:column="2">puts<pos:position pos:line="1804" pos:column="6"/></name><argument_list pos:line="1804" pos:column="6">(
<argument><expr><literal type="string" pos:line="1805" pos:column="1">"  Curl is also capable of using your personal certificates to get/post files\n"<pos:position pos:line="1805" pos:column="81"/></literal>
<literal type="string" pos:line="1806" pos:column="1">"  from sites that require valid certificates. The only drawback is that the\n"<pos:position pos:line="1806" pos:column="80"/></literal>
<literal type="string" pos:line="1807" pos:column="1">"  certificate needs to be in PEM-format. PEM is a standard and open format to\n"<pos:position pos:line="1807" pos:column="82"/></literal>
<literal type="string" pos:line="1808" pos:column="1">"  store certificates with, but it is not used by the most commonly used\n"<pos:position pos:line="1808" pos:column="76"/></literal>
<literal type="string" pos:line="1809" pos:column="1">"  browsers (Netscape and MSEI both use the so called PKCS#12 format). If you\n"<pos:position pos:line="1809" pos:column="81"/></literal>
<literal type="string" pos:line="1810" pos:column="1">"  want curl to use the certificates you use with your (favourite) browser, you\n"<pos:position pos:line="1810" pos:column="83"/></literal></expr></argument>
)<pos:position pos:line="1811" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1811" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1812" pos:column="2">puts<pos:position pos:line="1812" pos:column="6"/></name><argument_list pos:line="1812" pos:column="6">(
<argument><expr><literal type="string" pos:line="1813" pos:column="1">"  may need to download/compile a converter that can convert your browser's\n"<pos:position pos:line="1813" pos:column="79"/></literal>
<literal type="string" pos:line="1814" pos:column="1">"  formatted certificates to PEM formatted ones. This kind of converter is\n"<pos:position pos:line="1814" pos:column="78"/></literal>
<literal type="string" pos:line="1815" pos:column="1">"  included in recent versions of OpenSSL, and for older versions Dr Stephen\n"<pos:position pos:line="1815" pos:column="80"/></literal>
<literal type="string" pos:line="1816" pos:column="1">"  N. Henson has written a patch for SSLeay that adds this functionality. You\n"<pos:position pos:line="1816" pos:column="81"/></literal>
<literal type="string" pos:line="1817" pos:column="1">"  can get his patch (that requires an SSLeay installation) from his site at:\n"<pos:position pos:line="1817" pos:column="81"/></literal>
<literal type="string" pos:line="1818" pos:column="1">"  http://www.drh-consultancy.demon.co.uk/\n"<pos:position pos:line="1818" pos:column="46"/></literal>
<literal type="string" pos:line="1819" pos:column="1">"\n"<pos:position pos:line="1819" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1820" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1820" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1821" pos:column="2">puts<pos:position pos:line="1821" pos:column="6"/></name><argument_list pos:line="1821" pos:column="6">(
<argument><expr><literal type="string" pos:line="1822" pos:column="1">"  Example on how to automatically retrieve a document using a certificate with\n"<pos:position pos:line="1822" pos:column="83"/></literal>
<literal type="string" pos:line="1823" pos:column="1">"  a personal password:\n"<pos:position pos:line="1823" pos:column="27"/></literal>
<literal type="string" pos:line="1824" pos:column="1">"\n"<pos:position pos:line="1824" pos:column="5"/></literal>
<literal type="string" pos:line="1825" pos:column="1">"        curl -E /path/to/cert.pem:password https://secure.site.com/\n"<pos:position pos:line="1825" pos:column="72"/></literal>
<literal type="string" pos:line="1826" pos:column="1">"\n"<pos:position pos:line="1826" pos:column="5"/></literal>
<literal type="string" pos:line="1827" pos:column="1">"  If you neglect to specify the password on the command line, you will be\n"<pos:position pos:line="1827" pos:column="78"/></literal>
<literal type="string" pos:line="1828" pos:column="1">"  prompted for the correct password before any data can be received.\n"<pos:position pos:line="1828" pos:column="73"/></literal>
<literal type="string" pos:line="1829" pos:column="1">"\n"<pos:position pos:line="1829" pos:column="5"/></literal>
<literal type="string" pos:line="1830" pos:column="1">"  Many older SSL-servers have problems with SSLv3 or TLS, that newer versions\n"<pos:position pos:line="1830" pos:column="82"/></literal>
<literal type="string" pos:line="1831" pos:column="1">"  of OpenSSL etc is using, therefore it is sometimes useful to specify what\n"<pos:position pos:line="1831" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1832" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1832" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1833" pos:column="2">puts<pos:position pos:line="1833" pos:column="6"/></name><argument_list pos:line="1833" pos:column="6">(
<argument><expr><literal type="string" pos:line="1834" pos:column="1">"  SSL-version curl should use. Use -3 or -2 to specify that exact SSL version\n"<pos:position pos:line="1834" pos:column="82"/></literal>
<literal type="string" pos:line="1835" pos:column="1">"  to use:\n"<pos:position pos:line="1835" pos:column="14"/></literal>
<literal type="string" pos:line="1836" pos:column="1">"\n"<pos:position pos:line="1836" pos:column="5"/></literal>
<literal type="string" pos:line="1837" pos:column="1">"        curl -2 https://secure.site.com/\n"<pos:position pos:line="1837" pos:column="45"/></literal>
<literal type="string" pos:line="1838" pos:column="1">"\n"<pos:position pos:line="1838" pos:column="5"/></literal>
<literal type="string" pos:line="1839" pos:column="1">"  Otherwise, curl will first attempt to use v3 and then v2.\n"<pos:position pos:line="1839" pos:column="64"/></literal>
<literal type="string" pos:line="1840" pos:column="1">"\n"<pos:position pos:line="1840" pos:column="5"/></literal>
<literal type="string" pos:line="1841" pos:column="1">"  To use OpenSSL to convert your favourite browser's certificate into a PEM\n"<pos:position pos:line="1841" pos:column="80"/></literal>
<literal type="string" pos:line="1842" pos:column="1">"  formatted one that curl can use, do something like this (assuming netscape,\n"<pos:position pos:line="1842" pos:column="82"/></literal>
<literal type="string" pos:line="1843" pos:column="1">"  but IE is likely to work similarly):\n"<pos:position pos:line="1843" pos:column="43"/></literal>
<literal type="string" pos:line="1844" pos:column="1">"\n"<pos:position pos:line="1844" pos:column="5"/></literal>
<literal type="string" pos:line="1845" pos:column="1">"    You start with hitting the 'security' menu button in netscape. \n"<pos:position pos:line="1845" pos:column="72"/></literal>
<literal type="string" pos:line="1846" pos:column="1">"\n"<pos:position pos:line="1846" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1847" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1847" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1848" pos:column="2">puts<pos:position pos:line="1848" pos:column="6"/></name><argument_list pos:line="1848" pos:column="6">(
<argument><expr><literal type="string" pos:line="1849" pos:column="1">"    Select 'certificates-&gt;yours' and then pick a certificate in the list \n"<pos:position pos:line="1849" pos:column="81"/></literal>
<literal type="string" pos:line="1850" pos:column="1">"\n"<pos:position pos:line="1850" pos:column="5"/></literal>
<literal type="string" pos:line="1851" pos:column="1">"    Press the 'export' button \n"<pos:position pos:line="1851" pos:column="35"/></literal>
<literal type="string" pos:line="1852" pos:column="1">"\n"<pos:position pos:line="1852" pos:column="5"/></literal>
<literal type="string" pos:line="1853" pos:column="1">"    enter your PIN code for the certs \n"<pos:position pos:line="1853" pos:column="43"/></literal>
<literal type="string" pos:line="1854" pos:column="1">"\n"<pos:position pos:line="1854" pos:column="5"/></literal>
<literal type="string" pos:line="1855" pos:column="1">"    select a proper place to save it \n"<pos:position pos:line="1855" pos:column="42"/></literal>
<literal type="string" pos:line="1856" pos:column="1">"\n"<pos:position pos:line="1856" pos:column="5"/></literal>
<literal type="string" pos:line="1857" pos:column="1">"    Run the 'openssl' application to convert the certificate. If you cd to the\n"<pos:position pos:line="1857" pos:column="83"/></literal>
<literal type="string" pos:line="1858" pos:column="1">"    openssl installation, you can do it like:\n"<pos:position pos:line="1858" pos:column="50"/></literal>
<literal type="string" pos:line="1859" pos:column="1">"\n"<pos:position pos:line="1859" pos:column="5"/></literal>
<literal type="string" pos:line="1860" pos:column="1">"     # ./apps/openssl pkcs12 -certfile [file you saved] -out [PEMfile]\n"<pos:position pos:line="1860" pos:column="75"/></literal>
<literal type="string" pos:line="1861" pos:column="1">"\n"<pos:position pos:line="1861" pos:column="5"/></literal>
<literal type="string" pos:line="1862" pos:column="1">"\n"<pos:position pos:line="1862" pos:column="5"/></literal>
<literal type="string" pos:line="1863" pos:column="1">"RESUMING FILE TRANSFERS\n"<pos:position pos:line="1863" pos:column="28"/></literal>
<literal type="string" pos:line="1864" pos:column="1">"\n"<pos:position pos:line="1864" pos:column="5"/></literal>
<literal type="string" pos:line="1865" pos:column="1">" To continue a file transfer where it was previously aborted, curl supports\n"<pos:position pos:line="1865" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="1866" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1866" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1867" pos:column="2">puts<pos:position pos:line="1867" pos:column="6"/></name><argument_list pos:line="1867" pos:column="6">(
<argument><expr><literal type="string" pos:line="1868" pos:column="1">" resume on http(s) downloads as well as ftp uploads and downloads.\n"<pos:position pos:line="1868" pos:column="71"/></literal>
<literal type="string" pos:line="1869" pos:column="1">"\n"<pos:position pos:line="1869" pos:column="5"/></literal>
<literal type="string" pos:line="1870" pos:column="1">" Continue downloading a document:\n"<pos:position pos:line="1870" pos:column="38"/></literal>
<literal type="string" pos:line="1871" pos:column="1">"\n"<pos:position pos:line="1871" pos:column="5"/></literal>
<literal type="string" pos:line="1872" pos:column="1">"        curl -c -o file ftp://ftp.server.com/path/file\n"<pos:position pos:line="1872" pos:column="59"/></literal>
<literal type="string" pos:line="1873" pos:column="1">"\n"<pos:position pos:line="1873" pos:column="5"/></literal>
<literal type="string" pos:line="1874" pos:column="1">" Continue uploading a document(*1):\n"<pos:position pos:line="1874" pos:column="40"/></literal>
<literal type="string" pos:line="1875" pos:column="1">"\n"<pos:position pos:line="1875" pos:column="5"/></literal>
<literal type="string" pos:line="1876" pos:column="1">"        curl -c -T file ftp://ftp.server.com/path/file\n"<pos:position pos:line="1876" pos:column="59"/></literal>
<literal type="string" pos:line="1877" pos:column="1">"\n"<pos:position pos:line="1877" pos:column="5"/></literal>
<literal type="string" pos:line="1878" pos:column="1">" Continue downloading a document from a web server(*2):\n"<pos:position pos:line="1878" pos:column="60"/></literal>
<literal type="string" pos:line="1879" pos:column="1">"\n"<pos:position pos:line="1879" pos:column="5"/></literal>
<literal type="string" pos:line="1880" pos:column="1">"        curl -c -o file http://www.server.com/\n"<pos:position pos:line="1880" pos:column="51"/></literal>
<literal type="string" pos:line="1881" pos:column="1">"\n"<pos:position pos:line="1881" pos:column="5"/></literal>
<literal type="string" pos:line="1882" pos:column="1">" (*1) = This requires that the ftp server supports the non-standard command\n"<pos:position pos:line="1882" pos:column="80"/></literal>
<literal type="string" pos:line="1883" pos:column="1">"        SIZE. If it doesn't, curl will say so.\n"<pos:position pos:line="1883" pos:column="51"/></literal>
<literal type="string" pos:line="1884" pos:column="1">"\n"<pos:position pos:line="1884" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1885" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1885" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1886" pos:column="2">puts<pos:position pos:line="1886" pos:column="6"/></name><argument_list pos:line="1886" pos:column="6">(
<argument><expr><literal type="string" pos:line="1887" pos:column="1">" (*2) = This requires that the web server supports at least HTTP/1.1. If it\n"<pos:position pos:line="1887" pos:column="80"/></literal>
<literal type="string" pos:line="1888" pos:column="1">"        doesn't, curl will say so.\n"<pos:position pos:line="1888" pos:column="39"/></literal>
<literal type="string" pos:line="1889" pos:column="1">"\n"<pos:position pos:line="1889" pos:column="5"/></literal>
<literal type="string" pos:line="1890" pos:column="1">"TIME CONDITIONS\n"<pos:position pos:line="1890" pos:column="20"/></literal>
<literal type="string" pos:line="1891" pos:column="1">"\n"<pos:position pos:line="1891" pos:column="5"/></literal>
<literal type="string" pos:line="1892" pos:column="1">" HTTP allows a client to specify a time condition for the document it\n"<pos:position pos:line="1892" pos:column="74"/></literal>
<literal type="string" pos:line="1893" pos:column="1">" requests. It is If-Modified-Since or If-Unmodified-Since. Curl allow you to\n"<pos:position pos:line="1893" pos:column="81"/></literal>
<literal type="string" pos:line="1894" pos:column="1">" specify them with the -z/--time-cond flag.\n"<pos:position pos:line="1894" pos:column="48"/></literal>
<literal type="string" pos:line="1895" pos:column="1">"\n"<pos:position pos:line="1895" pos:column="5"/></literal>
<literal type="string" pos:line="1896" pos:column="1">" For example, you can easily make a download that only gets performed if the\n"<pos:position pos:line="1896" pos:column="81"/></literal>
<literal type="string" pos:line="1897" pos:column="1">" remote file is newer than a local copy. It would be made like:\n"<pos:position pos:line="1897" pos:column="68"/></literal>
<literal type="string" pos:line="1898" pos:column="1">"\n"<pos:position pos:line="1898" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1899" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1899" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1900" pos:column="2">puts<pos:position pos:line="1900" pos:column="6"/></name><argument_list pos:line="1900" pos:column="6">(
<argument><expr><literal type="string" pos:line="1901" pos:column="1">"        curl -z local.html http://remote.server.com/remote.html\n"<pos:position pos:line="1901" pos:column="68"/></literal>
<literal type="string" pos:line="1902" pos:column="1">"\n"<pos:position pos:line="1902" pos:column="5"/></literal>
<literal type="string" pos:line="1903" pos:column="1">" Or you can download a file only if the local file is newer than the remote\n"<pos:position pos:line="1903" pos:column="80"/></literal>
<literal type="string" pos:line="1904" pos:column="1">" one. Do this by prepending the date string with a '-', as in:\n"<pos:position pos:line="1904" pos:column="67"/></literal>
<literal type="string" pos:line="1905" pos:column="1">"\n"<pos:position pos:line="1905" pos:column="5"/></literal>
<literal type="string" pos:line="1906" pos:column="1">"        curl -z -local.html http://remote.server.com/remote.html\n"<pos:position pos:line="1906" pos:column="69"/></literal>
<literal type="string" pos:line="1907" pos:column="1">"\n"<pos:position pos:line="1907" pos:column="5"/></literal>
<literal type="string" pos:line="1908" pos:column="1">" You can specify a \"free text\" date as condition. Tell curl to only download\n"<pos:position pos:line="1908" pos:column="83"/></literal>
<literal type="string" pos:line="1909" pos:column="1">" the file if it was updated since yesterday:\n"<pos:position pos:line="1909" pos:column="49"/></literal>
<literal type="string" pos:line="1910" pos:column="1">"\n"<pos:position pos:line="1910" pos:column="5"/></literal>
<literal type="string" pos:line="1911" pos:column="1">"        curl -z yesterday http://remote.server.com/remote.html\n"<pos:position pos:line="1911" pos:column="67"/></literal>
<literal type="string" pos:line="1912" pos:column="1">"\n"<pos:position pos:line="1912" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1913" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1913" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1914" pos:column="2">puts<pos:position pos:line="1914" pos:column="6"/></name><argument_list pos:line="1914" pos:column="6">(
<argument><expr><literal type="string" pos:line="1915" pos:column="1">" Curl will then accept a wide range of date formats. You always make the date\n"<pos:position pos:line="1915" pos:column="82"/></literal>
<literal type="string" pos:line="1916" pos:column="1">" check the other way around by prepending it with a dash '-'.\n"<pos:position pos:line="1916" pos:column="66"/></literal>
<literal type="string" pos:line="1917" pos:column="1">"\n"<pos:position pos:line="1917" pos:column="5"/></literal>
<literal type="string" pos:line="1918" pos:column="1">"DICT\n"<pos:position pos:line="1918" pos:column="9"/></literal>
<literal type="string" pos:line="1919" pos:column="1">"\n"<pos:position pos:line="1919" pos:column="5"/></literal>
<literal type="string" pos:line="1920" pos:column="1">"  For fun try\n"<pos:position pos:line="1920" pos:column="18"/></literal>
<literal type="string" pos:line="1921" pos:column="1">"\n"<pos:position pos:line="1921" pos:column="5"/></literal>
<literal type="string" pos:line="1922" pos:column="1">"        curl dict://dict.org/m:curl\n"<pos:position pos:line="1922" pos:column="40"/></literal>
<literal type="string" pos:line="1923" pos:column="1">"        curl dict://dict.org/d:heisenbug:jargon\n"<pos:position pos:line="1923" pos:column="52"/></literal>
<literal type="string" pos:line="1924" pos:column="1">"        curl dict://dict.org/d:daniel:web1913\n"<pos:position pos:line="1924" pos:column="50"/></literal>
<literal type="string" pos:line="1925" pos:column="1">"\n"<pos:position pos:line="1925" pos:column="5"/></literal>
<literal type="string" pos:line="1926" pos:column="1">"  Aliases for 'm' are 'match' and 'find', and aliases for 'd' are 'define'\n"<pos:position pos:line="1926" pos:column="79"/></literal>
<literal type="string" pos:line="1927" pos:column="1">"  and 'lookup'. For example,\n"<pos:position pos:line="1927" pos:column="33"/></literal>
<literal type="string" pos:line="1928" pos:column="1">"\n"<pos:position pos:line="1928" pos:column="5"/></literal>
<literal type="string" pos:line="1929" pos:column="1">"        curl dict://dict.org/find:curl\n"<pos:position pos:line="1929" pos:column="43"/></literal>
<literal type="string" pos:line="1930" pos:column="1">"\n"<pos:position pos:line="1930" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1931" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1931" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1932" pos:column="2">puts<pos:position pos:line="1932" pos:column="6"/></name><argument_list pos:line="1932" pos:column="6">(
<argument><expr><literal type="string" pos:line="1933" pos:column="1">"  Commands that break the URL description of the RFC (but not the DICT\n"<pos:position pos:line="1933" pos:column="75"/></literal>
<literal type="string" pos:line="1934" pos:column="1">"  protocol) are\n"<pos:position pos:line="1934" pos:column="20"/></literal>
<literal type="string" pos:line="1935" pos:column="1">"\n"<pos:position pos:line="1935" pos:column="5"/></literal>
<literal type="string" pos:line="1936" pos:column="1">"        curl dict://dict.org/show:db\n"<pos:position pos:line="1936" pos:column="41"/></literal>
<literal type="string" pos:line="1937" pos:column="1">"        curl dict://dict.org/show:strat\n"<pos:position pos:line="1937" pos:column="44"/></literal>
<literal type="string" pos:line="1938" pos:column="1">"\n"<pos:position pos:line="1938" pos:column="5"/></literal>
<literal type="string" pos:line="1939" pos:column="1">"  Authentication is still missing (but this is not required by the RFC)\n"<pos:position pos:line="1939" pos:column="76"/></literal>
<literal type="string" pos:line="1940" pos:column="1">"\n"<pos:position pos:line="1940" pos:column="5"/></literal>
<literal type="string" pos:line="1941" pos:column="1">"LDAP\n"<pos:position pos:line="1941" pos:column="9"/></literal>
<literal type="string" pos:line="1942" pos:column="1">"\n"<pos:position pos:line="1942" pos:column="5"/></literal>
<literal type="string" pos:line="1943" pos:column="1">"  If you have installed the OpenLDAP library, curl can take advantage of it\n"<pos:position pos:line="1943" pos:column="80"/></literal>
<literal type="string" pos:line="1944" pos:column="1">"  and offer ldap:// support.\n"<pos:position pos:line="1944" pos:column="33"/></literal>
<literal type="string" pos:line="1945" pos:column="1">"\n"<pos:position pos:line="1945" pos:column="5"/></literal>
<literal type="string" pos:line="1946" pos:column="1">"  LDAP is a complex thing and writing an LDAP query is not an easy task. I do\n"<pos:position pos:line="1946" pos:column="82"/></literal></expr></argument>
)<pos:position pos:line="1947" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1947" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1948" pos:column="2">puts<pos:position pos:line="1948" pos:column="6"/></name><argument_list pos:line="1948" pos:column="6">(
<argument><expr><literal type="string" pos:line="1949" pos:column="1">"  advice you to dig up the syntax description for that elsewhere, RFC 1959 if\n"<pos:position pos:line="1949" pos:column="82"/></literal>
<literal type="string" pos:line="1950" pos:column="1">"  no other place is better.\n"<pos:position pos:line="1950" pos:column="32"/></literal>
<literal type="string" pos:line="1951" pos:column="1">"\n"<pos:position pos:line="1951" pos:column="5"/></literal>
<literal type="string" pos:line="1952" pos:column="1">"  To show you an example, this is now I can get all people from my local LDAP\n"<pos:position pos:line="1952" pos:column="82"/></literal>
<literal type="string" pos:line="1953" pos:column="1">"  server that has a certain sub-domain in their email address:\n"<pos:position pos:line="1953" pos:column="67"/></literal>
<literal type="string" pos:line="1954" pos:column="1">"\n"<pos:position pos:line="1954" pos:column="5"/></literal>
<literal type="string" pos:line="1955" pos:column="1">"        curl -B \"ldap://ldap.frontec.se/o=frontec??sub?mail=*sth.frontec.se\"\n"<pos:position pos:line="1955" pos:column="83"/></literal>
<literal type="string" pos:line="1956" pos:column="1">"\n"<pos:position pos:line="1956" pos:column="5"/></literal>
<literal type="string" pos:line="1957" pos:column="1">"  If I want the same info in HTML format, I can get it by not using the -B\n"<pos:position pos:line="1957" pos:column="79"/></literal>
<literal type="string" pos:line="1958" pos:column="1">"  (enforce ASCII) flag.\n"<pos:position pos:line="1958" pos:column="28"/></literal>
<literal type="string" pos:line="1959" pos:column="1">"\n"<pos:position pos:line="1959" pos:column="5"/></literal>
<literal type="string" pos:line="1960" pos:column="1">"ENVIRONMENT VARIABLES\n"<pos:position pos:line="1960" pos:column="26"/></literal>
<literal type="string" pos:line="1961" pos:column="1">"\n"<pos:position pos:line="1961" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="1962" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1962" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1963" pos:column="2">puts<pos:position pos:line="1963" pos:column="6"/></name><argument_list pos:line="1963" pos:column="6">(
<argument><expr><literal type="string" pos:line="1964" pos:column="1">"  Curl reads and understands the following environment variables:\n"<pos:position pos:line="1964" pos:column="70"/></literal>
<literal type="string" pos:line="1965" pos:column="1">"\n"<pos:position pos:line="1965" pos:column="5"/></literal>
<literal type="string" pos:line="1966" pos:column="1">"        HTTP_PROXY, HTTPS_PROXY, FTP_PROXY, GOPHER_PROXY\n"<pos:position pos:line="1966" pos:column="61"/></literal>
<literal type="string" pos:line="1967" pos:column="1">"\n"<pos:position pos:line="1967" pos:column="5"/></literal>
<literal type="string" pos:line="1968" pos:column="1">"  They should be set for protocol-specific proxies. General proxy should be\n"<pos:position pos:line="1968" pos:column="80"/></literal>
<literal type="string" pos:line="1969" pos:column="1">"  set with\n"<pos:position pos:line="1969" pos:column="15"/></literal>
<literal type="string" pos:line="1970" pos:column="1">"        \n"<pos:position pos:line="1970" pos:column="13"/></literal>
<literal type="string" pos:line="1971" pos:column="1">"        ALL_PROXY\n"<pos:position pos:line="1971" pos:column="22"/></literal>
<literal type="string" pos:line="1972" pos:column="1">"\n"<pos:position pos:line="1972" pos:column="5"/></literal>
<literal type="string" pos:line="1973" pos:column="1">"  A comma-separated list of host names that shouldn't go through any proxy is\n"<pos:position pos:line="1973" pos:column="82"/></literal>
<literal type="string" pos:line="1974" pos:column="1">"  set in (only an asterisk, '*' matches all hosts)\n"<pos:position pos:line="1974" pos:column="55"/></literal>
<literal type="string" pos:line="1975" pos:column="1">"\n"<pos:position pos:line="1975" pos:column="5"/></literal>
<literal type="string" pos:line="1976" pos:column="1">"        NO_PROXY\n"<pos:position pos:line="1976" pos:column="21"/></literal>
<literal type="string" pos:line="1977" pos:column="1">"\n"<pos:position pos:line="1977" pos:column="5"/></literal>
<literal type="string" pos:line="1978" pos:column="1">"  If a tail substring of the domain-path for a host matches one of these\n"<pos:position pos:line="1978" pos:column="77"/></literal></expr></argument>
)<pos:position pos:line="1979" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1979" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1980" pos:column="2">puts<pos:position pos:line="1980" pos:column="6"/></name><argument_list pos:line="1980" pos:column="6">(
<argument><expr><literal type="string" pos:line="1981" pos:column="1">"  strings, transactions with that node will not be proxied.\n"<pos:position pos:line="1981" pos:column="64"/></literal>
<literal type="string" pos:line="1982" pos:column="1">"\n"<pos:position pos:line="1982" pos:column="5"/></literal>
<literal type="string" pos:line="1983" pos:column="1">"\n"<pos:position pos:line="1983" pos:column="5"/></literal>
<literal type="string" pos:line="1984" pos:column="1">"  The usage of the -x/--proxy flag overrides the environment variables.\n"<pos:position pos:line="1984" pos:column="76"/></literal>
<literal type="string" pos:line="1985" pos:column="1">"\n"<pos:position pos:line="1985" pos:column="5"/></literal>
<literal type="string" pos:line="1986" pos:column="1">"NETRC\n"<pos:position pos:line="1986" pos:column="10"/></literal>
<literal type="string" pos:line="1987" pos:column="1">"\n"<pos:position pos:line="1987" pos:column="5"/></literal>
<literal type="string" pos:line="1988" pos:column="1">"  Unix introduced the .netrc concept a long time ago. It is a way for a user\n"<pos:position pos:line="1988" pos:column="81"/></literal>
<literal type="string" pos:line="1989" pos:column="1">"  to specify name and password for commonly visited ftp sites in a file so\n"<pos:position pos:line="1989" pos:column="79"/></literal>
<literal type="string" pos:line="1990" pos:column="1">"  that you don't have to type them in each time you visit those sites. You\n"<pos:position pos:line="1990" pos:column="79"/></literal>
<literal type="string" pos:line="1991" pos:column="1">"  realize this is a big security risk if someone else gets hold of your\n"<pos:position pos:line="1991" pos:column="76"/></literal></expr></argument>
)<pos:position pos:line="1992" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="1992" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="1993" pos:column="2">puts<pos:position pos:line="1993" pos:column="6"/></name><argument_list pos:line="1993" pos:column="6">(
<argument><expr><literal type="string" pos:line="1994" pos:column="1">"  passwords, so therefor most unix programs won't read this file unless it is\n"<pos:position pos:line="1994" pos:column="82"/></literal>
<literal type="string" pos:line="1995" pos:column="1">"  only readable by yourself (curl doesn't care though).\n"<pos:position pos:line="1995" pos:column="60"/></literal>
<literal type="string" pos:line="1996" pos:column="1">"\n"<pos:position pos:line="1996" pos:column="5"/></literal>
<literal type="string" pos:line="1997" pos:column="1">"  Curl supports .netrc files if told so (using the -n/--netrc option). This is\n"<pos:position pos:line="1997" pos:column="83"/></literal>
<literal type="string" pos:line="1998" pos:column="1">"  not restricted to only ftp, but curl can use it for all protocols where\n"<pos:position pos:line="1998" pos:column="78"/></literal>
<literal type="string" pos:line="1999" pos:column="1">"  authentication is used.\n"<pos:position pos:line="1999" pos:column="30"/></literal>
<literal type="string" pos:line="2000" pos:column="1">"\n"<pos:position pos:line="2000" pos:column="5"/></literal>
<literal type="string" pos:line="2001" pos:column="1">"  A very simple .netrc file could look something like:\n"<pos:position pos:line="2001" pos:column="59"/></literal>
<literal type="string" pos:line="2002" pos:column="1">"\n"<pos:position pos:line="2002" pos:column="5"/></literal>
<literal type="string" pos:line="2003" pos:column="1">"        machine curl.haxx.se login iamdaniel password mysecret\n"<pos:position pos:line="2003" pos:column="67"/></literal>
<literal type="string" pos:line="2004" pos:column="1">"\n"<pos:position pos:line="2004" pos:column="5"/></literal>
<literal type="string" pos:line="2005" pos:column="1">"CUSTOM OUTPUT\n"<pos:position pos:line="2005" pos:column="18"/></literal>
<literal type="string" pos:line="2006" pos:column="1">"\n"<pos:position pos:line="2006" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="2007" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2007" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2008" pos:column="2">puts<pos:position pos:line="2008" pos:column="6"/></name><argument_list pos:line="2008" pos:column="6">(
<argument><expr><literal type="string" pos:line="2009" pos:column="1">"  To better allow script programmers to get to know about the progress of\n"<pos:position pos:line="2009" pos:column="78"/></literal>
<literal type="string" pos:line="2010" pos:column="1">"  curl, the -w/--write-out option was introduced. Using this, you can specify\n"<pos:position pos:line="2010" pos:column="82"/></literal>
<literal type="string" pos:line="2011" pos:column="1">"  what information from the previous transfer you want to extract.\n"<pos:position pos:line="2011" pos:column="71"/></literal>
<literal type="string" pos:line="2012" pos:column="1">"\n"<pos:position pos:line="2012" pos:column="5"/></literal>
<literal type="string" pos:line="2013" pos:column="1">"  To display the amount of bytes downloaded together with some text and an\n"<pos:position pos:line="2013" pos:column="79"/></literal>
<literal type="string" pos:line="2014" pos:column="1">"  ending newline:\n"<pos:position pos:line="2014" pos:column="22"/></literal>
<literal type="string" pos:line="2015" pos:column="1">"\n"<pos:position pos:line="2015" pos:column="5"/></literal>
<literal type="string" pos:line="2016" pos:column="1">"        curl -w 'We downloaded %{size_download} bytes\\n' www.download.com\n"<pos:position pos:line="2016" pos:column="79"/></literal>
<literal type="string" pos:line="2017" pos:column="1">"\n"<pos:position pos:line="2017" pos:column="5"/></literal>
<literal type="string" pos:line="2018" pos:column="1">"KERBEROS4 FTP TRANSFER\n"<pos:position pos:line="2018" pos:column="27"/></literal>
<literal type="string" pos:line="2019" pos:column="1">"\n"<pos:position pos:line="2019" pos:column="5"/></literal>
<literal type="string" pos:line="2020" pos:column="1">"  Curl supports kerberos4 for FTP transfers. You need the kerberos package\n"<pos:position pos:line="2020" pos:column="79"/></literal></expr></argument>
)<pos:position pos:line="2021" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2021" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2022" pos:column="2">puts<pos:position pos:line="2022" pos:column="6"/></name><argument_list pos:line="2022" pos:column="6">(
<argument><expr><literal type="string" pos:line="2023" pos:column="1">"  installed and used at curl build time for it to be used.\n"<pos:position pos:line="2023" pos:column="63"/></literal>
<literal type="string" pos:line="2024" pos:column="1">"\n"<pos:position pos:line="2024" pos:column="5"/></literal>
<literal type="string" pos:line="2025" pos:column="1">"  First, get the krb-ticket the normal way, like with the kauth tool. Then use\n"<pos:position pos:line="2025" pos:column="83"/></literal>
<literal type="string" pos:line="2026" pos:column="1">"  curl in way similar to:\n"<pos:position pos:line="2026" pos:column="30"/></literal>
<literal type="string" pos:line="2027" pos:column="1">"\n"<pos:position pos:line="2027" pos:column="5"/></literal>
<literal type="string" pos:line="2028" pos:column="1">"        curl --krb4 private ftp://krb4site.com -u username:fakepwd\n"<pos:position pos:line="2028" pos:column="71"/></literal>
<literal type="string" pos:line="2029" pos:column="1">"\n"<pos:position pos:line="2029" pos:column="5"/></literal>
<literal type="string" pos:line="2030" pos:column="1">"  There's no use for a password on the -u switch, but a blank one will make\n"<pos:position pos:line="2030" pos:column="80"/></literal>
<literal type="string" pos:line="2031" pos:column="1">"  curl ask for one and you already entered the real password to kauth.\n"<pos:position pos:line="2031" pos:column="75"/></literal>
<literal type="string" pos:line="2032" pos:column="1">"\n"<pos:position pos:line="2032" pos:column="5"/></literal>
<literal type="string" pos:line="2033" pos:column="1">"TELNET\n"<pos:position pos:line="2033" pos:column="11"/></literal>
<literal type="string" pos:line="2034" pos:column="1">"\n"<pos:position pos:line="2034" pos:column="5"/></literal>
<literal type="string" pos:line="2035" pos:column="1">"  The curl telnet support is basic and very easy to use. Curl passes all data\n"<pos:position pos:line="2035" pos:column="82"/></literal></expr></argument>
)<pos:position pos:line="2036" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2036" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2037" pos:column="2">puts<pos:position pos:line="2037" pos:column="6"/></name><argument_list pos:line="2037" pos:column="6">(
<argument><expr><literal type="string" pos:line="2038" pos:column="1">"  passed to it on stdin to the remote server. Connect to a remote telnet\n"<pos:position pos:line="2038" pos:column="77"/></literal>
<literal type="string" pos:line="2039" pos:column="1">"  server using a command line similar to:\n"<pos:position pos:line="2039" pos:column="46"/></literal>
<literal type="string" pos:line="2040" pos:column="1">"\n"<pos:position pos:line="2040" pos:column="5"/></literal>
<literal type="string" pos:line="2041" pos:column="1">"        curl telnet://remote.server.com\n"<pos:position pos:line="2041" pos:column="44"/></literal>
<literal type="string" pos:line="2042" pos:column="1">"\n"<pos:position pos:line="2042" pos:column="5"/></literal>
<literal type="string" pos:line="2043" pos:column="1">"  And enter the data to pass to the server on stdin. The result will be sent\n"<pos:position pos:line="2043" pos:column="81"/></literal>
<literal type="string" pos:line="2044" pos:column="1">"  to stdout or to the file you specify with -o.\n"<pos:position pos:line="2044" pos:column="52"/></literal>
<literal type="string" pos:line="2045" pos:column="1">"\n"<pos:position pos:line="2045" pos:column="5"/></literal>
<literal type="string" pos:line="2046" pos:column="1">"  You might want the -N/--no-buffer option to switch off the buffered output\n"<pos:position pos:line="2046" pos:column="81"/></literal>
<literal type="string" pos:line="2047" pos:column="1">"  for slow connections or similar.\n"<pos:position pos:line="2047" pos:column="39"/></literal>
<literal type="string" pos:line="2048" pos:column="1">"\n"<pos:position pos:line="2048" pos:column="5"/></literal>
<literal type="string" pos:line="2049" pos:column="1">"  NOTE: the telnet protocol does not specify any way to login with a specified\n"<pos:position pos:line="2049" pos:column="83"/></literal></expr></argument>
)<pos:position pos:line="2050" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2050" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2051" pos:column="2">puts<pos:position pos:line="2051" pos:column="6"/></name><argument_list pos:line="2051" pos:column="6">(
<argument><expr><literal type="string" pos:line="2052" pos:column="1">"  user and password so curl can't do that automatically. To do that, you need\n"<pos:position pos:line="2052" pos:column="82"/></literal>
<literal type="string" pos:line="2053" pos:column="1">"  to track when the login prompt is received and send the username and\n"<pos:position pos:line="2053" pos:column="75"/></literal>
<literal type="string" pos:line="2054" pos:column="1">"  password accordingly.\n"<pos:position pos:line="2054" pos:column="28"/></literal>
<literal type="string" pos:line="2055" pos:column="1">"\n"<pos:position pos:line="2055" pos:column="5"/></literal>
<literal type="string" pos:line="2056" pos:column="1">"PERSISTANT CONNECTIONS\n"<pos:position pos:line="2056" pos:column="27"/></literal>
<literal type="string" pos:line="2057" pos:column="1">"\n"<pos:position pos:line="2057" pos:column="5"/></literal>
<literal type="string" pos:line="2058" pos:column="1">"  Specifying multiple files on a single command line will make curl transfer\n"<pos:position pos:line="2058" pos:column="81"/></literal>
<literal type="string" pos:line="2059" pos:column="1">"  all of them, one after the other in the specified order.\n"<pos:position pos:line="2059" pos:column="63"/></literal>
<literal type="string" pos:line="2060" pos:column="1">"\n"<pos:position pos:line="2060" pos:column="5"/></literal>
<literal type="string" pos:line="2061" pos:column="1">"  libcurl will attempt to use persistant connections for the transfers so that\n"<pos:position pos:line="2061" pos:column="83"/></literal>
<literal type="string" pos:line="2062" pos:column="1">"  the second transfer to the same host can use the same connection that was\n"<pos:position pos:line="2062" pos:column="80"/></literal></expr></argument>
)<pos:position pos:line="2063" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2063" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2064" pos:column="2">puts<pos:position pos:line="2064" pos:column="6"/></name><argument_list pos:line="2064" pos:column="6">(
<argument><expr><literal type="string" pos:line="2065" pos:column="1">"  already initiated and was left open in the previous transfer. This greatly\n"<pos:position pos:line="2065" pos:column="81"/></literal>
<literal type="string" pos:line="2066" pos:column="1">"  decreases connection time for all but the first transfer and it makes a far\n"<pos:position pos:line="2066" pos:column="82"/></literal>
<literal type="string" pos:line="2067" pos:column="1">"  better use of the network.\n"<pos:position pos:line="2067" pos:column="33"/></literal>
<literal type="string" pos:line="2068" pos:column="1">"\n"<pos:position pos:line="2068" pos:column="5"/></literal>
<literal type="string" pos:line="2069" pos:column="1">"  Note that curl cannot use persistant connections for transfers that are used\n"<pos:position pos:line="2069" pos:column="83"/></literal>
<literal type="string" pos:line="2070" pos:column="1">"  in subsequence curl invokes. Try to stuff as many URLs as possible on the\n"<pos:position pos:line="2070" pos:column="80"/></literal>
<literal type="string" pos:line="2071" pos:column="1">"  same command line if they are using the same host, as that'll make the\n"<pos:position pos:line="2071" pos:column="77"/></literal>
<literal type="string" pos:line="2072" pos:column="1">"  transfers faster. If you use a http proxy for file transfers, practicly\n"<pos:position pos:line="2072" pos:column="78"/></literal></expr></argument>
)<pos:position pos:line="2073" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2073" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2074" pos:column="2">puts<pos:position pos:line="2074" pos:column="6"/></name><argument_list pos:line="2074" pos:column="6">(
<argument><expr><literal type="string" pos:line="2075" pos:column="1">"  all transfers will be persistant.\n"<pos:position pos:line="2075" pos:column="40"/></literal>
<literal type="string" pos:line="2076" pos:column="1">"\n"<pos:position pos:line="2076" pos:column="5"/></literal>
<literal type="string" pos:line="2077" pos:column="1">"  Persistant connections were introduced in curl 7.7.\n"<pos:position pos:line="2077" pos:column="58"/></literal>
<literal type="string" pos:line="2078" pos:column="1">"\n"<pos:position pos:line="2078" pos:column="5"/></literal>
<literal type="string" pos:line="2079" pos:column="1">"MAILING LISTS\n"<pos:position pos:line="2079" pos:column="18"/></literal>
<literal type="string" pos:line="2080" pos:column="1">"\n"<pos:position pos:line="2080" pos:column="5"/></literal>
<literal type="string" pos:line="2081" pos:column="1">"  For your convenience, we have several open mailing lists to discuss curl,\n"<pos:position pos:line="2081" pos:column="80"/></literal>
<literal type="string" pos:line="2082" pos:column="1">"  its development and things relevant to this.\n"<pos:position pos:line="2082" pos:column="51"/></literal>
<literal type="string" pos:line="2083" pos:column="1">"\n"<pos:position pos:line="2083" pos:column="5"/></literal>
<literal type="string" pos:line="2084" pos:column="1">"  To subscribe to the main curl list, mail curl-request@contactor.se with\n"<pos:position pos:line="2084" pos:column="78"/></literal>
<literal type="string" pos:line="2085" pos:column="1">"  \"subscribe &lt;fill in your email address&gt;\" in the body.\n"<pos:position pos:line="2085" pos:column="68"/></literal>
<literal type="string" pos:line="2086" pos:column="1">"\n"<pos:position pos:line="2086" pos:column="5"/></literal>
<literal type="string" pos:line="2087" pos:column="1">"  To subscribe to the curl-library users/deverlopers list, follow the\n"<pos:position pos:line="2087" pos:column="74"/></literal>
<literal type="string" pos:line="2088" pos:column="1">"  instructions at http://curl.haxx.se/mail/\n"<pos:position pos:line="2088" pos:column="48"/></literal>
<literal type="string" pos:line="2089" pos:column="1">"\n"<pos:position pos:line="2089" pos:column="5"/></literal></expr></argument>
)<pos:position pos:line="2090" pos:column="2"/></argument_list></call></expr>;<pos:position pos:line="2090" pos:column="3"/></expr_stmt>
 <expr_stmt><expr><call><name pos:line="2091" pos:column="2">puts<pos:position pos:line="2091" pos:column="6"/></name><argument_list pos:line="2091" pos:column="6">(
<argument><expr><literal type="string" pos:line="2092" pos:column="1">"  To subscribe to the curl-announce list, to only get information about new\n"<pos:position pos:line="2092" pos:column="80"/></literal>
<literal type="string" pos:line="2093" pos:column="1">"  releases, follow the instructions at http://curl.haxx.se/mail/\n"<pos:position pos:line="2093" pos:column="69"/></literal>
<literal type="string" pos:line="2094" pos:column="1">"\n"<pos:position pos:line="2094" pos:column="5"/></literal>
<literal type="string" pos:line="2095" pos:column="1">"  To subscribe to the curl-and-PHP list in which curl using with PHP is\n"<pos:position pos:line="2095" pos:column="76"/></literal>
<literal type="string" pos:line="2096" pos:column="1">"  discussed, follow the instructions at http://curl.haxx.se/mail/\n"<pos:position pos:line="2096" pos:column="70"/></literal>
<literal type="string" pos:line="2097" pos:column="1">"\n"<pos:position pos:line="2097" pos:column="5"/></literal>
<literal type="string" pos:line="2098" pos:column="1">"  Please direct curl questions, feature requests and trouble reports to one of\n"<pos:position pos:line="2098" pos:column="83"/></literal>
<literal type="string" pos:line="2099" pos:column="1">"  these mailing lists instead of mailing any individual.\n"<pos:position pos:line="2099" pos:column="61"/></literal></expr></argument>
 )<pos:position pos:line="2100" pos:column="3"/></argument_list></call></expr> ;<pos:position pos:line="2100" pos:column="5"/></expr_stmt>
}<pos:position pos:line="2101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1308_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">init_thread_sync_data<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">thread_data<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">td<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">hostname<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="4" pos:column="28">int<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">port<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="5" pos:column="28">const<pos:position pos:line="5" pos:column="33"/></specifier> <name><name pos:line="5" pos:column="34">struct<pos:position pos:line="5" pos:column="40"/></name> <name pos:line="5" pos:column="41">addrinfo<pos:position pos:line="5" pos:column="49"/></name></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">hints<pos:position pos:line="5" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="57"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">thread_sync_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">tsd<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><operator pos:line="7" pos:column="34">&amp;<pos:position pos:line="7" pos:column="39"/></operator><name><name pos:line="7" pos:column="35">td<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">tsd<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">tsd<pos:position pos:line="9" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="18">sizeof<argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">tsd<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">tsd<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">td<pos:position pos:line="11" pos:column="10"/></name></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">td<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">tsd<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">port<pos:position pos:line="12" pos:column="12"/></name></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">port<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
  <comment type="block" pos:line="13" pos:column="3">/* Treat the request as done until the thread actually starts so any early
   * cleanup gets done properly.
   */</comment>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">tsd<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">done<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">HAVE_GETADDRINFO<pos:position pos:line="17" pos:column="24"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">DEBUGASSERT<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">hints<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">tsd<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">hints<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">hints<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">(<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">void<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">)<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">hints<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">tsd<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">mtx<pos:position pos:line="24" pos:column="11"/></name></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">malloc<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><sizeof pos:line="24" pos:column="21">sizeof<argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">curl_mutex_t<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name><name pos:line="25" pos:column="6">tsd<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">mtx<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
    <block type="pseudo"><goto pos:line="26" pos:column="5">goto <name pos:line="26" pos:column="10">err_exit<pos:position pos:line="26" pos:column="18"/></name>;<pos:position pos:line="26" pos:column="19"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">Curl_mutex_init<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name><name pos:line="28" pos:column="19">tsd<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">mtx<pos:position pos:line="28" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">tsd<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">sock_error<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">CURL_ASYNC_SUCCESS<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* Copying hostname string because original can be destroyed by parent
   * thread during gethostbyname execution.
   */</comment>
  <expr_stmt><expr><name><name pos:line="35" pos:column="3">tsd<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">hostname<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">strdup<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">hostname<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><operator pos:line="36" pos:column="6">!<pos:position pos:line="36" pos:column="7"/></operator><name><name pos:line="36" pos:column="7">tsd<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">hostname<pos:position pos:line="36" pos:column="20"/></name></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
    <block type="pseudo"><goto pos:line="37" pos:column="5">goto <name pos:line="37" pos:column="10">err_exit<pos:position pos:line="37" pos:column="18"/></name>;<pos:position pos:line="37" pos:column="19"/></goto></block></then></if>

  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">1<pos:position pos:line="39" pos:column="11"/></literal></expr>;<pos:position pos:line="39" pos:column="12"/></return>

 <label><name pos:line="41" pos:column="2">err_exit<pos:position pos:line="41" pos:column="10"/></name>:<pos:position pos:line="41" pos:column="11"/></label>
  <comment type="block" pos:line="42" pos:column="3">/* Memory allocation failed */</comment>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">destroy_thread_sync_data<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">tsd<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
  <return pos:line="44" pos:column="3">return <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

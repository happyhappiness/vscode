<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2444_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">close_one<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">ssl_connect_data<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">connssl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                      <parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">connectdata<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">conn<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">sockindex<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name><name pos:line="4" pos:column="6">BACKEND<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">handle<pos:position pos:line="4" pos:column="21"/></name></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">gskit_status<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name><name pos:line="5" pos:column="18">conn<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">data<pos:position pos:line="5" pos:column="28"/></name></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="30">gsk_secure_soc_close<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><operator pos:line="5" pos:column="51">&amp;<pos:position pos:line="5" pos:column="56"/></operator><name><name pos:line="5" pos:column="52">BACKEND<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">handle<pos:position pos:line="5" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></argument>,
              <argument><expr><literal type="string" pos:line="6" pos:column="15">"gsk_secure_soc_close()"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Last chance to drain output. */</comment>
    <while pos:line="8" pos:column="5">while<condition pos:line="8" pos:column="10">(<expr><call><name pos:line="8" pos:column="11">pipe_ssloverssl<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">conn<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">sockindex<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">SOS_WRITE<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call> <operator pos:line="8" pos:column="55">&gt;<pos:position pos:line="8" pos:column="59"/></operator> <literal type="number" pos:line="8" pos:column="57">0<pos:position pos:line="8" pos:column="58"/></literal></expr>)<pos:position pos:line="8" pos:column="59"/></condition>
      <block type="pseudo"><empty_stmt pos:line="9" pos:column="7">;<pos:position pos:line="9" pos:column="8"/></empty_stmt></block></while>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">BACKEND<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">handle<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">gsk_handle<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name><name pos:line="11" pos:column="8">BACKEND<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">localfd<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">&gt;=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">close<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name><name pos:line="12" pos:column="13">BACKEND<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">localfd<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">BACKEND<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">localfd<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">-<pos:position pos:line="13" pos:column="27"/></operator><literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name><name pos:line="15" pos:column="8">BACKEND<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">remotefd<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">&gt;=<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">close<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">BACKEND<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">remotefd<pos:position pos:line="16" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">BACKEND<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">remotefd<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">-<pos:position pos:line="17" pos:column="28"/></operator><literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name><name pos:line="20" pos:column="6">BACKEND<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">iocport<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">&gt;=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">close_async_handshake<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">connssl<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

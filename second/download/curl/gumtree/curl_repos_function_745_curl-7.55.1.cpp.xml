<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_745_curl-7.55.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">curl_socket_t<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">open_sock<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ctx<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">curlsocktype<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">purpose<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">curl_sockaddr<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">address<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <block pos:line="2" pos:column="63">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><name pos:line="3" pos:column="6">cur_size<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">==<pos:position pos:line="3" pos:column="17"/></operator> <operator pos:line="3" pos:column="18">-<pos:position pos:line="3" pos:column="19"/></operator><literal type="number" pos:line="3" pos:column="19">1<pos:position pos:line="3" pos:column="20"/></literal></expr>)<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21"> <block pos:line="3" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">fail<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="string" pos:line="4" pos:column="10">"not fuzzing"<pos:position pos:line="4" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">server_fd<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">-<pos:position pos:line="6" pos:column="20"/></operator><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal> <operator pos:line="6" pos:column="22">||<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">client_fd<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">!=<pos:position pos:line="6" pos:column="37"/></operator> <operator pos:line="6" pos:column="38">-<pos:position pos:line="6" pos:column="39"/></operator><literal type="number" pos:line="6" pos:column="39">1<pos:position pos:line="6" pos:column="40"/></literal></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41"> <block pos:line="6" pos:column="42">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">fail<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><literal type="string" pos:line="7" pos:column="10">"already connected"<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name><name pos:line="9" pos:column="7">fds<pos:position pos:line="9" pos:column="10"/></name><index pos:line="9" pos:column="10">[<expr><literal type="number" pos:line="9" pos:column="11">2<pos:position pos:line="9" pos:column="12"/></literal></expr>]<pos:position pos:line="9" pos:column="13"/></index></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><call><name pos:line="10" pos:column="6">socketpair<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">AF_UNIX<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">SOCK_STREAM<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">fds<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">fail<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><literal type="string" pos:line="11" pos:column="10">"socketpair"<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="13" pos:column="3">server_fd<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">fds<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>]<pos:position pos:line="13" pos:column="21"/></index></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">client_fd<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name><name pos:line="14" pos:column="15">fds<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>]<pos:position pos:line="14" pos:column="21"/></index></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><call><name pos:line="15" pos:column="6">write<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">server_fd<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">cur_data<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">cur_size<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">!=<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">cur_size<pos:position pos:line="15" pos:column="54"/></name></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55"> <block pos:line="15" pos:column="56">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fail<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><literal type="string" pos:line="16" pos:column="10">"write"<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><call><name pos:line="18" pos:column="6">shutdown<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">server_fd<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">SHUT_WR<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fail<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><literal type="string" pos:line="19" pos:column="10">"shutdown"<pos:position pos:line="19" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">client_fd<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

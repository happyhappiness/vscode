<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_958_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">homedir<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">home<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">home<pos:position pos:line="5" pos:column="7"/></name> <operator pos:line="5" pos:column="8">=<pos:position pos:line="5" pos:column="9"/></operator> <call><name pos:line="5" pos:column="10">GetEnv<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><literal type="string" pos:line="5" pos:column="17">"CURL_HOME"<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">FALSE<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">home<pos:position pos:line="6" pos:column="10"/></name></expr>)<pos:position pos:line="6" pos:column="11"/></condition><then pos:line="6" pos:column="11">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">home<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">home<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">GetEnv<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="string" pos:line="9" pos:column="17">"HOME"<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">FALSE<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">home<pos:position pos:line="10" pos:column="10"/></name></expr>)<pos:position pos:line="10" pos:column="11"/></condition><then pos:line="10" pos:column="11">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">home<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">HAVE_GETPWUID<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call> <operator pos:line="13" pos:column="28">&amp;&amp;<pos:position pos:line="13" pos:column="38"/></operator> <call><name pos:line="13" pos:column="31">defined<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">HAVE_GETEUID<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></cpp:if>
 <block pos:line="14" pos:column="2">{
   <decl_stmt><decl><type><name><name pos:line="15" pos:column="4">struct<pos:position pos:line="15" pos:column="10"/></name> <name pos:line="15" pos:column="11">passwd<pos:position pos:line="15" pos:column="17"/></name></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">pw<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><call><name pos:line="15" pos:column="24">getpwuid<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><call><name pos:line="15" pos:column="33">geteuid<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">()<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="44"/></decl_stmt>

   <if pos:line="17" pos:column="4">if<condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">pw<pos:position pos:line="17" pos:column="9"/></name></expr>)<pos:position pos:line="17" pos:column="10"/></condition><then pos:line="17" pos:column="10"> <block pos:line="17" pos:column="11">{
     <expr_stmt><expr><name pos:line="18" pos:column="6">home<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name><name pos:line="18" pos:column="13">pw<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">pw_dir<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
     <if pos:line="19" pos:column="6">if<condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">home<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&amp;&amp;<pos:position pos:line="19" pos:column="24"/></operator> <name><name pos:line="19" pos:column="17">home<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>]<pos:position pos:line="19" pos:column="24"/></index></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
       <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="8">home<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">strdup<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">home<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></then>
     <else pos:line="21" pos:column="6">else
       <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="8">home<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt></block></else></if>
   }<pos:position pos:line="23" pos:column="5"/></block></then></if>
 }<pos:position pos:line="24" pos:column="3"/></block>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="25" pos:column="8">/* PWD-stuff */</comment>
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">WIN32<pos:position pos:line="26" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="27" pos:column="3">home<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">GetEnv<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><literal type="string" pos:line="27" pos:column="17">"APPDATA"<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">TRUE<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">home<pos:position pos:line="28" pos:column="11"/></name></expr>)<pos:position pos:line="28" pos:column="12"/></condition><then pos:line="28" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">home<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">GetEnv<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><literal type="string" pos:line="29" pos:column="19">"%USERPROFILE%\\Application Data"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">TRUE<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt></block></then></if> <comment type="block" pos:line="29" pos:column="61">/* Normally only
                                                               on Win-2K/XP */</comment>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="31" pos:column="8">/* WIN32 */</comment>
  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">home<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

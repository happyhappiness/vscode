<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1496_curl-7.55.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_connect<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">bool<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">done<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">tftp_state_data_t<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">state<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">blksize<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">rc<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">blksize<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">TFTP_BLKSIZE_DEFAULT<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">state<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name><name pos:line="8" pos:column="11">conn<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">proto<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">tftpc<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <call><name pos:line="8" pos:column="31">calloc<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><literal type="number" pos:line="8" pos:column="38">1<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="41">sizeof<argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">tftp_state_data_t<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">state<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* alloc pkt buffers based on specified blksize */</comment>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name><name pos:line="13" pos:column="6">conn<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">data<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">set<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">tftp_blksize<pos:position pos:line="13" pos:column="34"/></name></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">blksize<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator><name><name pos:line="14" pos:column="20">conn<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">data<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">set<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">.<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">tftp_blksize<pos:position pos:line="14" pos:column="48"/></name></name></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">blksize<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&gt;<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="18">TFTP_BLKSIZE_MAX<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">||<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">blksize<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">&lt;<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="48">TFTP_BLKSIZE_MIN<pos:position pos:line="15" pos:column="64"/></name></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">CURLE_TFTP_ILLEGAL<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name><name pos:line="19" pos:column="7">state<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">rpacket<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">data<pos:position pos:line="19" pos:column="26"/></name></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">state<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">rpacket<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">data<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <call><name pos:line="20" pos:column="27">calloc<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><literal type="number" pos:line="20" pos:column="34">1<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">blksize<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">+<pos:position pos:line="20" pos:column="46"/></operator> <literal type="number" pos:line="20" pos:column="47">2<pos:position pos:line="20" pos:column="48"/></literal> <operator pos:line="20" pos:column="49">+<pos:position pos:line="20" pos:column="50"/></operator> <literal type="number" pos:line="20" pos:column="51">2<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">rpacket<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">data<pos:position pos:line="22" pos:column="28"/></name></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name><name pos:line="26" pos:column="7">state<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">spacket<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">.<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">data<pos:position pos:line="26" pos:column="26"/></name></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">state<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">spacket<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">data<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <call><name pos:line="27" pos:column="27">calloc<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">blksize<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">+<pos:position pos:line="27" pos:column="46"/></operator> <literal type="number" pos:line="27" pos:column="47">2<pos:position pos:line="27" pos:column="48"/></literal> <operator pos:line="27" pos:column="49">+<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">2<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name><name pos:line="29" pos:column="9">state<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">spacket<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">data<pos:position pos:line="29" pos:column="28"/></name></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* we don't keep TFTP connections up basically because there's none or very
   * little gain for UDP */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">connclose<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">conn<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"TFTP"<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="37" pos:column="3">state<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">conn<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">conn<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">state<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">sockfd<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name><name pos:line="38" pos:column="19">state<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">conn<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">sock<pos:position pos:line="38" pos:column="36"/></name><index pos:line="38" pos:column="36">[<expr><name pos:line="38" pos:column="37">FIRSTSOCKET<pos:position pos:line="38" pos:column="48"/></name></expr>]<pos:position pos:line="38" pos:column="49"/></index></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">state<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">state<pos:position pos:line="39" pos:column="15"/></name></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">TFTP_STATE_START<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">state<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">error<pos:position pos:line="40" pos:column="15"/></name></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">TFTP_ERR_NONE<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">state<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">blksize<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">TFTP_BLKSIZE_DEFAULT<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">state<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">-&gt;<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="10">requested_blksize<pos:position pos:line="42" pos:column="27"/></name></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">blksize<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="44" pos:column="3">(<pos:position pos:line="44" pos:column="4"/></operator><operator pos:line="44" pos:column="4">(<pos:position pos:line="44" pos:column="5"/></operator>struct <name pos:line="44" pos:column="12">sockaddr<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">*<pos:position pos:line="44" pos:column="22"/></operator><operator pos:line="44" pos:column="22">)<pos:position pos:line="44" pos:column="23"/></operator><operator pos:line="44" pos:column="23">&amp;<pos:position pos:line="44" pos:column="28"/></operator><name><name pos:line="44" pos:column="24">state<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">local_addr<pos:position pos:line="44" pos:column="41"/></name></name><operator pos:line="44" pos:column="41">)<pos:position pos:line="44" pos:column="42"/></operator><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">sa_family<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">=<pos:position pos:line="44" pos:column="55"/></operator>
    <call pos:line="45" pos:column="5">(<name pos:line="45" pos:column="6">unsigned<pos:position pos:line="45" pos:column="14"/></name> <name pos:line="45" pos:column="15">short<pos:position pos:line="45" pos:column="20"/></name>)<argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">conn<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">ip_addr<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">ai_family<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">tftp_set_timeouts<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">state<pos:position pos:line="47" pos:column="26"/></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">!<pos:position pos:line="49" pos:column="7"/></operator><name><name pos:line="49" pos:column="7">conn<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">bits<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">bound<pos:position pos:line="49" pos:column="23"/></name></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
    <comment type="block" pos:line="50" pos:column="5">/* If not already bound, bind to any interface, random UDP port. If it is
     * reused or a custom local port was desired, this has already been done!
     *
     * We once used the size of the local_addr struct as the third argument
     * for bind() to better work with IPv6 or whatever size the struct could
     * have, but we learned that at least Tru64, AIX and IRIX *requires* the
     * size of that argument to match the exact size of a 'sockaddr_in' struct
     * when running IPv4-only.
     *
     * Therefore we use the size from the address we connected to, which we
     * assume uses the same IP version and thus hopefully this works for both
     * IPv4 and IPv6...
     */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">rc<pos:position pos:line="63" pos:column="7"/></name> <operator pos:line="63" pos:column="8">=<pos:position pos:line="63" pos:column="9"/></operator> <call><name pos:line="63" pos:column="10">bind<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><expr><name><name pos:line="63" pos:column="15">state<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">sockfd<pos:position pos:line="63" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="30">(<pos:position pos:line="63" pos:column="31"/></operator>struct <name pos:line="63" pos:column="38">sockaddr<pos:position pos:line="63" pos:column="46"/></name> <operator pos:line="63" pos:column="47">*<pos:position pos:line="63" pos:column="48"/></operator><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator><operator pos:line="63" pos:column="49">&amp;<pos:position pos:line="63" pos:column="54"/></operator><name><name pos:line="63" pos:column="50">state<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">-&gt;<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="57">local_addr<pos:position pos:line="63" pos:column="67"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="64" pos:column="15">conn<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">-&gt;<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="21">ip_addr<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">ai_addrlen<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="42"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name pos:line="65" pos:column="8">rc<pos:position pos:line="65" pos:column="10"/></name></expr>)<pos:position pos:line="65" pos:column="11"/></condition><then pos:line="65" pos:column="11"> <block pos:line="65" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">failf<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name><name pos:line="66" pos:column="13">conn<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">-&gt;<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="19">data<pos:position pos:line="66" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="25">"bind() failed; %s"<pos:position pos:line="66" pos:column="44"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="67" pos:column="13">Curl_strerror<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">conn<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="33">SOCKERRNO<pos:position pos:line="67" pos:column="42"/></name></expr></argument>)<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="45"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><name pos:line="68" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="68" pos:column="35"/></name></expr>;<pos:position pos:line="68" pos:column="36"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">conn<pos:position pos:line="70" pos:column="9"/></name><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">bits<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">.<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">bound<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">TRUE<pos:position pos:line="70" pos:column="28"/></name></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">Curl_pgrsStartNow<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name><name pos:line="73" pos:column="21">conn<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">data<pos:position pos:line="73" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="75" pos:column="3">*<pos:position pos:line="75" pos:column="4"/></operator><name pos:line="75" pos:column="4">done<pos:position pos:line="75" pos:column="8"/></name> <operator pos:line="75" pos:column="9">=<pos:position pos:line="75" pos:column="10"/></operator> <name pos:line="75" pos:column="11">TRUE<pos:position pos:line="75" pos:column="15"/></name></expr>;<pos:position pos:line="75" pos:column="16"/></expr_stmt>

  <return pos:line="77" pos:column="3">return <expr><name pos:line="77" pos:column="10">CURLE_OK<pos:position pos:line="77" pos:column="18"/></name></expr>;<pos:position pos:line="77" pos:column="19"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

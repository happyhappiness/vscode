<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_899.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_conncontrol<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">bool<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">closeit<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">reason<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><call><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="5" pos:column="3">(<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">void<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">)<pos:position pos:line="5" pos:column="9"/></operator> <name pos:line="5" pos:column="10">reason<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">infof<pos:position pos:line="8" pos:column="8"/></name><argument_list pos:line="8" pos:column="8">(<argument><expr><name><name pos:line="8" pos:column="9">conn<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">data<pos:position pos:line="8" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="21">"Marked for [%s]: %s\n"<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="8" pos:column="46">closeit<pos:position pos:line="8" pos:column="53"/></name></expr>?<pos:position pos:line="8" pos:column="54"/></condition><then><expr><literal type="string" pos:line="8" pos:column="54">"closure"<pos:position pos:line="8" pos:column="63"/></literal></expr></then><else pos:line="8" pos:column="63">:<expr><literal type="string" pos:line="8" pos:column="64">"keep alive"<pos:position pos:line="8" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><name pos:line="9" pos:column="9">reason<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">conn<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">bits<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">close<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">closeit<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt> <comment type="block" pos:line="11" pos:column="31">/* the only place in the source code that should
                                 assign this bit */</comment>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_154_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_disconnect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><operator pos:line="3" pos:column="6">!<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">conn<pos:position pos:line="3" pos:column="11"/></name></expr>)<pos:position pos:line="3" pos:column="12"/></condition><then pos:line="3" pos:column="12">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">CURLE_OK<pos:position pos:line="4" pos:column="20"/></name></expr>;<pos:position pos:line="4" pos:column="21"/></return></block></then></if> <comment type="block" pos:line="4" pos:column="22">/* this is closed and fine already */</comment>

  <comment type="block" pos:line="6" pos:column="3">/*
   * The range string is usually freed in curl_done(), but we might
   * get here *instead* if we fail prematurely. Thus we need to be able
   * to free this resource here as well.
   */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">conn<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">bits<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">rangestringalloc<pos:position pos:line="11" pos:column="33"/></name></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">free<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name><name pos:line="12" pos:column="10">conn<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">range<pos:position pos:line="12" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">conn<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">bits<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">rangestringalloc<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">FALSE<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">-<pos:position pos:line="16" pos:column="7"/></operator><literal type="number" pos:line="16" pos:column="7">1<pos:position pos:line="16" pos:column="8"/></literal> <operator pos:line="16" pos:column="9">!=<pos:position pos:line="16" pos:column="11"/></operator> <name><name pos:line="16" pos:column="12">conn<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">connectindex<pos:position pos:line="16" pos:column="30"/></name></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> <block pos:line="16" pos:column="32">{
    <comment type="block" pos:line="17" pos:column="5">/* unlink ourselves! */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">infof<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name><name pos:line="18" pos:column="11">conn<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">data<pos:position pos:line="18" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"Closing live connection (#%d)\n"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="58">conn<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">-&gt;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="64">connectindex<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">state<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">connects<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name><name pos:line="19" pos:column="32">conn<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">connectindex<pos:position pos:line="19" pos:column="50"/></name></name></expr>]<pos:position pos:line="19" pos:column="51"/></index></name> <operator pos:line="19" pos:column="52">=<pos:position pos:line="19" pos:column="53"/></operator> <name pos:line="19" pos:column="54">NULL<pos:position pos:line="19" pos:column="58"/></name></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">conn<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">curl_disconnect<pos:position pos:line="22" pos:column="27"/></name></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
    <comment type="block" pos:line="23" pos:column="5">/* This is set if protocol-specific cleanups should be made */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="5">conn<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">curl_disconnect<pos:position pos:line="24" pos:column="26"/></name></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">conn<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt></block></then></if>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name><name pos:line="26" pos:column="6">conn<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">proto<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">generic<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">free<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><name><name pos:line="27" pos:column="10">conn<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">proto<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">generic<pos:position pos:line="27" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">ENABLE_IPV6<pos:position pos:line="29" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name><name pos:line="30" pos:column="6">conn<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">hp<pos:position pos:line="30" pos:column="14"/></name></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15"> <comment type="block" pos:line="30" pos:column="16">/* host name info */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">freeaddrinfo<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name><name pos:line="31" pos:column="18">conn<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">hp<pos:position pos:line="31" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt></block></then></if>
<cpp:else pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">else<pos:position pos:line="32" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name><name pos:line="33" pos:column="6">conn<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">hostent_buf<pos:position pos:line="33" pos:column="23"/></name></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <comment type="block" pos:line="33" pos:column="25">/* host name info */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="5">free<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><name><name pos:line="34" pos:column="10">conn<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">hostent_buf<pos:position pos:line="34" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt></block></then></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name><name pos:line="37" pos:column="6">conn<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">newurl<pos:position pos:line="37" pos:column="18"/></name></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">free<pos:position pos:line="38" pos:column="9"/></name><argument_list pos:line="38" pos:column="9">(<argument><expr><name><name pos:line="38" pos:column="10">conn<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">newurl<pos:position pos:line="38" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt></block></then></if>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name><name pos:line="40" pos:column="6">conn<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">path<pos:position pos:line="40" pos:column="16"/></name></name></expr>)<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17"> <comment type="block" pos:line="40" pos:column="18">/* the URL path part */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">free<pos:position pos:line="41" pos:column="9"/></name><argument_list pos:line="41" pos:column="9">(<argument><expr><name><name pos:line="41" pos:column="10">conn<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">path<pos:position pos:line="41" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">USE_SSLEAY<pos:position pos:line="43" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">Curl_SSL_Close<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">conn<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="45" pos:column="8">/* USE_SSLEAY */</comment>

  <comment type="block" pos:line="47" pos:column="3">/* close possibly still open sockets */</comment>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><operator pos:line="48" pos:column="6">-<pos:position pos:line="48" pos:column="7"/></operator><literal type="number" pos:line="48" pos:column="7">1<pos:position pos:line="48" pos:column="8"/></literal> <operator pos:line="48" pos:column="9">!=<pos:position pos:line="48" pos:column="11"/></operator> <name><name pos:line="48" pos:column="12">conn<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">secondarysocket<pos:position pos:line="48" pos:column="33"/></name></name></expr>)<pos:position pos:line="48" pos:column="34"/></condition><then pos:line="48" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">sclose<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name><name pos:line="49" pos:column="12">conn<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">secondarysocket<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt></block></then></if>
  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><operator pos:line="50" pos:column="6">-<pos:position pos:line="50" pos:column="7"/></operator><literal type="number" pos:line="50" pos:column="7">1<pos:position pos:line="50" pos:column="8"/></literal> <operator pos:line="50" pos:column="9">!=<pos:position pos:line="50" pos:column="11"/></operator> <name><name pos:line="50" pos:column="12">conn<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">firstsocket<pos:position pos:line="50" pos:column="29"/></name></name></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">sclose<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><name><name pos:line="51" pos:column="12">conn<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">firstsocket<pos:position pos:line="51" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt></block></then></if>

  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">conn<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">allocptr<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">proxyuserpwd<pos:position pos:line="53" pos:column="33"/></name></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="5">free<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name><name pos:line="54" pos:column="10">conn<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">allocptr<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">proxyuserpwd<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name><name pos:line="55" pos:column="6">conn<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">allocptr<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">uagent<pos:position pos:line="55" pos:column="27"/></name></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="5">free<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name><name pos:line="56" pos:column="10">conn<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">allocptr<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">.<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">uagent<pos:position pos:line="56" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt></block></then></if>
  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><name><name pos:line="57" pos:column="6">conn<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">allocptr<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">.<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">userpwd<pos:position pos:line="57" pos:column="28"/></name></name></expr>)<pos:position pos:line="57" pos:column="29"/></condition><then pos:line="57" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">free<pos:position pos:line="58" pos:column="9"/></name><argument_list pos:line="58" pos:column="9">(<argument><expr><name><name pos:line="58" pos:column="10">conn<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">allocptr<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">.<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">userpwd<pos:position pos:line="58" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt></block></then></if>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name><name pos:line="59" pos:column="6">conn<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">allocptr<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">rangeline<pos:position pos:line="59" pos:column="30"/></name></name></expr>)<pos:position pos:line="59" pos:column="31"/></condition><then pos:line="59" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name><name pos:line="60" pos:column="10">conn<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">allocptr<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">.<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">rangeline<pos:position pos:line="60" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name><name pos:line="61" pos:column="6">conn<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">allocptr<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">ref<pos:position pos:line="61" pos:column="24"/></name></name></expr>)<pos:position pos:line="61" pos:column="25"/></condition><then pos:line="61" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">free<pos:position pos:line="62" pos:column="9"/></name><argument_list pos:line="62" pos:column="9">(<argument><expr><name><name pos:line="62" pos:column="10">conn<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">allocptr<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">.<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">ref<pos:position pos:line="62" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt></block></then></if>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">(<expr><name><name pos:line="63" pos:column="6">conn<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">allocptr<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">.<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">cookie<pos:position pos:line="63" pos:column="27"/></name></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">free<pos:position pos:line="64" pos:column="9"/></name><argument_list pos:line="64" pos:column="9">(<argument><expr><name><name pos:line="64" pos:column="10">conn<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">allocptr<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">.<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="25">cookie<pos:position pos:line="64" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt></block></then></if>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name><name pos:line="65" pos:column="6">conn<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">allocptr<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">host<pos:position pos:line="65" pos:column="25"/></name></name></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">free<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><name><name pos:line="66" pos:column="10">conn<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">allocptr<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">.<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">host<pos:position pos:line="66" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt></block></then></if>

  <if pos:line="68" pos:column="3">if<condition pos:line="68" pos:column="5">(<expr><name><name pos:line="68" pos:column="6">conn<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">proxyhost<pos:position pos:line="68" pos:column="21"/></name></name></expr>)<pos:position pos:line="68" pos:column="22"/></condition><then pos:line="68" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="5">free<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><name><name pos:line="69" pos:column="10">conn<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">proxyhost<pos:position pos:line="69" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="71" pos:column="3">free<pos:position pos:line="71" pos:column="7"/></name><argument_list pos:line="71" pos:column="7">(<argument><expr><name pos:line="71" pos:column="8">conn<pos:position pos:line="71" pos:column="12"/></name></expr></argument>)<pos:position pos:line="71" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="14"/></expr_stmt> <comment type="block" pos:line="71" pos:column="15">/* free all the connection oriented data */</comment>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">CURLE_OK<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

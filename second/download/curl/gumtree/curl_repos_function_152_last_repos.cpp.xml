<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_152_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">ftpurl<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[]<pos:position pos:line="3" pos:column="16"/></index></name> <init pos:line="3" pos:column="17">= <expr><literal type="string" pos:line="3" pos:column="19">"ftp://ftp.example.com/gnu/binutils/binutils-2.19.1.tar.bz2"<pos:position pos:line="3" pos:column="79"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="80"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">curl<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">res<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">long<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">filetime<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><operator pos:line="6" pos:column="19">-<pos:position pos:line="6" pos:column="20"/></operator><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">double<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">filesize<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0.0<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">filename<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><call><name pos:line="8" pos:column="26">strrchr<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">ftpurl<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="42">'/'<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">+<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">1<pos:position pos:line="8" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">curl_global_init<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">curl<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">curl_easy_init<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">()<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">curl<pos:position pos:line="13" pos:column="10"/></name></expr>)<pos:position pos:line="13" pos:column="11"/></condition><then pos:line="13" pos:column="11"> <block pos:line="13" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_easy_setopt<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">curl<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">CURLOPT_URL<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">ftpurl<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* No download if the file */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">curl_easy_setopt<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">curl<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">CURLOPT_NOBODY<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="44">1L<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* Ask for filetime */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">curl_easy_setopt<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">curl<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">CURLOPT_FILETIME<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="46">1L<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* No header output: TODO 14.1 http-style HEAD output for ftp */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_easy_setopt<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">curl<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">CURLOPT_HEADERFUNCTION<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">throw_away<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">curl_easy_setopt<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">curl<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">CURLOPT_HEADER<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="44">0L<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
    <comment type="block" pos:line="22" pos:column="5">/* Switch on full protocol/debug output */</comment>
    <comment type="block" pos:line="23" pos:column="5">/* curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L); */</comment>

    <expr_stmt><expr><name pos:line="25" pos:column="5">res<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">curl_easy_perform<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">curl<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">CURLE_OK<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">res<pos:position pos:line="27" pos:column="23"/></name></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24"> <block pos:line="27" pos:column="25">{
      <comment type="block" pos:line="28" pos:column="7">/* https://curl.haxx.se/libcurl/c/curl_easy_getinfo.html */</comment>
      <expr_stmt><expr><name pos:line="29" pos:column="7">res<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">curl_easy_getinfo<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">curl<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">CURLINFO_FILETIME<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="56">&amp;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="57">filetime<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">CURLE_OK<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">res<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator> <operator pos:line="30" pos:column="28">&amp;&amp;<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">filetime<pos:position pos:line="30" pos:column="40"/></name> <operator pos:line="30" pos:column="41">&gt;=<pos:position pos:line="30" pos:column="46"/></operator> <literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47"> <block pos:line="30" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">time_t<pos:position pos:line="31" pos:column="15"/></name></type> <name pos:line="31" pos:column="16">file_time<pos:position pos:line="31" pos:column="25"/></name> <init pos:line="31" pos:column="26">= <expr><operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">time_t<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">filetime<pos:position pos:line="31" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">printf<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"filetime %s: %s"<pos:position pos:line="32" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">filename<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="45">ctime<pos:position pos:line="32" pos:column="50"/></name><argument_list pos:line="32" pos:column="50">(<argument><expr><operator pos:line="32" pos:column="51">&amp;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="52">file_time<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="34" pos:column="7">res<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">curl_easy_getinfo<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">curl<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">CURLINFO_CONTENT_LENGTH_DOWNLOAD<pos:position pos:line="34" pos:column="69"/></name></expr></argument>,
                              <argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">filesize<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">CURLE_OK<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">res<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="28">&amp;&amp;<pos:position pos:line="36" pos:column="38"/></operator> <operator pos:line="36" pos:column="31">(<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">filesize<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">&gt;<pos:position pos:line="36" pos:column="44"/></operator><literal type="number" pos:line="36" pos:column="41">0.0<pos:position pos:line="36" pos:column="44"/></literal><operator pos:line="36" pos:column="44">)<pos:position pos:line="36" pos:column="45"/></operator></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">printf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"filesize %s: %0.0f bytes\n"<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">filename<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">filesize<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then>
    <else pos:line="39" pos:column="5">else <block pos:line="39" pos:column="10">{
      <comment type="block" pos:line="40" pos:column="7">/* we failed */</comment>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">fprintf<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">stderr<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"curl told us %d\n"<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">res<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="44" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">curl_easy_cleanup<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">curl<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="48" pos:column="3">curl_global_cleanup<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">()<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>

  <return pos:line="50" pos:column="3">return <expr><literal type="number" pos:line="50" pos:column="10">0<pos:position pos:line="50" pos:column="11"/></literal></expr>;<pos:position pos:line="50" pos:column="12"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

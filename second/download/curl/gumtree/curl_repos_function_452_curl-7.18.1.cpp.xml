<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_452_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">Curl_qsossl_init_session<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">SessionHandle<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type> <name pos:line="1" pos:column="65">data<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>

<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type> <name pos:line="5" pos:column="10">certname<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">SSLInit<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">initstr<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SSLInitApp<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">initappstr<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Initialize the job for SSL according to the current parameters.
   * QsoSSL offers two ways to do it: SSL_Init_Application() that uses an
   *  application identifier to select certificates in the main certificate
   *  store, and SSL_Init() that uses named keyring files and a password.
   * It is not possible to have different keyrings for the CAs and the
   *  local certificate. We thus use the certificate name to identify the
   *  keyring if given, else the CA file name.
   * If the key file name is given, it is taken as the password for the
   *  keyring in certificate file.
   * We first try to SSL_Init_Application(), then SSL_Init() if it failed.
   */</comment>

  <expr_stmt><expr><name pos:line="21" pos:column="3">certname<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">data<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">set<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">str<pos:position pos:line="21" pos:column="27"/></name><index pos:line="21" pos:column="27">[<expr><name pos:line="21" pos:column="28">STRING_CERT<pos:position pos:line="21" pos:column="39"/></name></expr>]<pos:position pos:line="21" pos:column="40"/></index></name></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">certname<pos:position pos:line="23" pos:column="15"/></name></expr>)<pos:position pos:line="23" pos:column="16"/></condition><then pos:line="23" pos:column="16"> <block pos:line="23" pos:column="17">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">certname<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name><name pos:line="24" pos:column="16">data<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">set<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">str<pos:position pos:line="24" pos:column="29"/></name><index pos:line="24" pos:column="29">[<expr><name pos:line="24" pos:column="30">STRING_SSL_CAFILE<pos:position pos:line="24" pos:column="47"/></name></expr>]<pos:position pos:line="24" pos:column="48"/></index></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><operator pos:line="26" pos:column="8">!<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">certname<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18">
      <block type="pseudo"><return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">CURLE_OK<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></return></block></then></if>          <comment type="block" pos:line="27" pos:column="33">/* Use previous setup. */</comment>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">memset<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">char<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator> <operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="20">initappstr<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="32">0<pos:position pos:line="30" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="35">sizeof <name pos:line="30" pos:column="42">initappstr<pos:position pos:line="30" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">initappstr<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">applicationID<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">certname<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">initappstr<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">applicationIDLen<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">strlen<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">certname<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">initappstr<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">protocol<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">TLSV1_SSLV3<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="34" pos:column="3">initappstr<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">.<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">sessionType<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">SSL_REGISTERED_AS_CLIENT<pos:position pos:line="34" pos:column="52"/></name></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name pos:line="35" pos:column="3">rc<pos:position pos:line="35" pos:column="5"/></name> <operator pos:line="35" pos:column="6">=<pos:position pos:line="35" pos:column="7"/></operator> <call><name pos:line="35" pos:column="8">SSL_Init_Application<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="30">initappstr<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name pos:line="37" pos:column="6">rc<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">==<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">SSL_ERROR_NOT_REGISTERED<pos:position pos:line="37" pos:column="36"/></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <block pos:line="37" pos:column="38">{
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">initstr<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">keyringFileName<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">certname<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">initstr<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">keyringPassword<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name><name pos:line="39" pos:column="31">data<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">set<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">.<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">str<pos:position pos:line="39" pos:column="44"/></name><index pos:line="39" pos:column="44">[<expr><name pos:line="39" pos:column="45">STRING_KEY<pos:position pos:line="39" pos:column="55"/></name></expr>]<pos:position pos:line="39" pos:column="56"/></index></name></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">initstr<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">cipherSuiteList<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">NULL<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>    <comment type="block" pos:line="40" pos:column="40">/* Use default. */</comment>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">initstr<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">.<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">cipherSuiteListLen<pos:position pos:line="41" pos:column="31"/></name></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">rc<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <call><name pos:line="42" pos:column="10">SSL_Init<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><operator pos:line="42" pos:column="19">&amp;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="20">initstr<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

  <switch pos:line="45" pos:column="3">switch <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">rc<pos:position pos:line="45" pos:column="13"/></name></expr>)<pos:position pos:line="45" pos:column="14"/></condition> <block pos:line="45" pos:column="15">{

  <case pos:line="47" pos:column="3">case <expr><literal type="number" pos:line="47" pos:column="8">0<pos:position pos:line="47" pos:column="9"/></literal></expr>:<pos:position pos:line="47" pos:column="10"/></case>                             <comment type="block" pos:line="47" pos:column="39">/* No error. */</comment>
    <break pos:line="48" pos:column="5">break;<pos:position pos:line="48" pos:column="11"/></break>

  <case pos:line="50" pos:column="3">case <expr><name pos:line="50" pos:column="8">SSL_ERROR_IO<pos:position pos:line="50" pos:column="20"/></name></expr>:<pos:position pos:line="50" pos:column="21"/></case>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">failf<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">data<pos:position pos:line="51" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="17">"SSL_Init() I/O error: %s"<pos:position pos:line="51" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="45">strerror<pos:position pos:line="51" pos:column="53"/></name><argument_list pos:line="51" pos:column="53">(<argument><expr><name pos:line="51" pos:column="54">errno<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></return>

  <case pos:line="54" pos:column="3">case <expr><name pos:line="54" pos:column="8">SSL_ERROR_BAD_CIPHER_SUITE<pos:position pos:line="54" pos:column="34"/></name></expr>:<pos:position pos:line="54" pos:column="35"/></case>
    <return pos:line="55" pos:column="5">return <expr><name pos:line="55" pos:column="12">CURLE_SSL_CIPHER<pos:position pos:line="55" pos:column="28"/></name></expr>;<pos:position pos:line="55" pos:column="29"/></return>

  <case pos:line="57" pos:column="3">case <expr><name pos:line="57" pos:column="8">SSL_ERROR_KEYPASSWORD_EXPIRED<pos:position pos:line="57" pos:column="37"/></name></expr>:<pos:position pos:line="57" pos:column="38"/></case>
  <case pos:line="58" pos:column="3">case <expr><name pos:line="58" pos:column="8">SSL_ERROR_NOT_REGISTERED<pos:position pos:line="58" pos:column="32"/></name></expr>:<pos:position pos:line="58" pos:column="33"/></case>
    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></return>

  <case pos:line="61" pos:column="3">case <expr><name pos:line="61" pos:column="8">SSL_ERROR_NO_KEYRING<pos:position pos:line="61" pos:column="28"/></name></expr>:<pos:position pos:line="61" pos:column="29"/></case>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">CURLE_SSL_CACERT<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></return>

  <case pos:line="64" pos:column="3">case <expr><name pos:line="64" pos:column="8">SSL_ERROR_CERT_EXPIRED<pos:position pos:line="64" pos:column="30"/></name></expr>:<pos:position pos:line="64" pos:column="31"/></case>
    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">CURLE_SSL_CERTPROBLEM<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></return>

  <default pos:line="67" pos:column="3">default:<pos:position pos:line="67" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">failf<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(<argument><expr><name pos:line="68" pos:column="11">data<pos:position pos:line="68" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="17">"SSL_Init(): %s"<pos:position pos:line="68" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="35">SSL_Strerror<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">rc<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="52">NULL<pos:position pos:line="68" pos:column="56"/></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="69" pos:column="35"/></name></expr>;<pos:position pos:line="69" pos:column="36"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></switch>

  <return pos:line="72" pos:column="3">return <expr><name pos:line="72" pos:column="10">CURLE_OK<pos:position pos:line="72" pos:column="18"/></name></expr>;<pos:position pos:line="72" pos:column="19"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

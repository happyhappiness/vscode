<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_20_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hd_src<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">file_info<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_off_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">fsize<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_slist<pos:position pos:line="9" pos:column="20"/></name></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">headerlist<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="10" pos:column="3">static<pos:position pos:line="10" pos:column="9"/></specifier> <type><specifier pos:line="10" pos:column="10">const<pos:position pos:line="10" pos:column="15"/></specifier> <name pos:line="10" pos:column="16">char<pos:position pos:line="10" pos:column="20"/></name></type> <name><name pos:line="10" pos:column="21">buf_1<pos:position pos:line="10" pos:column="26"/></name> <index pos:line="10" pos:column="27">[]<pos:position pos:line="10" pos:column="29"/></index></name> <init pos:line="10" pos:column="30">= <expr><literal type="string" pos:line="10" pos:column="32">"RNFR "<pos:position pos:line="10" pos:column="39"/></literal> <name pos:line="10" pos:column="40">UPLOAD_FILE_AS<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><specifier pos:line="11" pos:column="10">const<pos:position pos:line="11" pos:column="15"/></specifier> <name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">buf_2<pos:position pos:line="11" pos:column="26"/></name> <index pos:line="11" pos:column="27">[]<pos:position pos:line="11" pos:column="29"/></index></name> <init pos:line="11" pos:column="30">= <expr><literal type="string" pos:line="11" pos:column="32">"RNTO "<pos:position pos:line="11" pos:column="39"/></literal> <name pos:line="11" pos:column="40">RENAME_FILE_TO<pos:position pos:line="11" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* get the file size of the local file */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><call><name pos:line="14" pos:column="6">stat<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">LOCAL_FILE<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">file_info<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">printf<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"Couldnt open '%s': %s\n"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">LOCAL_FILE<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="51">strerror<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><name pos:line="15" pos:column="60">errno<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><literal type="number" pos:line="16" pos:column="12">1<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">fsize<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <operator pos:line="18" pos:column="11">(<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">curl_off_t<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">)<pos:position pos:line="18" pos:column="23"/></operator><name><name pos:line="18" pos:column="23">file_info<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">st_size<pos:position pos:line="18" pos:column="40"/></name></name></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">printf<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><literal type="string" pos:line="20" pos:column="10">"Local file size: %"<pos:position pos:line="20" pos:column="30"/></literal> <name pos:line="20" pos:column="31">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="20" pos:column="53"/></name> <literal type="string" pos:line="20" pos:column="54">" bytes.\n"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">fsize<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* get a FILE * of the same file */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">hd_src<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">fopen<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">LOCAL_FILE<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="30">"rb"<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* In windows, this will init the winsock stuff */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">curl_global_init<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* get a curl handle */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">curl<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">curl_easy_init<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">()<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">curl<pos:position pos:line="30" pos:column="10"/></name></expr>)<pos:position pos:line="30" pos:column="11"/></condition><then pos:line="30" pos:column="11"> <block pos:line="30" pos:column="12">{
    <comment type="block" pos:line="31" pos:column="5">/* build a list of commands to pass to libcurl */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">headerlist<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">curl_slist_append<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">headerlist<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">buf_1<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">headerlist<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">curl_slist_append<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">headerlist<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">buf_2<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* we want to use our own read function */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">curl_easy_setopt<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">curl<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="28">CURLOPT_READFUNCTION<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">read_callback<pos:position pos:line="36" pos:column="63"/></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/* enable uploading */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">curl_easy_setopt<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">curl<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">CURLOPT_UPLOAD<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="44">1L<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* specify target */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">curl_easy_setopt<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">curl<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="28">CURLOPT_URL<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">REMOTE_URL<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* pass in that last of FTP commands to run after the transfer */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">curl_easy_setopt<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">curl<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="28">CURLOPT_POSTQUOTE<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">headerlist<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* now specify which file to upload */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">curl_easy_setopt<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">curl<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">CURLOPT_READDATA<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">hd_src<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* Set the size of the file to upload (optional).  If you give a *_LARGE
       option you MUST make sure that the type of the passed-in argument is a
       curl_off_t. If you use CURLOPT_INFILESIZE (without _LARGE) you must
       make sure that to pass in a type 'long' argument. */</comment>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">curl_easy_setopt<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">curl<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="54" pos:column="52"/></name></expr></argument>,
                     <argument><expr><operator pos:line="55" pos:column="22">(<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">curl_off_t<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">)<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">fsize<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* Now run off and do what you've been told! */</comment>
    <expr_stmt><expr><name pos:line="58" pos:column="5">res<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">=<pos:position pos:line="58" pos:column="10"/></operator> <call><name pos:line="58" pos:column="11">curl_easy_perform<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">curl<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="59" pos:column="5">/* Check for errors */</comment>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><name pos:line="60" pos:column="8">res<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">!=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">CURLE_OK<pos:position pos:line="60" pos:column="23"/></name></expr>)<pos:position pos:line="60" pos:column="24"/></condition><then pos:line="60" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="7">fprintf<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">stderr<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="62" pos:column="15">curl_easy_strerror<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">res<pos:position pos:line="62" pos:column="37"/></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* clean up the FTP commands list */</comment>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">curl_slist_free_all<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">headerlist<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="67" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">curl_easy_cleanup<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">curl<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">fclose<pos:position pos:line="70" pos:column="9"/></name><argument_list pos:line="70" pos:column="9">(<argument><expr><name pos:line="70" pos:column="10">hd_src<pos:position pos:line="70" pos:column="16"/></name></expr></argument>)<pos:position pos:line="70" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="18"/></expr_stmt> <comment type="block" pos:line="70" pos:column="19">/* close the local file */</comment>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">curl_global_cleanup<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">()<pos:position pos:line="72" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt>
  <return pos:line="73" pos:column="3">return <expr><literal type="number" pos:line="73" pos:column="10">0<pos:position pos:line="73" pos:column="11"/></literal></expr>;<pos:position pos:line="73" pos:column="12"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

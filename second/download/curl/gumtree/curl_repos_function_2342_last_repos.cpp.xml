<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2342_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_digest_md5_message<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">Curl_easy<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">data<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">chlg64<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="3" pos:column="46">const<pos:position pos:line="3" pos:column="51"/></specifier> <name pos:line="3" pos:column="52">char<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">userp<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="4" pos:column="46">const<pos:position pos:line="4" pos:column="51"/></specifier> <name pos:line="4" pos:column="52">char<pos:position pos:line="4" pos:column="56"/></name> <modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">passwdp<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="5" pos:column="46">const<pos:position pos:line="5" pos:column="51"/></specifier> <name pos:line="5" pos:column="52">char<pos:position pos:line="5" pos:column="56"/></name> <modifier pos:line="5" pos:column="57">*<pos:position pos:line="5" pos:column="58"/></modifier></type><name pos:line="5" pos:column="58">service<pos:position pos:line="5" pos:column="65"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="6" pos:column="46">char<pos:position pos:line="6" pos:column="50"/></name> <modifier pos:line="6" pos:column="51">*<pos:position pos:line="6" pos:column="52"/></modifier><modifier pos:line="6" pos:column="52">*<pos:position pos:line="6" pos:column="53"/></modifier></type><name pos:line="6" pos:column="53">outptr<pos:position pos:line="6" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="61">size_t<pos:position pos:line="6" pos:column="67"/></name> <modifier pos:line="6" pos:column="68">*<pos:position pos:line="6" pos:column="69"/></modifier></type><name pos:line="6" pos:column="69">outlen<pos:position pos:line="6" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="76"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">CURLE_OK<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">TCHAR<pos:position pos:line="9" pos:column="8"/></name> <modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type><name pos:line="9" pos:column="10">spn<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">chlglen<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">token_max<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">input_token<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">output_token<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">CredHandle<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">credentials<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">CtxtHandle<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">context<pos:position pos:line="15" pos:column="21"/></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">PSecPkgInfo<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">SecurityPackage<pos:position pos:line="16" pos:column="30"/></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">SEC_WINNT_AUTH_IDENTITY<pos:position pos:line="17" pos:column="26"/></name></type> <name pos:line="17" pos:column="27">identity<pos:position pos:line="17" pos:column="35"/></name></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">SEC_WINNT_AUTH_IDENTITY<pos:position pos:line="18" pos:column="26"/></name> <modifier pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></modifier></type><name pos:line="18" pos:column="28">p_identity<pos:position pos:line="18" pos:column="38"/></name></decl>;<pos:position pos:line="18" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">SecBuffer<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">chlg_buf<pos:position pos:line="19" pos:column="21"/></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">SecBuffer<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">resp_buf<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">SecBufferDesc<pos:position pos:line="21" pos:column="16"/></name></type> <name pos:line="21" pos:column="17">chlg_desc<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">SecBufferDesc<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">resp_desc<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">SECURITY_STATUS<pos:position pos:line="23" pos:column="18"/></name></type> <name pos:line="23" pos:column="19">status<pos:position pos:line="23" pos:column="25"/></name></decl>;<pos:position pos:line="23" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">unsigned<pos:position pos:line="24" pos:column="11"/></name> <name pos:line="24" pos:column="12">long<pos:position pos:line="24" pos:column="16"/></name></type> <name pos:line="24" pos:column="17">attrs<pos:position pos:line="24" pos:column="22"/></name></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">TimeStamp<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">expiry<pos:position pos:line="25" pos:column="19"/></name></decl>;<pos:position pos:line="25" pos:column="20"/></decl_stmt> <comment type="block" pos:line="25" pos:column="21">/* For Windows 9x compatibility of SSPI calls */</comment>

  <comment type="block" pos:line="27" pos:column="3">/* Decode the base-64 encoded challenge message */</comment>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><call><name pos:line="28" pos:column="6">strlen<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">chlg64<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call> <operator pos:line="28" pos:column="21">&amp;&amp;<pos:position pos:line="28" pos:column="31"/></operator> <operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">chlg64<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">!=<pos:position pos:line="28" pos:column="34"/></operator> <literal type="char" pos:line="28" pos:column="35">'='<pos:position pos:line="28" pos:column="38"/></literal></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">result<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">Curl_base64_decode<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">chlg64<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">input_token<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="55">&amp;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="56">chlglen<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">result<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">result<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Ensure we have a valid challenge message */</comment>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">input_token<pos:position pos:line="35" pos:column="18"/></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">infof<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">data<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="17">"DIGEST-MD5 handshake failure (empty challenge message)\n"<pos:position pos:line="36" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>

    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="38" pos:column="38"/></name></expr>;<pos:position pos:line="38" pos:column="39"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* Query the security package for DigestSSP */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">status<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <call><name><name pos:line="42" pos:column="12">s_pSecFn<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">QuerySecurityPackageInfo<pos:position pos:line="42" pos:column="46"/></name></name><argument_list pos:line="42" pos:column="46">(<argument><expr><operator pos:line="42" pos:column="47">(<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="48">TCHAR<pos:position pos:line="42" pos:column="53"/></name> <operator pos:line="42" pos:column="54">*<pos:position pos:line="42" pos:column="55"/></operator><operator pos:line="42" pos:column="55">)<pos:position pos:line="42" pos:column="56"/></operator> <call><name pos:line="42" pos:column="57">TEXT<pos:position pos:line="42" pos:column="61"/></name><argument_list pos:line="42" pos:column="61">(<argument><expr><name pos:line="42" pos:column="62">SP_NAME_DIGEST<pos:position pos:line="42" pos:column="76"/></name></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></call></expr></argument>,
                                              <argument><expr><operator pos:line="43" pos:column="47">&amp;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="48">SecurityPackage<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name pos:line="44" pos:column="6">status<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">!=<pos:position pos:line="44" pos:column="15"/></operator> <name pos:line="44" pos:column="16">SEC_E_OK<pos:position pos:line="44" pos:column="24"/></name></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25"> <block pos:line="44" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">free<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><name pos:line="45" pos:column="10">input_token<pos:position pos:line="45" pos:column="21"/></name></expr></argument>)<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">CURLE_NOT_BUILT_IN<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="50" pos:column="3">token_max<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name><name pos:line="50" pos:column="15">SecurityPackage<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">-&gt;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="32">cbMaxToken<pos:position pos:line="50" pos:column="42"/></name></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="52" pos:column="3">/* Release the package buffer as it is not required anymore */</comment>
  <expr_stmt><expr><call><name><name pos:line="53" pos:column="3">s_pSecFn<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">FreeContextBuffer<pos:position pos:line="53" pos:column="30"/></name></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">SecurityPackage<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* Allocate our response buffer */</comment>
  <expr_stmt><expr><name pos:line="56" pos:column="3">output_token<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">malloc<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">token_max<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><operator pos:line="57" pos:column="6">!<pos:position pos:line="57" pos:column="7"/></operator><name pos:line="57" pos:column="7">output_token<pos:position pos:line="57" pos:column="19"/></name></expr>)<pos:position pos:line="57" pos:column="20"/></condition><then pos:line="57" pos:column="20"> <block pos:line="57" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">free<pos:position pos:line="58" pos:column="9"/></name><argument_list pos:line="58" pos:column="9">(<argument><expr><name pos:line="58" pos:column="10">input_token<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>

    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="60" pos:column="31"/></name></expr>;<pos:position pos:line="60" pos:column="32"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="63" pos:column="3">/* Generate our SPN */</comment>
  <expr_stmt><expr><name pos:line="64" pos:column="3">spn<pos:position pos:line="64" pos:column="6"/></name> <operator pos:line="64" pos:column="7">=<pos:position pos:line="64" pos:column="8"/></operator> <call><name pos:line="64" pos:column="9">Curl_auth_build_spn<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">service<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="38">data<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">easy_conn<pos:position pos:line="64" pos:column="53"/></name><operator pos:line="64" pos:column="53">-&gt;<pos:position pos:line="64" pos:column="58"/></operator><name pos:line="64" pos:column="55">host<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">.<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="60">name<pos:position pos:line="64" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">NULL<pos:position pos:line="64" pos:column="70"/></name></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><operator pos:line="65" pos:column="6">!<pos:position pos:line="65" pos:column="7"/></operator><name pos:line="65" pos:column="7">spn<pos:position pos:line="65" pos:column="10"/></name></expr>)<pos:position pos:line="65" pos:column="11"/></condition><then pos:line="65" pos:column="11"> <block pos:line="65" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">free<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><name pos:line="66" pos:column="10">output_token<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">free<pos:position pos:line="67" pos:column="9"/></name><argument_list pos:line="67" pos:column="9">(<argument><expr><name pos:line="67" pos:column="10">input_token<pos:position pos:line="67" pos:column="21"/></name></expr></argument>)<pos:position pos:line="67" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="69" pos:column="31"/></name></expr>;<pos:position pos:line="69" pos:column="32"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><name pos:line="72" pos:column="6">userp<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">&amp;&amp;<pos:position pos:line="72" pos:column="22"/></operator> <operator pos:line="72" pos:column="15">*<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">userp<pos:position pos:line="72" pos:column="21"/></name></expr>)<pos:position pos:line="72" pos:column="22"/></condition><then pos:line="72" pos:column="22"> <block pos:line="72" pos:column="23">{
    <comment type="block" pos:line="73" pos:column="5">/* Populate our identity structure */</comment>
    <expr_stmt><expr><name pos:line="74" pos:column="5">result<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <call><name pos:line="74" pos:column="14">Curl_create_sspi_identity<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">userp<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">passwdp<pos:position pos:line="74" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="56">&amp;<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="57">identity<pos:position pos:line="74" pos:column="65"/></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt>
    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><name pos:line="75" pos:column="8">result<pos:position pos:line="75" pos:column="14"/></name></expr>)<pos:position pos:line="75" pos:column="15"/></condition><then pos:line="75" pos:column="15"> <block pos:line="75" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">free<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><name pos:line="76" pos:column="12">spn<pos:position pos:line="76" pos:column="15"/></name></expr></argument>)<pos:position pos:line="76" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">free<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><name pos:line="77" pos:column="12">output_token<pos:position pos:line="77" pos:column="24"/></name></expr></argument>)<pos:position pos:line="77" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">free<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">input_token<pos:position pos:line="78" pos:column="23"/></name></expr></argument>)<pos:position pos:line="78" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>

      <return pos:line="80" pos:column="7">return <expr><name pos:line="80" pos:column="14">result<pos:position pos:line="80" pos:column="20"/></name></expr>;<pos:position pos:line="80" pos:column="21"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* Allow proper cleanup of the identity structure */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">p_identity<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <operator pos:line="84" pos:column="18">&amp;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="19">identity<pos:position pos:line="84" pos:column="27"/></name></expr>;<pos:position pos:line="84" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then>
  <else pos:line="86" pos:column="3">else
    <comment type="block" pos:line="87" pos:column="5">/* Use the current Windows user */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="5">p_identity<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">NULL<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="90" pos:column="3">/* Acquire our credentials handle */</comment>
  <expr_stmt><expr><name pos:line="91" pos:column="3">status<pos:position pos:line="91" pos:column="9"/></name> <operator pos:line="91" pos:column="10">=<pos:position pos:line="91" pos:column="11"/></operator> <call><name><name pos:line="91" pos:column="12">s_pSecFn<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">AcquireCredentialsHandle<pos:position pos:line="91" pos:column="46"/></name></name><argument_list pos:line="91" pos:column="46">(<argument><expr><name pos:line="91" pos:column="47">NULL<pos:position pos:line="91" pos:column="51"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="92" pos:column="47">(<pos:position pos:line="92" pos:column="48"/></operator><name pos:line="92" pos:column="48">TCHAR<pos:position pos:line="92" pos:column="53"/></name> <operator pos:line="92" pos:column="54">*<pos:position pos:line="92" pos:column="55"/></operator><operator pos:line="92" pos:column="55">)<pos:position pos:line="92" pos:column="56"/></operator> <call><name pos:line="92" pos:column="57">TEXT<pos:position pos:line="92" pos:column="61"/></name><argument_list pos:line="92" pos:column="61">(<argument><expr><name pos:line="92" pos:column="62">SP_NAME_DIGEST<pos:position pos:line="92" pos:column="76"/></name></expr></argument>)<pos:position pos:line="92" pos:column="77"/></argument_list></call></expr></argument>,
                                              <argument><expr><name pos:line="93" pos:column="47">SECPKG_CRED_OUTBOUND<pos:position pos:line="93" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="69">NULL<pos:position pos:line="93" pos:column="73"/></name></expr></argument>,
                                              <argument><expr><name pos:line="94" pos:column="47">p_identity<pos:position pos:line="94" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="59">NULL<pos:position pos:line="94" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="65">NULL<pos:position pos:line="94" pos:column="69"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="95" pos:column="47">&amp;<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="48">credentials<pos:position pos:line="95" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="61">&amp;<pos:position pos:line="95" pos:column="66"/></operator><name pos:line="95" pos:column="62">expiry<pos:position pos:line="95" pos:column="68"/></name></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt>

  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><name pos:line="97" pos:column="6">status<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">!=<pos:position pos:line="97" pos:column="15"/></operator> <name pos:line="97" pos:column="16">SEC_E_OK<pos:position pos:line="97" pos:column="24"/></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25"> <block pos:line="97" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">Curl_sspi_free_identity<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">p_identity<pos:position pos:line="98" pos:column="39"/></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">free<pos:position pos:line="99" pos:column="9"/></name><argument_list pos:line="99" pos:column="9">(<argument><expr><name pos:line="99" pos:column="10">spn<pos:position pos:line="99" pos:column="13"/></name></expr></argument>)<pos:position pos:line="99" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">free<pos:position pos:line="100" pos:column="9"/></name><argument_list pos:line="100" pos:column="9">(<argument><expr><name pos:line="100" pos:column="10">output_token<pos:position pos:line="100" pos:column="22"/></name></expr></argument>)<pos:position pos:line="100" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">free<pos:position pos:line="101" pos:column="9"/></name><argument_list pos:line="101" pos:column="9">(<argument><expr><name pos:line="101" pos:column="10">input_token<pos:position pos:line="101" pos:column="21"/></name></expr></argument>)<pos:position pos:line="101" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="23"/></expr_stmt>

    <return pos:line="103" pos:column="5">return <expr><name pos:line="103" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="103" pos:column="30"/></name></expr>;<pos:position pos:line="103" pos:column="31"/></return>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="106" pos:column="3">/* Setup the challenge "input" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="107" pos:column="3">chlg_desc<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">.<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="13">ulVersion<pos:position pos:line="107" pos:column="22"/></name></name> <operator pos:line="107" pos:column="23">=<pos:position pos:line="107" pos:column="24"/></operator> <name pos:line="107" pos:column="25">SECBUFFER_VERSION<pos:position pos:line="107" pos:column="42"/></name></expr>;<pos:position pos:line="107" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="108" pos:column="3">chlg_desc<pos:position pos:line="108" pos:column="12"/></name><operator pos:line="108" pos:column="12">.<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="13">cBuffers<pos:position pos:line="108" pos:column="21"/></name></name>  <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <literal type="number" pos:line="108" pos:column="25">1<pos:position pos:line="108" pos:column="26"/></literal></expr>;<pos:position pos:line="108" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="109" pos:column="3">chlg_desc<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">.<pos:position pos:line="109" pos:column="13"/></operator><name pos:line="109" pos:column="13">pBuffers<pos:position pos:line="109" pos:column="21"/></name></name>  <operator pos:line="109" pos:column="23">=<pos:position pos:line="109" pos:column="24"/></operator> <operator pos:line="109" pos:column="25">&amp;<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="26">chlg_buf<pos:position pos:line="109" pos:column="34"/></name></expr>;<pos:position pos:line="109" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="110" pos:column="3">chlg_buf<pos:position pos:line="110" pos:column="11"/></name><operator pos:line="110" pos:column="11">.<pos:position pos:line="110" pos:column="12"/></operator><name pos:line="110" pos:column="12">BufferType<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">=<pos:position pos:line="110" pos:column="24"/></operator> <name pos:line="110" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="110" pos:column="40"/></name></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="111" pos:column="3">chlg_buf<pos:position pos:line="111" pos:column="11"/></name><operator pos:line="111" pos:column="11">.<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">pvBuffer<pos:position pos:line="111" pos:column="20"/></name></name>   <operator pos:line="111" pos:column="23">=<pos:position pos:line="111" pos:column="24"/></operator> <name pos:line="111" pos:column="25">input_token<pos:position pos:line="111" pos:column="36"/></name></expr>;<pos:position pos:line="111" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="112" pos:column="3">chlg_buf<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">.<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">cbBuffer<pos:position pos:line="112" pos:column="20"/></name></name>   <operator pos:line="112" pos:column="23">=<pos:position pos:line="112" pos:column="24"/></operator> <call><name pos:line="112" pos:column="25">curlx_uztoul<pos:position pos:line="112" pos:column="37"/></name><argument_list pos:line="112" pos:column="37">(<argument><expr><name pos:line="112" pos:column="38">chlglen<pos:position pos:line="112" pos:column="45"/></name></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="114" pos:column="3">/* Setup the response "output" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="115" pos:column="3">resp_desc<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">.<pos:position pos:line="115" pos:column="13"/></operator><name pos:line="115" pos:column="13">ulVersion<pos:position pos:line="115" pos:column="22"/></name></name> <operator pos:line="115" pos:column="23">=<pos:position pos:line="115" pos:column="24"/></operator> <name pos:line="115" pos:column="25">SECBUFFER_VERSION<pos:position pos:line="115" pos:column="42"/></name></expr>;<pos:position pos:line="115" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="116" pos:column="3">resp_desc<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">.<pos:position pos:line="116" pos:column="13"/></operator><name pos:line="116" pos:column="13">cBuffers<pos:position pos:line="116" pos:column="21"/></name></name>  <operator pos:line="116" pos:column="23">=<pos:position pos:line="116" pos:column="24"/></operator> <literal type="number" pos:line="116" pos:column="25">1<pos:position pos:line="116" pos:column="26"/></literal></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="117" pos:column="3">resp_desc<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">pBuffers<pos:position pos:line="117" pos:column="21"/></name></name>  <operator pos:line="117" pos:column="23">=<pos:position pos:line="117" pos:column="24"/></operator> <operator pos:line="117" pos:column="25">&amp;<pos:position pos:line="117" pos:column="30"/></operator><name pos:line="117" pos:column="26">resp_buf<pos:position pos:line="117" pos:column="34"/></name></expr>;<pos:position pos:line="117" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="118" pos:column="3">resp_buf<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">.<pos:position pos:line="118" pos:column="12"/></operator><name pos:line="118" pos:column="12">BufferType<pos:position pos:line="118" pos:column="22"/></name></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <name pos:line="118" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="118" pos:column="40"/></name></expr>;<pos:position pos:line="118" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="119" pos:column="3">resp_buf<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">.<pos:position pos:line="119" pos:column="12"/></operator><name pos:line="119" pos:column="12">pvBuffer<pos:position pos:line="119" pos:column="20"/></name></name>   <operator pos:line="119" pos:column="23">=<pos:position pos:line="119" pos:column="24"/></operator> <name pos:line="119" pos:column="25">output_token<pos:position pos:line="119" pos:column="37"/></name></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="120" pos:column="3">resp_buf<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">.<pos:position pos:line="120" pos:column="12"/></operator><name pos:line="120" pos:column="12">cbBuffer<pos:position pos:line="120" pos:column="20"/></name></name>   <operator pos:line="120" pos:column="23">=<pos:position pos:line="120" pos:column="24"/></operator> <call><name pos:line="120" pos:column="25">curlx_uztoul<pos:position pos:line="120" pos:column="37"/></name><argument_list pos:line="120" pos:column="37">(<argument><expr><name pos:line="120" pos:column="38">token_max<pos:position pos:line="120" pos:column="47"/></name></expr></argument>)<pos:position pos:line="120" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="122" pos:column="3">/* Generate our response message */</comment>
  <expr_stmt><expr><name pos:line="123" pos:column="3">status<pos:position pos:line="123" pos:column="9"/></name> <operator pos:line="123" pos:column="10">=<pos:position pos:line="123" pos:column="11"/></operator> <call><name><name pos:line="123" pos:column="12">s_pSecFn<pos:position pos:line="123" pos:column="20"/></name><operator pos:line="123" pos:column="20">-&gt;<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="22">InitializeSecurityContext<pos:position pos:line="123" pos:column="47"/></name></name><argument_list pos:line="123" pos:column="47">(<argument><expr><operator pos:line="123" pos:column="48">&amp;<pos:position pos:line="123" pos:column="53"/></operator><name pos:line="123" pos:column="49">credentials<pos:position pos:line="123" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="62">NULL<pos:position pos:line="123" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="68">spn<pos:position pos:line="123" pos:column="71"/></name></expr></argument>,
                                               <argument><expr><literal type="number" pos:line="124" pos:column="48">0<pos:position pos:line="124" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="51">0<pos:position pos:line="124" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="54">0<pos:position pos:line="124" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="124" pos:column="57">&amp;<pos:position pos:line="124" pos:column="62"/></operator><name pos:line="124" pos:column="58">chlg_desc<pos:position pos:line="124" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="69">0<pos:position pos:line="124" pos:column="70"/></literal></expr></argument>,
                                               <argument><expr><operator pos:line="125" pos:column="48">&amp;<pos:position pos:line="125" pos:column="53"/></operator><name pos:line="125" pos:column="49">context<pos:position pos:line="125" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="58">&amp;<pos:position pos:line="125" pos:column="63"/></operator><name pos:line="125" pos:column="59">resp_desc<pos:position pos:line="125" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="70">&amp;<pos:position pos:line="125" pos:column="75"/></operator><name pos:line="125" pos:column="71">attrs<pos:position pos:line="125" pos:column="76"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="126" pos:column="48">&amp;<pos:position pos:line="126" pos:column="53"/></operator><name pos:line="126" pos:column="49">expiry<pos:position pos:line="126" pos:column="55"/></name></expr></argument>)<pos:position pos:line="126" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="57"/></expr_stmt>

  <if pos:line="128" pos:column="3">if<condition pos:line="128" pos:column="5">(<expr><name pos:line="128" pos:column="6">status<pos:position pos:line="128" pos:column="12"/></name> <operator pos:line="128" pos:column="13">==<pos:position pos:line="128" pos:column="15"/></operator> <name pos:line="128" pos:column="16">SEC_I_COMPLETE_NEEDED<pos:position pos:line="128" pos:column="37"/></name> <operator pos:line="128" pos:column="38">||<pos:position pos:line="128" pos:column="40"/></operator>
     <name pos:line="129" pos:column="6">status<pos:position pos:line="129" pos:column="12"/></name> <operator pos:line="129" pos:column="13">==<pos:position pos:line="129" pos:column="15"/></operator> <name pos:line="129" pos:column="16">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="129" pos:column="43"/></name></expr>)<pos:position pos:line="129" pos:column="44"/></condition><then pos:line="129" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="130" pos:column="5">s_pSecFn<pos:position pos:line="130" pos:column="13"/></name><operator pos:line="130" pos:column="13">-&gt;<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="15">CompleteAuthToken<pos:position pos:line="130" pos:column="32"/></name></name><argument_list pos:line="130" pos:column="32">(<argument><expr><operator pos:line="130" pos:column="33">&amp;<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="34">credentials<pos:position pos:line="130" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="47">&amp;<pos:position pos:line="130" pos:column="52"/></operator><name pos:line="130" pos:column="48">resp_desc<pos:position pos:line="130" pos:column="57"/></name></expr></argument>)<pos:position pos:line="130" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="59"/></expr_stmt></block></then>
  <elseif pos:line="131" pos:column="3">else <if pos:line="131" pos:column="8">if<condition pos:line="131" pos:column="10">(<expr><name pos:line="131" pos:column="11">status<pos:position pos:line="131" pos:column="17"/></name> <operator pos:line="131" pos:column="18">!=<pos:position pos:line="131" pos:column="20"/></operator> <name pos:line="131" pos:column="21">SEC_E_OK<pos:position pos:line="131" pos:column="29"/></name> <operator pos:line="131" pos:column="30">&amp;&amp;<pos:position pos:line="131" pos:column="40"/></operator> <name pos:line="131" pos:column="33">status<pos:position pos:line="131" pos:column="39"/></name> <operator pos:line="131" pos:column="40">!=<pos:position pos:line="131" pos:column="42"/></operator> <name pos:line="131" pos:column="43">SEC_I_CONTINUE_NEEDED<pos:position pos:line="131" pos:column="64"/></name></expr>)<pos:position pos:line="131" pos:column="65"/></condition><then pos:line="131" pos:column="65"> <block pos:line="131" pos:column="66">{
    <expr_stmt><expr><call><name><name pos:line="132" pos:column="5">s_pSecFn<pos:position pos:line="132" pos:column="13"/></name><operator pos:line="132" pos:column="13">-&gt;<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="15">FreeCredentialsHandle<pos:position pos:line="132" pos:column="36"/></name></name><argument_list pos:line="132" pos:column="36">(<argument><expr><operator pos:line="132" pos:column="37">&amp;<pos:position pos:line="132" pos:column="42"/></operator><name pos:line="132" pos:column="38">credentials<pos:position pos:line="132" pos:column="49"/></name></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">Curl_sspi_free_identity<pos:position pos:line="133" pos:column="28"/></name><argument_list pos:line="133" pos:column="28">(<argument><expr><name pos:line="133" pos:column="29">p_identity<pos:position pos:line="133" pos:column="39"/></name></expr></argument>)<pos:position pos:line="133" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">free<pos:position pos:line="134" pos:column="9"/></name><argument_list pos:line="134" pos:column="9">(<argument><expr><name pos:line="134" pos:column="10">spn<pos:position pos:line="134" pos:column="13"/></name></expr></argument>)<pos:position pos:line="134" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">free<pos:position pos:line="135" pos:column="9"/></name><argument_list pos:line="135" pos:column="9">(<argument><expr><name pos:line="135" pos:column="10">output_token<pos:position pos:line="135" pos:column="22"/></name></expr></argument>)<pos:position pos:line="135" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">free<pos:position pos:line="136" pos:column="9"/></name><argument_list pos:line="136" pos:column="9">(<argument><expr><name pos:line="136" pos:column="10">input_token<pos:position pos:line="136" pos:column="21"/></name></expr></argument>)<pos:position pos:line="136" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt>

    <return pos:line="138" pos:column="5">return <expr><name pos:line="138" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="138" pos:column="28"/></name></expr>;<pos:position pos:line="138" pos:column="29"/></return>
  }<pos:position pos:line="139" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="141" pos:column="3">/* Base64 encode the response */</comment>
  <expr_stmt><expr><name pos:line="142" pos:column="3">result<pos:position pos:line="142" pos:column="9"/></name> <operator pos:line="142" pos:column="10">=<pos:position pos:line="142" pos:column="11"/></operator> <call><name pos:line="142" pos:column="12">Curl_base64_encode<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><name pos:line="142" pos:column="31">data<pos:position pos:line="142" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="37">(<pos:position pos:line="142" pos:column="38"/></operator><name pos:line="142" pos:column="38">char<pos:position pos:line="142" pos:column="42"/></name> <operator pos:line="142" pos:column="43">*<pos:position pos:line="142" pos:column="44"/></operator><operator pos:line="142" pos:column="44">)<pos:position pos:line="142" pos:column="45"/></operator> <name pos:line="142" pos:column="46">output_token<pos:position pos:line="142" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="60">resp_buf<pos:position pos:line="142" pos:column="68"/></name><operator pos:line="142" pos:column="68">.<pos:position pos:line="142" pos:column="69"/></operator><name pos:line="142" pos:column="69">cbBuffer<pos:position pos:line="142" pos:column="77"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="143" pos:column="31">outptr<pos:position pos:line="143" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="39">outlen<pos:position pos:line="143" pos:column="45"/></name></expr></argument>)<pos:position pos:line="143" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="145" pos:column="3">/* Free our handles */</comment>
  <expr_stmt><expr><call><name><name pos:line="146" pos:column="3">s_pSecFn<pos:position pos:line="146" pos:column="11"/></name><operator pos:line="146" pos:column="11">-&gt;<pos:position pos:line="146" pos:column="16"/></operator><name pos:line="146" pos:column="13">DeleteSecurityContext<pos:position pos:line="146" pos:column="34"/></name></name><argument_list pos:line="146" pos:column="34">(<argument><expr><operator pos:line="146" pos:column="35">&amp;<pos:position pos:line="146" pos:column="40"/></operator><name pos:line="146" pos:column="36">context<pos:position pos:line="146" pos:column="43"/></name></expr></argument>)<pos:position pos:line="146" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="147" pos:column="3">s_pSecFn<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">FreeCredentialsHandle<pos:position pos:line="147" pos:column="34"/></name></name><argument_list pos:line="147" pos:column="34">(<argument><expr><operator pos:line="147" pos:column="35">&amp;<pos:position pos:line="147" pos:column="40"/></operator><name pos:line="147" pos:column="36">credentials<pos:position pos:line="147" pos:column="47"/></name></expr></argument>)<pos:position pos:line="147" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="149" pos:column="3">/* Free the identity structure */</comment>
  <expr_stmt><expr><call><name pos:line="150" pos:column="3">Curl_sspi_free_identity<pos:position pos:line="150" pos:column="26"/></name><argument_list pos:line="150" pos:column="26">(<argument><expr><name pos:line="150" pos:column="27">p_identity<pos:position pos:line="150" pos:column="37"/></name></expr></argument>)<pos:position pos:line="150" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="152" pos:column="3">/* Free the SPN */</comment>
  <expr_stmt><expr><call><name pos:line="153" pos:column="3">free<pos:position pos:line="153" pos:column="7"/></name><argument_list pos:line="153" pos:column="7">(<argument><expr><name pos:line="153" pos:column="8">spn<pos:position pos:line="153" pos:column="11"/></name></expr></argument>)<pos:position pos:line="153" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="13"/></expr_stmt>

  <comment type="block" pos:line="155" pos:column="3">/* Free the response buffer */</comment>
  <expr_stmt><expr><call><name pos:line="156" pos:column="3">free<pos:position pos:line="156" pos:column="7"/></name><argument_list pos:line="156" pos:column="7">(<argument><expr><name pos:line="156" pos:column="8">output_token<pos:position pos:line="156" pos:column="20"/></name></expr></argument>)<pos:position pos:line="156" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="158" pos:column="3">/* Free the decoded challenge message */</comment>
  <expr_stmt><expr><call><name pos:line="159" pos:column="3">free<pos:position pos:line="159" pos:column="7"/></name><argument_list pos:line="159" pos:column="7">(<argument><expr><name pos:line="159" pos:column="8">input_token<pos:position pos:line="159" pos:column="19"/></name></expr></argument>)<pos:position pos:line="159" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="21"/></expr_stmt>

  <return pos:line="161" pos:column="3">return <expr><name pos:line="161" pos:column="10">result<pos:position pos:line="161" pos:column="16"/></name></expr>;<pos:position pos:line="161" pos:column="17"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

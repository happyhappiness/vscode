<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_39_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">test<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">URL<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hd_src<pos:position pos:line="5" pos:column="15"/></name></decl> ;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">hd<pos:position pos:line="6" pos:column="9"/></name></decl> ;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">stat<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">file_info<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_slist<pos:position pos:line="9" pos:column="20"/></name></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">headerlist<pos:position pos:line="9" pos:column="32"/></name><init pos:line="9" pos:column="32">=<expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">buf_1<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><literal type="string" pos:line="10" pos:column="23">"RNFR 505"<pos:position pos:line="10" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">buf_2<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><literal type="string" pos:line="11" pos:column="23">"RNTO 505-forreal"<pos:position pos:line="11" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* get the file size of the local file */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">hd<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">open<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">arg2<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">O_RDONLY<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr> ;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">hd<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">==<pos:position pos:line="15" pos:column="11"/></operator> <operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block pos:line="15" pos:column="16">{
    <comment type="block" pos:line="16" pos:column="5">/* can't open file, bail out */</comment>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">fstat<pos:position pos:line="19" pos:column="8"/></name><argument_list pos:line="19" pos:column="8">(<argument><expr><name pos:line="19" pos:column="9">hd<pos:position pos:line="19" pos:column="11"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="13">&amp;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="14">file_info<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">close<pos:position pos:line="20" pos:column="8"/></name><argument_list pos:line="20" pos:column="8">(<argument><expr><name pos:line="20" pos:column="9">hd<pos:position pos:line="20" pos:column="11"/></name></expr></argument>)<pos:position pos:line="20" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* get a FILE * of the same file, could also be made with
     fdopen() from the previous descriptor, but hey this is just 
     an example! */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">hd_src<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">fopen<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">arg2<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="24">"rb"<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">NULL<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">==<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">hd_src<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">-<pos:position pos:line="27" pos:column="13"/></operator><literal type="number" pos:line="27" pos:column="13">2<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></return> <comment type="block" pos:line="27" pos:column="16">/* if this happens things are major weird */</comment>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* In windows, this will init the winsock stuff */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">curl_global_init<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* get a curl handle */</comment>
  <expr_stmt><expr><name pos:line="34" pos:column="3">curl<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">curl_easy_init<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">()<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">curl<pos:position pos:line="35" pos:column="10"/></name></expr>)<pos:position pos:line="35" pos:column="11"/></condition><then pos:line="35" pos:column="11"> <block pos:line="35" pos:column="12">{
    <comment type="block" pos:line="36" pos:column="5">/* build a list of commands to pass to libcurl */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">headerlist<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">curl_slist_append<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">headerlist<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">buf_1<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">headerlist<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">curl_slist_append<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">headerlist<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">buf_2<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* enable uploading */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">curl_easy_setopt<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">curl<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="28">CURLOPT_UPLOAD<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">TRUE<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr> ;<pos:position pos:line="41" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* enable verbose */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">curl_easy_setopt<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">curl<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">TRUE<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr> ;<pos:position pos:line="44" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* specify target */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">curl_easy_setopt<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">curl<pos:position pos:line="47" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="47" pos:column="27">CURLOPT_URL<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">URL<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* pass in that last of FTP commands to run after the transfer */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">curl_easy_setopt<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">curl<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="28">CURLOPT_POSTQUOTE<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">headerlist<pos:position pos:line="50" pos:column="57"/></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* now specify which file to upload */</comment>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_easy_setopt<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">curl<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="28">CURLOPT_INFILE<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">hd_src<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/* and give the size of the upload (optional) */</comment>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">curl_easy_setopt<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">curl<pos:position pos:line="56" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">CURLOPT_INFILESIZE<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="48">file_info<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">.<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="58">st_size<pos:position pos:line="56" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Now run off and do what you've been told! */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">res<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">=<pos:position pos:line="59" pos:column="10"/></operator> <call><name pos:line="59" pos:column="11">curl_easy_perform<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">curl<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="61" pos:column="5">/* clean up the FTP commands list */</comment>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">curl_slist_free_all<pos:position pos:line="62" pos:column="24"/></name> <argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">headerlist<pos:position pos:line="62" pos:column="36"/></name></expr></argument>)<pos:position pos:line="62" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">curl_easy_cleanup<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">curl<pos:position pos:line="65" pos:column="27"/></name></expr></argument>)<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">fclose<pos:position pos:line="67" pos:column="9"/></name><argument_list pos:line="67" pos:column="9">(<argument><expr><name pos:line="67" pos:column="10">hd_src<pos:position pos:line="67" pos:column="16"/></name></expr></argument>)<pos:position pos:line="67" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="18"/></expr_stmt> <comment type="block" pos:line="67" pos:column="19">/* close the local file */</comment>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">curl_global_cleanup<pos:position pos:line="69" pos:column="22"/></name><argument_list pos:line="69" pos:column="22">()<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
  <return pos:line="70" pos:column="3">return <expr><name pos:line="70" pos:column="10">res<pos:position pos:line="70" pos:column="13"/></name></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

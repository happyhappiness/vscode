<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_633_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">getcurlcodestr<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">cc<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">buf<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><call><name pos:line="2" pos:column="15">malloc<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">(<argument><expr><literal type="number" pos:line="2" pos:column="22">256<pos:position pos:line="2" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="27"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">fail_unless<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="20">"out of memory"<pos:position pos:line="3" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">snprintf<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">buf<pos:position pos:line="4" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="17">256<pos:position pos:line="4" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="22">"%s (%d)"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>,
    <argument><expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><ternary><condition><expr><name pos:line="5" pos:column="6">cc<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">==<pos:position pos:line="5" pos:column="11"/></operator> <name pos:line="5" pos:column="12">SANITIZE_ERR_OK<pos:position pos:line="5" pos:column="27"/></name></expr> ?<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29"> <expr><literal type="string" pos:line="5" pos:column="30">"SANITIZE_ERR_OK"<pos:position pos:line="5" pos:column="47"/></literal></expr> <pos:position pos:line="5" pos:column="48"/></then><else pos:line="5" pos:column="48">:
     <expr><ternary><condition><expr><name pos:line="6" pos:column="6">cc<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">==<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">SANITIZE_ERR_BAD_ARGUMENT<pos:position pos:line="6" pos:column="37"/></name></expr> ?<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <expr><literal type="string" pos:line="6" pos:column="40">"SANITIZE_ERR_BAD_ARGUMENT"<pos:position pos:line="6" pos:column="67"/></literal></expr> <pos:position pos:line="6" pos:column="68"/></then><else pos:line="6" pos:column="68">:
     <expr><ternary><condition><expr><name pos:line="7" pos:column="6">cc<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">SANITIZE_ERR_INVALID_PATH<pos:position pos:line="7" pos:column="37"/></name></expr> ?<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <expr><literal type="string" pos:line="7" pos:column="40">"SANITIZE_ERR_INVALID_PATH"<pos:position pos:line="7" pos:column="67"/></literal></expr> <pos:position pos:line="7" pos:column="68"/></then><else pos:line="7" pos:column="68">:
     <expr><ternary><condition><expr><name pos:line="8" pos:column="6">cc<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">==<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">SANITIZE_ERR_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="38"/></name></expr> ?<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <expr><literal type="string" pos:line="8" pos:column="41">"SANITIZE_ERR_OUT_OF_MEMORY"<pos:position pos:line="8" pos:column="69"/></literal></expr> <pos:position pos:line="8" pos:column="70"/></then><else pos:line="8" pos:column="70">:
     <expr><literal type="string" pos:line="9" pos:column="6">"unexpected error code - add name"<pos:position pos:line="9" pos:column="40"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator></expr></argument>,
    <argument><expr><name pos:line="10" pos:column="5">cc<pos:position pos:line="10" pos:column="7"/></name></expr></argument>)<pos:position pos:line="10" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="9"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

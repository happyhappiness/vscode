<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_616.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_file<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">bool<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">done<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* This implementation ignores the host name in conformance with
     RFC 1738. Only local files (reachable via the standard file system)
     are supported. This means that files on remotely mounted directories
     (via NFS, Samba, NT sharing) can be accessed through a file:// URL
  */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">res<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">CURLE_OK<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">struct_stat<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">statbuf<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt> <comment type="block" pos:line="9" pos:column="24">/* struct_stat instead of struct stat just to allow the
                          Windows version to have a different struct without
                          having to redefine the simple word 'stat' */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">curl_off_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">expected_size<pos:position pos:line="12" pos:column="27"/></name><init pos:line="12" pos:column="27">=<expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">bool<pos:position pos:line="13" pos:column="7"/></name></type> <name pos:line="13" pos:column="8">fstated<pos:position pos:line="13" pos:column="15"/></name><init pos:line="13" pos:column="15">=<expr><name pos:line="13" pos:column="16">FALSE<pos:position pos:line="13" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">ssize_t<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">nread<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">SessionHandle<pos:position pos:line="15" pos:column="23"/></name></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">data<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><name><name pos:line="15" pos:column="32">conn<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">data<pos:position pos:line="15" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">buf<pos:position pos:line="16" pos:column="12"/></name> <init pos:line="16" pos:column="13">= <expr><name><name pos:line="16" pos:column="15">data<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">state<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">buffer<pos:position pos:line="16" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">curl_off_t<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">bytecount<pos:position pos:line="17" pos:column="23"/></name> <init pos:line="17" pos:column="24">= <expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">fd<pos:position pos:line="18" pos:column="9"/></name></decl>;<pos:position pos:line="18" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="19" pos:column="3">struct<pos:position pos:line="19" pos:column="9"/></name> <name pos:line="19" pos:column="10">timeval<pos:position pos:line="19" pos:column="17"/></name></name></type> <name pos:line="19" pos:column="18">now<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><call><name pos:line="19" pos:column="24">Curl_tvnow<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">()<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="21" pos:column="3">*<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">done<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <name pos:line="21" pos:column="11">TRUE<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt> <comment type="block" pos:line="21" pos:column="17">/* unconditionally */</comment>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">Curl_readwrite_init<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">conn<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">Curl_initinfo<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">data<pos:position pos:line="24" pos:column="21"/></name></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">Curl_pgrsStartNow<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">data<pos:position pos:line="25" pos:column="25"/></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name><name pos:line="27" pos:column="6">data<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">set<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">upload<pos:position pos:line="27" pos:column="22"/></name></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><call><name pos:line="28" pos:column="12">file_upload<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">conn<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></return></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* get the fd from the connection phase */</comment>
  <expr_stmt><expr><name pos:line="31" pos:column="3">fd<pos:position pos:line="31" pos:column="5"/></name> <operator pos:line="31" pos:column="6">=<pos:position pos:line="31" pos:column="7"/></operator> <name><name pos:line="31" pos:column="8">conn<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">proto<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">file<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">fd<pos:position pos:line="31" pos:column="28"/></name></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* VMS: This only works reliable for STREAMLF files */</comment>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">( <expr><operator pos:line="34" pos:column="7">-<pos:position pos:line="34" pos:column="8"/></operator><literal type="number" pos:line="34" pos:column="8">1<pos:position pos:line="34" pos:column="9"/></literal> <operator pos:line="34" pos:column="10">!=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">fstat<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">fd<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="24">statbuf<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33"> <block pos:line="34" pos:column="34">{
    <comment type="block" pos:line="35" pos:column="5">/* we could stat it, then read out the size */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">expected_size<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name><name pos:line="36" pos:column="21">statbuf<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">.<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">st_size<pos:position pos:line="36" pos:column="36"/></name></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">fstated<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">TRUE<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* If we have selected NOBODY and HEADER, it means that we only want file
     information. Which for FILE can't be much more than the file size and
     date. */</comment>
  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><name><name pos:line="43" pos:column="6">conn<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">bits<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">no_body<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">&amp;&amp;<pos:position pos:line="43" pos:column="35"/></operator> <name><name pos:line="43" pos:column="28">data<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">set<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">.<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">include_header<pos:position pos:line="43" pos:column="52"/></name></name> <operator pos:line="43" pos:column="53">&amp;&amp;<pos:position pos:line="43" pos:column="63"/></operator> <name pos:line="43" pos:column="56">fstated<pos:position pos:line="43" pos:column="63"/></name></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64"> <block pos:line="43" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">CURLcode<pos:position pos:line="44" pos:column="13"/></name></type> <name pos:line="44" pos:column="14">result<pos:position pos:line="44" pos:column="20"/></name></decl>;<pos:position pos:line="44" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">snprintf<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><name pos:line="45" pos:column="14">buf<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="19">sizeof<argument_list pos:line="45" pos:column="25">(<argument><expr><name><name pos:line="45" pos:column="26">data<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">state<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">buffer<pos:position pos:line="45" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></sizeof></expr></argument>,
             <argument><expr><literal type="string" pos:line="46" pos:column="14">"Content-Length: %"<pos:position pos:line="46" pos:column="33"/></literal> <name pos:line="46" pos:column="34">FORMAT_OFF_T<pos:position pos:line="46" pos:column="46"/></name> <literal type="string" pos:line="46" pos:column="47">"\r\n"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="55">expected_size<pos:position pos:line="46" pos:column="68"/></name></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">result<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">Curl_client_write<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">data<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">CLIENTWRITE_BOTH<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">buf<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">result<pos:position pos:line="48" pos:column="14"/></name></expr>)<pos:position pos:line="48" pos:column="15"/></condition><then pos:line="48" pos:column="15">
      <block type="pseudo"><return pos:line="49" pos:column="7">return <expr><name pos:line="49" pos:column="14">result<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="51" pos:column="5">result<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">Curl_client_write<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><name pos:line="51" pos:column="32">data<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">CLIENTWRITE_BOTH<pos:position pos:line="51" pos:column="54"/></name></expr></argument>,
                               <argument><expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">char<pos:position pos:line="52" pos:column="37"/></name> <operator pos:line="52" pos:column="38">*<pos:position pos:line="52" pos:column="39"/></operator><operator pos:line="52" pos:column="39">)<pos:position pos:line="52" pos:column="40"/></operator><literal type="string" pos:line="52" pos:column="40">"Accept-ranges: bytes\r\n"<pos:position pos:line="52" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="68">0<pos:position pos:line="52" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">(<expr><name pos:line="53" pos:column="8">result<pos:position pos:line="53" pos:column="14"/></name></expr>)<pos:position pos:line="53" pos:column="15"/></condition><then pos:line="53" pos:column="15">
      <block type="pseudo"><return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">result<pos:position pos:line="54" pos:column="20"/></name></expr>;<pos:position pos:line="54" pos:column="21"/></return></block></then></if>

    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name pos:line="56" pos:column="8">fstated<pos:position pos:line="56" pos:column="15"/></name></expr>)<pos:position pos:line="56" pos:column="16"/></condition><then pos:line="56" pos:column="16"> <block pos:line="56" pos:column="17">{
      <decl_stmt><decl><type><name><name pos:line="57" pos:column="7">struct<pos:position pos:line="57" pos:column="13"/></name> <name pos:line="57" pos:column="14">tm<pos:position pos:line="57" pos:column="16"/></name></name> <modifier pos:line="57" pos:column="17">*<pos:position pos:line="57" pos:column="18"/></modifier></type><name pos:line="57" pos:column="18">tm<pos:position pos:line="57" pos:column="20"/></name></decl>;<pos:position pos:line="57" pos:column="21"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">time_t<pos:position pos:line="58" pos:column="13"/></name></type> <name pos:line="58" pos:column="14">clock<pos:position pos:line="58" pos:column="19"/></name> <init pos:line="58" pos:column="20">= <expr><operator pos:line="58" pos:column="22">(<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">time_t<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">)<pos:position pos:line="58" pos:column="30"/></operator><name><name pos:line="58" pos:column="30">statbuf<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">.<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">st_mtime<pos:position pos:line="58" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="58" pos:column="47"/></decl_stmt>
<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">HAVE_GMTIME_R<pos:position pos:line="59" pos:column="21"/></name></cpp:ifdef>
      <decl_stmt><decl><type><name><name pos:line="60" pos:column="7">struct<pos:position pos:line="60" pos:column="13"/></name> <name pos:line="60" pos:column="14">tm<pos:position pos:line="60" pos:column="16"/></name></name></type> <name pos:line="60" pos:column="17">buffer<pos:position pos:line="60" pos:column="23"/></name></decl>;<pos:position pos:line="60" pos:column="24"/></decl_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">tm<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator>struct <name pos:line="61" pos:column="20">tm<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">*<pos:position pos:line="61" pos:column="24"/></operator><operator pos:line="61" pos:column="24">)<pos:position pos:line="61" pos:column="25"/></operator><call><name pos:line="61" pos:column="25">gmtime_r<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><operator pos:line="61" pos:column="34">&amp;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="35">clock<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="42">&amp;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="43">buffer<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
<cpp:else pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">else<pos:position pos:line="62" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="63" pos:column="7">tm<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">gmtime<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><operator pos:line="63" pos:column="19">&amp;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="20">clock<pos:position pos:line="63" pos:column="25"/></name></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="65" pos:column="7">/* format: "Tue, 15 Nov 1994 12:45:26 GMT" */</comment>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">snprintf<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">buf<pos:position pos:line="66" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="21">BUFSIZE<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-<pos:position pos:line="66" pos:column="29"/></operator><literal type="number" pos:line="66" pos:column="29">1<pos:position pos:line="66" pos:column="30"/></literal></expr></argument>,
               <argument><expr><literal type="string" pos:line="67" pos:column="16">"Last-Modified: %s, %02d %s %4d %02d:%02d:%02d GMT\r\n"<pos:position pos:line="67" pos:column="71"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="68" pos:column="16">Curl_wkday<pos:position pos:line="68" pos:column="26"/></name><index pos:line="68" pos:column="26">[<expr><ternary><condition><expr><name><name pos:line="68" pos:column="27">tm<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">-&gt;<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="31">tm_wday<pos:position pos:line="68" pos:column="38"/></name></name></expr>?<pos:position pos:line="68" pos:column="39"/></condition><then><expr><name><name pos:line="68" pos:column="39">tm<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">tm_wday<pos:position pos:line="68" pos:column="50"/></name></name><operator pos:line="68" pos:column="50">-<pos:position pos:line="68" pos:column="51"/></operator><literal type="number" pos:line="68" pos:column="51">1<pos:position pos:line="68" pos:column="52"/></literal></expr></then><else pos:line="68" pos:column="52">:<expr><literal type="number" pos:line="68" pos:column="53">6<pos:position pos:line="68" pos:column="54"/></literal></expr></else></ternary></expr>]<pos:position pos:line="68" pos:column="55"/></index></name></expr></argument>,
               <argument><expr><name><name pos:line="69" pos:column="16">tm<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">tm_mday<pos:position pos:line="69" pos:column="27"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="70" pos:column="16">Curl_month<pos:position pos:line="70" pos:column="26"/></name><index pos:line="70" pos:column="26">[<expr><name><name pos:line="70" pos:column="27">tm<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">tm_mon<pos:position pos:line="70" pos:column="37"/></name></name></expr>]<pos:position pos:line="70" pos:column="38"/></index></name></expr></argument>,
               <argument><expr><name><name pos:line="71" pos:column="16">tm<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">tm_year<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">+<pos:position pos:line="71" pos:column="29"/></operator> <literal type="number" pos:line="71" pos:column="30">1900<pos:position pos:line="71" pos:column="34"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="72" pos:column="16">tm<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">tm_hour<pos:position pos:line="72" pos:column="27"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="73" pos:column="16">tm<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">tm_min<pos:position pos:line="73" pos:column="26"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="74" pos:column="16">tm<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">tm_sec<pos:position pos:line="74" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="75" pos:column="7">result<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">Curl_client_write<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">data<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="40">CLIENTWRITE_BOTH<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="58">buf<pos:position pos:line="75" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="63">0<pos:position pos:line="75" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">result<pos:position pos:line="77" pos:column="18"/></name></expr>;<pos:position pos:line="77" pos:column="19"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <if pos:line="80" pos:column="3">if <condition pos:line="80" pos:column="6">(<expr><name><name pos:line="80" pos:column="7">conn<pos:position pos:line="80" pos:column="11"/></name><operator pos:line="80" pos:column="11">-&gt;<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="13">resume_from<pos:position pos:line="80" pos:column="24"/></name></name> <operator pos:line="80" pos:column="25">&lt;=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="28">expected_size<pos:position pos:line="80" pos:column="41"/></name></expr>)<pos:position pos:line="80" pos:column="42"/></condition><then pos:line="80" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="5">expected_size<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">-=<pos:position pos:line="81" pos:column="21"/></operator> <name><name pos:line="81" pos:column="22">conn<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">-&gt;<pos:position pos:line="81" pos:column="31"/></operator><name pos:line="81" pos:column="28">resume_from<pos:position pos:line="81" pos:column="39"/></name></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt></block></then>
  <else pos:line="82" pos:column="3">else <block pos:line="82" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">failf<pos:position pos:line="83" pos:column="10"/></name><argument_list pos:line="83" pos:column="10">(<argument><expr><name pos:line="83" pos:column="11">data<pos:position pos:line="83" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="17">"failed to resume file:// transfer"<pos:position pos:line="83" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><name pos:line="84" pos:column="12">CURLE_BAD_DOWNLOAD_RESUME<pos:position pos:line="84" pos:column="37"/></name></expr>;<pos:position pos:line="84" pos:column="38"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></else></if>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">fstated<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">&amp;&amp;<pos:position pos:line="87" pos:column="25"/></operator> <operator pos:line="87" pos:column="18">(<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">expected_size<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">==<pos:position pos:line="87" pos:column="35"/></operator> <literal type="number" pos:line="87" pos:column="36">0<pos:position pos:line="87" pos:column="37"/></literal><operator pos:line="87" pos:column="37">)<pos:position pos:line="87" pos:column="38"/></operator></expr>)<pos:position pos:line="87" pos:column="39"/></condition><then pos:line="87" pos:column="39">
    <block type="pseudo"><return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">CURLE_OK<pos:position pos:line="88" pos:column="20"/></name></expr>;<pos:position pos:line="88" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="90" pos:column="3">/* The following is a shortcut implementation of file reading
     this is both more efficient than the former call to download() and
     it avoids problems with select() and recv() on file descriptors
     in Winsock */</comment>
  <if pos:line="94" pos:column="3">if<condition pos:line="94" pos:column="5">(<expr><name pos:line="94" pos:column="6">fstated<pos:position pos:line="94" pos:column="13"/></name></expr>)<pos:position pos:line="94" pos:column="14"/></condition><then pos:line="94" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="5">Curl_pgrsSetDownloadSize<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">data<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="36">expected_size<pos:position pos:line="95" pos:column="49"/></name></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt></block></then></if>

  <if pos:line="97" pos:column="3">if<condition pos:line="97" pos:column="5">(<expr><name><name pos:line="97" pos:column="6">conn<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">resume_from<pos:position pos:line="97" pos:column="23"/></name></name></expr>)<pos:position pos:line="97" pos:column="24"/></condition><then pos:line="97" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="5">lseek<pos:position pos:line="98" pos:column="10"/></name><argument_list pos:line="98" pos:column="10">(<argument><expr><name pos:line="98" pos:column="11">fd<pos:position pos:line="98" pos:column="13"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="15">conn<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">resume_from<pos:position pos:line="98" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="34">SEEK_SET<pos:position pos:line="98" pos:column="42"/></name></expr></argument>)<pos:position pos:line="98" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">Curl_pgrsTime<pos:position pos:line="100" pos:column="16"/></name><argument_list pos:line="100" pos:column="16">(<argument><expr><name pos:line="100" pos:column="17">data<pos:position pos:line="100" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="23">TIMER_STARTTRANSFER<pos:position pos:line="100" pos:column="42"/></name></expr></argument>)<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="44"/></expr_stmt>

  <while pos:line="102" pos:column="3">while <condition pos:line="102" pos:column="9">(<expr><name pos:line="102" pos:column="10">res<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">==<pos:position pos:line="102" pos:column="16"/></operator> <name pos:line="102" pos:column="17">CURLE_OK<pos:position pos:line="102" pos:column="25"/></name></expr>)<pos:position pos:line="102" pos:column="26"/></condition> <block pos:line="102" pos:column="27">{
    <expr_stmt><expr><name pos:line="103" pos:column="5">nread<pos:position pos:line="103" pos:column="10"/></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <call><name pos:line="103" pos:column="13">read<pos:position pos:line="103" pos:column="17"/></name><argument_list pos:line="103" pos:column="17">(<argument><expr><name pos:line="103" pos:column="18">fd<pos:position pos:line="103" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="22">buf<pos:position pos:line="103" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="27">BUFSIZE<pos:position pos:line="103" pos:column="34"/></name><operator pos:line="103" pos:column="34">-<pos:position pos:line="103" pos:column="35"/></operator><literal type="number" pos:line="103" pos:column="35">1<pos:position pos:line="103" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="38"/></expr_stmt>

    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">( <expr><name pos:line="105" pos:column="10">nread<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">&gt;<pos:position pos:line="105" pos:column="20"/></operator> <literal type="number" pos:line="105" pos:column="18">0<pos:position pos:line="105" pos:column="19"/></literal></expr>)<pos:position pos:line="105" pos:column="20"/></condition><then pos:line="105" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="7">buf<pos:position pos:line="106" pos:column="10"/></name><index pos:line="106" pos:column="10">[<expr><name pos:line="106" pos:column="11">nread<pos:position pos:line="106" pos:column="16"/></name></expr>]<pos:position pos:line="106" pos:column="17"/></index></name> <operator pos:line="106" pos:column="18">=<pos:position pos:line="106" pos:column="19"/></operator> <literal type="number" pos:line="106" pos:column="20">0<pos:position pos:line="106" pos:column="21"/></literal></expr>;<pos:position pos:line="106" pos:column="22"/></expr_stmt></block></then></if>

    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name pos:line="108" pos:column="9">nread<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">&lt;=<pos:position pos:line="108" pos:column="20"/></operator> <literal type="number" pos:line="108" pos:column="18">0<pos:position pos:line="108" pos:column="19"/></literal></expr>)<pos:position pos:line="108" pos:column="20"/></condition><then pos:line="108" pos:column="20">
      <block type="pseudo"><break pos:line="109" pos:column="7">break;<pos:position pos:line="109" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="111" pos:column="5">bytecount<pos:position pos:line="111" pos:column="14"/></name> <operator pos:line="111" pos:column="15">+=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">nread<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="113" pos:column="5">res<pos:position pos:line="113" pos:column="8"/></name> <operator pos:line="113" pos:column="9">=<pos:position pos:line="113" pos:column="10"/></operator> <call><name pos:line="113" pos:column="11">Curl_client_write<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><name pos:line="113" pos:column="29">data<pos:position pos:line="113" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="113" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="53">buf<pos:position pos:line="113" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="58">nread<pos:position pos:line="113" pos:column="63"/></name></expr></argument>)<pos:position pos:line="113" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="65"/></expr_stmt>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name pos:line="114" pos:column="8">res<pos:position pos:line="114" pos:column="11"/></name></expr>)<pos:position pos:line="114" pos:column="12"/></condition><then pos:line="114" pos:column="12">
      <block type="pseudo"><return pos:line="115" pos:column="7">return <expr><name pos:line="115" pos:column="14">res<pos:position pos:line="115" pos:column="17"/></name></expr>;<pos:position pos:line="115" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="117" pos:column="5">Curl_pgrsSetDownloadCounter<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">data<pos:position pos:line="117" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="39">bytecount<pos:position pos:line="117" pos:column="48"/></name></expr></argument>)<pos:position pos:line="117" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="50"/></expr_stmt>

    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">(<expr><call><name pos:line="119" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="119" pos:column="23"/></name><argument_list pos:line="119" pos:column="23">(<argument><expr><name pos:line="119" pos:column="24">conn<pos:position pos:line="119" pos:column="28"/></name></expr></argument>)<pos:position pos:line="119" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="30"/></condition><then pos:line="119" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="7">res<pos:position pos:line="120" pos:column="10"/></name> <operator pos:line="120" pos:column="11">=<pos:position pos:line="120" pos:column="12"/></operator> <name pos:line="120" pos:column="13">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="120" pos:column="38"/></name></expr>;<pos:position pos:line="120" pos:column="39"/></expr_stmt></block></then>
    <else pos:line="121" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="7">res<pos:position pos:line="122" pos:column="10"/></name> <operator pos:line="122" pos:column="11">=<pos:position pos:line="122" pos:column="12"/></operator> <call><name pos:line="122" pos:column="13">Curl_speedcheck<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><name pos:line="122" pos:column="29">data<pos:position pos:line="122" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="35">now<pos:position pos:line="122" pos:column="38"/></name></expr></argument>)<pos:position pos:line="122" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="40"/></expr_stmt></block></else></if>
  }<pos:position pos:line="123" pos:column="4"/></block></while>
  <if pos:line="124" pos:column="3">if<condition pos:line="124" pos:column="5">(<expr><call><name pos:line="124" pos:column="6">Curl_pgrsUpdate<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><name pos:line="124" pos:column="22">conn<pos:position pos:line="124" pos:column="26"/></name></expr></argument>)<pos:position pos:line="124" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="28"/></condition><then pos:line="124" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="5">res<pos:position pos:line="125" pos:column="8"/></name> <operator pos:line="125" pos:column="9">=<pos:position pos:line="125" pos:column="10"/></operator> <name pos:line="125" pos:column="11">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="125" pos:column="36"/></name></expr>;<pos:position pos:line="125" pos:column="37"/></expr_stmt></block></then></if>

  <return pos:line="127" pos:column="3">return <expr><name pos:line="127" pos:column="10">res<pos:position pos:line="127" pos:column="13"/></name></expr>;<pos:position pos:line="127" pos:column="14"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

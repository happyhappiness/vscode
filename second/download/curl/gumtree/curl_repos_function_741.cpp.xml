<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_741.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">msdosify<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">file_name<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">char<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">dos_name<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">illegal_chars_dos<pos:position pos:line="4" pos:column="38"/></name><index pos:line="4" pos:column="38">[]<pos:position pos:line="4" pos:column="40"/></index></name> <init pos:line="4" pos:column="41">= <expr><literal type="string" pos:line="4" pos:column="43">".+, ;=[]"<pos:position pos:line="4" pos:column="53"/></literal> <comment type="block" pos:line="4" pos:column="54">/* illegal in DOS */</comment>
    <literal type="string" pos:line="5" pos:column="5">"|&lt;&gt;\\\":?*"<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt> <comment type="block" pos:line="5" pos:column="19">/* illegal in DOS &amp; W95 */</comment>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">illegal_chars_w95<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><operator pos:line="6" pos:column="42">&amp;<pos:position pos:line="6" pos:column="47"/></operator><name><name pos:line="6" pos:column="43">illegal_chars_dos<pos:position pos:line="6" pos:column="60"/></name><index pos:line="6" pos:column="60">[<expr><literal type="number" pos:line="6" pos:column="61">8<pos:position pos:line="6" pos:column="62"/></literal></expr>]<pos:position pos:line="6" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">idx<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">dot_idx<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">s<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">file_name<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">d<pos:position pos:line="9" pos:column="10"/></name> <init pos:line="9" pos:column="11">= <expr><name pos:line="9" pos:column="13">dos_name<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier><specifier pos:line="10" pos:column="15">const<pos:position pos:line="10" pos:column="20"/></specifier></type> <name pos:line="10" pos:column="21">dlimit<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><name pos:line="10" pos:column="30">dos_name<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">+<pos:position pos:line="10" pos:column="40"/></operator> <sizeof pos:line="10" pos:column="41">sizeof<argument_list pos:line="10" pos:column="47">(<argument><expr><name pos:line="10" pos:column="48">dos_name<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></sizeof> <operator pos:line="10" pos:column="58">-<pos:position pos:line="10" pos:column="59"/></operator> <literal type="number" pos:line="10" pos:column="60">1<pos:position pos:line="10" pos:column="61"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">illegal_aliens<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">illegal_chars_dos<pos:position pos:line="11" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">len<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><sizeof pos:line="12" pos:column="16">sizeof<argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">illegal_chars_dos<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></sizeof> <operator pos:line="12" pos:column="42">-<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="44">1<pos:position pos:line="12" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Support for Windows 9X VFAT systems, when available. */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><call><name pos:line="15" pos:column="6">_use_lfn<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">file_name<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">illegal_aliens<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">illegal_chars_w95<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">len<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">-=<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">illegal_chars_w95<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">-<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">illegal_chars_dos<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* Get past the drive letter, if any. */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">s<pos:position pos:line="21" pos:column="7"/></name><index pos:line="21" pos:column="7">[<expr><literal type="number" pos:line="21" pos:column="8">0<pos:position pos:line="21" pos:column="9"/></literal></expr>]<pos:position pos:line="21" pos:column="10"/></index></name> <operator pos:line="21" pos:column="11">&gt;=<pos:position pos:line="21" pos:column="16"/></operator> <literal type="char" pos:line="21" pos:column="14">'A'<pos:position pos:line="21" pos:column="17"/></literal> <operator pos:line="21" pos:column="18">&amp;&amp;<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="21">s<pos:position pos:line="21" pos:column="22"/></name><index pos:line="21" pos:column="22">[<expr><literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">&lt;=<pos:position pos:line="21" pos:column="31"/></operator> <literal type="char" pos:line="21" pos:column="29">'z'<pos:position pos:line="21" pos:column="32"/></literal> <operator pos:line="21" pos:column="33">&amp;&amp;<pos:position pos:line="21" pos:column="43"/></operator> <name><name pos:line="21" pos:column="36">s<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><literal type="number" pos:line="21" pos:column="38">1<pos:position pos:line="21" pos:column="39"/></literal></expr>]<pos:position pos:line="21" pos:column="40"/></index></name> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <literal type="char" pos:line="21" pos:column="44">':'<pos:position pos:line="21" pos:column="47"/></literal></expr>)<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48"> <block pos:line="21" pos:column="49">{
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">d<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">++<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">s<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">++<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">d<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">++<pos:position pos:line="23" pos:column="9"/></operator> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">s<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <for pos:line="26" pos:column="3">for<control pos:line="26" pos:column="6">(<init><expr><name pos:line="26" pos:column="7">idx<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr><operator pos:line="26" pos:column="14">,<pos:position pos:line="26" pos:column="15"/></operator> <expr><name pos:line="26" pos:column="16">dot_idx<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <operator pos:line="26" pos:column="26">-<pos:position pos:line="26" pos:column="27"/></operator><literal type="number" pos:line="26" pos:column="27">1<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></init> <condition><expr><operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">s<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">&amp;&amp;<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="36">d<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">&lt;<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="40">dlimit<pos:position pos:line="26" pos:column="46"/></name></expr>;<pos:position pos:line="26" pos:column="47"/></condition> <incr><expr><name pos:line="26" pos:column="48">s<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">++<pos:position pos:line="26" pos:column="51"/></operator></expr><operator pos:line="26" pos:column="51">,<pos:position pos:line="26" pos:column="52"/></operator> <expr><name pos:line="26" pos:column="53">d<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">++<pos:position pos:line="26" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="57"/></control> <block pos:line="26" pos:column="58">{
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><call><name pos:line="27" pos:column="8">memchr<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">illegal_aliens<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">s<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">len<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
      <comment type="block" pos:line="28" pos:column="7">/* Dots are special: DOS doesn't allow them as the leading character,
         and a file name cannot have more than a single dot.  We leave the
         first non-leading dot alone, unless it comes too close to the
         beginning of the name: we want sh.lex.c to become sh_lex.c, not
         sh.lex-c.  */</comment>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><operator pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">s<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <literal type="char" pos:line="33" pos:column="16">'.'<pos:position pos:line="33" pos:column="19"/></literal></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20"> <block pos:line="33" pos:column="21">{
        <if pos:line="34" pos:column="9">if<condition pos:line="34" pos:column="11">(<expr><name pos:line="34" pos:column="12">idx<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">==<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal> <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name><name pos:line="34" pos:column="25">s<pos:position pos:line="34" pos:column="26"/></name><index pos:line="34" pos:column="26">[<expr><literal type="number" pos:line="34" pos:column="27">1<pos:position pos:line="34" pos:column="28"/></literal></expr>]<pos:position pos:line="34" pos:column="29"/></index></name> <operator pos:line="34" pos:column="30">==<pos:position pos:line="34" pos:column="32"/></operator> <literal type="char" pos:line="34" pos:column="33">'/'<pos:position pos:line="34" pos:column="36"/></literal> <operator pos:line="34" pos:column="37">||<pos:position pos:line="34" pos:column="39"/></operator> <operator pos:line="34" pos:column="40">(<pos:position pos:line="34" pos:column="41"/></operator><name><name pos:line="34" pos:column="41">s<pos:position pos:line="34" pos:column="42"/></name><index pos:line="34" pos:column="42">[<expr><literal type="number" pos:line="34" pos:column="43">1<pos:position pos:line="34" pos:column="44"/></literal></expr>]<pos:position pos:line="34" pos:column="45"/></index></name> <operator pos:line="34" pos:column="46">==<pos:position pos:line="34" pos:column="48"/></operator> <literal type="char" pos:line="34" pos:column="49">'.'<pos:position pos:line="34" pos:column="52"/></literal> <operator pos:line="34" pos:column="53">&amp;&amp;<pos:position pos:line="34" pos:column="63"/></operator> <name><name pos:line="34" pos:column="56">s<pos:position pos:line="34" pos:column="57"/></name><index pos:line="34" pos:column="57">[<expr><literal type="number" pos:line="34" pos:column="58">2<pos:position pos:line="34" pos:column="59"/></literal></expr>]<pos:position pos:line="34" pos:column="60"/></index></name> <operator pos:line="34" pos:column="61">==<pos:position pos:line="34" pos:column="63"/></operator> <literal type="char" pos:line="34" pos:column="64">'/'<pos:position pos:line="34" pos:column="67"/></literal><operator pos:line="34" pos:column="67">)<pos:position pos:line="34" pos:column="68"/></operator><operator pos:line="34" pos:column="68">)<pos:position pos:line="34" pos:column="69"/></operator></expr>)<pos:position pos:line="34" pos:column="70"/></condition><then pos:line="34" pos:column="70"> <block pos:line="34" pos:column="71">{
          <comment type="block" pos:line="35" pos:column="11">/* Copy "./" and "../" verbatim.  */</comment>
          <expr_stmt><expr><operator pos:line="36" pos:column="11">*<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">d<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">++<pos:position pos:line="36" pos:column="15"/></operator> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <operator pos:line="36" pos:column="18">*<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">s<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">++<pos:position pos:line="36" pos:column="22"/></operator></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
          <if pos:line="37" pos:column="11">if<condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">s<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <literal type="char" pos:line="37" pos:column="20">'.'<pos:position pos:line="37" pos:column="23"/></literal></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">d<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">++<pos:position pos:line="38" pos:column="17"/></operator> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">*<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">s<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">++<pos:position pos:line="38" pos:column="24"/></operator></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt></block></then></if>
          <expr_stmt><expr><operator pos:line="39" pos:column="11">*<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">d<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">s<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if<condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">idx<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="11">*<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">d<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <literal type="char" pos:line="42" pos:column="16">'_'<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="43" pos:column="9">else <if pos:line="43" pos:column="14">if<condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">dot_idx<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">&gt;=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="28">0<pos:position pos:line="43" pos:column="29"/></literal></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30"> <block pos:line="43" pos:column="31">{
          <if pos:line="44" pos:column="11">if<condition pos:line="44" pos:column="13">(<expr><name pos:line="44" pos:column="14">dot_idx<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">&lt;<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="24">5<pos:position pos:line="44" pos:column="25"/></literal></expr>)<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26"> <block pos:line="44" pos:column="27">{ <comment type="block" pos:line="44" pos:column="29">/* 5 is a heuristic ad-hoc'ery */</comment>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">d<pos:position pos:line="45" pos:column="14"/></name><index pos:line="45" pos:column="14">[<expr><name pos:line="45" pos:column="15">dot_idx<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">-<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">idx<pos:position pos:line="45" pos:column="28"/></name></expr>]<pos:position pos:line="45" pos:column="29"/></index></name> <operator pos:line="45" pos:column="30">=<pos:position pos:line="45" pos:column="31"/></operator> <literal type="char" pos:line="45" pos:column="32">'_'<pos:position pos:line="45" pos:column="35"/></literal></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt> <comment type="block" pos:line="45" pos:column="37">/* replace previous dot */</comment>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">d<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <literal type="char" pos:line="46" pos:column="18">'.'<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
          }<pos:position pos:line="47" pos:column="12"/></block></then>
          <else pos:line="48" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">d<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="char" pos:line="49" pos:column="18">'-'<pos:position pos:line="49" pos:column="21"/></literal></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt></block></else></if>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif>
        <else pos:line="51" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="11">*<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">d<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <literal type="char" pos:line="52" pos:column="16">'.'<pos:position pos:line="52" pos:column="19"/></literal></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt></block></else></if>

        <if pos:line="54" pos:column="9">if<condition pos:line="54" pos:column="11">(<expr><operator pos:line="54" pos:column="12">*<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">s<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">==<pos:position pos:line="54" pos:column="17"/></operator> <literal type="char" pos:line="54" pos:column="18">'.'<pos:position pos:line="54" pos:column="21"/></literal></expr>)<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22">
          <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="11">dot_idx<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">idx<pos:position pos:line="55" pos:column="24"/></name></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt></block></then></if>
      }<pos:position pos:line="56" pos:column="8"/></block></then>
      <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if<condition pos:line="57" pos:column="14">(<expr><operator pos:line="57" pos:column="15">*<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">s<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <literal type="char" pos:line="57" pos:column="21">'+'<pos:position pos:line="57" pos:column="24"/></literal> <operator pos:line="57" pos:column="25">&amp;&amp;<pos:position pos:line="57" pos:column="35"/></operator> <name><name pos:line="57" pos:column="28">s<pos:position pos:line="57" pos:column="29"/></name><index pos:line="57" pos:column="29">[<expr><literal type="number" pos:line="57" pos:column="30">1<pos:position pos:line="57" pos:column="31"/></literal></expr>]<pos:position pos:line="57" pos:column="32"/></index></name> <operator pos:line="57" pos:column="33">==<pos:position pos:line="57" pos:column="35"/></operator> <literal type="char" pos:line="57" pos:column="36">'+'<pos:position pos:line="57" pos:column="39"/></literal></expr>)<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40"> <block pos:line="57" pos:column="41">{
        <if pos:line="58" pos:column="9">if<condition pos:line="58" pos:column="11">(<expr><name pos:line="58" pos:column="12">idx<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">-<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">2<pos:position pos:line="58" pos:column="19"/></literal> <operator pos:line="58" pos:column="20">==<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="23">dot_idx<pos:position pos:line="58" pos:column="30"/></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31"> <block pos:line="58" pos:column="32">{ <comment type="block" pos:line="58" pos:column="34">/* .c++, .h++ etc. */</comment>
          <expr_stmt><expr><operator pos:line="59" pos:column="11">*<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">d<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">++<pos:position pos:line="59" pos:column="15"/></operator> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="char" pos:line="59" pos:column="18">'x'<pos:position pos:line="59" pos:column="21"/></literal></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="60" pos:column="11">*<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">d<pos:position pos:line="60" pos:column="13"/></name>   <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <literal type="char" pos:line="60" pos:column="18">'x'<pos:position pos:line="60" pos:column="21"/></literal></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then>
        <else pos:line="62" pos:column="9">else <block pos:line="62" pos:column="14">{
          <comment type="block" pos:line="63" pos:column="11">/* libg++ etc.  */</comment>
          <expr_stmt><expr><call><name pos:line="64" pos:column="11">memcpy<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">d<pos:position pos:line="64" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="22">"plus"<pos:position pos:line="64" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="30">4<pos:position pos:line="64" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="65" pos:column="11">d<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">+=<pos:position pos:line="65" pos:column="15"/></operator> <literal type="number" pos:line="65" pos:column="16">3<pos:position pos:line="65" pos:column="17"/></literal></expr>;<pos:position pos:line="65" pos:column="18"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="67" pos:column="9">s<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">++<pos:position pos:line="67" pos:column="12"/></operator></expr>;<pos:position pos:line="67" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">idx<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">++<pos:position pos:line="68" pos:column="14"/></operator></expr>;<pos:position pos:line="68" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="69" pos:column="8"/></block></then></if></elseif>
      <else pos:line="70" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="71" pos:column="9">*<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="10">d<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <literal type="char" pos:line="71" pos:column="14">'_'<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then>
    <else pos:line="73" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="7">*<pos:position pos:line="74" pos:column="8"/></operator><name pos:line="74" pos:column="8">d<pos:position pos:line="74" pos:column="9"/></name> <operator pos:line="74" pos:column="10">=<pos:position pos:line="74" pos:column="11"/></operator> <operator pos:line="74" pos:column="12">*<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">s<pos:position pos:line="74" pos:column="14"/></name></expr>;<pos:position pos:line="74" pos:column="15"/></expr_stmt></block></else></if>
    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><operator pos:line="75" pos:column="8">*<pos:position pos:line="75" pos:column="9"/></operator><name pos:line="75" pos:column="9">s<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">==<pos:position pos:line="75" pos:column="13"/></operator> <literal type="char" pos:line="75" pos:column="14">'/'<pos:position pos:line="75" pos:column="17"/></literal></expr>)<pos:position pos:line="75" pos:column="18"/></condition><then pos:line="75" pos:column="18"> <block pos:line="75" pos:column="19">{
      <expr_stmt><expr><name pos:line="76" pos:column="7">idx<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator> <literal type="number" pos:line="76" pos:column="13">0<pos:position pos:line="76" pos:column="14"/></literal></expr>;<pos:position pos:line="76" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">dot_idx<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <operator pos:line="77" pos:column="17">-<pos:position pos:line="77" pos:column="18"/></operator><literal type="number" pos:line="77" pos:column="18">1<pos:position pos:line="77" pos:column="19"/></literal></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then>
    <else pos:line="79" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="7">idx<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">++<pos:position pos:line="80" pos:column="12"/></operator></expr>;<pos:position pos:line="80" pos:column="13"/></expr_stmt></block></else></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <expr_stmt><expr><operator pos:line="83" pos:column="3">*<pos:position pos:line="83" pos:column="4"/></operator><name pos:line="83" pos:column="4">d<pos:position pos:line="83" pos:column="5"/></name> <operator pos:line="83" pos:column="6">=<pos:position pos:line="83" pos:column="7"/></operator> <literal type="char" pos:line="83" pos:column="8">'\0'<pos:position pos:line="83" pos:column="12"/></literal></expr>;<pos:position pos:line="83" pos:column="13"/></expr_stmt>
  <return pos:line="84" pos:column="3">return <expr><name pos:line="84" pos:column="10">dos_name<pos:position pos:line="84" pos:column="18"/></name></expr>;<pos:position pos:line="84" pos:column="19"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

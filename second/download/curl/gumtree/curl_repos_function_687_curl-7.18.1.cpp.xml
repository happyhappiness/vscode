<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_687_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_open<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">SessionHandle<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">curl<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">CURLE_OK<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">USE_ARES<pos:position pos:line="5" pos:column="16"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="9" pos:column="3">/* Very simple start-up: alloc the struct, init it with zeroes and return */</comment>
  <expr_stmt><expr><name pos:line="10" pos:column="3">data<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator>struct <name pos:line="10" pos:column="18">SessionHandle<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><call><name pos:line="10" pos:column="34">calloc<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><literal type="number" pos:line="10" pos:column="41">1<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="44">sizeof<argument_list pos:line="10" pos:column="50">(<argument><expr pos:line="10" pos:column="51">struct <name pos:line="10" pos:column="58">SessionHandle<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">data<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
    <comment type="block" pos:line="12" pos:column="5">/* this is a very serious error */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">DEBUGF<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><call><name pos:line="13" pos:column="12">fprintf<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">stderr<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"Error: calloc of SessionHandle failed\n"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">data<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">magic<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">CURLEASY_MAGIC_NUMBER<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>

<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">USE_ARES<pos:position pos:line="19" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">(<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">ares_init<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator><name><name pos:line="20" pos:column="27">data<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">state<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">areschannel<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call><operator pos:line="20" pos:column="51">)<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="53">!=<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">ARES_SUCCESS<pos:position pos:line="20" pos:column="68"/></name></expr>)<pos:position pos:line="20" pos:column="69"/></condition><then pos:line="20" pos:column="69"> <block pos:line="20" pos:column="70">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">DEBUGF<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><call><name pos:line="21" pos:column="12">fprintf<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">stderr<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="28">"Error: ares_init failed\n"<pos:position pos:line="21" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">data<pos:position pos:line="22" pos:column="14"/></name></expr></argument>)<pos:position pos:line="22" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">status<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">ARES_ENOMEM<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
      <block type="pseudo"><return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="24" pos:column="33"/></name></expr>;<pos:position pos:line="24" pos:column="34"/></return></block></then>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></return></block></else></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="28" pos:column="3">/* make sure that all other returns from this function should destroy the
     ares channel before returning error! */</comment>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="32" pos:column="3">/* We do some initial setup here, all those fields that can't be just 0 */</comment>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">data<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">state<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">headerbuff<pos:position pos:line="34" pos:column="25"/></name></name><operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator><operator pos:line="34" pos:column="26">(<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">char<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">*<pos:position pos:line="34" pos:column="32"/></operator><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator><call><name pos:line="34" pos:column="33">malloc<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">HEADERSIZE<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">!<pos:position pos:line="35" pos:column="7"/></operator><name><name pos:line="35" pos:column="7">data<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">state<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">headerbuff<pos:position pos:line="35" pos:column="29"/></name></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">DEBUGF<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><call><name pos:line="36" pos:column="12">fprintf<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">stderr<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="28">"Error: malloc of headerbuff failed\n"<pos:position pos:line="36" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">res<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <name pos:line="37" pos:column="11">CURLE_OUT_OF_MEMORY<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then>
  <else pos:line="39" pos:column="3">else <block pos:line="39" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">data<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">state<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">headersize<pos:position pos:line="40" pos:column="27"/></name></name><operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">HEADERSIZE<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">data<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">set<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">out<pos:position pos:line="42" pos:column="18"/></name></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">stdout<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt> <comment type="block" pos:line="42" pos:column="29">/* default output to stdout */</comment>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">data<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">set<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">in<pos:position pos:line="43" pos:column="17"/></name></name>  <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">stdin<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="43" pos:column="29">/* default input from stdin */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">data<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">set<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">err<pos:position pos:line="44" pos:column="18"/></name></name>  <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">stderr<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>  <comment type="block" pos:line="44" pos:column="31">/* default stderr to stderr */</comment>

    <comment type="block" pos:line="46" pos:column="5">/* use fwrite as default function to store output */</comment>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">data<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">set<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">fwrite_func<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="29">(<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">curl_write_callback<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">)<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">fwrite<pos:position pos:line="47" pos:column="56"/></name></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* use fread as default function to read input */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">data<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">set<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">.<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">fread_func<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <operator pos:line="50" pos:column="28">(<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">curl_read_callback<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">fread<pos:position pos:line="50" pos:column="53"/></name></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* don't use a seek function by default */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">data<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">set<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">.<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">seek_func<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">ZERO_NULL<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">data<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">set<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">.<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">seek_client<pos:position pos:line="54" pos:column="26"/></name></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="29">ZERO_NULL<pos:position pos:line="54" pos:column="38"/></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* conversion callbacks for non-ASCII hosts */</comment>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">data<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">set<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">convfromnetwork<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">ZERO_NULL<pos:position pos:line="57" pos:column="42"/></name></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">data<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">set<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">.<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">convtonetwork<pos:position pos:line="58" pos:column="28"/></name></name>   <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <name pos:line="58" pos:column="33">ZERO_NULL<pos:position pos:line="58" pos:column="42"/></name></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">set<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">convfromutf8<pos:position pos:line="59" pos:column="27"/></name></name>    <operator pos:line="59" pos:column="31">=<pos:position pos:line="59" pos:column="32"/></operator> <name pos:line="59" pos:column="33">ZERO_NULL<pos:position pos:line="59" pos:column="42"/></name></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>

<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><call><name pos:line="61" pos:column="5">defined<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">CURL_DOES_CONVERSIONS<pos:position pos:line="61" pos:column="34"/></name></expr></argument>)<pos:position pos:line="61" pos:column="35"/></argument_list></call> <operator pos:line="61" pos:column="36">&amp;&amp;<pos:position pos:line="61" pos:column="46"/></operator> <call><name pos:line="61" pos:column="39">defined<pos:position pos:line="61" pos:column="46"/></name><argument_list pos:line="61" pos:column="46">(<argument><expr><name pos:line="61" pos:column="47">HAVE_ICONV<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="62" pos:column="5">/* conversion descriptors for iconv calls */</comment>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">data<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">outbound_cd<pos:position pos:line="63" pos:column="22"/></name></name> <operator pos:line="63" pos:column="23">=<pos:position pos:line="63" pos:column="24"/></operator> <operator pos:line="63" pos:column="25">(<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">iconv_t<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">)<pos:position pos:line="63" pos:column="34"/></operator><operator pos:line="63" pos:column="34">-<pos:position pos:line="63" pos:column="35"/></operator><literal type="number" pos:line="63" pos:column="35">1<pos:position pos:line="63" pos:column="36"/></literal></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">data<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">inbound_cd<pos:position pos:line="64" pos:column="21"/></name></name>  <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">iconv_t<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">)<pos:position pos:line="64" pos:column="34"/></operator><operator pos:line="64" pos:column="34">-<pos:position pos:line="64" pos:column="35"/></operator><literal type="number" pos:line="64" pos:column="35">1<pos:position pos:line="64" pos:column="36"/></literal></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">data<pos:position pos:line="65" pos:column="9"/></name><operator pos:line="65" pos:column="9">-&gt;<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="11">utf8_cd<pos:position pos:line="65" pos:column="18"/></name></name>     <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <operator pos:line="65" pos:column="25">(<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">iconv_t<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator><operator pos:line="65" pos:column="34">-<pos:position pos:line="65" pos:column="35"/></operator><literal type="number" pos:line="65" pos:column="35">1<pos:position pos:line="65" pos:column="36"/></literal></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="66" pos:column="8">/* CURL_DOES_CONVERSIONS &amp;&amp; HAVE_ICONV */</comment>

    <expr_stmt><expr><name><name pos:line="68" pos:column="5">data<pos:position pos:line="68" pos:column="9"/></name><operator pos:line="68" pos:column="9">-&gt;<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="11">set<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">.<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="15">infilesize<pos:position pos:line="68" pos:column="25"/></name></name> <operator pos:line="68" pos:column="26">=<pos:position pos:line="68" pos:column="27"/></operator> <operator pos:line="68" pos:column="28">-<pos:position pos:line="68" pos:column="29"/></operator><literal type="number" pos:line="68" pos:column="29">1<pos:position pos:line="68" pos:column="30"/></literal></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt> <comment type="block" pos:line="68" pos:column="32">/* we don't know any size */</comment>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">data<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">set<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">.<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="15">postfieldsize<pos:position pos:line="69" pos:column="28"/></name></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <operator pos:line="69" pos:column="31">-<pos:position pos:line="69" pos:column="32"/></operator><literal type="number" pos:line="69" pos:column="32">1<pos:position pos:line="69" pos:column="33"/></literal></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">data<pos:position pos:line="70" pos:column="9"/></name><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">set<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">.<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">maxredirs<pos:position pos:line="70" pos:column="24"/></name></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <operator pos:line="70" pos:column="27">-<pos:position pos:line="70" pos:column="28"/></operator><literal type="number" pos:line="70" pos:column="28">1<pos:position pos:line="70" pos:column="29"/></literal></expr>;<pos:position pos:line="70" pos:column="30"/></expr_stmt> <comment type="block" pos:line="70" pos:column="31">/* allow any amount by default */</comment>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">data<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">state<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">current_speed<pos:position pos:line="71" pos:column="30"/></name></name> <operator pos:line="71" pos:column="31">=<pos:position pos:line="71" pos:column="32"/></operator> <operator pos:line="71" pos:column="33">-<pos:position pos:line="71" pos:column="34"/></operator><literal type="number" pos:line="71" pos:column="34">1<pos:position pos:line="71" pos:column="35"/></literal></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt> <comment type="block" pos:line="71" pos:column="37">/* init to negative == impossible */</comment>

    <expr_stmt><expr><name><name pos:line="73" pos:column="5">data<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">set<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">.<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">httpreq<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">HTTPREQ_GET<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt> <comment type="block" pos:line="73" pos:column="38">/* Default HTTP request */</comment>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">data<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">set<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">.<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">ftp_use_epsv<pos:position pos:line="74" pos:column="27"/></name></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <name pos:line="74" pos:column="30">TRUE<pos:position pos:line="74" pos:column="34"/></name></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>   <comment type="block" pos:line="74" pos:column="38">/* FTP defaults to EPSV operations */</comment>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">data<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">set<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">.<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="15">ftp_use_eprt<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">=<pos:position pos:line="75" pos:column="29"/></operator> <name pos:line="75" pos:column="30">TRUE<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>   <comment type="block" pos:line="75" pos:column="38">/* FTP defaults to EPRT operations */</comment>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">data<pos:position pos:line="76" pos:column="9"/></name><operator pos:line="76" pos:column="9">-&gt;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="11">set<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">.<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">ftp_filemethod<pos:position pos:line="76" pos:column="29"/></name></name> <operator pos:line="76" pos:column="30">=<pos:position pos:line="76" pos:column="31"/></operator> <name pos:line="76" pos:column="32">FTPFILE_MULTICWD<pos:position pos:line="76" pos:column="48"/></name></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">data<pos:position pos:line="77" pos:column="9"/></name><operator pos:line="77" pos:column="9">-&gt;<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="11">set<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">.<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">dns_cache_timeout<pos:position pos:line="77" pos:column="32"/></name></name> <operator pos:line="77" pos:column="33">=<pos:position pos:line="77" pos:column="34"/></operator> <literal type="number" pos:line="77" pos:column="35">60<pos:position pos:line="77" pos:column="37"/></literal></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt> <comment type="block" pos:line="77" pos:column="39">/* Timeout every 60 seconds by default */</comment>

    <comment type="block" pos:line="79" pos:column="5">/* make libcurl quiet by default: */</comment>
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">data<pos:position pos:line="80" pos:column="9"/></name><operator pos:line="80" pos:column="9">-&gt;<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="11">set<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">.<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">hide_progress<pos:position pos:line="80" pos:column="28"/></name></name> <operator pos:line="80" pos:column="29">=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">TRUE<pos:position pos:line="80" pos:column="35"/></name></expr>;<pos:position pos:line="80" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="80" pos:column="38">/* CURLOPT_NOPROGRESS changes these */</comment>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">data<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">progress<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">flags<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">|=<pos:position pos:line="81" pos:column="28"/></operator> <name pos:line="81" pos:column="29">PGRS_HIDE<pos:position pos:line="81" pos:column="38"/></name></expr>;<pos:position pos:line="81" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="83" pos:column="5">/* Set the default size of the SSL session ID cache */</comment>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">data<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">set<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">.<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">ssl<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">.<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">numsessions<pos:position pos:line="84" pos:column="30"/></name></name> <operator pos:line="84" pos:column="31">=<pos:position pos:line="84" pos:column="32"/></operator> <literal type="number" pos:line="84" pos:column="33">5<pos:position pos:line="84" pos:column="34"/></literal></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="86" pos:column="5">data<pos:position pos:line="86" pos:column="9"/></name><operator pos:line="86" pos:column="9">-&gt;<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="11">set<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">.<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="15">proxyport<pos:position pos:line="86" pos:column="24"/></name></name> <operator pos:line="86" pos:column="25">=<pos:position pos:line="86" pos:column="26"/></operator> <literal type="number" pos:line="86" pos:column="27">1080<pos:position pos:line="86" pos:column="31"/></literal></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">data<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="11">set<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">.<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="15">proxytype<pos:position pos:line="87" pos:column="24"/></name></name> <operator pos:line="87" pos:column="25">=<pos:position pos:line="87" pos:column="26"/></operator> <name pos:line="87" pos:column="27">CURLPROXY_HTTP<pos:position pos:line="87" pos:column="41"/></name></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt> <comment type="block" pos:line="87" pos:column="43">/* defaults to HTTP proxy */</comment>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">data<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">-&gt;<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="11">set<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">.<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="15">httpauth<pos:position pos:line="88" pos:column="23"/></name></name> <operator pos:line="88" pos:column="24">=<pos:position pos:line="88" pos:column="25"/></operator> <name pos:line="88" pos:column="26">CURLAUTH_BASIC<pos:position pos:line="88" pos:column="40"/></name></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>  <comment type="block" pos:line="88" pos:column="43">/* defaults to basic */</comment>
    <expr_stmt><expr><name><name pos:line="89" pos:column="5">data<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">set<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">.<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="15">proxyauth<pos:position pos:line="89" pos:column="24"/></name></name> <operator pos:line="89" pos:column="25">=<pos:position pos:line="89" pos:column="26"/></operator> <name pos:line="89" pos:column="27">CURLAUTH_BASIC<pos:position pos:line="89" pos:column="41"/></name></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt> <comment type="block" pos:line="89" pos:column="43">/* defaults to basic */</comment>

    <comment type="block" pos:line="91" pos:column="5">/* This no longer creates a connection cache here. It is instead made on
       the first call to curl_easy_perform() or when the handle is added to a
       multi stack. */</comment>

    <expr_stmt><expr><name><name pos:line="95" pos:column="5">data<pos:position pos:line="95" pos:column="9"/></name><operator pos:line="95" pos:column="9">-&gt;<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="11">set<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">.<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="15">ssh_auth_types<pos:position pos:line="95" pos:column="29"/></name></name> <operator pos:line="95" pos:column="30">=<pos:position pos:line="95" pos:column="31"/></operator> <name pos:line="95" pos:column="32">CURLSSH_AUTH_DEFAULT<pos:position pos:line="95" pos:column="52"/></name></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt> <comment type="block" pos:line="95" pos:column="54">/* defaults to any auth
                                                        type */</comment>
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">data<pos:position pos:line="97" pos:column="9"/></name><operator pos:line="97" pos:column="9">-&gt;<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="11">set<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">.<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">new_file_perms<pos:position pos:line="97" pos:column="29"/></name></name> <operator pos:line="97" pos:column="30">=<pos:position pos:line="97" pos:column="31"/></operator> <literal type="number" pos:line="97" pos:column="32">0644<pos:position pos:line="97" pos:column="36"/></literal></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>    <comment type="block" pos:line="97" pos:column="41">/* Default permissions */</comment>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">data<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">-&gt;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="11">set<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">.<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="15">new_directory_perms<pos:position pos:line="98" pos:column="34"/></name></name> <operator pos:line="98" pos:column="35">=<pos:position pos:line="98" pos:column="36"/></operator> <literal type="number" pos:line="98" pos:column="37">0755<pos:position pos:line="98" pos:column="41"/></literal></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt> <comment type="block" pos:line="98" pos:column="43">/* Default permissions */</comment>

    <comment type="block" pos:line="100" pos:column="5">/* most recent connection is not yet defined */</comment>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">data<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">state<pos:position pos:line="101" pos:column="16"/></name><operator pos:line="101" pos:column="16">.<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="17">lastconnect<pos:position pos:line="101" pos:column="28"/></name></name> <operator pos:line="101" pos:column="29">=<pos:position pos:line="101" pos:column="30"/></operator> <operator pos:line="101" pos:column="31">-<pos:position pos:line="101" pos:column="32"/></operator><literal type="number" pos:line="101" pos:column="32">1<pos:position pos:line="101" pos:column="33"/></literal></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="103" pos:column="5">Curl_easy_initHandleData<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">data<pos:position pos:line="103" pos:column="34"/></name></expr></argument>)<pos:position pos:line="103" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="105" pos:column="5">/*
     * libcurl 7.10 introduced SSL verification *by default*! This needs to be
     * switched off unless wanted.
     */</comment>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">data<pos:position pos:line="109" pos:column="9"/></name><operator pos:line="109" pos:column="9">-&gt;<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="11">set<pos:position pos:line="109" pos:column="14"/></name><operator pos:line="109" pos:column="14">.<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="15">ssl<pos:position pos:line="109" pos:column="18"/></name><operator pos:line="109" pos:column="18">.<pos:position pos:line="109" pos:column="19"/></operator><name pos:line="109" pos:column="19">verifypeer<pos:position pos:line="109" pos:column="29"/></name></name> <operator pos:line="109" pos:column="30">=<pos:position pos:line="109" pos:column="31"/></operator> <name pos:line="109" pos:column="32">TRUE<pos:position pos:line="109" pos:column="36"/></name></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="110" pos:column="5">data<pos:position pos:line="110" pos:column="9"/></name><operator pos:line="110" pos:column="9">-&gt;<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="11">set<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">.<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="15">ssl<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">.<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">verifyhost<pos:position pos:line="110" pos:column="29"/></name></name> <operator pos:line="110" pos:column="30">=<pos:position pos:line="110" pos:column="31"/></operator> <literal type="number" pos:line="110" pos:column="32">2<pos:position pos:line="110" pos:column="33"/></literal></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">data<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">-&gt;<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="11">set<pos:position pos:line="111" pos:column="14"/></name><operator pos:line="111" pos:column="14">.<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="15">ssl<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">.<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="19">sessionid<pos:position pos:line="111" pos:column="28"/></name></name> <operator pos:line="111" pos:column="29">=<pos:position pos:line="111" pos:column="30"/></operator> <name pos:line="111" pos:column="31">TRUE<pos:position pos:line="111" pos:column="35"/></name></expr>;<pos:position pos:line="111" pos:column="36"/></expr_stmt> <comment type="block" pos:line="111" pos:column="37">/* session ID caching enabled by default */</comment>
    <comment type="block" pos:line="112" pos:column="5">/* This is our preferred CA cert bundle/path since install time */</comment>
<cpp:if pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">if<pos:position pos:line="113" pos:column="4"/></cpp:directive> <expr><call><name pos:line="113" pos:column="5">defined<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">CURL_CA_BUNDLE<pos:position pos:line="113" pos:column="27"/></name></expr></argument>)<pos:position pos:line="113" pos:column="28"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name pos:line="114" pos:column="5">res<pos:position pos:line="114" pos:column="8"/></name> <operator pos:line="114" pos:column="9">=<pos:position pos:line="114" pos:column="10"/></operator> <call><name pos:line="114" pos:column="11">setstropt<pos:position pos:line="114" pos:column="20"/></name><argument_list pos:line="114" pos:column="20">(<argument><expr><operator pos:line="114" pos:column="21">&amp;<pos:position pos:line="114" pos:column="26"/></operator><name><name pos:line="114" pos:column="22">data<pos:position pos:line="114" pos:column="26"/></name><operator pos:line="114" pos:column="26">-&gt;<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="28">set<pos:position pos:line="114" pos:column="31"/></name><operator pos:line="114" pos:column="31">.<pos:position pos:line="114" pos:column="32"/></operator><name pos:line="114" pos:column="32">str<pos:position pos:line="114" pos:column="35"/></name><index pos:line="114" pos:column="35">[<expr><name pos:line="114" pos:column="36">STRING_SSL_CAFILE<pos:position pos:line="114" pos:column="53"/></name></expr>]<pos:position pos:line="114" pos:column="54"/></index></name></expr></argument>,
                         <argument><expr><operator pos:line="115" pos:column="26">(<pos:position pos:line="115" pos:column="27"/></operator><name pos:line="115" pos:column="27">char<pos:position pos:line="115" pos:column="31"/></name> <operator pos:line="115" pos:column="32">*<pos:position pos:line="115" pos:column="33"/></operator><operator pos:line="115" pos:column="33">)<pos:position pos:line="115" pos:column="34"/></operator> <name pos:line="115" pos:column="35">CURL_CA_BUNDLE<pos:position pos:line="115" pos:column="49"/></name></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="51"/></expr_stmt>
<cpp:elif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">elif<pos:position pos:line="116" pos:column="6"/></cpp:directive> <expr><call><name pos:line="116" pos:column="7">defined<pos:position pos:line="116" pos:column="14"/></name><argument_list pos:line="116" pos:column="14">(<argument><expr><name pos:line="116" pos:column="15">CURL_CA_PATH<pos:position pos:line="116" pos:column="27"/></name></expr></argument>)<pos:position pos:line="116" pos:column="28"/></argument_list></call></expr></cpp:elif>
    <expr_stmt><expr><name pos:line="117" pos:column="5">res<pos:position pos:line="117" pos:column="8"/></name> <operator pos:line="117" pos:column="9">=<pos:position pos:line="117" pos:column="10"/></operator> <call><name pos:line="117" pos:column="11">setstropt<pos:position pos:line="117" pos:column="20"/></name><argument_list pos:line="117" pos:column="20">(<argument><expr><operator pos:line="117" pos:column="21">&amp;<pos:position pos:line="117" pos:column="26"/></operator><name><name pos:line="117" pos:column="22">data<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">set<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">.<pos:position pos:line="117" pos:column="32"/></operator><name pos:line="117" pos:column="32">str<pos:position pos:line="117" pos:column="35"/></name><index pos:line="117" pos:column="35">[<expr><name pos:line="117" pos:column="36">STRING_SSL_CAPATH<pos:position pos:line="117" pos:column="53"/></name></expr>]<pos:position pos:line="117" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="56">(<pos:position pos:line="117" pos:column="57"/></operator><name pos:line="117" pos:column="57">char<pos:position pos:line="117" pos:column="61"/></name> <operator pos:line="117" pos:column="62">*<pos:position pos:line="117" pos:column="63"/></operator><operator pos:line="117" pos:column="63">)<pos:position pos:line="117" pos:column="64"/></operator> <name pos:line="117" pos:column="65">CURL_CA_PATH<pos:position pos:line="117" pos:column="77"/></name></expr></argument>)<pos:position pos:line="117" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="119" pos:column="4"/></block></else></if>

  <if pos:line="121" pos:column="3">if<condition pos:line="121" pos:column="5">(<expr><name pos:line="121" pos:column="6">res<pos:position pos:line="121" pos:column="9"/></name></expr>)<pos:position pos:line="121" pos:column="10"/></condition><then pos:line="121" pos:column="10"> <block pos:line="121" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">ares_destroy<pos:position pos:line="122" pos:column="17"/></name><argument_list pos:line="122" pos:column="17">(<argument><expr><name><name pos:line="122" pos:column="18">data<pos:position pos:line="122" pos:column="22"/></name><operator pos:line="122" pos:column="22">-&gt;<pos:position pos:line="122" pos:column="27"/></operator><name pos:line="122" pos:column="24">state<pos:position pos:line="122" pos:column="29"/></name><operator pos:line="122" pos:column="29">.<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="30">areschannel<pos:position pos:line="122" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="43"/></expr_stmt>
    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">(<expr><name><name pos:line="123" pos:column="8">data<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">-&gt;<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="14">state<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">.<pos:position pos:line="123" pos:column="20"/></operator><name pos:line="123" pos:column="20">headerbuff<pos:position pos:line="123" pos:column="30"/></name></name></expr>)<pos:position pos:line="123" pos:column="31"/></condition><then pos:line="123" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="7">free<pos:position pos:line="124" pos:column="11"/></name><argument_list pos:line="124" pos:column="11">(<argument><expr><name><name pos:line="124" pos:column="12">data<pos:position pos:line="124" pos:column="16"/></name><operator pos:line="124" pos:column="16">-&gt;<pos:position pos:line="124" pos:column="21"/></operator><name pos:line="124" pos:column="18">state<pos:position pos:line="124" pos:column="23"/></name><operator pos:line="124" pos:column="23">.<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="24">headerbuff<pos:position pos:line="124" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="36"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">Curl_freeset<pos:position pos:line="125" pos:column="17"/></name><argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">data<pos:position pos:line="125" pos:column="22"/></name></expr></argument>)<pos:position pos:line="125" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">free<pos:position pos:line="126" pos:column="9"/></name><argument_list pos:line="126" pos:column="9">(<argument><expr><name pos:line="126" pos:column="10">data<pos:position pos:line="126" pos:column="14"/></name></expr></argument>)<pos:position pos:line="126" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="127" pos:column="5">data<pos:position pos:line="127" pos:column="9"/></name> <operator pos:line="127" pos:column="10">=<pos:position pos:line="127" pos:column="11"/></operator> <name pos:line="127" pos:column="12">NULL<pos:position pos:line="127" pos:column="16"/></name></expr>;<pos:position pos:line="127" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="128" pos:column="4"/></block></then>
  <else pos:line="129" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="130" pos:column="5">*<pos:position pos:line="130" pos:column="6"/></operator><name pos:line="130" pos:column="6">curl<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">=<pos:position pos:line="130" pos:column="12"/></operator> <name pos:line="130" pos:column="13">data<pos:position pos:line="130" pos:column="17"/></name></expr>;<pos:position pos:line="130" pos:column="18"/></expr_stmt></block></else></if>

  <return pos:line="132" pos:column="3">return <expr><name pos:line="132" pos:column="10">res<pos:position pos:line="132" pos:column="13"/></name></expr>;<pos:position pos:line="132" pos:column="14"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

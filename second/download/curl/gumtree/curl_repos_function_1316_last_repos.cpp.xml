<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1316_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_resolver_is_resolved<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">Curl_dns_entry<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">entry<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">thread_data<pos:position pos:line="5" pos:column="21"/></name></name>   <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">td<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator>struct <name pos:line="5" pos:column="38">thread_data<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></operator><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator> <name><name pos:line="5" pos:column="52">conn<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">-&gt;<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="58">async<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">.<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">os_specific<pos:position pos:line="5" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">done<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">entry<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">td<pos:position pos:line="10" pos:column="9"/></name></expr>)<pos:position pos:line="10" pos:column="10"/></condition><then pos:line="10" pos:column="10"> <block pos:line="10" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">DEBUGASSERT<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">td<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">Curl_mutex_acquire<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">td<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">tsd<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">mtx<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">done<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <name><name pos:line="16" pos:column="10">td<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">tsd<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">done<pos:position pos:line="16" pos:column="22"/></name></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">Curl_mutex_release<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">td<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">tsd<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">mtx<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">done<pos:position pos:line="19" pos:column="10"/></name></expr>)<pos:position pos:line="19" pos:column="11"/></condition><then pos:line="19" pos:column="11"> <block pos:line="19" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">getaddrinfo_complete<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">conn<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>

    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name><name pos:line="22" pos:column="9">conn<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">async<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">dns<pos:position pos:line="22" pos:column="24"/></name></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">CURLcode<pos:position pos:line="23" pos:column="15"/></name></type> <name pos:line="23" pos:column="16">result<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><call><name pos:line="23" pos:column="25">resolver_error<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">conn<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">destroy_async_data<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name><name pos:line="24" pos:column="27">conn<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">async<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">result<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">destroy_async_data<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name><name pos:line="27" pos:column="25">conn<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">async<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">entry<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <name><name pos:line="28" pos:column="14">conn<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">async<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">.<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">dns<pos:position pos:line="28" pos:column="29"/></name></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then>
  <else pos:line="30" pos:column="3">else <block pos:line="30" pos:column="8">{
    <comment type="block" pos:line="31" pos:column="5">/* poll for name lookup done with exponential backoff up to 250ms */</comment>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">time_t<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">elapsed<pos:position pos:line="32" pos:column="19"/></name> <init pos:line="32" pos:column="20">= <expr><call><name pos:line="32" pos:column="22">Curl_tvdiff<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><call><name pos:line="32" pos:column="34">Curl_tvnow<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">()<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">data<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">-&gt;<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="54">progress<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">.<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="63">t_startsingle<pos:position pos:line="32" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="78"/></decl_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">elapsed<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&lt;<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">elapsed<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt></block></then></if>

    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name><name pos:line="36" pos:column="8">td<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">poll_interval<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
      <comment type="block" pos:line="37" pos:column="7">/* Start at 1ms poll interval */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="7">td<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">poll_interval<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <literal type="number" pos:line="38" pos:column="27">1<pos:position pos:line="38" pos:column="28"/></literal></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if<condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">elapsed<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">&gt;=<pos:position pos:line="39" pos:column="26"/></operator> <name><name pos:line="39" pos:column="24">td<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">interval_end<pos:position pos:line="39" pos:column="40"/></name></name></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
      <comment type="block" pos:line="40" pos:column="7">/* Back-off exponentially if last interval expired  */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="7">td<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">poll_interval<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">*=<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="28">2<pos:position pos:line="41" pos:column="29"/></literal></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name><name pos:line="43" pos:column="8">td<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">poll_interval<pos:position pos:line="43" pos:column="25"/></name></name> <operator pos:line="43" pos:column="26">&gt;<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="28">250<pos:position pos:line="43" pos:column="31"/></literal></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="7">td<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">poll_interval<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">250<pos:position pos:line="44" pos:column="30"/></literal></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">td<pos:position pos:line="46" pos:column="7"/></name><operator pos:line="46" pos:column="7">-&gt;<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="9">interval_end<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">elapsed<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">+<pos:position pos:line="46" pos:column="33"/></operator> <name><name pos:line="46" pos:column="34">td<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">poll_interval<pos:position pos:line="46" pos:column="51"/></name></name></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">Curl_expire<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">conn<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">data<pos:position pos:line="47" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="29">td<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">poll_interval<pos:position pos:line="47" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">EXPIRE_ASYNC_NAME<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">CURLE_OK<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

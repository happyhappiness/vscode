<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_915_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">add_file_name_to_url<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">CURL<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">curl<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">url<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">filename<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* If no file name part is given in the URL, we add this file name */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">strstr<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">url<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"://"<pos:position pos:line="4" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">ptr<pos:position pos:line="5" pos:column="9"/></name></expr>)<pos:position pos:line="5" pos:column="10"/></condition><then pos:line="5" pos:column="10">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">ptr<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">+=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="number" pos:line="6" pos:column="12">3<pos:position pos:line="6" pos:column="13"/></literal></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt></block></then>
  <else pos:line="7" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">ptr<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">url<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt></block></else></if>
  <expr_stmt><expr><name pos:line="9" pos:column="3">ptr<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">strrchr<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">ptr<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="22">'/'<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">ptr<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">||<pos:position pos:line="10" pos:column="13"/></operator> <operator pos:line="10" pos:column="14">!<pos:position pos:line="10" pos:column="15"/></operator><call><name pos:line="10" pos:column="15">strlen<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><operator pos:line="10" pos:column="22">++<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">ptr<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
    <comment type="block" pos:line="11" pos:column="5">/* The URL has no file name part, add the local file name. In order
       to be able to do so, we have to create a new URL in another
       buffer.*/</comment>

    <comment type="block" pos:line="15" pos:column="5">/* We only want the part of the local path that is on the right
       side of the rightmost slash and backslash. */</comment>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">char<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">filep<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><call><name pos:line="17" pos:column="25">strrchr<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">filename<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="43">'/'<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">file2<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><call><name pos:line="18" pos:column="19">strrchr<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><ternary><condition><expr><name pos:line="18" pos:column="27">filep<pos:position pos:line="18" pos:column="32"/></name></expr>?<pos:position pos:line="18" pos:column="33"/></condition><then><expr><name pos:line="18" pos:column="33">filep<pos:position pos:line="18" pos:column="38"/></name></expr></then><else pos:line="18" pos:column="38">:<expr><name pos:line="18" pos:column="39">filename<pos:position pos:line="18" pos:column="47"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="49">'\\'<pos:position pos:line="18" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">encfile<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">file2<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">filep<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">file2<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">+<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if<condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">filep<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">filep<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">++<pos:position pos:line="24" pos:column="14"/></operator></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt></block></then></if></elseif>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">filep<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">filename<pos:position pos:line="26" pos:column="23"/></name></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="28" pos:column="5">/* URL encode the file name */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">encfile<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">curl_easy_escape<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">curl<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">filep<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="45">0<pos:position pos:line="29" pos:column="46"/></literal></expr></argument> <comment type="block" pos:line="29" pos:column="47">/* use strlen */</comment>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">encfile<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">char<pos:position pos:line="31" pos:column="11"/></name> <modifier pos:line="31" pos:column="12">*<pos:position pos:line="31" pos:column="13"/></modifier></type><name pos:line="31" pos:column="13">urlbuffer<pos:position pos:line="31" pos:column="22"/></name></decl>;<pos:position pos:line="31" pos:column="23"/></decl_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">ptr<pos:position pos:line="32" pos:column="13"/></name></expr>)<pos:position pos:line="32" pos:column="14"/></condition><then pos:line="32" pos:column="14">
        <comment type="block" pos:line="33" pos:column="9">/* there is a trailing slash on the URL */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">urlbuffer<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">aprintf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"%s%s"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">url<pos:position pos:line="34" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">encfile<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt></block></then>
      <else pos:line="35" pos:column="7">else
        <comment type="block" pos:line="36" pos:column="9">/* there is no trailing slash on the URL */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">urlbuffer<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">aprintf<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"%s/%s"<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">url<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">encfile<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="39" pos:column="7">curl_free<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">encfile<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">Curl_safefree<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">url<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><operator pos:line="42" pos:column="10">!<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">urlbuffer<pos:position pos:line="42" pos:column="20"/></name></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">NULL<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="45" pos:column="7">url<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <name pos:line="45" pos:column="13">urlbuffer<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt> <comment type="block" pos:line="45" pos:column="24">/* use our new URL instead! */</comment>
    }<pos:position pos:line="46" pos:column="6"/></block></then>
    <else pos:line="47" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">Curl_safefree<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">url<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt></block></else></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>
  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">url<pos:position pos:line="50" pos:column="13"/></name></expr>;<pos:position pos:line="50" pos:column="14"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

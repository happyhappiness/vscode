<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2395_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ossl_connect_common<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">sockindex<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">bool<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">nonblocking<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">bool<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">done<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">ssl_connect_data<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">connssl<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name><name pos:line="8" pos:column="39">conn<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">ssl<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">sockindex<pos:position pos:line="8" pos:column="58"/></name></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">curl_socket_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">sockfd<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">conn<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">sock<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">sockindex<pos:position pos:line="9" pos:column="46"/></name></expr>]<pos:position pos:line="9" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">time_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">timeout_ms<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">what<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* check if the connection has already been established */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">ssl_connection_complete<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">==<pos:position pos:line="14" pos:column="32"/></operator> <name><name pos:line="14" pos:column="33">connssl<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">state<pos:position pos:line="14" pos:column="47"/></name></name></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">done<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">TRUE<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OK<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">ssl_connect_1<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">==<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="23">connssl<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">connecting_state<pos:position pos:line="19" pos:column="48"/></name></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
    <comment type="block" pos:line="20" pos:column="5">/* Find out how much more time we're allowed */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">timeout_ms<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">Curl_timeleft<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">data<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">NULL<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">TRUE<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>

    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">timeout_ms<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23"> <block pos:line="23" pos:column="24">{
      <comment type="block" pos:line="24" pos:column="7">/* no need to continue if time already is up */</comment>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">failf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">data<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="19">"SSL connection timeout"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">result<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">ossl_connect_step1<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">conn<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">sockindex<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">result<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15">
      <block type="pseudo"><return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">result<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <while pos:line="34" pos:column="3">while<condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">ssl_connect_2<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">==<pos:position pos:line="34" pos:column="25"/></operator> <name><name pos:line="34" pos:column="26">connssl<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">connecting_state<pos:position pos:line="34" pos:column="51"/></name></name> <operator pos:line="34" pos:column="52">||<pos:position pos:line="34" pos:column="54"/></operator>
        <name pos:line="35" pos:column="9">ssl_connect_2_reading<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">==<pos:position pos:line="35" pos:column="33"/></operator> <name><name pos:line="35" pos:column="34">connssl<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">connecting_state<pos:position pos:line="35" pos:column="59"/></name></name> <operator pos:line="35" pos:column="60">||<pos:position pos:line="35" pos:column="62"/></operator>
        <name pos:line="36" pos:column="9">ssl_connect_2_writing<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="34">connssl<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">connecting_state<pos:position pos:line="36" pos:column="59"/></name></name></expr>)<pos:position pos:line="36" pos:column="60"/></condition> <block pos:line="36" pos:column="61">{

    <comment type="block" pos:line="38" pos:column="5">/* check allowed time left */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">timeout_ms<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">Curl_timeleft<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">data<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">NULL<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">TRUE<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">timeout_ms<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">&lt;<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="21">0<pos:position pos:line="41" pos:column="22"/></literal></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block pos:line="41" pos:column="24">{
      <comment type="block" pos:line="42" pos:column="7">/* no need to continue if time already is up */</comment>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">failf<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">data<pos:position pos:line="43" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="19">"SSL connection timeout"<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><name pos:line="44" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="44" pos:column="38"/></name></expr>;<pos:position pos:line="44" pos:column="39"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* if ssl is expecting something, check if it's available. */</comment>
    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name><name pos:line="48" pos:column="8">connssl<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">connecting_state<pos:position pos:line="48" pos:column="33"/></name></name> <operator pos:line="48" pos:column="34">==<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">ssl_connect_2_reading<pos:position pos:line="48" pos:column="58"/></name> <operator pos:line="48" pos:column="59">||<pos:position pos:line="48" pos:column="61"/></operator>
       <name><name pos:line="49" pos:column="8">connssl<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">connecting_state<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">==<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">ssl_connect_2_writing<pos:position pos:line="49" pos:column="58"/></name></expr>)<pos:position pos:line="49" pos:column="59"/></condition><then pos:line="49" pos:column="59"> <block pos:line="49" pos:column="60">{

      <decl_stmt><decl><type><name pos:line="51" pos:column="7">curl_socket_t<pos:position pos:line="51" pos:column="20"/></name></type> <name pos:line="51" pos:column="21">writefd<pos:position pos:line="51" pos:column="28"/></name> <init pos:line="51" pos:column="29">= <expr><ternary><condition><expr><name pos:line="51" pos:column="31">ssl_connect_2_writing<pos:position pos:line="51" pos:column="52"/></name> <operator pos:line="51" pos:column="53">==<pos:position pos:line="51" pos:column="55"/></operator>
        <name><name pos:line="52" pos:column="9">connssl<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">connecting_state<pos:position pos:line="52" pos:column="34"/></name></name></expr>?<pos:position pos:line="52" pos:column="35"/></condition><then><expr><name pos:line="52" pos:column="35">sockfd<pos:position pos:line="52" pos:column="41"/></name></expr></then><else pos:line="52" pos:column="41">:<expr><name pos:line="52" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="52" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="52" pos:column="58"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="53" pos:column="7">curl_socket_t<pos:position pos:line="53" pos:column="20"/></name></type> <name pos:line="53" pos:column="21">readfd<pos:position pos:line="53" pos:column="27"/></name> <init pos:line="53" pos:column="28">= <expr><ternary><condition><expr><name pos:line="53" pos:column="30">ssl_connect_2_reading<pos:position pos:line="53" pos:column="51"/></name> <operator pos:line="53" pos:column="52">==<pos:position pos:line="53" pos:column="54"/></operator>
        <name><name pos:line="54" pos:column="9">connssl<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">connecting_state<pos:position pos:line="54" pos:column="34"/></name></name></expr>?<pos:position pos:line="54" pos:column="35"/></condition><then><expr><name pos:line="54" pos:column="35">sockfd<pos:position pos:line="54" pos:column="41"/></name></expr></then><else pos:line="54" pos:column="41">:<expr><name pos:line="54" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="54" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="54" pos:column="58"/></decl_stmt>

      <expr_stmt><expr><name pos:line="56" pos:column="7">what<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">Curl_socket_check<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">readfd<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">CURL_SOCKET_BAD<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">writefd<pos:position pos:line="56" pos:column="64"/></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><name pos:line="57" pos:column="32">nonblocking<pos:position pos:line="57" pos:column="43"/></name></expr>?<pos:position pos:line="57" pos:column="44"/></condition><then><expr><literal type="number" pos:line="57" pos:column="44">0<pos:position pos:line="57" pos:column="45"/></literal></expr></then><else pos:line="57" pos:column="45">:<expr><name pos:line="57" pos:column="46">timeout_ms<pos:position pos:line="57" pos:column="56"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
      <if pos:line="58" pos:column="7">if<condition pos:line="58" pos:column="9">(<expr><name pos:line="58" pos:column="10">what<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">&lt;<pos:position pos:line="58" pos:column="19"/></operator> <literal type="number" pos:line="58" pos:column="17">0<pos:position pos:line="58" pos:column="18"/></literal></expr>)<pos:position pos:line="58" pos:column="19"/></condition><then pos:line="58" pos:column="19"> <block pos:line="58" pos:column="20">{
        <comment type="block" pos:line="59" pos:column="9">/* fatal error */</comment>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">failf<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">data<pos:position pos:line="60" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="21">"select/poll on SSL socket, errno: %d"<pos:position pos:line="60" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="61">SOCKERRNO<pos:position pos:line="60" pos:column="70"/></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="72"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></return>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal> <operator pos:line="63" pos:column="12">==<pos:position pos:line="63" pos:column="14"/></operator> <name pos:line="63" pos:column="15">what<pos:position pos:line="63" pos:column="19"/></name></expr>)<pos:position pos:line="63" pos:column="20"/></condition><then pos:line="63" pos:column="20"> <block pos:line="63" pos:column="21">{
        <if pos:line="64" pos:column="9">if<condition pos:line="64" pos:column="11">(<expr><name pos:line="64" pos:column="12">nonblocking<pos:position pos:line="64" pos:column="23"/></name></expr>)<pos:position pos:line="64" pos:column="24"/></condition><then pos:line="64" pos:column="24"> <block pos:line="64" pos:column="25">{
          <expr_stmt><expr><operator pos:line="65" pos:column="11">*<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">done<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">FALSE<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
          <return pos:line="66" pos:column="11">return <expr><name pos:line="66" pos:column="18">CURLE_OK<pos:position pos:line="66" pos:column="26"/></name></expr>;<pos:position pos:line="66" pos:column="27"/></return>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="68" pos:column="9">/* timeout */</comment>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">failf<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><name pos:line="69" pos:column="15">data<pos:position pos:line="69" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="21">"SSL connection timeout"<pos:position pos:line="69" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="70" pos:column="40"/></name></expr>;<pos:position pos:line="70" pos:column="41"/></return>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="72" pos:column="7">/* socket is readable or writable */</comment>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* Run transaction, and return to the caller if it failed or if this
     * connection is done nonblocking and this loop would execute again. This
     * permits the owner of a multi handle to abort a connection attempt
     * before step2 has completed while ensuring that a client using select()
     * or epoll() will always have a valid fdset to wait on.
     */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">result<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <call><name pos:line="81" pos:column="14">ossl_connect_step2<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name pos:line="81" pos:column="33">conn<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">sockindex<pos:position pos:line="81" pos:column="48"/></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><name pos:line="82" pos:column="8">result<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">||<pos:position pos:line="82" pos:column="17"/></operator> <operator pos:line="82" pos:column="18">(<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="19">nonblocking<pos:position pos:line="82" pos:column="30"/></name> <operator pos:line="82" pos:column="31">&amp;&amp;<pos:position pos:line="82" pos:column="41"/></operator>
                  <operator pos:line="83" pos:column="19">(<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="20">ssl_connect_2<pos:position pos:line="83" pos:column="33"/></name> <operator pos:line="83" pos:column="34">==<pos:position pos:line="83" pos:column="36"/></operator> <name><name pos:line="83" pos:column="37">connssl<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">connecting_state<pos:position pos:line="83" pos:column="62"/></name></name> <operator pos:line="83" pos:column="63">||<pos:position pos:line="83" pos:column="65"/></operator>
                   <name pos:line="84" pos:column="20">ssl_connect_2_reading<pos:position pos:line="84" pos:column="41"/></name> <operator pos:line="84" pos:column="42">==<pos:position pos:line="84" pos:column="44"/></operator> <name><name pos:line="84" pos:column="45">connssl<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">-&gt;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="54">connecting_state<pos:position pos:line="84" pos:column="70"/></name></name> <operator pos:line="84" pos:column="71">||<pos:position pos:line="84" pos:column="73"/></operator>
                   <name pos:line="85" pos:column="20">ssl_connect_2_writing<pos:position pos:line="85" pos:column="41"/></name> <operator pos:line="85" pos:column="42">==<pos:position pos:line="85" pos:column="44"/></operator> <name><name pos:line="85" pos:column="45">connssl<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">connecting_state<pos:position pos:line="85" pos:column="70"/></name></name><operator pos:line="85" pos:column="70">)<pos:position pos:line="85" pos:column="71"/></operator><operator pos:line="85" pos:column="71">)<pos:position pos:line="85" pos:column="72"/></operator></expr>)<pos:position pos:line="85" pos:column="73"/></condition><then pos:line="85" pos:column="73">
      <block type="pseudo"><return pos:line="86" pos:column="7">return <expr><name pos:line="86" pos:column="14">result<pos:position pos:line="86" pos:column="20"/></name></expr>;<pos:position pos:line="86" pos:column="21"/></return></block></then></if>

  }<pos:position pos:line="88" pos:column="4"/></block></while> <comment type="block" pos:line="88" pos:column="5">/* repeat step2 until all transactions are done. */</comment>

  <if pos:line="90" pos:column="3">if<condition pos:line="90" pos:column="5">(<expr><name pos:line="90" pos:column="6">ssl_connect_3<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">==<pos:position pos:line="90" pos:column="22"/></operator> <name><name pos:line="90" pos:column="23">connssl<pos:position pos:line="90" pos:column="30"/></name><operator pos:line="90" pos:column="30">-&gt;<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="32">connecting_state<pos:position pos:line="90" pos:column="48"/></name></name></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49"> <block pos:line="90" pos:column="50">{
    <expr_stmt><expr><name pos:line="91" pos:column="5">result<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <call><name pos:line="91" pos:column="14">ossl_connect_step3<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">conn<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="39">sockindex<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">(<expr><name pos:line="92" pos:column="8">result<pos:position pos:line="92" pos:column="14"/></name></expr>)<pos:position pos:line="92" pos:column="15"/></condition><then pos:line="92" pos:column="15">
      <block type="pseudo"><return pos:line="93" pos:column="7">return <expr><name pos:line="93" pos:column="14">result<pos:position pos:line="93" pos:column="20"/></name></expr>;<pos:position pos:line="93" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><name pos:line="96" pos:column="6">ssl_connect_done<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">==<pos:position pos:line="96" pos:column="25"/></operator> <name><name pos:line="96" pos:column="26">connssl<pos:position pos:line="96" pos:column="33"/></name><operator pos:line="96" pos:column="33">-&gt;<pos:position pos:line="96" pos:column="38"/></operator><name pos:line="96" pos:column="35">connecting_state<pos:position pos:line="96" pos:column="51"/></name></name></expr>)<pos:position pos:line="96" pos:column="52"/></condition><then pos:line="96" pos:column="52"> <block pos:line="96" pos:column="53">{
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">connssl<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">-&gt;<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="14">state<pos:position pos:line="97" pos:column="19"/></name></name> <operator pos:line="97" pos:column="20">=<pos:position pos:line="97" pos:column="21"/></operator> <name pos:line="97" pos:column="22">ssl_connection_complete<pos:position pos:line="97" pos:column="45"/></name></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">conn<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">-&gt;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="11">recv<pos:position pos:line="98" pos:column="15"/></name><index pos:line="98" pos:column="15">[<expr><name pos:line="98" pos:column="16">sockindex<pos:position pos:line="98" pos:column="25"/></name></expr>]<pos:position pos:line="98" pos:column="26"/></index></name> <operator pos:line="98" pos:column="27">=<pos:position pos:line="98" pos:column="28"/></operator> <name pos:line="98" pos:column="29">ossl_recv<pos:position pos:line="98" pos:column="38"/></name></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="99" pos:column="5">conn<pos:position pos:line="99" pos:column="9"/></name><operator pos:line="99" pos:column="9">-&gt;<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="11">send<pos:position pos:line="99" pos:column="15"/></name><index pos:line="99" pos:column="15">[<expr><name pos:line="99" pos:column="16">sockindex<pos:position pos:line="99" pos:column="25"/></name></expr>]<pos:position pos:line="99" pos:column="26"/></index></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">ossl_send<pos:position pos:line="99" pos:column="38"/></name></expr>;<pos:position pos:line="99" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="100" pos:column="5">*<pos:position pos:line="100" pos:column="6"/></operator><name pos:line="100" pos:column="6">done<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <name pos:line="100" pos:column="13">TRUE<pos:position pos:line="100" pos:column="17"/></name></expr>;<pos:position pos:line="100" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="101" pos:column="4"/></block></then>
  <else pos:line="102" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="103" pos:column="5">*<pos:position pos:line="103" pos:column="6"/></operator><name pos:line="103" pos:column="6">done<pos:position pos:line="103" pos:column="10"/></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <name pos:line="103" pos:column="13">FALSE<pos:position pos:line="103" pos:column="18"/></name></expr>;<pos:position pos:line="103" pos:column="19"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="105" pos:column="3">/* Reset our connect state machine */</comment>
  <expr_stmt><expr><name><name pos:line="106" pos:column="3">connssl<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">connecting_state<pos:position pos:line="106" pos:column="28"/></name></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <name pos:line="106" pos:column="31">ssl_connect_1<pos:position pos:line="106" pos:column="44"/></name></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>

  <return pos:line="108" pos:column="3">return <expr><name pos:line="108" pos:column="10">CURLE_OK<pos:position pos:line="108" pos:column="18"/></name></expr>;<pos:position pos:line="108" pos:column="19"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

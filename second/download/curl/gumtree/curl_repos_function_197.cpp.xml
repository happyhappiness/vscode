<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_197.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLM<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">cm<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLMsg<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">msg<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">L<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">C<pos:position pos:line="6" pos:column="17"/></name><init pos:line="6" pos:column="17">=<expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">M<pos:position pos:line="7" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="10">Q<pos:position pos:line="7" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="13">U<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><operator pos:line="7" pos:column="17">-<pos:position pos:line="7" pos:column="18"/></operator><literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">fd_set<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">R<pos:position pos:line="8" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="13">W<pos:position pos:line="8" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="16">E<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">timeval<pos:position pos:line="9" pos:column="17"/></name></name></type> <name pos:line="9" pos:column="18">T<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">curl_global_init<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">cm<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <call><name pos:line="13" pos:column="8">curl_multi_init<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* we can optionally limit the total amount of connections this multi handle
     uses */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">curl_multi_setopt<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">cm<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="25">CURLMOPT_MAXCONNECTS<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="47">(<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">long<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">MAX<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">C<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name pos:line="19" pos:column="15">C<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&lt;<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="19">MAX<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></condition> <incr><expr><operator pos:line="19" pos:column="24">++<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">C<pos:position pos:line="19" pos:column="27"/></name></expr></incr>)<pos:position pos:line="19" pos:column="28"/></control> <block pos:line="19" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">init<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">cm<pos:position pos:line="20" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="14">C<pos:position pos:line="20" pos:column="15"/></name></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <while pos:line="23" pos:column="3">while <condition pos:line="23" pos:column="9">(<expr><name pos:line="23" pos:column="10">U<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition> <block pos:line="23" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">curl_multi_perform<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">cm<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">U<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">U<pos:position pos:line="26" pos:column="10"/></name></expr>)<pos:position pos:line="26" pos:column="11"/></condition><then pos:line="26" pos:column="11"> <block pos:line="26" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">FD_ZERO<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">&amp;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="16">R<pos:position pos:line="27" pos:column="17"/></name></expr></argument>)<pos:position pos:line="27" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">FD_ZERO<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><operator pos:line="28" pos:column="15">&amp;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="16">W<pos:position pos:line="28" pos:column="17"/></name></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">FD_ZERO<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><operator pos:line="29" pos:column="15">&amp;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="16">E<pos:position pos:line="29" pos:column="17"/></name></expr></argument>)<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>

      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">curl_multi_fdset<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">cm<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="33">R<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">W<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="40">&amp;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="41">E<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="45">M<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">stderr<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="25">"E: curl_multi_fdset\n"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">EXIT_FAILURE<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>

      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><call><name pos:line="36" pos:column="11">curl_multi_timeout<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">cm<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="34">&amp;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="35">L<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">fprintf<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">stderr<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="25">"E: curl_multi_timeout\n"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">EXIT_FAILURE<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></return>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">L<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">L<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <literal type="number" pos:line="41" pos:column="13">100<pos:position pos:line="41" pos:column="16"/></literal></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt></block></then></if>

      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">M<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">==<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">WIN32<pos:position pos:line="44" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">Sleep<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">L<pos:position pos:line="45" pos:column="16"/></name></expr></argument>)<pos:position pos:line="45" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">sleep<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">L<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">/<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="19">1000<pos:position pos:line="47" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="49" pos:column="8"/></block></then> <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">T<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">tv_sec<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">L<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">/<pos:position pos:line="50" pos:column="22"/></operator><literal type="number" pos:line="50" pos:column="22">1000<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">T<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">.<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">tv_usec<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">L<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">%<pos:position pos:line="51" pos:column="24"/></operator><literal type="number" pos:line="51" pos:column="24">1000<pos:position pos:line="51" pos:column="28"/></literal><operator pos:line="51" pos:column="28">)<pos:position pos:line="51" pos:column="29"/></operator><operator pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></operator><literal type="number" pos:line="51" pos:column="30">1000<pos:position pos:line="51" pos:column="34"/></literal></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal> <operator pos:line="53" pos:column="15">&gt;<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="17">select<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">M<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">+<pos:position pos:line="53" pos:column="26"/></operator><literal type="number" pos:line="53" pos:column="26">1<pos:position pos:line="53" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="29">&amp;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="30">R<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="33">&amp;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="34">W<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="37">&amp;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="38">E<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="41">&amp;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="42">T<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> <block pos:line="53" pos:column="46">{
          <expr_stmt><expr><call><name pos:line="54" pos:column="11">fprintf<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><name pos:line="54" pos:column="19">stderr<pos:position pos:line="54" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="27">"E: select(%i,,,,%li): %i: %s\n"<pos:position pos:line="54" pos:column="59"/></literal></expr></argument>,
              <argument><expr><name pos:line="55" pos:column="15">M<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">+<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">1<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="20">L<pos:position pos:line="55" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="23">errno<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="30">strerror<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">errno<pos:position pos:line="55" pos:column="44"/></name></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
          <return pos:line="56" pos:column="11">return <expr><name pos:line="56" pos:column="18">EXIT_FAILURE<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>
      }<pos:position pos:line="58" pos:column="8"/></block></else></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <while pos:line="61" pos:column="5">while <condition pos:line="61" pos:column="11">(<expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="13">msg<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">curl_multi_info_read<pos:position pos:line="61" pos:column="39"/></name><argument_list pos:line="61" pos:column="39">(<argument><expr><name pos:line="61" pos:column="40">cm<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="44">&amp;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="45">Q<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call><operator pos:line="61" pos:column="47">)<pos:position pos:line="61" pos:column="48"/></operator></expr>)<pos:position pos:line="61" pos:column="49"/></condition> <block pos:line="61" pos:column="50">{
      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><name><name pos:line="62" pos:column="11">msg<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">msg<pos:position pos:line="62" pos:column="19"/></name></name> <operator pos:line="62" pos:column="20">==<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">CURLMSG_DONE<pos:position pos:line="62" pos:column="35"/></name></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36"> <block pos:line="62" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name> <modifier pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></modifier></type><name pos:line="63" pos:column="15">url<pos:position pos:line="63" pos:column="18"/></name></decl>;<pos:position pos:line="63" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">CURL<pos:position pos:line="64" pos:column="13"/></name> <modifier pos:line="64" pos:column="14">*<pos:position pos:line="64" pos:column="15"/></modifier></type><name pos:line="64" pos:column="15">e<pos:position pos:line="64" pos:column="16"/></name> <init pos:line="64" pos:column="17">= <expr><name><name pos:line="64" pos:column="19">msg<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">-&gt;<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="24">easy_handle<pos:position pos:line="64" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="64" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">curl_easy_getinfo<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name><name pos:line="65" pos:column="27">msg<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">-&gt;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="32">easy_handle<pos:position pos:line="65" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">CURLINFO_PRIVATE<pos:position pos:line="65" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="63">&amp;<pos:position pos:line="65" pos:column="68"/></operator><name pos:line="65" pos:column="64">url<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">fprintf<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">stderr<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="25">"R: %d - %s &lt;%s&gt;\n"<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="67" pos:column="17">msg<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">data<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">.<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="27">result<pos:position pos:line="67" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="35">curl_easy_strerror<pos:position pos:line="67" pos:column="53"/></name><argument_list pos:line="67" pos:column="53">(<argument><expr><name><name pos:line="67" pos:column="54">msg<pos:position pos:line="67" pos:column="57"/></name><operator pos:line="67" pos:column="57">-&gt;<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="59">data<pos:position pos:line="67" pos:column="63"/></name><operator pos:line="67" pos:column="63">.<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="64">result<pos:position pos:line="67" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="73">url<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">curl_multi_remove_handle<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><name pos:line="68" pos:column="34">cm<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">e<pos:position pos:line="68" pos:column="39"/></name></expr></argument>)<pos:position pos:line="68" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">curl_easy_cleanup<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">e<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="70" pos:column="8"/></block></then>
      <else pos:line="71" pos:column="7">else <block pos:line="71" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">fprintf<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">stderr<pos:position pos:line="72" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="25">"E: CURLMsg (%d)\n"<pos:position pos:line="72" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="46">msg<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">-&gt;<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="51">msg<pos:position pos:line="72" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></else></if>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name pos:line="74" pos:column="11">C<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&lt;<pos:position pos:line="74" pos:column="17"/></operator> <name pos:line="74" pos:column="15">CNT<pos:position pos:line="74" pos:column="18"/></name></expr>)<pos:position pos:line="74" pos:column="19"/></condition><then pos:line="74" pos:column="19"> <block pos:line="74" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">init<pos:position pos:line="75" pos:column="13"/></name><argument_list pos:line="75" pos:column="13">(<argument><expr><name pos:line="75" pos:column="14">cm<pos:position pos:line="75" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="18">C<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">++<pos:position pos:line="75" pos:column="21"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">U<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">++<pos:position pos:line="76" pos:column="12"/></operator></expr>;<pos:position pos:line="76" pos:column="13"/></expr_stmt> <comment type="block" pos:line="76" pos:column="14">/* just to prevent it from remaining at 0 if there are more
                URLs to get */</comment>
      }<pos:position pos:line="78" pos:column="8"/></block></then></if>
    }<pos:position pos:line="79" pos:column="6"/></block></while>
  }<pos:position pos:line="80" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="82" pos:column="3">curl_multi_cleanup<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">cm<pos:position pos:line="82" pos:column="24"/></name></expr></argument>)<pos:position pos:line="82" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">curl_global_cleanup<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">()<pos:position pos:line="83" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>

  <return pos:line="85" pos:column="3">return <expr><name pos:line="85" pos:column="10">EXIT_SUCCESS<pos:position pos:line="85" pos:column="22"/></name></expr>;<pos:position pos:line="85" pos:column="23"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

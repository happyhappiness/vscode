<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_18_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl_handle<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">prtall<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">prtsep<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="31">prttime<pos:position pos:line="5" pos:column="38"/></name> <init pos:line="5" pos:column="39">= <expr><literal type="number" pos:line="5" pos:column="41">0<pos:position pos:line="5" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">url<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">URL_1M<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">appname<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name><name pos:line="7" pos:column="19">argv<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">argc<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">&gt;<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
    <comment type="block" pos:line="10" pos:column="5">/* parse input parameters */</comment>
    <for pos:line="11" pos:column="5">for<control pos:line="11" pos:column="8">(<init><expr><name pos:line="11" pos:column="9">argc<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">--<pos:position pos:line="11" pos:column="15"/></operator></expr><operator pos:line="11" pos:column="15">,<pos:position pos:line="11" pos:column="16"/></operator> <expr><name pos:line="11" pos:column="17">argv<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">++<pos:position pos:line="11" pos:column="23"/></operator></expr>;<pos:position pos:line="11" pos:column="24"/></init> <condition><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">argv<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></condition> <incr><expr><name pos:line="11" pos:column="32">argc<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">--<pos:position pos:line="11" pos:column="38"/></operator></expr><operator pos:line="11" pos:column="38">,<pos:position pos:line="11" pos:column="39"/></operator> <expr><name pos:line="11" pos:column="40">argv<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control> <block pos:line="11" pos:column="48">{
      <if pos:line="12" pos:column="7">if<condition pos:line="12" pos:column="9">(<expr><call><name pos:line="12" pos:column="10">strncasecmp<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">argv<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"-"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
        <if pos:line="13" pos:column="9">if<condition pos:line="13" pos:column="11">(<expr><call><name pos:line="13" pos:column="12">strncasecmp<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">argv<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"-H"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="37">2<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call> <operator pos:line="13" pos:column="40">==<pos:position pos:line="13" pos:column="42"/></operator> <literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
          <expr_stmt><expr><call><name pos:line="14" pos:column="11">fprintf<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">stderr<pos:position pos:line="14" pos:column="25"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="15" pos:column="19">"\rUsage: %s [-m=1|2|5|10|20|50|100] [-t] [-x] [url]\n"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>,
                  <argument><expr><name pos:line="16" pos:column="19">appname<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="17" pos:column="11">exit<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if<condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">strncasecmp<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><operator pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">argv<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="36">"-V"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="42">2<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call> <operator pos:line="19" pos:column="45">==<pos:position pos:line="19" pos:column="47"/></operator> <literal type="number" pos:line="19" pos:column="48">0<pos:position pos:line="19" pos:column="49"/></literal></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50"> <block pos:line="19" pos:column="51">{
          <expr_stmt><expr><call><name pos:line="20" pos:column="11">fprintf<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">stderr<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"\r%s %s - %s\n"<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>,
                  <argument><expr><name pos:line="21" pos:column="19">appname<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">CHKSPEED_VERSION<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="46">curl_version<pos:position pos:line="21" pos:column="58"/></name><argument_list pos:line="21" pos:column="58">()<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="22" pos:column="11">exit<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if<condition pos:line="24" pos:column="16">(<expr><call><name pos:line="24" pos:column="17">strncasecmp<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">argv<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"-A"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="42">2<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call> <operator pos:line="24" pos:column="45">==<pos:position pos:line="24" pos:column="47"/></operator> <literal type="number" pos:line="24" pos:column="48">0<pos:position pos:line="24" pos:column="49"/></literal></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
          <expr_stmt><expr><name pos:line="25" pos:column="11">prtall<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">1<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if<condition pos:line="27" pos:column="16">(<expr><call><name pos:line="27" pos:column="17">strncasecmp<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">argv<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="36">"-X"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="42">2<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call> <operator pos:line="27" pos:column="45">==<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
          <expr_stmt><expr><name pos:line="28" pos:column="11">prtsep<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">1<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if<condition pos:line="30" pos:column="16">(<expr><call><name pos:line="30" pos:column="17">strncasecmp<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><operator pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">argv<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="36">"-T"<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="42">2<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call> <operator pos:line="30" pos:column="45">==<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
          <expr_stmt><expr><name pos:line="31" pos:column="11">prttime<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if<condition pos:line="33" pos:column="16">(<expr><call><name pos:line="33" pos:column="17">strncasecmp<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">argv<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="36">"-M="<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="43">3<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call> <operator pos:line="33" pos:column="46">==<pos:position pos:line="33" pos:column="48"/></operator> <literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
          <decl_stmt><decl><type><name pos:line="34" pos:column="11">long<pos:position pos:line="34" pos:column="15"/></name></type> <name pos:line="34" pos:column="16">m<pos:position pos:line="34" pos:column="17"/></name> <init pos:line="34" pos:column="18">= <expr><call><name pos:line="34" pos:column="20">strtol<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><operator pos:line="34" pos:column="27">(<pos:position pos:line="34" pos:column="28"/></operator><operator pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">argv<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">)<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">+<pos:position pos:line="34" pos:column="36"/></operator> <literal type="number" pos:line="34" pos:column="37">3<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">NULL<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="46">10<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="50"/></decl_stmt>
          <switch pos:line="35" pos:column="11">switch<condition pos:line="35" pos:column="17">(<expr><name pos:line="35" pos:column="18">m<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition> <block pos:line="35" pos:column="21">{
          <case pos:line="36" pos:column="11">case <expr><literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>:<pos:position pos:line="36" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="37" pos:column="13">url<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">URL_1M<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
          <case pos:line="39" pos:column="11">case <expr><literal type="number" pos:line="39" pos:column="16">2<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="40" pos:column="13">url<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">URL_2M<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
          <case pos:line="42" pos:column="11">case <expr><literal type="number" pos:line="42" pos:column="16">5<pos:position pos:line="42" pos:column="17"/></literal></expr>:<pos:position pos:line="42" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="43" pos:column="13">url<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">URL_5M<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
            <break pos:line="44" pos:column="13">break;<pos:position pos:line="44" pos:column="19"/></break>
          <case pos:line="45" pos:column="11">case <expr><literal type="number" pos:line="45" pos:column="16">10<pos:position pos:line="45" pos:column="18"/></literal></expr>:<pos:position pos:line="45" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="46" pos:column="13">url<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">URL_10M<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
            <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>
          <case pos:line="48" pos:column="11">case <expr><literal type="number" pos:line="48" pos:column="16">20<pos:position pos:line="48" pos:column="18"/></literal></expr>:<pos:position pos:line="48" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="49" pos:column="13">url<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">URL_20M<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
            <break pos:line="50" pos:column="13">break;<pos:position pos:line="50" pos:column="19"/></break>
          <case pos:line="51" pos:column="11">case <expr><literal type="number" pos:line="51" pos:column="16">50<pos:position pos:line="51" pos:column="18"/></literal></expr>:<pos:position pos:line="51" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="52" pos:column="13">url<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">URL_50M<pos:position pos:line="52" pos:column="26"/></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>
            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
          <case pos:line="54" pos:column="11">case <expr><literal type="number" pos:line="54" pos:column="16">100<pos:position pos:line="54" pos:column="19"/></literal></expr>:<pos:position pos:line="54" pos:column="20"/></case>
            <expr_stmt><expr><name pos:line="55" pos:column="13">url<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">URL_100M<pos:position pos:line="55" pos:column="27"/></name></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>
          <default pos:line="57" pos:column="11">default:<pos:position pos:line="57" pos:column="19"/></default>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">fprintf<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">stderr<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"\r%s: invalid parameter %s\n"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>,
                    <argument><expr><name pos:line="59" pos:column="21">appname<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="30">*<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="31">argv<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">+<pos:position pos:line="59" pos:column="37"/></operator> <literal type="number" pos:line="59" pos:column="38">3<pos:position pos:line="59" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">exit<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><literal type="number" pos:line="60" pos:column="18">1<pos:position pos:line="60" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
          }<pos:position pos:line="61" pos:column="12"/></block></switch>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif>
        <else pos:line="63" pos:column="9">else <block pos:line="63" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="64" pos:column="11">fprintf<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">stderr<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="27">"\r%s: invalid or unknown option %s\n"<pos:position pos:line="64" pos:column="65"/></literal></expr></argument>,
                  <argument><expr><name pos:line="65" pos:column="19">appname<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="28">*<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">argv<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="66" pos:column="11">exit<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">1<pos:position pos:line="66" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></else></if>
      }<pos:position pos:line="68" pos:column="8"/></block></then>
      <else pos:line="69" pos:column="7">else <block pos:line="69" pos:column="12">{
        <expr_stmt><expr><name pos:line="70" pos:column="9">url<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <operator pos:line="70" pos:column="15">*<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">argv<pos:position pos:line="70" pos:column="20"/></name></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></else></if>
    }<pos:position pos:line="72" pos:column="6"/></block></for>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="75" pos:column="3">/* print separator line */</comment>
  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><name pos:line="76" pos:column="6">prtsep<pos:position pos:line="76" pos:column="12"/></name></expr>)<pos:position pos:line="76" pos:column="13"/></condition><then pos:line="76" pos:column="13"> <block pos:line="76" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">printf<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><literal type="string" pos:line="77" pos:column="12">"-------------------------------------------------\n"<pos:position pos:line="77" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="79" pos:column="3">/* print localtime */</comment>
  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name pos:line="80" pos:column="6">prttime<pos:position pos:line="80" pos:column="13"/></name></expr>)<pos:position pos:line="80" pos:column="14"/></condition><then pos:line="80" pos:column="14"> <block pos:line="80" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="81" pos:column="5">time_t<pos:position pos:line="81" pos:column="11"/></name></type> <name pos:line="81" pos:column="12">t<pos:position pos:line="81" pos:column="13"/></name> <init pos:line="81" pos:column="14">= <expr><call><name pos:line="81" pos:column="16">time<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">NULL<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="81" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">printf<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><literal type="string" pos:line="82" pos:column="12">"Localtime: %s"<pos:position pos:line="82" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="29">ctime<pos:position pos:line="82" pos:column="34"/></name><argument_list pos:line="82" pos:column="34">(<argument><expr><operator pos:line="82" pos:column="35">&amp;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="36">t<pos:position pos:line="82" pos:column="37"/></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="85" pos:column="3">/* init libcurl */</comment>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">curl_global_init<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">CURL_GLOBAL_ALL<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="88" pos:column="3">/* init the curl session */</comment>
  <expr_stmt><expr><name pos:line="89" pos:column="3">curl_handle<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <call><name pos:line="89" pos:column="17">curl_easy_init<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">()<pos:position pos:line="89" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="91" pos:column="3">/* specify URL to get */</comment>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">curl_easy_setopt<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><name pos:line="92" pos:column="20">curl_handle<pos:position pos:line="92" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="33">CURLOPT_URL<pos:position pos:line="92" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">url<pos:position pos:line="92" pos:column="49"/></name></expr></argument>)<pos:position pos:line="92" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="94" pos:column="3">/* send all data to this function  */</comment>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">curl_easy_setopt<pos:position pos:line="95" pos:column="19"/></name><argument_list pos:line="95" pos:column="19">(<argument><expr><name pos:line="95" pos:column="20">curl_handle<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="33">CURLOPT_WRITEFUNCTION<pos:position pos:line="95" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="56">WriteCallback<pos:position pos:line="95" pos:column="69"/></name></expr></argument>)<pos:position pos:line="95" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="71"/></expr_stmt>

  <comment type="block" pos:line="97" pos:column="3">/* some servers don't like requests that are made without a user-agent
     field, so we provide one */</comment>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">curl_easy_setopt<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">curl_handle<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">CURLOPT_USERAGENT<pos:position pos:line="99" pos:column="50"/></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="100" pos:column="20">"libcurl-speedchecker/"<pos:position pos:line="100" pos:column="43"/></literal> <name pos:line="100" pos:column="44">CHKSPEED_VERSION<pos:position pos:line="100" pos:column="60"/></name></expr></argument>)<pos:position pos:line="100" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="102" pos:column="3">/* get it! */</comment>
  <expr_stmt><expr><name pos:line="103" pos:column="3">res<pos:position pos:line="103" pos:column="6"/></name> <operator pos:line="103" pos:column="7">=<pos:position pos:line="103" pos:column="8"/></operator> <call><name pos:line="103" pos:column="9">curl_easy_perform<pos:position pos:line="103" pos:column="26"/></name><argument_list pos:line="103" pos:column="26">(<argument><expr><name pos:line="103" pos:column="27">curl_handle<pos:position pos:line="103" pos:column="38"/></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>

  <if pos:line="105" pos:column="3">if<condition pos:line="105" pos:column="5">(<expr><name pos:line="105" pos:column="6">CURLE_OK<pos:position pos:line="105" pos:column="14"/></name> <operator pos:line="105" pos:column="15">==<pos:position pos:line="105" pos:column="17"/></operator> <name pos:line="105" pos:column="18">res<pos:position pos:line="105" pos:column="21"/></name></expr>)<pos:position pos:line="105" pos:column="22"/></condition><then pos:line="105" pos:column="22"> <block pos:line="105" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="106" pos:column="5">double<pos:position pos:line="106" pos:column="11"/></name></type> <name pos:line="106" pos:column="12">val<pos:position pos:line="106" pos:column="15"/></name></decl>;<pos:position pos:line="106" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="108" pos:column="5">/* check for bytes downloaded */</comment>
    <expr_stmt><expr><name pos:line="109" pos:column="5">res<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <call><name pos:line="109" pos:column="11">curl_easy_getinfo<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><name pos:line="109" pos:column="29">curl_handle<pos:position pos:line="109" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="42">CURLINFO_SIZE_DOWNLOAD<pos:position pos:line="109" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="66">&amp;<pos:position pos:line="109" pos:column="71"/></operator><name pos:line="109" pos:column="67">val<pos:position pos:line="109" pos:column="70"/></name></expr></argument>)<pos:position pos:line="109" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="72"/></expr_stmt>
    <if pos:line="110" pos:column="5">if<condition pos:line="110" pos:column="7">(<expr><operator pos:line="110" pos:column="8">(<pos:position pos:line="110" pos:column="9"/></operator><name pos:line="110" pos:column="9">CURLE_OK<pos:position pos:line="110" pos:column="17"/></name> <operator pos:line="110" pos:column="18">==<pos:position pos:line="110" pos:column="20"/></operator> <name pos:line="110" pos:column="21">res<pos:position pos:line="110" pos:column="24"/></name><operator pos:line="110" pos:column="24">)<pos:position pos:line="110" pos:column="25"/></operator> <operator pos:line="110" pos:column="26">&amp;&amp;<pos:position pos:line="110" pos:column="36"/></operator> <operator pos:line="110" pos:column="29">(<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="30">val<pos:position pos:line="110" pos:column="33"/></name><operator pos:line="110" pos:column="33">&gt;<pos:position pos:line="110" pos:column="37"/></operator><literal type="number" pos:line="110" pos:column="34">0<pos:position pos:line="110" pos:column="35"/></literal><operator pos:line="110" pos:column="35">)<pos:position pos:line="110" pos:column="36"/></operator></expr>)<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="7">printf<pos:position pos:line="111" pos:column="13"/></name><argument_list pos:line="111" pos:column="13">(<argument><expr><literal type="string" pos:line="111" pos:column="14">"Data downloaded: %0.0f bytes.\n"<pos:position pos:line="111" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="49">val<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="113" pos:column="5">/* check for total download time */</comment>
    <expr_stmt><expr><name pos:line="114" pos:column="5">res<pos:position pos:line="114" pos:column="8"/></name> <operator pos:line="114" pos:column="9">=<pos:position pos:line="114" pos:column="10"/></operator> <call><name pos:line="114" pos:column="11">curl_easy_getinfo<pos:position pos:line="114" pos:column="28"/></name><argument_list pos:line="114" pos:column="28">(<argument><expr><name pos:line="114" pos:column="29">curl_handle<pos:position pos:line="114" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="42">CURLINFO_TOTAL_TIME<pos:position pos:line="114" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="63">&amp;<pos:position pos:line="114" pos:column="68"/></operator><name pos:line="114" pos:column="64">val<pos:position pos:line="114" pos:column="67"/></name></expr></argument>)<pos:position pos:line="114" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="69"/></expr_stmt>
    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><operator pos:line="115" pos:column="8">(<pos:position pos:line="115" pos:column="9"/></operator><name pos:line="115" pos:column="9">CURLE_OK<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">==<pos:position pos:line="115" pos:column="20"/></operator> <name pos:line="115" pos:column="21">res<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">)<pos:position pos:line="115" pos:column="25"/></operator> <operator pos:line="115" pos:column="26">&amp;&amp;<pos:position pos:line="115" pos:column="36"/></operator> <operator pos:line="115" pos:column="29">(<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="30">val<pos:position pos:line="115" pos:column="33"/></name><operator pos:line="115" pos:column="33">&gt;<pos:position pos:line="115" pos:column="37"/></operator><literal type="number" pos:line="115" pos:column="34">0<pos:position pos:line="115" pos:column="35"/></literal><operator pos:line="115" pos:column="35">)<pos:position pos:line="115" pos:column="36"/></operator></expr>)<pos:position pos:line="115" pos:column="37"/></condition><then pos:line="115" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="7">printf<pos:position pos:line="116" pos:column="13"/></name><argument_list pos:line="116" pos:column="13">(<argument><expr><literal type="string" pos:line="116" pos:column="14">"Total download time: %0.3f sec.\n"<pos:position pos:line="116" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="51">val<pos:position pos:line="116" pos:column="54"/></name></expr></argument>)<pos:position pos:line="116" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="56"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="118" pos:column="5">/* check for average download speed */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">res<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">=<pos:position pos:line="119" pos:column="10"/></operator> <call><name pos:line="119" pos:column="11">curl_easy_getinfo<pos:position pos:line="119" pos:column="28"/></name><argument_list pos:line="119" pos:column="28">(<argument><expr><name pos:line="119" pos:column="29">curl_handle<pos:position pos:line="119" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">CURLINFO_SPEED_DOWNLOAD<pos:position pos:line="119" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="67">&amp;<pos:position pos:line="119" pos:column="72"/></operator><name pos:line="119" pos:column="68">val<pos:position pos:line="119" pos:column="71"/></name></expr></argument>)<pos:position pos:line="119" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="73"/></expr_stmt>
    <if pos:line="120" pos:column="5">if<condition pos:line="120" pos:column="7">(<expr><operator pos:line="120" pos:column="8">(<pos:position pos:line="120" pos:column="9"/></operator><name pos:line="120" pos:column="9">CURLE_OK<pos:position pos:line="120" pos:column="17"/></name> <operator pos:line="120" pos:column="18">==<pos:position pos:line="120" pos:column="20"/></operator> <name pos:line="120" pos:column="21">res<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">)<pos:position pos:line="120" pos:column="25"/></operator> <operator pos:line="120" pos:column="26">&amp;&amp;<pos:position pos:line="120" pos:column="36"/></operator> <operator pos:line="120" pos:column="29">(<pos:position pos:line="120" pos:column="30"/></operator><name pos:line="120" pos:column="30">val<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">&gt;<pos:position pos:line="120" pos:column="37"/></operator><literal type="number" pos:line="120" pos:column="34">0<pos:position pos:line="120" pos:column="35"/></literal><operator pos:line="120" pos:column="35">)<pos:position pos:line="120" pos:column="36"/></operator></expr>)<pos:position pos:line="120" pos:column="37"/></condition><then pos:line="120" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="7">printf<pos:position pos:line="121" pos:column="13"/></name><argument_list pos:line="121" pos:column="13">(<argument><expr><literal type="string" pos:line="121" pos:column="14">"Average download speed: %0.3f kbyte/sec.\n"<pos:position pos:line="121" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="60">val<pos:position pos:line="121" pos:column="63"/></name> <operator pos:line="121" pos:column="64">/<pos:position pos:line="121" pos:column="65"/></operator> <literal type="number" pos:line="121" pos:column="66">1024<pos:position pos:line="121" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="72"/></expr_stmt></block></then></if>

    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">(<expr><name pos:line="123" pos:column="8">prtall<pos:position pos:line="123" pos:column="14"/></name></expr>)<pos:position pos:line="123" pos:column="15"/></condition><then pos:line="123" pos:column="15"> <block pos:line="123" pos:column="16">{
      <comment type="block" pos:line="124" pos:column="7">/* check for name resolution time */</comment>
      <expr_stmt><expr><name pos:line="125" pos:column="7">res<pos:position pos:line="125" pos:column="10"/></name> <operator pos:line="125" pos:column="11">=<pos:position pos:line="125" pos:column="12"/></operator> <call><name pos:line="125" pos:column="13">curl_easy_getinfo<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">curl_handle<pos:position pos:line="125" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="44">CURLINFO_NAMELOOKUP_TIME<pos:position pos:line="125" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="70">&amp;<pos:position pos:line="125" pos:column="75"/></operator><name pos:line="125" pos:column="71">val<pos:position pos:line="125" pos:column="74"/></name></expr></argument>)<pos:position pos:line="125" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="76"/></expr_stmt>
      <if pos:line="126" pos:column="7">if<condition pos:line="126" pos:column="9">(<expr><operator pos:line="126" pos:column="10">(<pos:position pos:line="126" pos:column="11"/></operator><name pos:line="126" pos:column="11">CURLE_OK<pos:position pos:line="126" pos:column="19"/></name> <operator pos:line="126" pos:column="20">==<pos:position pos:line="126" pos:column="22"/></operator> <name pos:line="126" pos:column="23">res<pos:position pos:line="126" pos:column="26"/></name><operator pos:line="126" pos:column="26">)<pos:position pos:line="126" pos:column="27"/></operator> <operator pos:line="126" pos:column="28">&amp;&amp;<pos:position pos:line="126" pos:column="38"/></operator> <operator pos:line="126" pos:column="31">(<pos:position pos:line="126" pos:column="32"/></operator><name pos:line="126" pos:column="32">val<pos:position pos:line="126" pos:column="35"/></name><operator pos:line="126" pos:column="35">&gt;<pos:position pos:line="126" pos:column="39"/></operator><literal type="number" pos:line="126" pos:column="36">0<pos:position pos:line="126" pos:column="37"/></literal><operator pos:line="126" pos:column="37">)<pos:position pos:line="126" pos:column="38"/></operator></expr>)<pos:position pos:line="126" pos:column="39"/></condition><then pos:line="126" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="9">printf<pos:position pos:line="127" pos:column="15"/></name><argument_list pos:line="127" pos:column="15">(<argument><expr><literal type="string" pos:line="127" pos:column="16">"Name lookup time: %0.3f sec.\n"<pos:position pos:line="127" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="50">val<pos:position pos:line="127" pos:column="53"/></name></expr></argument>)<pos:position pos:line="127" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="55"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="129" pos:column="7">/* check for connect time */</comment>
      <expr_stmt><expr><name pos:line="130" pos:column="7">res<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">=<pos:position pos:line="130" pos:column="12"/></operator> <call><name pos:line="130" pos:column="13">curl_easy_getinfo<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">curl_handle<pos:position pos:line="130" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="44">CURLINFO_CONNECT_TIME<pos:position pos:line="130" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="67">&amp;<pos:position pos:line="130" pos:column="72"/></operator><name pos:line="130" pos:column="68">val<pos:position pos:line="130" pos:column="71"/></name></expr></argument>)<pos:position pos:line="130" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="73"/></expr_stmt>
      <if pos:line="131" pos:column="7">if<condition pos:line="131" pos:column="9">(<expr><operator pos:line="131" pos:column="10">(<pos:position pos:line="131" pos:column="11"/></operator><name pos:line="131" pos:column="11">CURLE_OK<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">==<pos:position pos:line="131" pos:column="22"/></operator> <name pos:line="131" pos:column="23">res<pos:position pos:line="131" pos:column="26"/></name><operator pos:line="131" pos:column="26">)<pos:position pos:line="131" pos:column="27"/></operator> <operator pos:line="131" pos:column="28">&amp;&amp;<pos:position pos:line="131" pos:column="38"/></operator> <operator pos:line="131" pos:column="31">(<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="32">val<pos:position pos:line="131" pos:column="35"/></name><operator pos:line="131" pos:column="35">&gt;<pos:position pos:line="131" pos:column="39"/></operator><literal type="number" pos:line="131" pos:column="36">0<pos:position pos:line="131" pos:column="37"/></literal><operator pos:line="131" pos:column="37">)<pos:position pos:line="131" pos:column="38"/></operator></expr>)<pos:position pos:line="131" pos:column="39"/></condition><then pos:line="131" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="9">printf<pos:position pos:line="132" pos:column="15"/></name><argument_list pos:line="132" pos:column="15">(<argument><expr><literal type="string" pos:line="132" pos:column="16">"Connect time: %0.3f sec.\n"<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="46">val<pos:position pos:line="132" pos:column="49"/></name></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt></block></then></if>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if>
  }<pos:position pos:line="134" pos:column="4"/></block></then>
  <else pos:line="135" pos:column="3">else <block pos:line="135" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">fprintf<pos:position pos:line="136" pos:column="12"/></name><argument_list pos:line="136" pos:column="12">(<argument><expr><name pos:line="136" pos:column="13">stderr<pos:position pos:line="136" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="21">"Error while fetching '%s' : %s\n"<pos:position pos:line="136" pos:column="55"/></literal></expr></argument>,
            <argument><expr><name pos:line="137" pos:column="13">url<pos:position pos:line="137" pos:column="16"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="18">curl_easy_strerror<pos:position pos:line="137" pos:column="36"/></name><argument_list pos:line="137" pos:column="36">(<argument><expr><name pos:line="137" pos:column="37">res<pos:position pos:line="137" pos:column="40"/></name></expr></argument>)<pos:position pos:line="137" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="138" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="140" pos:column="3">/* cleanup curl stuff */</comment>
  <expr_stmt><expr><call><name pos:line="141" pos:column="3">curl_easy_cleanup<pos:position pos:line="141" pos:column="20"/></name><argument_list pos:line="141" pos:column="20">(<argument><expr><name pos:line="141" pos:column="21">curl_handle<pos:position pos:line="141" pos:column="32"/></name></expr></argument>)<pos:position pos:line="141" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="143" pos:column="3">/* we're done with libcurl, so clean it up */</comment>
  <expr_stmt><expr><call><name pos:line="144" pos:column="3">curl_global_cleanup<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">()<pos:position pos:line="144" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="25"/></expr_stmt>

  <return pos:line="146" pos:column="3">return <expr><literal type="number" pos:line="146" pos:column="10">0<pos:position pos:line="146" pos:column="11"/></literal></expr>;<pos:position pos:line="146" pos:column="12"/></return>
}<pos:position pos:line="147" pos:column="2"/></block></function></unit>

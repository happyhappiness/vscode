<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1343_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">Curl_tree<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">Curl_splayinsert<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">curltime<pos:position pos:line="1" pos:column="51"/></name></name></type> <name pos:line="1" pos:column="52">i<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">Curl_tree<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">t<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
                                   <parameter><decl><type><name><name pos:line="3" pos:column="36">struct<pos:position pos:line="3" pos:column="42"/></name> <name pos:line="3" pos:column="43">Curl_tree<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">node<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">curltime<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">KEY_NOTUSED<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><block pos:line="5" pos:column="46">{
    <expr><operator pos:line="6" pos:column="5">(<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">time_t<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">)<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr>, <expr><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">unsigned<pos:position pos:line="6" pos:column="26"/></name> <name pos:line="6" pos:column="27">int<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">-<pos:position pos:line="6" pos:column="32"/></operator><literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr>
  }<pos:position pos:line="7" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="5"/></decl_stmt> <comment type="block" pos:line="7" pos:column="6">/* will *NEVER* appear */</comment>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">node<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">t<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">t<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">!=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">NULL<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">t<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">Curl_splay<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">i<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">t<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><call><name pos:line="14" pos:column="8">compare<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="19">t<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">key<pos:position pos:line="14" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <block pos:line="14" pos:column="33">{
      <comment type="block" pos:line="15" pos:column="7">/* There already exists a node in the tree with the very same key. Build
         a doubly-linked circular list of nodes. We add the new 'node' struct
         to the end of this list. */</comment>

      <expr_stmt><expr><name><name pos:line="19" pos:column="7">node<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">key<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">KEY_NOTUSED<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt> <comment type="block" pos:line="19" pos:column="32">/* we set the key in the sub node to NOTUSED
                                  to quickly identify this node as a subnode */</comment>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">node<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">samen<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">t<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">node<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">samep<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name><name pos:line="22" pos:column="21">t<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">samep<pos:position pos:line="22" pos:column="29"/></name></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">t<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">samep<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">samen<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">node<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">t<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">samep<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">node<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>

      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">t<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return> <comment type="block" pos:line="26" pos:column="17">/* the root node always stays the same */</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">t<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">==<pos:position pos:line="30" pos:column="10"/></operator> <name pos:line="30" pos:column="11">NULL<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">node<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">smaller<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name><name pos:line="31" pos:column="21">node<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">larger<pos:position pos:line="31" pos:column="33"/></name></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">NULL<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then>
  <elseif pos:line="33" pos:column="3">else <if pos:line="33" pos:column="8">if<condition pos:line="33" pos:column="10">(<expr><call><name pos:line="33" pos:column="11">compare<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">i<pos:position pos:line="33" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="22">t<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">key<pos:position pos:line="33" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call> <operator pos:line="33" pos:column="30">&lt;<pos:position pos:line="33" pos:column="34"/></operator> <literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34"> <block pos:line="33" pos:column="35">{
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">node<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">smaller<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name><name pos:line="34" pos:column="21">t<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">smaller<pos:position pos:line="34" pos:column="31"/></name></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">node<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">larger<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">t<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">t<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">smaller<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">NULL<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>

  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif>
  <else pos:line="39" pos:column="3">else <block pos:line="39" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">node<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">larger<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <name><name pos:line="40" pos:column="20">t<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">larger<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">node<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">smaller<pos:position pos:line="41" pos:column="18"/></name></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">t<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">t<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">larger<pos:position pos:line="42" pos:column="14"/></name></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">NULL<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">node<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">key<pos:position pos:line="44" pos:column="12"/></name></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <name pos:line="44" pos:column="15">i<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="46" pos:column="3">/* no identical nodes (yet), we are the only one in the list of nodes */</comment>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">node<pos:position pos:line="47" pos:column="7"/></name><operator pos:line="47" pos:column="7">-&gt;<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="9">samen<pos:position pos:line="47" pos:column="14"/></name></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">node<pos:position pos:line="47" pos:column="21"/></name></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">node<pos:position pos:line="48" pos:column="7"/></name><operator pos:line="48" pos:column="7">-&gt;<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="9">samep<pos:position pos:line="48" pos:column="14"/></name></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">node<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">node<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

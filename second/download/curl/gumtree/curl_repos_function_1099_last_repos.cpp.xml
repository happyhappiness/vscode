<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1099_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">data_source_read_callback<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">nghttp2_session<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">session<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">int32_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">stream_id<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">uint8_t<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">buf<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="56">size_t<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">length<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="4" pos:column="42">uint32_t<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">data_flags<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="5" pos:column="42">nghttp2_data_source<pos:position pos:line="5" pos:column="61"/></name> <modifier pos:line="5" pos:column="62">*<pos:position pos:line="5" pos:column="63"/></modifier></type><name pos:line="5" pos:column="63">source<pos:position pos:line="5" pos:column="69"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="6" pos:column="42">void<pos:position pos:line="6" pos:column="46"/></name> <modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">userp<pos:position pos:line="6" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="54"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data_s<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">HTTP<pos:position pos:line="9" pos:column="14"/></name></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">stream<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">nread<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">source<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">(<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">void<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">)<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">userp<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">stream_id<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
    <comment type="block" pos:line="15" pos:column="5">/* get the stream from the hash based on Stream ID, stream ID zero is for
       connection-oriented stuff */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">data_s<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">nghttp2_session_get_stream_user_data<pos:position pos:line="17" pos:column="50"/></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">session<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">stream_id<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">data_s<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16">
      <comment type="block" pos:line="19" pos:column="7">/* Receiving a Stream ID not in the hash should not happen, this is an
         internal error more than anything else! */</comment>
      <block type="pseudo"><return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">stream<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">data_s<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">req<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">protop<pos:position pos:line="23" pos:column="32"/></name></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><operator pos:line="24" pos:column="8">!<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">stream<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="25" pos:column="42"/></name></expr>;<pos:position pos:line="25" pos:column="43"/></return></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then>
  <else pos:line="27" pos:column="3">else
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">NGHTTP2_ERR_INVALID_ARGUMENT<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></return></block></else></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">nread<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">MIN<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name><name pos:line="30" pos:column="15">stream<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">upload_len<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">length<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">nread<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">&gt;<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">memcpy<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">buf<pos:position pos:line="32" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="17">stream<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">upload_mem<pos:position pos:line="32" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">nread<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">stream<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">upload_mem<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">+=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">nread<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">stream<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">upload_len<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">-=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">nread<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><name><name pos:line="35" pos:column="8">data_s<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">state<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">infilesize<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">!=<pos:position pos:line="35" pos:column="35"/></operator> <operator pos:line="35" pos:column="36">-<pos:position pos:line="35" pos:column="37"/></operator><literal type="number" pos:line="35" pos:column="37">1<pos:position pos:line="35" pos:column="38"/></literal></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="7">stream<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">upload_left<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">-=<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">nread<pos:position pos:line="36" pos:column="35"/></name></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name><name pos:line="39" pos:column="6">stream<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">upload_left<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">==<pos:position pos:line="39" pos:column="28"/></operator> <literal type="number" pos:line="39" pos:column="29">0<pos:position pos:line="39" pos:column="30"/></literal></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">data_flags<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">NGHTTP2_DATA_FLAG_EOF<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then>
  <elseif pos:line="41" pos:column="3">else <if pos:line="41" pos:column="8">if<condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">nread<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">NGHTTP2_ERR_DEFERRED<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></return></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">DEBUGF<pos:position pos:line="44" pos:column="9"/></name><argument_list pos:line="44" pos:column="9">(<argument><expr><call><name pos:line="44" pos:column="10">infof<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">data_s<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="24">"data_source_read_callback: "<pos:position pos:line="44" pos:column="53"/></literal>
               <literal type="string" pos:line="45" pos:column="16">"returns %zu bytes stream %u\n"<pos:position pos:line="45" pos:column="47"/></literal></expr></argument>,
               <argument><expr><name pos:line="46" pos:column="16">nread<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="23">stream_id<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">nread<pos:position pos:line="48" pos:column="15"/></name></expr>;<pos:position pos:line="48" pos:column="16"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

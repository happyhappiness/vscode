<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2652_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">nss_close<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">ssl_connect_data<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">connssl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* before the cleanup, check whether we are using a client certificate */</comment>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">bool<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">client_cert<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name><name pos:line="4" pos:column="29">BACKEND<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">client_nickname<pos:position pos:line="4" pos:column="53"/></name></name> <operator pos:line="4" pos:column="54">!=<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="57">NULL<pos:position pos:line="4" pos:column="61"/></name><operator pos:line="4" pos:column="61">)<pos:position pos:line="4" pos:column="62"/></operator>
    <operator pos:line="5" pos:column="5">||<pos:position pos:line="5" pos:column="7"/></operator> <operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name><name pos:line="5" pos:column="9">BACKEND<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">obj_clicert<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">!=<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="33">NULL<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">free<pos:position pos:line="7" pos:column="7"/></name><argument_list pos:line="7" pos:column="7">(<argument><expr><name><name pos:line="7" pos:column="8">BACKEND<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">client_nickname<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">BACKEND<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">client_nickname<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* destroy all NSS objects in order to avoid failure of NSS shutdown */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">Curl_llist_destroy<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><operator pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></operator><name><name pos:line="11" pos:column="23">BACKEND<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">obj_list<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">BACKEND<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">obj_clicert<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">BACKEND<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">handle<pos:position pos:line="14" pos:column="21"/></name></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">client_cert<pos:position pos:line="15" pos:column="19"/></name></expr>)<pos:position pos:line="15" pos:column="20"/></condition><then pos:line="15" pos:column="20">
      <comment type="block" pos:line="16" pos:column="7">/* A server might require different authentication based on the
       * particular path being requested by the client.  To support this
       * scenario, we must ensure that a connection will never reuse the
       * authentication data from a previous connection. */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">SSL_InvalidateSession<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">BACKEND<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">handle<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">PR_Close<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">BACKEND<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">handle<pos:position pos:line="22" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">BACKEND<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">handle<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">NULL<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

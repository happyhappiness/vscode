<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_776_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">singlesocket<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_multi<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">multi<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                         <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">Curl_one_easy<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">easy<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">curl_socket_t<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">socks<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_sh_entry<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">entry<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_socket_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">num<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">int<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">curraction<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><operator pos:line="11" pos:column="10">&amp;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="11">socks<pos:position pos:line="11" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="21">sizeof<argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">socks<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init><expr><name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator><literal type="number" pos:line="12" pos:column="9">0<pos:position pos:line="12" pos:column="10"/></literal></expr>;<pos:position pos:line="12" pos:column="11"/></init> <condition><expr><name pos:line="12" pos:column="12">i<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">&lt;<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="15">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></condition> <incr><expr><name pos:line="12" pos:column="39">i<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">++<pos:position pos:line="12" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="43"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="5">socks<pos:position pos:line="13" pos:column="10"/></name><index pos:line="13" pos:column="10">[<expr><name pos:line="13" pos:column="11">i<pos:position pos:line="13" pos:column="12"/></name></expr>]<pos:position pos:line="13" pos:column="13"/></index></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">CURL_SOCKET_BAD<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></for>

  <comment type="block" pos:line="15" pos:column="3">/* Fill in the 'current' struct with the state as it is now: what sockets to
     supervise and for what actions */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">curraction<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">multi_getsock<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">easy<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">socks<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* We have 0 .. N sockets already and we get to know about the 0 .. M
     sockets we should have from now on. Detect the differences, remove no
     longer supervised ones and add new ones */</comment>

  <comment type="block" pos:line="23" pos:column="3">/* walk over the sockets we got right now */</comment>
  <for pos:line="24" pos:column="3">for<control pos:line="24" pos:column="6">(<init><expr><name pos:line="24" pos:column="7">i<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator><literal type="number" pos:line="24" pos:column="9">0<pos:position pos:line="24" pos:column="10"/></literal></expr>;<pos:position pos:line="24" pos:column="11"/></init> <condition><expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">i<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">&lt;<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="16">MAX_SOCKSPEREASYHANDLE<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">&amp;&amp;<pos:position pos:line="24" pos:column="50"/></operator>
        <operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">curraction<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator> <operator pos:line="25" pos:column="23">(<pos:position pos:line="25" pos:column="24"/></operator><call><name pos:line="25" pos:column="24">GETSOCK_READSOCK<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">i<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <operator pos:line="25" pos:column="44">|<pos:position pos:line="25" pos:column="45"/></operator> <call><name pos:line="25" pos:column="46">GETSOCK_WRITESOCK<pos:position pos:line="25" pos:column="63"/></name><argument_list pos:line="25" pos:column="63">(<argument><expr><name pos:line="25" pos:column="64">i<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call><operator pos:line="25" pos:column="66">)<pos:position pos:line="25" pos:column="67"/></operator><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator></expr>;<pos:position pos:line="25" pos:column="69"/></condition>
      <incr><expr><name pos:line="26" pos:column="7">i<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">++<pos:position pos:line="26" pos:column="10"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="11"/></control> <block pos:line="26" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">action<pos:position pos:line="27" pos:column="15"/></name> <init pos:line="27" pos:column="16">= <expr><name pos:line="27" pos:column="18">CURL_POLL_NONE<pos:position pos:line="27" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">s<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <name><name pos:line="29" pos:column="9">socks<pos:position pos:line="29" pos:column="14"/></name><index pos:line="29" pos:column="14">[<expr><name pos:line="29" pos:column="15">i<pos:position pos:line="29" pos:column="16"/></name></expr>]<pos:position pos:line="29" pos:column="17"/></index></name></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* get it from the hash */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">entry<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">Curl_hash_pick<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">multi<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">sockhash<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="45">(<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">char<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">*<pos:position pos:line="32" pos:column="52"/></operator><operator pos:line="32" pos:column="52">)<pos:position pos:line="32" pos:column="53"/></operator><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">s<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="57">sizeof<argument_list pos:line="32" pos:column="63">(<argument><expr><name pos:line="32" pos:column="64">s<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>

    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">curraction<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&amp;<pos:position pos:line="34" pos:column="24"/></operator> <call><name pos:line="34" pos:column="21">GETSOCK_READSOCK<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">i<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">action<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">|=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">CURL_POLL_IN<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt></block></then></if>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">curraction<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&amp;<pos:position pos:line="36" pos:column="24"/></operator> <call><name pos:line="36" pos:column="21">GETSOCK_WRITESOCK<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">i<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">action<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">|=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">CURL_POLL_OUT<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt></block></then></if>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name pos:line="39" pos:column="8">entry<pos:position pos:line="39" pos:column="13"/></name></expr>)<pos:position pos:line="39" pos:column="14"/></condition><then pos:line="39" pos:column="14"> <block pos:line="39" pos:column="15">{
      <comment type="block" pos:line="40" pos:column="7">/* yeps, already present so check if it has the same action set */</comment>
      <if pos:line="41" pos:column="7">if<condition pos:line="41" pos:column="9">(<expr><name><name pos:line="41" pos:column="10">entry<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">action<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">==<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">action<pos:position pos:line="41" pos:column="33"/></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
        <comment type="block" pos:line="42" pos:column="9">/* same, continue */</comment>
        <block type="pseudo"><continue pos:line="43" pos:column="9">continue;<pos:position pos:line="43" pos:column="18"/></continue></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
      <comment type="block" pos:line="46" pos:column="7">/* this is a socket we didn't have before, add it! */</comment>
      <expr_stmt><expr><name pos:line="47" pos:column="7">entry<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">sh_addentry<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name><name pos:line="47" pos:column="27">multi<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">sockhash<pos:position pos:line="47" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">s<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="47">easy<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">easy_handle<pos:position pos:line="47" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><operator pos:line="48" pos:column="10">!<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">entry<pos:position pos:line="48" pos:column="16"/></name></expr>)<pos:position pos:line="48" pos:column="17"/></condition><then pos:line="48" pos:column="17">
        <comment type="block" pos:line="49" pos:column="9">/* fatal */</comment>
        <block type="pseudo"><return pos:line="50" pos:column="9">return;<pos:position pos:line="50" pos:column="16"/></return></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="53" pos:column="5">multi<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">socket_cb<pos:position pos:line="53" pos:column="21"/></name></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name><name pos:line="53" pos:column="22">easy<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">easy_handle<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>,
                     <argument><expr><name pos:line="54" pos:column="22">s<pos:position pos:line="54" pos:column="23"/></name></expr></argument>,
                     <argument><expr><name pos:line="55" pos:column="22">action<pos:position pos:line="55" pos:column="28"/></name></expr></argument>,
                     <argument><expr><name><name pos:line="56" pos:column="22">multi<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">socket_userp<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="57" pos:column="22">entry<pos:position pos:line="57" pos:column="27"/></name></expr> ?<pos:position pos:line="57" pos:column="29"/></condition><then pos:line="57" pos:column="29"> <expr><name><name pos:line="57" pos:column="30">entry<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">socketp<pos:position pos:line="57" pos:column="44"/></name></name></expr> <pos:position pos:line="57" pos:column="45"/></then><else pos:line="57" pos:column="45">: <expr><name pos:line="57" pos:column="47">NULL<pos:position pos:line="57" pos:column="51"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="59" pos:column="5">entry<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">action<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <name pos:line="59" pos:column="21">action<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt> <comment type="block" pos:line="59" pos:column="29">/* store the current action state */</comment>
  }<pos:position pos:line="60" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="62" pos:column="3">num<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">=<pos:position pos:line="62" pos:column="8"/></operator> <name pos:line="62" pos:column="9">i<pos:position pos:line="62" pos:column="10"/></name></expr>;<pos:position pos:line="62" pos:column="11"/></expr_stmt> <comment type="block" pos:line="62" pos:column="12">/* number of sockets */</comment>

  <comment type="block" pos:line="64" pos:column="3">/* when we've walked over all the sockets we should have right now, we must
     make sure to detect sockets that are removed */</comment>
  <for pos:line="66" pos:column="3">for<control pos:line="66" pos:column="6">(<init><expr><name pos:line="66" pos:column="7">i<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">=<pos:position pos:line="66" pos:column="9"/></operator><literal type="number" pos:line="66" pos:column="9">0<pos:position pos:line="66" pos:column="10"/></literal></expr>;<pos:position pos:line="66" pos:column="11"/></init> <condition><expr><name pos:line="66" pos:column="12">i<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">&lt;<pos:position pos:line="66" pos:column="17"/></operator> <name><name pos:line="66" pos:column="15">easy<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">-&gt;<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="21">numsocks<pos:position pos:line="66" pos:column="29"/></name></name></expr>;<pos:position pos:line="66" pos:column="30"/></condition> <incr><expr><name pos:line="66" pos:column="31">i<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">++<pos:position pos:line="66" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="35"/></control> <block pos:line="66" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">int<pos:position pos:line="67" pos:column="8"/></name></type> <name pos:line="67" pos:column="9">j<pos:position pos:line="67" pos:column="10"/></name></decl>;<pos:position pos:line="67" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">s<pos:position pos:line="68" pos:column="6"/></name> <operator pos:line="68" pos:column="7">=<pos:position pos:line="68" pos:column="8"/></operator> <name><name pos:line="68" pos:column="9">easy<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">sockets<pos:position pos:line="68" pos:column="22"/></name><index pos:line="68" pos:column="22">[<expr><name pos:line="68" pos:column="23">i<pos:position pos:line="68" pos:column="24"/></name></expr>]<pos:position pos:line="68" pos:column="25"/></index></name></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
    <for pos:line="69" pos:column="5">for<control pos:line="69" pos:column="8">(<init><expr><name pos:line="69" pos:column="9">j<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator><literal type="number" pos:line="69" pos:column="11">0<pos:position pos:line="69" pos:column="12"/></literal></expr>;<pos:position pos:line="69" pos:column="13"/></init> <condition><expr><name pos:line="69" pos:column="14">j<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">&lt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">num<pos:position pos:line="69" pos:column="19"/></name></expr>;<pos:position pos:line="69" pos:column="20"/></condition> <incr><expr><name pos:line="69" pos:column="21">j<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">++<pos:position pos:line="69" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="25"/></control> <block pos:line="69" pos:column="26">{
      <if pos:line="70" pos:column="7">if<condition pos:line="70" pos:column="9">(<expr><name pos:line="70" pos:column="10">s<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">==<pos:position pos:line="70" pos:column="14"/></operator> <name><name pos:line="70" pos:column="15">socks<pos:position pos:line="70" pos:column="20"/></name><index pos:line="70" pos:column="20">[<expr><name pos:line="70" pos:column="21">j<pos:position pos:line="70" pos:column="22"/></name></expr>]<pos:position pos:line="70" pos:column="23"/></index></name></expr>)<pos:position pos:line="70" pos:column="24"/></condition><then pos:line="70" pos:column="24"> <block pos:line="70" pos:column="25">{
        <comment type="block" pos:line="71" pos:column="9">/* this is still supervised */</comment>
        <expr_stmt><expr><name pos:line="72" pos:column="9">s<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <name pos:line="72" pos:column="13">CURL_SOCKET_BAD<pos:position pos:line="72" pos:column="28"/></name></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
        <break pos:line="73" pos:column="9">break;<pos:position pos:line="73" pos:column="15"/></break>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></for>
    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">(<expr><name pos:line="76" pos:column="8">s<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">!=<pos:position pos:line="76" pos:column="12"/></operator> <name pos:line="76" pos:column="13">CURL_SOCKET_BAD<pos:position pos:line="76" pos:column="28"/></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29"> <block pos:line="76" pos:column="30">{
      <comment type="block" pos:line="77" pos:column="7">/* this socket has been removed. Remove it */</comment>

      <expr_stmt><expr><name pos:line="79" pos:column="7">entry<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">=<pos:position pos:line="79" pos:column="14"/></operator> <call><name pos:line="79" pos:column="15">Curl_hash_pick<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name><name pos:line="79" pos:column="30">multi<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">-&gt;<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="37">sockhash<pos:position pos:line="79" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="47">(<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="48">char<pos:position pos:line="79" pos:column="52"/></name> <operator pos:line="79" pos:column="53">*<pos:position pos:line="79" pos:column="54"/></operator><operator pos:line="79" pos:column="54">)<pos:position pos:line="79" pos:column="55"/></operator><operator pos:line="79" pos:column="55">&amp;<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="56">s<pos:position pos:line="79" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="59">sizeof<argument_list pos:line="79" pos:column="65">(<argument><expr><name pos:line="79" pos:column="66">s<pos:position pos:line="79" pos:column="67"/></name></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="70"/></expr_stmt>
      <if pos:line="80" pos:column="7">if<condition pos:line="80" pos:column="9">(<expr><name pos:line="80" pos:column="10">entry<pos:position pos:line="80" pos:column="15"/></name></expr>)<pos:position pos:line="80" pos:column="16"/></condition><then pos:line="80" pos:column="16"> <block pos:line="80" pos:column="17">{
        <comment type="block" pos:line="81" pos:column="9">/* just a precaution, this socket really SHOULD be in the hash already
           but in case it isn't, we don't have to tell the app to remove it
           either since it never got to know about it */</comment>
        <expr_stmt><expr><call><name><name pos:line="84" pos:column="9">multi<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="16">socket_cb<pos:position pos:line="84" pos:column="25"/></name></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name><name pos:line="84" pos:column="26">easy<pos:position pos:line="84" pos:column="30"/></name><operator pos:line="84" pos:column="30">-&gt;<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="32">easy_handle<pos:position pos:line="84" pos:column="43"/></name></name></expr></argument>,
                         <argument><expr><name pos:line="85" pos:column="26">s<pos:position pos:line="85" pos:column="27"/></name></expr></argument>,
                         <argument><expr><name pos:line="86" pos:column="26">CURL_POLL_REMOVE<pos:position pos:line="86" pos:column="42"/></name></expr></argument>,
                         <argument><expr><name><name pos:line="87" pos:column="26">multi<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">socket_userp<pos:position pos:line="87" pos:column="45"/></name></name></expr></argument>,
                         <argument><expr><ternary><condition><expr><name pos:line="88" pos:column="26">entry<pos:position pos:line="88" pos:column="31"/></name></expr> ?<pos:position pos:line="88" pos:column="33"/></condition><then pos:line="88" pos:column="33"> <expr><name><name pos:line="88" pos:column="34">entry<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">-&gt;<pos:position pos:line="88" pos:column="44"/></operator><name pos:line="88" pos:column="41">socketp<pos:position pos:line="88" pos:column="48"/></name></name></expr> <pos:position pos:line="88" pos:column="49"/></then><else pos:line="88" pos:column="49">: <expr><name pos:line="88" pos:column="51">NULL<pos:position pos:line="88" pos:column="55"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="88" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="57"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="90" pos:column="9">sh_delentry<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name><name pos:line="90" pos:column="21">multi<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">-&gt;<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="28">sockhash<pos:position pos:line="90" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="38">s<pos:position pos:line="90" pos:column="39"/></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="91" pos:column="8"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
  }<pos:position pos:line="93" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">memcpy<pos:position pos:line="95" pos:column="9"/></name><argument_list pos:line="95" pos:column="9">(<argument><expr><name><name pos:line="95" pos:column="10">easy<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">-&gt;<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="16">sockets<pos:position pos:line="95" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="25">socks<pos:position pos:line="95" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="32">num<pos:position pos:line="95" pos:column="35"/></name><operator pos:line="95" pos:column="35">*<pos:position pos:line="95" pos:column="36"/></operator><sizeof pos:line="95" pos:column="36">sizeof<argument_list pos:line="95" pos:column="42">(<argument><expr><name pos:line="95" pos:column="43">curl_socket_t<pos:position pos:line="95" pos:column="56"/></name></expr></argument>)<pos:position pos:line="95" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="96" pos:column="3">easy<pos:position pos:line="96" pos:column="7"/></name><operator pos:line="96" pos:column="7">-&gt;<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="9">numsocks<pos:position pos:line="96" pos:column="17"/></name></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="20">num<pos:position pos:line="96" pos:column="23"/></name></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

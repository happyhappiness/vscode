<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_53.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">StoreNonPrintable<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">output<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">nsprintf<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">infop<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* If the character isn't printable then we convert it */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">work<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><literal type="number" pos:line="4" pos:column="13">64<pos:position pos:line="4" pos:column="15"/></literal></expr>]<pos:position pos:line="4" pos:column="16"/></index></name></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">w<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">num<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><name pos:line="5" pos:column="13">output<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">w<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <operator pos:line="7" pos:column="7">&amp;<pos:position pos:line="7" pos:column="12"/></operator><name><name pos:line="7" pos:column="8">work<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><sizeof pos:line="7" pos:column="13">sizeof<argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">work<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></sizeof></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><operator pos:line="8" pos:column="4">(<pos:position pos:line="8" pos:column="5"/></operator><operator pos:line="8" pos:column="5">--<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">w<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">char<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
  <for pos:line="9" pos:column="3">for<control pos:line="9" pos:column="6">(<init pos:line="9" pos:column="7">;<pos:position pos:line="9" pos:column="8"/></init> <condition><expr><name pos:line="9" pos:column="9">num<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&gt;<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></condition> <incr><expr><name pos:line="9" pos:column="18">num<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">/=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="25">10<pos:position pos:line="9" pos:column="27"/></literal></expr></incr>)<pos:position pos:line="9" pos:column="28"/></control> <block pos:line="9" pos:column="29">{
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><operator pos:line="10" pos:column="7">--<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">w<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">)<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">lower_digits<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">num<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">%<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="33">10<pos:position pos:line="10" pos:column="35"/></literal></expr>]<pos:position pos:line="10" pos:column="36"/></index></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></for>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">infop<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">length<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">+<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">strlen<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">w<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call> <operator pos:line="12" pos:column="33">+<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal> <operator pos:line="12" pos:column="37">&lt;<pos:position pos:line="12" pos:column="41"/></operator> <name><name pos:line="12" pos:column="39">infop<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">max<pos:position pos:line="12" pos:column="49"/></name></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">infop<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">buffer<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr>]<pos:position pos:line="14" pos:column="23"/></index></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="char" pos:line="14" pos:column="26">'\\'<pos:position pos:line="14" pos:column="30"/></literal></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">infop<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">buffer<pos:position pos:line="15" pos:column="20"/></name></name><operator pos:line="15" pos:column="20">++<pos:position pos:line="15" pos:column="22"/></operator></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">infop<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">length<pos:position pos:line="16" pos:column="20"/></name></name><operator pos:line="16" pos:column="20">++<pos:position pos:line="16" pos:column="22"/></operator></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
      <for pos:line="17" pos:column="7">for <control pos:line="17" pos:column="11">(<init pos:line="17" pos:column="12">;<pos:position pos:line="17" pos:column="13"/></init> <condition><expr><operator pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">w<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></condition> <incr><expr><name pos:line="17" pos:column="18">w<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">++<pos:position pos:line="17" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="22"/></control>
	<block pos:line="18" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="19" pos:column="11">infop<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">buffer<pos:position pos:line="19" pos:column="24"/></name><index pos:line="19" pos:column="24">[<expr><literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>]<pos:position pos:line="19" pos:column="27"/></index></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">w<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="20" pos:column="11">infop<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">buffer<pos:position pos:line="20" pos:column="24"/></name></name><operator pos:line="20" pos:column="24">++<pos:position pos:line="20" pos:column="26"/></operator></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="21" pos:column="11">infop<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">length<pos:position pos:line="21" pos:column="24"/></name></name><operator pos:line="21" pos:column="24">++<pos:position pos:line="21" pos:column="26"/></operator></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">output<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
  <return pos:line="25" pos:column="3">return <expr><operator pos:line="25" pos:column="10">-<pos:position pos:line="25" pos:column="11"/></operator><literal type="number" pos:line="25" pos:column="11">1<pos:position pos:line="25" pos:column="12"/></literal></expr>;<pos:position pos:line="25" pos:column="13"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

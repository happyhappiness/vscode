<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_53.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">URL_FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">handle<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">FILE<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">outf<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nread<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buffer<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">256<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">url<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name pos:line="11" pos:column="8">argc<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&lt;<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="15">2<pos:position pos:line="11" pos:column="16"/></literal></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block pos:line="12" pos:column="5">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">url<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator><literal type="string" pos:line="13" pos:column="13">"http://192.168.7.3/testfile"<pos:position pos:line="13" pos:column="42"/></literal></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt><comment type="block" pos:line="13" pos:column="43">/* default to testurl */</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else
    <block pos:line="16" pos:column="5">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">url<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator><name><name pos:line="17" pos:column="13">argv<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt><comment type="block" pos:line="17" pos:column="21">/* use passed url */</comment>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="20" pos:column="5">/* copy from url line by line with fgets */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">outf<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">fopen<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="string" pos:line="21" pos:column="16">"fgets.test"<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="29">"w+"<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">outf<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition><then pos:line="22" pos:column="14">
    <block pos:line="23" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">perror<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="string" pos:line="24" pos:column="16">"couldnt open fgets output file\n"<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">handle<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">url_fopen<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">url<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"r"<pos:position pos:line="28" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">handle<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16">
    <block pos:line="30" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">printf<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="string" pos:line="31" pos:column="16">"couldn't url_fopen()\n"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fclose<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">outf<pos:position pos:line="32" pos:column="20"/></name></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">2<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <while pos:line="36" pos:column="5">while<condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">!<pos:position pos:line="36" pos:column="12"/></operator><call><name pos:line="36" pos:column="12">url_feof<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">handle<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="29"/></condition>
    <block pos:line="37" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">url_fgets<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">buffer<pos:position pos:line="38" pos:column="25"/></name></expr></argument>,<argument><expr><sizeof pos:line="38" pos:column="26">sizeof<argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">buffer<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></sizeof></expr></argument>,<argument><expr><name pos:line="38" pos:column="41">handle<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">fwrite<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">buffer<pos:position pos:line="39" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="39" pos:column="23">1<pos:position pos:line="39" pos:column="24"/></literal></expr></argument>,<argument><expr><call><name pos:line="39" pos:column="25">strlen<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">buffer<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="39" pos:column="40">outf<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">url_fclose<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">handle<pos:position pos:line="42" pos:column="22"/></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">fclose<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">outf<pos:position pos:line="44" pos:column="16"/></name></expr></argument>)<pos:position pos:line="44" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>


    <comment type="block" pos:line="47" pos:column="5">/* Copy from url with fread */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">outf<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator><call><name pos:line="48" pos:column="10">fopen<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="string" pos:line="48" pos:column="16">"fread.test"<pos:position pos:line="48" pos:column="28"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="48" pos:column="29">"w+"<pos:position pos:line="48" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><operator pos:line="49" pos:column="8">!<pos:position pos:line="49" pos:column="9"/></operator><name pos:line="49" pos:column="9">outf<pos:position pos:line="49" pos:column="13"/></name></expr>)<pos:position pos:line="49" pos:column="14"/></condition><then pos:line="49" pos:column="14">
    <block pos:line="50" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">perror<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="string" pos:line="51" pos:column="16">"couldnt open fread output file\n"<pos:position pos:line="51" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt>
        <return pos:line="52" pos:column="9">return <expr><literal type="number" pos:line="52" pos:column="16">1<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">handle<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">url_fopen<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><literal type="string" pos:line="55" pos:column="24">"testfile"<pos:position pos:line="55" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="36">"r"<pos:position pos:line="55" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><operator pos:line="56" pos:column="8">!<pos:position pos:line="56" pos:column="9"/></operator><name pos:line="56" pos:column="9">handle<pos:position pos:line="56" pos:column="15"/></name></expr>)<pos:position pos:line="56" pos:column="16"/></condition><then pos:line="56" pos:column="16"> <block pos:line="56" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">printf<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="string" pos:line="57" pos:column="16">"couldn't url_fopen()\n"<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">fclose<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">outf<pos:position pos:line="58" pos:column="20"/></name></expr></argument>)<pos:position pos:line="58" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
        <return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">2<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <do pos:line="62" pos:column="5">do <block pos:line="62" pos:column="8">{
        <expr_stmt><expr><name pos:line="63" pos:column="9">nread<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">url_fread<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name pos:line="63" pos:column="27">buffer<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="35">1<pos:position pos:line="63" pos:column="36"/></literal></expr></argument>,<argument><expr><sizeof pos:line="63" pos:column="37">sizeof<argument_list pos:line="63" pos:column="43">(<argument><expr><name pos:line="63" pos:column="44">buffer<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">handle<pos:position pos:line="63" pos:column="59"/></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">fwrite<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">buffer<pos:position pos:line="64" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="64" pos:column="23">1<pos:position pos:line="64" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="64" pos:column="25">nread<pos:position pos:line="64" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="64" pos:column="31">outf<pos:position pos:line="64" pos:column="35"/></name></expr></argument>)<pos:position pos:line="64" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block> while<condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">nread<pos:position pos:line="65" pos:column="18"/></name></expr>)<pos:position pos:line="65" pos:column="19"/></condition>;<pos:position pos:line="65" pos:column="20"/></do>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">url_fclose<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">handle<pos:position pos:line="67" pos:column="22"/></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">fclose<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><name pos:line="69" pos:column="12">outf<pos:position pos:line="69" pos:column="16"/></name></expr></argument>)<pos:position pos:line="69" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="18"/></expr_stmt>


    <comment type="block" pos:line="72" pos:column="5">/* Test rewind */</comment>
    <expr_stmt><expr><name pos:line="73" pos:column="5">outf<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">=<pos:position pos:line="73" pos:column="10"/></operator><call><name pos:line="73" pos:column="10">fopen<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><literal type="string" pos:line="73" pos:column="16">"rewind.test"<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="73" pos:column="30">"w+"<pos:position pos:line="73" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="36"/></expr_stmt>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><operator pos:line="74" pos:column="8">!<pos:position pos:line="74" pos:column="9"/></operator><name pos:line="74" pos:column="9">outf<pos:position pos:line="74" pos:column="13"/></name></expr>)<pos:position pos:line="74" pos:column="14"/></condition><then pos:line="74" pos:column="14">
    <block pos:line="75" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">perror<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="string" pos:line="76" pos:column="16">"couldnt open fread output file\n"<pos:position pos:line="76" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="52"/></expr_stmt>
        <return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">1<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="80" pos:column="5">handle<pos:position pos:line="80" pos:column="11"/></name> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <call><name pos:line="80" pos:column="14">url_fopen<pos:position pos:line="80" pos:column="23"/></name><argument_list pos:line="80" pos:column="23">(<argument><expr><literal type="string" pos:line="80" pos:column="24">"testfile"<pos:position pos:line="80" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="36">"r"<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><operator pos:line="81" pos:column="8">!<pos:position pos:line="81" pos:column="9"/></operator><name pos:line="81" pos:column="9">handle<pos:position pos:line="81" pos:column="15"/></name></expr>)<pos:position pos:line="81" pos:column="16"/></condition><then pos:line="81" pos:column="16"> <block pos:line="81" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">printf<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="string" pos:line="82" pos:column="16">"couldn't url_fopen()\n"<pos:position pos:line="82" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">fclose<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">outf<pos:position pos:line="83" pos:column="20"/></name></expr></argument>)<pos:position pos:line="83" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>
        <return pos:line="84" pos:column="9">return <expr><literal type="number" pos:line="84" pos:column="16">2<pos:position pos:line="84" pos:column="17"/></literal></expr>;<pos:position pos:line="84" pos:column="18"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

        <expr_stmt><expr><name pos:line="87" pos:column="9">nread<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">=<pos:position pos:line="87" pos:column="16"/></operator> <call><name pos:line="87" pos:column="17">url_fread<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">buffer<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="35">1<pos:position pos:line="87" pos:column="36"/></literal></expr></argument>,<argument><expr><sizeof pos:line="87" pos:column="37">sizeof<argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">buffer<pos:position pos:line="87" pos:column="50"/></name></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="87" pos:column="53">handle<pos:position pos:line="87" pos:column="59"/></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">fwrite<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">buffer<pos:position pos:line="88" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="88" pos:column="23">1<pos:position pos:line="88" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="88" pos:column="25">nread<pos:position pos:line="88" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="88" pos:column="31">outf<pos:position pos:line="88" pos:column="35"/></name></expr></argument>)<pos:position pos:line="88" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">url_rewind<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><name pos:line="89" pos:column="20">handle<pos:position pos:line="89" pos:column="26"/></name></expr></argument>)<pos:position pos:line="89" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="91" pos:column="9">buffer<pos:position pos:line="91" pos:column="15"/></name><index pos:line="91" pos:column="15">[<expr><literal type="number" pos:line="91" pos:column="16">0<pos:position pos:line="91" pos:column="17"/></literal></expr>]<pos:position pos:line="91" pos:column="18"/></index></name><operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator><literal type="char" pos:line="91" pos:column="19">'\n'<pos:position pos:line="91" pos:column="23"/></literal></expr>;<pos:position pos:line="91" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">fwrite<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><name pos:line="92" pos:column="16">buffer<pos:position pos:line="92" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="92" pos:column="23">1<pos:position pos:line="92" pos:column="24"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="92" pos:column="25">1<pos:position pos:line="92" pos:column="26"/></literal></expr></argument>,<argument><expr><name pos:line="92" pos:column="27">outf<pos:position pos:line="92" pos:column="31"/></name></expr></argument>)<pos:position pos:line="92" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name pos:line="94" pos:column="9">nread<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <call><name pos:line="94" pos:column="17">url_fread<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">(<argument><expr><name pos:line="94" pos:column="27">buffer<pos:position pos:line="94" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="35">1<pos:position pos:line="94" pos:column="36"/></literal></expr></argument>,<argument><expr><sizeof pos:line="94" pos:column="37">sizeof<argument_list pos:line="94" pos:column="43">(<argument><expr><name pos:line="94" pos:column="44">buffer<pos:position pos:line="94" pos:column="50"/></name></expr></argument>)<pos:position pos:line="94" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="94" pos:column="53">handle<pos:position pos:line="94" pos:column="59"/></name></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">fwrite<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">buffer<pos:position pos:line="95" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="95" pos:column="23">1<pos:position pos:line="95" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="95" pos:column="25">nread<pos:position pos:line="95" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="95" pos:column="31">outf<pos:position pos:line="95" pos:column="35"/></name></expr></argument>)<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>


    <expr_stmt><expr><call><name pos:line="98" pos:column="5">url_fclose<pos:position pos:line="98" pos:column="15"/></name><argument_list pos:line="98" pos:column="15">(<argument><expr><name pos:line="98" pos:column="16">handle<pos:position pos:line="98" pos:column="22"/></name></expr></argument>)<pos:position pos:line="98" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">fclose<pos:position pos:line="100" pos:column="11"/></name><argument_list pos:line="100" pos:column="11">(<argument><expr><name pos:line="100" pos:column="12">outf<pos:position pos:line="100" pos:column="16"/></name></expr></argument>)<pos:position pos:line="100" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="18"/></expr_stmt>


    <return pos:line="103" pos:column="5">return <expr><literal type="number" pos:line="103" pos:column="12">0<pos:position pos:line="103" pos:column="13"/></literal></expr>;<pos:position pos:line="103" pos:column="14"/></return><comment type="block" pos:line="103" pos:column="14">/* all done */</comment>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

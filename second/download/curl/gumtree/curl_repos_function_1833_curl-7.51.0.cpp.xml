<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1833_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">proxy_magic<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">newhost<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">short<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">newport<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">bool<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">magicdone<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><call><name pos:line="8" pos:column="5">defined<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">CURL_DISABLE_PROXY<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator> <name pos:line="9" pos:column="10">newhost<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator> <name pos:line="10" pos:column="10">newport<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">magicdone<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">FALSE<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

  <switch pos:line="15" pos:column="3">switch<condition pos:line="15" pos:column="9">(<expr><name><name pos:line="15" pos:column="10">conn<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">proxytype<pos:position pos:line="15" pos:column="25"/></name></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition> <block pos:line="15" pos:column="27">{
  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">CURLPROXY_SOCKS5<pos:position pos:line="16" pos:column="24"/></name></expr>:<pos:position pos:line="16" pos:column="25"/></case>
  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">CURLPROXY_SOCKS5_HOSTNAME<pos:position pos:line="17" pos:column="33"/></name></expr>:<pos:position pos:line="17" pos:column="34"/></case>
    <expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">Curl_SOCKS5<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">conn<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">proxyuser<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">conn<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">proxypasswd<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="62">newhost<pos:position pos:line="18" pos:column="69"/></name></expr></argument>,
                         <argument><expr><name pos:line="19" pos:column="26">newport<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">SECONDARYSOCKET<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">conn<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">magicdone<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">TRUE<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <break pos:line="21" pos:column="5">break;<pos:position pos:line="21" pos:column="11"/></break>
  <case pos:line="22" pos:column="3">case <expr><name pos:line="22" pos:column="8">CURLPROXY_SOCKS4<pos:position pos:line="22" pos:column="24"/></name></expr>:<pos:position pos:line="22" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="23" pos:column="5">result<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">Curl_SOCKS4<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name><name pos:line="23" pos:column="26">conn<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">proxyuser<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">newhost<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">newport<pos:position pos:line="23" pos:column="59"/></name></expr></argument>,
                         <argument><expr><name pos:line="24" pos:column="26">SECONDARYSOCKET<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">conn<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">FALSE<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">magicdone<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">TRUE<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">CURLPROXY_SOCKS4A<pos:position pos:line="27" pos:column="25"/></name></expr>:<pos:position pos:line="27" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="28" pos:column="5">result<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">Curl_SOCKS4<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name><name pos:line="28" pos:column="26">conn<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">proxyuser<pos:position pos:line="28" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">newhost<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">newport<pos:position pos:line="28" pos:column="59"/></name></expr></argument>,
                         <argument><expr><name pos:line="29" pos:column="26">SECONDARYSOCKET<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">conn<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">TRUE<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">magicdone<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">TRUE<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">CURLPROXY_HTTP<pos:position pos:line="32" pos:column="22"/></name></expr>:<pos:position pos:line="32" pos:column="23"/></case>
  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">CURLPROXY_HTTP_1_0<pos:position pos:line="33" pos:column="26"/></name></expr>:<pos:position pos:line="33" pos:column="27"/></case>
    <comment type="block" pos:line="34" pos:column="5">/* do nothing here. handled later. */</comment>
    <break pos:line="35" pos:column="5">break;<pos:position pos:line="35" pos:column="11"/></break>
  <default pos:line="36" pos:column="3">default:<pos:position pos:line="36" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">failf<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="17">"unknown proxytype option given"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">result<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name pos:line="38" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
    <break pos:line="39" pos:column="5">break;<pos:position pos:line="39" pos:column="11"/></break>
  }<pos:position pos:line="40" pos:column="4"/></block></switch>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name><name pos:line="42" pos:column="6">conn<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">bits<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">.<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">tunnel_proxy<pos:position pos:line="42" pos:column="29"/></name></name> <operator pos:line="42" pos:column="30">&amp;&amp;<pos:position pos:line="42" pos:column="40"/></operator> <name><name pos:line="42" pos:column="33">conn<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">bits<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">httpproxy<pos:position pos:line="42" pos:column="53"/></name></name></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54"> <block pos:line="42" pos:column="55">{
    <comment type="block" pos:line="43" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="44" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>

    <comment type="block" pos:line="46" pos:column="5">/* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the
     * member conn-&gt;proto.http; we want FTP through HTTP and we have to
     * change the member temporarily for connecting to the HTTP proxy. After
     * Curl_proxyCONNECT we have to set back the member to the original
     * struct FTP pointer
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="52" pos:column="5">struct<pos:position pos:line="52" pos:column="11"/></name> <name pos:line="52" pos:column="12">HTTP<pos:position pos:line="52" pos:column="16"/></name></name></type> <name pos:line="52" pos:column="17">http_proxy<pos:position pos:line="52" pos:column="27"/></name></decl>;<pos:position pos:line="52" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="53" pos:column="5">struct<pos:position pos:line="53" pos:column="11"/></name> <name pos:line="53" pos:column="12">FTP<pos:position pos:line="53" pos:column="15"/></name></name> <modifier pos:line="53" pos:column="16">*<pos:position pos:line="53" pos:column="17"/></modifier></type><name pos:line="53" pos:column="17">ftp_save<pos:position pos:line="53" pos:column="25"/></name> <init pos:line="53" pos:column="26">= <expr><name><name pos:line="53" pos:column="28">data<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">req<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">.<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">protop<pos:position pos:line="53" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="53" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">memset<pos:position pos:line="54" pos:column="11"/></name><argument_list pos:line="54" pos:column="11">(<argument><expr><operator pos:line="54" pos:column="12">&amp;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="13">http_proxy<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="25">0<pos:position pos:line="54" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="28">sizeof<argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">http_proxy<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">data<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">req<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">protop<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="25">http_proxy<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="57" pos:column="5">result<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">Curl_proxyCONNECT<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">conn<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">SECONDARYSOCKET<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">newhost<pos:position pos:line="57" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="64">newport<pos:position pos:line="57" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="73">TRUE<pos:position pos:line="57" pos:column="77"/></name></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">req<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">protop<pos:position pos:line="59" pos:column="21"/></name></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">ftp_save<pos:position pos:line="59" pos:column="32"/></name></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>

    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><name pos:line="61" pos:column="8">result<pos:position pos:line="61" pos:column="14"/></name></expr>)<pos:position pos:line="61" pos:column="15"/></condition><then pos:line="61" pos:column="15">
      <block type="pseudo"><return pos:line="62" pos:column="7">return <expr><name pos:line="62" pos:column="14">result<pos:position pos:line="62" pos:column="20"/></name></expr>;<pos:position pos:line="62" pos:column="21"/></return></block></then></if>

    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name><name pos:line="64" pos:column="8">conn<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">tunnel_state<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><name pos:line="64" pos:column="27">SECONDARYSOCKET<pos:position pos:line="64" pos:column="42"/></name></expr>]<pos:position pos:line="64" pos:column="43"/></index></name> <operator pos:line="64" pos:column="44">!=<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="47">TUNNEL_COMPLETE<pos:position pos:line="64" pos:column="62"/></name></expr>)<pos:position pos:line="64" pos:column="63"/></condition><then pos:line="64" pos:column="63"> <block pos:line="64" pos:column="64">{
      <comment type="block" pos:line="65" pos:column="7">/* the CONNECT procedure is not complete, the tunnel is not yet up */</comment>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">state<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">conn<pos:position pos:line="66" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="19">FTP_STOP<pos:position pos:line="66" pos:column="27"/></name></expr></argument>)<pos:position pos:line="66" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt> <comment type="block" pos:line="66" pos:column="30">/* this phase is completed */</comment>
      <return pos:line="67" pos:column="7">return <expr><name pos:line="67" pos:column="14">result<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then>
    <else pos:line="69" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="70" pos:column="7">*<pos:position pos:line="70" pos:column="8"/></operator><name pos:line="70" pos:column="8">magicdone<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <name pos:line="70" pos:column="20">TRUE<pos:position pos:line="70" pos:column="24"/></name></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt></block></else></if>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">result<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

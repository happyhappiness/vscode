<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_436_curl-7.35.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLM<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">cm<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">curl_slist<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">headers<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buffer<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">246<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt> <comment type="block" pos:line="5" pos:column="21">/* naively fixed-size */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">res<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <for pos:line="9" pos:column="3">for<control pos:line="9" pos:column="6">(<init><expr><name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal></expr>;<pos:position pos:line="9" pos:column="11"/></init> <condition><expr><name pos:line="9" pos:column="12">i<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="16">NUM_HANDLES<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></condition> <incr><expr><name pos:line="9" pos:column="29">i<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">++<pos:position pos:line="9" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="33"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="5">eh<pos:position pos:line="10" pos:column="7"/></name><index pos:line="10" pos:column="7">[<expr><name pos:line="10" pos:column="8">i<pos:position pos:line="10" pos:column="9"/></name></expr>]<pos:position pos:line="10" pos:column="10"/></index></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">start_test_timing<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">test_argc<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&lt;<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="18">4<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">99<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">sprintf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">buffer<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"Host: %s"<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">HOST<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* now add a custom Host: header */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">headers<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">curl_slist_append<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">headers<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">buffer<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">headers<pos:position pos:line="21" pos:column="14"/></name></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <block pos:line="21" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fprintf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">stderr<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"curl_slist_append() failed\n"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">res_global_init<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name pos:line="27" pos:column="6">res<pos:position pos:line="27" pos:column="9"/></name></expr>)<pos:position pos:line="27" pos:column="10"/></condition><then pos:line="27" pos:column="10"> <block pos:line="27" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">curl_slist_free_all<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">headers<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">res<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">res_multi_init<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">cm<pos:position pos:line="32" pos:column="20"/></name></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">res<pos:position pos:line="33" pos:column="9"/></name></expr>)<pos:position pos:line="33" pos:column="10"/></condition><then pos:line="33" pos:column="10"> <block pos:line="33" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">curl_global_cleanup<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">()<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_slist_free_all<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">headers<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">res<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">res<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">loop<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="17">cm<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="21">URL<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">PROXYUSERPWD<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">headers<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">res<pos:position pos:line="40" pos:column="9"/></name></expr>)<pos:position pos:line="40" pos:column="10"/></condition><then pos:line="40" pos:column="10">
    <block type="pseudo"><goto pos:line="41" pos:column="5">goto <name pos:line="41" pos:column="10">test_cleanup<pos:position pos:line="41" pos:column="22"/></name>;<pos:position pos:line="41" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">fprintf<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">stderr<pos:position pos:line="43" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="19">"lib540: now we do the request again\n"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>

  <expr_stmt><expr><name pos:line="45" pos:column="3">res<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <call><name pos:line="45" pos:column="9">loop<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="17">cm<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="21">URL<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">PROXYUSERPWD<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">headers<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>

<label><name pos:line="47" pos:column="1">test_cleanup<pos:position pos:line="47" pos:column="13"/></name>:<pos:position pos:line="47" pos:column="14"/></label>

  <comment type="block" pos:line="49" pos:column="3">/* proper cleanup sequence - type PB */</comment>

  <for pos:line="51" pos:column="3">for<control pos:line="51" pos:column="6">(<init><expr><name pos:line="51" pos:column="7">i<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">=<pos:position pos:line="51" pos:column="9"/></operator><literal type="number" pos:line="51" pos:column="9">0<pos:position pos:line="51" pos:column="10"/></literal></expr>;<pos:position pos:line="51" pos:column="11"/></init> <condition><expr><name pos:line="51" pos:column="12">i<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">&lt;<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="16">NUM_HANDLES<pos:position pos:line="51" pos:column="27"/></name></expr>;<pos:position pos:line="51" pos:column="28"/></condition> <incr><expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">++<pos:position pos:line="51" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="33"/></control> <block pos:line="51" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">curl_multi_remove_handle<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">cm<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="34">eh<pos:position pos:line="52" pos:column="36"/></name><index pos:line="52" pos:column="36">[<expr><name pos:line="52" pos:column="37">i<pos:position pos:line="52" pos:column="38"/></name></expr>]<pos:position pos:line="52" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_easy_cleanup<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name><name pos:line="53" pos:column="23">eh<pos:position pos:line="53" pos:column="25"/></name><index pos:line="53" pos:column="25">[<expr><name pos:line="53" pos:column="26">i<pos:position pos:line="53" pos:column="27"/></name></expr>]<pos:position pos:line="53" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">curl_multi_cleanup<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">cm<pos:position pos:line="56" pos:column="24"/></name></expr></argument>)<pos:position pos:line="56" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">curl_global_cleanup<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">()<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">curl_slist_free_all<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">headers<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>

  <return pos:line="61" pos:column="3">return <expr><name pos:line="61" pos:column="10">res<pos:position pos:line="61" pos:column="13"/></name></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

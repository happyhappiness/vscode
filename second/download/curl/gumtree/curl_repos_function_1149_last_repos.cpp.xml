<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1149_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_output_ntlm<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">bool<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">proxy<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">base64<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* point to the address of the pointer that holds the string to send to the
     server, which is for a plain host or for a HTTP proxy */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier><modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type><name pos:line="9" pos:column="10">allocuserpwd<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* point to the name and password for this */</comment>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">userp<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">passwdp<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* point to the correct struct with this */</comment>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">ntlmdata<pos:position pos:line="16" pos:column="18"/></name></name> <modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier></type><name pos:line="16" pos:column="20">ntlm<pos:position pos:line="16" pos:column="24"/></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">struct<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">auth<pos:position pos:line="17" pos:column="14"/></name></name> <modifier pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></modifier></type><name pos:line="17" pos:column="16">authp<pos:position pos:line="17" pos:column="21"/></name></decl>;<pos:position pos:line="17" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">DEBUGASSERT<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">conn<pos:position pos:line="19" pos:column="19"/></name></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">DEBUGASSERT<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name><name pos:line="20" pos:column="15">conn<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">data<pos:position pos:line="20" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><call><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">NTLM_NEEDS_NSS_INIT<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr></cpp:if>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">CURLE_OK<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">!=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">Curl_nss_force_init<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name><name pos:line="23" pos:column="38">conn<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">data<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></return></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name pos:line="27" pos:column="6">proxy<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12"> <block pos:line="27" pos:column="13">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">allocuserpwd<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name><name pos:line="28" pos:column="21">conn<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">allocptr<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">proxyuserpwd<pos:position pos:line="28" pos:column="48"/></name></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">userp<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name><name pos:line="29" pos:column="13">conn<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">http_proxy<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">user<pos:position pos:line="29" pos:column="34"/></name></name></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">passwdp<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">conn<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">http_proxy<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">passwd<pos:position pos:line="30" pos:column="38"/></name></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">ntlm<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <operator pos:line="31" pos:column="12">&amp;<pos:position pos:line="31" pos:column="17"/></operator><name><name pos:line="31" pos:column="13">conn<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">proxyntlm<pos:position pos:line="31" pos:column="28"/></name></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">authp<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">&amp;<pos:position pos:line="32" pos:column="18"/></operator><name><name pos:line="32" pos:column="14">conn<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">data<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">state<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">.<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">authproxy<pos:position pos:line="32" pos:column="41"/></name></name></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else <block pos:line="34" pos:column="8">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">allocuserpwd<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">&amp;<pos:position pos:line="35" pos:column="25"/></operator><name><name pos:line="35" pos:column="21">conn<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">allocptr<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">userpwd<pos:position pos:line="35" pos:column="43"/></name></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">userp<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name><name pos:line="36" pos:column="13">conn<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">user<pos:position pos:line="36" pos:column="23"/></name></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">passwdp<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name><name pos:line="37" pos:column="15">conn<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">passwd<pos:position pos:line="37" pos:column="27"/></name></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">ntlm<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <operator pos:line="38" pos:column="12">&amp;<pos:position pos:line="38" pos:column="17"/></operator><name><name pos:line="38" pos:column="13">conn<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">ntlm<pos:position pos:line="38" pos:column="23"/></name></name></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">authp<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <operator pos:line="39" pos:column="13">&amp;<pos:position pos:line="39" pos:column="18"/></operator><name><name pos:line="39" pos:column="14">conn<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">data<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">state<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">authhost<pos:position pos:line="39" pos:column="40"/></name></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">authp<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">done<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">FALSE<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="43" pos:column="3">/* not set means empty */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><operator pos:line="44" pos:column="6">!<pos:position pos:line="44" pos:column="7"/></operator><name pos:line="44" pos:column="7">userp<pos:position pos:line="44" pos:column="12"/></name></expr>)<pos:position pos:line="44" pos:column="13"/></condition><then pos:line="44" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">userp<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <literal type="string" pos:line="45" pos:column="13">""<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">passwdp<pos:position pos:line="47" pos:column="14"/></name></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="5">passwdp<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <literal type="string" pos:line="48" pos:column="15">""<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">USE_WINDOWS_SSPI<pos:position pos:line="50" pos:column="24"/></name></cpp:ifdef>
  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><name pos:line="51" pos:column="6">s_hSecDll<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">==<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">NULL<pos:position pos:line="51" pos:column="23"/></name></expr>)<pos:position pos:line="51" pos:column="24"/></condition><then pos:line="51" pos:column="24"> <block pos:line="51" pos:column="25">{
    <comment type="block" pos:line="52" pos:column="5">/* not thread safe and leaks - use curl_global_init() to avoid */</comment>
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">CURLcode<pos:position pos:line="53" pos:column="13"/></name></type> <name pos:line="53" pos:column="14">err<pos:position pos:line="53" pos:column="17"/></name> <init pos:line="53" pos:column="18">= <expr><call><name pos:line="53" pos:column="20">Curl_sspi_global_init<pos:position pos:line="53" pos:column="41"/></name><argument_list pos:line="53" pos:column="41">()<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="44"/></decl_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">s_hSecDll<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">==<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">NULL<pos:position pos:line="54" pos:column="25"/></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">err<pos:position pos:line="55" pos:column="17"/></name></expr>;<pos:position pos:line="55" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

  <switch pos:line="59" pos:column="3">switch<condition pos:line="59" pos:column="9">(<expr><name><name pos:line="59" pos:column="10">ntlm<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">state<pos:position pos:line="59" pos:column="21"/></name></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition> <block pos:line="59" pos:column="23">{
  <case pos:line="60" pos:column="3">case <expr><name pos:line="60" pos:column="8">NTLMSTATE_TYPE1<pos:position pos:line="60" pos:column="23"/></name></expr>:<pos:position pos:line="60" pos:column="24"/></case>
  <default pos:line="61" pos:column="3">default:<pos:position pos:line="61" pos:column="11"/></default> <comment type="block" pos:line="61" pos:column="12">/* for the weird cases we (re)start here */</comment>
    <comment type="block" pos:line="62" pos:column="5">/* Create a type-1 message */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">result<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name pos:line="63" pos:column="14">Curl_auth_create_ntlm_type1_message<pos:position pos:line="63" pos:column="49"/></name><argument_list pos:line="63" pos:column="49">(<argument><expr><name><name pos:line="63" pos:column="50">conn<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">-&gt;<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="56">data<pos:position pos:line="63" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="62">userp<pos:position pos:line="63" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="69">passwdp<pos:position pos:line="63" pos:column="76"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="64" pos:column="50">ntlm<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="56">&amp;<pos:position pos:line="64" pos:column="61"/></operator><name pos:line="64" pos:column="57">base64<pos:position pos:line="64" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="65">&amp;<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="66">len<pos:position pos:line="64" pos:column="69"/></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name pos:line="65" pos:column="8">result<pos:position pos:line="65" pos:column="14"/></name></expr>)<pos:position pos:line="65" pos:column="15"/></condition><then pos:line="65" pos:column="15">
      <block type="pseudo"><return pos:line="66" pos:column="7">return <expr><name pos:line="66" pos:column="14">result<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></return></block></then></if>

    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name pos:line="68" pos:column="8">base64<pos:position pos:line="68" pos:column="14"/></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15"> <block pos:line="68" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">free<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><operator pos:line="69" pos:column="12">*<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">allocuserpwd<pos:position pos:line="69" pos:column="25"/></name></expr></argument>)<pos:position pos:line="69" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="70" pos:column="7">*<pos:position pos:line="70" pos:column="8"/></operator><name pos:line="70" pos:column="8">allocuserpwd<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">aprintf<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><literal type="string" pos:line="70" pos:column="31">"%sAuthorization: NTLM %s\r\n"<pos:position pos:line="70" pos:column="61"/></literal></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="71" pos:column="31">proxy<pos:position pos:line="71" pos:column="36"/></name></expr> ?<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38"> <expr><literal type="string" pos:line="71" pos:column="39">"Proxy-"<pos:position pos:line="71" pos:column="47"/></literal></expr> <pos:position pos:line="71" pos:column="48"/></then><else pos:line="71" pos:column="48">: <expr><literal type="string" pos:line="71" pos:column="50">""<pos:position pos:line="71" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><name pos:line="72" pos:column="31">base64<pos:position pos:line="72" pos:column="37"/></name></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">free<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><name pos:line="73" pos:column="12">base64<pos:position pos:line="73" pos:column="18"/></name></expr></argument>)<pos:position pos:line="73" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>
      <if pos:line="74" pos:column="7">if<condition pos:line="74" pos:column="9">(<expr><operator pos:line="74" pos:column="10">!<pos:position pos:line="74" pos:column="11"/></operator><operator pos:line="74" pos:column="11">*<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="12">allocuserpwd<pos:position pos:line="74" pos:column="24"/></name></expr>)<pos:position pos:line="74" pos:column="25"/></condition><then pos:line="74" pos:column="25">
        <block type="pseudo"><return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="75" pos:column="35"/></name></expr>;<pos:position pos:line="75" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="77" pos:column="7">DEBUG_OUT<pos:position pos:line="77" pos:column="16"/></name><argument_list pos:line="77" pos:column="16">(<argument><expr><call><name pos:line="77" pos:column="17">fprintf<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">stderr<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"**** Header %s\n "<pos:position pos:line="77" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="77" pos:column="54">*<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="55">allocuserpwd<pos:position pos:line="77" pos:column="67"/></name></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
    <break pos:line="79" pos:column="5">break;<pos:position pos:line="79" pos:column="11"/></break>

  <case pos:line="81" pos:column="3">case <expr><name pos:line="81" pos:column="8">NTLMSTATE_TYPE2<pos:position pos:line="81" pos:column="23"/></name></expr>:<pos:position pos:line="81" pos:column="24"/></case>
    <comment type="block" pos:line="82" pos:column="5">/* We already received the type-2 message, create a type-3 message */</comment>
    <expr_stmt><expr><name pos:line="83" pos:column="5">result<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <call><name pos:line="83" pos:column="14">Curl_auth_create_ntlm_type3_message<pos:position pos:line="83" pos:column="49"/></name><argument_list pos:line="83" pos:column="49">(<argument><expr><name><name pos:line="83" pos:column="50">conn<pos:position pos:line="83" pos:column="54"/></name><operator pos:line="83" pos:column="54">-&gt;<pos:position pos:line="83" pos:column="59"/></operator><name pos:line="83" pos:column="56">data<pos:position pos:line="83" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">userp<pos:position pos:line="83" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="69">passwdp<pos:position pos:line="83" pos:column="76"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="84" pos:column="50">ntlm<pos:position pos:line="84" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="56">&amp;<pos:position pos:line="84" pos:column="61"/></operator><name pos:line="84" pos:column="57">base64<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="65">&amp;<pos:position pos:line="84" pos:column="70"/></operator><name pos:line="84" pos:column="66">len<pos:position pos:line="84" pos:column="69"/></name></expr></argument>)<pos:position pos:line="84" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="71"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><name pos:line="85" pos:column="8">result<pos:position pos:line="85" pos:column="14"/></name></expr>)<pos:position pos:line="85" pos:column="15"/></condition><then pos:line="85" pos:column="15">
      <block type="pseudo"><return pos:line="86" pos:column="7">return <expr><name pos:line="86" pos:column="14">result<pos:position pos:line="86" pos:column="20"/></name></expr>;<pos:position pos:line="86" pos:column="21"/></return></block></then></if>

    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><name pos:line="88" pos:column="8">base64<pos:position pos:line="88" pos:column="14"/></name></expr>)<pos:position pos:line="88" pos:column="15"/></condition><then pos:line="88" pos:column="15"> <block pos:line="88" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">free<pos:position pos:line="89" pos:column="11"/></name><argument_list pos:line="89" pos:column="11">(<argument><expr><operator pos:line="89" pos:column="12">*<pos:position pos:line="89" pos:column="13"/></operator><name pos:line="89" pos:column="13">allocuserpwd<pos:position pos:line="89" pos:column="25"/></name></expr></argument>)<pos:position pos:line="89" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="90" pos:column="7">*<pos:position pos:line="90" pos:column="8"/></operator><name pos:line="90" pos:column="8">allocuserpwd<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <call><name pos:line="90" pos:column="23">aprintf<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><literal type="string" pos:line="90" pos:column="31">"%sAuthorization: NTLM %s\r\n"<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>,
                              <argument><expr><ternary><condition><expr><name pos:line="91" pos:column="31">proxy<pos:position pos:line="91" pos:column="36"/></name></expr> ?<pos:position pos:line="91" pos:column="38"/></condition><then pos:line="91" pos:column="38"> <expr><literal type="string" pos:line="91" pos:column="39">"Proxy-"<pos:position pos:line="91" pos:column="47"/></literal></expr> <pos:position pos:line="91" pos:column="48"/></then><else pos:line="91" pos:column="48">: <expr><literal type="string" pos:line="91" pos:column="50">""<pos:position pos:line="91" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><name pos:line="92" pos:column="31">base64<pos:position pos:line="92" pos:column="37"/></name></expr></argument>)<pos:position pos:line="92" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">free<pos:position pos:line="93" pos:column="11"/></name><argument_list pos:line="93" pos:column="11">(<argument><expr><name pos:line="93" pos:column="12">base64<pos:position pos:line="93" pos:column="18"/></name></expr></argument>)<pos:position pos:line="93" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="20"/></expr_stmt>
      <if pos:line="94" pos:column="7">if<condition pos:line="94" pos:column="9">(<expr><operator pos:line="94" pos:column="10">!<pos:position pos:line="94" pos:column="11"/></operator><operator pos:line="94" pos:column="11">*<pos:position pos:line="94" pos:column="12"/></operator><name pos:line="94" pos:column="12">allocuserpwd<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
        <block type="pseudo"><return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="95" pos:column="35"/></name></expr>;<pos:position pos:line="95" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="97" pos:column="7">DEBUG_OUT<pos:position pos:line="97" pos:column="16"/></name><argument_list pos:line="97" pos:column="16">(<argument><expr><call><name pos:line="97" pos:column="17">fprintf<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">stderr<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="33">"**** %s\n "<pos:position pos:line="97" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="47">*<pos:position pos:line="97" pos:column="48"/></operator><name pos:line="97" pos:column="48">allocuserpwd<pos:position pos:line="97" pos:column="60"/></name></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="63"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="99" pos:column="7">ntlm<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">state<pos:position pos:line="99" pos:column="18"/></name></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <name pos:line="99" pos:column="21">NTLMSTATE_TYPE3<pos:position pos:line="99" pos:column="36"/></name></expr>;<pos:position pos:line="99" pos:column="37"/></expr_stmt> <comment type="block" pos:line="99" pos:column="38">/* we send a type-3 */</comment>
      <expr_stmt><expr><name><name pos:line="100" pos:column="7">authp<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">-&gt;<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="14">done<pos:position pos:line="100" pos:column="18"/></name></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">TRUE<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <break pos:line="102" pos:column="5">break;<pos:position pos:line="102" pos:column="11"/></break>

  <case pos:line="104" pos:column="3">case <expr><name pos:line="104" pos:column="8">NTLMSTATE_TYPE3<pos:position pos:line="104" pos:column="23"/></name></expr>:<pos:position pos:line="104" pos:column="24"/></case>
    <comment type="block" pos:line="105" pos:column="5">/* connection is already authenticated,
     * don't send a header in future requests */</comment>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">ntlm<pos:position pos:line="107" pos:column="9"/></name><operator pos:line="107" pos:column="9">-&gt;<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="11">state<pos:position pos:line="107" pos:column="16"/></name></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <name pos:line="107" pos:column="19">NTLMSTATE_LAST<pos:position pos:line="107" pos:column="33"/></name></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="108" pos:column="5">/* fall-through */</comment>
  <case pos:line="109" pos:column="3">case <expr><name pos:line="109" pos:column="8">NTLMSTATE_LAST<pos:position pos:line="109" pos:column="22"/></name></expr>:<pos:position pos:line="109" pos:column="23"/></case>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">Curl_safefree<pos:position pos:line="110" pos:column="18"/></name><argument_list pos:line="110" pos:column="18">(<argument><expr><operator pos:line="110" pos:column="19">*<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="20">allocuserpwd<pos:position pos:line="110" pos:column="32"/></name></expr></argument>)<pos:position pos:line="110" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">authp<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">done<pos:position pos:line="111" pos:column="16"/></name></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">TRUE<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
    <break pos:line="112" pos:column="5">break;<pos:position pos:line="112" pos:column="11"/></break>
  }<pos:position pos:line="113" pos:column="4"/></block></switch>

  <return pos:line="115" pos:column="3">return <expr><name pos:line="115" pos:column="10">CURLE_OK<pos:position pos:line="115" pos:column="18"/></name></expr>;<pos:position pos:line="115" pos:column="19"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

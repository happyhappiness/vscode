<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2436_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">set_ciphers<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">gsk_handle<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">h<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">unsigned<pos:position pos:line="2" pos:column="63"/></name> <name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">protoflags<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">cipherlist<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">SSL_CONN_CONFIG<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">cipher_list<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">clp<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">gskit_cipher<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">ctp<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">l<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">bool<pos:position pos:line="10" pos:column="7"/></name></type> <name pos:line="10" pos:column="8">unsupported<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">CURLcode<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <struct pos:line="12" pos:column="3">struct <block pos:line="12" pos:column="10">{<public type="default" pos:line="12" pos:column="11">
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">buf<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">ptr<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
  <pos:position pos:line="15" pos:column="3"/></public>}<pos:position pos:line="15" pos:column="4"/></block> <decl><name><name pos:line="15" pos:column="5">ciphers<pos:position pos:line="15" pos:column="12"/></name><index pos:line="15" pos:column="12">[<expr><name pos:line="15" pos:column="13">CURL_GSKPROTO_LAST<pos:position pos:line="15" pos:column="31"/></name></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></decl>;<pos:position pos:line="15" pos:column="33"/></struct>

  <comment type="block" pos:line="17" pos:column="3">/* Compile cipher list into GSKit-compatible cipher lists. */</comment>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">cipherlist<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_OK<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return></block></then></if>
  <while pos:line="21" pos:column="3">while<condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">is_separator<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">cipherlist<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="35"/></condition>     <comment type="block" pos:line="21" pos:column="40">/* Skip initial separators. */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">cipherlist<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">++<pos:position pos:line="22" pos:column="17"/></operator></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt></block></while>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">cipherlist<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">CURLE_OK<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* We allocate GSKit buffers of the same size as the input string: since
     GSKit tokens are always shorter than their cipher names, allocated buffers
     will always be large enough to accommodate the result. */</comment>
  <expr_stmt><expr><name pos:line="29" pos:column="3">l<pos:position pos:line="29" pos:column="4"/></name> <operator pos:line="29" pos:column="5">=<pos:position pos:line="29" pos:column="6"/></operator> <call><name pos:line="29" pos:column="7">strlen<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">cipherlist<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call> <operator pos:line="29" pos:column="26">+<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">memset<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">char<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">ciphers<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="31">sizeof <name pos:line="30" pos:column="38">ciphers<pos:position pos:line="30" pos:column="45"/></name></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
  <for pos:line="31" pos:column="3">for<control pos:line="31" pos:column="6">(<init><expr><name pos:line="31" pos:column="7">i<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal></expr>;<pos:position pos:line="31" pos:column="13"/></init> <condition><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">&lt;<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="18">CURL_GSKPROTO_LAST<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></condition> <incr><expr><name pos:line="31" pos:column="38">i<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">++<pos:position pos:line="31" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="42"/></control> <block pos:line="31" pos:column="43">{
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">ciphers<pos:position pos:line="32" pos:column="12"/></name><index pos:line="32" pos:column="12">[<expr><name pos:line="32" pos:column="13">i<pos:position pos:line="32" pos:column="14"/></name></expr>]<pos:position pos:line="32" pos:column="15"/></index></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">buf<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">malloc<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">l<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><operator pos:line="33" pos:column="8">!<pos:position pos:line="33" pos:column="9"/></operator><name><name pos:line="33" pos:column="9">ciphers<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><name pos:line="33" pos:column="17">i<pos:position pos:line="33" pos:column="18"/></name></expr>]<pos:position pos:line="33" pos:column="19"/></index></name><operator pos:line="33" pos:column="19">.<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="20">buf<pos:position pos:line="33" pos:column="23"/></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
      <while pos:line="34" pos:column="7">while<condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">i<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">--<pos:position pos:line="34" pos:column="16"/></operator></expr>)<pos:position pos:line="34" pos:column="17"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name><name pos:line="35" pos:column="14">ciphers<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><name pos:line="35" pos:column="22">i<pos:position pos:line="35" pos:column="23"/></name></expr>]<pos:position pos:line="35" pos:column="24"/></index></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">buf<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt></block></while>
      <return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">ciphers<pos:position pos:line="38" pos:column="12"/></name><index pos:line="38" pos:column="12">[<expr><name pos:line="38" pos:column="13">i<pos:position pos:line="38" pos:column="14"/></name></expr>]<pos:position pos:line="38" pos:column="15"/></index></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">ptr<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name><name pos:line="38" pos:column="22">ciphers<pos:position pos:line="38" pos:column="29"/></name><index pos:line="38" pos:column="29">[<expr><name pos:line="38" pos:column="30">i<pos:position pos:line="38" pos:column="31"/></name></expr>]<pos:position pos:line="38" pos:column="32"/></index></name><operator pos:line="38" pos:column="32">.<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">buf<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name><name pos:line="39" pos:column="6">ciphers<pos:position pos:line="39" pos:column="13"/></name><index pos:line="39" pos:column="13">[<expr><name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name></expr>]<pos:position pos:line="39" pos:column="16"/></index></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">ptr<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="char" pos:line="39" pos:column="23">'\0'<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <comment type="block" pos:line="42" pos:column="3">/* Process each cipher in input string. */</comment>
  <expr_stmt><expr><name pos:line="43" pos:column="3">unsupported<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">FALSE<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="44" pos:column="3">result<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <name pos:line="44" pos:column="12">CURLE_OK<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
  <for pos:line="45" pos:column="3">for<control pos:line="45" pos:column="6">(<init pos:line="45" pos:column="7">;<pos:position pos:line="45" pos:column="8"/></init><condition pos:line="45" pos:column="8">;<pos:position pos:line="45" pos:column="9"/></condition><incr/>)<pos:position pos:line="45" pos:column="10"/></control> <block pos:line="45" pos:column="11">{
    <for pos:line="46" pos:column="5">for<control pos:line="46" pos:column="8">(<init><expr><name pos:line="46" pos:column="9">clp<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">cipherlist<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></init> <condition><expr><operator pos:line="46" pos:column="27">*<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="28">cipherlist<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">&amp;&amp;<pos:position pos:line="46" pos:column="49"/></operator> <operator pos:line="46" pos:column="42">!<pos:position pos:line="46" pos:column="43"/></operator><call><name pos:line="46" pos:column="43">is_separator<pos:position pos:line="46" pos:column="55"/></name><argument_list pos:line="46" pos:column="55">(<argument><expr><operator pos:line="46" pos:column="56">*<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="57">cipherlist<pos:position pos:line="46" pos:column="67"/></name></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></condition><incr/>)<pos:position pos:line="46" pos:column="70"/></control>
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">cipherlist<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">++<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt></block></for>
    <expr_stmt><expr><name pos:line="48" pos:column="5">l<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">=<pos:position pos:line="48" pos:column="8"/></operator> <name pos:line="48" pos:column="9">cipherlist<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">-<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">clp<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><operator pos:line="49" pos:column="8">!<pos:position pos:line="49" pos:column="9"/></operator><name pos:line="49" pos:column="9">l<pos:position pos:line="49" pos:column="10"/></name></expr>)<pos:position pos:line="49" pos:column="11"/></condition><then pos:line="49" pos:column="11">
      <block type="pseudo"><break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break></block></then></if>
    <comment type="block" pos:line="51" pos:column="5">/* Search the cipher in our table. */</comment>
    <for pos:line="52" pos:column="5">for<control pos:line="52" pos:column="8">(<init><expr><name pos:line="52" pos:column="9">ctp<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">ciphertable<pos:position pos:line="52" pos:column="26"/></name></expr>;<pos:position pos:line="52" pos:column="27"/></init> <condition><expr><name><name pos:line="52" pos:column="28">ctp<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">-&gt;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="33">name<pos:position pos:line="52" pos:column="37"/></name></name></expr>;<pos:position pos:line="52" pos:column="38"/></condition> <incr><expr><name pos:line="52" pos:column="39">ctp<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">++<pos:position pos:line="52" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="45"/></control>
      <block type="pseudo"><if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><call><name pos:line="53" pos:column="10">strncasecompare<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name><name pos:line="53" pos:column="26">ctp<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">name<pos:position pos:line="53" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="37">clp<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">l<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call> <operator pos:line="53" pos:column="45">&amp;&amp;<pos:position pos:line="53" pos:column="55"/></operator> <operator pos:line="53" pos:column="48">!<pos:position pos:line="53" pos:column="49"/></operator><name><name pos:line="53" pos:column="49">ctp<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">name<pos:position pos:line="53" pos:column="58"/></name><index pos:line="53" pos:column="58">[<expr><name pos:line="53" pos:column="59">l<pos:position pos:line="53" pos:column="60"/></name></expr>]<pos:position pos:line="53" pos:column="61"/></index></name></expr>)<pos:position pos:line="53" pos:column="62"/></condition><then pos:line="53" pos:column="62">
        <block type="pseudo"><break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break></block></then></if></block></for>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name><name pos:line="55" pos:column="9">ctp<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">name<pos:position pos:line="55" pos:column="18"/></name></name></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19"> <block pos:line="55" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">failf<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">data<pos:position pos:line="56" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="19">"Unknown cipher %.*s"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">l<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">clp<pos:position pos:line="56" pos:column="48"/></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">result<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name pos:line="57" pos:column="16">CURLE_SSL_CIPHER<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then>
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
      <expr_stmt><expr><name pos:line="60" pos:column="7">unsupported<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">|=<pos:position pos:line="60" pos:column="21"/></operator> <operator pos:line="60" pos:column="22">!<pos:position pos:line="60" pos:column="23"/></operator><operator pos:line="60" pos:column="23">(<pos:position pos:line="60" pos:column="24"/></operator><name><name pos:line="60" pos:column="24">ctp<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">versions<pos:position pos:line="60" pos:column="37"/></name></name> <operator pos:line="60" pos:column="38">&amp;<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="40">(<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="41">CURL_GSKPROTO_SSLV2_MASK<pos:position pos:line="60" pos:column="65"/></name> <operator pos:line="60" pos:column="66">|<pos:position pos:line="60" pos:column="67"/></operator>
                        <name pos:line="61" pos:column="25">CURL_GSKPROTO_SSLV3_MASK<pos:position pos:line="61" pos:column="49"/></name> <operator pos:line="61" pos:column="50">|<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="52">CURL_GSKPROTO_TLSV10_MASK<pos:position pos:line="61" pos:column="77"/></name><operator pos:line="61" pos:column="77">)<pos:position pos:line="61" pos:column="78"/></operator><operator pos:line="61" pos:column="78">)<pos:position pos:line="61" pos:column="79"/></operator></expr>;<pos:position pos:line="61" pos:column="80"/></expr_stmt>
      <for pos:line="62" pos:column="7">for<control pos:line="62" pos:column="10">(<init><expr><name pos:line="62" pos:column="11">i<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <literal type="number" pos:line="62" pos:column="15">0<pos:position pos:line="62" pos:column="16"/></literal></expr>;<pos:position pos:line="62" pos:column="17"/></init> <condition><expr><name pos:line="62" pos:column="18">i<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">&lt;<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="22">CURL_GSKPROTO_LAST<pos:position pos:line="62" pos:column="40"/></name></expr>;<pos:position pos:line="62" pos:column="41"/></condition> <incr><expr><name pos:line="62" pos:column="42">i<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">++<pos:position pos:line="62" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="46"/></control> <block pos:line="62" pos:column="47">{
        <if pos:line="63" pos:column="9">if<condition pos:line="63" pos:column="11">(<expr><name><name pos:line="63" pos:column="12">ctp<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">versions<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">&amp;<pos:position pos:line="63" pos:column="31"/></operator> <operator pos:line="63" pos:column="28">(<pos:position pos:line="63" pos:column="29"/></operator><literal type="number" pos:line="63" pos:column="29">1<pos:position pos:line="63" pos:column="30"/></literal> <operator pos:line="63" pos:column="31">&lt;&lt;<pos:position pos:line="63" pos:column="39"/></operator> <name pos:line="63" pos:column="34">i<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">)<pos:position pos:line="63" pos:column="36"/></operator></expr>)<pos:position pos:line="63" pos:column="37"/></condition><then pos:line="63" pos:column="37"> <block pos:line="63" pos:column="38">{
          <expr_stmt><expr><call><name pos:line="64" pos:column="11">strcpy<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name><name pos:line="64" pos:column="18">ciphers<pos:position pos:line="64" pos:column="25"/></name><index pos:line="64" pos:column="25">[<expr><name pos:line="64" pos:column="26">i<pos:position pos:line="64" pos:column="27"/></name></expr>]<pos:position pos:line="64" pos:column="28"/></index></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">ptr<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="34">ctp<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">gsktoken<pos:position pos:line="64" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="65" pos:column="11">ciphers<pos:position pos:line="65" pos:column="18"/></name><index pos:line="65" pos:column="18">[<expr><name pos:line="65" pos:column="19">i<pos:position pos:line="65" pos:column="20"/></name></expr>]<pos:position pos:line="65" pos:column="21"/></index></name><operator pos:line="65" pos:column="21">.<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">ptr<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">+=<pos:position pos:line="65" pos:column="28"/></operator> <call><name pos:line="65" pos:column="29">strlen<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name><name pos:line="65" pos:column="36">ctp<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">-&gt;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="41">gsktoken<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
      }<pos:position pos:line="67" pos:column="8"/></block></for>
    }<pos:position pos:line="68" pos:column="6"/></block></else></if>

   <comment type="block" pos:line="70" pos:column="4">/* Advance to next cipher name or end of string. */</comment>
    <while pos:line="71" pos:column="5">while<condition pos:line="71" pos:column="10">(<expr><call><name pos:line="71" pos:column="11">is_separator<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><operator pos:line="71" pos:column="24">*<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="25">cipherlist<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="37"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">cipherlist<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">++<pos:position pos:line="72" pos:column="19"/></operator></expr>;<pos:position pos:line="72" pos:column="20"/></expr_stmt></block></while>
  }<pos:position pos:line="73" pos:column="4"/></block></for>

  <comment type="block" pos:line="75" pos:column="3">/* Disable protocols with empty cipher lists. */</comment>
  <for pos:line="76" pos:column="3">for<control pos:line="76" pos:column="6">(<init><expr><name pos:line="76" pos:column="7">i<pos:position pos:line="76" pos:column="8"/></name> <operator pos:line="76" pos:column="9">=<pos:position pos:line="76" pos:column="10"/></operator> <literal type="number" pos:line="76" pos:column="11">0<pos:position pos:line="76" pos:column="12"/></literal></expr>;<pos:position pos:line="76" pos:column="13"/></init> <condition><expr><name pos:line="76" pos:column="14">i<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">&lt;<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="18">CURL_GSKPROTO_LAST<pos:position pos:line="76" pos:column="36"/></name></expr>;<pos:position pos:line="76" pos:column="37"/></condition> <incr><expr><name pos:line="76" pos:column="38">i<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">++<pos:position pos:line="76" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="42"/></control> <block pos:line="76" pos:column="43">{
    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">(<expr><operator pos:line="77" pos:column="8">!<pos:position pos:line="77" pos:column="9"/></operator><operator pos:line="77" pos:column="9">(<pos:position pos:line="77" pos:column="10"/></operator><operator pos:line="77" pos:column="10">*<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">protoflags<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">&amp;<pos:position pos:line="77" pos:column="27"/></operator> <operator pos:line="77" pos:column="24">(<pos:position pos:line="77" pos:column="25"/></operator><literal type="number" pos:line="77" pos:column="25">1<pos:position pos:line="77" pos:column="26"/></literal> <operator pos:line="77" pos:column="27">&lt;&lt;<pos:position pos:line="77" pos:column="35"/></operator> <name pos:line="77" pos:column="30">i<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">)<pos:position pos:line="77" pos:column="32"/></operator><operator pos:line="77" pos:column="32">)<pos:position pos:line="77" pos:column="33"/></operator> <operator pos:line="77" pos:column="34">||<pos:position pos:line="77" pos:column="36"/></operator> <operator pos:line="77" pos:column="37">!<pos:position pos:line="77" pos:column="38"/></operator><name><name pos:line="77" pos:column="38">ciphers<pos:position pos:line="77" pos:column="45"/></name><index pos:line="77" pos:column="45">[<expr><name pos:line="77" pos:column="46">i<pos:position pos:line="77" pos:column="47"/></name></expr>]<pos:position pos:line="77" pos:column="48"/></index></name><operator pos:line="77" pos:column="48">.<pos:position pos:line="77" pos:column="49"/></operator><name><name pos:line="77" pos:column="49">buf<pos:position pos:line="77" pos:column="52"/></name><index pos:line="77" pos:column="52">[<expr><literal type="number" pos:line="77" pos:column="53">0<pos:position pos:line="77" pos:column="54"/></literal></expr>]<pos:position pos:line="77" pos:column="55"/></index></name></expr>)<pos:position pos:line="77" pos:column="56"/></condition><then pos:line="77" pos:column="56"> <block pos:line="77" pos:column="57">{
      <expr_stmt><expr><operator pos:line="78" pos:column="7">*<pos:position pos:line="78" pos:column="8"/></operator><name pos:line="78" pos:column="8">protoflags<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">&amp;=<pos:position pos:line="78" pos:column="25"/></operator> <operator pos:line="78" pos:column="22">~<pos:position pos:line="78" pos:column="23"/></operator><operator pos:line="78" pos:column="23">(<pos:position pos:line="78" pos:column="24"/></operator><literal type="number" pos:line="78" pos:column="24">1<pos:position pos:line="78" pos:column="25"/></literal> <operator pos:line="78" pos:column="26">&lt;&lt;<pos:position pos:line="78" pos:column="34"/></operator> <name pos:line="78" pos:column="29">i<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">)<pos:position pos:line="78" pos:column="31"/></operator></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="79" pos:column="7">ciphers<pos:position pos:line="79" pos:column="14"/></name><index pos:line="79" pos:column="14">[<expr><name pos:line="79" pos:column="15">i<pos:position pos:line="79" pos:column="16"/></name></expr>]<pos:position pos:line="79" pos:column="17"/></index></name><operator pos:line="79" pos:column="17">.<pos:position pos:line="79" pos:column="18"/></operator><name><name pos:line="79" pos:column="18">buf<pos:position pos:line="79" pos:column="21"/></name><index pos:line="79" pos:column="21">[<expr><literal type="number" pos:line="79" pos:column="22">0<pos:position pos:line="79" pos:column="23"/></literal></expr>]<pos:position pos:line="79" pos:column="24"/></index></name> <operator pos:line="79" pos:column="25">=<pos:position pos:line="79" pos:column="26"/></operator> <literal type="char" pos:line="79" pos:column="27">'\0'<pos:position pos:line="79" pos:column="31"/></literal></expr>;<pos:position pos:line="79" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></for>

  <comment type="block" pos:line="83" pos:column="3">/* Try to set-up TLSv1.1 and TLSv2.1 ciphers. */</comment>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><operator pos:line="84" pos:column="6">*<pos:position pos:line="84" pos:column="7"/></operator><name pos:line="84" pos:column="7">protoflags<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">&amp;<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="20">CURL_GSKPROTO_TLSV11_MASK<pos:position pos:line="84" pos:column="45"/></name></expr>)<pos:position pos:line="84" pos:column="46"/></condition><then pos:line="84" pos:column="46"> <block pos:line="84" pos:column="47">{
    <expr_stmt><expr><name pos:line="85" pos:column="5">result<pos:position pos:line="85" pos:column="11"/></name> <operator pos:line="85" pos:column="12">=<pos:position pos:line="85" pos:column="13"/></operator> <call><name pos:line="85" pos:column="14">set_buffer<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">data<pos:position pos:line="85" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="31">h<pos:position pos:line="85" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="34">GSK_TLSV11_CIPHER_SPECS<pos:position pos:line="85" pos:column="57"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="86" pos:column="25">ciphers<pos:position pos:line="86" pos:column="32"/></name><index pos:line="86" pos:column="32">[<expr><name pos:line="86" pos:column="33">CURL_GSKPROTO_TLSV11<pos:position pos:line="86" pos:column="53"/></name></expr>]<pos:position pos:line="86" pos:column="54"/></index></name><operator pos:line="86" pos:column="54">.<pos:position pos:line="86" pos:column="55"/></operator><name pos:line="86" pos:column="55">buf<pos:position pos:line="86" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="60">TRUE<pos:position pos:line="86" pos:column="64"/></name></expr></argument>)<pos:position pos:line="86" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="66"/></expr_stmt>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name pos:line="87" pos:column="8">result<pos:position pos:line="87" pos:column="14"/></name> <operator pos:line="87" pos:column="15">==<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="87" pos:column="44"/></name></expr>)<pos:position pos:line="87" pos:column="45"/></condition><then pos:line="87" pos:column="45"> <block pos:line="87" pos:column="46">{
      <expr_stmt><expr><name pos:line="88" pos:column="7">result<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <name pos:line="88" pos:column="16">CURLE_OK<pos:position pos:line="88" pos:column="24"/></name></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">unsupported<pos:position pos:line="89" pos:column="21"/></name></expr>)<pos:position pos:line="89" pos:column="22"/></condition><then pos:line="89" pos:column="22"> <block pos:line="89" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">failf<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">data<pos:position pos:line="90" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="21">"TLSv1.1-only ciphers are not yet supported"<pos:position pos:line="90" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">result<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <name pos:line="91" pos:column="18">CURLE_SSL_CIPHER<pos:position pos:line="91" pos:column="34"/></name></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>
  <if pos:line="95" pos:column="3">if<condition pos:line="95" pos:column="5">(<expr><operator pos:line="95" pos:column="6">!<pos:position pos:line="95" pos:column="7"/></operator><name pos:line="95" pos:column="7">result<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">&amp;&amp;<pos:position pos:line="95" pos:column="24"/></operator> <operator pos:line="95" pos:column="17">(<pos:position pos:line="95" pos:column="18"/></operator><operator pos:line="95" pos:column="18">*<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="19">protoflags<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">&amp;<pos:position pos:line="95" pos:column="35"/></operator> <name pos:line="95" pos:column="32">CURL_GSKPROTO_TLSV12_MASK<pos:position pos:line="95" pos:column="57"/></name><operator pos:line="95" pos:column="57">)<pos:position pos:line="95" pos:column="58"/></operator></expr>)<pos:position pos:line="95" pos:column="59"/></condition><then pos:line="95" pos:column="59"> <block pos:line="95" pos:column="60">{
    <expr_stmt><expr><name pos:line="96" pos:column="5">result<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">=<pos:position pos:line="96" pos:column="13"/></operator> <call><name pos:line="96" pos:column="14">set_buffer<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">data<pos:position pos:line="96" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="31">h<pos:position pos:line="96" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="34">GSK_TLSV12_CIPHER_SPECS<pos:position pos:line="96" pos:column="57"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="97" pos:column="25">ciphers<pos:position pos:line="97" pos:column="32"/></name><index pos:line="97" pos:column="32">[<expr><name pos:line="97" pos:column="33">CURL_GSKPROTO_TLSV12<pos:position pos:line="97" pos:column="53"/></name></expr>]<pos:position pos:line="97" pos:column="54"/></index></name><operator pos:line="97" pos:column="54">.<pos:position pos:line="97" pos:column="55"/></operator><name pos:line="97" pos:column="55">buf<pos:position pos:line="97" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="60">TRUE<pos:position pos:line="97" pos:column="64"/></name></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="66"/></expr_stmt>
    <if pos:line="98" pos:column="5">if<condition pos:line="98" pos:column="7">(<expr><name pos:line="98" pos:column="8">result<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">==<pos:position pos:line="98" pos:column="17"/></operator> <name pos:line="98" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="98" pos:column="44"/></name></expr>)<pos:position pos:line="98" pos:column="45"/></condition><then pos:line="98" pos:column="45"> <block pos:line="98" pos:column="46">{
      <expr_stmt><expr><name pos:line="99" pos:column="7">result<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <name pos:line="99" pos:column="16">CURLE_OK<pos:position pos:line="99" pos:column="24"/></name></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><name pos:line="100" pos:column="10">unsupported<pos:position pos:line="100" pos:column="21"/></name></expr>)<pos:position pos:line="100" pos:column="22"/></condition><then pos:line="100" pos:column="22"> <block pos:line="100" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">failf<pos:position pos:line="101" pos:column="14"/></name><argument_list pos:line="101" pos:column="14">(<argument><expr><name pos:line="101" pos:column="15">data<pos:position pos:line="101" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="21">"TLSv1.2-only ciphers are not yet supported"<pos:position pos:line="101" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="102" pos:column="9">result<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <name pos:line="102" pos:column="18">CURLE_SSL_CIPHER<pos:position pos:line="102" pos:column="34"/></name></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="103" pos:column="8"/></block></then></if>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>
  }<pos:position pos:line="105" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="107" pos:column="3">/* Try to set-up TLSv1.0 ciphers. If not successful, concatenate them to
     the SSLv3 ciphers. OS/400 prior to version 7.1 will understand it. */</comment>
  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><operator pos:line="109" pos:column="6">!<pos:position pos:line="109" pos:column="7"/></operator><name pos:line="109" pos:column="7">result<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">&amp;&amp;<pos:position pos:line="109" pos:column="24"/></operator> <operator pos:line="109" pos:column="17">(<pos:position pos:line="109" pos:column="18"/></operator><operator pos:line="109" pos:column="18">*<pos:position pos:line="109" pos:column="19"/></operator><name pos:line="109" pos:column="19">protoflags<pos:position pos:line="109" pos:column="29"/></name> <operator pos:line="109" pos:column="30">&amp;<pos:position pos:line="109" pos:column="35"/></operator> <name pos:line="109" pos:column="32">CURL_GSKPROTO_TLSV10_MASK<pos:position pos:line="109" pos:column="57"/></name><operator pos:line="109" pos:column="57">)<pos:position pos:line="109" pos:column="58"/></operator></expr>)<pos:position pos:line="109" pos:column="59"/></condition><then pos:line="109" pos:column="59"> <block pos:line="109" pos:column="60">{
    <expr_stmt><expr><name pos:line="110" pos:column="5">result<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">set_buffer<pos:position pos:line="110" pos:column="24"/></name><argument_list pos:line="110" pos:column="24">(<argument><expr><name pos:line="110" pos:column="25">data<pos:position pos:line="110" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="31">h<pos:position pos:line="110" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="34">GSK_TLSV10_CIPHER_SPECS<pos:position pos:line="110" pos:column="57"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="111" pos:column="25">ciphers<pos:position pos:line="111" pos:column="32"/></name><index pos:line="111" pos:column="32">[<expr><name pos:line="111" pos:column="33">CURL_GSKPROTO_TLSV10<pos:position pos:line="111" pos:column="53"/></name></expr>]<pos:position pos:line="111" pos:column="54"/></index></name><operator pos:line="111" pos:column="54">.<pos:position pos:line="111" pos:column="55"/></operator><name pos:line="111" pos:column="55">buf<pos:position pos:line="111" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="60">TRUE<pos:position pos:line="111" pos:column="64"/></name></expr></argument>)<pos:position pos:line="111" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="66"/></expr_stmt>
    <if pos:line="112" pos:column="5">if<condition pos:line="112" pos:column="7">(<expr><name pos:line="112" pos:column="8">result<pos:position pos:line="112" pos:column="14"/></name> <operator pos:line="112" pos:column="15">==<pos:position pos:line="112" pos:column="17"/></operator> <name pos:line="112" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="112" pos:column="44"/></name></expr>)<pos:position pos:line="112" pos:column="45"/></condition><then pos:line="112" pos:column="45"> <block pos:line="112" pos:column="46">{
      <expr_stmt><expr><name pos:line="113" pos:column="7">result<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <name pos:line="113" pos:column="16">CURLE_OK<pos:position pos:line="113" pos:column="24"/></name></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">strcpy<pos:position pos:line="114" pos:column="13"/></name><argument_list pos:line="114" pos:column="13">(<argument><expr><name><name pos:line="114" pos:column="14">ciphers<pos:position pos:line="114" pos:column="21"/></name><index pos:line="114" pos:column="21">[<expr><name pos:line="114" pos:column="22">CURL_GSKPROTO_SSLV3<pos:position pos:line="114" pos:column="41"/></name></expr>]<pos:position pos:line="114" pos:column="42"/></index></name><operator pos:line="114" pos:column="42">.<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="43">ptr<pos:position pos:line="114" pos:column="46"/></name></expr></argument>,
             <argument><expr><name><name pos:line="115" pos:column="14">ciphers<pos:position pos:line="115" pos:column="21"/></name><index pos:line="115" pos:column="21">[<expr><name pos:line="115" pos:column="22">CURL_GSKPROTO_TLSV10<pos:position pos:line="115" pos:column="42"/></name></expr>]<pos:position pos:line="115" pos:column="43"/></index></name><operator pos:line="115" pos:column="43">.<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="44">ptr<pos:position pos:line="115" pos:column="47"/></name></expr></argument>)<pos:position pos:line="115" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="119" pos:column="3">/* Set-up other ciphers. */</comment>
  <if pos:line="120" pos:column="3">if<condition pos:line="120" pos:column="5">(<expr><operator pos:line="120" pos:column="6">!<pos:position pos:line="120" pos:column="7"/></operator><name pos:line="120" pos:column="7">result<pos:position pos:line="120" pos:column="13"/></name> <operator pos:line="120" pos:column="14">&amp;&amp;<pos:position pos:line="120" pos:column="24"/></operator> <operator pos:line="120" pos:column="17">(<pos:position pos:line="120" pos:column="18"/></operator><operator pos:line="120" pos:column="18">*<pos:position pos:line="120" pos:column="19"/></operator><name pos:line="120" pos:column="19">protoflags<pos:position pos:line="120" pos:column="29"/></name> <operator pos:line="120" pos:column="30">&amp;<pos:position pos:line="120" pos:column="35"/></operator> <name pos:line="120" pos:column="32">CURL_GSKPROTO_SSLV3_MASK<pos:position pos:line="120" pos:column="56"/></name><operator pos:line="120" pos:column="56">)<pos:position pos:line="120" pos:column="57"/></operator></expr>)<pos:position pos:line="120" pos:column="58"/></condition><then pos:line="120" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="5">result<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">=<pos:position pos:line="121" pos:column="13"/></operator> <call><name pos:line="121" pos:column="14">set_buffer<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><name pos:line="121" pos:column="25">data<pos:position pos:line="121" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="31">h<pos:position pos:line="121" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="34">GSK_V3_CIPHER_SPECS<pos:position pos:line="121" pos:column="53"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="122" pos:column="25">ciphers<pos:position pos:line="122" pos:column="32"/></name><index pos:line="122" pos:column="32">[<expr><name pos:line="122" pos:column="33">CURL_GSKPROTO_SSLV3<pos:position pos:line="122" pos:column="52"/></name></expr>]<pos:position pos:line="122" pos:column="53"/></index></name><operator pos:line="122" pos:column="53">.<pos:position pos:line="122" pos:column="54"/></operator><name pos:line="122" pos:column="54">buf<pos:position pos:line="122" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="59">FALSE<pos:position pos:line="122" pos:column="64"/></name></expr></argument>)<pos:position pos:line="122" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="66"/></expr_stmt></block></then></if>
  <if pos:line="123" pos:column="3">if<condition pos:line="123" pos:column="5">(<expr><operator pos:line="123" pos:column="6">!<pos:position pos:line="123" pos:column="7"/></operator><name pos:line="123" pos:column="7">result<pos:position pos:line="123" pos:column="13"/></name> <operator pos:line="123" pos:column="14">&amp;&amp;<pos:position pos:line="123" pos:column="24"/></operator> <operator pos:line="123" pos:column="17">(<pos:position pos:line="123" pos:column="18"/></operator><operator pos:line="123" pos:column="18">*<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="19">protoflags<pos:position pos:line="123" pos:column="29"/></name> <operator pos:line="123" pos:column="30">&amp;<pos:position pos:line="123" pos:column="35"/></operator> <name pos:line="123" pos:column="32">CURL_GSKPROTO_SSLV2_MASK<pos:position pos:line="123" pos:column="56"/></name><operator pos:line="123" pos:column="56">)<pos:position pos:line="123" pos:column="57"/></operator></expr>)<pos:position pos:line="123" pos:column="58"/></condition><then pos:line="123" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="5">result<pos:position pos:line="124" pos:column="11"/></name> <operator pos:line="124" pos:column="12">=<pos:position pos:line="124" pos:column="13"/></operator> <call><name pos:line="124" pos:column="14">set_buffer<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">data<pos:position pos:line="124" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="31">h<pos:position pos:line="124" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="34">GSK_V2_CIPHER_SPECS<pos:position pos:line="124" pos:column="53"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="125" pos:column="25">ciphers<pos:position pos:line="125" pos:column="32"/></name><index pos:line="125" pos:column="32">[<expr><name pos:line="125" pos:column="33">CURL_GSKPROTO_SSLV2<pos:position pos:line="125" pos:column="52"/></name></expr>]<pos:position pos:line="125" pos:column="53"/></index></name><operator pos:line="125" pos:column="53">.<pos:position pos:line="125" pos:column="54"/></operator><name pos:line="125" pos:column="54">buf<pos:position pos:line="125" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="59">FALSE<pos:position pos:line="125" pos:column="64"/></name></expr></argument>)<pos:position pos:line="125" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="66"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="127" pos:column="3">/* Clean-up. */</comment>
  <for pos:line="128" pos:column="3">for<control pos:line="128" pos:column="6">(<init><expr><name pos:line="128" pos:column="7">i<pos:position pos:line="128" pos:column="8"/></name> <operator pos:line="128" pos:column="9">=<pos:position pos:line="128" pos:column="10"/></operator> <literal type="number" pos:line="128" pos:column="11">0<pos:position pos:line="128" pos:column="12"/></literal></expr>;<pos:position pos:line="128" pos:column="13"/></init> <condition><expr><name pos:line="128" pos:column="14">i<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">&lt;<pos:position pos:line="128" pos:column="20"/></operator> <name pos:line="128" pos:column="18">CURL_GSKPROTO_LAST<pos:position pos:line="128" pos:column="36"/></name></expr>;<pos:position pos:line="128" pos:column="37"/></condition> <incr><expr><name pos:line="128" pos:column="38">i<pos:position pos:line="128" pos:column="39"/></name><operator pos:line="128" pos:column="39">++<pos:position pos:line="128" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="128" pos:column="42"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="5">free<pos:position pos:line="129" pos:column="9"/></name><argument_list pos:line="129" pos:column="9">(<argument><expr><name><name pos:line="129" pos:column="10">ciphers<pos:position pos:line="129" pos:column="17"/></name><index pos:line="129" pos:column="17">[<expr><name pos:line="129" pos:column="18">i<pos:position pos:line="129" pos:column="19"/></name></expr>]<pos:position pos:line="129" pos:column="20"/></index></name><operator pos:line="129" pos:column="20">.<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="21">buf<pos:position pos:line="129" pos:column="24"/></name></expr></argument>)<pos:position pos:line="129" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="26"/></expr_stmt></block></for>

  <return pos:line="131" pos:column="3">return <expr><name pos:line="131" pos:column="10">result<pos:position pos:line="131" pos:column="16"/></name></expr>;<pos:position pos:line="131" pos:column="17"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

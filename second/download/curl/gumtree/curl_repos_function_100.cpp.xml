<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_100.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">curl_connect<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CURL<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">curl<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">CURLconnect<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">in_connect<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">resumerange<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><literal type="number" pos:line="6" pos:column="20">12<pos:position pos:line="6" pos:column="22"/></literal></expr>]<pos:position pos:line="6" pos:column="23"/></index></name><init pos:line="6" pos:column="23">=<expr><literal type="string" pos:line="6" pos:column="24">""<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">UrlData<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">data<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">curl<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">connectdata<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">conn<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* I believe the longest possible name in a DNS is set to 255 letters, FQDN.
     Although the buffer required for storing all possible aliases and IP
     numbers is according to Stevens' Unix Network Programming 2nd editor,
     p. 304: 8192 bytes. Let's go with that! */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">hostent_buf<pos:position pos:line="14" pos:column="19"/></name><index pos:line="14" pos:column="19">[<expr><literal type="number" pos:line="14" pos:column="20">8192<pos:position pos:line="14" pos:column="24"/></literal></expr>]<pos:position pos:line="14" pos:column="25"/></index></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">data<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">||<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator><name><name pos:line="16" pos:column="16">data<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">handle<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">!=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">STRUCT_OPEN<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></return></block></then></if> <comment type="block" pos:line="17" pos:column="41">/* TBD: make error codes */</comment>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name><name pos:line="19" pos:column="7">data<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">url<pos:position pos:line="19" pos:column="16"/></name></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">conn<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator>struct <name pos:line="22" pos:column="18">connectdata<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator><call><name pos:line="22" pos:column="32">malloc<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><sizeof pos:line="22" pos:column="39">sizeof<argument_list pos:line="22" pos:column="45">(<argument><expr pos:line="22" pos:column="46">struct <name pos:line="22" pos:column="53">connectdata<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">conn<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition><then pos:line="23" pos:column="12"> <block pos:line="23" pos:column="13">{
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">in_connect<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt> <comment type="block" pos:line="24" pos:column="25">/* clear the pointer */</comment>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="27" pos:column="3">*<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">in_connect<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">conn<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">memset<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">conn<pos:position pos:line="29" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="19">sizeof<argument_list pos:line="29" pos:column="25">(<argument><expr pos:line="29" pos:column="26">struct <name pos:line="29" pos:column="33">connectdata<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">conn<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">handle<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">STRUCT_CONNECT<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">conn<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">data<pos:position pos:line="32" pos:column="13"/></name></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">data<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt> <comment type="block" pos:line="32" pos:column="22">/* remember our daddy */</comment>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">conn<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">state<pos:position pos:line="33" pos:column="14"/></name></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">CONN_INIT<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">buf<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <name><name pos:line="35" pos:column="9">data<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">buffer<pos:position pos:line="35" pos:column="21"/></name></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt> <comment type="block" pos:line="35" pos:column="23">/* this is our buffer */</comment>

<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="37" pos:column="5">0<pos:position pos:line="37" pos:column="6"/></literal></expr></cpp:if>
  signal(SIGALRM, alarmfunc);
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="41" pos:column="3">/* Parse &lt;url&gt; */</comment>
  <comment type="block" pos:line="42" pos:column="3">/* We need to parse the url, even when using the proxy, because
   * we will need the hostname and port in case we are trying
   * to SSL connect through the proxy -- and we don't know if we
   * will need to use SSL until we parse the url ...
   */</comment>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">(<pos:position pos:line="47" pos:column="7"/></operator><literal type="number" pos:line="47" pos:column="7">2<pos:position pos:line="47" pos:column="8"/></literal> <operator pos:line="47" pos:column="9">==<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">sscanf<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name><name pos:line="47" pos:column="19">data<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">url<pos:position pos:line="47" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="30">"%64[^:]://%"<pos:position pos:line="47" pos:column="43"/></literal> <name pos:line="47" pos:column="44">URL_MAX_LENGTH_TXT<pos:position pos:line="47" pos:column="62"/></name> <literal type="string" pos:line="47" pos:column="63">"[^\n]"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="48" pos:column="19">conn<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">proto<pos:position pos:line="48" pos:column="30"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="49" pos:column="19">conn<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">path<pos:position pos:line="49" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call><operator pos:line="49" pos:column="30">)<pos:position pos:line="49" pos:column="31"/></operator> <operator pos:line="49" pos:column="32">&amp;&amp;<pos:position pos:line="49" pos:column="42"/></operator> <call><name pos:line="49" pos:column="35">strequal<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name><name pos:line="49" pos:column="44">conn<pos:position pos:line="49" pos:column="48"/></name><operator pos:line="49" pos:column="48">-&gt;<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="50">proto<pos:position pos:line="49" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="57">"file"<pos:position pos:line="49" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65"> <block pos:line="49" pos:column="66">{
    <comment type="block" pos:line="50" pos:column="5">/* we deal with file://&lt;host&gt;/&lt;path&gt; differently since it
       supports no hostname other than "localhost" and "127.0.0.1",
       which is unique among the protocols specified in RFC 1738 */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><call><name pos:line="53" pos:column="9">strnequal<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name><name pos:line="53" pos:column="19">conn<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">path<pos:position pos:line="53" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">"localhost/"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="45">10<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call> <operator pos:line="53" pos:column="49">||<pos:position pos:line="53" pos:column="51"/></operator>
        <call><name pos:line="54" pos:column="9">strnequal<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><name><name pos:line="54" pos:column="19">conn<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">path<pos:position pos:line="54" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="31">"127.0.0.1/"<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="45">10<pos:position pos:line="54" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49">
      <comment type="block" pos:line="55" pos:column="7">/* ... since coincidentally both host strings are of equal length
         otherwise, &lt;host&gt;/ is quietly ommitted */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">strcpy<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name><name pos:line="57" pos:column="14">conn<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">path<pos:position pos:line="57" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="26">&amp;<pos:position pos:line="57" pos:column="31"/></operator><name><name pos:line="57" pos:column="27">conn<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">-&gt;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="33">path<pos:position pos:line="57" pos:column="37"/></name><index pos:line="57" pos:column="37">[<expr><literal type="number" pos:line="57" pos:column="38">10<pos:position pos:line="57" pos:column="40"/></literal></expr>]<pos:position pos:line="57" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">strcpy<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">(<argument><expr><name><name pos:line="59" pos:column="12">conn<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">proto<pos:position pos:line="59" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="25">"file"<pos:position pos:line="59" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then>
  <else pos:line="61" pos:column="3">else <block pos:line="61" pos:column="8">{
    <comment type="block" pos:line="62" pos:column="5">/* Set default host and default path */</comment>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">strcpy<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><name><name pos:line="63" pos:column="12">conn<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">gname<pos:position pos:line="63" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"curl.haxx.se"<pos:position pos:line="63" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">strcpy<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><name><name pos:line="64" pos:column="12">conn<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">path<pos:position pos:line="64" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="24">"/"<pos:position pos:line="64" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><literal type="number" pos:line="66" pos:column="9">2<pos:position pos:line="66" pos:column="10"/></literal> <operator pos:line="66" pos:column="11">&gt;<pos:position pos:line="66" pos:column="15"/></operator> <call><name pos:line="66" pos:column="13">sscanf<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name><name pos:line="66" pos:column="20">data<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">url<pos:position pos:line="66" pos:column="29"/></name></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="67" pos:column="20">"%64[^\n:]://%256[^\n/]%"<pos:position pos:line="67" pos:column="45"/></literal> <name pos:line="67" pos:column="46">URL_MAX_LENGTH_TXT<pos:position pos:line="67" pos:column="64"/></name> <literal type="string" pos:line="67" pos:column="65">"[^\n]"<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="68" pos:column="20">conn<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">proto<pos:position pos:line="68" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="33">conn<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">gname<pos:position pos:line="68" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="46">conn<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">-&gt;<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="52">path<pos:position pos:line="68" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="58"/></condition><then pos:line="68" pos:column="58"> <block pos:line="68" pos:column="59">{
      
      <comment type="block" pos:line="70" pos:column="7">/* badly formatted, let's try the browser-style _without_ 'http://' */</comment>
      <if pos:line="71" pos:column="7">if<condition pos:line="71" pos:column="9">(<expr><operator pos:line="71" pos:column="10">(<pos:position pos:line="71" pos:column="11"/></operator><literal type="number" pos:line="71" pos:column="11">1<pos:position pos:line="71" pos:column="12"/></literal> <operator pos:line="71" pos:column="13">&gt;<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="15">sscanf<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name><name pos:line="71" pos:column="22">data<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">-&gt;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="28">url<pos:position pos:line="71" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="33">"%256[^\n/]%"<pos:position pos:line="71" pos:column="46"/></literal> <name pos:line="71" pos:column="47">URL_MAX_LENGTH_TXT<pos:position pos:line="71" pos:column="65"/></name> <literal type="string" pos:line="71" pos:column="66">"[^\n]"<pos:position pos:line="71" pos:column="73"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="72" pos:column="22">conn<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">gname<pos:position pos:line="72" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="35">conn<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">path<pos:position pos:line="72" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call><operator pos:line="72" pos:column="46">)<pos:position pos:line="72" pos:column="47"/></operator></expr> )<pos:position pos:line="72" pos:column="49"/></condition><then pos:line="72" pos:column="49"> <block pos:line="72" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">failf<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">data<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="21">"&lt;url&gt; malformed"<pos:position pos:line="73" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt>
        <return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></return>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>
      <if pos:line="76" pos:column="7">if<condition pos:line="76" pos:column="9">(<expr><call><name pos:line="76" pos:column="10">strnequal<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><name><name pos:line="76" pos:column="20">conn<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">gname<pos:position pos:line="76" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="33">"FTP"<pos:position pos:line="76" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="40">3<pos:position pos:line="76" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="43"/></condition><then pos:line="76" pos:column="43"> <block pos:line="76" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">strcpy<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><name><name pos:line="77" pos:column="16">conn<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">-&gt;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="22">proto<pos:position pos:line="77" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="29">"ftp"<pos:position pos:line="77" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="78" pos:column="8"/></block></then>
      <elseif pos:line="79" pos:column="7">else <if pos:line="79" pos:column="12">if<condition pos:line="79" pos:column="14">(<expr><call><name pos:line="79" pos:column="15">strnequal<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name><name pos:line="79" pos:column="25">conn<pos:position pos:line="79" pos:column="29"/></name><operator pos:line="79" pos:column="29">-&gt;<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="31">gname<pos:position pos:line="79" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="38">"GOPHER"<pos:position pos:line="79" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="48">6<pos:position pos:line="79" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="51"/></condition><then pos:line="79" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="9">strcpy<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name><name pos:line="80" pos:column="16">conn<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">-&gt;<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="22">proto<pos:position pos:line="80" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="29">"gopher"<pos:position pos:line="80" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifdef<pos:position pos:line="81" pos:column="7"/></cpp:directive> <name pos:line="81" pos:column="8">USE_SSLEAY<pos:position pos:line="81" pos:column="18"/></name></cpp:ifdef>
      <elseif pos:line="82" pos:column="7">else <if pos:line="82" pos:column="12">if<condition pos:line="82" pos:column="14">(<expr><call><name pos:line="82" pos:column="15">strnequal<pos:position pos:line="82" pos:column="24"/></name><argument_list pos:line="82" pos:column="24">(<argument><expr><name><name pos:line="82" pos:column="25">conn<pos:position pos:line="82" pos:column="29"/></name><operator pos:line="82" pos:column="29">-&gt;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="31">gname<pos:position pos:line="82" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="38">"HTTPS"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="47">5<pos:position pos:line="82" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="50"/></condition><then pos:line="82" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="9">strcpy<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name><name pos:line="83" pos:column="16">conn<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">proto<pos:position pos:line="83" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="29">"https"<pos:position pos:line="83" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="84" pos:column="8">/* USE_SSLEAY */</comment>
      <elseif pos:line="85" pos:column="7">else <if pos:line="85" pos:column="12">if<condition pos:line="85" pos:column="14">(<expr><call><name pos:line="85" pos:column="15">strnequal<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name><name pos:line="85" pos:column="25">conn<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-&gt;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="31">gname<pos:position pos:line="85" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="38">"TELNET"<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="48">6<pos:position pos:line="85" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="51"/></condition><then pos:line="85" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="9">strcpy<pos:position pos:line="86" pos:column="15"/></name><argument_list pos:line="86" pos:column="15">(<argument><expr><name><name pos:line="86" pos:column="16">conn<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">proto<pos:position pos:line="86" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="29">"telnet"<pos:position pos:line="86" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="87" pos:column="7">else <if pos:line="87" pos:column="12">if <condition pos:line="87" pos:column="15">(<expr><call><name pos:line="87" pos:column="16">strnequal<pos:position pos:line="87" pos:column="25"/></name><argument_list pos:line="87" pos:column="25">(<argument><expr><name><name pos:line="87" pos:column="26">conn<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">-&gt;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="32">gname<pos:position pos:line="87" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="39">"DICT"<pos:position pos:line="87" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="47">sizeof<argument_list pos:line="87" pos:column="53">(<argument><expr><literal type="string" pos:line="87" pos:column="54">"DICT"<pos:position pos:line="87" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="61"/></argument_list></sizeof><operator pos:line="87" pos:column="61">-<pos:position pos:line="87" pos:column="62"/></operator><literal type="number" pos:line="87" pos:column="62">1<pos:position pos:line="87" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="65"/></condition><then pos:line="87" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="9">strcpy<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name><name pos:line="88" pos:column="16">conn<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">proto<pos:position pos:line="88" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="29">"DICT"<pos:position pos:line="88" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="89" pos:column="7">else <if pos:line="89" pos:column="12">if <condition pos:line="89" pos:column="15">(<expr><call><name pos:line="89" pos:column="16">strnequal<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name><name pos:line="89" pos:column="26">conn<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">gname<pos:position pos:line="89" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="39">"LDAP"<pos:position pos:line="89" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="47">sizeof<argument_list pos:line="89" pos:column="53">(<argument><expr><literal type="string" pos:line="89" pos:column="54">"LDAP"<pos:position pos:line="89" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="61"/></argument_list></sizeof><operator pos:line="89" pos:column="61">-<pos:position pos:line="89" pos:column="62"/></operator><literal type="number" pos:line="89" pos:column="62">1<pos:position pos:line="89" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="65"/></condition><then pos:line="89" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="9">strcpy<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><name><name pos:line="90" pos:column="16">conn<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">proto<pos:position pos:line="90" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="29">"LDAP"<pos:position pos:line="90" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt></block></then></if></elseif>
      <else pos:line="91" pos:column="7">else <block pos:line="91" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">strcpy<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><name><name pos:line="92" pos:column="16">conn<pos:position pos:line="92" pos:column="20"/></name><operator pos:line="92" pos:column="20">-&gt;<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="22">proto<pos:position pos:line="92" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="29">"http"<pos:position pos:line="92" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="95" pos:column="7">conn<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">protocol<pos:position pos:line="95" pos:column="21"/></name></name> <operator pos:line="95" pos:column="22">|=<pos:position pos:line="95" pos:column="24"/></operator> <name pos:line="95" pos:column="25">PROT_MISSING<pos:position pos:line="95" pos:column="37"/></name></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt> <comment type="block" pos:line="95" pos:column="39">/* not given in URL */</comment>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>
  }<pos:position pos:line="97" pos:column="4"/></block></else></if>


  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">(<expr><name><name pos:line="100" pos:column="6">data<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">-&gt;<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="12">bits<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">.<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="17">user_passwd<pos:position pos:line="100" pos:column="28"/></name></name> <operator pos:line="100" pos:column="29">&amp;&amp;<pos:position pos:line="100" pos:column="39"/></operator> <operator pos:line="100" pos:column="32">!<pos:position pos:line="100" pos:column="33"/></operator><name><name pos:line="100" pos:column="33">data<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">-&gt;<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="39">bits<pos:position pos:line="100" pos:column="43"/></name><operator pos:line="100" pos:column="43">.<pos:position pos:line="100" pos:column="44"/></operator><name pos:line="100" pos:column="44">use_netrc<pos:position pos:line="100" pos:column="53"/></name></name></expr>)<pos:position pos:line="100" pos:column="54"/></condition><then pos:line="100" pos:column="54"> <block pos:line="100" pos:column="55">{
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">data<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">-&gt;<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="11">user<pos:position pos:line="101" pos:column="15"/></name><index pos:line="101" pos:column="15">[<expr><literal type="number" pos:line="101" pos:column="16">0<pos:position pos:line="101" pos:column="17"/></literal></expr>]<pos:position pos:line="101" pos:column="18"/></index></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator><literal type="number" pos:line="101" pos:column="20">0<pos:position pos:line="101" pos:column="21"/></literal></expr>;<pos:position pos:line="101" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="102" pos:column="5">data<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">passwd<pos:position pos:line="102" pos:column="17"/></name><index pos:line="102" pos:column="17">[<expr><literal type="number" pos:line="102" pos:column="18">0<pos:position pos:line="102" pos:column="19"/></literal></expr>]<pos:position pos:line="102" pos:column="20"/></index></name><operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator><literal type="number" pos:line="102" pos:column="21">0<pos:position pos:line="102" pos:column="22"/></literal></expr>;<pos:position pos:line="102" pos:column="23"/></expr_stmt>

    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><operator pos:line="104" pos:column="8">*<pos:position pos:line="104" pos:column="9"/></operator><name><name pos:line="104" pos:column="9">data<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">userpwd<pos:position pos:line="104" pos:column="22"/></name></name> <operator pos:line="104" pos:column="23">!=<pos:position pos:line="104" pos:column="25"/></operator> <literal type="char" pos:line="104" pos:column="26">':'<pos:position pos:line="104" pos:column="29"/></literal></expr>)<pos:position pos:line="104" pos:column="30"/></condition><then pos:line="104" pos:column="30"> <block pos:line="104" pos:column="31">{
      <comment type="block" pos:line="105" pos:column="7">/* the name is given, get user+password */</comment>
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">sscanf<pos:position pos:line="106" pos:column="13"/></name><argument_list pos:line="106" pos:column="13">(<argument><expr><name><name pos:line="106" pos:column="14">data<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">userpwd<pos:position pos:line="106" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="29">"%127[^:]:%127[^@]"<pos:position pos:line="106" pos:column="48"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="107" pos:column="14">data<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">-&gt;<pos:position pos:line="107" pos:column="23"/></operator><name pos:line="107" pos:column="20">user<pos:position pos:line="107" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="26">data<pos:position pos:line="107" pos:column="30"/></name><operator pos:line="107" pos:column="30">-&gt;<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="32">passwd<pos:position pos:line="107" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then>
    <else pos:line="109" pos:column="5">else
      <comment type="block" pos:line="110" pos:column="7">/* no name given, get the password only */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="7">sscanf<pos:position pos:line="111" pos:column="13"/></name><argument_list pos:line="111" pos:column="13">(<argument><expr><name><name pos:line="111" pos:column="14">data<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">-&gt;<pos:position pos:line="111" pos:column="23"/></operator><name pos:line="111" pos:column="20">userpwd<pos:position pos:line="111" pos:column="27"/></name></name><operator pos:line="111" pos:column="27">+<pos:position pos:line="111" pos:column="28"/></operator><literal type="number" pos:line="111" pos:column="28">1<pos:position pos:line="111" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="31">"%127[^@]"<pos:position pos:line="111" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="43">data<pos:position pos:line="111" pos:column="47"/></name><operator pos:line="111" pos:column="47">-&gt;<pos:position pos:line="111" pos:column="52"/></operator><name pos:line="111" pos:column="49">passwd<pos:position pos:line="111" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="57"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="113" pos:column="5">/* check for password, if no ask for one */</comment>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">( <expr><operator pos:line="114" pos:column="9">!<pos:position pos:line="114" pos:column="10"/></operator><name><name pos:line="114" pos:column="10">data<pos:position pos:line="114" pos:column="14"/></name><operator pos:line="114" pos:column="14">-&gt;<pos:position pos:line="114" pos:column="19"/></operator><name pos:line="114" pos:column="16">passwd<pos:position pos:line="114" pos:column="22"/></name><index pos:line="114" pos:column="22">[<expr><literal type="number" pos:line="114" pos:column="23">0<pos:position pos:line="114" pos:column="24"/></literal></expr>]<pos:position pos:line="114" pos:column="25"/></index></name></expr> )<pos:position pos:line="114" pos:column="27"/></condition><then pos:line="114" pos:column="27"> <block pos:line="114" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">strncpy<pos:position pos:line="115" pos:column="14"/></name><argument_list pos:line="115" pos:column="14">(<argument><expr><name><name pos:line="115" pos:column="15">data<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">-&gt;<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="21">passwd<pos:position pos:line="115" pos:column="27"/></name></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="29">getpass<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><literal type="string" pos:line="115" pos:column="37">"password: "<pos:position pos:line="115" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="115" pos:column="52">sizeof<argument_list pos:line="115" pos:column="58">(<argument><expr><name><name pos:line="115" pos:column="59">data<pos:position pos:line="115" pos:column="63"/></name><operator pos:line="115" pos:column="63">-&gt;<pos:position pos:line="115" pos:column="68"/></operator><name pos:line="115" pos:column="65">passwd<pos:position pos:line="115" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <if pos:line="119" pos:column="3">if<condition pos:line="119" pos:column="5">(<expr><name><name pos:line="119" pos:column="6">data<pos:position pos:line="119" pos:column="10"/></name><operator pos:line="119" pos:column="10">-&gt;<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="12">bits<pos:position pos:line="119" pos:column="16"/></name><operator pos:line="119" pos:column="16">.<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="17">proxy_user_passwd<pos:position pos:line="119" pos:column="34"/></name></name></expr>)<pos:position pos:line="119" pos:column="35"/></condition><then pos:line="119" pos:column="35"> <block pos:line="119" pos:column="36">{
    <expr_stmt><expr><name><name pos:line="120" pos:column="5">data<pos:position pos:line="120" pos:column="9"/></name><operator pos:line="120" pos:column="9">-&gt;<pos:position pos:line="120" pos:column="14"/></operator><name pos:line="120" pos:column="11">proxyuser<pos:position pos:line="120" pos:column="20"/></name><index pos:line="120" pos:column="20">[<expr><literal type="number" pos:line="120" pos:column="21">0<pos:position pos:line="120" pos:column="22"/></literal></expr>]<pos:position pos:line="120" pos:column="23"/></index></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator><literal type="number" pos:line="120" pos:column="25">0<pos:position pos:line="120" pos:column="26"/></literal></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="121" pos:column="5">data<pos:position pos:line="121" pos:column="9"/></name><operator pos:line="121" pos:column="9">-&gt;<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="11">proxypasswd<pos:position pos:line="121" pos:column="22"/></name><index pos:line="121" pos:column="22">[<expr><literal type="number" pos:line="121" pos:column="23">0<pos:position pos:line="121" pos:column="24"/></literal></expr>]<pos:position pos:line="121" pos:column="25"/></index></name><operator pos:line="121" pos:column="25">=<pos:position pos:line="121" pos:column="26"/></operator><literal type="number" pos:line="121" pos:column="26">0<pos:position pos:line="121" pos:column="27"/></literal></expr>;<pos:position pos:line="121" pos:column="28"/></expr_stmt>

    <if pos:line="123" pos:column="5">if<condition pos:line="123" pos:column="7">(<expr><operator pos:line="123" pos:column="8">*<pos:position pos:line="123" pos:column="9"/></operator><name><name pos:line="123" pos:column="9">data<pos:position pos:line="123" pos:column="13"/></name><operator pos:line="123" pos:column="13">-&gt;<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="15">proxyuserpwd<pos:position pos:line="123" pos:column="27"/></name></name> <operator pos:line="123" pos:column="28">!=<pos:position pos:line="123" pos:column="30"/></operator> <literal type="char" pos:line="123" pos:column="31">':'<pos:position pos:line="123" pos:column="34"/></literal></expr>)<pos:position pos:line="123" pos:column="35"/></condition><then pos:line="123" pos:column="35"> <block pos:line="123" pos:column="36">{
      <comment type="block" pos:line="124" pos:column="7">/* the name is given, get user+password */</comment>
      <expr_stmt><expr><call><name pos:line="125" pos:column="7">sscanf<pos:position pos:line="125" pos:column="13"/></name><argument_list pos:line="125" pos:column="13">(<argument><expr><name><name pos:line="125" pos:column="14">data<pos:position pos:line="125" pos:column="18"/></name><operator pos:line="125" pos:column="18">-&gt;<pos:position pos:line="125" pos:column="23"/></operator><name pos:line="125" pos:column="20">proxyuserpwd<pos:position pos:line="125" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="34">"%127[^:]:%127[^@]"<pos:position pos:line="125" pos:column="53"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="126" pos:column="14">data<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">proxyuser<pos:position pos:line="126" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="31">data<pos:position pos:line="126" pos:column="35"/></name><operator pos:line="126" pos:column="35">-&gt;<pos:position pos:line="126" pos:column="40"/></operator><name pos:line="126" pos:column="37">proxypasswd<pos:position pos:line="126" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="127" pos:column="8"/></block></then>
    <else pos:line="128" pos:column="5">else
      <comment type="block" pos:line="129" pos:column="7">/* no name given, get the password only */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="7">sscanf<pos:position pos:line="130" pos:column="13"/></name><argument_list pos:line="130" pos:column="13">(<argument><expr><name><name pos:line="130" pos:column="14">data<pos:position pos:line="130" pos:column="18"/></name><operator pos:line="130" pos:column="18">-&gt;<pos:position pos:line="130" pos:column="23"/></operator><name pos:line="130" pos:column="20">proxyuserpwd<pos:position pos:line="130" pos:column="32"/></name></name><operator pos:line="130" pos:column="32">+<pos:position pos:line="130" pos:column="33"/></operator><literal type="number" pos:line="130" pos:column="33">1<pos:position pos:line="130" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="36">"%127[^@]"<pos:position pos:line="130" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="48">data<pos:position pos:line="130" pos:column="52"/></name><operator pos:line="130" pos:column="52">-&gt;<pos:position pos:line="130" pos:column="57"/></operator><name pos:line="130" pos:column="54">proxypasswd<pos:position pos:line="130" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="67"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="132" pos:column="5">/* check for password, if no ask for one */</comment>
    <if pos:line="133" pos:column="5">if<condition pos:line="133" pos:column="7">( <expr><operator pos:line="133" pos:column="9">!<pos:position pos:line="133" pos:column="10"/></operator><name><name pos:line="133" pos:column="10">data<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">proxypasswd<pos:position pos:line="133" pos:column="27"/></name><index pos:line="133" pos:column="27">[<expr><literal type="number" pos:line="133" pos:column="28">0<pos:position pos:line="133" pos:column="29"/></literal></expr>]<pos:position pos:line="133" pos:column="30"/></index></name></expr> )<pos:position pos:line="133" pos:column="32"/></condition><then pos:line="133" pos:column="32"> <block pos:line="133" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="134" pos:column="7">strncpy<pos:position pos:line="134" pos:column="14"/></name><argument_list pos:line="134" pos:column="14">(<argument><expr><name><name pos:line="134" pos:column="15">data<pos:position pos:line="134" pos:column="19"/></name><operator pos:line="134" pos:column="19">-&gt;<pos:position pos:line="134" pos:column="24"/></operator><name pos:line="134" pos:column="21">proxypasswd<pos:position pos:line="134" pos:column="32"/></name></name></expr></argument>, <argument><expr><call><name pos:line="134" pos:column="34">getpass<pos:position pos:line="134" pos:column="41"/></name><argument_list pos:line="134" pos:column="41">(<argument><expr><literal type="string" pos:line="134" pos:column="42">"proxy password: "<pos:position pos:line="134" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="134" pos:column="63">sizeof<argument_list pos:line="134" pos:column="69">(<argument><expr><name><name pos:line="134" pos:column="70">data<pos:position pos:line="134" pos:column="74"/></name><operator pos:line="134" pos:column="74">-&gt;<pos:position pos:line="134" pos:column="79"/></operator><name pos:line="134" pos:column="76">proxypasswd<pos:position pos:line="134" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="134" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="90"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

  }<pos:position pos:line="137" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="139" pos:column="3">conn<pos:position pos:line="139" pos:column="7"/></name><operator pos:line="139" pos:column="7">-&gt;<pos:position pos:line="139" pos:column="12"/></operator><name pos:line="139" pos:column="9">name<pos:position pos:line="139" pos:column="13"/></name></name> <operator pos:line="139" pos:column="14">=<pos:position pos:line="139" pos:column="15"/></operator> <name><name pos:line="139" pos:column="16">conn<pos:position pos:line="139" pos:column="20"/></name><operator pos:line="139" pos:column="20">-&gt;<pos:position pos:line="139" pos:column="25"/></operator><name pos:line="139" pos:column="22">gname<pos:position pos:line="139" pos:column="27"/></name></name></expr>;<pos:position pos:line="139" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="140" pos:column="3">conn<pos:position pos:line="140" pos:column="7"/></name><operator pos:line="140" pos:column="7">-&gt;<pos:position pos:line="140" pos:column="12"/></operator><name pos:line="140" pos:column="9">ppath<pos:position pos:line="140" pos:column="14"/></name></name> <operator pos:line="140" pos:column="15">=<pos:position pos:line="140" pos:column="16"/></operator> <name><name pos:line="140" pos:column="17">conn<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">-&gt;<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="23">path<pos:position pos:line="140" pos:column="27"/></name></name></expr>;<pos:position pos:line="140" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="141" pos:column="3">data<pos:position pos:line="141" pos:column="7"/></name><operator pos:line="141" pos:column="7">-&gt;<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="9">hostname<pos:position pos:line="141" pos:column="17"/></name></name> <operator pos:line="141" pos:column="18">=<pos:position pos:line="141" pos:column="19"/></operator> <name><name pos:line="141" pos:column="20">conn<pos:position pos:line="141" pos:column="24"/></name><operator pos:line="141" pos:column="24">-&gt;<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="26">name<pos:position pos:line="141" pos:column="30"/></name></name></expr>;<pos:position pos:line="141" pos:column="31"/></expr_stmt>


  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><operator pos:line="144" pos:column="6">!<pos:position pos:line="144" pos:column="7"/></operator><name><name pos:line="144" pos:column="7">data<pos:position pos:line="144" pos:column="11"/></name><operator pos:line="144" pos:column="11">-&gt;<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="13">bits<pos:position pos:line="144" pos:column="17"/></name><operator pos:line="144" pos:column="17">.<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="18">httpproxy<pos:position pos:line="144" pos:column="27"/></name></name></expr>)<pos:position pos:line="144" pos:column="28"/></condition><then pos:line="144" pos:column="28"> <block pos:line="144" pos:column="29">{
    <comment type="block" pos:line="145" pos:column="5">/* If proxy was not specified, we check for default proxy environment
       variables, to enable i.e Lynx compliance:

       HTTP_PROXY http://some.server.dom:port/
       HTTPS_PROXY http://some.server.dom:port/
       FTP_PROXY http://some.server.dom:port/
       GOPHER_PROXY http://some.server.dom:port/
       NO_PROXY host.domain.dom  (a comma-separated list of hosts which should
       not be proxied, or an asterisk to override all proxy variables)
       ALL_PROXY seems to exist for the CERN www lib. Probably the first to
       check for.
 
       */</comment>
    <decl_stmt><decl><type><name pos:line="158" pos:column="5">char<pos:position pos:line="158" pos:column="9"/></name> <modifier pos:line="158" pos:column="10">*<pos:position pos:line="158" pos:column="11"/></modifier></type><name pos:line="158" pos:column="11">no_proxy<pos:position pos:line="158" pos:column="19"/></name><init pos:line="158" pos:column="19">=<expr><call><name pos:line="158" pos:column="20">GetEnv<pos:position pos:line="158" pos:column="26"/></name><argument_list pos:line="158" pos:column="26">(<argument><expr><literal type="string" pos:line="158" pos:column="27">"NO_PROXY"<pos:position pos:line="158" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="158" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="159" pos:column="5">char<pos:position pos:line="159" pos:column="9"/></name> <modifier pos:line="159" pos:column="10">*<pos:position pos:line="159" pos:column="11"/></modifier></type><name pos:line="159" pos:column="11">proxy<pos:position pos:line="159" pos:column="16"/></name><init pos:line="159" pos:column="16">=<expr><name pos:line="159" pos:column="17">NULL<pos:position pos:line="159" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="159" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="160" pos:column="5">char<pos:position pos:line="160" pos:column="9"/></name></type> <name><name pos:line="160" pos:column="10">proxy_env<pos:position pos:line="160" pos:column="19"/></name><index pos:line="160" pos:column="19">[<expr><literal type="number" pos:line="160" pos:column="20">128<pos:position pos:line="160" pos:column="23"/></literal></expr>]<pos:position pos:line="160" pos:column="24"/></index></name></decl>;<pos:position pos:line="160" pos:column="25"/></decl_stmt>

    <if pos:line="162" pos:column="5">if<condition pos:line="162" pos:column="7">(<expr><operator pos:line="162" pos:column="8">!<pos:position pos:line="162" pos:column="9"/></operator><name pos:line="162" pos:column="9">no_proxy<pos:position pos:line="162" pos:column="17"/></name> <operator pos:line="162" pos:column="18">||<pos:position pos:line="162" pos:column="20"/></operator> <operator pos:line="162" pos:column="21">!<pos:position pos:line="162" pos:column="22"/></operator><call><name pos:line="162" pos:column="22">strequal<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><literal type="string" pos:line="162" pos:column="31">"*"<pos:position pos:line="162" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="36">no_proxy<pos:position pos:line="162" pos:column="44"/></name></expr></argument>)<pos:position pos:line="162" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="46"/></condition><then pos:line="162" pos:column="46"> <block pos:line="162" pos:column="47">{
      <comment type="block" pos:line="163" pos:column="7">/* NO_PROXY wasn't specified or it wasn't just an asterisk */</comment>
      <decl_stmt><decl><type><name pos:line="164" pos:column="7">char<pos:position pos:line="164" pos:column="11"/></name> <modifier pos:line="164" pos:column="12">*<pos:position pos:line="164" pos:column="13"/></modifier></type><name pos:line="164" pos:column="13">nope<pos:position pos:line="164" pos:column="17"/></name></decl>;<pos:position pos:line="164" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="166" pos:column="7">nope<pos:position pos:line="166" pos:column="11"/></name><operator pos:line="166" pos:column="11">=<pos:position pos:line="166" pos:column="12"/></operator><ternary><condition><expr><name pos:line="166" pos:column="12">no_proxy<pos:position pos:line="166" pos:column="20"/></name></expr>?<pos:position pos:line="166" pos:column="21"/></condition><then><expr><call><name pos:line="166" pos:column="21">strtok<pos:position pos:line="166" pos:column="27"/></name><argument_list pos:line="166" pos:column="27">(<argument><expr><name pos:line="166" pos:column="28">no_proxy<pos:position pos:line="166" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="38">", "<pos:position pos:line="166" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="43"/></argument_list></call></expr></then><else pos:line="166" pos:column="43">:<expr><name pos:line="166" pos:column="44">NULL<pos:position pos:line="166" pos:column="48"/></name></expr></else></ternary></expr>;<pos:position pos:line="166" pos:column="49"/></expr_stmt>
      <while pos:line="167" pos:column="7">while<condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">nope<pos:position pos:line="167" pos:column="17"/></name></expr>)<pos:position pos:line="167" pos:column="18"/></condition> <block pos:line="167" pos:column="19">{
        <if pos:line="168" pos:column="9">if<condition pos:line="168" pos:column="11">(<expr><call><name pos:line="168" pos:column="12">strlen<pos:position pos:line="168" pos:column="18"/></name><argument_list pos:line="168" pos:column="18">(<argument><expr><name pos:line="168" pos:column="19">nope<pos:position pos:line="168" pos:column="23"/></name></expr></argument>)<pos:position pos:line="168" pos:column="24"/></argument_list></call> <operator pos:line="168" pos:column="25">&lt;=<pos:position pos:line="168" pos:column="30"/></operator> <call><name pos:line="168" pos:column="28">strlen<pos:position pos:line="168" pos:column="34"/></name><argument_list pos:line="168" pos:column="34">(<argument><expr><name><name pos:line="168" pos:column="35">conn<pos:position pos:line="168" pos:column="39"/></name><operator pos:line="168" pos:column="39">-&gt;<pos:position pos:line="168" pos:column="44"/></operator><name pos:line="168" pos:column="41">name<pos:position pos:line="168" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="168" pos:column="47"/></condition><then pos:line="168" pos:column="47"> <block pos:line="168" pos:column="48">{
          <decl_stmt><decl><type><name pos:line="169" pos:column="11">char<pos:position pos:line="169" pos:column="15"/></name> <modifier pos:line="169" pos:column="16">*<pos:position pos:line="169" pos:column="17"/></modifier></type><name pos:line="169" pos:column="17">checkn<pos:position pos:line="169" pos:column="23"/></name><init pos:line="169" pos:column="23">=
            <expr><name><name pos:line="170" pos:column="13">conn<pos:position pos:line="170" pos:column="17"/></name><operator pos:line="170" pos:column="17">-&gt;<pos:position pos:line="170" pos:column="22"/></operator><name pos:line="170" pos:column="19">name<pos:position pos:line="170" pos:column="23"/></name></name> <operator pos:line="170" pos:column="24">+<pos:position pos:line="170" pos:column="25"/></operator> <call><name pos:line="170" pos:column="26">strlen<pos:position pos:line="170" pos:column="32"/></name><argument_list pos:line="170" pos:column="32">(<argument><expr><name><name pos:line="170" pos:column="33">conn<pos:position pos:line="170" pos:column="37"/></name><operator pos:line="170" pos:column="37">-&gt;<pos:position pos:line="170" pos:column="42"/></operator><name pos:line="170" pos:column="39">name<pos:position pos:line="170" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="44"/></argument_list></call> <operator pos:line="170" pos:column="45">-<pos:position pos:line="170" pos:column="46"/></operator> <call><name pos:line="170" pos:column="47">strlen<pos:position pos:line="170" pos:column="53"/></name><argument_list pos:line="170" pos:column="53">(<argument><expr><name pos:line="170" pos:column="54">nope<pos:position pos:line="170" pos:column="58"/></name></expr></argument>)<pos:position pos:line="170" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="60"/></decl_stmt>
          <if pos:line="171" pos:column="11">if<condition pos:line="171" pos:column="13">(<expr><call><name pos:line="171" pos:column="14">strnequal<pos:position pos:line="171" pos:column="23"/></name><argument_list pos:line="171" pos:column="23">(<argument><expr><name pos:line="171" pos:column="24">nope<pos:position pos:line="171" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="30">checkn<pos:position pos:line="171" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="171" pos:column="38">strlen<pos:position pos:line="171" pos:column="44"/></name><argument_list pos:line="171" pos:column="44">(<argument><expr><name pos:line="171" pos:column="45">nope<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="171" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="52"/></condition><then pos:line="171" pos:column="52"> <block pos:line="171" pos:column="53">{
            <comment type="block" pos:line="172" pos:column="13">/* no proxy for this host! */</comment>
            <break pos:line="173" pos:column="13">break;<pos:position pos:line="173" pos:column="19"/></break>
          }<pos:position pos:line="174" pos:column="12"/></block></then></if>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="176" pos:column="9">nope<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">=<pos:position pos:line="176" pos:column="14"/></operator><call><name pos:line="176" pos:column="14">strtok<pos:position pos:line="176" pos:column="20"/></name><argument_list pos:line="176" pos:column="20">(<argument><expr><name pos:line="176" pos:column="21">NULL<pos:position pos:line="176" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="27">", "<pos:position pos:line="176" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="177" pos:column="8"/></block></while>
      <if pos:line="178" pos:column="7">if<condition pos:line="178" pos:column="9">(<expr><operator pos:line="178" pos:column="10">!<pos:position pos:line="178" pos:column="11"/></operator><name pos:line="178" pos:column="11">nope<pos:position pos:line="178" pos:column="15"/></name></expr>)<pos:position pos:line="178" pos:column="16"/></condition><then pos:line="178" pos:column="16"> <block pos:line="178" pos:column="17">{
	<comment type="block" pos:line="179" pos:column="9">/* It was not listed as without proxy */</comment>
	<decl_stmt><decl><type><name pos:line="180" pos:column="9">char<pos:position pos:line="180" pos:column="13"/></name> <modifier pos:line="180" pos:column="14">*<pos:position pos:line="180" pos:column="15"/></modifier></type><name pos:line="180" pos:column="15">protop<pos:position pos:line="180" pos:column="21"/></name> <init pos:line="180" pos:column="22">= <expr><name><name pos:line="180" pos:column="24">conn<pos:position pos:line="180" pos:column="28"/></name><operator pos:line="180" pos:column="28">-&gt;<pos:position pos:line="180" pos:column="33"/></operator><name pos:line="180" pos:column="30">proto<pos:position pos:line="180" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="180" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="181" pos:column="9">char<pos:position pos:line="181" pos:column="13"/></name> <modifier pos:line="181" pos:column="14">*<pos:position pos:line="181" pos:column="15"/></modifier></type><name pos:line="181" pos:column="15">envp<pos:position pos:line="181" pos:column="19"/></name> <init pos:line="181" pos:column="20">= <expr><name pos:line="181" pos:column="22">proxy_env<pos:position pos:line="181" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="181" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="182" pos:column="9">char<pos:position pos:line="182" pos:column="13"/></name> <modifier pos:line="182" pos:column="14">*<pos:position pos:line="182" pos:column="15"/></modifier></type><name pos:line="182" pos:column="15">prox<pos:position pos:line="182" pos:column="19"/></name></decl>;<pos:position pos:line="182" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="184" pos:column="9">/* Now, build &lt;PROTOCOL&gt;_PROXY and check for such a one to use */</comment>
	<while pos:line="185" pos:column="9">while<condition pos:line="185" pos:column="14">(<expr><operator pos:line="185" pos:column="15">*<pos:position pos:line="185" pos:column="16"/></operator><name pos:line="185" pos:column="16">protop<pos:position pos:line="185" pos:column="22"/></name></expr>)<pos:position pos:line="185" pos:column="23"/></condition> <block pos:line="185" pos:column="24">{
	  <expr_stmt><expr><operator pos:line="186" pos:column="11">*<pos:position pos:line="186" pos:column="12"/></operator><name pos:line="186" pos:column="12">envp<pos:position pos:line="186" pos:column="16"/></name><operator pos:line="186" pos:column="16">++<pos:position pos:line="186" pos:column="18"/></operator> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <call><name pos:line="186" pos:column="21">toupper<pos:position pos:line="186" pos:column="28"/></name><argument_list pos:line="186" pos:column="28">(<argument><expr><operator pos:line="186" pos:column="29">*<pos:position pos:line="186" pos:column="30"/></operator><name pos:line="186" pos:column="30">protop<pos:position pos:line="186" pos:column="36"/></name><operator pos:line="186" pos:column="36">++<pos:position pos:line="186" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="186" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="187" pos:column="10"/></block></while>
	<comment type="block" pos:line="188" pos:column="9">/* append _PROXY */</comment>
	<expr_stmt><expr><call><name pos:line="189" pos:column="9">strcpy<pos:position pos:line="189" pos:column="15"/></name><argument_list pos:line="189" pos:column="15">(<argument><expr><name pos:line="189" pos:column="16">envp<pos:position pos:line="189" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="189" pos:column="22">"_PROXY"<pos:position pos:line="189" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="32"/></expr_stmt>
<cpp:if pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">if<pos:position pos:line="190" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="190" pos:column="5">0<pos:position pos:line="190" pos:column="6"/></literal></expr></cpp:if>
	infof(data, "DEBUG: checks the environment variable %s\n", proxy_env);
<cpp:endif pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">endif<pos:position pos:line="192" pos:column="7"/></cpp:directive></cpp:endif>
	<comment type="block" pos:line="193" pos:column="9">/* read the protocol proxy: */</comment>
	<expr_stmt><expr><name pos:line="194" pos:column="9">prox<pos:position pos:line="194" pos:column="13"/></name><operator pos:line="194" pos:column="13">=<pos:position pos:line="194" pos:column="14"/></operator><call><name pos:line="194" pos:column="14">GetEnv<pos:position pos:line="194" pos:column="20"/></name><argument_list pos:line="194" pos:column="20">(<argument><expr><name pos:line="194" pos:column="21">proxy_env<pos:position pos:line="194" pos:column="30"/></name></expr></argument>)<pos:position pos:line="194" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="32"/></expr_stmt>

	<if pos:line="196" pos:column="9">if<condition pos:line="196" pos:column="11">(<expr><name pos:line="196" pos:column="12">prox<pos:position pos:line="196" pos:column="16"/></name> <operator pos:line="196" pos:column="17">&amp;&amp;<pos:position pos:line="196" pos:column="27"/></operator> <operator pos:line="196" pos:column="20">*<pos:position pos:line="196" pos:column="21"/></operator><name pos:line="196" pos:column="21">prox<pos:position pos:line="196" pos:column="25"/></name></expr>)<pos:position pos:line="196" pos:column="26"/></condition><then pos:line="196" pos:column="26"> <block pos:line="196" pos:column="27">{ <comment type="block" pos:line="196" pos:column="29">/* don't count "" strings */</comment>
	  <expr_stmt><expr><name pos:line="197" pos:column="11">proxy<pos:position pos:line="197" pos:column="16"/></name> <operator pos:line="197" pos:column="17">=<pos:position pos:line="197" pos:column="18"/></operator> <name pos:line="197" pos:column="19">prox<pos:position pos:line="197" pos:column="23"/></name></expr>;<pos:position pos:line="197" pos:column="24"/></expr_stmt> <comment type="block" pos:line="197" pos:column="25">/* use this */</comment>
        }<pos:position pos:line="198" pos:column="10"/></block></then>
        <else pos:line="199" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="200" pos:column="11">proxy<pos:position pos:line="200" pos:column="16"/></name> <operator pos:line="200" pos:column="17">=<pos:position pos:line="200" pos:column="18"/></operator> <call><name pos:line="200" pos:column="19">GetEnv<pos:position pos:line="200" pos:column="25"/></name><argument_list pos:line="200" pos:column="25">(<argument><expr><literal type="string" pos:line="200" pos:column="26">"ALL_PROXY"<pos:position pos:line="200" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt></block></else></if> <comment type="block" pos:line="200" pos:column="40">/* default proxy to use */</comment>

        <if pos:line="202" pos:column="9">if<condition pos:line="202" pos:column="11">(<expr><name pos:line="202" pos:column="12">proxy<pos:position pos:line="202" pos:column="17"/></name> <operator pos:line="202" pos:column="18">&amp;&amp;<pos:position pos:line="202" pos:column="28"/></operator> <operator pos:line="202" pos:column="21">*<pos:position pos:line="202" pos:column="22"/></operator><name pos:line="202" pos:column="22">proxy<pos:position pos:line="202" pos:column="27"/></name></expr>)<pos:position pos:line="202" pos:column="28"/></condition><then pos:line="202" pos:column="28"> <block pos:line="202" pos:column="29">{
          <comment type="block" pos:line="203" pos:column="11">/* we have a proxy here to set */</comment>
          <expr_stmt><expr><name><name pos:line="204" pos:column="11">data<pos:position pos:line="204" pos:column="15"/></name><operator pos:line="204" pos:column="15">-&gt;<pos:position pos:line="204" pos:column="20"/></operator><name pos:line="204" pos:column="17">proxy<pos:position pos:line="204" pos:column="22"/></name></name> <operator pos:line="204" pos:column="23">=<pos:position pos:line="204" pos:column="24"/></operator> <name pos:line="204" pos:column="25">proxy<pos:position pos:line="204" pos:column="30"/></name></expr>;<pos:position pos:line="204" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="205" pos:column="11">data<pos:position pos:line="205" pos:column="15"/></name><operator pos:line="205" pos:column="15">-&gt;<pos:position pos:line="205" pos:column="20"/></operator><name pos:line="205" pos:column="17">bits<pos:position pos:line="205" pos:column="21"/></name><operator pos:line="205" pos:column="21">.<pos:position pos:line="205" pos:column="22"/></operator><name pos:line="205" pos:column="22">proxystringalloc<pos:position pos:line="205" pos:column="38"/></name></name><operator pos:line="205" pos:column="38">=<pos:position pos:line="205" pos:column="39"/></operator><literal type="number" pos:line="205" pos:column="39">1<pos:position pos:line="205" pos:column="40"/></literal></expr>;<pos:position pos:line="205" pos:column="41"/></expr_stmt> <comment type="block" pos:line="205" pos:column="42">/* this needs to be freed later */</comment>
          <expr_stmt><expr><name><name pos:line="206" pos:column="11">data<pos:position pos:line="206" pos:column="15"/></name><operator pos:line="206" pos:column="15">-&gt;<pos:position pos:line="206" pos:column="20"/></operator><name pos:line="206" pos:column="17">bits<pos:position pos:line="206" pos:column="21"/></name><operator pos:line="206" pos:column="21">.<pos:position pos:line="206" pos:column="22"/></operator><name pos:line="206" pos:column="22">httpproxy<pos:position pos:line="206" pos:column="31"/></name></name><operator pos:line="206" pos:column="31">=<pos:position pos:line="206" pos:column="32"/></operator><literal type="number" pos:line="206" pos:column="32">1<pos:position pos:line="206" pos:column="33"/></literal></expr>;<pos:position pos:line="206" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="207" pos:column="10"/></block></then></if>
      }<pos:position pos:line="208" pos:column="8"/></block></then></if> <comment type="block" pos:line="208" pos:column="9">/* if (!nope) - it wasn't specfied non-proxy */</comment>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if> <comment type="block" pos:line="209" pos:column="7">/* NO_PROXY wasn't specified or '*' */</comment>
    <if pos:line="210" pos:column="5">if<condition pos:line="210" pos:column="7">(<expr><name pos:line="210" pos:column="8">no_proxy<pos:position pos:line="210" pos:column="16"/></name></expr>)<pos:position pos:line="210" pos:column="17"/></condition><then pos:line="210" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="211" pos:column="7">free<pos:position pos:line="211" pos:column="11"/></name><argument_list pos:line="211" pos:column="11">(<argument><expr><name pos:line="211" pos:column="12">no_proxy<pos:position pos:line="211" pos:column="20"/></name></expr></argument>)<pos:position pos:line="211" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="22"/></expr_stmt></block></then></if>
  }<pos:position pos:line="212" pos:column="4"/></block></then></if> <comment type="block" pos:line="212" pos:column="5">/* if not using proxy */</comment>

  <if pos:line="214" pos:column="3">if<condition pos:line="214" pos:column="5">(<expr><operator pos:line="214" pos:column="6">(<pos:position pos:line="214" pos:column="7"/></operator><name><name pos:line="214" pos:column="7">conn<pos:position pos:line="214" pos:column="11"/></name><operator pos:line="214" pos:column="11">-&gt;<pos:position pos:line="214" pos:column="16"/></operator><name pos:line="214" pos:column="13">protocol<pos:position pos:line="214" pos:column="21"/></name></name><operator pos:line="214" pos:column="21">&amp;<pos:position pos:line="214" pos:column="26"/></operator><name pos:line="214" pos:column="22">PROT_MISSING<pos:position pos:line="214" pos:column="34"/></name><operator pos:line="214" pos:column="34">)<pos:position pos:line="214" pos:column="35"/></operator> <operator pos:line="214" pos:column="36">&amp;&amp;<pos:position pos:line="214" pos:column="46"/></operator> <name><name pos:line="214" pos:column="39">data<pos:position pos:line="214" pos:column="43"/></name><operator pos:line="214" pos:column="43">-&gt;<pos:position pos:line="214" pos:column="48"/></operator><name pos:line="214" pos:column="45">bits<pos:position pos:line="214" pos:column="49"/></name><operator pos:line="214" pos:column="49">.<pos:position pos:line="214" pos:column="50"/></operator><name pos:line="214" pos:column="50">httpproxy<pos:position pos:line="214" pos:column="59"/></name></name></expr> )<pos:position pos:line="214" pos:column="61"/></condition><then pos:line="214" pos:column="61"> <block pos:line="214" pos:column="62">{
    <comment type="block" pos:line="215" pos:column="5">/* We're guessing prefixes here and since we're told to use a proxy, we
       need to add the protocol prefix to the URL string before we continue!
       */</comment>
    <decl_stmt><decl><type><name pos:line="218" pos:column="5">char<pos:position pos:line="218" pos:column="9"/></name> <modifier pos:line="218" pos:column="10">*<pos:position pos:line="218" pos:column="11"/></modifier></type><name pos:line="218" pos:column="11">reurl<pos:position pos:line="218" pos:column="16"/></name></decl>;<pos:position pos:line="218" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="220" pos:column="5">reurl<pos:position pos:line="220" pos:column="10"/></name> <operator pos:line="220" pos:column="11">=<pos:position pos:line="220" pos:column="12"/></operator> <call><name pos:line="220" pos:column="13">maprintf<pos:position pos:line="220" pos:column="21"/></name><argument_list pos:line="220" pos:column="21">(<argument><expr><literal type="string" pos:line="220" pos:column="22">"%s://%s"<pos:position pos:line="220" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="33">conn<pos:position pos:line="220" pos:column="37"/></name><operator pos:line="220" pos:column="37">-&gt;<pos:position pos:line="220" pos:column="42"/></operator><name pos:line="220" pos:column="39">proto<pos:position pos:line="220" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="46">data<pos:position pos:line="220" pos:column="50"/></name><operator pos:line="220" pos:column="50">-&gt;<pos:position pos:line="220" pos:column="55"/></operator><name pos:line="220" pos:column="52">url<pos:position pos:line="220" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="57"/></expr_stmt>

    <if pos:line="222" pos:column="5">if<condition pos:line="222" pos:column="7">(<expr><operator pos:line="222" pos:column="8">!<pos:position pos:line="222" pos:column="9"/></operator><name pos:line="222" pos:column="9">reurl<pos:position pos:line="222" pos:column="14"/></name></expr>)<pos:position pos:line="222" pos:column="15"/></condition><then pos:line="222" pos:column="15">
      <block type="pseudo"><return pos:line="223" pos:column="7">return <expr><name pos:line="223" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="223" pos:column="33"/></name></expr>;<pos:position pos:line="223" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="225" pos:column="5">data<pos:position pos:line="225" pos:column="9"/></name><operator pos:line="225" pos:column="9">-&gt;<pos:position pos:line="225" pos:column="14"/></operator><name pos:line="225" pos:column="11">url<pos:position pos:line="225" pos:column="14"/></name></name> <operator pos:line="225" pos:column="15">=<pos:position pos:line="225" pos:column="16"/></operator> <name pos:line="225" pos:column="17">reurl<pos:position pos:line="225" pos:column="22"/></name></expr>;<pos:position pos:line="225" pos:column="23"/></expr_stmt>
    <if pos:line="226" pos:column="5">if<condition pos:line="226" pos:column="7">(<expr><name><name pos:line="226" pos:column="8">data<pos:position pos:line="226" pos:column="12"/></name><operator pos:line="226" pos:column="12">-&gt;<pos:position pos:line="226" pos:column="17"/></operator><name pos:line="226" pos:column="14">freethis<pos:position pos:line="226" pos:column="22"/></name></name></expr>)<pos:position pos:line="226" pos:column="23"/></condition><then pos:line="226" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="227" pos:column="7">free<pos:position pos:line="227" pos:column="11"/></name><argument_list pos:line="227" pos:column="11">(<argument><expr><name><name pos:line="227" pos:column="12">data<pos:position pos:line="227" pos:column="16"/></name><operator pos:line="227" pos:column="16">-&gt;<pos:position pos:line="227" pos:column="21"/></operator><name pos:line="227" pos:column="18">freethis<pos:position pos:line="227" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="228" pos:column="5">data<pos:position pos:line="228" pos:column="9"/></name><operator pos:line="228" pos:column="9">-&gt;<pos:position pos:line="228" pos:column="14"/></operator><name pos:line="228" pos:column="11">freethis<pos:position pos:line="228" pos:column="19"/></name></name> <operator pos:line="228" pos:column="20">=<pos:position pos:line="228" pos:column="21"/></operator> <name pos:line="228" pos:column="22">reurl<pos:position pos:line="228" pos:column="27"/></name></expr>;<pos:position pos:line="228" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="230" pos:column="5">conn<pos:position pos:line="230" pos:column="9"/></name><operator pos:line="230" pos:column="9">-&gt;<pos:position pos:line="230" pos:column="14"/></operator><name pos:line="230" pos:column="11">protocol<pos:position pos:line="230" pos:column="19"/></name></name> <operator pos:line="230" pos:column="20">&amp;=<pos:position pos:line="230" pos:column="26"/></operator> <operator pos:line="230" pos:column="23">~<pos:position pos:line="230" pos:column="24"/></operator><name pos:line="230" pos:column="24">PROT_MISSING<pos:position pos:line="230" pos:column="36"/></name></expr>;<pos:position pos:line="230" pos:column="37"/></expr_stmt> <comment type="block" pos:line="230" pos:column="38">/* switch that one off again */</comment>
  }<pos:position pos:line="231" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="233" pos:column="3">/* RESUME on a HTTP page is a tricky business. First, let's just check that
     'range' isn't used, then set the range parameter and leave the resume as
     it is to inform about this situation for later use. We will then
     "attempt" to resume, and if we're talking to a HTTP/1.1 (or later)
     server, we will get the document resumed. If we talk to a HTTP/1.0
     server, we just fail since we can't rewind the file writing from within
     this function. */</comment>
  <if pos:line="240" pos:column="3">if<condition pos:line="240" pos:column="5">(<expr><name><name pos:line="240" pos:column="6">data<pos:position pos:line="240" pos:column="10"/></name><operator pos:line="240" pos:column="10">-&gt;<pos:position pos:line="240" pos:column="15"/></operator><name pos:line="240" pos:column="12">resume_from<pos:position pos:line="240" pos:column="23"/></name></name></expr>)<pos:position pos:line="240" pos:column="24"/></condition><then pos:line="240" pos:column="24"> <block pos:line="240" pos:column="25">{
    <if pos:line="241" pos:column="5">if<condition pos:line="241" pos:column="7">(<expr><operator pos:line="241" pos:column="8">!<pos:position pos:line="241" pos:column="9"/></operator><name><name pos:line="241" pos:column="9">data<pos:position pos:line="241" pos:column="13"/></name><operator pos:line="241" pos:column="13">-&gt;<pos:position pos:line="241" pos:column="18"/></operator><name pos:line="241" pos:column="15">bits<pos:position pos:line="241" pos:column="19"/></name><operator pos:line="241" pos:column="19">.<pos:position pos:line="241" pos:column="20"/></operator><name pos:line="241" pos:column="20">set_range<pos:position pos:line="241" pos:column="29"/></name></name></expr>)<pos:position pos:line="241" pos:column="30"/></condition><then pos:line="241" pos:column="30"> <block pos:line="241" pos:column="31">{
      <comment type="block" pos:line="242" pos:column="7">/* if it already was in use, we just skip this */</comment>
      <expr_stmt><expr><call><name pos:line="243" pos:column="7">sprintf<pos:position pos:line="243" pos:column="14"/></name><argument_list pos:line="243" pos:column="14">(<argument><expr><name pos:line="243" pos:column="15">resumerange<pos:position pos:line="243" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="28">"%d-"<pos:position pos:line="243" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="243" pos:column="35">data<pos:position pos:line="243" pos:column="39"/></name><operator pos:line="243" pos:column="39">-&gt;<pos:position pos:line="243" pos:column="44"/></operator><name pos:line="243" pos:column="41">resume_from<pos:position pos:line="243" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="243" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="244" pos:column="7">data<pos:position pos:line="244" pos:column="11"/></name><operator pos:line="244" pos:column="11">-&gt;<pos:position pos:line="244" pos:column="16"/></operator><name pos:line="244" pos:column="13">range<pos:position pos:line="244" pos:column="18"/></name></name><operator pos:line="244" pos:column="18">=<pos:position pos:line="244" pos:column="19"/></operator><name pos:line="244" pos:column="19">resumerange<pos:position pos:line="244" pos:column="30"/></name></expr>;<pos:position pos:line="244" pos:column="31"/></expr_stmt> <comment type="block" pos:line="244" pos:column="32">/* tell ourselves to fetch this range */</comment>
      <expr_stmt><expr><name><name pos:line="245" pos:column="7">data<pos:position pos:line="245" pos:column="11"/></name><operator pos:line="245" pos:column="11">-&gt;<pos:position pos:line="245" pos:column="16"/></operator><name pos:line="245" pos:column="13">bits<pos:position pos:line="245" pos:column="17"/></name><operator pos:line="245" pos:column="17">.<pos:position pos:line="245" pos:column="18"/></operator><name pos:line="245" pos:column="18">set_range<pos:position pos:line="245" pos:column="27"/></name></name> <operator pos:line="245" pos:column="28">=<pos:position pos:line="245" pos:column="29"/></operator> <literal type="number" pos:line="245" pos:column="30">1<pos:position pos:line="245" pos:column="31"/></literal></expr>;<pos:position pos:line="245" pos:column="32"/></expr_stmt> <comment type="block" pos:line="245" pos:column="33">/* switch on range usage */</comment>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>
  }<pos:position pos:line="247" pos:column="4"/></block></then></if>


  <if pos:line="250" pos:column="3">if<condition pos:line="250" pos:column="5">(<expr><name><name pos:line="250" pos:column="6">data<pos:position pos:line="250" pos:column="10"/></name><operator pos:line="250" pos:column="10">-&gt;<pos:position pos:line="250" pos:column="15"/></operator><name pos:line="250" pos:column="12">timeout<pos:position pos:line="250" pos:column="19"/></name></name></expr>)<pos:position pos:line="250" pos:column="20"/></condition><then pos:line="250" pos:column="20"> <block pos:line="250" pos:column="21">{
    <comment type="block" pos:line="251" pos:column="5">/* We set the timeout on the connection/resolving phase first, separately
       from the download/upload part to allow a maximum time on everything */</comment>
    <expr_stmt><expr><call><name pos:line="253" pos:column="5">myalarm<pos:position pos:line="253" pos:column="12"/></name><argument_list pos:line="253" pos:column="12">(<argument><expr><name><name pos:line="253" pos:column="13">data<pos:position pos:line="253" pos:column="17"/></name><operator pos:line="253" pos:column="17">-&gt;<pos:position pos:line="253" pos:column="22"/></operator><name pos:line="253" pos:column="19">timeout<pos:position pos:line="253" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="28"/></expr_stmt> <comment type="block" pos:line="253" pos:column="29">/* this sends a signal when the timeout fires
			       off, and that will abort system calls */</comment>
  }<pos:position pos:line="255" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="257" pos:column="3">/*
   * Hmm, if we are using a proxy, then we can skip the GOPHER and the
   * FTP steps, although we cannot skip the HTTPS step (since the proxy
   * works differently, depending on whether its SSL or not).
   */</comment>

  <if pos:line="263" pos:column="3">if <condition pos:line="263" pos:column="6">(<expr><call><name pos:line="263" pos:column="7">strequal<pos:position pos:line="263" pos:column="15"/></name><argument_list pos:line="263" pos:column="15">(<argument><expr><name><name pos:line="263" pos:column="16">conn<pos:position pos:line="263" pos:column="20"/></name><operator pos:line="263" pos:column="20">-&gt;<pos:position pos:line="263" pos:column="25"/></operator><name pos:line="263" pos:column="22">proto<pos:position pos:line="263" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="29">"HTTP"<pos:position pos:line="263" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="263" pos:column="37"/></condition><then pos:line="263" pos:column="37"> <block pos:line="263" pos:column="38">{
    <if pos:line="264" pos:column="5">if<condition pos:line="264" pos:column="7">(<expr><operator pos:line="264" pos:column="8">!<pos:position pos:line="264" pos:column="9"/></operator><name><name pos:line="264" pos:column="9">data<pos:position pos:line="264" pos:column="13"/></name><operator pos:line="264" pos:column="13">-&gt;<pos:position pos:line="264" pos:column="18"/></operator><name pos:line="264" pos:column="15">port<pos:position pos:line="264" pos:column="19"/></name></name></expr>)<pos:position pos:line="264" pos:column="20"/></condition><then pos:line="264" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="265" pos:column="7">data<pos:position pos:line="265" pos:column="11"/></name><operator pos:line="265" pos:column="11">-&gt;<pos:position pos:line="265" pos:column="16"/></operator><name pos:line="265" pos:column="13">port<pos:position pos:line="265" pos:column="17"/></name></name> <operator pos:line="265" pos:column="18">=<pos:position pos:line="265" pos:column="19"/></operator> <name pos:line="265" pos:column="20">PORT_HTTP<pos:position pos:line="265" pos:column="29"/></name></expr>;<pos:position pos:line="265" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="266" pos:column="5">data<pos:position pos:line="266" pos:column="9"/></name><operator pos:line="266" pos:column="9">-&gt;<pos:position pos:line="266" pos:column="14"/></operator><name pos:line="266" pos:column="11">remote_port<pos:position pos:line="266" pos:column="22"/></name></name> <operator pos:line="266" pos:column="23">=<pos:position pos:line="266" pos:column="24"/></operator> <name pos:line="266" pos:column="25">PORT_HTTP<pos:position pos:line="266" pos:column="34"/></name></expr>;<pos:position pos:line="266" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="267" pos:column="5">conn<pos:position pos:line="267" pos:column="9"/></name><operator pos:line="267" pos:column="9">-&gt;<pos:position pos:line="267" pos:column="14"/></operator><name pos:line="267" pos:column="11">protocol<pos:position pos:line="267" pos:column="19"/></name></name> <operator pos:line="267" pos:column="20">|=<pos:position pos:line="267" pos:column="22"/></operator> <name pos:line="267" pos:column="23">PROT_HTTP<pos:position pos:line="267" pos:column="32"/></name></expr>;<pos:position pos:line="267" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="268" pos:column="5">conn<pos:position pos:line="268" pos:column="9"/></name><operator pos:line="268" pos:column="9">-&gt;<pos:position pos:line="268" pos:column="14"/></operator><name pos:line="268" pos:column="11">curl_do<pos:position pos:line="268" pos:column="18"/></name></name> <operator pos:line="268" pos:column="19">=<pos:position pos:line="268" pos:column="20"/></operator> <name pos:line="268" pos:column="21">http<pos:position pos:line="268" pos:column="25"/></name></expr>;<pos:position pos:line="268" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="269" pos:column="5">conn<pos:position pos:line="269" pos:column="9"/></name><operator pos:line="269" pos:column="9">-&gt;<pos:position pos:line="269" pos:column="14"/></operator><name pos:line="269" pos:column="11">curl_done<pos:position pos:line="269" pos:column="20"/></name></name> <operator pos:line="269" pos:column="21">=<pos:position pos:line="269" pos:column="22"/></operator> <name pos:line="269" pos:column="23">http_done<pos:position pos:line="269" pos:column="32"/></name></expr>;<pos:position pos:line="269" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="270" pos:column="5">conn<pos:position pos:line="270" pos:column="9"/></name><operator pos:line="270" pos:column="9">-&gt;<pos:position pos:line="270" pos:column="14"/></operator><name pos:line="270" pos:column="11">curl_close<pos:position pos:line="270" pos:column="21"/></name></name> <operator pos:line="270" pos:column="22">=<pos:position pos:line="270" pos:column="23"/></operator> <name pos:line="270" pos:column="24">http_close<pos:position pos:line="270" pos:column="34"/></name></expr>;<pos:position pos:line="270" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="271" pos:column="4"/></block></then>
  <elseif pos:line="272" pos:column="3">else <if pos:line="272" pos:column="8">if <condition pos:line="272" pos:column="11">(<expr><call><name pos:line="272" pos:column="12">strequal<pos:position pos:line="272" pos:column="20"/></name><argument_list pos:line="272" pos:column="20">(<argument><expr><name><name pos:line="272" pos:column="21">conn<pos:position pos:line="272" pos:column="25"/></name><operator pos:line="272" pos:column="25">-&gt;<pos:position pos:line="272" pos:column="30"/></operator><name pos:line="272" pos:column="27">proto<pos:position pos:line="272" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="34">"HTTPS"<pos:position pos:line="272" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="272" pos:column="43"/></condition><then pos:line="272" pos:column="43"> <block pos:line="272" pos:column="44">{
<cpp:ifdef pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">ifdef<pos:position pos:line="273" pos:column="7"/></cpp:directive> <name pos:line="273" pos:column="8">USE_SSLEAY<pos:position pos:line="273" pos:column="18"/></name></cpp:ifdef>
    <if pos:line="274" pos:column="5">if<condition pos:line="274" pos:column="7">(<expr><operator pos:line="274" pos:column="8">!<pos:position pos:line="274" pos:column="9"/></operator><name><name pos:line="274" pos:column="9">data<pos:position pos:line="274" pos:column="13"/></name><operator pos:line="274" pos:column="13">-&gt;<pos:position pos:line="274" pos:column="18"/></operator><name pos:line="274" pos:column="15">port<pos:position pos:line="274" pos:column="19"/></name></name></expr>)<pos:position pos:line="274" pos:column="20"/></condition><then pos:line="274" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="275" pos:column="7">data<pos:position pos:line="275" pos:column="11"/></name><operator pos:line="275" pos:column="11">-&gt;<pos:position pos:line="275" pos:column="16"/></operator><name pos:line="275" pos:column="13">port<pos:position pos:line="275" pos:column="17"/></name></name> <operator pos:line="275" pos:column="18">=<pos:position pos:line="275" pos:column="19"/></operator> <name pos:line="275" pos:column="20">PORT_HTTPS<pos:position pos:line="275" pos:column="30"/></name></expr>;<pos:position pos:line="275" pos:column="31"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="276" pos:column="5">data<pos:position pos:line="276" pos:column="9"/></name><operator pos:line="276" pos:column="9">-&gt;<pos:position pos:line="276" pos:column="14"/></operator><name pos:line="276" pos:column="11">remote_port<pos:position pos:line="276" pos:column="22"/></name></name> <operator pos:line="276" pos:column="23">=<pos:position pos:line="276" pos:column="24"/></operator> <name pos:line="276" pos:column="25">PORT_HTTPS<pos:position pos:line="276" pos:column="35"/></name></expr>;<pos:position pos:line="276" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="277" pos:column="5">conn<pos:position pos:line="277" pos:column="9"/></name><operator pos:line="277" pos:column="9">-&gt;<pos:position pos:line="277" pos:column="14"/></operator><name pos:line="277" pos:column="11">protocol<pos:position pos:line="277" pos:column="19"/></name></name> <operator pos:line="277" pos:column="20">|=<pos:position pos:line="277" pos:column="22"/></operator> <name pos:line="277" pos:column="23">PROT_HTTP<pos:position pos:line="277" pos:column="32"/></name></expr>;<pos:position pos:line="277" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="278" pos:column="5">conn<pos:position pos:line="278" pos:column="9"/></name><operator pos:line="278" pos:column="9">-&gt;<pos:position pos:line="278" pos:column="14"/></operator><name pos:line="278" pos:column="11">protocol<pos:position pos:line="278" pos:column="19"/></name></name> <operator pos:line="278" pos:column="20">|=<pos:position pos:line="278" pos:column="22"/></operator> <name pos:line="278" pos:column="23">PROT_HTTPS<pos:position pos:line="278" pos:column="33"/></name></expr>;<pos:position pos:line="278" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="280" pos:column="5">conn<pos:position pos:line="280" pos:column="9"/></name><operator pos:line="280" pos:column="9">-&gt;<pos:position pos:line="280" pos:column="14"/></operator><name pos:line="280" pos:column="11">curl_do<pos:position pos:line="280" pos:column="18"/></name></name> <operator pos:line="280" pos:column="19">=<pos:position pos:line="280" pos:column="20"/></operator> <name pos:line="280" pos:column="21">http<pos:position pos:line="280" pos:column="25"/></name></expr>;<pos:position pos:line="280" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="281" pos:column="5">conn<pos:position pos:line="281" pos:column="9"/></name><operator pos:line="281" pos:column="9">-&gt;<pos:position pos:line="281" pos:column="14"/></operator><name pos:line="281" pos:column="11">curl_done<pos:position pos:line="281" pos:column="20"/></name></name> <operator pos:line="281" pos:column="21">=<pos:position pos:line="281" pos:column="22"/></operator> <name pos:line="281" pos:column="23">http_done<pos:position pos:line="281" pos:column="32"/></name></expr>;<pos:position pos:line="281" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="282" pos:column="5">conn<pos:position pos:line="282" pos:column="9"/></name><operator pos:line="282" pos:column="9">-&gt;<pos:position pos:line="282" pos:column="14"/></operator><name pos:line="282" pos:column="11">curl_connect<pos:position pos:line="282" pos:column="23"/></name></name> <operator pos:line="282" pos:column="24">=<pos:position pos:line="282" pos:column="25"/></operator> <name pos:line="282" pos:column="26">http_connect<pos:position pos:line="282" pos:column="38"/></name></expr>;<pos:position pos:line="282" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="283" pos:column="5">conn<pos:position pos:line="283" pos:column="9"/></name><operator pos:line="283" pos:column="9">-&gt;<pos:position pos:line="283" pos:column="14"/></operator><name pos:line="283" pos:column="11">curl_close<pos:position pos:line="283" pos:column="21"/></name></name> <operator pos:line="283" pos:column="22">=<pos:position pos:line="283" pos:column="23"/></operator> <name pos:line="283" pos:column="24">http_close<pos:position pos:line="283" pos:column="34"/></name></expr>;<pos:position pos:line="283" pos:column="35"/></expr_stmt>

<cpp:else pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">else<pos:position pos:line="285" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="285" pos:column="7">/* USE_SSLEAY */</comment>
    <expr_stmt><expr><call><name pos:line="286" pos:column="5">failf<pos:position pos:line="286" pos:column="10"/></name><argument_list pos:line="286" pos:column="10">(<argument><expr><name pos:line="286" pos:column="11">data<pos:position pos:line="286" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="17">"SSL is disabled, https: not supported!"<pos:position pos:line="286" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="59"/></expr_stmt>
    <return pos:line="287" pos:column="5">return <expr><name pos:line="287" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="287" pos:column="38"/></name></expr>;<pos:position pos:line="287" pos:column="39"/></return>
<cpp:endif pos:line="288" pos:column="1">#<cpp:directive pos:line="288" pos:column="2">endif<pos:position pos:line="288" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="288" pos:column="8">/* !USE_SSLEAY */</comment>
  }<pos:position pos:line="289" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="290" pos:column="3">else <if pos:line="290" pos:column="8">if <condition pos:line="290" pos:column="11">(<expr><call><name pos:line="290" pos:column="12">strequal<pos:position pos:line="290" pos:column="20"/></name><argument_list pos:line="290" pos:column="20">(<argument><expr><name><name pos:line="290" pos:column="21">conn<pos:position pos:line="290" pos:column="25"/></name><operator pos:line="290" pos:column="25">-&gt;<pos:position pos:line="290" pos:column="30"/></operator><name pos:line="290" pos:column="27">proto<pos:position pos:line="290" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="290" pos:column="34">"GOPHER"<pos:position pos:line="290" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="290" pos:column="44"/></condition><then pos:line="290" pos:column="44"> <block pos:line="290" pos:column="45">{
    <if pos:line="291" pos:column="5">if<condition pos:line="291" pos:column="7">(<expr><operator pos:line="291" pos:column="8">!<pos:position pos:line="291" pos:column="9"/></operator><name><name pos:line="291" pos:column="9">data<pos:position pos:line="291" pos:column="13"/></name><operator pos:line="291" pos:column="13">-&gt;<pos:position pos:line="291" pos:column="18"/></operator><name pos:line="291" pos:column="15">port<pos:position pos:line="291" pos:column="19"/></name></name></expr>)<pos:position pos:line="291" pos:column="20"/></condition><then pos:line="291" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="292" pos:column="7">data<pos:position pos:line="292" pos:column="11"/></name><operator pos:line="292" pos:column="11">-&gt;<pos:position pos:line="292" pos:column="16"/></operator><name pos:line="292" pos:column="13">port<pos:position pos:line="292" pos:column="17"/></name></name> <operator pos:line="292" pos:column="18">=<pos:position pos:line="292" pos:column="19"/></operator> <name pos:line="292" pos:column="20">PORT_GOPHER<pos:position pos:line="292" pos:column="31"/></name></expr>;<pos:position pos:line="292" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="293" pos:column="5">data<pos:position pos:line="293" pos:column="9"/></name><operator pos:line="293" pos:column="9">-&gt;<pos:position pos:line="293" pos:column="14"/></operator><name pos:line="293" pos:column="11">remote_port<pos:position pos:line="293" pos:column="22"/></name></name> <operator pos:line="293" pos:column="23">=<pos:position pos:line="293" pos:column="24"/></operator> <name pos:line="293" pos:column="25">PORT_GOPHER<pos:position pos:line="293" pos:column="36"/></name></expr>;<pos:position pos:line="293" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="294" pos:column="5">/* Skip /&lt;item-type&gt;/ in path if present */</comment>
    <if pos:line="295" pos:column="5">if <condition pos:line="295" pos:column="8">(<expr><call><name pos:line="295" pos:column="9">isdigit<pos:position pos:line="295" pos:column="16"/></name><argument_list pos:line="295" pos:column="16">(<argument><expr><operator pos:line="295" pos:column="17">(<pos:position pos:line="295" pos:column="18"/></operator><name pos:line="295" pos:column="18">int<pos:position pos:line="295" pos:column="21"/></name><operator pos:line="295" pos:column="21">)<pos:position pos:line="295" pos:column="22"/></operator><name><name pos:line="295" pos:column="22">conn<pos:position pos:line="295" pos:column="26"/></name><operator pos:line="295" pos:column="26">-&gt;<pos:position pos:line="295" pos:column="31"/></operator><name pos:line="295" pos:column="28">path<pos:position pos:line="295" pos:column="32"/></name><index pos:line="295" pos:column="32">[<expr><literal type="number" pos:line="295" pos:column="33">1<pos:position pos:line="295" pos:column="34"/></literal></expr>]<pos:position pos:line="295" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="295" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="295" pos:column="37"/></condition><then pos:line="295" pos:column="37"> <block pos:line="295" pos:column="38">{
      <expr_stmt><expr><name><name pos:line="296" pos:column="7">conn<pos:position pos:line="296" pos:column="11"/></name><operator pos:line="296" pos:column="11">-&gt;<pos:position pos:line="296" pos:column="16"/></operator><name pos:line="296" pos:column="13">ppath<pos:position pos:line="296" pos:column="18"/></name></name> <operator pos:line="296" pos:column="19">=<pos:position pos:line="296" pos:column="20"/></operator> <call><name pos:line="296" pos:column="21">strchr<pos:position pos:line="296" pos:column="27"/></name><argument_list pos:line="296" pos:column="27">(<argument><expr><operator pos:line="296" pos:column="28">&amp;<pos:position pos:line="296" pos:column="33"/></operator><name><name pos:line="296" pos:column="29">conn<pos:position pos:line="296" pos:column="33"/></name><operator pos:line="296" pos:column="33">-&gt;<pos:position pos:line="296" pos:column="38"/></operator><name pos:line="296" pos:column="35">path<pos:position pos:line="296" pos:column="39"/></name><index pos:line="296" pos:column="39">[<expr><literal type="number" pos:line="296" pos:column="40">1<pos:position pos:line="296" pos:column="41"/></literal></expr>]<pos:position pos:line="296" pos:column="42"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="296" pos:column="44">'/'<pos:position pos:line="296" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="296" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="49"/></expr_stmt>
      <if pos:line="297" pos:column="7">if <condition pos:line="297" pos:column="10">(<expr><name><name pos:line="297" pos:column="11">conn<pos:position pos:line="297" pos:column="15"/></name><operator pos:line="297" pos:column="15">-&gt;<pos:position pos:line="297" pos:column="20"/></operator><name pos:line="297" pos:column="17">ppath<pos:position pos:line="297" pos:column="22"/></name></name> <operator pos:line="297" pos:column="23">==<pos:position pos:line="297" pos:column="25"/></operator> <name pos:line="297" pos:column="26">NULL<pos:position pos:line="297" pos:column="30"/></name></expr>)<pos:position pos:line="297" pos:column="31"/></condition><then pos:line="297" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="298" pos:column="9">conn<pos:position pos:line="298" pos:column="13"/></name><operator pos:line="298" pos:column="13">-&gt;<pos:position pos:line="298" pos:column="18"/></operator><name pos:line="298" pos:column="15">ppath<pos:position pos:line="298" pos:column="20"/></name></name> <operator pos:line="298" pos:column="21">=<pos:position pos:line="298" pos:column="22"/></operator> <name><name pos:line="298" pos:column="23">conn<pos:position pos:line="298" pos:column="27"/></name><operator pos:line="298" pos:column="27">-&gt;<pos:position pos:line="298" pos:column="32"/></operator><name pos:line="298" pos:column="29">path<pos:position pos:line="298" pos:column="33"/></name></name></expr>;<pos:position pos:line="298" pos:column="34"/></expr_stmt></block></then></if>
      }<pos:position pos:line="299" pos:column="8"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="300" pos:column="5">conn<pos:position pos:line="300" pos:column="9"/></name><operator pos:line="300" pos:column="9">-&gt;<pos:position pos:line="300" pos:column="14"/></operator><name pos:line="300" pos:column="11">protocol<pos:position pos:line="300" pos:column="19"/></name></name> <operator pos:line="300" pos:column="20">|=<pos:position pos:line="300" pos:column="22"/></operator> <name pos:line="300" pos:column="23">PROT_GOPHER<pos:position pos:line="300" pos:column="34"/></name></expr>;<pos:position pos:line="300" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="301" pos:column="5">conn<pos:position pos:line="301" pos:column="9"/></name><operator pos:line="301" pos:column="9">-&gt;<pos:position pos:line="301" pos:column="14"/></operator><name pos:line="301" pos:column="11">curl_do<pos:position pos:line="301" pos:column="18"/></name></name> <operator pos:line="301" pos:column="19">=<pos:position pos:line="301" pos:column="20"/></operator> <name pos:line="301" pos:column="21">http<pos:position pos:line="301" pos:column="25"/></name></expr>;<pos:position pos:line="301" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="302" pos:column="5">conn<pos:position pos:line="302" pos:column="9"/></name><operator pos:line="302" pos:column="9">-&gt;<pos:position pos:line="302" pos:column="14"/></operator><name pos:line="302" pos:column="11">curl_done<pos:position pos:line="302" pos:column="20"/></name></name> <operator pos:line="302" pos:column="21">=<pos:position pos:line="302" pos:column="22"/></operator> <name pos:line="302" pos:column="23">http_done<pos:position pos:line="302" pos:column="32"/></name></expr>;<pos:position pos:line="302" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="303" pos:column="5">conn<pos:position pos:line="303" pos:column="9"/></name><operator pos:line="303" pos:column="9">-&gt;<pos:position pos:line="303" pos:column="14"/></operator><name pos:line="303" pos:column="11">curl_close<pos:position pos:line="303" pos:column="21"/></name></name> <operator pos:line="303" pos:column="22">=<pos:position pos:line="303" pos:column="23"/></operator> <name pos:line="303" pos:column="24">http_close<pos:position pos:line="303" pos:column="34"/></name></expr>;<pos:position pos:line="303" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="304" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="305" pos:column="3">else <if pos:line="305" pos:column="8">if<condition pos:line="305" pos:column="10">(<expr><call><name pos:line="305" pos:column="11">strequal<pos:position pos:line="305" pos:column="19"/></name><argument_list pos:line="305" pos:column="19">(<argument><expr><name><name pos:line="305" pos:column="20">conn<pos:position pos:line="305" pos:column="24"/></name><operator pos:line="305" pos:column="24">-&gt;<pos:position pos:line="305" pos:column="29"/></operator><name pos:line="305" pos:column="26">proto<pos:position pos:line="305" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="33">"FTP"<pos:position pos:line="305" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="305" pos:column="40"/></condition><then pos:line="305" pos:column="40"> <block pos:line="305" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="306" pos:column="5">char<pos:position pos:line="306" pos:column="9"/></name> <modifier pos:line="306" pos:column="10">*<pos:position pos:line="306" pos:column="11"/></modifier></type><name pos:line="306" pos:column="11">type<pos:position pos:line="306" pos:column="15"/></name></decl>;<pos:position pos:line="306" pos:column="16"/></decl_stmt>
    <if pos:line="307" pos:column="5">if<condition pos:line="307" pos:column="7">(<expr><operator pos:line="307" pos:column="8">!<pos:position pos:line="307" pos:column="9"/></operator><name><name pos:line="307" pos:column="9">data<pos:position pos:line="307" pos:column="13"/></name><operator pos:line="307" pos:column="13">-&gt;<pos:position pos:line="307" pos:column="18"/></operator><name pos:line="307" pos:column="15">port<pos:position pos:line="307" pos:column="19"/></name></name></expr>)<pos:position pos:line="307" pos:column="20"/></condition><then pos:line="307" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="308" pos:column="7">data<pos:position pos:line="308" pos:column="11"/></name><operator pos:line="308" pos:column="11">-&gt;<pos:position pos:line="308" pos:column="16"/></operator><name pos:line="308" pos:column="13">port<pos:position pos:line="308" pos:column="17"/></name></name> <operator pos:line="308" pos:column="18">=<pos:position pos:line="308" pos:column="19"/></operator> <name pos:line="308" pos:column="20">PORT_FTP<pos:position pos:line="308" pos:column="28"/></name></expr>;<pos:position pos:line="308" pos:column="29"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="309" pos:column="5">data<pos:position pos:line="309" pos:column="9"/></name><operator pos:line="309" pos:column="9">-&gt;<pos:position pos:line="309" pos:column="14"/></operator><name pos:line="309" pos:column="11">remote_port<pos:position pos:line="309" pos:column="22"/></name></name> <operator pos:line="309" pos:column="23">=<pos:position pos:line="309" pos:column="24"/></operator> <name pos:line="309" pos:column="25">PORT_FTP<pos:position pos:line="309" pos:column="33"/></name></expr>;<pos:position pos:line="309" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="310" pos:column="5">conn<pos:position pos:line="310" pos:column="9"/></name><operator pos:line="310" pos:column="9">-&gt;<pos:position pos:line="310" pos:column="14"/></operator><name pos:line="310" pos:column="11">protocol<pos:position pos:line="310" pos:column="19"/></name></name> <operator pos:line="310" pos:column="20">|=<pos:position pos:line="310" pos:column="22"/></operator> <name pos:line="310" pos:column="23">PROT_FTP<pos:position pos:line="310" pos:column="31"/></name></expr>;<pos:position pos:line="310" pos:column="32"/></expr_stmt>

    <if pos:line="312" pos:column="5">if<condition pos:line="312" pos:column="7">(<expr><name><name pos:line="312" pos:column="8">data<pos:position pos:line="312" pos:column="12"/></name><operator pos:line="312" pos:column="12">-&gt;<pos:position pos:line="312" pos:column="17"/></operator><name pos:line="312" pos:column="14">bits<pos:position pos:line="312" pos:column="18"/></name><operator pos:line="312" pos:column="18">.<pos:position pos:line="312" pos:column="19"/></operator><name pos:line="312" pos:column="19">httpproxy<pos:position pos:line="312" pos:column="28"/></name></name></expr>)<pos:position pos:line="312" pos:column="29"/></condition><then pos:line="312" pos:column="29"> <block pos:line="312" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="313" pos:column="7">conn<pos:position pos:line="313" pos:column="11"/></name><operator pos:line="313" pos:column="11">-&gt;<pos:position pos:line="313" pos:column="16"/></operator><name pos:line="313" pos:column="13">curl_do<pos:position pos:line="313" pos:column="20"/></name></name> <operator pos:line="313" pos:column="21">=<pos:position pos:line="313" pos:column="22"/></operator> <name pos:line="313" pos:column="23">http<pos:position pos:line="313" pos:column="27"/></name></expr>;<pos:position pos:line="313" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="314" pos:column="7">conn<pos:position pos:line="314" pos:column="11"/></name><operator pos:line="314" pos:column="11">-&gt;<pos:position pos:line="314" pos:column="16"/></operator><name pos:line="314" pos:column="13">curl_done<pos:position pos:line="314" pos:column="22"/></name></name> <operator pos:line="314" pos:column="23">=<pos:position pos:line="314" pos:column="24"/></operator> <name pos:line="314" pos:column="25">http_done<pos:position pos:line="314" pos:column="34"/></name></expr>;<pos:position pos:line="314" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="315" pos:column="7">conn<pos:position pos:line="315" pos:column="11"/></name><operator pos:line="315" pos:column="11">-&gt;<pos:position pos:line="315" pos:column="16"/></operator><name pos:line="315" pos:column="13">curl_close<pos:position pos:line="315" pos:column="23"/></name></name> <operator pos:line="315" pos:column="24">=<pos:position pos:line="315" pos:column="25"/></operator> <name pos:line="315" pos:column="26">http_close<pos:position pos:line="315" pos:column="36"/></name></expr>;<pos:position pos:line="315" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="316" pos:column="6"/></block></then>
    <else pos:line="317" pos:column="5">else <block pos:line="317" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="318" pos:column="7">conn<pos:position pos:line="318" pos:column="11"/></name><operator pos:line="318" pos:column="11">-&gt;<pos:position pos:line="318" pos:column="16"/></operator><name pos:line="318" pos:column="13">curl_do<pos:position pos:line="318" pos:column="20"/></name></name> <operator pos:line="318" pos:column="21">=<pos:position pos:line="318" pos:column="22"/></operator> <name pos:line="318" pos:column="23">ftp<pos:position pos:line="318" pos:column="26"/></name></expr>;<pos:position pos:line="318" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="319" pos:column="7">conn<pos:position pos:line="319" pos:column="11"/></name><operator pos:line="319" pos:column="11">-&gt;<pos:position pos:line="319" pos:column="16"/></operator><name pos:line="319" pos:column="13">curl_done<pos:position pos:line="319" pos:column="22"/></name></name> <operator pos:line="319" pos:column="23">=<pos:position pos:line="319" pos:column="24"/></operator> <name pos:line="319" pos:column="25">ftp_done<pos:position pos:line="319" pos:column="33"/></name></expr>;<pos:position pos:line="319" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="320" pos:column="7">conn<pos:position pos:line="320" pos:column="11"/></name><operator pos:line="320" pos:column="11">-&gt;<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="13">curl_connect<pos:position pos:line="320" pos:column="25"/></name></name> <operator pos:line="320" pos:column="26">=<pos:position pos:line="320" pos:column="27"/></operator> <name pos:line="320" pos:column="28">ftp_connect<pos:position pos:line="320" pos:column="39"/></name></expr>;<pos:position pos:line="320" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="321" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="323" pos:column="5">conn<pos:position pos:line="323" pos:column="9"/></name><operator pos:line="323" pos:column="9">-&gt;<pos:position pos:line="323" pos:column="14"/></operator><name pos:line="323" pos:column="11">ppath<pos:position pos:line="323" pos:column="16"/></name></name><operator pos:line="323" pos:column="16">++<pos:position pos:line="323" pos:column="18"/></operator></expr>;<pos:position pos:line="323" pos:column="19"/></expr_stmt> <comment type="block" pos:line="323" pos:column="20">/* don't include the initial slash */</comment>

    <comment type="block" pos:line="325" pos:column="5">/* FTP URLs support an extension like ";type=&lt;typecode&gt;" that
       we'll try to get now! */</comment>
    <expr_stmt><expr><name pos:line="327" pos:column="5">type<pos:position pos:line="327" pos:column="9"/></name><operator pos:line="327" pos:column="9">=<pos:position pos:line="327" pos:column="10"/></operator><call><name pos:line="327" pos:column="10">strstr<pos:position pos:line="327" pos:column="16"/></name><argument_list pos:line="327" pos:column="16">(<argument><expr><name><name pos:line="327" pos:column="17">conn<pos:position pos:line="327" pos:column="21"/></name><operator pos:line="327" pos:column="21">-&gt;<pos:position pos:line="327" pos:column="26"/></operator><name pos:line="327" pos:column="23">ppath<pos:position pos:line="327" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="30">";type="<pos:position pos:line="327" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="40"/></expr_stmt>
    <if pos:line="328" pos:column="5">if<condition pos:line="328" pos:column="7">(<expr><operator pos:line="328" pos:column="8">!<pos:position pos:line="328" pos:column="9"/></operator><name pos:line="328" pos:column="9">type<pos:position pos:line="328" pos:column="13"/></name></expr>)<pos:position pos:line="328" pos:column="14"/></condition><then pos:line="328" pos:column="14"> <block pos:line="328" pos:column="15">{
      <expr_stmt><expr><name pos:line="329" pos:column="7">type<pos:position pos:line="329" pos:column="11"/></name><operator pos:line="329" pos:column="11">=<pos:position pos:line="329" pos:column="12"/></operator><call><name pos:line="329" pos:column="12">strstr<pos:position pos:line="329" pos:column="18"/></name><argument_list pos:line="329" pos:column="18">(<argument><expr><name><name pos:line="329" pos:column="19">conn<pos:position pos:line="329" pos:column="23"/></name><operator pos:line="329" pos:column="23">-&gt;<pos:position pos:line="329" pos:column="28"/></operator><name pos:line="329" pos:column="25">gname<pos:position pos:line="329" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="329" pos:column="32">";type="<pos:position pos:line="329" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="330" pos:column="6"/></block></then></if>
    <if pos:line="331" pos:column="5">if<condition pos:line="331" pos:column="7">(<expr><name pos:line="331" pos:column="8">type<pos:position pos:line="331" pos:column="12"/></name></expr>)<pos:position pos:line="331" pos:column="13"/></condition><then pos:line="331" pos:column="13"> <block pos:line="331" pos:column="14">{
      <decl_stmt><decl><type><name pos:line="332" pos:column="7">char<pos:position pos:line="332" pos:column="11"/></name></type> <name pos:line="332" pos:column="12">command<pos:position pos:line="332" pos:column="19"/></name></decl>;<pos:position pos:line="332" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><operator pos:line="333" pos:column="7">*<pos:position pos:line="333" pos:column="8"/></operator><name pos:line="333" pos:column="8">type<pos:position pos:line="333" pos:column="12"/></name><operator pos:line="333" pos:column="12">=<pos:position pos:line="333" pos:column="13"/></operator><literal type="number" pos:line="333" pos:column="13">0<pos:position pos:line="333" pos:column="14"/></literal></expr>;<pos:position pos:line="333" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="334" pos:column="7">command<pos:position pos:line="334" pos:column="14"/></name> <operator pos:line="334" pos:column="15">=<pos:position pos:line="334" pos:column="16"/></operator> <call><name pos:line="334" pos:column="17">toupper<pos:position pos:line="334" pos:column="24"/></name><argument_list pos:line="334" pos:column="24">(<argument><expr><name><name pos:line="334" pos:column="25">type<pos:position pos:line="334" pos:column="29"/></name><index pos:line="334" pos:column="29">[<expr><literal type="number" pos:line="334" pos:column="30">6<pos:position pos:line="334" pos:column="31"/></literal></expr>]<pos:position pos:line="334" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="334" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="34"/></expr_stmt>
      <switch pos:line="335" pos:column="7">switch<condition pos:line="335" pos:column="13">(<expr><name pos:line="335" pos:column="14">command<pos:position pos:line="335" pos:column="21"/></name></expr>)<pos:position pos:line="335" pos:column="22"/></condition> <block pos:line="335" pos:column="23">{
      <case pos:line="336" pos:column="7">case <expr><literal type="char" pos:line="336" pos:column="12">'A'<pos:position pos:line="336" pos:column="15"/></literal></expr>:<pos:position pos:line="336" pos:column="16"/></case> <comment type="block" pos:line="336" pos:column="17">/* ASCII mode */</comment>
	<expr_stmt><expr><name><name pos:line="337" pos:column="9">data<pos:position pos:line="337" pos:column="13"/></name><operator pos:line="337" pos:column="13">-&gt;<pos:position pos:line="337" pos:column="18"/></operator><name pos:line="337" pos:column="15">bits<pos:position pos:line="337" pos:column="19"/></name><operator pos:line="337" pos:column="19">.<pos:position pos:line="337" pos:column="20"/></operator><name pos:line="337" pos:column="20">ftp_ascii<pos:position pos:line="337" pos:column="29"/></name></name> <operator pos:line="337" pos:column="30">=<pos:position pos:line="337" pos:column="31"/></operator> <literal type="number" pos:line="337" pos:column="32">1<pos:position pos:line="337" pos:column="33"/></literal></expr>;<pos:position pos:line="337" pos:column="34"/></expr_stmt>
	<break pos:line="338" pos:column="9">break;<pos:position pos:line="338" pos:column="15"/></break>
      <case pos:line="339" pos:column="7">case <expr><literal type="char" pos:line="339" pos:column="12">'D'<pos:position pos:line="339" pos:column="15"/></literal></expr>:<pos:position pos:line="339" pos:column="16"/></case> <comment type="block" pos:line="339" pos:column="17">/* directory mode */</comment>
	<expr_stmt><expr><name><name pos:line="340" pos:column="9">data<pos:position pos:line="340" pos:column="13"/></name><operator pos:line="340" pos:column="13">-&gt;<pos:position pos:line="340" pos:column="18"/></operator><name pos:line="340" pos:column="15">bits<pos:position pos:line="340" pos:column="19"/></name><operator pos:line="340" pos:column="19">.<pos:position pos:line="340" pos:column="20"/></operator><name pos:line="340" pos:column="20">ftp_list_only<pos:position pos:line="340" pos:column="33"/></name></name> <operator pos:line="340" pos:column="34">=<pos:position pos:line="340" pos:column="35"/></operator> <literal type="number" pos:line="340" pos:column="36">1<pos:position pos:line="340" pos:column="37"/></literal></expr>;<pos:position pos:line="340" pos:column="38"/></expr_stmt>
	<break pos:line="341" pos:column="9">break;<pos:position pos:line="341" pos:column="15"/></break>
      <case pos:line="342" pos:column="7">case <expr><literal type="char" pos:line="342" pos:column="12">'I'<pos:position pos:line="342" pos:column="15"/></literal></expr>:<pos:position pos:line="342" pos:column="16"/></case> <comment type="block" pos:line="342" pos:column="17">/* binary mode */</comment>
      <default pos:line="343" pos:column="7">default:<pos:position pos:line="343" pos:column="15"/></default>
	<comment type="block" pos:line="344" pos:column="9">/* switch off ASCII */</comment>
	<expr_stmt><expr><name><name pos:line="345" pos:column="9">data<pos:position pos:line="345" pos:column="13"/></name><operator pos:line="345" pos:column="13">-&gt;<pos:position pos:line="345" pos:column="18"/></operator><name pos:line="345" pos:column="15">bits<pos:position pos:line="345" pos:column="19"/></name><operator pos:line="345" pos:column="19">.<pos:position pos:line="345" pos:column="20"/></operator><name pos:line="345" pos:column="20">ftp_ascii<pos:position pos:line="345" pos:column="29"/></name></name> <operator pos:line="345" pos:column="30">=<pos:position pos:line="345" pos:column="31"/></operator> <literal type="number" pos:line="345" pos:column="32">0<pos:position pos:line="345" pos:column="33"/></literal></expr>;<pos:position pos:line="345" pos:column="34"/></expr_stmt>
	<break pos:line="346" pos:column="9">break;<pos:position pos:line="346" pos:column="15"/></break>
      }<pos:position pos:line="347" pos:column="8"/></block></switch>
    }<pos:position pos:line="348" pos:column="6"/></block></then></if>
  }<pos:position pos:line="349" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="350" pos:column="3">else <if pos:line="350" pos:column="8">if<condition pos:line="350" pos:column="10">(<expr><call><name pos:line="350" pos:column="11">strequal<pos:position pos:line="350" pos:column="19"/></name><argument_list pos:line="350" pos:column="19">(<argument><expr><name><name pos:line="350" pos:column="20">conn<pos:position pos:line="350" pos:column="24"/></name><operator pos:line="350" pos:column="24">-&gt;<pos:position pos:line="350" pos:column="29"/></operator><name pos:line="350" pos:column="26">proto<pos:position pos:line="350" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="33">"TELNET"<pos:position pos:line="350" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="350" pos:column="43"/></condition><then pos:line="350" pos:column="43"> <block pos:line="350" pos:column="44">{
    <comment type="block" pos:line="351" pos:column="5">/* telnet testing factory */</comment>
    <expr_stmt><expr><name><name pos:line="352" pos:column="5">conn<pos:position pos:line="352" pos:column="9"/></name><operator pos:line="352" pos:column="9">-&gt;<pos:position pos:line="352" pos:column="14"/></operator><name pos:line="352" pos:column="11">protocol<pos:position pos:line="352" pos:column="19"/></name></name> <operator pos:line="352" pos:column="20">|=<pos:position pos:line="352" pos:column="22"/></operator> <name pos:line="352" pos:column="23">PROT_TELNET<pos:position pos:line="352" pos:column="34"/></name></expr>;<pos:position pos:line="352" pos:column="35"/></expr_stmt>
    <if pos:line="353" pos:column="5">if<condition pos:line="353" pos:column="7">(<expr><operator pos:line="353" pos:column="8">!<pos:position pos:line="353" pos:column="9"/></operator><name><name pos:line="353" pos:column="9">data<pos:position pos:line="353" pos:column="13"/></name><operator pos:line="353" pos:column="13">-&gt;<pos:position pos:line="353" pos:column="18"/></operator><name pos:line="353" pos:column="15">port<pos:position pos:line="353" pos:column="19"/></name></name></expr>)<pos:position pos:line="353" pos:column="20"/></condition><then pos:line="353" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="354" pos:column="7">data<pos:position pos:line="354" pos:column="11"/></name><operator pos:line="354" pos:column="11">-&gt;<pos:position pos:line="354" pos:column="16"/></operator><name pos:line="354" pos:column="13">port<pos:position pos:line="354" pos:column="17"/></name></name> <operator pos:line="354" pos:column="18">=<pos:position pos:line="354" pos:column="19"/></operator> <name pos:line="354" pos:column="20">PORT_TELNET<pos:position pos:line="354" pos:column="31"/></name></expr>;<pos:position pos:line="354" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="355" pos:column="5">data<pos:position pos:line="355" pos:column="9"/></name><operator pos:line="355" pos:column="9">-&gt;<pos:position pos:line="355" pos:column="14"/></operator><name pos:line="355" pos:column="11">remote_port<pos:position pos:line="355" pos:column="22"/></name></name> <operator pos:line="355" pos:column="23">=<pos:position pos:line="355" pos:column="24"/></operator> <name pos:line="355" pos:column="25">PORT_TELNET<pos:position pos:line="355" pos:column="36"/></name></expr>;<pos:position pos:line="355" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="357" pos:column="5">conn<pos:position pos:line="357" pos:column="9"/></name><operator pos:line="357" pos:column="9">-&gt;<pos:position pos:line="357" pos:column="14"/></operator><name pos:line="357" pos:column="11">curl_do<pos:position pos:line="357" pos:column="18"/></name></name> <operator pos:line="357" pos:column="19">=<pos:position pos:line="357" pos:column="20"/></operator> <name pos:line="357" pos:column="21">telnet<pos:position pos:line="357" pos:column="27"/></name></expr>;<pos:position pos:line="357" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="358" pos:column="5">conn<pos:position pos:line="358" pos:column="9"/></name><operator pos:line="358" pos:column="9">-&gt;<pos:position pos:line="358" pos:column="14"/></operator><name pos:line="358" pos:column="11">curl_done<pos:position pos:line="358" pos:column="20"/></name></name> <operator pos:line="358" pos:column="21">=<pos:position pos:line="358" pos:column="22"/></operator> <name pos:line="358" pos:column="23">telnet_done<pos:position pos:line="358" pos:column="34"/></name></expr>;<pos:position pos:line="358" pos:column="35"/></expr_stmt>

  }<pos:position pos:line="360" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="361" pos:column="3">else <if pos:line="361" pos:column="8">if <condition pos:line="361" pos:column="11">(<expr><call><name pos:line="361" pos:column="12">strequal<pos:position pos:line="361" pos:column="20"/></name><argument_list pos:line="361" pos:column="20">(<argument><expr><name><name pos:line="361" pos:column="21">conn<pos:position pos:line="361" pos:column="25"/></name><operator pos:line="361" pos:column="25">-&gt;<pos:position pos:line="361" pos:column="30"/></operator><name pos:line="361" pos:column="27">proto<pos:position pos:line="361" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="361" pos:column="34">"DICT"<pos:position pos:line="361" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="361" pos:column="42"/></condition><then pos:line="361" pos:column="42"> <block pos:line="361" pos:column="43">{
    <expr_stmt><expr><name><name pos:line="362" pos:column="5">conn<pos:position pos:line="362" pos:column="9"/></name><operator pos:line="362" pos:column="9">-&gt;<pos:position pos:line="362" pos:column="14"/></operator><name pos:line="362" pos:column="11">protocol<pos:position pos:line="362" pos:column="19"/></name></name> <operator pos:line="362" pos:column="20">|=<pos:position pos:line="362" pos:column="22"/></operator> <name pos:line="362" pos:column="23">PROT_DICT<pos:position pos:line="362" pos:column="32"/></name></expr>;<pos:position pos:line="362" pos:column="33"/></expr_stmt>
    <if pos:line="363" pos:column="5">if<condition pos:line="363" pos:column="7">(<expr><operator pos:line="363" pos:column="8">!<pos:position pos:line="363" pos:column="9"/></operator><name><name pos:line="363" pos:column="9">data<pos:position pos:line="363" pos:column="13"/></name><operator pos:line="363" pos:column="13">-&gt;<pos:position pos:line="363" pos:column="18"/></operator><name pos:line="363" pos:column="15">port<pos:position pos:line="363" pos:column="19"/></name></name></expr>)<pos:position pos:line="363" pos:column="20"/></condition><then pos:line="363" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="364" pos:column="7">data<pos:position pos:line="364" pos:column="11"/></name><operator pos:line="364" pos:column="11">-&gt;<pos:position pos:line="364" pos:column="16"/></operator><name pos:line="364" pos:column="13">port<pos:position pos:line="364" pos:column="17"/></name></name> <operator pos:line="364" pos:column="18">=<pos:position pos:line="364" pos:column="19"/></operator> <name pos:line="364" pos:column="20">PORT_DICT<pos:position pos:line="364" pos:column="29"/></name></expr>;<pos:position pos:line="364" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="365" pos:column="5">data<pos:position pos:line="365" pos:column="9"/></name><operator pos:line="365" pos:column="9">-&gt;<pos:position pos:line="365" pos:column="14"/></operator><name pos:line="365" pos:column="11">remote_port<pos:position pos:line="365" pos:column="22"/></name></name> <operator pos:line="365" pos:column="23">=<pos:position pos:line="365" pos:column="24"/></operator> <name pos:line="365" pos:column="25">PORT_DICT<pos:position pos:line="365" pos:column="34"/></name></expr>;<pos:position pos:line="365" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="366" pos:column="5">conn<pos:position pos:line="366" pos:column="9"/></name><operator pos:line="366" pos:column="9">-&gt;<pos:position pos:line="366" pos:column="14"/></operator><name pos:line="366" pos:column="11">curl_do<pos:position pos:line="366" pos:column="18"/></name></name> <operator pos:line="366" pos:column="19">=<pos:position pos:line="366" pos:column="20"/></operator> <name pos:line="366" pos:column="21">dict<pos:position pos:line="366" pos:column="25"/></name></expr>;<pos:position pos:line="366" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="367" pos:column="5">conn<pos:position pos:line="367" pos:column="9"/></name><operator pos:line="367" pos:column="9">-&gt;<pos:position pos:line="367" pos:column="14"/></operator><name pos:line="367" pos:column="11">curl_done<pos:position pos:line="367" pos:column="20"/></name></name> <operator pos:line="367" pos:column="21">=<pos:position pos:line="367" pos:column="22"/></operator> <name pos:line="367" pos:column="23">dict_done<pos:position pos:line="367" pos:column="32"/></name></expr>;<pos:position pos:line="367" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="368" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="369" pos:column="3">else <if pos:line="369" pos:column="8">if <condition pos:line="369" pos:column="11">(<expr><call><name pos:line="369" pos:column="12">strequal<pos:position pos:line="369" pos:column="20"/></name><argument_list pos:line="369" pos:column="20">(<argument><expr><name><name pos:line="369" pos:column="21">conn<pos:position pos:line="369" pos:column="25"/></name><operator pos:line="369" pos:column="25">-&gt;<pos:position pos:line="369" pos:column="30"/></operator><name pos:line="369" pos:column="27">proto<pos:position pos:line="369" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="34">"LDAP"<pos:position pos:line="369" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="369" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="369" pos:column="42"/></condition><then pos:line="369" pos:column="42"> <block pos:line="369" pos:column="43">{
    <expr_stmt><expr><name><name pos:line="370" pos:column="5">conn<pos:position pos:line="370" pos:column="9"/></name><operator pos:line="370" pos:column="9">-&gt;<pos:position pos:line="370" pos:column="14"/></operator><name pos:line="370" pos:column="11">protocol<pos:position pos:line="370" pos:column="19"/></name></name> <operator pos:line="370" pos:column="20">|=<pos:position pos:line="370" pos:column="22"/></operator> <name pos:line="370" pos:column="23">PROT_LDAP<pos:position pos:line="370" pos:column="32"/></name></expr>;<pos:position pos:line="370" pos:column="33"/></expr_stmt>
    <if pos:line="371" pos:column="5">if<condition pos:line="371" pos:column="7">(<expr><operator pos:line="371" pos:column="8">!<pos:position pos:line="371" pos:column="9"/></operator><name><name pos:line="371" pos:column="9">data<pos:position pos:line="371" pos:column="13"/></name><operator pos:line="371" pos:column="13">-&gt;<pos:position pos:line="371" pos:column="18"/></operator><name pos:line="371" pos:column="15">port<pos:position pos:line="371" pos:column="19"/></name></name></expr>)<pos:position pos:line="371" pos:column="20"/></condition><then pos:line="371" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="372" pos:column="7">data<pos:position pos:line="372" pos:column="11"/></name><operator pos:line="372" pos:column="11">-&gt;<pos:position pos:line="372" pos:column="16"/></operator><name pos:line="372" pos:column="13">port<pos:position pos:line="372" pos:column="17"/></name></name> <operator pos:line="372" pos:column="18">=<pos:position pos:line="372" pos:column="19"/></operator> <name pos:line="372" pos:column="20">PORT_LDAP<pos:position pos:line="372" pos:column="29"/></name></expr>;<pos:position pos:line="372" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="373" pos:column="5">data<pos:position pos:line="373" pos:column="9"/></name><operator pos:line="373" pos:column="9">-&gt;<pos:position pos:line="373" pos:column="14"/></operator><name pos:line="373" pos:column="11">remote_port<pos:position pos:line="373" pos:column="22"/></name></name> <operator pos:line="373" pos:column="23">=<pos:position pos:line="373" pos:column="24"/></operator> <name pos:line="373" pos:column="25">PORT_LDAP<pos:position pos:line="373" pos:column="34"/></name></expr>;<pos:position pos:line="373" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="374" pos:column="5">conn<pos:position pos:line="374" pos:column="9"/></name><operator pos:line="374" pos:column="9">-&gt;<pos:position pos:line="374" pos:column="14"/></operator><name pos:line="374" pos:column="11">curl_do<pos:position pos:line="374" pos:column="18"/></name></name> <operator pos:line="374" pos:column="19">=<pos:position pos:line="374" pos:column="20"/></operator> <name pos:line="374" pos:column="21">ldap<pos:position pos:line="374" pos:column="25"/></name></expr>;<pos:position pos:line="374" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="375" pos:column="5">conn<pos:position pos:line="375" pos:column="9"/></name><operator pos:line="375" pos:column="9">-&gt;<pos:position pos:line="375" pos:column="14"/></operator><name pos:line="375" pos:column="11">curl_done<pos:position pos:line="375" pos:column="20"/></name></name> <operator pos:line="375" pos:column="21">=<pos:position pos:line="375" pos:column="22"/></operator> <name pos:line="375" pos:column="23">ldap_done<pos:position pos:line="375" pos:column="32"/></name></expr>;<pos:position pos:line="375" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="376" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="377" pos:column="3">else <if pos:line="377" pos:column="8">if <condition pos:line="377" pos:column="11">(<expr><call><name pos:line="377" pos:column="12">strequal<pos:position pos:line="377" pos:column="20"/></name><argument_list pos:line="377" pos:column="20">(<argument><expr><name><name pos:line="377" pos:column="21">conn<pos:position pos:line="377" pos:column="25"/></name><operator pos:line="377" pos:column="25">-&gt;<pos:position pos:line="377" pos:column="30"/></operator><name pos:line="377" pos:column="27">proto<pos:position pos:line="377" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="34">"FILE"<pos:position pos:line="377" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="377" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="377" pos:column="42"/></condition><then pos:line="377" pos:column="42"> <block pos:line="377" pos:column="43">{
    <expr_stmt><expr><name><name pos:line="378" pos:column="5">conn<pos:position pos:line="378" pos:column="9"/></name><operator pos:line="378" pos:column="9">-&gt;<pos:position pos:line="378" pos:column="14"/></operator><name pos:line="378" pos:column="11">protocol<pos:position pos:line="378" pos:column="19"/></name></name> <operator pos:line="378" pos:column="20">|=<pos:position pos:line="378" pos:column="22"/></operator> <name pos:line="378" pos:column="23">PROT_FILE<pos:position pos:line="378" pos:column="32"/></name></expr>;<pos:position pos:line="378" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="380" pos:column="5">conn<pos:position pos:line="380" pos:column="9"/></name><operator pos:line="380" pos:column="9">-&gt;<pos:position pos:line="380" pos:column="14"/></operator><name pos:line="380" pos:column="11">curl_do<pos:position pos:line="380" pos:column="18"/></name></name> <operator pos:line="380" pos:column="19">=<pos:position pos:line="380" pos:column="20"/></operator> <name pos:line="380" pos:column="21">file<pos:position pos:line="380" pos:column="25"/></name></expr>;<pos:position pos:line="380" pos:column="26"/></expr_stmt>
    <comment type="block" pos:line="381" pos:column="5">/* no done() function */</comment>
  }<pos:position pos:line="382" pos:column="4"/></block></then></if></elseif>

  <else pos:line="384" pos:column="3">else <block pos:line="384" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="385" pos:column="5">failf<pos:position pos:line="385" pos:column="10"/></name><argument_list pos:line="385" pos:column="10">(<argument><expr><name pos:line="385" pos:column="11">data<pos:position pos:line="385" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="385" pos:column="17">"Unsupported protocol: %s"<pos:position pos:line="385" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="385" pos:column="45">conn<pos:position pos:line="385" pos:column="49"/></name><operator pos:line="385" pos:column="49">-&gt;<pos:position pos:line="385" pos:column="54"/></operator><name pos:line="385" pos:column="51">proto<pos:position pos:line="385" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="385" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="58"/></expr_stmt>
    <return pos:line="386" pos:column="5">return <expr><name pos:line="386" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="386" pos:column="38"/></name></expr>;<pos:position pos:line="386" pos:column="39"/></return>
  }<pos:position pos:line="387" pos:column="4"/></block></else></if>

  <if pos:line="389" pos:column="3">if<condition pos:line="389" pos:column="5">(<expr><name><name pos:line="389" pos:column="6">data<pos:position pos:line="389" pos:column="10"/></name><operator pos:line="389" pos:column="10">-&gt;<pos:position pos:line="389" pos:column="15"/></operator><name pos:line="389" pos:column="12">bits<pos:position pos:line="389" pos:column="16"/></name><operator pos:line="389" pos:column="16">.<pos:position pos:line="389" pos:column="17"/></operator><name pos:line="389" pos:column="17">use_netrc<pos:position pos:line="389" pos:column="26"/></name></name></expr>)<pos:position pos:line="389" pos:column="27"/></condition><then pos:line="389" pos:column="27"> <block pos:line="389" pos:column="28">{
    <if pos:line="390" pos:column="5">if<condition pos:line="390" pos:column="7">(<expr><call><name pos:line="390" pos:column="8">ParseNetrc<pos:position pos:line="390" pos:column="18"/></name><argument_list pos:line="390" pos:column="18">(<argument><expr><name><name pos:line="390" pos:column="19">data<pos:position pos:line="390" pos:column="23"/></name><operator pos:line="390" pos:column="23">-&gt;<pos:position pos:line="390" pos:column="28"/></operator><name pos:line="390" pos:column="25">hostname<pos:position pos:line="390" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="390" pos:column="35">data<pos:position pos:line="390" pos:column="39"/></name><operator pos:line="390" pos:column="39">-&gt;<pos:position pos:line="390" pos:column="44"/></operator><name pos:line="390" pos:column="41">user<pos:position pos:line="390" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="390" pos:column="47">data<pos:position pos:line="390" pos:column="51"/></name><operator pos:line="390" pos:column="51">-&gt;<pos:position pos:line="390" pos:column="56"/></operator><name pos:line="390" pos:column="53">passwd<pos:position pos:line="390" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="390" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="390" pos:column="61"/></condition><then pos:line="390" pos:column="61"> <block pos:line="390" pos:column="62">{
      <expr_stmt><expr><call><name pos:line="391" pos:column="7">infof<pos:position pos:line="391" pos:column="12"/></name><argument_list pos:line="391" pos:column="12">(<argument><expr><name pos:line="391" pos:column="13">data<pos:position pos:line="391" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="391" pos:column="19">"Couldn't find host %s in the .netrc file, using defaults"<pos:position pos:line="391" pos:column="77"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="392" pos:column="13">data<pos:position pos:line="392" pos:column="17"/></name><operator pos:line="392" pos:column="17">-&gt;<pos:position pos:line="392" pos:column="22"/></operator><name pos:line="392" pos:column="19">hostname<pos:position pos:line="392" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="392" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="393" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="394" pos:column="5">/* weather we failed or not, we don't know which fields that were filled
       in anyway */</comment>
    <if pos:line="396" pos:column="5">if<condition pos:line="396" pos:column="7">(<expr><operator pos:line="396" pos:column="8">!<pos:position pos:line="396" pos:column="9"/></operator><name><name pos:line="396" pos:column="9">data<pos:position pos:line="396" pos:column="13"/></name><operator pos:line="396" pos:column="13">-&gt;<pos:position pos:line="396" pos:column="18"/></operator><name pos:line="396" pos:column="15">user<pos:position pos:line="396" pos:column="19"/></name><index pos:line="396" pos:column="19">[<expr><literal type="number" pos:line="396" pos:column="20">0<pos:position pos:line="396" pos:column="21"/></literal></expr>]<pos:position pos:line="396" pos:column="22"/></index></name></expr>)<pos:position pos:line="396" pos:column="23"/></condition><then pos:line="396" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="397" pos:column="7">strcpy<pos:position pos:line="397" pos:column="13"/></name><argument_list pos:line="397" pos:column="13">(<argument><expr><name><name pos:line="397" pos:column="14">data<pos:position pos:line="397" pos:column="18"/></name><operator pos:line="397" pos:column="18">-&gt;<pos:position pos:line="397" pos:column="23"/></operator><name pos:line="397" pos:column="20">user<pos:position pos:line="397" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="26">CURL_DEFAULT_USER<pos:position pos:line="397" pos:column="43"/></name></expr></argument>)<pos:position pos:line="397" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="45"/></expr_stmt></block></then></if>
    <if pos:line="398" pos:column="5">if<condition pos:line="398" pos:column="7">(<expr><operator pos:line="398" pos:column="8">!<pos:position pos:line="398" pos:column="9"/></operator><name><name pos:line="398" pos:column="9">data<pos:position pos:line="398" pos:column="13"/></name><operator pos:line="398" pos:column="13">-&gt;<pos:position pos:line="398" pos:column="18"/></operator><name pos:line="398" pos:column="15">passwd<pos:position pos:line="398" pos:column="21"/></name><index pos:line="398" pos:column="21">[<expr><literal type="number" pos:line="398" pos:column="22">0<pos:position pos:line="398" pos:column="23"/></literal></expr>]<pos:position pos:line="398" pos:column="24"/></index></name></expr>)<pos:position pos:line="398" pos:column="25"/></condition><then pos:line="398" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="399" pos:column="7">strcpy<pos:position pos:line="399" pos:column="13"/></name><argument_list pos:line="399" pos:column="13">(<argument><expr><name><name pos:line="399" pos:column="14">data<pos:position pos:line="399" pos:column="18"/></name><operator pos:line="399" pos:column="18">-&gt;<pos:position pos:line="399" pos:column="23"/></operator><name pos:line="399" pos:column="20">passwd<pos:position pos:line="399" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="399" pos:column="28">CURL_DEFAULT_PASSWORD<pos:position pos:line="399" pos:column="49"/></name></expr></argument>)<pos:position pos:line="399" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="51"/></expr_stmt></block></then></if>
    <if pos:line="400" pos:column="5">if<condition pos:line="400" pos:column="7">(<expr><name><name pos:line="400" pos:column="8">conn<pos:position pos:line="400" pos:column="12"/></name><operator pos:line="400" pos:column="12">-&gt;<pos:position pos:line="400" pos:column="17"/></operator><name pos:line="400" pos:column="14">protocol<pos:position pos:line="400" pos:column="22"/></name></name><operator pos:line="400" pos:column="22">&amp;<pos:position pos:line="400" pos:column="27"/></operator><name pos:line="400" pos:column="23">PROT_HTTP<pos:position pos:line="400" pos:column="32"/></name></expr>)<pos:position pos:line="400" pos:column="33"/></condition><then pos:line="400" pos:column="33"> <block pos:line="400" pos:column="34">{
      <expr_stmt><expr><name><name pos:line="401" pos:column="7">data<pos:position pos:line="401" pos:column="11"/></name><operator pos:line="401" pos:column="11">-&gt;<pos:position pos:line="401" pos:column="16"/></operator><name pos:line="401" pos:column="13">bits<pos:position pos:line="401" pos:column="17"/></name><operator pos:line="401" pos:column="17">.<pos:position pos:line="401" pos:column="18"/></operator><name pos:line="401" pos:column="18">user_passwd<pos:position pos:line="401" pos:column="29"/></name></name> <operator pos:line="401" pos:column="30">=<pos:position pos:line="401" pos:column="31"/></operator> <literal type="number" pos:line="401" pos:column="32">1<pos:position pos:line="401" pos:column="33"/></literal></expr>;<pos:position pos:line="401" pos:column="34"/></expr_stmt> <comment type="block" pos:line="401" pos:column="35">/* enable user+password */</comment>
    }<pos:position pos:line="402" pos:column="6"/></block></then></if>
  }<pos:position pos:line="403" pos:column="4"/></block></then>
  <elseif pos:line="404" pos:column="3">else <if pos:line="404" pos:column="8">if<condition pos:line="404" pos:column="10">(<expr><operator pos:line="404" pos:column="11">!<pos:position pos:line="404" pos:column="12"/></operator><operator pos:line="404" pos:column="12">(<pos:position pos:line="404" pos:column="13"/></operator><name><name pos:line="404" pos:column="13">data<pos:position pos:line="404" pos:column="17"/></name><operator pos:line="404" pos:column="17">-&gt;<pos:position pos:line="404" pos:column="22"/></operator><name pos:line="404" pos:column="19">bits<pos:position pos:line="404" pos:column="23"/></name><operator pos:line="404" pos:column="23">.<pos:position pos:line="404" pos:column="24"/></operator><name pos:line="404" pos:column="24">user_passwd<pos:position pos:line="404" pos:column="35"/></name></name><operator pos:line="404" pos:column="35">)<pos:position pos:line="404" pos:column="36"/></operator> <operator pos:line="404" pos:column="37">&amp;&amp;<pos:position pos:line="404" pos:column="47"/></operator>
	  <operator pos:line="405" pos:column="11">(<pos:position pos:line="405" pos:column="12"/></operator><name><name pos:line="405" pos:column="12">conn<pos:position pos:line="405" pos:column="16"/></name><operator pos:line="405" pos:column="16">-&gt;<pos:position pos:line="405" pos:column="21"/></operator><name pos:line="405" pos:column="18">protocol<pos:position pos:line="405" pos:column="26"/></name></name> <operator pos:line="405" pos:column="27">&amp;<pos:position pos:line="405" pos:column="32"/></operator> <operator pos:line="405" pos:column="29">(<pos:position pos:line="405" pos:column="30"/></operator><name pos:line="405" pos:column="30">PROT_FTP<pos:position pos:line="405" pos:column="38"/></name><operator pos:line="405" pos:column="38">|<pos:position pos:line="405" pos:column="39"/></operator><name pos:line="405" pos:column="39">PROT_HTTP<pos:position pos:line="405" pos:column="48"/></name><operator pos:line="405" pos:column="48">)<pos:position pos:line="405" pos:column="49"/></operator><operator pos:line="405" pos:column="49">)<pos:position pos:line="405" pos:column="50"/></operator></expr> )<pos:position pos:line="405" pos:column="52"/></condition><then pos:line="405" pos:column="52"> <block pos:line="405" pos:column="53">{
    <comment type="block" pos:line="406" pos:column="5">/* This is a FTP or HTTP URL, and we haven't got the user+password in
       the extra parameter, we will now try to extract the possible
       user+password pair in a string like:
       ftp://user:password@ftp.my.site:8021/README */</comment>
    <decl_stmt><decl><type><name pos:line="410" pos:column="5">char<pos:position pos:line="410" pos:column="9"/></name> <modifier pos:line="410" pos:column="10">*<pos:position pos:line="410" pos:column="11"/></modifier></type><name pos:line="410" pos:column="11">ptr<pos:position pos:line="410" pos:column="14"/></name><init pos:line="410" pos:column="14">=<expr><name pos:line="410" pos:column="15">NULL<pos:position pos:line="410" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="410" pos:column="20"/></decl_stmt> <comment type="block" pos:line="410" pos:column="21">/* assign to remove possible warnings */</comment>
<cpp:if pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">if<pos:position pos:line="411" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="411" pos:column="5">0<pos:position pos:line="411" pos:column="6"/></literal></expr></cpp:if>
    if(':' == *conn-&gt;name) {
      failf(data, "URL malformat: user can't be zero length");
      return CURLE_URL_MALFORMAT_USER;
    }
<cpp:endif pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">endif<pos:position pos:line="416" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="417" pos:column="5">if<condition pos:line="417" pos:column="7">(<expr><name pos:line="417" pos:column="8">ptr<pos:position pos:line="417" pos:column="11"/></name><operator pos:line="417" pos:column="11">=<pos:position pos:line="417" pos:column="12"/></operator><call><name pos:line="417" pos:column="12">strchr<pos:position pos:line="417" pos:column="18"/></name><argument_list pos:line="417" pos:column="18">(<argument><expr><name><name pos:line="417" pos:column="19">conn<pos:position pos:line="417" pos:column="23"/></name><operator pos:line="417" pos:column="23">-&gt;<pos:position pos:line="417" pos:column="28"/></operator><name pos:line="417" pos:column="25">name<pos:position pos:line="417" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="417" pos:column="31">'@'<pos:position pos:line="417" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="417" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="417" pos:column="36"/></condition><then pos:line="417" pos:column="36"> <block pos:line="417" pos:column="37">{
      <comment type="block" pos:line="418" pos:column="7">/* there's a user+password given here, to the left of the @ */</comment>

      <expr_stmt><expr><name><name pos:line="420" pos:column="7">data<pos:position pos:line="420" pos:column="11"/></name><operator pos:line="420" pos:column="11">-&gt;<pos:position pos:line="420" pos:column="16"/></operator><name pos:line="420" pos:column="13">user<pos:position pos:line="420" pos:column="17"/></name><index pos:line="420" pos:column="17">[<expr><literal type="number" pos:line="420" pos:column="18">0<pos:position pos:line="420" pos:column="19"/></literal></expr>]<pos:position pos:line="420" pos:column="20"/></index></name> <operator pos:line="420" pos:column="21">=<pos:position pos:line="420" pos:column="22"/></operator><literal type="number" pos:line="420" pos:column="22">0<pos:position pos:line="420" pos:column="23"/></literal></expr>;<pos:position pos:line="420" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="421" pos:column="7">data<pos:position pos:line="421" pos:column="11"/></name><operator pos:line="421" pos:column="11">-&gt;<pos:position pos:line="421" pos:column="16"/></operator><name pos:line="421" pos:column="13">passwd<pos:position pos:line="421" pos:column="19"/></name><index pos:line="421" pos:column="19">[<expr><literal type="number" pos:line="421" pos:column="20">0<pos:position pos:line="421" pos:column="21"/></literal></expr>]<pos:position pos:line="421" pos:column="22"/></index></name><operator pos:line="421" pos:column="22">=<pos:position pos:line="421" pos:column="23"/></operator><literal type="number" pos:line="421" pos:column="23">0<pos:position pos:line="421" pos:column="24"/></literal></expr>;<pos:position pos:line="421" pos:column="25"/></expr_stmt>

      <if pos:line="423" pos:column="7">if<condition pos:line="423" pos:column="9">(<expr><operator pos:line="423" pos:column="10">*<pos:position pos:line="423" pos:column="11"/></operator><name><name pos:line="423" pos:column="11">conn<pos:position pos:line="423" pos:column="15"/></name><operator pos:line="423" pos:column="15">-&gt;<pos:position pos:line="423" pos:column="20"/></operator><name pos:line="423" pos:column="17">name<pos:position pos:line="423" pos:column="21"/></name></name> <operator pos:line="423" pos:column="22">!=<pos:position pos:line="423" pos:column="24"/></operator> <literal type="char" pos:line="423" pos:column="25">':'<pos:position pos:line="423" pos:column="28"/></literal></expr>)<pos:position pos:line="423" pos:column="29"/></condition><then pos:line="423" pos:column="29"> <block pos:line="423" pos:column="30">{
        <comment type="block" pos:line="424" pos:column="9">/* the name is given, get user+password */</comment>
        <expr_stmt><expr><call><name pos:line="425" pos:column="9">sscanf<pos:position pos:line="425" pos:column="15"/></name><argument_list pos:line="425" pos:column="15">(<argument><expr><name><name pos:line="425" pos:column="16">conn<pos:position pos:line="425" pos:column="20"/></name><operator pos:line="425" pos:column="20">-&gt;<pos:position pos:line="425" pos:column="25"/></operator><name pos:line="425" pos:column="22">name<pos:position pos:line="425" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="425" pos:column="28">"%127[^:]:%127[^@]"<pos:position pos:line="425" pos:column="47"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="426" pos:column="16">data<pos:position pos:line="426" pos:column="20"/></name><operator pos:line="426" pos:column="20">-&gt;<pos:position pos:line="426" pos:column="25"/></operator><name pos:line="426" pos:column="22">user<pos:position pos:line="426" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="426" pos:column="28">data<pos:position pos:line="426" pos:column="32"/></name><operator pos:line="426" pos:column="32">-&gt;<pos:position pos:line="426" pos:column="37"/></operator><name pos:line="426" pos:column="34">passwd<pos:position pos:line="426" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="426" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="427" pos:column="8"/></block></then>
      <else pos:line="428" pos:column="7">else
        <comment type="block" pos:line="429" pos:column="9">/* no name given, get the password only */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="9">sscanf<pos:position pos:line="430" pos:column="15"/></name><argument_list pos:line="430" pos:column="15">(<argument><expr><name><name pos:line="430" pos:column="16">conn<pos:position pos:line="430" pos:column="20"/></name><operator pos:line="430" pos:column="20">-&gt;<pos:position pos:line="430" pos:column="25"/></operator><name pos:line="430" pos:column="22">name<pos:position pos:line="430" pos:column="26"/></name></name><operator pos:line="430" pos:column="26">+<pos:position pos:line="430" pos:column="27"/></operator><literal type="number" pos:line="430" pos:column="27">1<pos:position pos:line="430" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="430" pos:column="30">"%127[^@]"<pos:position pos:line="430" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="430" pos:column="42">data<pos:position pos:line="430" pos:column="46"/></name><operator pos:line="430" pos:column="46">-&gt;<pos:position pos:line="430" pos:column="51"/></operator><name pos:line="430" pos:column="48">passwd<pos:position pos:line="430" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="430" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="56"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="432" pos:column="7">/* check for password, if no ask for one */</comment>
      <if pos:line="433" pos:column="7">if<condition pos:line="433" pos:column="9">( <expr><operator pos:line="433" pos:column="11">!<pos:position pos:line="433" pos:column="12"/></operator><name><name pos:line="433" pos:column="12">data<pos:position pos:line="433" pos:column="16"/></name><operator pos:line="433" pos:column="16">-&gt;<pos:position pos:line="433" pos:column="21"/></operator><name pos:line="433" pos:column="18">passwd<pos:position pos:line="433" pos:column="24"/></name><index pos:line="433" pos:column="24">[<expr><literal type="number" pos:line="433" pos:column="25">0<pos:position pos:line="433" pos:column="26"/></literal></expr>]<pos:position pos:line="433" pos:column="27"/></index></name></expr> )<pos:position pos:line="433" pos:column="29"/></condition><then pos:line="433" pos:column="29"> <block pos:line="433" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="434" pos:column="9">strncpy<pos:position pos:line="434" pos:column="16"/></name><argument_list pos:line="434" pos:column="16">(<argument><expr><name><name pos:line="434" pos:column="17">data<pos:position pos:line="434" pos:column="21"/></name><operator pos:line="434" pos:column="21">-&gt;<pos:position pos:line="434" pos:column="26"/></operator><name pos:line="434" pos:column="23">passwd<pos:position pos:line="434" pos:column="29"/></name></name></expr></argument>, <argument><expr><call><name pos:line="434" pos:column="31">getpass<pos:position pos:line="434" pos:column="38"/></name><argument_list pos:line="434" pos:column="38">(<argument><expr><literal type="string" pos:line="434" pos:column="39">"password: "<pos:position pos:line="434" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="434" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="434" pos:column="54">sizeof<argument_list pos:line="434" pos:column="60">(<argument><expr><name><name pos:line="434" pos:column="61">data<pos:position pos:line="434" pos:column="65"/></name><operator pos:line="434" pos:column="65">-&gt;<pos:position pos:line="434" pos:column="70"/></operator><name pos:line="434" pos:column="67">passwd<pos:position pos:line="434" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="434" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="434" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="76"/></expr_stmt>
      }<pos:position pos:line="435" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="437" pos:column="7">conn<pos:position pos:line="437" pos:column="11"/></name><operator pos:line="437" pos:column="11">-&gt;<pos:position pos:line="437" pos:column="16"/></operator><name pos:line="437" pos:column="13">name<pos:position pos:line="437" pos:column="17"/></name></name> <operator pos:line="437" pos:column="18">=<pos:position pos:line="437" pos:column="19"/></operator> <operator pos:line="437" pos:column="20">++<pos:position pos:line="437" pos:column="22"/></operator><name pos:line="437" pos:column="22">ptr<pos:position pos:line="437" pos:column="25"/></name></expr>;<pos:position pos:line="437" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="438" pos:column="7">data<pos:position pos:line="438" pos:column="11"/></name><operator pos:line="438" pos:column="11">-&gt;<pos:position pos:line="438" pos:column="16"/></operator><name pos:line="438" pos:column="13">bits<pos:position pos:line="438" pos:column="17"/></name><operator pos:line="438" pos:column="17">.<pos:position pos:line="438" pos:column="18"/></operator><name pos:line="438" pos:column="18">user_passwd<pos:position pos:line="438" pos:column="29"/></name></name><operator pos:line="438" pos:column="29">=<pos:position pos:line="438" pos:column="30"/></operator><literal type="number" pos:line="438" pos:column="30">1<pos:position pos:line="438" pos:column="31"/></literal></expr>;<pos:position pos:line="438" pos:column="32"/></expr_stmt> <comment type="block" pos:line="438" pos:column="33">/* enable user+password */</comment>
    }<pos:position pos:line="439" pos:column="6"/></block></then>
    <else pos:line="440" pos:column="5">else <block pos:line="440" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="441" pos:column="7">strcpy<pos:position pos:line="441" pos:column="13"/></name><argument_list pos:line="441" pos:column="13">(<argument><expr><name><name pos:line="441" pos:column="14">data<pos:position pos:line="441" pos:column="18"/></name><operator pos:line="441" pos:column="18">-&gt;<pos:position pos:line="441" pos:column="23"/></operator><name pos:line="441" pos:column="20">user<pos:position pos:line="441" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="441" pos:column="26">CURL_DEFAULT_USER<pos:position pos:line="441" pos:column="43"/></name></expr></argument>)<pos:position pos:line="441" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="442" pos:column="7">strcpy<pos:position pos:line="442" pos:column="13"/></name><argument_list pos:line="442" pos:column="13">(<argument><expr><name><name pos:line="442" pos:column="14">data<pos:position pos:line="442" pos:column="18"/></name><operator pos:line="442" pos:column="18">-&gt;<pos:position pos:line="442" pos:column="23"/></operator><name pos:line="442" pos:column="20">passwd<pos:position pos:line="442" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="28">CURL_DEFAULT_PASSWORD<pos:position pos:line="442" pos:column="49"/></name></expr></argument>)<pos:position pos:line="442" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="443" pos:column="6"/></block></else></if>
  }<pos:position pos:line="444" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="446" pos:column="3">if<condition pos:line="446" pos:column="5">(<expr><operator pos:line="446" pos:column="6">!<pos:position pos:line="446" pos:column="7"/></operator><name><name pos:line="446" pos:column="7">data<pos:position pos:line="446" pos:column="11"/></name><operator pos:line="446" pos:column="11">-&gt;<pos:position pos:line="446" pos:column="16"/></operator><name pos:line="446" pos:column="13">bits<pos:position pos:line="446" pos:column="17"/></name><operator pos:line="446" pos:column="17">.<pos:position pos:line="446" pos:column="18"/></operator><name pos:line="446" pos:column="18">httpproxy<pos:position pos:line="446" pos:column="27"/></name></name></expr>)<pos:position pos:line="446" pos:column="28"/></condition><then pos:line="446" pos:column="28"> <block pos:line="446" pos:column="29">{
    <comment type="block" pos:line="447" pos:column="5">/* If not connecting via a proxy, extract the port from the URL, if it is
     * there, thus overriding any defaults that might have been set above. */</comment>
    <expr_stmt><expr><name pos:line="449" pos:column="5">tmp<pos:position pos:line="449" pos:column="8"/></name> <operator pos:line="449" pos:column="9">=<pos:position pos:line="449" pos:column="10"/></operator> <call><name pos:line="449" pos:column="11">strchr<pos:position pos:line="449" pos:column="17"/></name><argument_list pos:line="449" pos:column="17">(<argument><expr><name><name pos:line="449" pos:column="18">conn<pos:position pos:line="449" pos:column="22"/></name><operator pos:line="449" pos:column="22">-&gt;<pos:position pos:line="449" pos:column="27"/></operator><name pos:line="449" pos:column="24">name<pos:position pos:line="449" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="449" pos:column="30">':'<pos:position pos:line="449" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="449" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="35"/></expr_stmt>
    <if pos:line="450" pos:column="5">if <condition pos:line="450" pos:column="8">(<expr><name pos:line="450" pos:column="9">tmp<pos:position pos:line="450" pos:column="12"/></name></expr>)<pos:position pos:line="450" pos:column="13"/></condition><then pos:line="450" pos:column="13"> <block pos:line="450" pos:column="14">{
      <expr_stmt><expr><operator pos:line="451" pos:column="7">*<pos:position pos:line="451" pos:column="8"/></operator><name pos:line="451" pos:column="8">tmp<pos:position pos:line="451" pos:column="11"/></name><operator pos:line="451" pos:column="11">++<pos:position pos:line="451" pos:column="13"/></operator> <operator pos:line="451" pos:column="14">=<pos:position pos:line="451" pos:column="15"/></operator> <literal type="char" pos:line="451" pos:column="16">'\0'<pos:position pos:line="451" pos:column="20"/></literal></expr>;<pos:position pos:line="451" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="452" pos:column="7">data<pos:position pos:line="452" pos:column="11"/></name><operator pos:line="452" pos:column="11">-&gt;<pos:position pos:line="452" pos:column="16"/></operator><name pos:line="452" pos:column="13">port<pos:position pos:line="452" pos:column="17"/></name></name> <operator pos:line="452" pos:column="18">=<pos:position pos:line="452" pos:column="19"/></operator> <call><name pos:line="452" pos:column="20">atoi<pos:position pos:line="452" pos:column="24"/></name><argument_list pos:line="452" pos:column="24">(<argument><expr><name pos:line="452" pos:column="25">tmp<pos:position pos:line="452" pos:column="28"/></name></expr></argument>)<pos:position pos:line="452" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="453" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="455" pos:column="5">/* Connect to target host right on */</comment>
    <if pos:line="456" pos:column="5">if<condition pos:line="456" pos:column="7">(<expr><operator pos:line="456" pos:column="8">!<pos:position pos:line="456" pos:column="9"/></operator><operator pos:line="456" pos:column="9">(<pos:position pos:line="456" pos:column="10"/></operator><name><name pos:line="456" pos:column="10">conn<pos:position pos:line="456" pos:column="14"/></name><operator pos:line="456" pos:column="14">-&gt;<pos:position pos:line="456" pos:column="19"/></operator><name pos:line="456" pos:column="16">hp<pos:position pos:line="456" pos:column="18"/></name></name> <operator pos:line="456" pos:column="19">=<pos:position pos:line="456" pos:column="20"/></operator> <call><name pos:line="456" pos:column="21">GetHost<pos:position pos:line="456" pos:column="28"/></name><argument_list pos:line="456" pos:column="28">(<argument><expr><name pos:line="456" pos:column="29">data<pos:position pos:line="456" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="456" pos:column="35">conn<pos:position pos:line="456" pos:column="39"/></name><operator pos:line="456" pos:column="39">-&gt;<pos:position pos:line="456" pos:column="44"/></operator><name pos:line="456" pos:column="41">name<pos:position pos:line="456" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="47">hostent_buf<pos:position pos:line="456" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="456" pos:column="60">sizeof<argument_list pos:line="456" pos:column="66">(<argument><expr><name pos:line="456" pos:column="67">hostent_buf<pos:position pos:line="456" pos:column="78"/></name></expr></argument>)<pos:position pos:line="456" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="456" pos:column="80"/></argument_list></call><operator pos:line="456" pos:column="80">)<pos:position pos:line="456" pos:column="81"/></operator></expr>)<pos:position pos:line="456" pos:column="82"/></condition><then pos:line="456" pos:column="82"> <block pos:line="456" pos:column="83">{
      <expr_stmt><expr><call><name pos:line="457" pos:column="7">failf<pos:position pos:line="457" pos:column="12"/></name><argument_list pos:line="457" pos:column="12">(<argument><expr><name pos:line="457" pos:column="13">data<pos:position pos:line="457" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="457" pos:column="19">"Couldn't resolv host '%s'"<pos:position pos:line="457" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="457" pos:column="48">conn<pos:position pos:line="457" pos:column="52"/></name><operator pos:line="457" pos:column="52">-&gt;<pos:position pos:line="457" pos:column="57"/></operator><name pos:line="457" pos:column="54">name<pos:position pos:line="457" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="457" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="60"/></expr_stmt>
      <return pos:line="458" pos:column="7">return <expr><name pos:line="458" pos:column="14">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="458" pos:column="40"/></name></expr>;<pos:position pos:line="458" pos:column="41"/></return>
    }<pos:position pos:line="459" pos:column="6"/></block></then></if>
  }<pos:position pos:line="460" pos:column="4"/></block></then>
  <else pos:line="461" pos:column="3">else <block pos:line="461" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="462" pos:column="5">char<pos:position pos:line="462" pos:column="9"/></name> <modifier pos:line="462" pos:column="10">*<pos:position pos:line="462" pos:column="11"/></modifier></type><name pos:line="462" pos:column="11">prox_portno<pos:position pos:line="462" pos:column="22"/></name></decl>;<pos:position pos:line="462" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="463" pos:column="5">char<pos:position pos:line="463" pos:column="9"/></name> <modifier pos:line="463" pos:column="10">*<pos:position pos:line="463" pos:column="11"/></modifier></type><name pos:line="463" pos:column="11">endofprot<pos:position pos:line="463" pos:column="20"/></name></decl>;<pos:position pos:line="463" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="465" pos:column="5">/* We need to make a duplicate of the proxy so that we can modify the
       string safely. */</comment>
    <decl_stmt><decl><type><name pos:line="467" pos:column="5">char<pos:position pos:line="467" pos:column="9"/></name> <modifier pos:line="467" pos:column="10">*<pos:position pos:line="467" pos:column="11"/></modifier></type><name pos:line="467" pos:column="11">proxydup<pos:position pos:line="467" pos:column="19"/></name><init pos:line="467" pos:column="19">=<expr><call><name pos:line="467" pos:column="20">strdup<pos:position pos:line="467" pos:column="26"/></name><argument_list pos:line="467" pos:column="26">(<argument><expr><name><name pos:line="467" pos:column="27">data<pos:position pos:line="467" pos:column="31"/></name><operator pos:line="467" pos:column="31">-&gt;<pos:position pos:line="467" pos:column="36"/></operator><name pos:line="467" pos:column="33">proxy<pos:position pos:line="467" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="467" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="467" pos:column="40"/></decl_stmt>

    <comment type="block" pos:line="469" pos:column="5">/* We use 'proxyptr' to point to the proxy name from now on... */</comment>
    <decl_stmt><decl><type><name pos:line="470" pos:column="5">char<pos:position pos:line="470" pos:column="9"/></name> <modifier pos:line="470" pos:column="10">*<pos:position pos:line="470" pos:column="11"/></modifier></type><name pos:line="470" pos:column="11">proxyptr<pos:position pos:line="470" pos:column="19"/></name><init pos:line="470" pos:column="19">=<expr><name pos:line="470" pos:column="20">proxydup<pos:position pos:line="470" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="470" pos:column="29"/></decl_stmt>

    <if pos:line="472" pos:column="5">if<condition pos:line="472" pos:column="7">(<expr><name pos:line="472" pos:column="8">NULL<pos:position pos:line="472" pos:column="12"/></name> <operator pos:line="472" pos:column="13">==<pos:position pos:line="472" pos:column="15"/></operator> <name pos:line="472" pos:column="16">proxydup<pos:position pos:line="472" pos:column="24"/></name></expr>)<pos:position pos:line="472" pos:column="25"/></condition><then pos:line="472" pos:column="25"> <block pos:line="472" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="473" pos:column="7">failf<pos:position pos:line="473" pos:column="12"/></name><argument_list pos:line="473" pos:column="12">(<argument><expr><name pos:line="473" pos:column="13">data<pos:position pos:line="473" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="473" pos:column="19">"memory shortage"<pos:position pos:line="473" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="473" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="38"/></expr_stmt>
      <return pos:line="474" pos:column="7">return <expr><name pos:line="474" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="474" pos:column="33"/></name></expr>;<pos:position pos:line="474" pos:column="34"/></return>
    }<pos:position pos:line="475" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="477" pos:column="5">/* we use proxy all right, but we wanna know the remote port for SSL
       reasons */</comment>
    <expr_stmt><expr><name pos:line="479" pos:column="5">tmp<pos:position pos:line="479" pos:column="8"/></name> <operator pos:line="479" pos:column="9">=<pos:position pos:line="479" pos:column="10"/></operator> <call><name pos:line="479" pos:column="11">strchr<pos:position pos:line="479" pos:column="17"/></name><argument_list pos:line="479" pos:column="17">(<argument><expr><name><name pos:line="479" pos:column="18">conn<pos:position pos:line="479" pos:column="22"/></name><operator pos:line="479" pos:column="22">-&gt;<pos:position pos:line="479" pos:column="27"/></operator><name pos:line="479" pos:column="24">name<pos:position pos:line="479" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="479" pos:column="30">':'<pos:position pos:line="479" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="479" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="35"/></expr_stmt>
    <if pos:line="480" pos:column="5">if <condition pos:line="480" pos:column="8">(<expr><name pos:line="480" pos:column="9">tmp<pos:position pos:line="480" pos:column="12"/></name></expr>)<pos:position pos:line="480" pos:column="13"/></condition><then pos:line="480" pos:column="13"> <block pos:line="480" pos:column="14">{
      <expr_stmt><expr><operator pos:line="481" pos:column="7">*<pos:position pos:line="481" pos:column="8"/></operator><name pos:line="481" pos:column="8">tmp<pos:position pos:line="481" pos:column="11"/></name><operator pos:line="481" pos:column="11">++<pos:position pos:line="481" pos:column="13"/></operator> <operator pos:line="481" pos:column="14">=<pos:position pos:line="481" pos:column="15"/></operator> <literal type="char" pos:line="481" pos:column="16">'\0'<pos:position pos:line="481" pos:column="20"/></literal></expr>;<pos:position pos:line="481" pos:column="21"/></expr_stmt> <comment type="block" pos:line="481" pos:column="22">/* cut off the name there */</comment>
      <expr_stmt><expr><name><name pos:line="482" pos:column="7">data<pos:position pos:line="482" pos:column="11"/></name><operator pos:line="482" pos:column="11">-&gt;<pos:position pos:line="482" pos:column="16"/></operator><name pos:line="482" pos:column="13">remote_port<pos:position pos:line="482" pos:column="24"/></name></name> <operator pos:line="482" pos:column="25">=<pos:position pos:line="482" pos:column="26"/></operator> <call><name pos:line="482" pos:column="27">atoi<pos:position pos:line="482" pos:column="31"/></name><argument_list pos:line="482" pos:column="31">(<argument><expr><name pos:line="482" pos:column="32">tmp<pos:position pos:line="482" pos:column="35"/></name></expr></argument>)<pos:position pos:line="482" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="483" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="485" pos:column="5">/* Daniel Dec 10, 1998:
       We do the proxy host string parsing here. We want the host name and the
       port name. Accept a protocol:// prefix, even though it should just be
       ignored. */</comment>

    <comment type="block" pos:line="490" pos:column="5">/* 1. skip the protocol part if present */</comment>
    <expr_stmt><expr><name pos:line="491" pos:column="5">endofprot<pos:position pos:line="491" pos:column="14"/></name><operator pos:line="491" pos:column="14">=<pos:position pos:line="491" pos:column="15"/></operator><call><name pos:line="491" pos:column="15">strstr<pos:position pos:line="491" pos:column="21"/></name><argument_list pos:line="491" pos:column="21">(<argument><expr><name pos:line="491" pos:column="22">proxyptr<pos:position pos:line="491" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="491" pos:column="32">"://"<pos:position pos:line="491" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="491" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="39"/></expr_stmt>
    <if pos:line="492" pos:column="5">if<condition pos:line="492" pos:column="7">(<expr><name pos:line="492" pos:column="8">endofprot<pos:position pos:line="492" pos:column="17"/></name></expr>)<pos:position pos:line="492" pos:column="18"/></condition><then pos:line="492" pos:column="18"> <block pos:line="492" pos:column="19">{
      <expr_stmt><expr><name pos:line="493" pos:column="7">proxyptr<pos:position pos:line="493" pos:column="15"/></name> <operator pos:line="493" pos:column="16">=<pos:position pos:line="493" pos:column="17"/></operator> <name pos:line="493" pos:column="18">endofprot<pos:position pos:line="493" pos:column="27"/></name><operator pos:line="493" pos:column="27">+<pos:position pos:line="493" pos:column="28"/></operator><literal type="number" pos:line="493" pos:column="28">3<pos:position pos:line="493" pos:column="29"/></literal></expr>;<pos:position pos:line="493" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="494" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="496" pos:column="5">/* allow user to specify proxy.server.com:1080 if desired */</comment>
    <expr_stmt><expr><name pos:line="497" pos:column="5">prox_portno<pos:position pos:line="497" pos:column="16"/></name> <operator pos:line="497" pos:column="17">=<pos:position pos:line="497" pos:column="18"/></operator> <call><name pos:line="497" pos:column="19">strchr<pos:position pos:line="497" pos:column="25"/></name> <argument_list pos:line="497" pos:column="26">(<argument><expr><name pos:line="497" pos:column="27">proxyptr<pos:position pos:line="497" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="497" pos:column="37">':'<pos:position pos:line="497" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="497" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="42"/></expr_stmt>
    <if pos:line="498" pos:column="5">if <condition pos:line="498" pos:column="8">(<expr><name pos:line="498" pos:column="9">prox_portno<pos:position pos:line="498" pos:column="20"/></name></expr>)<pos:position pos:line="498" pos:column="21"/></condition><then pos:line="498" pos:column="21"> <block pos:line="498" pos:column="22">{
      <expr_stmt><expr><operator pos:line="499" pos:column="7">*<pos:position pos:line="499" pos:column="8"/></operator><name pos:line="499" pos:column="8">prox_portno<pos:position pos:line="499" pos:column="19"/></name> <operator pos:line="499" pos:column="20">=<pos:position pos:line="499" pos:column="21"/></operator> <literal type="number" pos:line="499" pos:column="22">0x0<pos:position pos:line="499" pos:column="25"/></literal></expr>;<pos:position pos:line="499" pos:column="26"/></expr_stmt> <comment type="block" pos:line="499" pos:column="27">/* cut off number from host name */</comment>
      <expr_stmt><expr><name pos:line="500" pos:column="7">prox_portno<pos:position pos:line="500" pos:column="18"/></name> <operator pos:line="500" pos:column="19">++<pos:position pos:line="500" pos:column="21"/></operator></expr>;<pos:position pos:line="500" pos:column="22"/></expr_stmt>
      <comment type="block" pos:line="501" pos:column="7">/* now set the local port number */</comment>
      <expr_stmt><expr><name><name pos:line="502" pos:column="7">data<pos:position pos:line="502" pos:column="11"/></name><operator pos:line="502" pos:column="11">-&gt;<pos:position pos:line="502" pos:column="16"/></operator><name pos:line="502" pos:column="13">port<pos:position pos:line="502" pos:column="17"/></name></name> <operator pos:line="502" pos:column="18">=<pos:position pos:line="502" pos:column="19"/></operator> <call><name pos:line="502" pos:column="20">atoi<pos:position pos:line="502" pos:column="24"/></name><argument_list pos:line="502" pos:column="24">(<argument><expr><name pos:line="502" pos:column="25">prox_portno<pos:position pos:line="502" pos:column="36"/></name></expr></argument>)<pos:position pos:line="502" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="503" pos:column="6"/></block></then>
    <elseif pos:line="504" pos:column="5">else <if pos:line="504" pos:column="10">if<condition pos:line="504" pos:column="12">(<expr><name><name pos:line="504" pos:column="13">data<pos:position pos:line="504" pos:column="17"/></name><operator pos:line="504" pos:column="17">-&gt;<pos:position pos:line="504" pos:column="22"/></operator><name pos:line="504" pos:column="19">proxyport<pos:position pos:line="504" pos:column="28"/></name></name></expr>)<pos:position pos:line="504" pos:column="29"/></condition><then pos:line="504" pos:column="29"> <block pos:line="504" pos:column="30">{
      <comment type="block" pos:line="505" pos:column="7">/* None given in the proxy string, then get the default one if it is
         given */</comment>
      <expr_stmt><expr><name><name pos:line="507" pos:column="7">data<pos:position pos:line="507" pos:column="11"/></name><operator pos:line="507" pos:column="11">-&gt;<pos:position pos:line="507" pos:column="16"/></operator><name pos:line="507" pos:column="13">port<pos:position pos:line="507" pos:column="17"/></name></name> <operator pos:line="507" pos:column="18">=<pos:position pos:line="507" pos:column="19"/></operator> <name><name pos:line="507" pos:column="20">data<pos:position pos:line="507" pos:column="24"/></name><operator pos:line="507" pos:column="24">-&gt;<pos:position pos:line="507" pos:column="29"/></operator><name pos:line="507" pos:column="26">proxyport<pos:position pos:line="507" pos:column="35"/></name></name></expr>;<pos:position pos:line="507" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="508" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="510" pos:column="5">/* connect to proxy */</comment>
    <if pos:line="511" pos:column="5">if<condition pos:line="511" pos:column="7">(<expr><operator pos:line="511" pos:column="8">!<pos:position pos:line="511" pos:column="9"/></operator><operator pos:line="511" pos:column="9">(<pos:position pos:line="511" pos:column="10"/></operator><name><name pos:line="511" pos:column="10">conn<pos:position pos:line="511" pos:column="14"/></name><operator pos:line="511" pos:column="14">-&gt;<pos:position pos:line="511" pos:column="19"/></operator><name pos:line="511" pos:column="16">hp<pos:position pos:line="511" pos:column="18"/></name></name> <operator pos:line="511" pos:column="19">=<pos:position pos:line="511" pos:column="20"/></operator> <call><name pos:line="511" pos:column="21">GetHost<pos:position pos:line="511" pos:column="28"/></name><argument_list pos:line="511" pos:column="28">(<argument><expr><name pos:line="511" pos:column="29">data<pos:position pos:line="511" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="511" pos:column="35">proxyptr<pos:position pos:line="511" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="511" pos:column="45">hostent_buf<pos:position pos:line="511" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="511" pos:column="58">sizeof<argument_list pos:line="511" pos:column="64">(<argument><expr><name pos:line="511" pos:column="65">hostent_buf<pos:position pos:line="511" pos:column="76"/></name></expr></argument>)<pos:position pos:line="511" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="511" pos:column="78"/></argument_list></call><operator pos:line="511" pos:column="78">)<pos:position pos:line="511" pos:column="79"/></operator></expr>)<pos:position pos:line="511" pos:column="80"/></condition><then pos:line="511" pos:column="80"> <block pos:line="511" pos:column="81">{
      <expr_stmt><expr><call><name pos:line="512" pos:column="7">failf<pos:position pos:line="512" pos:column="12"/></name><argument_list pos:line="512" pos:column="12">(<argument><expr><name pos:line="512" pos:column="13">data<pos:position pos:line="512" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="512" pos:column="19">"Couldn't resolv proxy '%s'"<pos:position pos:line="512" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="512" pos:column="49">proxyptr<pos:position pos:line="512" pos:column="57"/></name></expr></argument>)<pos:position pos:line="512" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="59"/></expr_stmt>
      <return pos:line="513" pos:column="7">return <expr><name pos:line="513" pos:column="14">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="513" pos:column="41"/></name></expr>;<pos:position pos:line="513" pos:column="42"/></return>
    }<pos:position pos:line="514" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="516" pos:column="5">free<pos:position pos:line="516" pos:column="9"/></name><argument_list pos:line="516" pos:column="9">(<argument><expr><name pos:line="516" pos:column="10">proxydup<pos:position pos:line="516" pos:column="18"/></name></expr></argument>)<pos:position pos:line="516" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="20"/></expr_stmt> <comment type="block" pos:line="516" pos:column="21">/* free the duplicate pointer and not the modified */</comment>
  }<pos:position pos:line="517" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="518" pos:column="3">pgrsTime<pos:position pos:line="518" pos:column="11"/></name><argument_list pos:line="518" pos:column="11">(<argument><expr><name pos:line="518" pos:column="12">data<pos:position pos:line="518" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="518" pos:column="18">TIMER_NAMELOOKUP<pos:position pos:line="518" pos:column="34"/></name></expr></argument>)<pos:position pos:line="518" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="518" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="520" pos:column="3">data<pos:position pos:line="520" pos:column="7"/></name><operator pos:line="520" pos:column="7">-&gt;<pos:position pos:line="520" pos:column="12"/></operator><name pos:line="520" pos:column="9">firstsocket<pos:position pos:line="520" pos:column="20"/></name></name> <operator pos:line="520" pos:column="21">=<pos:position pos:line="520" pos:column="22"/></operator> <call><name pos:line="520" pos:column="23">socket<pos:position pos:line="520" pos:column="29"/></name><argument_list pos:line="520" pos:column="29">(<argument><expr><name pos:line="520" pos:column="30">AF_INET<pos:position pos:line="520" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="520" pos:column="39">SOCK_STREAM<pos:position pos:line="520" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="520" pos:column="52">0<pos:position pos:line="520" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="520" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="522" pos:column="3">memset<pos:position pos:line="522" pos:column="9"/></name><argument_list pos:line="522" pos:column="9">(<argument><expr><operator pos:line="522" pos:column="10">(<pos:position pos:line="522" pos:column="11"/></operator><name pos:line="522" pos:column="11">char<pos:position pos:line="522" pos:column="15"/></name> <operator pos:line="522" pos:column="16">*<pos:position pos:line="522" pos:column="17"/></operator><operator pos:line="522" pos:column="17">)<pos:position pos:line="522" pos:column="18"/></operator> <operator pos:line="522" pos:column="19">&amp;<pos:position pos:line="522" pos:column="24"/></operator><name><name pos:line="522" pos:column="20">conn<pos:position pos:line="522" pos:column="24"/></name><operator pos:line="522" pos:column="24">-&gt;<pos:position pos:line="522" pos:column="29"/></operator><name pos:line="522" pos:column="26">serv_addr<pos:position pos:line="522" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="522" pos:column="37">'\0'<pos:position pos:line="522" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="522" pos:column="43">sizeof<argument_list pos:line="522" pos:column="49">(<argument><expr><name><name pos:line="522" pos:column="50">conn<pos:position pos:line="522" pos:column="54"/></name><operator pos:line="522" pos:column="54">-&gt;<pos:position pos:line="522" pos:column="59"/></operator><name pos:line="522" pos:column="56">serv_addr<pos:position pos:line="522" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="522" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="522" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="523" pos:column="3">memcpy<pos:position pos:line="523" pos:column="9"/></name><argument_list pos:line="523" pos:column="9">(<argument><expr><operator pos:line="523" pos:column="10">(<pos:position pos:line="523" pos:column="11"/></operator><name pos:line="523" pos:column="11">char<pos:position pos:line="523" pos:column="15"/></name> <operator pos:line="523" pos:column="16">*<pos:position pos:line="523" pos:column="17"/></operator><operator pos:line="523" pos:column="17">)<pos:position pos:line="523" pos:column="18"/></operator><operator pos:line="523" pos:column="18">&amp;<pos:position pos:line="523" pos:column="23"/></operator><operator pos:line="523" pos:column="19">(<pos:position pos:line="523" pos:column="20"/></operator><name><name pos:line="523" pos:column="20">conn<pos:position pos:line="523" pos:column="24"/></name><operator pos:line="523" pos:column="24">-&gt;<pos:position pos:line="523" pos:column="29"/></operator><name pos:line="523" pos:column="26">serv_addr<pos:position pos:line="523" pos:column="35"/></name><operator pos:line="523" pos:column="35">.<pos:position pos:line="523" pos:column="36"/></operator><name pos:line="523" pos:column="36">sin_addr<pos:position pos:line="523" pos:column="44"/></name></name><operator pos:line="523" pos:column="44">)<pos:position pos:line="523" pos:column="45"/></operator></expr></argument>,
         <argument><expr><name><name pos:line="524" pos:column="10">conn<pos:position pos:line="524" pos:column="14"/></name><operator pos:line="524" pos:column="14">-&gt;<pos:position pos:line="524" pos:column="19"/></operator><name pos:line="524" pos:column="16">hp<pos:position pos:line="524" pos:column="18"/></name><operator pos:line="524" pos:column="18">-&gt;<pos:position pos:line="524" pos:column="23"/></operator><name pos:line="524" pos:column="20">h_addr<pos:position pos:line="524" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="524" pos:column="28">conn<pos:position pos:line="524" pos:column="32"/></name><operator pos:line="524" pos:column="32">-&gt;<pos:position pos:line="524" pos:column="37"/></operator><name pos:line="524" pos:column="34">hp<pos:position pos:line="524" pos:column="36"/></name><operator pos:line="524" pos:column="36">-&gt;<pos:position pos:line="524" pos:column="41"/></operator><name pos:line="524" pos:column="38">h_length<pos:position pos:line="524" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="524" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="525" pos:column="3">conn<pos:position pos:line="525" pos:column="7"/></name><operator pos:line="525" pos:column="7">-&gt;<pos:position pos:line="525" pos:column="12"/></operator><name pos:line="525" pos:column="9">serv_addr<pos:position pos:line="525" pos:column="18"/></name><operator pos:line="525" pos:column="18">.<pos:position pos:line="525" pos:column="19"/></operator><name pos:line="525" pos:column="19">sin_family<pos:position pos:line="525" pos:column="29"/></name></name> <operator pos:line="525" pos:column="30">=<pos:position pos:line="525" pos:column="31"/></operator> <name><name pos:line="525" pos:column="32">conn<pos:position pos:line="525" pos:column="36"/></name><operator pos:line="525" pos:column="36">-&gt;<pos:position pos:line="525" pos:column="41"/></operator><name pos:line="525" pos:column="38">hp<pos:position pos:line="525" pos:column="40"/></name><operator pos:line="525" pos:column="40">-&gt;<pos:position pos:line="525" pos:column="45"/></operator><name pos:line="525" pos:column="42">h_addrtype<pos:position pos:line="525" pos:column="52"/></name></name></expr>;<pos:position pos:line="525" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="526" pos:column="3">conn<pos:position pos:line="526" pos:column="7"/></name><operator pos:line="526" pos:column="7">-&gt;<pos:position pos:line="526" pos:column="12"/></operator><name pos:line="526" pos:column="9">serv_addr<pos:position pos:line="526" pos:column="18"/></name><operator pos:line="526" pos:column="18">.<pos:position pos:line="526" pos:column="19"/></operator><name pos:line="526" pos:column="19">sin_port<pos:position pos:line="526" pos:column="27"/></name></name> <operator pos:line="526" pos:column="28">=<pos:position pos:line="526" pos:column="29"/></operator> <call><name pos:line="526" pos:column="30">htons<pos:position pos:line="526" pos:column="35"/></name><argument_list pos:line="526" pos:column="35">(<argument><expr><name><name pos:line="526" pos:column="36">data<pos:position pos:line="526" pos:column="40"/></name><operator pos:line="526" pos:column="40">-&gt;<pos:position pos:line="526" pos:column="45"/></operator><name pos:line="526" pos:column="42">port<pos:position pos:line="526" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="526" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="48"/></expr_stmt>

  <if pos:line="528" pos:column="3">if <condition pos:line="528" pos:column="6">(<expr><call><name pos:line="528" pos:column="7">connect<pos:position pos:line="528" pos:column="14"/></name><argument_list pos:line="528" pos:column="14">(<argument><expr><name><name pos:line="528" pos:column="15">data<pos:position pos:line="528" pos:column="19"/></name><operator pos:line="528" pos:column="19">-&gt;<pos:position pos:line="528" pos:column="24"/></operator><name pos:line="528" pos:column="21">firstsocket<pos:position pos:line="528" pos:column="32"/></name></name></expr></argument>,
              <argument><expr><operator pos:line="529" pos:column="15">(<pos:position pos:line="529" pos:column="16"/></operator>struct <name pos:line="529" pos:column="23">sockaddr<pos:position pos:line="529" pos:column="31"/></name> <operator pos:line="529" pos:column="32">*<pos:position pos:line="529" pos:column="33"/></operator><operator pos:line="529" pos:column="33">)<pos:position pos:line="529" pos:column="34"/></operator> <operator pos:line="529" pos:column="35">&amp;<pos:position pos:line="529" pos:column="40"/></operator><operator pos:line="529" pos:column="36">(<pos:position pos:line="529" pos:column="37"/></operator><name><name pos:line="529" pos:column="37">conn<pos:position pos:line="529" pos:column="41"/></name><operator pos:line="529" pos:column="41">-&gt;<pos:position pos:line="529" pos:column="46"/></operator><name pos:line="529" pos:column="43">serv_addr<pos:position pos:line="529" pos:column="52"/></name></name><operator pos:line="529" pos:column="52">)<pos:position pos:line="529" pos:column="53"/></operator></expr></argument>,
              <argument><expr><sizeof pos:line="530" pos:column="15">sizeof<argument_list pos:line="530" pos:column="21">(<argument><expr><name><name pos:line="530" pos:column="22">conn<pos:position pos:line="530" pos:column="26"/></name><operator pos:line="530" pos:column="26">-&gt;<pos:position pos:line="530" pos:column="31"/></operator><name pos:line="530" pos:column="28">serv_addr<pos:position pos:line="530" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="530" pos:column="38"/></argument_list></sizeof></expr></argument>
              )<pos:position pos:line="531" pos:column="16"/></argument_list></call> <operator pos:line="531" pos:column="17">&lt;<pos:position pos:line="531" pos:column="21"/></operator> <literal type="number" pos:line="531" pos:column="19">0<pos:position pos:line="531" pos:column="20"/></literal></expr>)<pos:position pos:line="531" pos:column="21"/></condition><then pos:line="531" pos:column="21"> <block pos:line="531" pos:column="22">{
    <switch pos:line="532" pos:column="5">switch<condition pos:line="532" pos:column="11">(<expr><name pos:line="532" pos:column="12">errno<pos:position pos:line="532" pos:column="17"/></name></expr>)<pos:position pos:line="532" pos:column="18"/></condition> <block pos:line="532" pos:column="19">{
<cpp:ifdef pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">ifdef<pos:position pos:line="533" pos:column="7"/></cpp:directive> <name pos:line="533" pos:column="8">ECONNREFUSED<pos:position pos:line="533" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="534" pos:column="7">/* this should be made nicer */</comment>
    <case pos:line="535" pos:column="5">case <expr><name pos:line="535" pos:column="10">ECONNREFUSED<pos:position pos:line="535" pos:column="22"/></name></expr>:<pos:position pos:line="535" pos:column="23"/></case>
      <expr_stmt><expr><call><name pos:line="536" pos:column="7">failf<pos:position pos:line="536" pos:column="12"/></name><argument_list pos:line="536" pos:column="12">(<argument><expr><name pos:line="536" pos:column="13">data<pos:position pos:line="536" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="536" pos:column="19">"Connection refused"<pos:position pos:line="536" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="536" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="536" pos:column="41"/></expr_stmt>
      <break pos:line="537" pos:column="7">break;<pos:position pos:line="537" pos:column="13"/></break>
<cpp:endif pos:line="538" pos:column="1">#<cpp:directive pos:line="538" pos:column="2">endif<pos:position pos:line="538" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">ifdef<pos:position pos:line="539" pos:column="7"/></cpp:directive> <name pos:line="539" pos:column="8">EINTR<pos:position pos:line="539" pos:column="13"/></name></cpp:ifdef>
    <case pos:line="540" pos:column="5">case <expr><name pos:line="540" pos:column="10">EINTR<pos:position pos:line="540" pos:column="15"/></name></expr>:<pos:position pos:line="540" pos:column="16"/></case>
      <expr_stmt><expr><call><name pos:line="541" pos:column="7">failf<pos:position pos:line="541" pos:column="12"/></name><argument_list pos:line="541" pos:column="12">(<argument><expr><name pos:line="541" pos:column="13">data<pos:position pos:line="541" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="541" pos:column="19">"Connection timeouted"<pos:position pos:line="541" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="541" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="43"/></expr_stmt>
      <break pos:line="542" pos:column="7">break;<pos:position pos:line="542" pos:column="13"/></break>
<cpp:endif pos:line="543" pos:column="1">#<cpp:directive pos:line="543" pos:column="2">endif<pos:position pos:line="543" pos:column="7"/></cpp:directive></cpp:endif>
    <default pos:line="544" pos:column="5">default:<pos:position pos:line="544" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="545" pos:column="7">failf<pos:position pos:line="545" pos:column="12"/></name><argument_list pos:line="545" pos:column="12">(<argument><expr><name pos:line="545" pos:column="13">data<pos:position pos:line="545" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="545" pos:column="19">"Can't connect to server: %d"<pos:position pos:line="545" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="545" pos:column="50">errno<pos:position pos:line="545" pos:column="55"/></name></expr></argument>)<pos:position pos:line="545" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="57"/></expr_stmt>
      <break pos:line="546" pos:column="7">break;<pos:position pos:line="546" pos:column="13"/></break>
    }<pos:position pos:line="547" pos:column="6"/></block></switch>
    <return pos:line="548" pos:column="5">return <expr><name pos:line="548" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="548" pos:column="33"/></name></expr>;<pos:position pos:line="548" pos:column="34"/></return>
  }<pos:position pos:line="549" pos:column="4"/></block></then></if>

  <if pos:line="551" pos:column="3">if<condition pos:line="551" pos:column="5">(<expr><name><name pos:line="551" pos:column="6">data<pos:position pos:line="551" pos:column="10"/></name><operator pos:line="551" pos:column="10">-&gt;<pos:position pos:line="551" pos:column="15"/></operator><name pos:line="551" pos:column="12">bits<pos:position pos:line="551" pos:column="16"/></name><operator pos:line="551" pos:column="16">.<pos:position pos:line="551" pos:column="17"/></operator><name pos:line="551" pos:column="17">proxy_user_passwd<pos:position pos:line="551" pos:column="34"/></name></name></expr>)<pos:position pos:line="551" pos:column="35"/></condition><then pos:line="551" pos:column="35"> <block pos:line="551" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="552" pos:column="5">char<pos:position pos:line="552" pos:column="9"/></name></type> <name><name pos:line="552" pos:column="10">authorization<pos:position pos:line="552" pos:column="23"/></name><index pos:line="552" pos:column="23">[<expr><literal type="number" pos:line="552" pos:column="24">512<pos:position pos:line="552" pos:column="27"/></literal></expr>]<pos:position pos:line="552" pos:column="28"/></index></name></decl>;<pos:position pos:line="552" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="553" pos:column="5">sprintf<pos:position pos:line="553" pos:column="12"/></name><argument_list pos:line="553" pos:column="12">(<argument><expr><name><name pos:line="553" pos:column="13">data<pos:position pos:line="553" pos:column="17"/></name><operator pos:line="553" pos:column="17">-&gt;<pos:position pos:line="553" pos:column="22"/></operator><name pos:line="553" pos:column="19">buffer<pos:position pos:line="553" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="553" pos:column="27">"%s:%s"<pos:position pos:line="553" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="553" pos:column="36">data<pos:position pos:line="553" pos:column="40"/></name><operator pos:line="553" pos:column="40">-&gt;<pos:position pos:line="553" pos:column="45"/></operator><name pos:line="553" pos:column="42">proxyuser<pos:position pos:line="553" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="553" pos:column="53">data<pos:position pos:line="553" pos:column="57"/></name><operator pos:line="553" pos:column="57">-&gt;<pos:position pos:line="553" pos:column="62"/></operator><name pos:line="553" pos:column="59">proxypasswd<pos:position pos:line="553" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="553" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="553" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="554" pos:column="5">base64Encode<pos:position pos:line="554" pos:column="17"/></name><argument_list pos:line="554" pos:column="17">(<argument><expr><name><name pos:line="554" pos:column="18">data<pos:position pos:line="554" pos:column="22"/></name><operator pos:line="554" pos:column="22">-&gt;<pos:position pos:line="554" pos:column="27"/></operator><name pos:line="554" pos:column="24">buffer<pos:position pos:line="554" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="554" pos:column="32">authorization<pos:position pos:line="554" pos:column="45"/></name></expr></argument>)<pos:position pos:line="554" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="554" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="556" pos:column="5">data<pos:position pos:line="556" pos:column="9"/></name><operator pos:line="556" pos:column="9">-&gt;<pos:position pos:line="556" pos:column="14"/></operator><name pos:line="556" pos:column="11">ptr_proxyuserpwd<pos:position pos:line="556" pos:column="27"/></name></name> <operator pos:line="556" pos:column="28">=<pos:position pos:line="556" pos:column="29"/></operator> <call><name pos:line="556" pos:column="30">maprintf<pos:position pos:line="556" pos:column="38"/></name><argument_list pos:line="556" pos:column="38">(<argument><expr><literal type="string" pos:line="556" pos:column="39">"Proxy-authorization: Basic %s\015\012"<pos:position pos:line="556" pos:column="78"/></literal></expr></argument>,
				      <argument><expr><name pos:line="557" pos:column="39">authorization<pos:position pos:line="557" pos:column="52"/></name></expr></argument>)<pos:position pos:line="557" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="557" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="558" pos:column="4"/></block></then></if>
  <if pos:line="559" pos:column="3">if<condition pos:line="559" pos:column="5">(<expr><operator pos:line="559" pos:column="6">(<pos:position pos:line="559" pos:column="7"/></operator><name><name pos:line="559" pos:column="7">conn<pos:position pos:line="559" pos:column="11"/></name><operator pos:line="559" pos:column="11">-&gt;<pos:position pos:line="559" pos:column="16"/></operator><name pos:line="559" pos:column="13">protocol<pos:position pos:line="559" pos:column="21"/></name></name><operator pos:line="559" pos:column="21">&amp;<pos:position pos:line="559" pos:column="26"/></operator><name pos:line="559" pos:column="22">PROT_HTTP<pos:position pos:line="559" pos:column="31"/></name><operator pos:line="559" pos:column="31">)<pos:position pos:line="559" pos:column="32"/></operator> <operator pos:line="559" pos:column="33">||<pos:position pos:line="559" pos:column="35"/></operator> <name><name pos:line="559" pos:column="36">data<pos:position pos:line="559" pos:column="40"/></name><operator pos:line="559" pos:column="40">-&gt;<pos:position pos:line="559" pos:column="45"/></operator><name pos:line="559" pos:column="42">bits<pos:position pos:line="559" pos:column="46"/></name><operator pos:line="559" pos:column="46">.<pos:position pos:line="559" pos:column="47"/></operator><name pos:line="559" pos:column="47">httpproxy<pos:position pos:line="559" pos:column="56"/></name></name></expr>)<pos:position pos:line="559" pos:column="57"/></condition><then pos:line="559" pos:column="57"> <block pos:line="559" pos:column="58">{
    <if pos:line="560" pos:column="5">if<condition pos:line="560" pos:column="7">(<expr><name><name pos:line="560" pos:column="8">data<pos:position pos:line="560" pos:column="12"/></name><operator pos:line="560" pos:column="12">-&gt;<pos:position pos:line="560" pos:column="17"/></operator><name pos:line="560" pos:column="14">useragent<pos:position pos:line="560" pos:column="23"/></name></name></expr>)<pos:position pos:line="560" pos:column="24"/></condition><then pos:line="560" pos:column="24"> <block pos:line="560" pos:column="25">{
      <expr_stmt><expr><name><name pos:line="561" pos:column="7">data<pos:position pos:line="561" pos:column="11"/></name><operator pos:line="561" pos:column="11">-&gt;<pos:position pos:line="561" pos:column="16"/></operator><name pos:line="561" pos:column="13">ptr_uagent<pos:position pos:line="561" pos:column="23"/></name></name> <operator pos:line="561" pos:column="24">=<pos:position pos:line="561" pos:column="25"/></operator> <call><name pos:line="561" pos:column="26">maprintf<pos:position pos:line="561" pos:column="34"/></name><argument_list pos:line="561" pos:column="34">(<argument><expr><literal type="string" pos:line="561" pos:column="35">"User-Agent: %s\015\012"<pos:position pos:line="561" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="561" pos:column="61">data<pos:position pos:line="561" pos:column="65"/></name><operator pos:line="561" pos:column="65">-&gt;<pos:position pos:line="561" pos:column="70"/></operator><name pos:line="561" pos:column="67">useragent<pos:position pos:line="561" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="561" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="562" pos:column="6"/></block></then></if>
  }<pos:position pos:line="563" pos:column="4"/></block></then></if>

  <if pos:line="565" pos:column="3">if<condition pos:line="565" pos:column="5">(<expr><name><name pos:line="565" pos:column="6">conn<pos:position pos:line="565" pos:column="10"/></name><operator pos:line="565" pos:column="10">-&gt;<pos:position pos:line="565" pos:column="15"/></operator><name pos:line="565" pos:column="12">curl_connect<pos:position pos:line="565" pos:column="24"/></name></name></expr>)<pos:position pos:line="565" pos:column="25"/></condition><then pos:line="565" pos:column="25"> <block pos:line="565" pos:column="26">{
    <comment type="block" pos:line="566" pos:column="5">/* is there a connect() procedure? */</comment>
    <expr_stmt><expr><name><name pos:line="567" pos:column="5">conn<pos:position pos:line="567" pos:column="9"/></name><operator pos:line="567" pos:column="9">-&gt;<pos:position pos:line="567" pos:column="14"/></operator><name pos:line="567" pos:column="11">now<pos:position pos:line="567" pos:column="14"/></name></name> <operator pos:line="567" pos:column="15">=<pos:position pos:line="567" pos:column="16"/></operator> <call><name pos:line="567" pos:column="17">tvnow<pos:position pos:line="567" pos:column="22"/></name><argument_list pos:line="567" pos:column="22">()<pos:position pos:line="567" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="25"/></expr_stmt> <comment type="block" pos:line="567" pos:column="26">/* set this here for timeout purposes in the
                            connect procedure, it is later set again for the
                            progress meter purpose */</comment>
    <expr_stmt><expr><name pos:line="570" pos:column="5">result<pos:position pos:line="570" pos:column="11"/></name> <operator pos:line="570" pos:column="12">=<pos:position pos:line="570" pos:column="13"/></operator> <call><name><name pos:line="570" pos:column="14">conn<pos:position pos:line="570" pos:column="18"/></name><operator pos:line="570" pos:column="18">-&gt;<pos:position pos:line="570" pos:column="23"/></operator><name pos:line="570" pos:column="20">curl_connect<pos:position pos:line="570" pos:column="32"/></name></name><argument_list pos:line="570" pos:column="32">(<argument><expr><name pos:line="570" pos:column="33">conn<pos:position pos:line="570" pos:column="37"/></name></expr></argument>)<pos:position pos:line="570" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="570" pos:column="39"/></expr_stmt>
    <if pos:line="571" pos:column="5">if<condition pos:line="571" pos:column="7">(<expr><name pos:line="571" pos:column="8">result<pos:position pos:line="571" pos:column="14"/></name> <operator pos:line="571" pos:column="15">!=<pos:position pos:line="571" pos:column="17"/></operator> <name pos:line="571" pos:column="18">CURLE_OK<pos:position pos:line="571" pos:column="26"/></name></expr>)<pos:position pos:line="571" pos:column="27"/></condition><then pos:line="571" pos:column="27">
      <block type="pseudo"><return pos:line="572" pos:column="7">return <expr><name pos:line="572" pos:column="14">result<pos:position pos:line="572" pos:column="20"/></name></expr>;<pos:position pos:line="572" pos:column="21"/></return></block></then></if> <comment type="block" pos:line="572" pos:column="22">/* pass back errors */</comment>
  }<pos:position pos:line="573" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="575" pos:column="3">pgrsTime<pos:position pos:line="575" pos:column="11"/></name><argument_list pos:line="575" pos:column="11">(<argument><expr><name pos:line="575" pos:column="12">data<pos:position pos:line="575" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="575" pos:column="18">TIMER_CONNECT<pos:position pos:line="575" pos:column="31"/></name></expr></argument>)<pos:position pos:line="575" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="575" pos:column="33"/></expr_stmt> <comment type="block" pos:line="575" pos:column="34">/* we're connected */</comment>

  <expr_stmt><expr><name><name pos:line="577" pos:column="3">conn<pos:position pos:line="577" pos:column="7"/></name><operator pos:line="577" pos:column="7">-&gt;<pos:position pos:line="577" pos:column="12"/></operator><name pos:line="577" pos:column="9">now<pos:position pos:line="577" pos:column="12"/></name></name> <operator pos:line="577" pos:column="13">=<pos:position pos:line="577" pos:column="14"/></operator> <call><name pos:line="577" pos:column="15">tvnow<pos:position pos:line="577" pos:column="20"/></name><argument_list pos:line="577" pos:column="20">()<pos:position pos:line="577" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="23"/></expr_stmt> <comment type="block" pos:line="577" pos:column="24">/* time this *after* the connect is done */</comment>
  <expr_stmt><expr><name><name pos:line="578" pos:column="3">conn<pos:position pos:line="578" pos:column="7"/></name><operator pos:line="578" pos:column="7">-&gt;<pos:position pos:line="578" pos:column="12"/></operator><name pos:line="578" pos:column="9">bytecount<pos:position pos:line="578" pos:column="18"/></name></name> <operator pos:line="578" pos:column="19">=<pos:position pos:line="578" pos:column="20"/></operator> <literal type="number" pos:line="578" pos:column="21">0<pos:position pos:line="578" pos:column="22"/></literal></expr>;<pos:position pos:line="578" pos:column="23"/></expr_stmt>
  
  <comment type="block" pos:line="580" pos:column="3">/* Figure out the ip-number and the first host name it shows: */</comment>
  <block pos:line="581" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="582" pos:column="5">struct<pos:position pos:line="582" pos:column="11"/></name> <name pos:line="582" pos:column="12">in_addr<pos:position pos:line="582" pos:column="19"/></name></name></type> <name pos:line="582" pos:column="20">in<pos:position pos:line="582" pos:column="22"/></name></decl>;<pos:position pos:line="582" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="583" pos:column="5">(<pos:position pos:line="583" pos:column="6"/></operator><name pos:line="583" pos:column="6">void<pos:position pos:line="583" pos:column="10"/></name><operator pos:line="583" pos:column="10">)<pos:position pos:line="583" pos:column="11"/></operator> <call><name pos:line="583" pos:column="12">memcpy<pos:position pos:line="583" pos:column="18"/></name><argument_list pos:line="583" pos:column="18">(<argument><expr><operator pos:line="583" pos:column="19">&amp;<pos:position pos:line="583" pos:column="24"/></operator><name><name pos:line="583" pos:column="20">in<pos:position pos:line="583" pos:column="22"/></name><operator pos:line="583" pos:column="22">.<pos:position pos:line="583" pos:column="23"/></operator><name pos:line="583" pos:column="23">s_addr<pos:position pos:line="583" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="583" pos:column="31">*<pos:position pos:line="583" pos:column="32"/></operator><name><name pos:line="583" pos:column="32">conn<pos:position pos:line="583" pos:column="36"/></name><operator pos:line="583" pos:column="36">-&gt;<pos:position pos:line="583" pos:column="41"/></operator><name pos:line="583" pos:column="38">hp<pos:position pos:line="583" pos:column="40"/></name><operator pos:line="583" pos:column="40">-&gt;<pos:position pos:line="583" pos:column="45"/></operator><name pos:line="583" pos:column="42">h_addr_list<pos:position pos:line="583" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="583" pos:column="55">sizeof <argument_list pos:line="583" pos:column="62">(<argument><expr><name><name pos:line="583" pos:column="63">in<pos:position pos:line="583" pos:column="65"/></name><operator pos:line="583" pos:column="65">.<pos:position pos:line="583" pos:column="66"/></operator><name pos:line="583" pos:column="66">s_addr<pos:position pos:line="583" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="583" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="583" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="583" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="584" pos:column="5">infof<pos:position pos:line="584" pos:column="10"/></name><argument_list pos:line="584" pos:column="10">(<argument><expr><name pos:line="584" pos:column="11">data<pos:position pos:line="584" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="584" pos:column="17">"Connected to %s (%s)\n"<pos:position pos:line="584" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="584" pos:column="43">conn<pos:position pos:line="584" pos:column="47"/></name><operator pos:line="584" pos:column="47">-&gt;<pos:position pos:line="584" pos:column="52"/></operator><name pos:line="584" pos:column="49">hp<pos:position pos:line="584" pos:column="51"/></name><operator pos:line="584" pos:column="51">-&gt;<pos:position pos:line="584" pos:column="56"/></operator><name pos:line="584" pos:column="53">h_name<pos:position pos:line="584" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="584" pos:column="61">inet_ntoa<pos:position pos:line="584" pos:column="70"/></name><argument_list pos:line="584" pos:column="70">(<argument><expr><name pos:line="584" pos:column="71">in<pos:position pos:line="584" pos:column="73"/></name></expr></argument>)<pos:position pos:line="584" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="584" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="76"/></expr_stmt>
  }<pos:position pos:line="585" pos:column="4"/></block>

<cpp:if pos:line="587" pos:column="1">#<cpp:directive pos:line="587" pos:column="2">if<pos:position pos:line="587" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="587" pos:column="5">0<pos:position pos:line="587" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="587" pos:column="7">/* Kerberos experiements! Beware! Take cover! */</comment>
  kerberos_connect(data, name);
<cpp:endif pos:line="589" pos:column="1">#<cpp:directive pos:line="589" pos:column="2">endif<pos:position pos:line="589" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="591" pos:column="1">#<cpp:directive pos:line="591" pos:column="2">ifdef<pos:position pos:line="591" pos:column="7"/></cpp:directive> <name pos:line="591" pos:column="8">__EMX__<pos:position pos:line="591" pos:column="15"/></name></cpp:ifdef>
  <comment type="block" pos:line="592" pos:column="3">/* 20000330 mgs
   * the check is quite a hack...
   * we're calling _fsetmode to fix the problem with fwrite converting newline
   * characters (you get mangled text files, and corrupted binary files when
   * you download to stdout and redirect it to a file). */</comment>

  <if pos:line="598" pos:column="3">if <condition pos:line="598" pos:column="6">(<expr><name><operator pos:line="598" pos:column="7">(<pos:position pos:line="598" pos:column="8"/></operator><name><name pos:line="598" pos:column="8">data<pos:position pos:line="598" pos:column="12"/></name><operator pos:line="598" pos:column="12">-&gt;<pos:position pos:line="598" pos:column="17"/></operator><name pos:line="598" pos:column="14">out<pos:position pos:line="598" pos:column="17"/></name></name><operator pos:line="598" pos:column="17">)<pos:position pos:line="598" pos:column="18"/></operator><operator pos:line="598" pos:column="18">-&gt;<pos:position pos:line="598" pos:column="23"/></operator><name pos:line="598" pos:column="20">_handle<pos:position pos:line="598" pos:column="27"/></name></name> <operator pos:line="598" pos:column="28">==<pos:position pos:line="598" pos:column="30"/></operator> <name pos:line="598" pos:column="31">NULL<pos:position pos:line="598" pos:column="35"/></name></expr>)<pos:position pos:line="598" pos:column="36"/></condition><then pos:line="598" pos:column="36"> <block pos:line="598" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="599" pos:column="5">_fsetmode<pos:position pos:line="599" pos:column="14"/></name><argument_list pos:line="599" pos:column="14">(<argument><expr><name pos:line="599" pos:column="15">stdout<pos:position pos:line="599" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="599" pos:column="23">"b"<pos:position pos:line="599" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="599" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="599" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="600" pos:column="4"/></block></then></if>
<cpp:endif pos:line="601" pos:column="1">#<cpp:directive pos:line="601" pos:column="2">endif<pos:position pos:line="601" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="603" pos:column="3">return <expr><name pos:line="603" pos:column="10">CURLE_OK<pos:position pos:line="603" pos:column="18"/></name></expr>;<pos:position pos:line="603" pos:column="19"/></return>
}<pos:position pos:line="604" pos:column="2"/></block></function></unit>

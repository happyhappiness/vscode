<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_96_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">waitconnect<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">sockfd<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="29">/* socket */</comment>
                <parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">timeout_msec<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">fd_set<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">fd<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">fd_set<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">errfd<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">timeval<pos:position pos:line="7" pos:column="17"/></name></name></type> <name pos:line="7" pos:column="18">interval<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* now select() until we get connect or timeout */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">FD_ZERO<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><operator pos:line="11" pos:column="11">&amp;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="12">fd<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">FD_SET<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name pos:line="12" pos:column="10">sockfd<pos:position pos:line="12" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="18">&amp;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="19">fd<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">FD_ZERO<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><operator pos:line="14" pos:column="11">&amp;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="12">errfd<pos:position pos:line="14" pos:column="17"/></name></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">FD_SET<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">sockfd<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="19">errfd<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">interval<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">tv_sec<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">timeout_msec<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">/<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">1000<pos:position pos:line="17" pos:column="38"/></literal></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">timeout_msec<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">-=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">interval<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">tv_sec<pos:position pos:line="18" pos:column="34"/></name></name><operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><literal type="number" pos:line="18" pos:column="35">1000<pos:position pos:line="18" pos:column="39"/></literal></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">interval<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">tv_usec<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">timeout_msec<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><literal type="number" pos:line="20" pos:column="35">1000<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">rc<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <call><name pos:line="22" pos:column="8">select<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">sockfd<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">+<pos:position pos:line="22" pos:column="22"/></operator><literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="25">NULL<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">fd<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="37">errfd<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">interval<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">-<pos:position pos:line="23" pos:column="7"/></operator><literal type="number" pos:line="23" pos:column="7">1<pos:position pos:line="23" pos:column="8"/></literal> <operator pos:line="23" pos:column="9">==<pos:position pos:line="23" pos:column="11"/></operator> <name pos:line="23" pos:column="12">rc<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition><then pos:line="23" pos:column="15">
    <comment type="block" pos:line="24" pos:column="5">/* error, no connect here, try next */</comment>
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return></block></then>
  
  <elseif pos:line="27" pos:column="3">else <if pos:line="27" pos:column="8">if<condition pos:line="27" pos:column="10">(<expr><literal type="number" pos:line="27" pos:column="11">0<pos:position pos:line="27" pos:column="12"/></literal> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">rc<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
    <comment type="block" pos:line="28" pos:column="5">/* timeout, no connect today */</comment>
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">1<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return></block></then></if></elseif></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><call><name pos:line="31" pos:column="6">FD_ISSET<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">sockfd<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="23">&amp;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="24">errfd<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
    <comment type="block" pos:line="32" pos:column="5">/* error condition caught */</comment>
    <block type="pseudo"><return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">2<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="35" pos:column="3">/* we have a connect! */</comment>
  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

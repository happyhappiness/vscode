<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_257_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">storerequest<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">reqbuf<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">ssize_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">totalsize<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">error<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">written<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">writeleft<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">dump<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">reqbuf<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">totalsize<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">totalsize<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&lt;<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">logmsg<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"Invalid size (%d bytes) for request input. Not written to %s"<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>,
           <argument><expr><name pos:line="15" pos:column="12">totalsize<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">REQUEST_DUMP<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
    <return pos:line="16" pos:column="5">return;<pos:position pos:line="16" pos:column="12"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if></elseif></if>

  <do pos:line="19" pos:column="3">do <block pos:line="19" pos:column="6">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">dump<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">fopen<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">REQUEST_DUMP<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"ab"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block> while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">dump<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">)<pos:position pos:line="21" pos:column="26"/></operator> <operator pos:line="21" pos:column="27">&amp;&amp;<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="30">(<pos:position pos:line="21" pos:column="31"/></operator><operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">error<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">=<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">ERRNO<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator> <operator pos:line="21" pos:column="47">==<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">EINTR<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">)<pos:position pos:line="21" pos:column="56"/></operator></expr>)<pos:position pos:line="21" pos:column="57"/></condition>;<pos:position pos:line="21" pos:column="58"/></do>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">dump<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">==<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">NULL<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20"> <block pos:line="22" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">logmsg<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"Error opening file %s error: %d %s"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>,
           <argument><expr><name pos:line="24" pos:column="12">REQUEST_DUMP<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="26">error<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="33">strerror<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">error<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">logmsg<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="string" pos:line="25" pos:column="12">"Failed to write request input to "<pos:position pos:line="25" pos:column="47"/></literal> <name pos:line="25" pos:column="48">REQUEST_DUMP<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
    <return pos:line="26" pos:column="5">return;<pos:position pos:line="26" pos:column="12"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">writeleft<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">totalsize<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
  <do pos:line="30" pos:column="3">do <block pos:line="30" pos:column="6">{
    <expr_stmt><expr><name pos:line="31" pos:column="5">written<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">ssize_t<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">)<pos:position pos:line="31" pos:column="24"/></operator><call><name pos:line="31" pos:column="24">fwrite<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">void<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">*<pos:position pos:line="31" pos:column="38"/></operator><operator pos:line="31" pos:column="38">)<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">&amp;<pos:position pos:line="31" pos:column="45"/></operator><name><name pos:line="31" pos:column="41">reqbuf<pos:position pos:line="31" pos:column="47"/></name><index pos:line="31" pos:column="47">[<expr><name pos:line="31" pos:column="48">totalsize<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="58">writeleft<pos:position pos:line="31" pos:column="67"/></name></expr>]<pos:position pos:line="31" pos:column="68"/></index></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="32" pos:column="31">1<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="34">(<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">size_t<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">)<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">writeleft<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="53">dump<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">written<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&gt;<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="19">0<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">writeleft<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">-=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">written<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block> while <condition pos:line="35" pos:column="11">(<expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">writeleft<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&gt;<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal><operator pos:line="35" pos:column="26">)<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">&amp;&amp;<pos:position pos:line="35" pos:column="38"/></operator> <operator pos:line="35" pos:column="31">(<pos:position pos:line="35" pos:column="32"/></operator><operator pos:line="35" pos:column="32">(<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">error<pos:position pos:line="35" pos:column="38"/></name> <operator pos:line="35" pos:column="39">=<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">ERRNO<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">)<pos:position pos:line="35" pos:column="47"/></operator> <operator pos:line="35" pos:column="48">==<pos:position pos:line="35" pos:column="50"/></operator> <name pos:line="35" pos:column="51">EINTR<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">)<pos:position pos:line="35" pos:column="57"/></operator></expr>)<pos:position pos:line="35" pos:column="58"/></condition>;<pos:position pos:line="35" pos:column="59"/></do>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">fclose<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name pos:line="37" pos:column="10">dump<pos:position pos:line="37" pos:column="14"/></name></expr></argument>)<pos:position pos:line="37" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>  <comment type="block" pos:line="37" pos:column="18">/* close it ASAP */</comment>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">writeleft<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&gt;<pos:position pos:line="39" pos:column="21"/></operator> <literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21"> <block pos:line="39" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">logmsg<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="string" pos:line="40" pos:column="12">"Error writing file %s error: %d %s"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>,
           <argument><expr><name pos:line="41" pos:column="12">REQUEST_DUMP<pos:position pos:line="41" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="26">error<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="33">strerror<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name pos:line="41" pos:column="42">error<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">logmsg<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"Wrote only (%d bytes) of (%d bytes) request input to %s"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>,
           <argument><expr><name pos:line="43" pos:column="12">totalsize<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">writeleft<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">totalsize<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">REQUEST_DUMP<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then>
  <else pos:line="45" pos:column="3">else <block pos:line="45" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">logmsg<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="string" pos:line="46" pos:column="12">"Wrote request (%d bytes) input to "<pos:position pos:line="46" pos:column="48"/></literal> <name pos:line="46" pos:column="49">REQUEST_DUMP<pos:position pos:line="46" pos:column="61"/></name></expr></argument>,
           <argument><expr><name pos:line="47" pos:column="12">totalsize<pos:position pos:line="47" pos:column="21"/></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

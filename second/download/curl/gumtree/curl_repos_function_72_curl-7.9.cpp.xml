<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_72_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_SSLConnect<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">connectdata<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">conn<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">retcode<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">CURLE_OK<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">USE_SSLEAY<pos:position pos:line="6" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">err<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type> <name pos:line="9" pos:column="10">str<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">SSL_METHOD<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">req_method<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">SSL_SESSION<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">ssl_sessionid<pos:position pos:line="11" pos:column="29"/></name><init pos:line="11" pos:column="29">=<expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">ASN1_TIME<pos:position pos:line="12" pos:column="12"/></name> <modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type><name pos:line="12" pos:column="14">certdate<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* mark this is being ssl enabled from here on out. */</comment>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">conn<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">ssl<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">use<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">TRUE<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Make funny stuff to get random input */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">random_the_seed<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">conn<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    
  <switch pos:line="20" pos:column="3">switch<condition pos:line="20" pos:column="9">(<expr><name><name pos:line="20" pos:column="10">data<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">set<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">ssl<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">version<pos:position pos:line="20" pos:column="31"/></name></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition> <block pos:line="20" pos:column="33">{
  <default pos:line="21" pos:column="3">default:<pos:position pos:line="21" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="22" pos:column="5">req_method<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">SSLv23_client_method<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">()<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  <case pos:line="24" pos:column="3">case <expr><literal type="number" pos:line="24" pos:column="8">2<pos:position pos:line="24" pos:column="9"/></literal></expr>:<pos:position pos:line="24" pos:column="10"/></case>
    <expr_stmt><expr><name pos:line="25" pos:column="5">req_method<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">SSLv2_client_method<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">()<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>
  <case pos:line="27" pos:column="3">case <expr><literal type="number" pos:line="27" pos:column="8">3<pos:position pos:line="27" pos:column="9"/></literal></expr>:<pos:position pos:line="27" pos:column="10"/></case>
    <expr_stmt><expr><name pos:line="28" pos:column="5">req_method<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">SSLv3_client_method<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">()<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
    <break pos:line="29" pos:column="5">break;<pos:position pos:line="29" pos:column="11"/></break>
  }<pos:position pos:line="30" pos:column="4"/></block></switch>
    
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">conn<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">ssl<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">ctx<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">SSL_CTX_new<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">req_method<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">!<pos:position pos:line="34" pos:column="7"/></operator><name><name pos:line="34" pos:column="7">conn<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">ssl<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">ctx<pos:position pos:line="34" pos:column="20"/></name></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">failf<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">data<pos:position pos:line="35" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="17">"SSL: couldn't create a context!"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
    
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><name><name pos:line="39" pos:column="6">data<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">set<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">cert<pos:position pos:line="39" pos:column="20"/></name></name></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21"> <block pos:line="39" pos:column="22">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name pos:line="40" pos:column="10">cert_stuff<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">conn<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="27">data<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">set<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">.<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">cert<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">data<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">set<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">.<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">cert<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="59"/></condition><then pos:line="40" pos:column="59"> <block pos:line="40" pos:column="60">{
      <comment type="block" pos:line="41" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <return pos:line="42" pos:column="7">return <expr><name pos:line="42" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name><name pos:line="46" pos:column="6">data<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">set<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">ssl<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">cipher_list<pos:position pos:line="46" pos:column="31"/></name></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">!<pos:position pos:line="47" pos:column="10"/></operator><call><name pos:line="47" pos:column="10">SSL_CTX_set_cipher_list<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">conn<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">ssl<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">ctx<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>,
                                 <argument><expr><name><name pos:line="48" pos:column="34">data<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">-&gt;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="40">set<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">.<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">ssl<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">.<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">cipher_list<pos:position pos:line="48" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="61"/></condition><then pos:line="48" pos:column="61"> <block pos:line="48" pos:column="62">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">failf<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">data<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"failed setting cipher list\n"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
      <return pos:line="50" pos:column="7">return <expr><name pos:line="50" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name><name pos:line="54" pos:column="6">data<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">set<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">ssl<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">verifypeer<pos:position pos:line="54" pos:column="30"/></name></name></expr>)<pos:position pos:line="54" pos:column="31"/></condition><then><block pos:line="54" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">SSL_CTX_set_verify<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><name><name pos:line="55" pos:column="24">conn<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">ssl<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">.<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">ctx<pos:position pos:line="55" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="56" pos:column="24">SSL_VERIFY_PEER<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">|<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="40">SSL_VERIFY_FAIL_IF_NO_PEER_CERT<pos:position pos:line="56" pos:column="71"/></name><operator pos:line="56" pos:column="71">|<pos:position pos:line="56" pos:column="72"/></operator>
                       <name pos:line="57" pos:column="24">SSL_VERIFY_CLIENT_ONCE<pos:position pos:line="57" pos:column="46"/></name></expr></argument>,
                       <argument><expr><name pos:line="58" pos:column="24">cert_verify_callback<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">!<pos:position pos:line="59" pos:column="10"/></operator><call><name pos:line="59" pos:column="10">SSL_CTX_load_verify_locations<pos:position pos:line="59" pos:column="39"/></name><argument_list pos:line="59" pos:column="39">(<argument><expr><name><name pos:line="59" pos:column="40">conn<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">ssl<pos:position pos:line="59" pos:column="49"/></name><operator pos:line="59" pos:column="49">.<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="50">ctx<pos:position pos:line="59" pos:column="53"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="60" pos:column="40">data<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">set<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">.<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="50">ssl<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">.<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="54">CAfile<pos:position pos:line="60" pos:column="60"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="61" pos:column="40">data<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">set<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">.<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="50">ssl<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">.<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="54">CApath<pos:position pos:line="61" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="62"/></condition><then pos:line="61" pos:column="62"> <block pos:line="61" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">failf<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">data<pos:position pos:line="62" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="62" pos:column="18">"error setting cerficate verify locations\n"<pos:position pos:line="62" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt>
      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="63" pos:column="37"/></name></expr>;<pos:position pos:line="63" pos:column="38"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then>
  <else pos:line="66" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">SSL_CTX_set_verify<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name><name pos:line="67" pos:column="24">conn<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">ssl<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">.<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">ctx<pos:position pos:line="67" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="39">SSL_VERIFY_NONE<pos:position pos:line="67" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="56">cert_verify_callback<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="78"/></expr_stmt></block></else></if>


  <comment type="block" pos:line="70" pos:column="3">/* Lets make an SSL structure */</comment>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">conn<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">ssl<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">.<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">handle<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <call><name pos:line="71" pos:column="22">SSL_new<pos:position pos:line="71" pos:column="29"/></name> <argument_list pos:line="71" pos:column="30">(<argument><expr><name><name pos:line="71" pos:column="31">conn<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">ssl<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">.<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">ctx<pos:position pos:line="71" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">SSL_set_connect_state<pos:position pos:line="72" pos:column="24"/></name> <argument_list pos:line="72" pos:column="25">(<argument><expr><name><name pos:line="72" pos:column="26">conn<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">-&gt;<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="32">ssl<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">.<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">handle<pos:position pos:line="72" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="74" pos:column="3">conn<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">ssl<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">.<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="13">server_cert<pos:position pos:line="74" pos:column="24"/></name></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="number" pos:line="74" pos:column="27">0x0<pos:position pos:line="74" pos:column="30"/></literal></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><operator pos:line="76" pos:column="6">!<pos:position pos:line="76" pos:column="7"/></operator><name><name pos:line="76" pos:column="7">conn<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">bits<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">.<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">reuse<pos:position pos:line="76" pos:column="23"/></name></name></expr>)<pos:position pos:line="76" pos:column="24"/></condition><then pos:line="76" pos:column="24"> <block pos:line="76" pos:column="25">{
    <comment type="block" pos:line="77" pos:column="5">/* We're not re-using a connection, check if there's a cached ID we
       can/should use here! */</comment>
    <if pos:line="79" pos:column="5">if<condition pos:line="79" pos:column="7">(<expr><operator pos:line="79" pos:column="8">!<pos:position pos:line="79" pos:column="9"/></operator><call><name pos:line="79" pos:column="9">Get_SSL_Session<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">conn<pos:position pos:line="79" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="31">&amp;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="32">ssl_sessionid<pos:position pos:line="79" pos:column="45"/></name></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="47"/></condition><then pos:line="79" pos:column="47"> <block pos:line="79" pos:column="48">{
      <comment type="block" pos:line="80" pos:column="7">/* we got a session id, use it! */</comment>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">SSL_set_session<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name><name pos:line="81" pos:column="23">conn<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">ssl<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">.<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="33">handle<pos:position pos:line="81" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="41">ssl_sessionid<pos:position pos:line="81" pos:column="54"/></name></expr></argument>)<pos:position pos:line="81" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="56"/></expr_stmt>
      <comment type="block" pos:line="82" pos:column="7">/* Informational message */</comment>
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">infof<pos:position pos:line="83" pos:column="12"/></name> <argument_list pos:line="83" pos:column="13">(<argument><expr><name pos:line="83" pos:column="14">data<pos:position pos:line="83" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="20">"SSL re-using session ID\n"<pos:position pos:line="83" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="87" pos:column="3">/* pass the raw socket into the SSL layers */</comment>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">SSL_set_fd<pos:position pos:line="88" pos:column="13"/></name> <argument_list pos:line="88" pos:column="14">(<argument><expr><name><name pos:line="88" pos:column="15">conn<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">-&gt;<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="21">ssl<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">.<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="25">handle<pos:position pos:line="88" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="33">conn<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">firstsocket<pos:position pos:line="88" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="89" pos:column="3">err<pos:position pos:line="89" pos:column="6"/></name> <operator pos:line="89" pos:column="7">=<pos:position pos:line="89" pos:column="8"/></operator> <call><name pos:line="89" pos:column="9">SSL_connect<pos:position pos:line="89" pos:column="20"/></name> <argument_list pos:line="89" pos:column="21">(<argument><expr><name><name pos:line="89" pos:column="22">conn<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">-&gt;<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="28">ssl<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">.<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">handle<pos:position pos:line="89" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>

  <comment type="block" pos:line="91" pos:column="3">/* 1  is fine
     0  is "not successful but was shut down controlled"
     &lt;0 is "handshake was not successful, because a fatal error occurred" */</comment>
  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">err<pos:position pos:line="94" pos:column="10"/></name> <operator pos:line="94" pos:column="11">&lt;=<pos:position pos:line="94" pos:column="16"/></operator> <literal type="number" pos:line="94" pos:column="14">0<pos:position pos:line="94" pos:column="15"/></literal></expr>)<pos:position pos:line="94" pos:column="16"/></condition><then pos:line="94" pos:column="16"> <block pos:line="94" pos:column="17">{
    <expr_stmt><expr><name pos:line="95" pos:column="5">err<pos:position pos:line="95" pos:column="8"/></name> <operator pos:line="95" pos:column="9">=<pos:position pos:line="95" pos:column="10"/></operator> <call><name pos:line="95" pos:column="11">ERR_get_error<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">()<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt> 
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">failf<pos:position pos:line="96" pos:column="10"/></name><argument_list pos:line="96" pos:column="10">(<argument><expr><name pos:line="96" pos:column="11">data<pos:position pos:line="96" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="17">"SSL: %s"<pos:position pos:line="96" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="28">ERR_error_string<pos:position pos:line="96" pos:column="44"/></name><argument_list pos:line="96" pos:column="44">(<argument><expr><name pos:line="96" pos:column="45">err<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="50">NULL<pos:position pos:line="96" pos:column="54"/></name></expr></argument>)<pos:position pos:line="96" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="97" pos:column="35"/></name></expr>;<pos:position pos:line="97" pos:column="36"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="100" pos:column="3">/* Informational message */</comment>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">infof<pos:position pos:line="101" pos:column="8"/></name> <argument_list pos:line="101" pos:column="9">(<argument><expr><name pos:line="101" pos:column="10">data<pos:position pos:line="101" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="16">"SSL connection using %s\n"<pos:position pos:line="101" pos:column="43"/></literal></expr></argument>,
         <argument><expr><call><name pos:line="102" pos:column="10">SSL_get_cipher<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name><name pos:line="102" pos:column="25">conn<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">-&gt;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="31">ssl<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">.<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="35">handle<pos:position pos:line="102" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>

  <if pos:line="104" pos:column="3">if<condition pos:line="104" pos:column="5">(<expr><operator pos:line="104" pos:column="6">!<pos:position pos:line="104" pos:column="7"/></operator><name pos:line="104" pos:column="7">ssl_sessionid<pos:position pos:line="104" pos:column="20"/></name></expr>)<pos:position pos:line="104" pos:column="21"/></condition><then pos:line="104" pos:column="21"> <block pos:line="104" pos:column="22">{
    <comment type="block" pos:line="105" pos:column="5">/* Since this is not a cached session ID, then we want to stach this one
       in the cache! */</comment>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">Store_SSL_Session<pos:position pos:line="107" pos:column="22"/></name><argument_list pos:line="107" pos:column="22">(<argument><expr><name pos:line="107" pos:column="23">conn<pos:position pos:line="107" pos:column="27"/></name></expr></argument>)<pos:position pos:line="107" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>

  
  <comment type="block" pos:line="111" pos:column="3">/* Get server's certificate (note: beware of dynamic allocation) - opt */</comment>
  <comment type="block" pos:line="112" pos:column="3">/* major serious hack alert -- we should check certificates
   * to authenticate the server; otherwise we risk man-in-the-middle
   * attack
   */</comment>

  <expr_stmt><expr><name><name pos:line="117" pos:column="3">conn<pos:position pos:line="117" pos:column="7"/></name><operator pos:line="117" pos:column="7">-&gt;<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="9">ssl<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">server_cert<pos:position pos:line="117" pos:column="24"/></name></name> <operator pos:line="117" pos:column="25">=<pos:position pos:line="117" pos:column="26"/></operator> <call><name pos:line="117" pos:column="27">SSL_get_peer_certificate<pos:position pos:line="117" pos:column="51"/></name> <argument_list pos:line="117" pos:column="52">(<argument><expr><name><name pos:line="117" pos:column="53">conn<pos:position pos:line="117" pos:column="57"/></name><operator pos:line="117" pos:column="57">-&gt;<pos:position pos:line="117" pos:column="62"/></operator><name pos:line="117" pos:column="59">ssl<pos:position pos:line="117" pos:column="62"/></name><operator pos:line="117" pos:column="62">.<pos:position pos:line="117" pos:column="63"/></operator><name pos:line="117" pos:column="63">handle<pos:position pos:line="117" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="71"/></expr_stmt>
  <if pos:line="118" pos:column="3">if<condition pos:line="118" pos:column="5">(<expr><operator pos:line="118" pos:column="6">!<pos:position pos:line="118" pos:column="7"/></operator><name><name pos:line="118" pos:column="7">conn<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">-&gt;<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="13">ssl<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">.<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="17">server_cert<pos:position pos:line="118" pos:column="28"/></name></name></expr>)<pos:position pos:line="118" pos:column="29"/></condition><then pos:line="118" pos:column="29"> <block pos:line="118" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">failf<pos:position pos:line="119" pos:column="10"/></name><argument_list pos:line="119" pos:column="10">(<argument><expr><name pos:line="119" pos:column="11">data<pos:position pos:line="119" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="17">"SSL: couldn't get peer certificate!"<pos:position pos:line="119" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="56"/></expr_stmt>
    <return pos:line="120" pos:column="5">return <expr><name pos:line="120" pos:column="12">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="120" pos:column="38"/></name></expr>;<pos:position pos:line="120" pos:column="39"/></return>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="122" pos:column="3">infof<pos:position pos:line="122" pos:column="8"/></name> <argument_list pos:line="122" pos:column="9">(<argument><expr><name pos:line="122" pos:column="10">data<pos:position pos:line="122" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="16">"Server certificate:\n"<pos:position pos:line="122" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="41"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="124" pos:column="3">str<pos:position pos:line="124" pos:column="6"/></name> <operator pos:line="124" pos:column="7">=<pos:position pos:line="124" pos:column="8"/></operator> <call><name pos:line="124" pos:column="9">X509_NAME_oneline<pos:position pos:line="124" pos:column="26"/></name> <argument_list pos:line="124" pos:column="27">(<argument><expr><call><name pos:line="124" pos:column="28">X509_get_subject_name<pos:position pos:line="124" pos:column="49"/></name> <argument_list pos:line="124" pos:column="50">(<argument><expr><name><name pos:line="124" pos:column="51">conn<pos:position pos:line="124" pos:column="55"/></name><operator pos:line="124" pos:column="55">-&gt;<pos:position pos:line="124" pos:column="60"/></operator><name pos:line="124" pos:column="57">ssl<pos:position pos:line="124" pos:column="60"/></name><operator pos:line="124" pos:column="60">.<pos:position pos:line="124" pos:column="61"/></operator><name pos:line="124" pos:column="61">server_cert<pos:position pos:line="124" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="73"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="125" pos:column="28">NULL<pos:position pos:line="125" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="34">0<pos:position pos:line="125" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="37"/></expr_stmt>
  <if pos:line="126" pos:column="3">if<condition pos:line="126" pos:column="5">(<expr><operator pos:line="126" pos:column="6">!<pos:position pos:line="126" pos:column="7"/></operator><name pos:line="126" pos:column="7">str<pos:position pos:line="126" pos:column="10"/></name></expr>)<pos:position pos:line="126" pos:column="11"/></condition><then pos:line="126" pos:column="11"> <block pos:line="126" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">failf<pos:position pos:line="127" pos:column="10"/></name><argument_list pos:line="127" pos:column="10">(<argument><expr><name pos:line="127" pos:column="11">data<pos:position pos:line="127" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="17">"SSL: couldn't get X509-subject!"<pos:position pos:line="127" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">X509_free<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><name><name pos:line="128" pos:column="15">conn<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">-&gt;<pos:position pos:line="128" pos:column="24"/></operator><name pos:line="128" pos:column="21">ssl<pos:position pos:line="128" pos:column="24"/></name><operator pos:line="128" pos:column="24">.<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="25">server_cert<pos:position pos:line="128" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="38"/></expr_stmt>
    <return pos:line="129" pos:column="5">return <expr><name pos:line="129" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="129" pos:column="35"/></name></expr>;<pos:position pos:line="129" pos:column="36"/></return>
  }<pos:position pos:line="130" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="131" pos:column="3">infof<pos:position pos:line="131" pos:column="8"/></name><argument_list pos:line="131" pos:column="8">(<argument><expr><name pos:line="131" pos:column="9">data<pos:position pos:line="131" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="15">"\t subject: %s\n"<pos:position pos:line="131" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="35">str<pos:position pos:line="131" pos:column="38"/></name></expr></argument>)<pos:position pos:line="131" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="132" pos:column="3">CRYPTO_free<pos:position pos:line="132" pos:column="14"/></name><argument_list pos:line="132" pos:column="14">(<argument><expr><name pos:line="132" pos:column="15">str<pos:position pos:line="132" pos:column="18"/></name></expr></argument>)<pos:position pos:line="132" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name pos:line="134" pos:column="3">certdate<pos:position pos:line="134" pos:column="11"/></name> <operator pos:line="134" pos:column="12">=<pos:position pos:line="134" pos:column="13"/></operator> <call><name pos:line="134" pos:column="14">X509_get_notBefore<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name><name pos:line="134" pos:column="33">conn<pos:position pos:line="134" pos:column="37"/></name><operator pos:line="134" pos:column="37">-&gt;<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="39">ssl<pos:position pos:line="134" pos:column="42"/></name><operator pos:line="134" pos:column="42">.<pos:position pos:line="134" pos:column="43"/></operator><name pos:line="134" pos:column="43">server_cert<pos:position pos:line="134" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="135" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="135" pos:column="27"/></name><argument_list pos:line="135" pos:column="27">(<argument><expr><name pos:line="135" pos:column="28">conn<pos:position pos:line="135" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="34">"\t start date: "<pos:position pos:line="135" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="53">certdate<pos:position pos:line="135" pos:column="61"/></name></expr></argument>)<pos:position pos:line="135" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="63"/></expr_stmt>

  <expr_stmt><expr><name pos:line="137" pos:column="3">certdate<pos:position pos:line="137" pos:column="11"/></name> <operator pos:line="137" pos:column="12">=<pos:position pos:line="137" pos:column="13"/></operator> <call><name pos:line="137" pos:column="14">X509_get_notAfter<pos:position pos:line="137" pos:column="31"/></name><argument_list pos:line="137" pos:column="31">(<argument><expr><name><name pos:line="137" pos:column="32">conn<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">-&gt;<pos:position pos:line="137" pos:column="41"/></operator><name pos:line="137" pos:column="38">ssl<pos:position pos:line="137" pos:column="41"/></name><operator pos:line="137" pos:column="41">.<pos:position pos:line="137" pos:column="42"/></operator><name pos:line="137" pos:column="42">server_cert<pos:position pos:line="137" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="138" pos:column="3">Curl_ASN1_UTCTIME_output<pos:position pos:line="138" pos:column="27"/></name><argument_list pos:line="138" pos:column="27">(<argument><expr><name pos:line="138" pos:column="28">conn<pos:position pos:line="138" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="34">"\t expire date: "<pos:position pos:line="138" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="54">certdate<pos:position pos:line="138" pos:column="62"/></name></expr></argument>)<pos:position pos:line="138" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="64"/></expr_stmt>

  <if pos:line="140" pos:column="3">if <condition pos:line="140" pos:column="6">(<expr><name><name pos:line="140" pos:column="7">data<pos:position pos:line="140" pos:column="11"/></name><operator pos:line="140" pos:column="11">-&gt;<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="13">set<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">.<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="17">ssl<pos:position pos:line="140" pos:column="20"/></name><operator pos:line="140" pos:column="20">.<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">verifyhost<pos:position pos:line="140" pos:column="31"/></name></name></expr>)<pos:position pos:line="140" pos:column="32"/></condition><then pos:line="140" pos:column="32"> <block pos:line="140" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="141" pos:column="5">char<pos:position pos:line="141" pos:column="9"/></name></type> <name><name pos:line="141" pos:column="10">peer_CN<pos:position pos:line="141" pos:column="17"/></name><index pos:line="141" pos:column="17">[<expr><literal type="number" pos:line="141" pos:column="18">257<pos:position pos:line="141" pos:column="21"/></literal></expr>]<pos:position pos:line="141" pos:column="22"/></index></name></decl>;<pos:position pos:line="141" pos:column="23"/></decl_stmt>
    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><call><name pos:line="142" pos:column="9">X509_NAME_get_text_by_NID<pos:position pos:line="142" pos:column="34"/></name><argument_list pos:line="142" pos:column="34">(<argument><expr><call><name pos:line="142" pos:column="35">X509_get_subject_name<pos:position pos:line="142" pos:column="56"/></name><argument_list pos:line="142" pos:column="56">(<argument><expr><name><name pos:line="142" pos:column="57">conn<pos:position pos:line="142" pos:column="61"/></name><operator pos:line="142" pos:column="61">-&gt;<pos:position pos:line="142" pos:column="66"/></operator><name pos:line="142" pos:column="63">ssl<pos:position pos:line="142" pos:column="66"/></name><operator pos:line="142" pos:column="66">.<pos:position pos:line="142" pos:column="67"/></operator><name pos:line="142" pos:column="67">server_cert<pos:position pos:line="142" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="79"/></argument_list></call></expr></argument>,
                                  <argument><expr><name pos:line="143" pos:column="35">NID_commonName<pos:position pos:line="143" pos:column="49"/></name></expr></argument>,
                                  <argument><expr><name pos:line="144" pos:column="35">peer_CN<pos:position pos:line="144" pos:column="42"/></name></expr></argument>,
                                  <argument><expr><sizeof pos:line="145" pos:column="35">sizeof<argument_list pos:line="145" pos:column="41">(<argument><expr><name pos:line="145" pos:column="42">peer_CN<pos:position pos:line="145" pos:column="49"/></name></expr></argument>)<pos:position pos:line="145" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="145" pos:column="51"/></argument_list></call> <operator pos:line="145" pos:column="52">&lt;<pos:position pos:line="145" pos:column="56"/></operator> <literal type="number" pos:line="145" pos:column="54">0<pos:position pos:line="145" pos:column="55"/></literal></expr>)<pos:position pos:line="145" pos:column="56"/></condition><then pos:line="145" pos:column="56"> <block pos:line="145" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="146" pos:column="7">failf<pos:position pos:line="146" pos:column="12"/></name><argument_list pos:line="146" pos:column="12">(<argument><expr><name pos:line="146" pos:column="13">data<pos:position pos:line="146" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="19">"SSL: unable to obtain common name from peer certificate"<pos:position pos:line="146" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="147" pos:column="7">X509_free<pos:position pos:line="147" pos:column="16"/></name><argument_list pos:line="147" pos:column="16">(<argument><expr><name><name pos:line="147" pos:column="17">conn<pos:position pos:line="147" pos:column="21"/></name><operator pos:line="147" pos:column="21">-&gt;<pos:position pos:line="147" pos:column="26"/></operator><name pos:line="147" pos:column="23">ssl<pos:position pos:line="147" pos:column="26"/></name><operator pos:line="147" pos:column="26">.<pos:position pos:line="147" pos:column="27"/></operator><name pos:line="147" pos:column="27">server_cert<pos:position pos:line="147" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="40"/></expr_stmt>
      <return pos:line="148" pos:column="7">return <expr><name pos:line="148" pos:column="14">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="148" pos:column="40"/></name></expr>;<pos:position pos:line="148" pos:column="41"/></return>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if>

    <if pos:line="151" pos:column="5">if <condition pos:line="151" pos:column="8">(<expr><operator pos:line="151" pos:column="9">!<pos:position pos:line="151" pos:column="10"/></operator><call><name pos:line="151" pos:column="10">strequal<pos:position pos:line="151" pos:column="18"/></name><argument_list pos:line="151" pos:column="18">(<argument><expr><name pos:line="151" pos:column="19">peer_CN<pos:position pos:line="151" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="28">conn<pos:position pos:line="151" pos:column="32"/></name><operator pos:line="151" pos:column="32">-&gt;<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="34">hostname<pos:position pos:line="151" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="44"/></condition><then pos:line="151" pos:column="44"> <block pos:line="151" pos:column="45">{
      <if pos:line="152" pos:column="7">if <condition pos:line="152" pos:column="10">(<expr><name><name pos:line="152" pos:column="11">data<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">-&gt;<pos:position pos:line="152" pos:column="20"/></operator><name pos:line="152" pos:column="17">set<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">.<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="21">ssl<pos:position pos:line="152" pos:column="24"/></name><operator pos:line="152" pos:column="24">.<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="25">verifyhost<pos:position pos:line="152" pos:column="35"/></name></name> <operator pos:line="152" pos:column="36">&gt;<pos:position pos:line="152" pos:column="40"/></operator> <literal type="number" pos:line="152" pos:column="38">1<pos:position pos:line="152" pos:column="39"/></literal></expr>)<pos:position pos:line="152" pos:column="40"/></condition><then pos:line="152" pos:column="40"> <block pos:line="152" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="153" pos:column="9">failf<pos:position pos:line="153" pos:column="14"/></name><argument_list pos:line="153" pos:column="14">(<argument><expr><name pos:line="153" pos:column="15">data<pos:position pos:line="153" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="21">"SSL: certificate subject name '%s' does not match "<pos:position pos:line="153" pos:column="73"/></literal>
              <literal type="string" pos:line="154" pos:column="15">"target host name '%s'"<pos:position pos:line="154" pos:column="38"/></literal></expr></argument>,
              <argument><expr><name pos:line="155" pos:column="15">peer_CN<pos:position pos:line="155" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="24">conn<pos:position pos:line="155" pos:column="28"/></name><operator pos:line="155" pos:column="28">-&gt;<pos:position pos:line="155" pos:column="33"/></operator><name pos:line="155" pos:column="30">hostname<pos:position pos:line="155" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="156" pos:column="9">X509_free<pos:position pos:line="156" pos:column="18"/></name><argument_list pos:line="156" pos:column="18">(<argument><expr><name><name pos:line="156" pos:column="19">conn<pos:position pos:line="156" pos:column="23"/></name><operator pos:line="156" pos:column="23">-&gt;<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="25">ssl<pos:position pos:line="156" pos:column="28"/></name><operator pos:line="156" pos:column="28">.<pos:position pos:line="156" pos:column="29"/></operator><name pos:line="156" pos:column="29">server_cert<pos:position pos:line="156" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="42"/></expr_stmt>
        <return pos:line="157" pos:column="9">return <expr><name pos:line="157" pos:column="16">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="157" pos:column="42"/></name></expr>;<pos:position pos:line="157" pos:column="43"/></return>
      }<pos:position pos:line="158" pos:column="8"/></block></then>
      <else pos:line="159" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="9">infof<pos:position pos:line="160" pos:column="14"/></name><argument_list pos:line="160" pos:column="14">(<argument><expr><name pos:line="160" pos:column="15">data<pos:position pos:line="160" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="161" pos:column="15">"\t common name: %s (does not match '%s')\n"<pos:position pos:line="161" pos:column="59"/></literal></expr></argument>,
              <argument><expr><name pos:line="162" pos:column="15">peer_CN<pos:position pos:line="162" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="24">conn<pos:position pos:line="162" pos:column="28"/></name><operator pos:line="162" pos:column="28">-&gt;<pos:position pos:line="162" pos:column="33"/></operator><name pos:line="162" pos:column="30">hostname<pos:position pos:line="162" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="163" pos:column="6"/></block></then>
    <else pos:line="164" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="165" pos:column="7">infof<pos:position pos:line="165" pos:column="12"/></name><argument_list pos:line="165" pos:column="12">(<argument><expr><name pos:line="165" pos:column="13">data<pos:position pos:line="165" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="19">"\t common name: %s (matched)\n"<pos:position pos:line="165" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="53">peer_CN<pos:position pos:line="165" pos:column="60"/></name></expr></argument>)<pos:position pos:line="165" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="62"/></expr_stmt></block></else></if>
  }<pos:position pos:line="166" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="168" pos:column="3">str<pos:position pos:line="168" pos:column="6"/></name> <operator pos:line="168" pos:column="7">=<pos:position pos:line="168" pos:column="8"/></operator> <call><name pos:line="168" pos:column="9">X509_NAME_oneline<pos:position pos:line="168" pos:column="26"/></name> <argument_list pos:line="168" pos:column="27">(<argument><expr><call><name pos:line="168" pos:column="28">X509_get_issuer_name<pos:position pos:line="168" pos:column="48"/></name>  <argument_list pos:line="168" pos:column="50">(<argument><expr><name><name pos:line="168" pos:column="51">conn<pos:position pos:line="168" pos:column="55"/></name><operator pos:line="168" pos:column="55">-&gt;<pos:position pos:line="168" pos:column="60"/></operator><name pos:line="168" pos:column="57">ssl<pos:position pos:line="168" pos:column="60"/></name><operator pos:line="168" pos:column="60">.<pos:position pos:line="168" pos:column="61"/></operator><name pos:line="168" pos:column="61">server_cert<pos:position pos:line="168" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="73"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="169" pos:column="28">NULL<pos:position pos:line="169" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="34">0<pos:position pos:line="169" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="37"/></expr_stmt>
  <if pos:line="170" pos:column="3">if<condition pos:line="170" pos:column="5">(<expr><operator pos:line="170" pos:column="6">!<pos:position pos:line="170" pos:column="7"/></operator><name pos:line="170" pos:column="7">str<pos:position pos:line="170" pos:column="10"/></name></expr>)<pos:position pos:line="170" pos:column="11"/></condition><then pos:line="170" pos:column="11"> <block pos:line="170" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="171" pos:column="5">failf<pos:position pos:line="171" pos:column="10"/></name><argument_list pos:line="171" pos:column="10">(<argument><expr><name pos:line="171" pos:column="11">data<pos:position pos:line="171" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="17">"SSL: couldn't get X509-issuer name!"<pos:position pos:line="171" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">X509_free<pos:position pos:line="172" pos:column="14"/></name><argument_list pos:line="172" pos:column="14">(<argument><expr><name><name pos:line="172" pos:column="15">conn<pos:position pos:line="172" pos:column="19"/></name><operator pos:line="172" pos:column="19">-&gt;<pos:position pos:line="172" pos:column="24"/></operator><name pos:line="172" pos:column="21">ssl<pos:position pos:line="172" pos:column="24"/></name><operator pos:line="172" pos:column="24">.<pos:position pos:line="172" pos:column="25"/></operator><name pos:line="172" pos:column="25">server_cert<pos:position pos:line="172" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="38"/></expr_stmt>
    <return pos:line="173" pos:column="5">return <expr><name pos:line="173" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="173" pos:column="35"/></name></expr>;<pos:position pos:line="173" pos:column="36"/></return>
  }<pos:position pos:line="174" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="175" pos:column="3">infof<pos:position pos:line="175" pos:column="8"/></name><argument_list pos:line="175" pos:column="8">(<argument><expr><name pos:line="175" pos:column="9">data<pos:position pos:line="175" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="15">"\t issuer: %s\n"<pos:position pos:line="175" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="34">str<pos:position pos:line="175" pos:column="37"/></name></expr></argument>)<pos:position pos:line="175" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="176" pos:column="3">CRYPTO_free<pos:position pos:line="176" pos:column="14"/></name><argument_list pos:line="176" pos:column="14">(<argument><expr><name pos:line="176" pos:column="15">str<pos:position pos:line="176" pos:column="18"/></name></expr></argument>)<pos:position pos:line="176" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="178" pos:column="3">/* We could do all sorts of certificate verification stuff here before
     deallocating the certificate. */</comment>

  <if pos:line="181" pos:column="3">if<condition pos:line="181" pos:column="5">(<expr><name><name pos:line="181" pos:column="6">data<pos:position pos:line="181" pos:column="10"/></name><operator pos:line="181" pos:column="10">-&gt;<pos:position pos:line="181" pos:column="15"/></operator><name pos:line="181" pos:column="12">set<pos:position pos:line="181" pos:column="15"/></name><operator pos:line="181" pos:column="15">.<pos:position pos:line="181" pos:column="16"/></operator><name pos:line="181" pos:column="16">ssl<pos:position pos:line="181" pos:column="19"/></name><operator pos:line="181" pos:column="19">.<pos:position pos:line="181" pos:column="20"/></operator><name pos:line="181" pos:column="20">verifypeer<pos:position pos:line="181" pos:column="30"/></name></name></expr>)<pos:position pos:line="181" pos:column="31"/></condition><then pos:line="181" pos:column="31"> <block pos:line="181" pos:column="32">{
    <expr_stmt><expr><name><name pos:line="182" pos:column="5">data<pos:position pos:line="182" pos:column="9"/></name><operator pos:line="182" pos:column="9">-&gt;<pos:position pos:line="182" pos:column="14"/></operator><name pos:line="182" pos:column="11">set<pos:position pos:line="182" pos:column="14"/></name><operator pos:line="182" pos:column="14">.<pos:position pos:line="182" pos:column="15"/></operator><name pos:line="182" pos:column="15">ssl<pos:position pos:line="182" pos:column="18"/></name><operator pos:line="182" pos:column="18">.<pos:position pos:line="182" pos:column="19"/></operator><name pos:line="182" pos:column="19">certverifyresult<pos:position pos:line="182" pos:column="35"/></name></name><operator pos:line="182" pos:column="35">=<pos:position pos:line="182" pos:column="36"/></operator><call><name pos:line="182" pos:column="36">SSL_get_verify_result<pos:position pos:line="182" pos:column="57"/></name><argument_list pos:line="182" pos:column="57">(<argument><expr><name><name pos:line="182" pos:column="58">conn<pos:position pos:line="182" pos:column="62"/></name><operator pos:line="182" pos:column="62">-&gt;<pos:position pos:line="182" pos:column="67"/></operator><name pos:line="182" pos:column="64">ssl<pos:position pos:line="182" pos:column="67"/></name><operator pos:line="182" pos:column="67">.<pos:position pos:line="182" pos:column="68"/></operator><name pos:line="182" pos:column="68">handle<pos:position pos:line="182" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="182" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="76"/></expr_stmt>
    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><name><name pos:line="183" pos:column="9">data<pos:position pos:line="183" pos:column="13"/></name><operator pos:line="183" pos:column="13">-&gt;<pos:position pos:line="183" pos:column="18"/></operator><name pos:line="183" pos:column="15">set<pos:position pos:line="183" pos:column="18"/></name><operator pos:line="183" pos:column="18">.<pos:position pos:line="183" pos:column="19"/></operator><name pos:line="183" pos:column="19">ssl<pos:position pos:line="183" pos:column="22"/></name><operator pos:line="183" pos:column="22">.<pos:position pos:line="183" pos:column="23"/></operator><name pos:line="183" pos:column="23">certverifyresult<pos:position pos:line="183" pos:column="39"/></name></name> <operator pos:line="183" pos:column="40">!=<pos:position pos:line="183" pos:column="42"/></operator> <name pos:line="183" pos:column="43">X509_V_OK<pos:position pos:line="183" pos:column="52"/></name></expr>)<pos:position pos:line="183" pos:column="53"/></condition><then pos:line="183" pos:column="53"> <block pos:line="183" pos:column="54">{
      <expr_stmt><expr><call><name pos:line="184" pos:column="7">failf<pos:position pos:line="184" pos:column="12"/></name><argument_list pos:line="184" pos:column="12">(<argument><expr><name pos:line="184" pos:column="13">data<pos:position pos:line="184" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="19">"SSL certificate verify result: %d\n"<pos:position pos:line="184" pos:column="56"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="185" pos:column="13">data<pos:position pos:line="185" pos:column="17"/></name><operator pos:line="185" pos:column="17">-&gt;<pos:position pos:line="185" pos:column="22"/></operator><name pos:line="185" pos:column="19">set<pos:position pos:line="185" pos:column="22"/></name><operator pos:line="185" pos:column="22">.<pos:position pos:line="185" pos:column="23"/></operator><name pos:line="185" pos:column="23">ssl<pos:position pos:line="185" pos:column="26"/></name><operator pos:line="185" pos:column="26">.<pos:position pos:line="185" pos:column="27"/></operator><name pos:line="185" pos:column="27">certverifyresult<pos:position pos:line="185" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="186" pos:column="7">retcode<pos:position pos:line="186" pos:column="14"/></name> <operator pos:line="186" pos:column="15">=<pos:position pos:line="186" pos:column="16"/></operator> <name pos:line="186" pos:column="17">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="186" pos:column="43"/></name></expr>;<pos:position pos:line="186" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>
  }<pos:position pos:line="188" pos:column="4"/></block></then>
  <else pos:line="189" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="190" pos:column="5">data<pos:position pos:line="190" pos:column="9"/></name><operator pos:line="190" pos:column="9">-&gt;<pos:position pos:line="190" pos:column="14"/></operator><name pos:line="190" pos:column="11">set<pos:position pos:line="190" pos:column="14"/></name><operator pos:line="190" pos:column="14">.<pos:position pos:line="190" pos:column="15"/></operator><name pos:line="190" pos:column="15">ssl<pos:position pos:line="190" pos:column="18"/></name><operator pos:line="190" pos:column="18">.<pos:position pos:line="190" pos:column="19"/></operator><name pos:line="190" pos:column="19">certverifyresult<pos:position pos:line="190" pos:column="35"/></name></name><operator pos:line="190" pos:column="35">=<pos:position pos:line="190" pos:column="36"/></operator><literal type="number" pos:line="190" pos:column="36">0<pos:position pos:line="190" pos:column="37"/></literal></expr>;<pos:position pos:line="190" pos:column="38"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="192" pos:column="3">X509_free<pos:position pos:line="192" pos:column="12"/></name><argument_list pos:line="192" pos:column="12">(<argument><expr><name><name pos:line="192" pos:column="13">conn<pos:position pos:line="192" pos:column="17"/></name><operator pos:line="192" pos:column="17">-&gt;<pos:position pos:line="192" pos:column="22"/></operator><name pos:line="192" pos:column="19">ssl<pos:position pos:line="192" pos:column="22"/></name><operator pos:line="192" pos:column="22">.<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="23">server_cert<pos:position pos:line="192" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="36"/></expr_stmt>
<cpp:else pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">else<pos:position pos:line="193" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="193" pos:column="7">/* USE_SSLEAY */</comment>
  <comment type="block" pos:line="194" pos:column="3">/* this is for "-ansi -Wall -pedantic" to stop complaining!   (rabe) */</comment>
  <expr_stmt><expr><operator pos:line="195" pos:column="3">(<pos:position pos:line="195" pos:column="4"/></operator><name pos:line="195" pos:column="4">void<pos:position pos:line="195" pos:column="8"/></name><operator pos:line="195" pos:column="8">)<pos:position pos:line="195" pos:column="9"/></operator> <name pos:line="195" pos:column="10">conn<pos:position pos:line="195" pos:column="14"/></name></expr>;<pos:position pos:line="195" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">endif<pos:position pos:line="196" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="197" pos:column="3">return <expr><name pos:line="197" pos:column="10">retcode<pos:position pos:line="197" pos:column="17"/></name></expr>;<pos:position pos:line="197" pos:column="18"/></return>
}<pos:position pos:line="198" pos:column="2"/></block></function></unit>

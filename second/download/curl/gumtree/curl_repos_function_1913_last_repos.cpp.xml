<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1913_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_pasv_resp<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">ftpcode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ftp_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ftpc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">ftpc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_dns_entry<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">addr<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">NULL<pos:position pos:line="7" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">short<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">connectport<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt> <comment type="block" pos:line="9" pos:column="31">/* the local port connect() should use! */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">str<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><operator pos:line="10" pos:column="15">&amp;<pos:position pos:line="10" pos:column="20"/></operator><name><name pos:line="10" pos:column="16">data<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">state<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">buffer<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><literal type="number" pos:line="10" pos:column="35">4<pos:position pos:line="10" pos:column="36"/></literal></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>  <comment type="block" pos:line="10" pos:column="40">/* start on the first letter */</comment>

  <comment type="block" pos:line="12" pos:column="3">/* if we come here again, make sure the former name is cleared */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">Curl_safefree<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">ftpc<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">newhost<pos:position pos:line="13" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">(<pos:position pos:line="15" pos:column="7"/></operator><name><name pos:line="15" pos:column="7">ftpc<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">count1<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">==<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">&amp;&amp;<pos:position pos:line="15" pos:column="36"/></operator>
     <operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">ftpcode<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">==<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">229<pos:position pos:line="16" pos:column="21"/></literal><operator pos:line="16" pos:column="21">)<pos:position pos:line="16" pos:column="22"/></operator></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
    <comment type="block" pos:line="17" pos:column="5">/* positive EPSV response */</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">ptr<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><call><name pos:line="18" pos:column="17">strchr<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">str<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="29">'('<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="34"/></decl_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">ptr<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">unsigned<pos:position pos:line="20" pos:column="15"/></name> <name pos:line="20" pos:column="16">int<pos:position pos:line="20" pos:column="19"/></name></type> <name pos:line="20" pos:column="20">num<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">char<pos:position pos:line="21" pos:column="11"/></name></type> <name><name pos:line="21" pos:column="12">separator<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><literal type="number" pos:line="21" pos:column="22">4<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">ptr<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">++<pos:position pos:line="22" pos:column="12"/></operator></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><literal type="number" pos:line="23" pos:column="10">5<pos:position pos:line="23" pos:column="11"/></literal> <operator pos:line="23" pos:column="12">==<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">sscanf<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">ptr<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="27">"%c%c%c%u%c"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="24" pos:column="22">&amp;<pos:position pos:line="24" pos:column="27"/></operator><name><name pos:line="24" pos:column="23">separator<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name></expr></argument>,
                     <argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name><name pos:line="25" pos:column="23">separator<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>]<pos:position pos:line="25" pos:column="35"/></index></name></expr></argument>,
                     <argument><expr><operator pos:line="26" pos:column="22">&amp;<pos:position pos:line="26" pos:column="27"/></operator><name><name pos:line="26" pos:column="23">separator<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><literal type="number" pos:line="26" pos:column="33">2<pos:position pos:line="26" pos:column="34"/></literal></expr>]<pos:position pos:line="26" pos:column="35"/></index></name></expr></argument>,
                     <argument><expr><operator pos:line="27" pos:column="22">&amp;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="23">num<pos:position pos:line="27" pos:column="26"/></name></expr></argument>,
                     <argument><expr><operator pos:line="28" pos:column="22">&amp;<pos:position pos:line="28" pos:column="27"/></operator><name><name pos:line="28" pos:column="23">separator<pos:position pos:line="28" pos:column="32"/></name><index pos:line="28" pos:column="32">[<expr><literal type="number" pos:line="28" pos:column="33">3<pos:position pos:line="28" pos:column="34"/></literal></expr>]<pos:position pos:line="28" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">const<pos:position pos:line="29" pos:column="14"/></specifier> <name pos:line="29" pos:column="15">char<pos:position pos:line="29" pos:column="19"/></name></type> <name pos:line="29" pos:column="20">sep1<pos:position pos:line="29" pos:column="24"/></name> <init pos:line="29" pos:column="25">= <expr><name><name pos:line="29" pos:column="27">separator<pos:position pos:line="29" pos:column="36"/></name><index pos:line="29" pos:column="36">[<expr><literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr>]<pos:position pos:line="29" pos:column="39"/></index></name></expr></init></decl>;<pos:position pos:line="29" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">int<pos:position pos:line="30" pos:column="12"/></name></type> <name pos:line="30" pos:column="13">i<pos:position pos:line="30" pos:column="14"/></name></decl>;<pos:position pos:line="30" pos:column="15"/></decl_stmt>

        <comment type="block" pos:line="32" pos:column="9">/* The four separators should be identical, or else this is an oddly
           formatted reply and we bail out immediately. */</comment>
        <for pos:line="34" pos:column="9">for<control pos:line="34" pos:column="12">(<init><expr><name pos:line="34" pos:column="13">i<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="17">1<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></init> <condition><expr><name pos:line="34" pos:column="20">i<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="22">4<pos:position pos:line="34" pos:column="23"/></literal></expr>;<pos:position pos:line="34" pos:column="24"/></condition> <incr><expr><name pos:line="34" pos:column="25">i<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">++<pos:position pos:line="34" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="29"/></control> <block pos:line="34" pos:column="30">{
          <if pos:line="35" pos:column="11">if<condition pos:line="35" pos:column="13">(<expr><name><name pos:line="35" pos:column="14">separator<pos:position pos:line="35" pos:column="23"/></name><index pos:line="35" pos:column="23">[<expr><name pos:line="35" pos:column="24">i<pos:position pos:line="35" pos:column="25"/></name></expr>]<pos:position pos:line="35" pos:column="26"/></index></name> <operator pos:line="35" pos:column="27">!=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">sep1<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <block pos:line="35" pos:column="36">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">ptr<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">NULL<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt> <comment type="block" pos:line="36" pos:column="25">/* set to NULL to signal error */</comment>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
          }<pos:position pos:line="38" pos:column="12"/></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></for>
        <if pos:line="40" pos:column="9">if<condition pos:line="40" pos:column="11">(<expr><name pos:line="40" pos:column="12">num<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&gt;<pos:position pos:line="40" pos:column="20"/></operator> <literal type="number" pos:line="40" pos:column="18">0xffff<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
          <expr_stmt><expr><call><name pos:line="41" pos:column="11">failf<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">data<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"Illegal port number in EPSV reply"<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
          <return pos:line="42" pos:column="11">return <expr><name pos:line="42" pos:column="18">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></return>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <if pos:line="44" pos:column="9">if<condition pos:line="44" pos:column="11">(<expr><name pos:line="44" pos:column="12">ptr<pos:position pos:line="44" pos:column="15"/></name></expr>)<pos:position pos:line="44" pos:column="16"/></condition><then pos:line="44" pos:column="16"> <block pos:line="44" pos:column="17">{
          <expr_stmt><expr><name><name pos:line="45" pos:column="11">ftpc<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">newport<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <call pos:line="45" pos:column="27">(<name pos:line="45" pos:column="28">unsigned<pos:position pos:line="45" pos:column="36"/></name> <name pos:line="45" pos:column="37">short<pos:position pos:line="45" pos:column="42"/></name>)<argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">num<pos:position pos:line="45" pos:column="47"/></name> <operator pos:line="45" pos:column="48">&amp;<pos:position pos:line="45" pos:column="53"/></operator> <literal type="number" pos:line="45" pos:column="50">0xffff<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="46" pos:column="11">ftpc<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">newhost<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <call><name pos:line="46" pos:column="27">strdup<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><call><name pos:line="46" pos:column="34">control_address<pos:position pos:line="46" pos:column="49"/></name><argument_list pos:line="46" pos:column="49">(<argument><expr><name pos:line="46" pos:column="50">conn<pos:position pos:line="46" pos:column="54"/></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
          <if pos:line="47" pos:column="11">if<condition pos:line="47" pos:column="13">(<expr><operator pos:line="47" pos:column="14">!<pos:position pos:line="47" pos:column="15"/></operator><name><name pos:line="47" pos:column="15">ftpc<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">newhost<pos:position pos:line="47" pos:column="28"/></name></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29">
            <block type="pseudo"><return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="48" pos:column="39"/></name></expr>;<pos:position pos:line="48" pos:column="40"/></return></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
      }<pos:position pos:line="50" pos:column="8"/></block></then>
      <else pos:line="51" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="9">ptr<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">NULL<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">ptr<pos:position pos:line="54" pos:column="12"/></name></expr>)<pos:position pos:line="54" pos:column="13"/></condition><then pos:line="54" pos:column="13"> <block pos:line="54" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">failf<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">data<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="19">"Weirdly formatted EPSV reply"<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="56" pos:column="40"/></name></expr>;<pos:position pos:line="56" pos:column="41"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then>
  <elseif pos:line="59" pos:column="3">else <if pos:line="59" pos:column="8">if<condition pos:line="59" pos:column="10">(<expr><operator pos:line="59" pos:column="11">(<pos:position pos:line="59" pos:column="12"/></operator><name><name pos:line="59" pos:column="12">ftpc<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">count1<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">==<pos:position pos:line="59" pos:column="27"/></operator> <literal type="number" pos:line="59" pos:column="28">1<pos:position pos:line="59" pos:column="29"/></literal><operator pos:line="59" pos:column="29">)<pos:position pos:line="59" pos:column="30"/></operator> <operator pos:line="59" pos:column="31">&amp;&amp;<pos:position pos:line="59" pos:column="41"/></operator>
          <operator pos:line="60" pos:column="11">(<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">ftpcode<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">==<pos:position pos:line="60" pos:column="22"/></operator> <literal type="number" pos:line="60" pos:column="23">227<pos:position pos:line="60" pos:column="26"/></literal><operator pos:line="60" pos:column="26">)<pos:position pos:line="60" pos:column="27"/></operator></expr>)<pos:position pos:line="60" pos:column="28"/></condition><then pos:line="60" pos:column="28"> <block pos:line="60" pos:column="29">{
    <comment type="block" pos:line="61" pos:column="5">/* positive PASV response */</comment>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">int<pos:position pos:line="62" pos:column="8"/></name></type> <name><name pos:line="62" pos:column="9">ip<pos:position pos:line="62" pos:column="11"/></name><index pos:line="62" pos:column="11">[<expr><literal type="number" pos:line="62" pos:column="12">4<pos:position pos:line="62" pos:column="13"/></literal></expr>]<pos:position pos:line="62" pos:column="14"/></index></name></decl>;<pos:position pos:line="62" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">int<pos:position pos:line="63" pos:column="8"/></name></type> <name><name pos:line="63" pos:column="9">port<pos:position pos:line="63" pos:column="13"/></name><index pos:line="63" pos:column="13">[<expr><literal type="number" pos:line="63" pos:column="14">2<pos:position pos:line="63" pos:column="15"/></literal></expr>]<pos:position pos:line="63" pos:column="16"/></index></name></decl>;<pos:position pos:line="63" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="65" pos:column="5">/*
     * Scan for a sequence of six comma-separated numbers and use them as
     * IP+port indicators.
     *
     * Found reply-strings include:
     * "227 Entering Passive Mode (127,0,0,1,4,51)"
     * "227 Data transfer will passively listen to 127,0,0,1,4,51"
     * "227 Entering passive mode. 127,0,0,1,4,51"
     */</comment>
    <while pos:line="74" pos:column="5">while<condition pos:line="74" pos:column="10">(<expr><operator pos:line="74" pos:column="11">*<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="12">str<pos:position pos:line="74" pos:column="15"/></name></expr>)<pos:position pos:line="74" pos:column="16"/></condition> <block pos:line="74" pos:column="17">{
      <if pos:line="75" pos:column="7">if<condition pos:line="75" pos:column="9">(<expr><literal type="number" pos:line="75" pos:column="10">6<pos:position pos:line="75" pos:column="11"/></literal> <operator pos:line="75" pos:column="12">==<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">sscanf<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">str<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="27">"%d,%d,%d,%d,%d,%d"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="76" pos:column="22">&amp;<pos:position pos:line="76" pos:column="27"/></operator><name><name pos:line="76" pos:column="23">ip<pos:position pos:line="76" pos:column="25"/></name><index pos:line="76" pos:column="25">[<expr><literal type="number" pos:line="76" pos:column="26">0<pos:position pos:line="76" pos:column="27"/></literal></expr>]<pos:position pos:line="76" pos:column="28"/></index></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="30">&amp;<pos:position pos:line="76" pos:column="35"/></operator><name><name pos:line="76" pos:column="31">ip<pos:position pos:line="76" pos:column="33"/></name><index pos:line="76" pos:column="33">[<expr><literal type="number" pos:line="76" pos:column="34">1<pos:position pos:line="76" pos:column="35"/></literal></expr>]<pos:position pos:line="76" pos:column="36"/></index></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="38">&amp;<pos:position pos:line="76" pos:column="43"/></operator><name><name pos:line="76" pos:column="39">ip<pos:position pos:line="76" pos:column="41"/></name><index pos:line="76" pos:column="41">[<expr><literal type="number" pos:line="76" pos:column="42">2<pos:position pos:line="76" pos:column="43"/></literal></expr>]<pos:position pos:line="76" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="46">&amp;<pos:position pos:line="76" pos:column="51"/></operator><name><name pos:line="76" pos:column="47">ip<pos:position pos:line="76" pos:column="49"/></name><index pos:line="76" pos:column="49">[<expr><literal type="number" pos:line="76" pos:column="50">3<pos:position pos:line="76" pos:column="51"/></literal></expr>]<pos:position pos:line="76" pos:column="52"/></index></name></expr></argument>,
                     <argument><expr><operator pos:line="77" pos:column="22">&amp;<pos:position pos:line="77" pos:column="27"/></operator><name><name pos:line="77" pos:column="23">port<pos:position pos:line="77" pos:column="27"/></name><index pos:line="77" pos:column="27">[<expr><literal type="number" pos:line="77" pos:column="28">0<pos:position pos:line="77" pos:column="29"/></literal></expr>]<pos:position pos:line="77" pos:column="30"/></index></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="32">&amp;<pos:position pos:line="77" pos:column="37"/></operator><name><name pos:line="77" pos:column="33">port<pos:position pos:line="77" pos:column="37"/></name><index pos:line="77" pos:column="37">[<expr><literal type="number" pos:line="77" pos:column="38">1<pos:position pos:line="77" pos:column="39"/></literal></expr>]<pos:position pos:line="77" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="42"/></condition><then pos:line="77" pos:column="42">
        <block type="pseudo"><break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="79" pos:column="7">str<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">++<pos:position pos:line="79" pos:column="12"/></operator></expr>;<pos:position pos:line="79" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></while>

    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><operator pos:line="82" pos:column="8">!<pos:position pos:line="82" pos:column="9"/></operator><operator pos:line="82" pos:column="9">*<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">str<pos:position pos:line="82" pos:column="13"/></name></expr>)<pos:position pos:line="82" pos:column="14"/></condition><then pos:line="82" pos:column="14"> <block pos:line="82" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">failf<pos:position pos:line="83" pos:column="12"/></name><argument_list pos:line="83" pos:column="12">(<argument><expr><name pos:line="83" pos:column="13">data<pos:position pos:line="83" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="19">"Couldn't interpret the 227-response"<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="58"/></expr_stmt>
      <return pos:line="84" pos:column="7">return <expr><name pos:line="84" pos:column="14">CURLE_FTP_WEIRD_227_FORMAT<pos:position pos:line="84" pos:column="40"/></name></expr>;<pos:position pos:line="84" pos:column="41"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="87" pos:column="5">/* we got OK from server */</comment>
    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><name><name pos:line="88" pos:column="8">data<pos:position pos:line="88" pos:column="12"/></name><operator pos:line="88" pos:column="12">-&gt;<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="14">set<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">.<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="18">ftp_skip_ip<pos:position pos:line="88" pos:column="29"/></name></name></expr>)<pos:position pos:line="88" pos:column="30"/></condition><then pos:line="88" pos:column="30"> <block pos:line="88" pos:column="31">{
      <comment type="block" pos:line="89" pos:column="7">/* told to ignore the remotely given IP but instead use the host we used
         for the control connection */</comment>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">infof<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">data<pos:position pos:line="91" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="19">"Skip %d.%d.%d.%d for data connection, re-use %s instead\n"<pos:position pos:line="91" pos:column="78"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="92" pos:column="13">ip<pos:position pos:line="92" pos:column="15"/></name><index pos:line="92" pos:column="15">[<expr><literal type="number" pos:line="92" pos:column="16">0<pos:position pos:line="92" pos:column="17"/></literal></expr>]<pos:position pos:line="92" pos:column="18"/></index></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="20">ip<pos:position pos:line="92" pos:column="22"/></name><index pos:line="92" pos:column="22">[<expr><literal type="number" pos:line="92" pos:column="23">1<pos:position pos:line="92" pos:column="24"/></literal></expr>]<pos:position pos:line="92" pos:column="25"/></index></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="27">ip<pos:position pos:line="92" pos:column="29"/></name><index pos:line="92" pos:column="29">[<expr><literal type="number" pos:line="92" pos:column="30">2<pos:position pos:line="92" pos:column="31"/></literal></expr>]<pos:position pos:line="92" pos:column="32"/></index></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="34">ip<pos:position pos:line="92" pos:column="36"/></name><index pos:line="92" pos:column="36">[<expr><literal type="number" pos:line="92" pos:column="37">3<pos:position pos:line="92" pos:column="38"/></literal></expr>]<pos:position pos:line="92" pos:column="39"/></index></name></expr></argument>,
            <argument><expr><name><name pos:line="93" pos:column="13">conn<pos:position pos:line="93" pos:column="17"/></name><operator pos:line="93" pos:column="17">-&gt;<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="19">host<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">.<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">name<pos:position pos:line="93" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="94" pos:column="7">ftpc<pos:position pos:line="94" pos:column="11"/></name><operator pos:line="94" pos:column="11">-&gt;<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="13">newhost<pos:position pos:line="94" pos:column="20"/></name></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <call><name pos:line="94" pos:column="23">strdup<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><call><name pos:line="94" pos:column="30">control_address<pos:position pos:line="94" pos:column="45"/></name><argument_list pos:line="94" pos:column="45">(<argument><expr><name pos:line="94" pos:column="46">conn<pos:position pos:line="94" pos:column="50"/></name></expr></argument>)<pos:position pos:line="94" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then>
    <else pos:line="96" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="7">ftpc<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">newhost<pos:position pos:line="97" pos:column="20"/></name></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <call><name pos:line="97" pos:column="23">aprintf<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><literal type="string" pos:line="97" pos:column="31">"%d.%d.%d.%d"<pos:position pos:line="97" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="46">ip<pos:position pos:line="97" pos:column="48"/></name><index pos:line="97" pos:column="48">[<expr><literal type="number" pos:line="97" pos:column="49">0<pos:position pos:line="97" pos:column="50"/></literal></expr>]<pos:position pos:line="97" pos:column="51"/></index></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="53">ip<pos:position pos:line="97" pos:column="55"/></name><index pos:line="97" pos:column="55">[<expr><literal type="number" pos:line="97" pos:column="56">1<pos:position pos:line="97" pos:column="57"/></literal></expr>]<pos:position pos:line="97" pos:column="58"/></index></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="60">ip<pos:position pos:line="97" pos:column="62"/></name><index pos:line="97" pos:column="62">[<expr><literal type="number" pos:line="97" pos:column="63">2<pos:position pos:line="97" pos:column="64"/></literal></expr>]<pos:position pos:line="97" pos:column="65"/></index></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="67">ip<pos:position pos:line="97" pos:column="69"/></name><index pos:line="97" pos:column="69">[<expr><literal type="number" pos:line="97" pos:column="70">3<pos:position pos:line="97" pos:column="71"/></literal></expr>]<pos:position pos:line="97" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="74"/></expr_stmt></block></else></if>

    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">(<expr><operator pos:line="99" pos:column="8">!<pos:position pos:line="99" pos:column="9"/></operator><name><name pos:line="99" pos:column="9">ftpc<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">-&gt;<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="15">newhost<pos:position pos:line="99" pos:column="22"/></name></name></expr>)<pos:position pos:line="99" pos:column="23"/></condition><then pos:line="99" pos:column="23">
      <block type="pseudo"><return pos:line="100" pos:column="7">return <expr><name pos:line="100" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="100" pos:column="33"/></name></expr>;<pos:position pos:line="100" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="102" pos:column="5">ftpc<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">newport<pos:position pos:line="102" pos:column="18"/></name></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <call pos:line="102" pos:column="21">(<name pos:line="102" pos:column="22">unsigned<pos:position pos:line="102" pos:column="30"/></name> <name pos:line="102" pos:column="31">short<pos:position pos:line="102" pos:column="36"/></name>)<argument_list pos:line="102" pos:column="37">(<argument><expr><operator pos:line="102" pos:column="38">(<pos:position pos:line="102" pos:column="39"/></operator><operator pos:line="102" pos:column="39">(<pos:position pos:line="102" pos:column="40"/></operator><name><name pos:line="102" pos:column="40">port<pos:position pos:line="102" pos:column="44"/></name><index pos:line="102" pos:column="44">[<expr><literal type="number" pos:line="102" pos:column="45">0<pos:position pos:line="102" pos:column="46"/></literal></expr>]<pos:position pos:line="102" pos:column="47"/></index></name><operator pos:line="102" pos:column="47">&lt;&lt;<pos:position pos:line="102" pos:column="55"/></operator><literal type="number" pos:line="102" pos:column="49">8<pos:position pos:line="102" pos:column="50"/></literal><operator pos:line="102" pos:column="50">)<pos:position pos:line="102" pos:column="51"/></operator> <operator pos:line="102" pos:column="52">+<pos:position pos:line="102" pos:column="53"/></operator> <name><name pos:line="102" pos:column="54">port<pos:position pos:line="102" pos:column="58"/></name><index pos:line="102" pos:column="58">[<expr><literal type="number" pos:line="102" pos:column="59">1<pos:position pos:line="102" pos:column="60"/></literal></expr>]<pos:position pos:line="102" pos:column="61"/></index></name><operator pos:line="102" pos:column="61">)<pos:position pos:line="102" pos:column="62"/></operator> <operator pos:line="102" pos:column="63">&amp;<pos:position pos:line="102" pos:column="68"/></operator> <literal type="number" pos:line="102" pos:column="65">0xffff<pos:position pos:line="102" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="104" pos:column="3">else <if pos:line="104" pos:column="8">if<condition pos:line="104" pos:column="10">(<expr><name><name pos:line="104" pos:column="11">ftpc<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">-&gt;<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="17">count1<pos:position pos:line="104" pos:column="23"/></name></name> <operator pos:line="104" pos:column="24">==<pos:position pos:line="104" pos:column="26"/></operator> <literal type="number" pos:line="104" pos:column="27">0<pos:position pos:line="104" pos:column="28"/></literal></expr>)<pos:position pos:line="104" pos:column="29"/></condition><then pos:line="104" pos:column="29"> <block pos:line="104" pos:column="30">{
    <comment type="block" pos:line="105" pos:column="5">/* EPSV failed, move on to PASV */</comment>
    <return pos:line="106" pos:column="5">return <expr><call><name pos:line="106" pos:column="12">ftp_epsv_disable<pos:position pos:line="106" pos:column="28"/></name><argument_list pos:line="106" pos:column="28">(<argument><expr><name pos:line="106" pos:column="29">conn<pos:position pos:line="106" pos:column="33"/></name></expr></argument>)<pos:position pos:line="106" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="35"/></return>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if></elseif>
  <else pos:line="108" pos:column="3">else <block pos:line="108" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">failf<pos:position pos:line="109" pos:column="10"/></name><argument_list pos:line="109" pos:column="10">(<argument><expr><name pos:line="109" pos:column="11">data<pos:position pos:line="109" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="17">"Bad PASV/EPSV response: %03d"<pos:position pos:line="109" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="49">ftpcode<pos:position pos:line="109" pos:column="56"/></name></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="58"/></expr_stmt>
    <return pos:line="110" pos:column="5">return <expr><name pos:line="110" pos:column="12">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="110" pos:column="38"/></name></expr>;<pos:position pos:line="110" pos:column="39"/></return>
  }<pos:position pos:line="111" pos:column="4"/></block></else></if>

  <if pos:line="113" pos:column="3">if<condition pos:line="113" pos:column="5">(<expr><name><name pos:line="113" pos:column="6">conn<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">-&gt;<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="12">bits<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">.<pos:position pos:line="113" pos:column="17"/></operator><name pos:line="113" pos:column="17">proxy<pos:position pos:line="113" pos:column="22"/></name></name></expr>)<pos:position pos:line="113" pos:column="23"/></condition><then pos:line="113" pos:column="23"> <block pos:line="113" pos:column="24">{
    <comment type="block" pos:line="114" pos:column="5">/*
     * This connection uses a proxy and we need to connect to the proxy again
     * here. We don't want to rely on a former host lookup that might've
     * expired now, instead we remake the lookup here and now!
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="119" pos:column="5">const<pos:position pos:line="119" pos:column="10"/></specifier> <name pos:line="119" pos:column="11">char<pos:position pos:line="119" pos:column="15"/></name> <modifier pos:line="119" pos:column="16">*<pos:position pos:line="119" pos:column="17"/></modifier> <specifier pos:line="119" pos:column="18">const<pos:position pos:line="119" pos:column="23"/></specifier></type> <name pos:line="119" pos:column="24">host_name<pos:position pos:line="119" pos:column="33"/></name> <init pos:line="119" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="119" pos:column="36">conn<pos:position pos:line="119" pos:column="40"/></name><operator pos:line="119" pos:column="40">-&gt;<pos:position pos:line="119" pos:column="45"/></operator><name pos:line="119" pos:column="42">bits<pos:position pos:line="119" pos:column="46"/></name><operator pos:line="119" pos:column="46">.<pos:position pos:line="119" pos:column="47"/></operator><name pos:line="119" pos:column="47">socksproxy<pos:position pos:line="119" pos:column="57"/></name></name></expr> ?<pos:position pos:line="119" pos:column="59"/></condition><then pos:line="119" pos:column="59">
      <expr><name><name pos:line="120" pos:column="7">conn<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">-&gt;<pos:position pos:line="120" pos:column="16"/></operator><name pos:line="120" pos:column="13">socks_proxy<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">.<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="25">host<pos:position pos:line="120" pos:column="29"/></name><operator pos:line="120" pos:column="29">.<pos:position pos:line="120" pos:column="30"/></operator><name pos:line="120" pos:column="30">name<pos:position pos:line="120" pos:column="34"/></name></name></expr> <pos:position pos:line="120" pos:column="35"/></then><else pos:line="120" pos:column="35">: <expr><name><name pos:line="120" pos:column="37">conn<pos:position pos:line="120" pos:column="41"/></name><operator pos:line="120" pos:column="41">-&gt;<pos:position pos:line="120" pos:column="46"/></operator><name pos:line="120" pos:column="43">http_proxy<pos:position pos:line="120" pos:column="53"/></name><operator pos:line="120" pos:column="53">.<pos:position pos:line="120" pos:column="54"/></operator><name pos:line="120" pos:column="54">host<pos:position pos:line="120" pos:column="58"/></name><operator pos:line="120" pos:column="58">.<pos:position pos:line="120" pos:column="59"/></operator><name pos:line="120" pos:column="59">name<pos:position pos:line="120" pos:column="63"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="120" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><name pos:line="121" pos:column="5">rc<pos:position pos:line="121" pos:column="7"/></name> <operator pos:line="121" pos:column="8">=<pos:position pos:line="121" pos:column="9"/></operator> <call><name pos:line="121" pos:column="10">Curl_resolv<pos:position pos:line="121" pos:column="21"/></name><argument_list pos:line="121" pos:column="21">(<argument><expr><name pos:line="121" pos:column="22">conn<pos:position pos:line="121" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="28">host_name<pos:position pos:line="121" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="39">(<pos:position pos:line="121" pos:column="40"/></operator><name pos:line="121" pos:column="40">int<pos:position pos:line="121" pos:column="43"/></name><operator pos:line="121" pos:column="43">)<pos:position pos:line="121" pos:column="44"/></operator><name><name pos:line="121" pos:column="44">conn<pos:position pos:line="121" pos:column="48"/></name><operator pos:line="121" pos:column="48">-&gt;<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="50">port<pos:position pos:line="121" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="56">&amp;<pos:position pos:line="121" pos:column="61"/></operator><name pos:line="121" pos:column="57">addr<pos:position pos:line="121" pos:column="61"/></name></expr></argument>)<pos:position pos:line="121" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="63"/></expr_stmt>
    <if pos:line="122" pos:column="5">if<condition pos:line="122" pos:column="7">(<expr><name pos:line="122" pos:column="8">rc<pos:position pos:line="122" pos:column="10"/></name> <operator pos:line="122" pos:column="11">==<pos:position pos:line="122" pos:column="13"/></operator> <name pos:line="122" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="122" pos:column="32"/></name></expr>)<pos:position pos:line="122" pos:column="33"/></condition><then pos:line="122" pos:column="33">
      <comment type="block" pos:line="123" pos:column="7">/* BLOCKING, ignores the return code but 'addr' will be NULL in
         case of failure */</comment>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="125" pos:column="7">(<pos:position pos:line="125" pos:column="8"/></operator><name pos:line="125" pos:column="8">void<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">)<pos:position pos:line="125" pos:column="13"/></operator><call><name pos:line="125" pos:column="13">Curl_resolver_wait_resolv<pos:position pos:line="125" pos:column="38"/></name><argument_list pos:line="125" pos:column="38">(<argument><expr><name pos:line="125" pos:column="39">conn<pos:position pos:line="125" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="45">&amp;<pos:position pos:line="125" pos:column="50"/></operator><name pos:line="125" pos:column="46">addr<pos:position pos:line="125" pos:column="50"/></name></expr></argument>)<pos:position pos:line="125" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="52"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="127" pos:column="5">connectport<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">=<pos:position pos:line="127" pos:column="18"/></operator>
      <operator pos:line="128" pos:column="7">(<pos:position pos:line="128" pos:column="8"/></operator><name pos:line="128" pos:column="8">unsigned<pos:position pos:line="128" pos:column="16"/></name> <name pos:line="128" pos:column="17">short<pos:position pos:line="128" pos:column="22"/></name><operator pos:line="128" pos:column="22">)<pos:position pos:line="128" pos:column="23"/></operator><name><name pos:line="128" pos:column="23">conn<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">-&gt;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="29">port<pos:position pos:line="128" pos:column="33"/></name></name></expr>;<pos:position pos:line="128" pos:column="34"/></expr_stmt> <comment type="block" pos:line="128" pos:column="35">/* we connect to the proxy's port */</comment>

    <if pos:line="130" pos:column="5">if<condition pos:line="130" pos:column="7">(<expr><operator pos:line="130" pos:column="8">!<pos:position pos:line="130" pos:column="9"/></operator><name pos:line="130" pos:column="9">addr<pos:position pos:line="130" pos:column="13"/></name></expr>)<pos:position pos:line="130" pos:column="14"/></condition><then pos:line="130" pos:column="14"> <block pos:line="130" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="131" pos:column="7">failf<pos:position pos:line="131" pos:column="12"/></name><argument_list pos:line="131" pos:column="12">(<argument><expr><name pos:line="131" pos:column="13">data<pos:position pos:line="131" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="19">"Can't resolve proxy host %s:%hu"<pos:position pos:line="131" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="54">host_name<pos:position pos:line="131" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="65">connectport<pos:position pos:line="131" pos:column="76"/></name></expr></argument>)<pos:position pos:line="131" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="78"/></expr_stmt>
      <return pos:line="132" pos:column="7">return <expr><name pos:line="132" pos:column="14">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="132" pos:column="41"/></name></expr>;<pos:position pos:line="132" pos:column="42"/></return>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if>
  }<pos:position pos:line="134" pos:column="4"/></block></then>
  <else pos:line="135" pos:column="3">else <block pos:line="135" pos:column="8">{
    <comment type="block" pos:line="136" pos:column="5">/* normal, direct, ftp connection */</comment>
    <expr_stmt><expr><name pos:line="137" pos:column="5">rc<pos:position pos:line="137" pos:column="7"/></name> <operator pos:line="137" pos:column="8">=<pos:position pos:line="137" pos:column="9"/></operator> <call><name pos:line="137" pos:column="10">Curl_resolv<pos:position pos:line="137" pos:column="21"/></name><argument_list pos:line="137" pos:column="21">(<argument><expr><name pos:line="137" pos:column="22">conn<pos:position pos:line="137" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="28">ftpc<pos:position pos:line="137" pos:column="32"/></name><operator pos:line="137" pos:column="32">-&gt;<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="34">newhost<pos:position pos:line="137" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="43">ftpc<pos:position pos:line="137" pos:column="47"/></name><operator pos:line="137" pos:column="47">-&gt;<pos:position pos:line="137" pos:column="52"/></operator><name pos:line="137" pos:column="49">newport<pos:position pos:line="137" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="58">&amp;<pos:position pos:line="137" pos:column="63"/></operator><name pos:line="137" pos:column="59">addr<pos:position pos:line="137" pos:column="63"/></name></expr></argument>)<pos:position pos:line="137" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="65"/></expr_stmt>
    <if pos:line="138" pos:column="5">if<condition pos:line="138" pos:column="7">(<expr><name pos:line="138" pos:column="8">rc<pos:position pos:line="138" pos:column="10"/></name> <operator pos:line="138" pos:column="11">==<pos:position pos:line="138" pos:column="13"/></operator> <name pos:line="138" pos:column="14">CURLRESOLV_PENDING<pos:position pos:line="138" pos:column="32"/></name></expr>)<pos:position pos:line="138" pos:column="33"/></condition><then pos:line="138" pos:column="33">
      <comment type="block" pos:line="139" pos:column="7">/* BLOCKING */</comment>
      <block type="pseudo"><expr_stmt><expr><operator pos:line="140" pos:column="7">(<pos:position pos:line="140" pos:column="8"/></operator><name pos:line="140" pos:column="8">void<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">)<pos:position pos:line="140" pos:column="13"/></operator><call><name pos:line="140" pos:column="13">Curl_resolver_wait_resolv<pos:position pos:line="140" pos:column="38"/></name><argument_list pos:line="140" pos:column="38">(<argument><expr><name pos:line="140" pos:column="39">conn<pos:position pos:line="140" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="140" pos:column="45">&amp;<pos:position pos:line="140" pos:column="50"/></operator><name pos:line="140" pos:column="46">addr<pos:position pos:line="140" pos:column="50"/></name></expr></argument>)<pos:position pos:line="140" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="52"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="142" pos:column="5">connectport<pos:position pos:line="142" pos:column="16"/></name> <operator pos:line="142" pos:column="17">=<pos:position pos:line="142" pos:column="18"/></operator> <name><name pos:line="142" pos:column="19">ftpc<pos:position pos:line="142" pos:column="23"/></name><operator pos:line="142" pos:column="23">-&gt;<pos:position pos:line="142" pos:column="28"/></operator><name pos:line="142" pos:column="25">newport<pos:position pos:line="142" pos:column="32"/></name></name></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt> <comment type="block" pos:line="142" pos:column="34">/* we connect to the remote port */</comment>

    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">(<expr><operator pos:line="144" pos:column="8">!<pos:position pos:line="144" pos:column="9"/></operator><name pos:line="144" pos:column="9">addr<pos:position pos:line="144" pos:column="13"/></name></expr>)<pos:position pos:line="144" pos:column="14"/></condition><then pos:line="144" pos:column="14"> <block pos:line="144" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="145" pos:column="7">failf<pos:position pos:line="145" pos:column="12"/></name><argument_list pos:line="145" pos:column="12">(<argument><expr><name pos:line="145" pos:column="13">data<pos:position pos:line="145" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="19">"Can't resolve new host %s:%hu"<pos:position pos:line="145" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="52">ftpc<pos:position pos:line="145" pos:column="56"/></name><operator pos:line="145" pos:column="56">-&gt;<pos:position pos:line="145" pos:column="61"/></operator><name pos:line="145" pos:column="58">newhost<pos:position pos:line="145" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="67">connectport<pos:position pos:line="145" pos:column="78"/></name></expr></argument>)<pos:position pos:line="145" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="80"/></expr_stmt>
      <return pos:line="146" pos:column="7">return <expr><name pos:line="146" pos:column="14">CURLE_FTP_CANT_GET_HOST<pos:position pos:line="146" pos:column="37"/></name></expr>;<pos:position pos:line="146" pos:column="38"/></return>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
  }<pos:position pos:line="148" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="150" pos:column="3">conn<pos:position pos:line="150" pos:column="7"/></name><operator pos:line="150" pos:column="7">-&gt;<pos:position pos:line="150" pos:column="12"/></operator><name pos:line="150" pos:column="9">bits<pos:position pos:line="150" pos:column="13"/></name><operator pos:line="150" pos:column="13">.<pos:position pos:line="150" pos:column="14"/></operator><name pos:line="150" pos:column="14">tcpconnect<pos:position pos:line="150" pos:column="24"/></name><index pos:line="150" pos:column="24">[<expr><name pos:line="150" pos:column="25">SECONDARYSOCKET<pos:position pos:line="150" pos:column="40"/></name></expr>]<pos:position pos:line="150" pos:column="41"/></index></name> <operator pos:line="150" pos:column="42">=<pos:position pos:line="150" pos:column="43"/></operator> <name pos:line="150" pos:column="44">FALSE<pos:position pos:line="150" pos:column="49"/></name></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="151" pos:column="3">result<pos:position pos:line="151" pos:column="9"/></name> <operator pos:line="151" pos:column="10">=<pos:position pos:line="151" pos:column="11"/></operator> <call><name pos:line="151" pos:column="12">Curl_connecthost<pos:position pos:line="151" pos:column="28"/></name><argument_list pos:line="151" pos:column="28">(<argument><expr><name pos:line="151" pos:column="29">conn<pos:position pos:line="151" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="35">addr<pos:position pos:line="151" pos:column="39"/></name></expr></argument>)<pos:position pos:line="151" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="41"/></expr_stmt>

  <if pos:line="153" pos:column="3">if<condition pos:line="153" pos:column="5">(<expr><name pos:line="153" pos:column="6">result<pos:position pos:line="153" pos:column="12"/></name></expr>)<pos:position pos:line="153" pos:column="13"/></condition><then pos:line="153" pos:column="13"> <block pos:line="153" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">Curl_resolv_unlock<pos:position pos:line="154" pos:column="23"/></name><argument_list pos:line="154" pos:column="23">(<argument><expr><name pos:line="154" pos:column="24">data<pos:position pos:line="154" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="30">addr<pos:position pos:line="154" pos:column="34"/></name></expr></argument>)<pos:position pos:line="154" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="36"/></expr_stmt> <comment type="block" pos:line="154" pos:column="37">/* we're done using this address */</comment>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">(<expr><name><name pos:line="155" pos:column="8">ftpc<pos:position pos:line="155" pos:column="12"/></name><operator pos:line="155" pos:column="12">-&gt;<pos:position pos:line="155" pos:column="17"/></operator><name pos:line="155" pos:column="14">count1<pos:position pos:line="155" pos:column="20"/></name></name> <operator pos:line="155" pos:column="21">==<pos:position pos:line="155" pos:column="23"/></operator> <literal type="number" pos:line="155" pos:column="24">0<pos:position pos:line="155" pos:column="25"/></literal> <operator pos:line="155" pos:column="26">&amp;&amp;<pos:position pos:line="155" pos:column="36"/></operator> <name pos:line="155" pos:column="29">ftpcode<pos:position pos:line="155" pos:column="36"/></name> <operator pos:line="155" pos:column="37">==<pos:position pos:line="155" pos:column="39"/></operator> <literal type="number" pos:line="155" pos:column="40">229<pos:position pos:line="155" pos:column="43"/></literal></expr>)<pos:position pos:line="155" pos:column="44"/></condition><then pos:line="155" pos:column="44">
      <block type="pseudo"><return pos:line="156" pos:column="7">return <expr><call><name pos:line="156" pos:column="14">ftp_epsv_disable<pos:position pos:line="156" pos:column="30"/></name><argument_list pos:line="156" pos:column="30">(<argument><expr><name pos:line="156" pos:column="31">conn<pos:position pos:line="156" pos:column="35"/></name></expr></argument>)<pos:position pos:line="156" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="37"/></return></block></then></if>

    <return pos:line="158" pos:column="5">return <expr><name pos:line="158" pos:column="12">result<pos:position pos:line="158" pos:column="18"/></name></expr>;<pos:position pos:line="158" pos:column="19"/></return>
  }<pos:position pos:line="159" pos:column="4"/></block></then></if>


  <comment type="block" pos:line="162" pos:column="3">/*
   * When this is used from the multi interface, this might've returned with
   * the 'connected' set to FALSE and thus we are now awaiting a non-blocking
   * connect to connect.
   */</comment>

  <if pos:line="168" pos:column="3">if<condition pos:line="168" pos:column="5">(<expr><name><name pos:line="168" pos:column="6">data<pos:position pos:line="168" pos:column="10"/></name><operator pos:line="168" pos:column="10">-&gt;<pos:position pos:line="168" pos:column="15"/></operator><name pos:line="168" pos:column="12">set<pos:position pos:line="168" pos:column="15"/></name><operator pos:line="168" pos:column="15">.<pos:position pos:line="168" pos:column="16"/></operator><name pos:line="168" pos:column="16">verbose<pos:position pos:line="168" pos:column="23"/></name></name></expr>)<pos:position pos:line="168" pos:column="24"/></condition><then pos:line="168" pos:column="24">
    <comment type="block" pos:line="169" pos:column="5">/* this just dumps information about this second connection */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="5">ftp_pasv_verbose<pos:position pos:line="170" pos:column="21"/></name><argument_list pos:line="170" pos:column="21">(<argument><expr><name pos:line="170" pos:column="22">conn<pos:position pos:line="170" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="28">addr<pos:position pos:line="170" pos:column="32"/></name><operator pos:line="170" pos:column="32">-&gt;<pos:position pos:line="170" pos:column="37"/></operator><name pos:line="170" pos:column="34">addr<pos:position pos:line="170" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="40">ftpc<pos:position pos:line="170" pos:column="44"/></name><operator pos:line="170" pos:column="44">-&gt;<pos:position pos:line="170" pos:column="49"/></operator><name pos:line="170" pos:column="46">newhost<pos:position pos:line="170" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="55">connectport<pos:position pos:line="170" pos:column="66"/></name></expr></argument>)<pos:position pos:line="170" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="68"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="172" pos:column="3">Curl_resolv_unlock<pos:position pos:line="172" pos:column="21"/></name><argument_list pos:line="172" pos:column="21">(<argument><expr><name pos:line="172" pos:column="22">data<pos:position pos:line="172" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="28">addr<pos:position pos:line="172" pos:column="32"/></name></expr></argument>)<pos:position pos:line="172" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="34"/></expr_stmt> <comment type="block" pos:line="172" pos:column="35">/* we're done using this address */</comment>

  <expr_stmt><expr><call><name pos:line="174" pos:column="3">Curl_safefree<pos:position pos:line="174" pos:column="16"/></name><argument_list pos:line="174" pos:column="16">(<argument><expr><name><name pos:line="174" pos:column="17">conn<pos:position pos:line="174" pos:column="21"/></name><operator pos:line="174" pos:column="21">-&gt;<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="23">secondaryhostname<pos:position pos:line="174" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="175" pos:column="3">conn<pos:position pos:line="175" pos:column="7"/></name><operator pos:line="175" pos:column="7">-&gt;<pos:position pos:line="175" pos:column="12"/></operator><name pos:line="175" pos:column="9">secondary_port<pos:position pos:line="175" pos:column="23"/></name></name> <operator pos:line="175" pos:column="24">=<pos:position pos:line="175" pos:column="25"/></operator> <name><name pos:line="175" pos:column="26">ftpc<pos:position pos:line="175" pos:column="30"/></name><operator pos:line="175" pos:column="30">-&gt;<pos:position pos:line="175" pos:column="35"/></operator><name pos:line="175" pos:column="32">newport<pos:position pos:line="175" pos:column="39"/></name></name></expr>;<pos:position pos:line="175" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="176" pos:column="3">conn<pos:position pos:line="176" pos:column="7"/></name><operator pos:line="176" pos:column="7">-&gt;<pos:position pos:line="176" pos:column="12"/></operator><name pos:line="176" pos:column="9">secondaryhostname<pos:position pos:line="176" pos:column="26"/></name></name> <operator pos:line="176" pos:column="27">=<pos:position pos:line="176" pos:column="28"/></operator> <call><name pos:line="176" pos:column="29">strdup<pos:position pos:line="176" pos:column="35"/></name><argument_list pos:line="176" pos:column="35">(<argument><expr><name><name pos:line="176" pos:column="36">ftpc<pos:position pos:line="176" pos:column="40"/></name><operator pos:line="176" pos:column="40">-&gt;<pos:position pos:line="176" pos:column="45"/></operator><name pos:line="176" pos:column="42">newhost<pos:position pos:line="176" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>
  <if pos:line="177" pos:column="3">if<condition pos:line="177" pos:column="5">(<expr><operator pos:line="177" pos:column="6">!<pos:position pos:line="177" pos:column="7"/></operator><name><name pos:line="177" pos:column="7">conn<pos:position pos:line="177" pos:column="11"/></name><operator pos:line="177" pos:column="11">-&gt;<pos:position pos:line="177" pos:column="16"/></operator><name pos:line="177" pos:column="13">secondaryhostname<pos:position pos:line="177" pos:column="30"/></name></name></expr>)<pos:position pos:line="177" pos:column="31"/></condition><then pos:line="177" pos:column="31">
    <block type="pseudo"><return pos:line="178" pos:column="5">return <expr><name pos:line="178" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="178" pos:column="31"/></name></expr>;<pos:position pos:line="178" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="180" pos:column="3">conn<pos:position pos:line="180" pos:column="7"/></name><operator pos:line="180" pos:column="7">-&gt;<pos:position pos:line="180" pos:column="12"/></operator><name pos:line="180" pos:column="9">bits<pos:position pos:line="180" pos:column="13"/></name><operator pos:line="180" pos:column="13">.<pos:position pos:line="180" pos:column="14"/></operator><name pos:line="180" pos:column="14">do_more<pos:position pos:line="180" pos:column="21"/></name></name> <operator pos:line="180" pos:column="22">=<pos:position pos:line="180" pos:column="23"/></operator> <name pos:line="180" pos:column="24">TRUE<pos:position pos:line="180" pos:column="28"/></name></expr>;<pos:position pos:line="180" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="181" pos:column="3">state<pos:position pos:line="181" pos:column="8"/></name><argument_list pos:line="181" pos:column="8">(<argument><expr><name pos:line="181" pos:column="9">conn<pos:position pos:line="181" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="15">FTP_STOP<pos:position pos:line="181" pos:column="23"/></name></expr></argument>)<pos:position pos:line="181" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="25"/></expr_stmt> <comment type="block" pos:line="181" pos:column="26">/* this phase is completed */</comment>

  <return pos:line="183" pos:column="3">return <expr><name pos:line="183" pos:column="10">result<pos:position pos:line="183" pos:column="16"/></name></expr>;<pos:position pos:line="183" pos:column="17"/></return>
}<pos:position pos:line="184" pos:column="2"/></block></function></unit>

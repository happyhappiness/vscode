<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1974_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">skip<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier><modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">date<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* skip everything that aren't letters or digits */</comment>
  <while pos:line="4" pos:column="3">while<condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">date<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">&amp;&amp;<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="19">!<pos:position pos:line="4" pos:column="20"/></operator><call><name pos:line="4" pos:column="20">ISALNUM<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">date<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="36"/></condition>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><operator pos:line="5" pos:column="6">*<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">date<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">)<pos:position pos:line="5" pos:column="12"/></operator><operator pos:line="5" pos:column="12">++<pos:position pos:line="5" pos:column="14"/></operator></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt></block></while>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_14_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">my_fwrite<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">buffer<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">size<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">nmemb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">stream<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">FtpFile<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">out<pos:position pos:line="3" pos:column="22"/></name><init pos:line="3" pos:column="22">=<expr><operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator>struct <name pos:line="3" pos:column="31">FtpFile<pos:position pos:line="3" pos:column="38"/></name> <operator pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></operator><operator pos:line="3" pos:column="40">)<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">stream<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">out<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">&amp;&amp;<pos:position pos:line="4" pos:column="20"/></operator> <operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name><name pos:line="4" pos:column="14">out<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">stream<pos:position pos:line="4" pos:column="25"/></name></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
    <comment type="block" pos:line="5" pos:column="5">/* open file for writing */</comment>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">out<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">stream<pos:position pos:line="6" pos:column="16"/></name></name><operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator><call><name pos:line="6" pos:column="17">fopen<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name><name pos:line="6" pos:column="23">out<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">filename<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"wb"<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name><name pos:line="7" pos:column="9">out<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">stream<pos:position pos:line="7" pos:column="20"/></name></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><operator pos:line="8" pos:column="14">-<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="8" pos:column="18">/* failure, can't open file to write */</comment>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <return pos:line="10" pos:column="3">return <expr><call><name pos:line="10" pos:column="10">fwrite<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">buffer<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="25">size<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">nmemb<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="38">out<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">stream<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

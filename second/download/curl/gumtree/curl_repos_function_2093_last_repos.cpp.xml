<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2093_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">read_encoded_part_content<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">curl_mimepart<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">part<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">buffer<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">size_t<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">bufsize<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">mime_encoder_state<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">st<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">&amp;<pos:position pos:line="4" pos:column="33"/></operator><name><name pos:line="4" pos:column="29">part<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">encstate<pos:position pos:line="4" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">cursize<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">sz<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">ateof<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">FALSE<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

  <while pos:line="9" pos:column="3">while<condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">bufsize<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition> <block pos:line="9" pos:column="18">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name><name pos:line="10" pos:column="8">st<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">bufbeg<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">bufend<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">ateof<pos:position pos:line="10" pos:column="40"/></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
      <comment type="block" pos:line="11" pos:column="7">/* Encode buffered data. */</comment>
      <expr_stmt><expr><name pos:line="12" pos:column="7">sz<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name><name pos:line="12" pos:column="12">part<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">encoder<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">encodefunc<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">buffer<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">bufsize<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">ateof<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">part<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
      <switch pos:line="13" pos:column="7">switch<condition pos:line="13" pos:column="13">(<expr><name pos:line="13" pos:column="14">sz<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition> <block pos:line="13" pos:column="18">{
      <case pos:line="14" pos:column="7">case <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>:<pos:position pos:line="14" pos:column="14"/></case>
        <if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">ateof<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
          <block type="pseudo"><return pos:line="16" pos:column="11">return <expr><name pos:line="16" pos:column="18">cursize<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
      <case pos:line="18" pos:column="7">case <expr><name pos:line="18" pos:column="12">CURL_READFUNC_ABORT<pos:position pos:line="18" pos:column="31"/></name></expr>:<pos:position pos:line="18" pos:column="32"/></case>
      <case pos:line="19" pos:column="7">case <expr><name pos:line="19" pos:column="12">CURL_READFUNC_PAUSE<pos:position pos:line="19" pos:column="31"/></name></expr>:<pos:position pos:line="19" pos:column="32"/></case>
      <case pos:line="20" pos:column="7">case <expr><name pos:line="20" pos:column="12">READ_ERROR<pos:position pos:line="20" pos:column="22"/></name></expr>:<pos:position pos:line="20" pos:column="23"/></case>
        <return pos:line="21" pos:column="9">return <expr><ternary><condition><expr><name pos:line="21" pos:column="16">cursize<pos:position pos:line="21" pos:column="23"/></name></expr>?<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <expr><name pos:line="21" pos:column="25">cursize<pos:position pos:line="21" pos:column="32"/></name></expr></then><else pos:line="21" pos:column="32">: <expr><name pos:line="21" pos:column="34">sz<pos:position pos:line="21" pos:column="36"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="37"/></return>
      <default pos:line="22" pos:column="7">default:<pos:position pos:line="22" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="23" pos:column="9">cursize<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">+=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">sz<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">buffer<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">sz<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">bufsize<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">-=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">sz<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
        <continue pos:line="26" pos:column="9">continue;<pos:position pos:line="26" pos:column="18"/></continue>
      }<pos:position pos:line="27" pos:column="8"/></block></switch>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* We need more data in input buffer. */</comment>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><name><name pos:line="31" pos:column="8">st<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">bufbeg<pos:position pos:line="31" pos:column="18"/></name></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">size_t<pos:position pos:line="32" pos:column="13"/></name></type> <name pos:line="32" pos:column="14">len<pos:position pos:line="32" pos:column="17"/></name> <init pos:line="32" pos:column="18">= <expr><name><name pos:line="32" pos:column="20">st<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">bufend<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">-<pos:position pos:line="32" pos:column="32"/></operator> <name><name pos:line="32" pos:column="33">st<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">bufbeg<pos:position pos:line="32" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="44"/></decl_stmt>

      <if pos:line="34" pos:column="7">if<condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">len<pos:position pos:line="34" pos:column="13"/></name></expr>)<pos:position pos:line="34" pos:column="14"/></condition><then pos:line="34" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="9">memmove<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">st<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">buf<pos:position pos:line="35" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="26">st<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">buf<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">+<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="36">st<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">bufbeg<pos:position pos:line="35" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">len<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">st<pos:position pos:line="36" pos:column="9"/></name><operator pos:line="36" pos:column="9">-&gt;<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="11">bufbeg<pos:position pos:line="36" pos:column="17"/></name></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">st<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">bufend<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">len<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name><name pos:line="39" pos:column="8">st<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">bufend<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">&gt;=<pos:position pos:line="39" pos:column="24"/></operator> <sizeof pos:line="39" pos:column="22">sizeof <name><name pos:line="39" pos:column="29">st<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">buf<pos:position pos:line="39" pos:column="36"/></name></name></sizeof></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
      <block type="pseudo"><return pos:line="40" pos:column="7">return <expr><ternary><condition><expr><name pos:line="40" pos:column="14">cursize<pos:position pos:line="40" pos:column="21"/></name></expr>?<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <expr><name pos:line="40" pos:column="23">cursize<pos:position pos:line="40" pos:column="30"/></name></expr></then><else pos:line="40" pos:column="30">: <expr><name pos:line="40" pos:column="32">READ_ERROR<pos:position pos:line="40" pos:column="42"/></name></expr></else></ternary></expr>;<pos:position pos:line="40" pos:column="43"/></return></block></then></if>    <comment type="block" pos:line="40" pos:column="47">/* Buffer full. */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">sz<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">read_part_content<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">part<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="34">st<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">buf<pos:position pos:line="41" pos:column="41"/></name></name> <operator pos:line="41" pos:column="42">+<pos:position pos:line="41" pos:column="43"/></operator> <name><name pos:line="41" pos:column="44">st<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">bufend<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>,
                           <argument><expr><sizeof pos:line="42" pos:column="28">sizeof <name><name pos:line="42" pos:column="35">st<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">buf<pos:position pos:line="42" pos:column="42"/></name></name></sizeof> <operator pos:line="42" pos:column="43">-<pos:position pos:line="42" pos:column="44"/></operator> <name><name pos:line="42" pos:column="45">st<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">-&gt;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="49">bufend<pos:position pos:line="42" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>
    <switch pos:line="43" pos:column="5">switch<condition pos:line="43" pos:column="11">(<expr><name pos:line="43" pos:column="12">sz<pos:position pos:line="43" pos:column="14"/></name></expr>)<pos:position pos:line="43" pos:column="15"/></condition> <block pos:line="43" pos:column="16">{
    <case pos:line="44" pos:column="5">case <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>:<pos:position pos:line="44" pos:column="12"/></case>
      <expr_stmt><expr><name pos:line="45" pos:column="7">ateof<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">TRUE<pos:position pos:line="45" pos:column="19"/></name></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    <case pos:line="47" pos:column="5">case <expr><name pos:line="47" pos:column="10">CURL_READFUNC_ABORT<pos:position pos:line="47" pos:column="29"/></name></expr>:<pos:position pos:line="47" pos:column="30"/></case>
    <case pos:line="48" pos:column="5">case <expr><name pos:line="48" pos:column="10">CURL_READFUNC_PAUSE<pos:position pos:line="48" pos:column="29"/></name></expr>:<pos:position pos:line="48" pos:column="30"/></case>
    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">READ_ERROR<pos:position pos:line="49" pos:column="20"/></name></expr>:<pos:position pos:line="49" pos:column="21"/></case>
      <return pos:line="50" pos:column="7">return <expr><ternary><condition><expr><name pos:line="50" pos:column="14">cursize<pos:position pos:line="50" pos:column="21"/></name></expr>?<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22"> <expr><name pos:line="50" pos:column="23">cursize<pos:position pos:line="50" pos:column="30"/></name></expr></then><else pos:line="50" pos:column="30">: <expr><name pos:line="50" pos:column="32">sz<pos:position pos:line="50" pos:column="34"/></name></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="35"/></return>
    <default pos:line="51" pos:column="5">default:<pos:position pos:line="51" pos:column="13"/></default>
      <expr_stmt><expr><name><name pos:line="52" pos:column="7">st<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">bufend<pos:position pos:line="52" pos:column="17"/></name></name> <operator pos:line="52" pos:column="18">+=<pos:position pos:line="52" pos:column="20"/></operator> <name pos:line="52" pos:column="21">sz<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
      <break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break>
    }<pos:position pos:line="54" pos:column="6"/></block></switch>
  }<pos:position pos:line="55" pos:column="4"/></block></while>

  <return pos:line="57" pos:column="3">return <expr><name pos:line="57" pos:column="10">cursize<pos:position pos:line="57" pos:column="17"/></name></expr>;<pos:position pos:line="57" pos:column="18"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

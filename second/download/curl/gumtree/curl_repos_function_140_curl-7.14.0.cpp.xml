<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_140_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">GlobCode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">glob_range<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">URLGlob<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">glob<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pattern<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">pos<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">amount<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* processes a range expression with the point behind the opening '['
     - char range: e.g. "a-z]", "B-Q]"
     - num range: e.g. "0-9]", "17-2000]"
     - num range with leading zeros: e.g. "001-999]"
     expression is checked for well-formedness and collected until the next ']'
  */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">URLPattern<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">pat<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">wordamount<pos:position pos:line="12" pos:column="17"/></name><init pos:line="12" pos:column="17">=<expr><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">pat<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">URLPattern<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">)<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name><name pos:line="14" pos:column="23">glob<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">pattern<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><name><name pos:line="14" pos:column="37">glob<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">size<pos:position pos:line="14" pos:column="47"/></name></name> <operator pos:line="14" pos:column="48">/<pos:position pos:line="14" pos:column="49"/></operator> <literal type="number" pos:line="14" pos:column="50">2<pos:position pos:line="14" pos:column="51"/></literal></expr>]<pos:position pos:line="14" pos:column="52"/></index></name></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
  <comment type="block" pos:line="15" pos:column="3">/* patterns 0,1,2,... correspond to size=1,3,5,... */</comment>
  <expr_stmt><expr><operator pos:line="16" pos:column="3">++<pos:position pos:line="16" pos:column="5"/></operator><name><name pos:line="16" pos:column="5">glob<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">size<pos:position pos:line="16" pos:column="15"/></name></name></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">isalpha<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">int<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator><operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">pattern<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <block pos:line="18" pos:column="31">{         <comment type="block" pos:line="18" pos:column="41">/* character range detected */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">pat<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">type<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">UPTCharRange<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">sscanf<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">pattern<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"%c-%c]"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="35">&amp;<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="36">pat<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">content<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">CharRange<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">min_c<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>,
               <argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name><name pos:line="21" pos:column="17">pat<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">content<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">CharRange<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">.<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="40">max_c<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call> <operator pos:line="21" pos:column="47">!=<pos:position pos:line="21" pos:column="49"/></operator> <literal type="number" pos:line="21" pos:column="50">2<pos:position pos:line="21" pos:column="51"/></literal> <operator pos:line="21" pos:column="52">||<pos:position pos:line="21" pos:column="54"/></operator>
        <name><name pos:line="22" pos:column="9">pat<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">content<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">CharRange<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">min_c<pos:position pos:line="22" pos:column="37"/></name></name> <operator pos:line="22" pos:column="38">&gt;=<pos:position pos:line="22" pos:column="43"/></operator> <name><name pos:line="22" pos:column="41">pat<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">content<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">CharRange<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">max_c<pos:position pos:line="22" pos:column="69"/></name></name> <operator pos:line="22" pos:column="70">||<pos:position pos:line="22" pos:column="72"/></operator>
        <name><name pos:line="23" pos:column="9">pat<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">content<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">CharRange<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">max_c<pos:position pos:line="23" pos:column="37"/></name></name> <operator pos:line="23" pos:column="38">-<pos:position pos:line="23" pos:column="39"/></operator> <name><name pos:line="23" pos:column="40">pat<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">content<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">CharRange<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">.<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="63">min_c<pos:position pos:line="23" pos:column="68"/></name></name> <operator pos:line="23" pos:column="69">&gt;<pos:position pos:line="23" pos:column="73"/></operator> <literal type="char" pos:line="23" pos:column="71">'z'<pos:position pos:line="23" pos:column="74"/></literal> <operator pos:line="23" pos:column="75">-<pos:position pos:line="23" pos:column="76"/></operator> <literal type="char" pos:line="23" pos:column="77">'a'<pos:position pos:line="23" pos:column="80"/></literal></expr>)<pos:position pos:line="23" pos:column="81"/></condition><then pos:line="23" pos:column="81"> <block pos:line="23" pos:column="82">{
      <comment type="block" pos:line="24" pos:column="7">/* the pattern is not well-formed */</comment>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">snprintf<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">glob<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">errormsg<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="32">sizeof<argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">glob<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">errormsg<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="26" pos:column="16">"illegal pattern or range specification after pos %d\n"<pos:position pos:line="26" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="73">pos<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">GLOB_ERROR<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">pat<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">content<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">CharRange<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">ptr_c<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <name><name pos:line="29" pos:column="36">pat<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">content<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">.<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">CharRange<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">.<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="59">min_c<pos:position pos:line="29" pos:column="64"/></name></name></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* always check for a literal (may be "") between patterns */</comment>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">GLOB_ERROR<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">glob_word<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">glob<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">pattern<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">+<pos:position pos:line="32" pos:column="47"/></operator> <literal type="number" pos:line="32" pos:column="48">4<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">pos<pos:position pos:line="32" pos:column="54"/></name> <operator pos:line="32" pos:column="55">+<pos:position pos:line="32" pos:column="56"/></operator> <literal type="number" pos:line="32" pos:column="57">4<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="60">&amp;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="61">wordamount<pos:position pos:line="32" pos:column="71"/></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="73"/></condition><then pos:line="32" pos:column="73">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">wordamount<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator><literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="35" pos:column="5">*<pos:position pos:line="35" pos:column="6"/></operator><name pos:line="35" pos:column="6">amount<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name><name pos:line="35" pos:column="16">pat<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">content<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">CharRange<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">max_c<pos:position pos:line="35" pos:column="44"/></name></name> <operator pos:line="35" pos:column="45">-<pos:position pos:line="35" pos:column="46"/></operator>
               <name><name pos:line="36" pos:column="16">pat<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">content<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">.<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">CharRange<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">min_c<pos:position pos:line="36" pos:column="44"/></name></name> <operator pos:line="36" pos:column="45">+<pos:position pos:line="36" pos:column="46"/></operator> <literal type="number" pos:line="36" pos:column="47">1<pos:position pos:line="36" pos:column="48"/></literal><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator> <operator pos:line="36" pos:column="50">*<pos:position pos:line="36" pos:column="51"/></operator>
      <name pos:line="37" pos:column="7">wordamount<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>

    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">GLOB_OK<pos:position pos:line="39" pos:column="19"/></name></expr>;<pos:position pos:line="39" pos:column="20"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><call><name pos:line="42" pos:column="7">isdigit<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><operator pos:line="42" pos:column="15">(<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">int<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator><operator pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">pattern<pos:position pos:line="42" pos:column="28"/></name></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30"> <block pos:line="42" pos:column="31">{ <comment type="block" pos:line="42" pos:column="33">/* numeric range detected */</comment>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">pat<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">type<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">UPTNumRange<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">pat<pos:position pos:line="45" pos:column="8"/></name><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">content<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">NumRange<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">padlength<pos:position pos:line="45" pos:column="36"/></name></name> <operator pos:line="45" pos:column="37">=<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="39">0<pos:position pos:line="45" pos:column="40"/></literal></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">sscanf<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">pattern<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"%d-%d]"<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>,
               <argument><expr><operator pos:line="47" pos:column="16">&amp;<pos:position pos:line="47" pos:column="21"/></operator><name><name pos:line="47" pos:column="17">pat<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">content<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">NumRange<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">min_n<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>,
               <argument><expr><operator pos:line="48" pos:column="16">&amp;<pos:position pos:line="48" pos:column="21"/></operator><name><name pos:line="48" pos:column="17">pat<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">content<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">.<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">NumRange<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">max_n<pos:position pos:line="48" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call> <operator pos:line="48" pos:column="46">!=<pos:position pos:line="48" pos:column="48"/></operator> <literal type="number" pos:line="48" pos:column="49">2<pos:position pos:line="48" pos:column="50"/></literal> <operator pos:line="48" pos:column="51">||<pos:position pos:line="48" pos:column="53"/></operator>
        <name><name pos:line="49" pos:column="9">pat<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">content<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">.<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">NumRange<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">.<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">min_n<pos:position pos:line="49" pos:column="36"/></name></name> <operator pos:line="49" pos:column="37">&gt;=<pos:position pos:line="49" pos:column="42"/></operator> <name><name pos:line="49" pos:column="40">pat<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">content<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">.<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="53">NumRange<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">.<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="62">max_n<pos:position pos:line="49" pos:column="67"/></name></name></expr>)<pos:position pos:line="49" pos:column="68"/></condition><then pos:line="49" pos:column="68"> <block pos:line="49" pos:column="69">{
      <comment type="block" pos:line="50" pos:column="7">/* the pattern is not well-formed */</comment>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">snprintf<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name><name pos:line="51" pos:column="16">glob<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">errormsg<pos:position pos:line="51" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="32">sizeof<argument_list pos:line="51" pos:column="38">(<argument><expr><name><name pos:line="51" pos:column="39">glob<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">errormsg<pos:position pos:line="51" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></sizeof></expr></argument>,
               <argument><expr><literal type="string" pos:line="52" pos:column="16">"error: illegal pattern or range specification after pos %d\n"<pos:position pos:line="52" pos:column="78"/></literal></expr></argument>,
               <argument><expr><name pos:line="53" pos:column="16">pos<pos:position pos:line="53" pos:column="19"/></name></expr></argument>)<pos:position pos:line="53" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">GLOB_ERROR<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">*<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">pattern<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">==<pos:position pos:line="56" pos:column="20"/></operator> <literal type="char" pos:line="56" pos:column="21">'0'<pos:position pos:line="56" pos:column="24"/></literal></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25"> <block pos:line="56" pos:column="26">{              <comment type="block" pos:line="56" pos:column="41">/* leading zero specified */</comment>
      <expr_stmt><expr><name pos:line="57" pos:column="7">c<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <name pos:line="57" pos:column="11">pattern<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
      <while pos:line="58" pos:column="7">while <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">isdigit<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><operator pos:line="58" pos:column="22">(<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">int<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">)<pos:position pos:line="58" pos:column="27"/></operator><operator pos:line="58" pos:column="27">*<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">c<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">++<pos:position pos:line="58" pos:column="31"/></operator></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="33"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="59" pos:column="9">++<pos:position pos:line="59" pos:column="11"/></operator><name><name pos:line="59" pos:column="11">pat<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">content<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">.<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">NumRange<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">.<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="33">padlength<pos:position pos:line="59" pos:column="42"/></name></name></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt></block></while> <comment type="block" pos:line="59" pos:column="44">/* padding length is set for all
                                              instances of this pattern */</comment>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">pat<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">-&gt;<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="10">content<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">.<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">NumRange<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">ptr_n<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">=<pos:position pos:line="62" pos:column="34"/></operator> <name><name pos:line="62" pos:column="35">pat<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">-&gt;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="40">content<pos:position pos:line="62" pos:column="47"/></name><operator pos:line="62" pos:column="47">.<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="48">NumRange<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">.<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="57">min_n<pos:position pos:line="62" pos:column="62"/></name></name></expr>;<pos:position pos:line="62" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="63" pos:column="5">c<pos:position pos:line="63" pos:column="6"/></name> <operator pos:line="63" pos:column="7">=<pos:position pos:line="63" pos:column="8"/></operator> <operator pos:line="63" pos:column="9">(<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">char<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></operator><operator pos:line="63" pos:column="15">)<pos:position pos:line="63" pos:column="16"/></operator><call><name pos:line="63" pos:column="16">strchr<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">pattern<pos:position pos:line="63" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="63" pos:column="32">']'<pos:position pos:line="63" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt> <comment type="block" pos:line="63" pos:column="38">/* continue after next ']' */</comment>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name pos:line="64" pos:column="8">c<pos:position pos:line="64" pos:column="9"/></name></expr>)<pos:position pos:line="64" pos:column="10"/></condition><then pos:line="64" pos:column="10">
      <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="7">c<pos:position pos:line="65" pos:column="8"/></name><operator pos:line="65" pos:column="8">++<pos:position pos:line="65" pos:column="10"/></operator></expr>;<pos:position pos:line="65" pos:column="11"/></expr_stmt></block></then>
    <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">snprintf<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name><name pos:line="67" pos:column="16">glob<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">errormsg<pos:position pos:line="67" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="32">sizeof<argument_list pos:line="67" pos:column="38">(<argument><expr><name><name pos:line="67" pos:column="39">glob<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">-&gt;<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="45">errormsg<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="56">"missing ']'"<pos:position pos:line="67" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><name pos:line="68" pos:column="14">GLOB_ERROR<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return> <comment type="block" pos:line="68" pos:column="26">/* missing ']' */</comment>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="71" pos:column="5">/* always check for a literal (may be "") between patterns */</comment>

    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><name pos:line="73" pos:column="8">GLOB_ERROR<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">==<pos:position pos:line="73" pos:column="21"/></operator> <call><name pos:line="73" pos:column="22">glob_word<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">glob<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="38">c<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">pos<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">+<pos:position pos:line="73" pos:column="46"/></operator> <operator pos:line="73" pos:column="47">(<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="48">c<pos:position pos:line="73" pos:column="49"/></name> <operator pos:line="73" pos:column="50">-<pos:position pos:line="73" pos:column="51"/></operator> <name pos:line="73" pos:column="52">pattern<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">)<pos:position pos:line="73" pos:column="60"/></operator></expr></argument>, <argument><expr><operator pos:line="73" pos:column="62">&amp;<pos:position pos:line="73" pos:column="67"/></operator><name pos:line="73" pos:column="63">wordamount<pos:position pos:line="73" pos:column="73"/></name></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="75"/></condition><then pos:line="73" pos:column="75">
      <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="7">wordamount<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="number" pos:line="74" pos:column="20">1<pos:position pos:line="74" pos:column="21"/></literal></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="76" pos:column="5">*<pos:position pos:line="76" pos:column="6"/></operator><name pos:line="76" pos:column="6">amount<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <operator pos:line="76" pos:column="15">(<pos:position pos:line="76" pos:column="16"/></operator><name><name pos:line="76" pos:column="16">pat<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">content<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">.<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">NumRange<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">.<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">max_n<pos:position pos:line="76" pos:column="43"/></name></name> <operator pos:line="76" pos:column="44">-<pos:position pos:line="76" pos:column="45"/></operator>
               <name><name pos:line="77" pos:column="16">pat<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="21">content<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">.<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="29">NumRange<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">.<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="38">min_n<pos:position pos:line="77" pos:column="43"/></name></name> <operator pos:line="77" pos:column="44">+<pos:position pos:line="77" pos:column="45"/></operator> <literal type="number" pos:line="77" pos:column="46">1<pos:position pos:line="77" pos:column="47"/></literal><operator pos:line="77" pos:column="47">)<pos:position pos:line="77" pos:column="48"/></operator> <operator pos:line="77" pos:column="49">*<pos:position pos:line="77" pos:column="50"/></operator>
      <name pos:line="78" pos:column="7">wordamount<pos:position pos:line="78" pos:column="17"/></name></expr>;<pos:position pos:line="78" pos:column="18"/></expr_stmt>

    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">GLOB_OK<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">snprintf<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><name><name pos:line="82" pos:column="12">glob<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">errormsg<pos:position pos:line="82" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="28">sizeof<argument_list pos:line="82" pos:column="34">(<argument><expr><name><name pos:line="82" pos:column="35">glob<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">-&gt;<pos:position pos:line="82" pos:column="44"/></operator><name pos:line="82" pos:column="41">errormsg<pos:position pos:line="82" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="50"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="83" pos:column="12">"illegal character in range specification at pos %d\n"<pos:position pos:line="83" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="68">pos<pos:position pos:line="83" pos:column="71"/></name></expr></argument>)<pos:position pos:line="83" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="73"/></expr_stmt>
  <return pos:line="84" pos:column="3">return <expr><name pos:line="84" pos:column="10">GLOB_ERROR<pos:position pos:line="84" pos:column="20"/></name></expr>;<pos:position pos:line="84" pos:column="21"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

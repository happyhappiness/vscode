<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1429_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_add_custom_headers<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">connectdata<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">bool<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">is_connect<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">Curl_send_buffer<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">req_buffer<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">ptr<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_slist<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name><name pos:line="6" pos:column="22">h<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><literal type="number" pos:line="6" pos:column="24">2<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_slist<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">headers<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">numlists<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt> <comment type="block" pos:line="8" pos:column="21">/* by default */</comment>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">Curl_easy<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">data<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name><name pos:line="9" pos:column="28">conn<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">data<pos:position pos:line="9" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">enum<pos:position pos:line="12" pos:column="7"/></name> <name pos:line="12" pos:column="8">proxy_use<pos:position pos:line="12" pos:column="17"/></name></name></type> <name pos:line="12" pos:column="18">proxy<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">is_connect<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">proxy<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">HEADER_CONNECT<pos:position pos:line="15" pos:column="27"/></name></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">proxy<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <ternary><condition><expr><name><name pos:line="17" pos:column="13">conn<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">bits<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">httpproxy<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">&amp;&amp;<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="37">!<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="38">conn<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">bits<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">tunnel_proxy<pos:position pos:line="17" pos:column="61"/></name></name></expr>?<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62">
      <expr><name pos:line="18" pos:column="7">HEADER_PROXY<pos:position pos:line="18" pos:column="19"/></name></expr></then><else pos:line="18" pos:column="19">:<expr><name pos:line="18" pos:column="20">HEADER_SERVER<pos:position pos:line="18" pos:column="33"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt></block></else></if>

  <switch pos:line="20" pos:column="3">switch<condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">proxy<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition> <block pos:line="20" pos:column="17">{
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">HEADER_SERVER<pos:position pos:line="21" pos:column="21"/></name></expr>:<pos:position pos:line="21" pos:column="22"/></case>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">h<pos:position pos:line="22" pos:column="6"/></name><index pos:line="22" pos:column="6">[<expr><literal type="number" pos:line="22" pos:column="7">0<pos:position pos:line="22" pos:column="8"/></literal></expr>]<pos:position pos:line="22" pos:column="9"/></index></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">data<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">set<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">headers<pos:position pos:line="22" pos:column="29"/></name></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">HEADER_PROXY<pos:position pos:line="24" pos:column="20"/></name></expr>:<pos:position pos:line="24" pos:column="21"/></case>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">h<pos:position pos:line="25" pos:column="6"/></name><index pos:line="25" pos:column="6">[<expr><literal type="number" pos:line="25" pos:column="7">0<pos:position pos:line="25" pos:column="8"/></literal></expr>]<pos:position pos:line="25" pos:column="9"/></index></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <name><name pos:line="25" pos:column="12">data<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">set<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">headers<pos:position pos:line="25" pos:column="29"/></name></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name><name pos:line="26" pos:column="8">data<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">set<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">sep_headers<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">h<pos:position pos:line="27" pos:column="8"/></name><index pos:line="27" pos:column="8">[<expr><literal type="number" pos:line="27" pos:column="9">1<pos:position pos:line="27" pos:column="10"/></literal></expr>]<pos:position pos:line="27" pos:column="11"/></index></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name><name pos:line="27" pos:column="14">data<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">set<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">.<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">proxyheaders<pos:position pos:line="27" pos:column="36"/></name></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">numlists<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">++<pos:position pos:line="28" pos:column="17"/></operator></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <break pos:line="30" pos:column="5">break;<pos:position pos:line="30" pos:column="11"/></break>
  <case pos:line="31" pos:column="3">case <expr><name pos:line="31" pos:column="8">HEADER_CONNECT<pos:position pos:line="31" pos:column="22"/></name></expr>:<pos:position pos:line="31" pos:column="23"/></case>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name><name pos:line="32" pos:column="8">data<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">set<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">sep_headers<pos:position pos:line="32" pos:column="29"/></name></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="7">h<pos:position pos:line="33" pos:column="8"/></name><index pos:line="33" pos:column="8">[<expr><literal type="number" pos:line="33" pos:column="9">0<pos:position pos:line="33" pos:column="10"/></literal></expr>]<pos:position pos:line="33" pos:column="11"/></index></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name><name pos:line="33" pos:column="14">data<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">set<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">proxyheaders<pos:position pos:line="33" pos:column="36"/></name></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="34" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="7">h<pos:position pos:line="35" pos:column="8"/></name><index pos:line="35" pos:column="8">[<expr><literal type="number" pos:line="35" pos:column="9">0<pos:position pos:line="35" pos:column="10"/></literal></expr>]<pos:position pos:line="35" pos:column="11"/></index></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name><name pos:line="35" pos:column="14">data<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">-&gt;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="20">set<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">.<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">headers<pos:position pos:line="35" pos:column="31"/></name></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt></block></else></if>
    <break pos:line="36" pos:column="5">break;<pos:position pos:line="36" pos:column="11"/></break>
  }<pos:position pos:line="37" pos:column="4"/></block></switch>

  <comment type="block" pos:line="39" pos:column="3">/* loop through one or two lists */</comment>
  <for pos:line="40" pos:column="3">for<control pos:line="40" pos:column="6">(<init><expr><name pos:line="40" pos:column="7">i<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <literal type="number" pos:line="40" pos:column="11">0<pos:position pos:line="40" pos:column="12"/></literal></expr>;<pos:position pos:line="40" pos:column="13"/></init> <condition><expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&lt;<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="18">numlists<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></condition> <incr><expr><name pos:line="40" pos:column="28">i<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">++<pos:position pos:line="40" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="32"/></control> <block pos:line="40" pos:column="33">{
    <expr_stmt><expr><name pos:line="41" pos:column="5">headers<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name><name pos:line="41" pos:column="15">h<pos:position pos:line="41" pos:column="16"/></name><index pos:line="41" pos:column="16">[<expr><name pos:line="41" pos:column="17">i<pos:position pos:line="41" pos:column="18"/></name></expr>]<pos:position pos:line="41" pos:column="19"/></index></name></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>

    <while pos:line="43" pos:column="5">while<condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">headers<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition> <block pos:line="43" pos:column="20">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">ptr<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">strchr<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name><name pos:line="44" pos:column="20">headers<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">data<pos:position pos:line="44" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="35">':'<pos:position pos:line="44" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
      <if pos:line="45" pos:column="7">if<condition pos:line="45" pos:column="9">(<expr><name pos:line="45" pos:column="10">ptr<pos:position pos:line="45" pos:column="13"/></name></expr>)<pos:position pos:line="45" pos:column="14"/></condition><then pos:line="45" pos:column="14"> <block pos:line="45" pos:column="15">{
        <comment type="block" pos:line="46" pos:column="9">/* we require a colon for this to be a true header */</comment>

        <expr_stmt><expr><name pos:line="48" pos:column="9">ptr<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">++<pos:position pos:line="48" pos:column="14"/></operator></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt> <comment type="block" pos:line="48" pos:column="16">/* pass the colon */</comment>
        <while pos:line="49" pos:column="9">while<condition pos:line="49" pos:column="14">(<expr><operator pos:line="49" pos:column="15">*<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">ptr<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&amp;&amp;<pos:position pos:line="49" pos:column="30"/></operator> <call><name pos:line="49" pos:column="23">ISSPACE<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><operator pos:line="49" pos:column="31">*<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">ptr<pos:position pos:line="49" pos:column="35"/></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="37"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="11">ptr<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">++<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt></block></while>

        <if pos:line="52" pos:column="9">if<condition pos:line="52" pos:column="11">(<expr><operator pos:line="52" pos:column="12">*<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">ptr<pos:position pos:line="52" pos:column="16"/></name></expr>)<pos:position pos:line="52" pos:column="17"/></condition><then pos:line="52" pos:column="17"> <block pos:line="52" pos:column="18">{
          <comment type="block" pos:line="53" pos:column="11">/* only send this if the contents was non-blank */</comment>

          <if pos:line="55" pos:column="11">if<condition pos:line="55" pos:column="13">(<expr><name><name pos:line="55" pos:column="14">conn<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">allocptr<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">.<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="29">host<pos:position pos:line="55" pos:column="33"/></name></name> <operator pos:line="55" pos:column="34">&amp;&amp;<pos:position pos:line="55" pos:column="44"/></operator>
             <comment type="block" pos:line="56" pos:column="14">/* a Host: header was sent already, don't pass on any custom Host:
                header as that will produce *two* in the same request! */</comment>
             <call><name pos:line="58" pos:column="14">checkprefix<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><literal type="string" pos:line="58" pos:column="26">"Host:"<pos:position pos:line="58" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="35">headers<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">data<pos:position pos:line="58" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="50"/></condition><then pos:line="58" pos:column="50">
            <block type="pseudo"><empty_stmt pos:line="59" pos:column="13">;<pos:position pos:line="59" pos:column="14"/></empty_stmt></block></then>
          <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if<condition pos:line="60" pos:column="18">(<expr><name><name pos:line="60" pos:column="19">data<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">set<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">.<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">httpreq<pos:position pos:line="60" pos:column="36"/></name></name> <operator pos:line="60" pos:column="37">==<pos:position pos:line="60" pos:column="39"/></operator> <name pos:line="60" pos:column="40">HTTPREQ_POST_FORM<pos:position pos:line="60" pos:column="57"/></name> <operator pos:line="60" pos:column="58">&amp;&amp;<pos:position pos:line="60" pos:column="68"/></operator>
                  <comment type="block" pos:line="61" pos:column="19">/* this header (extended by formdata.c) is sent later */</comment>
                  <call><name pos:line="62" pos:column="19">checkprefix<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><literal type="string" pos:line="62" pos:column="31">"Content-Type:"<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="48">headers<pos:position pos:line="62" pos:column="55"/></name><operator pos:line="62" pos:column="55">-&gt;<pos:position pos:line="62" pos:column="60"/></operator><name pos:line="62" pos:column="57">data<pos:position pos:line="62" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="63"/></condition><then pos:line="62" pos:column="63">
            <block type="pseudo"><empty_stmt pos:line="63" pos:column="13">;<pos:position pos:line="63" pos:column="14"/></empty_stmt></block></then></if></elseif>
          <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if<condition pos:line="64" pos:column="18">(<expr><name><name pos:line="64" pos:column="19">data<pos:position pos:line="64" pos:column="23"/></name><operator pos:line="64" pos:column="23">-&gt;<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="25">set<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">httpreq<pos:position pos:line="64" pos:column="36"/></name></name> <operator pos:line="64" pos:column="37">==<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="40">HTTPREQ_POST_MIME<pos:position pos:line="64" pos:column="57"/></name> <operator pos:line="64" pos:column="58">&amp;&amp;<pos:position pos:line="64" pos:column="68"/></operator>
                  <comment type="block" pos:line="65" pos:column="19">/* this header is sent later */</comment>
                  <call><name pos:line="66" pos:column="19">checkprefix<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="string" pos:line="66" pos:column="31">"Content-Type:"<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="48">headers<pos:position pos:line="66" pos:column="55"/></name><operator pos:line="66" pos:column="55">-&gt;<pos:position pos:line="66" pos:column="60"/></operator><name pos:line="66" pos:column="57">data<pos:position pos:line="66" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="63"/></condition><then pos:line="66" pos:column="63">
            <block type="pseudo"><empty_stmt pos:line="67" pos:column="13">;<pos:position pos:line="67" pos:column="14"/></empty_stmt></block></then></if></elseif>
          <elseif pos:line="68" pos:column="11">else <if pos:line="68" pos:column="16">if<condition pos:line="68" pos:column="18">(<expr><name><name pos:line="68" pos:column="19">conn<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">bits<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">.<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">authneg<pos:position pos:line="68" pos:column="37"/></name></name> <operator pos:line="68" pos:column="38">&amp;&amp;<pos:position pos:line="68" pos:column="48"/></operator>
                  <comment type="block" pos:line="69" pos:column="19">/* while doing auth neg, don't allow the custom length since
                     we will force length zero then */</comment>
                  <call><name pos:line="71" pos:column="19">checkprefix<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><literal type="string" pos:line="71" pos:column="31">"Content-Length:"<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="50">headers<pos:position pos:line="71" pos:column="57"/></name><operator pos:line="71" pos:column="57">-&gt;<pos:position pos:line="71" pos:column="62"/></operator><name pos:line="71" pos:column="59">data<pos:position pos:line="71" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="65"/></condition><then pos:line="71" pos:column="65">
            <block type="pseudo"><empty_stmt pos:line="72" pos:column="13">;<pos:position pos:line="72" pos:column="14"/></empty_stmt></block></then></if></elseif>
          <elseif pos:line="73" pos:column="11">else <if pos:line="73" pos:column="16">if<condition pos:line="73" pos:column="18">(<expr><name><name pos:line="73" pos:column="19">conn<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">allocptr<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">.<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="34">te<pos:position pos:line="73" pos:column="36"/></name></name> <operator pos:line="73" pos:column="37">&amp;&amp;<pos:position pos:line="73" pos:column="47"/></operator>
                  <comment type="block" pos:line="74" pos:column="19">/* when asking for Transfer-Encoding, don't pass on a custom
                     Connection: */</comment>
                  <call><name pos:line="76" pos:column="19">checkprefix<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><literal type="string" pos:line="76" pos:column="31">"Connection:"<pos:position pos:line="76" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="46">headers<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">-&gt;<pos:position pos:line="76" pos:column="58"/></operator><name pos:line="76" pos:column="55">data<pos:position pos:line="76" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="61"/></condition><then pos:line="76" pos:column="61">
            <block type="pseudo"><empty_stmt pos:line="77" pos:column="13">;<pos:position pos:line="77" pos:column="14"/></empty_stmt></block></then></if></elseif>
          <elseif pos:line="78" pos:column="11">else <if pos:line="78" pos:column="16">if<condition pos:line="78" pos:column="18">(<expr><operator pos:line="78" pos:column="19">(<pos:position pos:line="78" pos:column="20"/></operator><name><name pos:line="78" pos:column="20">conn<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">httpversion<pos:position pos:line="78" pos:column="37"/></name></name> <operator pos:line="78" pos:column="38">==<pos:position pos:line="78" pos:column="40"/></operator> <literal type="number" pos:line="78" pos:column="41">20<pos:position pos:line="78" pos:column="43"/></literal><operator pos:line="78" pos:column="43">)<pos:position pos:line="78" pos:column="44"/></operator> <operator pos:line="78" pos:column="45">&amp;&amp;<pos:position pos:line="78" pos:column="55"/></operator>
                  <call><name pos:line="79" pos:column="19">checkprefix<pos:position pos:line="79" pos:column="30"/></name><argument_list pos:line="79" pos:column="30">(<argument><expr><literal type="string" pos:line="79" pos:column="31">"Transfer-Encoding:"<pos:position pos:line="79" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="53">headers<pos:position pos:line="79" pos:column="60"/></name><operator pos:line="79" pos:column="60">-&gt;<pos:position pos:line="79" pos:column="65"/></operator><name pos:line="79" pos:column="62">data<pos:position pos:line="79" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="68"/></condition><then pos:line="79" pos:column="68">
            <comment type="block" pos:line="80" pos:column="13">/* HTTP/2 doesn't support chunked requests */</comment>
            <block type="pseudo"><empty_stmt pos:line="81" pos:column="13">;<pos:position pos:line="81" pos:column="14"/></empty_stmt></block></then></if></elseif>
          <else pos:line="82" pos:column="11">else <block pos:line="82" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">CURLcode<pos:position pos:line="83" pos:column="21"/></name></type> <name pos:line="83" pos:column="22">result<pos:position pos:line="83" pos:column="28"/></name> <init pos:line="83" pos:column="29">= <expr><call><name pos:line="83" pos:column="31">Curl_add_bufferf<pos:position pos:line="83" pos:column="47"/></name><argument_list pos:line="83" pos:column="47">(<argument><expr><name pos:line="83" pos:column="48">req_buffer<pos:position pos:line="83" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="60">"%s\r\n"<pos:position pos:line="83" pos:column="68"/></literal></expr></argument>,
                                               <argument><expr><name><name pos:line="84" pos:column="48">headers<pos:position pos:line="84" pos:column="55"/></name><operator pos:line="84" pos:column="55">-&gt;<pos:position pos:line="84" pos:column="60"/></operator><name pos:line="84" pos:column="57">data<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="63"/></decl_stmt>
            <if pos:line="85" pos:column="13">if<condition pos:line="85" pos:column="15">(<expr><name pos:line="85" pos:column="16">result<pos:position pos:line="85" pos:column="22"/></name></expr>)<pos:position pos:line="85" pos:column="23"/></condition><then pos:line="85" pos:column="23">
              <block type="pseudo"><return pos:line="86" pos:column="15">return <expr><name pos:line="86" pos:column="22">result<pos:position pos:line="86" pos:column="28"/></name></expr>;<pos:position pos:line="86" pos:column="29"/></return></block></then></if>
          }<pos:position pos:line="87" pos:column="12"/></block></else></if>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
      }<pos:position pos:line="89" pos:column="8"/></block></then>
      <else pos:line="90" pos:column="7">else <block pos:line="90" pos:column="12">{
        <expr_stmt><expr><name pos:line="91" pos:column="9">ptr<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <call><name pos:line="91" pos:column="15">strchr<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><name><name pos:line="91" pos:column="22">headers<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">-&gt;<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="31">data<pos:position pos:line="91" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="91" pos:column="37">';'<pos:position pos:line="91" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="42"/></expr_stmt>
        <if pos:line="92" pos:column="9">if<condition pos:line="92" pos:column="11">(<expr><name pos:line="92" pos:column="12">ptr<pos:position pos:line="92" pos:column="15"/></name></expr>)<pos:position pos:line="92" pos:column="16"/></condition><then pos:line="92" pos:column="16"> <block pos:line="92" pos:column="17">{

          <expr_stmt><expr><name pos:line="94" pos:column="11">ptr<pos:position pos:line="94" pos:column="14"/></name><operator pos:line="94" pos:column="14">++<pos:position pos:line="94" pos:column="16"/></operator></expr>;<pos:position pos:line="94" pos:column="17"/></expr_stmt> <comment type="block" pos:line="94" pos:column="18">/* pass the semicolon */</comment>
          <while pos:line="95" pos:column="11">while<condition pos:line="95" pos:column="16">(<expr><operator pos:line="95" pos:column="17">*<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">ptr<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">&amp;&amp;<pos:position pos:line="95" pos:column="32"/></operator> <call><name pos:line="95" pos:column="25">ISSPACE<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><operator pos:line="95" pos:column="33">*<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="34">ptr<pos:position pos:line="95" pos:column="37"/></name></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="39"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="13">ptr<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">++<pos:position pos:line="96" pos:column="18"/></operator></expr>;<pos:position pos:line="96" pos:column="19"/></expr_stmt></block></while>

          <if pos:line="98" pos:column="11">if<condition pos:line="98" pos:column="13">(<expr><operator pos:line="98" pos:column="14">*<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="15">ptr<pos:position pos:line="98" pos:column="18"/></name></expr>)<pos:position pos:line="98" pos:column="19"/></condition><then pos:line="98" pos:column="19"> <block pos:line="98" pos:column="20">{
            <comment type="block" pos:line="99" pos:column="13">/* this may be used for something else in the future */</comment>
          }<pos:position pos:line="100" pos:column="12"/></block></then>
          <else pos:line="101" pos:column="11">else <block pos:line="101" pos:column="16">{
            <if pos:line="102" pos:column="13">if<condition pos:line="102" pos:column="15">(<expr><operator pos:line="102" pos:column="16">*<pos:position pos:line="102" pos:column="17"/></operator><operator pos:line="102" pos:column="17">(<pos:position pos:line="102" pos:column="18"/></operator><operator pos:line="102" pos:column="18">--<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="20">ptr<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">)<pos:position pos:line="102" pos:column="24"/></operator> <operator pos:line="102" pos:column="25">==<pos:position pos:line="102" pos:column="27"/></operator> <literal type="char" pos:line="102" pos:column="28">';'<pos:position pos:line="102" pos:column="31"/></literal></expr>)<pos:position pos:line="102" pos:column="32"/></condition><then pos:line="102" pos:column="32"> <block pos:line="102" pos:column="33">{
              <decl_stmt><decl><type><name pos:line="103" pos:column="15">CURLcode<pos:position pos:line="103" pos:column="23"/></name></type> <name pos:line="103" pos:column="24">result<pos:position pos:line="103" pos:column="30"/></name></decl>;<pos:position pos:line="103" pos:column="31"/></decl_stmt>

              <comment type="block" pos:line="105" pos:column="15">/* send no-value custom header if terminated by semicolon */</comment>
              <expr_stmt><expr><operator pos:line="106" pos:column="15">*<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">ptr<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <literal type="char" pos:line="106" pos:column="22">':'<pos:position pos:line="106" pos:column="25"/></literal></expr>;<pos:position pos:line="106" pos:column="26"/></expr_stmt>
              <expr_stmt><expr><name pos:line="107" pos:column="15">result<pos:position pos:line="107" pos:column="21"/></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <call><name pos:line="107" pos:column="24">Curl_add_bufferf<pos:position pos:line="107" pos:column="40"/></name><argument_list pos:line="107" pos:column="40">(<argument><expr><name pos:line="107" pos:column="41">req_buffer<pos:position pos:line="107" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="53">"%s\r\n"<pos:position pos:line="107" pos:column="61"/></literal></expr></argument>,
                                        <argument><expr><name><name pos:line="108" pos:column="41">headers<pos:position pos:line="108" pos:column="48"/></name><operator pos:line="108" pos:column="48">-&gt;<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="50">data<pos:position pos:line="108" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="56"/></expr_stmt>

              <comment type="block" pos:line="110" pos:column="15">/* restore the previous value */</comment>
              <expr_stmt><expr><operator pos:line="111" pos:column="15">*<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="16">ptr<pos:position pos:line="111" pos:column="19"/></name> <operator pos:line="111" pos:column="20">=<pos:position pos:line="111" pos:column="21"/></operator> <literal type="char" pos:line="111" pos:column="22">';'<pos:position pos:line="111" pos:column="25"/></literal></expr>;<pos:position pos:line="111" pos:column="26"/></expr_stmt>

              <if pos:line="113" pos:column="15">if<condition pos:line="113" pos:column="17">(<expr><name pos:line="113" pos:column="18">result<pos:position pos:line="113" pos:column="24"/></name></expr>)<pos:position pos:line="113" pos:column="25"/></condition><then pos:line="113" pos:column="25">
                <block type="pseudo"><return pos:line="114" pos:column="17">return <expr><name pos:line="114" pos:column="24">result<pos:position pos:line="114" pos:column="30"/></name></expr>;<pos:position pos:line="114" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="115" pos:column="14"/></block></then></if>
          }<pos:position pos:line="116" pos:column="12"/></block></else></if>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>
      }<pos:position pos:line="118" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name pos:line="119" pos:column="7">headers<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">=<pos:position pos:line="119" pos:column="16"/></operator> <name><name pos:line="119" pos:column="17">headers<pos:position pos:line="119" pos:column="24"/></name><operator pos:line="119" pos:column="24">-&gt;<pos:position pos:line="119" pos:column="29"/></operator><name pos:line="119" pos:column="26">next<pos:position pos:line="119" pos:column="30"/></name></name></expr>;<pos:position pos:line="119" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></while>
  }<pos:position pos:line="121" pos:column="4"/></block></for>

  <return pos:line="123" pos:column="3">return <expr><name pos:line="123" pos:column="10">CURLE_OK<pos:position pos:line="123" pos:column="18"/></name></expr>;<pos:position pos:line="123" pos:column="19"/></return>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

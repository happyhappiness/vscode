<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_697_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_gtls_connect<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">connectdata<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">sockindex<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>

<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name><name pos:line="6" pos:column="13">cert_type_priority<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[]<pos:position pos:line="6" pos:column="33"/></index></name> <init pos:line="6" pos:column="34">= <expr><block pos:line="6" pos:column="36">{ <expr><name pos:line="6" pos:column="38">GNUTLS_CRT_X509<pos:position pos:line="6" pos:column="53"/></name></expr>, <expr><literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr> }<pos:position pos:line="6" pos:column="58"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gnutls_session<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">session<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">rc<pos:position pos:line="9" pos:column="9"/></name></decl>;<pos:position pos:line="9" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">int<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">cert_list_size<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">gnutls_datum<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">chainp<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">verify_status<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">gnutls_x509_crt<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">x509_cert<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">certbuf<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><literal type="number" pos:line="14" pos:column="16">256<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt> <comment type="block" pos:line="14" pos:column="22">/* big enough? */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">size<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">unsigned<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">int<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">algo<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">int<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">bits<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">time_t<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">clock<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="19" pos:column="3">const<pos:position pos:line="19" pos:column="8"/></specifier> <name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">ptr<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">void<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name pos:line="20" pos:column="9">ssl_sessionid<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">size_t<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">ssl_idsize<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* GnuTLS only supports TLSv1 (and SSLv3?) */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name><name pos:line="24" pos:column="6">data<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">set<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">.<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">ssl<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">version<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">CURL_SSLVERSION_SSLv2<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">failf<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="17">"GnuTLS does not support SSLv2"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* allocate a cred struct */</comment>
  <expr_stmt><expr><name pos:line="30" pos:column="3">rc<pos:position pos:line="30" pos:column="5"/></name> <operator pos:line="30" pos:column="6">=<pos:position pos:line="30" pos:column="7"/></operator> <call><name pos:line="30" pos:column="8">gnutls_certificate_allocate_credentials<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name><name pos:line="30" pos:column="49">conn<pos:position pos:line="30" pos:column="53"/></name><operator pos:line="30" pos:column="53">-&gt;<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="55">ssl<pos:position pos:line="30" pos:column="58"/></name><index pos:line="30" pos:column="58">[<expr><name pos:line="30" pos:column="59">sockindex<pos:position pos:line="30" pos:column="68"/></name></expr>]<pos:position pos:line="30" pos:column="69"/></index></name><operator pos:line="30" pos:column="69">.<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="70">cred<pos:position pos:line="30" pos:column="74"/></name></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">rc<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">&lt;<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal></expr>)<pos:position pos:line="31" pos:column="13"/></condition><then pos:line="31" pos:column="13"> <block pos:line="31" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">failf<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">data<pos:position pos:line="32" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="17">"gnutls_cert_all_cred() failed: %s"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="54">gnutls_strerror<pos:position pos:line="32" pos:column="69"/></name><argument_list pos:line="32" pos:column="69">(<argument><expr><name pos:line="32" pos:column="70">rc<pos:position pos:line="32" pos:column="72"/></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name><name pos:line="36" pos:column="6">data<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">set<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">ssl<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">CAfile<pos:position pos:line="36" pos:column="26"/></name></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
    <comment type="block" pos:line="37" pos:column="5">/* set the trusted CA cert bundle file */</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">rc<pos:position pos:line="38" pos:column="7"/></name> <operator pos:line="38" pos:column="8">=<pos:position pos:line="38" pos:column="9"/></operator> <call><name pos:line="38" pos:column="10">gnutls_certificate_set_x509_trust_file<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><name><name pos:line="38" pos:column="49">conn<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">ssl<pos:position pos:line="38" pos:column="58"/></name><index pos:line="38" pos:column="58">[<expr><name pos:line="38" pos:column="59">sockindex<pos:position pos:line="38" pos:column="68"/></name></expr>]<pos:position pos:line="38" pos:column="69"/></index></name><operator pos:line="38" pos:column="69">.<pos:position pos:line="38" pos:column="70"/></operator><name pos:line="38" pos:column="70">cred<pos:position pos:line="38" pos:column="74"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="39" pos:column="49">data<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">set<pos:position pos:line="39" pos:column="58"/></name><operator pos:line="39" pos:column="58">.<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">ssl<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">.<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">CAfile<pos:position pos:line="39" pos:column="69"/></name></name></expr></argument>,
                                                <argument><expr><name pos:line="40" pos:column="49">GNUTLS_X509_FMT_PEM<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">rc<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">&lt;<pos:position pos:line="41" pos:column="15"/></operator> <literal type="number" pos:line="41" pos:column="13">0<pos:position pos:line="41" pos:column="14"/></literal></expr>)<pos:position pos:line="41" pos:column="15"/></condition><then pos:line="41" pos:column="15"> <block pos:line="41" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">infof<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">data<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="19">"error reading ca cert file %s (%s)\n"<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="43" pos:column="13">data<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">set<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">ssl<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">.<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">CAfile<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="35">gnutls_strerror<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">rc<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="47" pos:column="3">/* Initialize TLS session as a client */</comment>
  <expr_stmt><expr><name pos:line="48" pos:column="3">rc<pos:position pos:line="48" pos:column="5"/></name> <operator pos:line="48" pos:column="6">=<pos:position pos:line="48" pos:column="7"/></operator> <call><name pos:line="48" pos:column="8">gnutls_init<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><operator pos:line="48" pos:column="20">&amp;<pos:position pos:line="48" pos:column="25"/></operator><name><name pos:line="48" pos:column="21">conn<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">ssl<pos:position pos:line="48" pos:column="30"/></name><index pos:line="48" pos:column="30">[<expr><name pos:line="48" pos:column="31">sockindex<pos:position pos:line="48" pos:column="40"/></name></expr>]<pos:position pos:line="48" pos:column="41"/></index></name><operator pos:line="48" pos:column="41">.<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="42">session<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">GNUTLS_CLIENT<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name pos:line="49" pos:column="6">rc<pos:position pos:line="49" pos:column="8"/></name></expr>)<pos:position pos:line="49" pos:column="9"/></condition><then pos:line="49" pos:column="9"> <block pos:line="49" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">failf<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">data<pos:position pos:line="50" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="17">"gnutls_init() failed: %d"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">rc<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/* convenient assign */</comment>
  <expr_stmt><expr><name pos:line="55" pos:column="3">session<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <name><name pos:line="55" pos:column="13">conn<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">ssl<pos:position pos:line="55" pos:column="22"/></name><index pos:line="55" pos:column="22">[<expr><name pos:line="55" pos:column="23">sockindex<pos:position pos:line="55" pos:column="32"/></name></expr>]<pos:position pos:line="55" pos:column="33"/></index></name><operator pos:line="55" pos:column="33">.<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">session<pos:position pos:line="55" pos:column="41"/></name></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="57" pos:column="3">/* Use default priorities */</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">rc<pos:position pos:line="58" pos:column="5"/></name> <operator pos:line="58" pos:column="6">=<pos:position pos:line="58" pos:column="7"/></operator> <call><name pos:line="58" pos:column="8">gnutls_set_default_priority<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name pos:line="58" pos:column="36">session<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">rc<pos:position pos:line="59" pos:column="8"/></name> <operator pos:line="59" pos:column="9">&lt;<pos:position pos:line="59" pos:column="13"/></operator> <literal type="number" pos:line="59" pos:column="11">0<pos:position pos:line="59" pos:column="12"/></literal></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13">
    <block type="pseudo"><return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="60" pos:column="35"/></name></expr>;<pos:position pos:line="60" pos:column="36"/></return></block></then></if>

  <comment type="block" pos:line="62" pos:column="3">/* Sets the priority on the certificate types supported by gnutls. Priority
     is higher for types specified before others. After specifying the types
     you want, you must append a 0. */</comment>
  <expr_stmt><expr><name pos:line="65" pos:column="3">rc<pos:position pos:line="65" pos:column="5"/></name> <operator pos:line="65" pos:column="6">=<pos:position pos:line="65" pos:column="7"/></operator> <call><name pos:line="65" pos:column="8">gnutls_certificate_type_set_priority<pos:position pos:line="65" pos:column="44"/></name><argument_list pos:line="65" pos:column="44">(<argument><expr><name pos:line="65" pos:column="45">session<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">cert_type_priority<pos:position pos:line="65" pos:column="72"/></name></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="74"/></expr_stmt>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name pos:line="66" pos:column="6">rc<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">&lt;<pos:position pos:line="66" pos:column="13"/></operator> <literal type="number" pos:line="66" pos:column="11">0<pos:position pos:line="66" pos:column="12"/></literal></expr>)<pos:position pos:line="66" pos:column="13"/></condition><then pos:line="66" pos:column="13">
    <block type="pseudo"><return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></return></block></then></if>

  <comment type="block" pos:line="69" pos:column="3">/* put the anonymous credentials to the current session */</comment>
  <expr_stmt><expr><name pos:line="70" pos:column="3">rc<pos:position pos:line="70" pos:column="5"/></name> <operator pos:line="70" pos:column="6">=<pos:position pos:line="70" pos:column="7"/></operator> <call><name pos:line="70" pos:column="8">gnutls_credentials_set<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">session<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">GNUTLS_CRD_CERTIFICATE<pos:position pos:line="70" pos:column="62"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="71" pos:column="31">conn<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">ssl<pos:position pos:line="71" pos:column="40"/></name><index pos:line="71" pos:column="40">[<expr><name pos:line="71" pos:column="41">sockindex<pos:position pos:line="71" pos:column="50"/></name></expr>]<pos:position pos:line="71" pos:column="51"/></index></name><operator pos:line="71" pos:column="51">.<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="52">cred<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt>

  <comment type="block" pos:line="73" pos:column="3">/* set the connection handle (file descriptor for the socket) */</comment>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">gnutls_transport_set_ptr<pos:position pos:line="74" pos:column="27"/></name><argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">session<pos:position pos:line="74" pos:column="35"/></name></expr></argument>,
                           <argument><expr><operator pos:line="75" pos:column="28">(<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">gnutls_transport_ptr<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">)<pos:position pos:line="75" pos:column="50"/></operator><name><name pos:line="75" pos:column="50">conn<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">sock<pos:position pos:line="75" pos:column="60"/></name><index pos:line="75" pos:column="60">[<expr><name pos:line="75" pos:column="61">sockindex<pos:position pos:line="75" pos:column="70"/></name></expr>]<pos:position pos:line="75" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="77" pos:column="3">/* This might be a reconnect, so we check for a session ID in the cache
     to speed up things */</comment>

  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><operator pos:line="80" pos:column="6">!<pos:position pos:line="80" pos:column="7"/></operator><call><name pos:line="80" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">conn<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="35">&amp;<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="36">ssl_sessionid<pos:position pos:line="80" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="51">&amp;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="52">ssl_idsize<pos:position pos:line="80" pos:column="62"/></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="64"/></condition><then pos:line="80" pos:column="64"> <block pos:line="80" pos:column="65">{
    <comment type="block" pos:line="81" pos:column="5">/* we got a session id, use it! */</comment>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">gnutls_session_set_data<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">session<pos:position pos:line="82" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="38">ssl_sessionid<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">ssl_idsize<pos:position pos:line="82" pos:column="63"/></name></expr></argument>)<pos:position pos:line="82" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="84" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">infof<pos:position pos:line="85" pos:column="10"/></name> <argument_list pos:line="85" pos:column="11">(<argument><expr><name pos:line="85" pos:column="12">data<pos:position pos:line="85" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="18">"SSL re-using session ID\n"<pos:position pos:line="85" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <do pos:line="88" pos:column="3">do <block pos:line="88" pos:column="6">{
    <expr_stmt><expr><name pos:line="89" pos:column="5">rc<pos:position pos:line="89" pos:column="7"/></name> <operator pos:line="89" pos:column="8">=<pos:position pos:line="89" pos:column="9"/></operator> <call><name pos:line="89" pos:column="10">gnutls_handshake<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">session<pos:position pos:line="89" pos:column="34"/></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>

    <if pos:line="91" pos:column="5">if<condition pos:line="91" pos:column="7">(<expr><operator pos:line="91" pos:column="8">(<pos:position pos:line="91" pos:column="9"/></operator><name pos:line="91" pos:column="9">rc<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">==<pos:position pos:line="91" pos:column="14"/></operator> <name pos:line="91" pos:column="15">GNUTLS_E_AGAIN<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">)<pos:position pos:line="91" pos:column="30"/></operator> <operator pos:line="91" pos:column="31">||<pos:position pos:line="91" pos:column="33"/></operator> <operator pos:line="91" pos:column="34">(<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="35">rc<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">==<pos:position pos:line="91" pos:column="40"/></operator> <name pos:line="91" pos:column="41">GNUTLS_E_INTERRUPTED<pos:position pos:line="91" pos:column="61"/></name><operator pos:line="91" pos:column="61">)<pos:position pos:line="91" pos:column="62"/></operator></expr>)<pos:position pos:line="91" pos:column="63"/></condition><then pos:line="91" pos:column="63"> <block pos:line="91" pos:column="64">{
      <decl_stmt><decl><type><name pos:line="92" pos:column="7">long<pos:position pos:line="92" pos:column="11"/></name></type> <name pos:line="92" pos:column="12">timeout_ms<pos:position pos:line="92" pos:column="22"/></name></decl>;<pos:position pos:line="92" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="93" pos:column="7">long<pos:position pos:line="93" pos:column="11"/></name></type> <name pos:line="93" pos:column="12">has_passed<pos:position pos:line="93" pos:column="22"/></name></decl>;<pos:position pos:line="93" pos:column="23"/></decl_stmt>

      <if pos:line="95" pos:column="7">if<condition pos:line="95" pos:column="9">(<expr><name><name pos:line="95" pos:column="10">data<pos:position pos:line="95" pos:column="14"/></name><operator pos:line="95" pos:column="14">-&gt;<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="16">set<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">.<pos:position pos:line="95" pos:column="20"/></operator><name pos:line="95" pos:column="20">timeout<pos:position pos:line="95" pos:column="27"/></name></name> <operator pos:line="95" pos:column="28">||<pos:position pos:line="95" pos:column="30"/></operator> <name><name pos:line="95" pos:column="31">data<pos:position pos:line="95" pos:column="35"/></name><operator pos:line="95" pos:column="35">-&gt;<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="37">set<pos:position pos:line="95" pos:column="40"/></name><operator pos:line="95" pos:column="40">.<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="41">connecttimeout<pos:position pos:line="95" pos:column="55"/></name></name></expr>)<pos:position pos:line="95" pos:column="56"/></condition><then pos:line="95" pos:column="56"> <block pos:line="95" pos:column="57">{
        <comment type="block" pos:line="96" pos:column="9">/* get the most strict timeout of the ones converted to milliseconds */</comment>
        <if pos:line="97" pos:column="9">if<condition pos:line="97" pos:column="11">(<expr><name><name pos:line="97" pos:column="12">data<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">-&gt;<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="18">set<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">.<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">timeout<pos:position pos:line="97" pos:column="29"/></name></name> <operator pos:line="97" pos:column="30">&amp;&amp;<pos:position pos:line="97" pos:column="40"/></operator>
           <operator pos:line="98" pos:column="12">(<pos:position pos:line="98" pos:column="13"/></operator><name><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name><operator pos:line="98" pos:column="17">-&gt;<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="19">set<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">.<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">timeout<pos:position pos:line="98" pos:column="30"/></name></name><operator pos:line="98" pos:column="30">&gt;<pos:position pos:line="98" pos:column="34"/></operator><name><name pos:line="98" pos:column="31">data<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">set<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">.<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="41">connecttimeout<pos:position pos:line="98" pos:column="55"/></name></name><operator pos:line="98" pos:column="55">)<pos:position pos:line="98" pos:column="56"/></operator></expr>)<pos:position pos:line="98" pos:column="57"/></condition><then pos:line="98" pos:column="57">
          <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="11">timeout_ms<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name><name pos:line="99" pos:column="24">data<pos:position pos:line="99" pos:column="28"/></name><operator pos:line="99" pos:column="28">-&gt;<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="30">set<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">.<pos:position pos:line="99" pos:column="34"/></operator><name pos:line="99" pos:column="34">timeout<pos:position pos:line="99" pos:column="41"/></name></name><operator pos:line="99" pos:column="41">*<pos:position pos:line="99" pos:column="42"/></operator><literal type="number" pos:line="99" pos:column="42">1000<pos:position pos:line="99" pos:column="46"/></literal></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt></block></then>
        <else pos:line="100" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="11">timeout_ms<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">=<pos:position pos:line="101" pos:column="23"/></operator> <name><name pos:line="101" pos:column="24">data<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">-&gt;<pos:position pos:line="101" pos:column="33"/></operator><name pos:line="101" pos:column="30">set<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">.<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="34">connecttimeout<pos:position pos:line="101" pos:column="48"/></name></name><operator pos:line="101" pos:column="48">*<pos:position pos:line="101" pos:column="49"/></operator><literal type="number" pos:line="101" pos:column="49">1000<pos:position pos:line="101" pos:column="53"/></literal></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt></block></else></if>
      }<pos:position pos:line="102" pos:column="8"/></block></then>
      <else pos:line="103" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="9">timeout_ms<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">=<pos:position pos:line="104" pos:column="21"/></operator> <name pos:line="104" pos:column="22">DEFAULT_CONNECT_TIMEOUT<pos:position pos:line="104" pos:column="45"/></name></expr>;<pos:position pos:line="104" pos:column="46"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="106" pos:column="7">/* Evaluate in milliseconds how much time that has passed */</comment>
      <expr_stmt><expr><name pos:line="107" pos:column="7">has_passed<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <call><name pos:line="107" pos:column="20">Curl_tvdiff<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><call><name pos:line="107" pos:column="32">Curl_tvnow<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">()<pos:position pos:line="107" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="46">data<pos:position pos:line="107" pos:column="50"/></name><operator pos:line="107" pos:column="50">-&gt;<pos:position pos:line="107" pos:column="55"/></operator><name pos:line="107" pos:column="52">progress<pos:position pos:line="107" pos:column="60"/></name><operator pos:line="107" pos:column="60">.<pos:position pos:line="107" pos:column="61"/></operator><name pos:line="107" pos:column="61">t_startsingle<pos:position pos:line="107" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="76"/></expr_stmt>

      <comment type="block" pos:line="109" pos:column="7">/* subtract the passed time */</comment>
      <expr_stmt><expr><name pos:line="110" pos:column="7">timeout_ms<pos:position pos:line="110" pos:column="17"/></name> <operator pos:line="110" pos:column="18">-=<pos:position pos:line="110" pos:column="20"/></operator> <name pos:line="110" pos:column="21">has_passed<pos:position pos:line="110" pos:column="31"/></name></expr>;<pos:position pos:line="110" pos:column="32"/></expr_stmt>

      <if pos:line="112" pos:column="7">if<condition pos:line="112" pos:column="9">(<expr><name pos:line="112" pos:column="10">timeout_ms<pos:position pos:line="112" pos:column="20"/></name> <operator pos:line="112" pos:column="21">&lt;<pos:position pos:line="112" pos:column="25"/></operator> <literal type="number" pos:line="112" pos:column="23">0<pos:position pos:line="112" pos:column="24"/></literal></expr>)<pos:position pos:line="112" pos:column="25"/></condition><then pos:line="112" pos:column="25"> <block pos:line="112" pos:column="26">{
        <comment type="block" pos:line="113" pos:column="9">/* a precaution, no need to continue if time already is up */</comment>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">failf<pos:position pos:line="114" pos:column="14"/></name><argument_list pos:line="114" pos:column="14">(<argument><expr><name pos:line="114" pos:column="15">data<pos:position pos:line="114" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="21">"SSL connection timeout"<pos:position pos:line="114" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="47"/></expr_stmt>
        <return pos:line="115" pos:column="9">return <expr><name pos:line="115" pos:column="16">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="115" pos:column="41"/></name></expr>;<pos:position pos:line="115" pos:column="42"/></return>
      }<pos:position pos:line="116" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="118" pos:column="7">rc<pos:position pos:line="118" pos:column="9"/></name> <operator pos:line="118" pos:column="10">=<pos:position pos:line="118" pos:column="11"/></operator> <call><name pos:line="118" pos:column="12">Curl_select<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><name><name pos:line="118" pos:column="24">conn<pos:position pos:line="118" pos:column="28"/></name><operator pos:line="118" pos:column="28">-&gt;<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="30">sock<pos:position pos:line="118" pos:column="34"/></name><index pos:line="118" pos:column="34">[<expr><name pos:line="118" pos:column="35">sockindex<pos:position pos:line="118" pos:column="44"/></name></expr>]<pos:position pos:line="118" pos:column="45"/></index></name></expr></argument>,
                         <argument><expr><name><name pos:line="119" pos:column="26">conn<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">-&gt;<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="32">sock<pos:position pos:line="119" pos:column="36"/></name><index pos:line="119" pos:column="36">[<expr><name pos:line="119" pos:column="37">sockindex<pos:position pos:line="119" pos:column="46"/></name></expr>]<pos:position pos:line="119" pos:column="47"/></index></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="49">(<pos:position pos:line="119" pos:column="50"/></operator><name pos:line="119" pos:column="50">int<pos:position pos:line="119" pos:column="53"/></name><operator pos:line="119" pos:column="53">)<pos:position pos:line="119" pos:column="54"/></operator><name pos:line="119" pos:column="54">timeout_ms<pos:position pos:line="119" pos:column="64"/></name></expr></argument>)<pos:position pos:line="119" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="66"/></expr_stmt>
      <if pos:line="120" pos:column="7">if<condition pos:line="120" pos:column="9">(<expr><name pos:line="120" pos:column="10">rc<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">&gt;<pos:position pos:line="120" pos:column="17"/></operator> <literal type="number" pos:line="120" pos:column="15">0<pos:position pos:line="120" pos:column="16"/></literal></expr>)<pos:position pos:line="120" pos:column="17"/></condition><then pos:line="120" pos:column="17">
        <comment type="block" pos:line="121" pos:column="9">/* reabable or writable, go loop*/</comment>
        <block type="pseudo"><continue pos:line="122" pos:column="9">continue;<pos:position pos:line="122" pos:column="18"/></continue></block></then>
      <elseif pos:line="123" pos:column="7">else <if pos:line="123" pos:column="12">if<condition pos:line="123" pos:column="14">(<expr><literal type="number" pos:line="123" pos:column="15">0<pos:position pos:line="123" pos:column="16"/></literal> <operator pos:line="123" pos:column="17">==<pos:position pos:line="123" pos:column="19"/></operator> <name pos:line="123" pos:column="20">rc<pos:position pos:line="123" pos:column="22"/></name></expr>)<pos:position pos:line="123" pos:column="23"/></condition><then pos:line="123" pos:column="23"> <block pos:line="123" pos:column="24">{
        <comment type="block" pos:line="124" pos:column="9">/* timeout */</comment>
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">failf<pos:position pos:line="125" pos:column="14"/></name><argument_list pos:line="125" pos:column="14">(<argument><expr><name pos:line="125" pos:column="15">data<pos:position pos:line="125" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="21">"SSL connection timeout"<pos:position pos:line="125" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="47"/></expr_stmt>
        <return pos:line="126" pos:column="9">return <expr><name pos:line="126" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="126" pos:column="40"/></name></expr>;<pos:position pos:line="126" pos:column="41"/></return>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if></elseif>
      <else pos:line="128" pos:column="7">else <block pos:line="128" pos:column="12">{
        <comment type="block" pos:line="129" pos:column="9">/* anything that gets here is fatally bad */</comment>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">failf<pos:position pos:line="130" pos:column="14"/></name><argument_list pos:line="130" pos:column="14">(<argument><expr><name pos:line="130" pos:column="15">data<pos:position pos:line="130" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="21">"select on SSL socket, errno: %d"<pos:position pos:line="130" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="130" pos:column="56">Curl_ourerrno<pos:position pos:line="130" pos:column="69"/></name><argument_list pos:line="130" pos:column="69">()<pos:position pos:line="130" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="73"/></expr_stmt>
        <return pos:line="131" pos:column="9">return <expr><name pos:line="131" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="131" pos:column="39"/></name></expr>;<pos:position pos:line="131" pos:column="40"/></return>
      }<pos:position pos:line="132" pos:column="8"/></block></else></if>
    }<pos:position pos:line="133" pos:column="6"/></block></then>
    <else pos:line="134" pos:column="5">else
      <block type="pseudo"><break pos:line="135" pos:column="7">break;<pos:position pos:line="135" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="136" pos:column="4"/></block> while<condition pos:line="136" pos:column="10">(<expr><literal type="number" pos:line="136" pos:column="11">1<pos:position pos:line="136" pos:column="12"/></literal></expr>)<pos:position pos:line="136" pos:column="13"/></condition>;<pos:position pos:line="136" pos:column="14"/></do>

  <if pos:line="138" pos:column="3">if <condition pos:line="138" pos:column="6">(<expr><name pos:line="138" pos:column="7">rc<pos:position pos:line="138" pos:column="9"/></name> <operator pos:line="138" pos:column="10">&lt;<pos:position pos:line="138" pos:column="14"/></operator> <literal type="number" pos:line="138" pos:column="12">0<pos:position pos:line="138" pos:column="13"/></literal></expr>)<pos:position pos:line="138" pos:column="14"/></condition><then pos:line="138" pos:column="14"> <block pos:line="138" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="139" pos:column="5">failf<pos:position pos:line="139" pos:column="10"/></name><argument_list pos:line="139" pos:column="10">(<argument><expr><name pos:line="139" pos:column="11">data<pos:position pos:line="139" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="17">"gnutls_handshake() failed: %d"<pos:position pos:line="139" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="50">rc<pos:position pos:line="139" pos:column="52"/></name></expr></argument>)<pos:position pos:line="139" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="140" pos:column="5">/* gnutls_perror(ret); */</comment>
    <return pos:line="141" pos:column="5">return <expr><name pos:line="141" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="141" pos:column="35"/></name></expr>;<pos:position pos:line="141" pos:column="36"/></return>
  }<pos:position pos:line="142" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="144" pos:column="3">/* This function will return the peer's raw certificate (chain) as sent by
     the peer. These certificates are in raw format (DER encoded for
     X.509). In case of a X.509 then a certificate list may be present. The
     first certificate in the list is the peer's certificate, following the
     issuer's certificate, then the issuer's issuer etc. */</comment>

  <expr_stmt><expr><name pos:line="150" pos:column="3">chainp<pos:position pos:line="150" pos:column="9"/></name> <operator pos:line="150" pos:column="10">=<pos:position pos:line="150" pos:column="11"/></operator> <call><name pos:line="150" pos:column="12">gnutls_certificate_get_peers<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">session<pos:position pos:line="150" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="50">&amp;<pos:position pos:line="150" pos:column="55"/></operator><name pos:line="150" pos:column="51">cert_list_size<pos:position pos:line="150" pos:column="65"/></name></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="67"/></expr_stmt>
  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><operator pos:line="151" pos:column="6">!<pos:position pos:line="151" pos:column="7"/></operator><name pos:line="151" pos:column="7">chainp<pos:position pos:line="151" pos:column="13"/></name></expr>)<pos:position pos:line="151" pos:column="14"/></condition><then pos:line="151" pos:column="14"> <block pos:line="151" pos:column="15">{
    <if pos:line="152" pos:column="5">if<condition pos:line="152" pos:column="7">(<expr><name><name pos:line="152" pos:column="8">data<pos:position pos:line="152" pos:column="12"/></name><operator pos:line="152" pos:column="12">-&gt;<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="14">set<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">.<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">ssl<pos:position pos:line="152" pos:column="21"/></name><operator pos:line="152" pos:column="21">.<pos:position pos:line="152" pos:column="22"/></operator><name pos:line="152" pos:column="22">verifyhost<pos:position pos:line="152" pos:column="32"/></name></name></expr>)<pos:position pos:line="152" pos:column="33"/></condition><then pos:line="152" pos:column="33"> <block pos:line="152" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">failf<pos:position pos:line="153" pos:column="12"/></name><argument_list pos:line="153" pos:column="12">(<argument><expr><name pos:line="153" pos:column="13">data<pos:position pos:line="153" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="19">"failed to get server cert"<pos:position pos:line="153" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="48"/></expr_stmt>
      <return pos:line="154" pos:column="7">return <expr><name pos:line="154" pos:column="14">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="154" pos:column="40"/></name></expr>;<pos:position pos:line="154" pos:column="41"/></return>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="156" pos:column="5">infof<pos:position pos:line="156" pos:column="10"/></name><argument_list pos:line="156" pos:column="10">(<argument><expr><name pos:line="156" pos:column="11">data<pos:position pos:line="156" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="17">"\t common name: WARNING couldn't obtain\n"<pos:position pos:line="156" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="157" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="159" pos:column="3">/* This function will try to verify the peer's certificate and return its
     status (trusted, invalid etc.). The value of status should be one or more
     of the gnutls_certificate_status_t enumerated elements bitwise or'd. To
     avoid denial of service attacks some default upper limits regarding the
     certificate key size and chain size are set. To override them use
     gnutls_certificate_set_verify_limits(). */</comment>

  <expr_stmt><expr><name pos:line="166" pos:column="3">rc<pos:position pos:line="166" pos:column="5"/></name> <operator pos:line="166" pos:column="6">=<pos:position pos:line="166" pos:column="7"/></operator> <call><name pos:line="166" pos:column="8">gnutls_certificate_verify_peers2<pos:position pos:line="166" pos:column="40"/></name><argument_list pos:line="166" pos:column="40">(<argument><expr><name pos:line="166" pos:column="41">session<pos:position pos:line="166" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="50">&amp;<pos:position pos:line="166" pos:column="55"/></operator><name pos:line="166" pos:column="51">verify_status<pos:position pos:line="166" pos:column="64"/></name></expr></argument>)<pos:position pos:line="166" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="66"/></expr_stmt>
  <if pos:line="167" pos:column="3">if <condition pos:line="167" pos:column="6">(<expr><name pos:line="167" pos:column="7">rc<pos:position pos:line="167" pos:column="9"/></name> <operator pos:line="167" pos:column="10">&lt;<pos:position pos:line="167" pos:column="14"/></operator> <literal type="number" pos:line="167" pos:column="12">0<pos:position pos:line="167" pos:column="13"/></literal></expr>)<pos:position pos:line="167" pos:column="14"/></condition><then pos:line="167" pos:column="14"> <block pos:line="167" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">failf<pos:position pos:line="168" pos:column="10"/></name><argument_list pos:line="168" pos:column="10">(<argument><expr><name pos:line="168" pos:column="11">data<pos:position pos:line="168" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="17">"server cert verify failed: %d"<pos:position pos:line="168" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="50">rc<pos:position pos:line="168" pos:column="52"/></name></expr></argument>)<pos:position pos:line="168" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="54"/></expr_stmt>
    <return pos:line="169" pos:column="5">return <expr><name pos:line="169" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="169" pos:column="35"/></name></expr>;<pos:position pos:line="169" pos:column="36"/></return>
  }<pos:position pos:line="170" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="172" pos:column="3">/* verify_status is a bitmask of gnutls_certificate_status bits */</comment>
  <if pos:line="173" pos:column="3">if<condition pos:line="173" pos:column="5">(<expr><name pos:line="173" pos:column="6">verify_status<pos:position pos:line="173" pos:column="19"/></name> <operator pos:line="173" pos:column="20">&amp;<pos:position pos:line="173" pos:column="25"/></operator> <name pos:line="173" pos:column="22">GNUTLS_CERT_INVALID<pos:position pos:line="173" pos:column="41"/></name></expr>)<pos:position pos:line="173" pos:column="42"/></condition><then pos:line="173" pos:column="42"> <block pos:line="173" pos:column="43">{
    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name><name pos:line="174" pos:column="9">data<pos:position pos:line="174" pos:column="13"/></name><operator pos:line="174" pos:column="13">-&gt;<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="15">set<pos:position pos:line="174" pos:column="18"/></name><operator pos:line="174" pos:column="18">.<pos:position pos:line="174" pos:column="19"/></operator><name pos:line="174" pos:column="19">ssl<pos:position pos:line="174" pos:column="22"/></name><operator pos:line="174" pos:column="22">.<pos:position pos:line="174" pos:column="23"/></operator><name pos:line="174" pos:column="23">verifypeer<pos:position pos:line="174" pos:column="33"/></name></name></expr>)<pos:position pos:line="174" pos:column="34"/></condition><then pos:line="174" pos:column="34"> <block pos:line="174" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="175" pos:column="7">failf<pos:position pos:line="175" pos:column="12"/></name><argument_list pos:line="175" pos:column="12">(<argument><expr><name pos:line="175" pos:column="13">data<pos:position pos:line="175" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="19">"server certificate verification failed. CAfile: %s"<pos:position pos:line="175" pos:column="71"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="176" pos:column="13">data<pos:position pos:line="176" pos:column="17"/></name><operator pos:line="176" pos:column="17">-&gt;<pos:position pos:line="176" pos:column="22"/></operator><name pos:line="176" pos:column="19">set<pos:position pos:line="176" pos:column="22"/></name><operator pos:line="176" pos:column="22">.<pos:position pos:line="176" pos:column="23"/></operator><name pos:line="176" pos:column="23">ssl<pos:position pos:line="176" pos:column="26"/></name><operator pos:line="176" pos:column="26">.<pos:position pos:line="176" pos:column="27"/></operator><name pos:line="176" pos:column="27">CAfile<pos:position pos:line="176" pos:column="33"/></name></name></expr>?<pos:position pos:line="176" pos:column="34"/></condition><then><expr><name><name pos:line="176" pos:column="34">data<pos:position pos:line="176" pos:column="38"/></name><operator pos:line="176" pos:column="38">-&gt;<pos:position pos:line="176" pos:column="43"/></operator><name pos:line="176" pos:column="40">set<pos:position pos:line="176" pos:column="43"/></name><operator pos:line="176" pos:column="43">.<pos:position pos:line="176" pos:column="44"/></operator><name pos:line="176" pos:column="44">ssl<pos:position pos:line="176" pos:column="47"/></name><operator pos:line="176" pos:column="47">.<pos:position pos:line="176" pos:column="48"/></operator><name pos:line="176" pos:column="48">CAfile<pos:position pos:line="176" pos:column="54"/></name></name></expr></then><else pos:line="176" pos:column="54">:<expr><literal type="string" pos:line="176" pos:column="55">"none"<pos:position pos:line="176" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="176" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="63"/></expr_stmt>
      <return pos:line="177" pos:column="7">return <expr><name pos:line="177" pos:column="14">CURLE_SSL_CACERT<pos:position pos:line="177" pos:column="30"/></name></expr>;<pos:position pos:line="177" pos:column="31"/></return>
    }<pos:position pos:line="178" pos:column="6"/></block></then>
    <else pos:line="179" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="7">infof<pos:position pos:line="180" pos:column="12"/></name><argument_list pos:line="180" pos:column="12">(<argument><expr><name pos:line="180" pos:column="13">data<pos:position pos:line="180" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="19">"\t server certificate verification FAILED\n"<pos:position pos:line="180" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="66"/></expr_stmt></block></else></if>
  }<pos:position pos:line="181" pos:column="4"/></block></then>
  <else pos:line="182" pos:column="3">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="7">infof<pos:position pos:line="183" pos:column="12"/></name><argument_list pos:line="183" pos:column="12">(<argument><expr><name pos:line="183" pos:column="13">data<pos:position pos:line="183" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="19">"\t server certificate verification OK\n"<pos:position pos:line="183" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="62"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="185" pos:column="3">/* initialize an X.509 certificate structure. */</comment>
  <expr_stmt><expr><call><name pos:line="186" pos:column="3">gnutls_x509_crt_init<pos:position pos:line="186" pos:column="23"/></name><argument_list pos:line="186" pos:column="23">(<argument><expr><operator pos:line="186" pos:column="24">&amp;<pos:position pos:line="186" pos:column="29"/></operator><name pos:line="186" pos:column="25">x509_cert<pos:position pos:line="186" pos:column="34"/></name></expr></argument>)<pos:position pos:line="186" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="36"/></expr_stmt>

  <comment type="block" pos:line="188" pos:column="3">/* convert the given DER or PEM encoded Certificate to the native
     gnutls_x509_crt_t format */</comment>
  <expr_stmt><expr><call><name pos:line="190" pos:column="3">gnutls_x509_crt_import<pos:position pos:line="190" pos:column="25"/></name><argument_list pos:line="190" pos:column="25">(<argument><expr><name pos:line="190" pos:column="26">x509_cert<pos:position pos:line="190" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="37">chainp<pos:position pos:line="190" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="45">GNUTLS_X509_FMT_DER<pos:position pos:line="190" pos:column="64"/></name></expr></argument>)<pos:position pos:line="190" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><name pos:line="192" pos:column="3">size<pos:position pos:line="192" pos:column="7"/></name><operator pos:line="192" pos:column="7">=<pos:position pos:line="192" pos:column="8"/></operator><sizeof pos:line="192" pos:column="8">sizeof<argument_list pos:line="192" pos:column="14">(<argument><expr><name pos:line="192" pos:column="15">certbuf<pos:position pos:line="192" pos:column="22"/></name></expr></argument>)<pos:position pos:line="192" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="192" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="193" pos:column="3">rc<pos:position pos:line="193" pos:column="5"/></name> <operator pos:line="193" pos:column="6">=<pos:position pos:line="193" pos:column="7"/></operator> <call><name pos:line="193" pos:column="8">gnutls_x509_crt_get_dn_by_oid<pos:position pos:line="193" pos:column="37"/></name><argument_list pos:line="193" pos:column="37">(<argument><expr><name pos:line="193" pos:column="38">x509_cert<pos:position pos:line="193" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="49">GNUTLS_OID_X520_COMMON_NAME<pos:position pos:line="193" pos:column="76"/></name></expr></argument>,
                                     <argument><expr><literal type="number" pos:line="194" pos:column="38">0<pos:position pos:line="194" pos:column="39"/></literal></expr></argument>, <comment type="block" pos:line="194" pos:column="41">/* the first and only one */</comment>
                                     <argument><expr><name pos:line="195" pos:column="38">FALSE<pos:position pos:line="195" pos:column="43"/></name></expr></argument>,
                                     <argument><expr><name pos:line="196" pos:column="38">certbuf<pos:position pos:line="196" pos:column="45"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="197" pos:column="38">&amp;<pos:position pos:line="197" pos:column="43"/></operator><name pos:line="197" pos:column="39">size<pos:position pos:line="197" pos:column="43"/></name></expr></argument>)<pos:position pos:line="197" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="45"/></expr_stmt>
  <if pos:line="198" pos:column="3">if<condition pos:line="198" pos:column="5">(<expr><name pos:line="198" pos:column="6">rc<pos:position pos:line="198" pos:column="8"/></name></expr>)<pos:position pos:line="198" pos:column="9"/></condition><then pos:line="198" pos:column="9"> <block pos:line="198" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">infof<pos:position pos:line="199" pos:column="10"/></name><argument_list pos:line="199" pos:column="10">(<argument><expr><name pos:line="199" pos:column="11">data<pos:position pos:line="199" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="17">"error fetching CN from cert:%s\n"<pos:position pos:line="199" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="200" pos:column="11">gnutls_strerror<pos:position pos:line="200" pos:column="26"/></name><argument_list pos:line="200" pos:column="26">(<argument><expr><name pos:line="200" pos:column="27">rc<pos:position pos:line="200" pos:column="29"/></name></expr></argument>)<pos:position pos:line="200" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="200" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="201" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="203" pos:column="3">/* This function will check if the given certificate's subject matches the
     given hostname. This is a basic implementation of the matching described
     in RFC2818 (HTTPS), which takes into account wildcards, and the subject
     alternative name PKIX extension. Returns non zero on success, and zero on
     failure. */</comment>
  <expr_stmt><expr><name pos:line="208" pos:column="3">rc<pos:position pos:line="208" pos:column="5"/></name> <operator pos:line="208" pos:column="6">=<pos:position pos:line="208" pos:column="7"/></operator> <call><name pos:line="208" pos:column="8">gnutls_x509_crt_check_hostname<pos:position pos:line="208" pos:column="38"/></name><argument_list pos:line="208" pos:column="38">(<argument><expr><name pos:line="208" pos:column="39">x509_cert<pos:position pos:line="208" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="50">conn<pos:position pos:line="208" pos:column="54"/></name><operator pos:line="208" pos:column="54">-&gt;<pos:position pos:line="208" pos:column="59"/></operator><name pos:line="208" pos:column="56">host<pos:position pos:line="208" pos:column="60"/></name><operator pos:line="208" pos:column="60">.<pos:position pos:line="208" pos:column="61"/></operator><name pos:line="208" pos:column="61">name<pos:position pos:line="208" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="67"/></expr_stmt>

  <if pos:line="210" pos:column="3">if<condition pos:line="210" pos:column="5">(<expr><operator pos:line="210" pos:column="6">!<pos:position pos:line="210" pos:column="7"/></operator><name pos:line="210" pos:column="7">rc<pos:position pos:line="210" pos:column="9"/></name></expr>)<pos:position pos:line="210" pos:column="10"/></condition><then pos:line="210" pos:column="10"> <block pos:line="210" pos:column="11">{
    <if pos:line="211" pos:column="5">if <condition pos:line="211" pos:column="8">(<expr><name><name pos:line="211" pos:column="9">data<pos:position pos:line="211" pos:column="13"/></name><operator pos:line="211" pos:column="13">-&gt;<pos:position pos:line="211" pos:column="18"/></operator><name pos:line="211" pos:column="15">set<pos:position pos:line="211" pos:column="18"/></name><operator pos:line="211" pos:column="18">.<pos:position pos:line="211" pos:column="19"/></operator><name pos:line="211" pos:column="19">ssl<pos:position pos:line="211" pos:column="22"/></name><operator pos:line="211" pos:column="22">.<pos:position pos:line="211" pos:column="23"/></operator><name pos:line="211" pos:column="23">verifyhost<pos:position pos:line="211" pos:column="33"/></name></name> <operator pos:line="211" pos:column="34">&gt;<pos:position pos:line="211" pos:column="38"/></operator> <literal type="number" pos:line="211" pos:column="36">1<pos:position pos:line="211" pos:column="37"/></literal></expr>)<pos:position pos:line="211" pos:column="38"/></condition><then pos:line="211" pos:column="38"> <block pos:line="211" pos:column="39">{
      <expr_stmt><expr><call><name pos:line="212" pos:column="7">failf<pos:position pos:line="212" pos:column="12"/></name><argument_list pos:line="212" pos:column="12">(<argument><expr><name pos:line="212" pos:column="13">data<pos:position pos:line="212" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="19">"SSL: certificate subject name (%s) does not match "<pos:position pos:line="212" pos:column="71"/></literal>
            <literal type="string" pos:line="213" pos:column="13">"target host name '%s'"<pos:position pos:line="213" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="38">certbuf<pos:position pos:line="213" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="47">conn<pos:position pos:line="213" pos:column="51"/></name><operator pos:line="213" pos:column="51">-&gt;<pos:position pos:line="213" pos:column="56"/></operator><name pos:line="213" pos:column="53">host<pos:position pos:line="213" pos:column="57"/></name><operator pos:line="213" pos:column="57">.<pos:position pos:line="213" pos:column="58"/></operator><name pos:line="213" pos:column="58">dispname<pos:position pos:line="213" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="214" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="214" pos:column="29"/></name><argument_list pos:line="214" pos:column="29">(<argument><expr><name pos:line="214" pos:column="30">x509_cert<pos:position pos:line="214" pos:column="39"/></name></expr></argument>)<pos:position pos:line="214" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="41"/></expr_stmt>
      <return pos:line="215" pos:column="7">return <expr><name pos:line="215" pos:column="14">CURLE_SSL_PEER_CERTIFICATE<pos:position pos:line="215" pos:column="40"/></name></expr>;<pos:position pos:line="215" pos:column="41"/></return>
    }<pos:position pos:line="216" pos:column="6"/></block></then>
    <else pos:line="217" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="7">infof<pos:position pos:line="218" pos:column="12"/></name><argument_list pos:line="218" pos:column="12">(<argument><expr><name pos:line="218" pos:column="13">data<pos:position pos:line="218" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="19">"\t common name: %s (does not match '%s')\n"<pos:position pos:line="218" pos:column="63"/></literal></expr></argument>,
            <argument><expr><name pos:line="219" pos:column="13">certbuf<pos:position pos:line="219" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="22">conn<pos:position pos:line="219" pos:column="26"/></name><operator pos:line="219" pos:column="26">-&gt;<pos:position pos:line="219" pos:column="31"/></operator><name pos:line="219" pos:column="28">host<pos:position pos:line="219" pos:column="32"/></name><operator pos:line="219" pos:column="32">.<pos:position pos:line="219" pos:column="33"/></operator><name pos:line="219" pos:column="33">dispname<pos:position pos:line="219" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="43"/></expr_stmt></block></else></if>
  }<pos:position pos:line="220" pos:column="4"/></block></then>
  <else pos:line="221" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="5">infof<pos:position pos:line="222" pos:column="10"/></name><argument_list pos:line="222" pos:column="10">(<argument><expr><name pos:line="222" pos:column="11">data<pos:position pos:line="222" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="17">"\t common name: %s (matched)\n"<pos:position pos:line="222" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="222" pos:column="51">certbuf<pos:position pos:line="222" pos:column="58"/></name></expr></argument>)<pos:position pos:line="222" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="60"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="224" pos:column="3">/* Show:

  - ciphers used
  - subject
  - start date
  - expire date
  - common name
  - issuer

  */</comment>

  <comment type="block" pos:line="235" pos:column="3">/* public key algorithm's parameters */</comment>
  <expr_stmt><expr><name pos:line="236" pos:column="3">algo<pos:position pos:line="236" pos:column="7"/></name> <operator pos:line="236" pos:column="8">=<pos:position pos:line="236" pos:column="9"/></operator> <call><name pos:line="236" pos:column="10">gnutls_x509_crt_get_pk_algorithm<pos:position pos:line="236" pos:column="42"/></name><argument_list pos:line="236" pos:column="42">(<argument><expr><name pos:line="236" pos:column="43">x509_cert<pos:position pos:line="236" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="236" pos:column="54">&amp;<pos:position pos:line="236" pos:column="59"/></operator><name pos:line="236" pos:column="55">bits<pos:position pos:line="236" pos:column="59"/></name></expr></argument>)<pos:position pos:line="236" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="237" pos:column="3">infof<pos:position pos:line="237" pos:column="8"/></name><argument_list pos:line="237" pos:column="8">(<argument><expr><name pos:line="237" pos:column="9">data<pos:position pos:line="237" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="15">"\t certificate public key: %s\n"<pos:position pos:line="237" pos:column="48"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="238" pos:column="9">gnutls_pk_algorithm_get_name<pos:position pos:line="238" pos:column="37"/></name><argument_list pos:line="238" pos:column="37">(<argument><expr><name pos:line="238" pos:column="38">algo<pos:position pos:line="238" pos:column="42"/></name></expr></argument>)<pos:position pos:line="238" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="238" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="240" pos:column="3">/* version of the X.509 certificate. */</comment>
  <expr_stmt><expr><call><name pos:line="241" pos:column="3">infof<pos:position pos:line="241" pos:column="8"/></name><argument_list pos:line="241" pos:column="8">(<argument><expr><name pos:line="241" pos:column="9">data<pos:position pos:line="241" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="15">"\t certificate version: #%d\n"<pos:position pos:line="241" pos:column="46"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="242" pos:column="9">gnutls_x509_crt_get_version<pos:position pos:line="242" pos:column="36"/></name><argument_list pos:line="242" pos:column="36">(<argument><expr><name pos:line="242" pos:column="37">x509_cert<pos:position pos:line="242" pos:column="46"/></name></expr></argument>)<pos:position pos:line="242" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="242" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="49"/></expr_stmt>


  <expr_stmt><expr><name pos:line="245" pos:column="3">size<pos:position pos:line="245" pos:column="7"/></name> <operator pos:line="245" pos:column="8">=<pos:position pos:line="245" pos:column="9"/></operator> <sizeof pos:line="245" pos:column="10">sizeof<argument_list pos:line="245" pos:column="16">(<argument><expr><name pos:line="245" pos:column="17">certbuf<pos:position pos:line="245" pos:column="24"/></name></expr></argument>)<pos:position pos:line="245" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="245" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="246" pos:column="3">gnutls_x509_crt_get_dn<pos:position pos:line="246" pos:column="25"/></name><argument_list pos:line="246" pos:column="25">(<argument><expr><name pos:line="246" pos:column="26">x509_cert<pos:position pos:line="246" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="37">certbuf<pos:position pos:line="246" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="46">&amp;<pos:position pos:line="246" pos:column="51"/></operator><name pos:line="246" pos:column="47">size<pos:position pos:line="246" pos:column="51"/></name></expr></argument>)<pos:position pos:line="246" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="247" pos:column="3">infof<pos:position pos:line="247" pos:column="8"/></name><argument_list pos:line="247" pos:column="8">(<argument><expr><name pos:line="247" pos:column="9">data<pos:position pos:line="247" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="15">"\t subject: %s\n"<pos:position pos:line="247" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="247" pos:column="35">certbuf<pos:position pos:line="247" pos:column="42"/></name></expr></argument>)<pos:position pos:line="247" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="249" pos:column="3">clock<pos:position pos:line="249" pos:column="8"/></name> <operator pos:line="249" pos:column="9">=<pos:position pos:line="249" pos:column="10"/></operator> <call><name pos:line="249" pos:column="11">gnutls_x509_crt_get_activation_time<pos:position pos:line="249" pos:column="46"/></name><argument_list pos:line="249" pos:column="46">(<argument><expr><name pos:line="249" pos:column="47">x509_cert<pos:position pos:line="249" pos:column="56"/></name></expr></argument>)<pos:position pos:line="249" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="250" pos:column="3">showtime<pos:position pos:line="250" pos:column="11"/></name><argument_list pos:line="250" pos:column="11">(<argument><expr><name pos:line="250" pos:column="12">data<pos:position pos:line="250" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="18">"start date"<pos:position pos:line="250" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="32">clock<pos:position pos:line="250" pos:column="37"/></name></expr></argument>)<pos:position pos:line="250" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="252" pos:column="3">clock<pos:position pos:line="252" pos:column="8"/></name> <operator pos:line="252" pos:column="9">=<pos:position pos:line="252" pos:column="10"/></operator> <call><name pos:line="252" pos:column="11">gnutls_x509_crt_get_expiration_time<pos:position pos:line="252" pos:column="46"/></name><argument_list pos:line="252" pos:column="46">(<argument><expr><name pos:line="252" pos:column="47">x509_cert<pos:position pos:line="252" pos:column="56"/></name></expr></argument>)<pos:position pos:line="252" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="253" pos:column="3">showtime<pos:position pos:line="253" pos:column="11"/></name><argument_list pos:line="253" pos:column="11">(<argument><expr><name pos:line="253" pos:column="12">data<pos:position pos:line="253" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="18">"expire date"<pos:position pos:line="253" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="33">clock<pos:position pos:line="253" pos:column="38"/></name></expr></argument>)<pos:position pos:line="253" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="255" pos:column="3">size<pos:position pos:line="255" pos:column="7"/></name> <operator pos:line="255" pos:column="8">=<pos:position pos:line="255" pos:column="9"/></operator> <sizeof pos:line="255" pos:column="10">sizeof<argument_list pos:line="255" pos:column="16">(<argument><expr><name pos:line="255" pos:column="17">certbuf<pos:position pos:line="255" pos:column="24"/></name></expr></argument>)<pos:position pos:line="255" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="255" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="256" pos:column="3">gnutls_x509_crt_get_issuer_dn<pos:position pos:line="256" pos:column="32"/></name><argument_list pos:line="256" pos:column="32">(<argument><expr><name pos:line="256" pos:column="33">x509_cert<pos:position pos:line="256" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="44">certbuf<pos:position pos:line="256" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="256" pos:column="53">&amp;<pos:position pos:line="256" pos:column="58"/></operator><name pos:line="256" pos:column="54">size<pos:position pos:line="256" pos:column="58"/></name></expr></argument>)<pos:position pos:line="256" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="257" pos:column="3">infof<pos:position pos:line="257" pos:column="8"/></name><argument_list pos:line="257" pos:column="8">(<argument><expr><name pos:line="257" pos:column="9">data<pos:position pos:line="257" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="15">"\t issuer: %s\n"<pos:position pos:line="257" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="257" pos:column="34">certbuf<pos:position pos:line="257" pos:column="41"/></name></expr></argument>)<pos:position pos:line="257" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="259" pos:column="3">gnutls_x509_crt_deinit<pos:position pos:line="259" pos:column="25"/></name><argument_list pos:line="259" pos:column="25">(<argument><expr><name pos:line="259" pos:column="26">x509_cert<pos:position pos:line="259" pos:column="35"/></name></expr></argument>)<pos:position pos:line="259" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="261" pos:column="3">/* compression algorithm (if any) */</comment>
  <expr_stmt><expr><name pos:line="262" pos:column="3">ptr<pos:position pos:line="262" pos:column="6"/></name> <operator pos:line="262" pos:column="7">=<pos:position pos:line="262" pos:column="8"/></operator> <call><name pos:line="262" pos:column="9">gnutls_compression_get_name<pos:position pos:line="262" pos:column="36"/></name><argument_list pos:line="262" pos:column="36">(<argument><expr><call><name pos:line="262" pos:column="37">gnutls_compression_get<pos:position pos:line="262" pos:column="59"/></name><argument_list pos:line="262" pos:column="59">(<argument><expr><name pos:line="262" pos:column="60">session<pos:position pos:line="262" pos:column="67"/></name></expr></argument>)<pos:position pos:line="262" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="262" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="70"/></expr_stmt>
  <comment type="block" pos:line="263" pos:column="3">/* the *_get_name() says "NULL" if GNUTLS_COMP_NULL is returned */</comment>
  <expr_stmt><expr><call><name pos:line="264" pos:column="3">infof<pos:position pos:line="264" pos:column="8"/></name><argument_list pos:line="264" pos:column="8">(<argument><expr><name pos:line="264" pos:column="9">data<pos:position pos:line="264" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="15">"\t compression: %s\n"<pos:position pos:line="264" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="264" pos:column="39">ptr<pos:position pos:line="264" pos:column="42"/></name></expr></argument>)<pos:position pos:line="264" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="266" pos:column="3">/* the name of the cipher used. ie 3DES. */</comment>
  <expr_stmt><expr><name pos:line="267" pos:column="3">ptr<pos:position pos:line="267" pos:column="6"/></name> <operator pos:line="267" pos:column="7">=<pos:position pos:line="267" pos:column="8"/></operator> <call><name pos:line="267" pos:column="9">gnutls_cipher_get_name<pos:position pos:line="267" pos:column="31"/></name><argument_list pos:line="267" pos:column="31">(<argument><expr><call><name pos:line="267" pos:column="32">gnutls_cipher_get<pos:position pos:line="267" pos:column="49"/></name><argument_list pos:line="267" pos:column="49">(<argument><expr><name pos:line="267" pos:column="50">session<pos:position pos:line="267" pos:column="57"/></name></expr></argument>)<pos:position pos:line="267" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="268" pos:column="3">infof<pos:position pos:line="268" pos:column="8"/></name><argument_list pos:line="268" pos:column="8">(<argument><expr><name pos:line="268" pos:column="9">data<pos:position pos:line="268" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="15">"\t cipher: %s\n"<pos:position pos:line="268" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="268" pos:column="34">ptr<pos:position pos:line="268" pos:column="37"/></name></expr></argument>)<pos:position pos:line="268" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="270" pos:column="3">/* the MAC algorithms name. ie SHA1 */</comment>
  <expr_stmt><expr><name pos:line="271" pos:column="3">ptr<pos:position pos:line="271" pos:column="6"/></name> <operator pos:line="271" pos:column="7">=<pos:position pos:line="271" pos:column="8"/></operator> <call><name pos:line="271" pos:column="9">gnutls_mac_get_name<pos:position pos:line="271" pos:column="28"/></name><argument_list pos:line="271" pos:column="28">(<argument><expr><call><name pos:line="271" pos:column="29">gnutls_mac_get<pos:position pos:line="271" pos:column="43"/></name><argument_list pos:line="271" pos:column="43">(<argument><expr><name pos:line="271" pos:column="44">session<pos:position pos:line="271" pos:column="51"/></name></expr></argument>)<pos:position pos:line="271" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="271" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="272" pos:column="3">infof<pos:position pos:line="272" pos:column="8"/></name><argument_list pos:line="272" pos:column="8">(<argument><expr><name pos:line="272" pos:column="9">data<pos:position pos:line="272" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="15">"\t MAC: %s\n"<pos:position pos:line="272" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="31">ptr<pos:position pos:line="272" pos:column="34"/></name></expr></argument>)<pos:position pos:line="272" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="36"/></expr_stmt>

  <if pos:line="274" pos:column="3">if<condition pos:line="274" pos:column="5">(<expr><operator pos:line="274" pos:column="6">!<pos:position pos:line="274" pos:column="7"/></operator><name pos:line="274" pos:column="7">ssl_sessionid<pos:position pos:line="274" pos:column="20"/></name></expr>)<pos:position pos:line="274" pos:column="21"/></condition><then pos:line="274" pos:column="21"> <block pos:line="274" pos:column="22">{
    <comment type="block" pos:line="275" pos:column="5">/* this session was not previously in the cache, add it now */</comment>

    <comment type="block" pos:line="277" pos:column="5">/* get the session ID data size */</comment>
    <expr_stmt><expr><call><name pos:line="278" pos:column="5">gnutls_session_get_data<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">(<argument><expr><name pos:line="278" pos:column="29">session<pos:position pos:line="278" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="38">NULL<pos:position pos:line="278" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="44">&amp;<pos:position pos:line="278" pos:column="49"/></operator><name pos:line="278" pos:column="45">ssl_idsize<pos:position pos:line="278" pos:column="55"/></name></expr></argument>)<pos:position pos:line="278" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="279" pos:column="5">ssl_sessionid<pos:position pos:line="279" pos:column="18"/></name> <operator pos:line="279" pos:column="19">=<pos:position pos:line="279" pos:column="20"/></operator> <call><name pos:line="279" pos:column="21">malloc<pos:position pos:line="279" pos:column="27"/></name><argument_list pos:line="279" pos:column="27">(<argument><expr><name pos:line="279" pos:column="28">ssl_idsize<pos:position pos:line="279" pos:column="38"/></name></expr></argument>)<pos:position pos:line="279" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="40"/></expr_stmt> <comment type="block" pos:line="279" pos:column="41">/* get a buffer for it */</comment>

    <if pos:line="281" pos:column="5">if<condition pos:line="281" pos:column="7">(<expr><name pos:line="281" pos:column="8">ssl_sessionid<pos:position pos:line="281" pos:column="21"/></name></expr>)<pos:position pos:line="281" pos:column="22"/></condition><then pos:line="281" pos:column="22"> <block pos:line="281" pos:column="23">{
      <comment type="block" pos:line="282" pos:column="7">/* extract session ID to the allocated buffer */</comment>
      <expr_stmt><expr><call><name pos:line="283" pos:column="7">gnutls_session_get_data<pos:position pos:line="283" pos:column="30"/></name><argument_list pos:line="283" pos:column="30">(<argument><expr><name pos:line="283" pos:column="31">session<pos:position pos:line="283" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="40">ssl_sessionid<pos:position pos:line="283" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="283" pos:column="55">&amp;<pos:position pos:line="283" pos:column="60"/></operator><name pos:line="283" pos:column="56">ssl_idsize<pos:position pos:line="283" pos:column="66"/></name></expr></argument>)<pos:position pos:line="283" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="68"/></expr_stmt>

      <comment type="block" pos:line="285" pos:column="7">/* store this session id */</comment>
      <return pos:line="286" pos:column="7">return <expr><call><name pos:line="286" pos:column="14">Curl_ssl_addsessionid<pos:position pos:line="286" pos:column="35"/></name><argument_list pos:line="286" pos:column="35">(<argument><expr><name pos:line="286" pos:column="36">conn<pos:position pos:line="286" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="42">ssl_sessionid<pos:position pos:line="286" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="57">ssl_idsize<pos:position pos:line="286" pos:column="67"/></name></expr></argument>)<pos:position pos:line="286" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="69"/></return>
    }<pos:position pos:line="287" pos:column="6"/></block></then></if>
  }<pos:position pos:line="288" pos:column="4"/></block></then></if>

  <return pos:line="290" pos:column="3">return <expr><name pos:line="290" pos:column="10">CURLE_OK<pos:position pos:line="290" pos:column="18"/></name></expr>;<pos:position pos:line="290" pos:column="19"/></return>
}<pos:position pos:line="291" pos:column="2"/></block></function></unit>

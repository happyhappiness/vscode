<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1278_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">curl_formget<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">curl_httppost<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">form<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">arg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="2" pos:column="18">curl_formget_callback<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">append<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_off_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">size<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FormData<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">data<pos:position pos:line="6" pos:column="24"/></name></decl>, <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="27">ptr<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">result<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">Curl_getformdata<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">data<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">form<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="55">size<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">result<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">int<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">result<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init><expr><name pos:line="12" pos:column="7">ptr<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">data<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">ptr<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></condition> <incr><expr><name pos:line="12" pos:column="24">ptr<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">ptr<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">next<pos:position pos:line="12" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="40"/></control> <block pos:line="12" pos:column="41">{
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name><name pos:line="13" pos:column="9">ptr<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">type<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">FORM_FILE<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">||<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="36">(<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="37">ptr<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">type<pos:position pos:line="13" pos:column="46"/></name></name> <operator pos:line="13" pos:column="47">==<pos:position pos:line="13" pos:column="49"/></operator> <name pos:line="13" pos:column="50">FORM_CALLBACK<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">)<pos:position pos:line="13" pos:column="64"/></operator></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65"> <block pos:line="13" pos:column="66">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">char<pos:position pos:line="14" pos:column="11"/></name></type> <name><name pos:line="14" pos:column="12">buffer<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><literal type="number" pos:line="14" pos:column="19">8192<pos:position pos:line="14" pos:column="23"/></literal></expr>]<pos:position pos:line="14" pos:column="24"/></index></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">size_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">nread<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="16" pos:column="7">struct<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">Form<pos:position pos:line="16" pos:column="18"/></name></name></type> <name pos:line="16" pos:column="19">temp<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="18" pos:column="7">Curl_FormInit<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="22">temp<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">ptr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>

      <do pos:line="20" pos:column="7">do <block pos:line="20" pos:column="10">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">nread<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">readfromfile<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="31">temp<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">buffer<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="45">sizeof<argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">buffer<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
        <if pos:line="22" pos:column="9">if<condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">nread<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">size_t<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">-<pos:position pos:line="22" pos:column="32"/></operator><literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">||<pos:position pos:line="22" pos:column="37"/></operator>
           <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">nread<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&gt;<pos:position pos:line="23" pos:column="23"/></operator> <sizeof pos:line="23" pos:column="21">sizeof<argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">buffer<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></sizeof><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">||<pos:position pos:line="23" pos:column="39"/></operator>
           <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">nread<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">!=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">append<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">arg<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">buffer<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">nread<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
          <if pos:line="25" pos:column="11">if<condition pos:line="25" pos:column="13">(<expr><name><name pos:line="25" pos:column="14">temp<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">fp<pos:position pos:line="25" pos:column="21"/></name></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">fclose<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name><name pos:line="26" pos:column="20">temp<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">fp<pos:position pos:line="26" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt></block></then></if>
          <expr_stmt><expr><call><name pos:line="27" pos:column="11">Curl_formclean<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="27">data<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
          <return pos:line="28" pos:column="11">return <expr><operator pos:line="28" pos:column="18">-<pos:position pos:line="28" pos:column="19"/></operator><literal type="number" pos:line="28" pos:column="19">1<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
      }<pos:position pos:line="30" pos:column="8"/></block> while<condition pos:line="30" pos:column="14">(<expr><name pos:line="30" pos:column="15">nread<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition>;<pos:position pos:line="30" pos:column="22"/></do>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name><name pos:line="33" pos:column="10">ptr<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">length<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">!=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">append<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">arg<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="37">ptr<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">line<pos:position pos:line="33" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="48">ptr<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">length<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="61"/></condition><then pos:line="33" pos:column="61"> <block pos:line="33" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">Curl_formclean<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">data<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">Curl_formclean<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">data<pos:position pos:line="39" pos:column="23"/></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><literal type="number" pos:line="40" pos:column="10">0<pos:position pos:line="40" pos:column="11"/></literal></expr>;<pos:position pos:line="40" pos:column="12"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

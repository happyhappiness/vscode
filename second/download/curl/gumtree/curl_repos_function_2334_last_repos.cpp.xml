<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2334_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_login_message<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">Curl_easy<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">data<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">valuep<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier><modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">outptr<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">size_t<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">outlen<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">vlen<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name pos:line="5" pos:column="17">strlen<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">valuep<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">vlen<pos:position pos:line="7" pos:column="11"/></name></expr>)<pos:position pos:line="7" pos:column="12"/></condition><then pos:line="7" pos:column="12"> <block pos:line="7" pos:column="13">{
    <comment type="block" pos:line="8" pos:column="5">/* Calculate an empty reply */</comment>
    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">outptr<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">strdup<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><literal type="string" pos:line="9" pos:column="22">"="<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">outptr<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
      <expr_stmt><expr><operator pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">outlen<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">size_t<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">CURLE_OK<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">outlen<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Base64 encode the value */</comment>
  <return pos:line="20" pos:column="3">return <expr><call><name pos:line="20" pos:column="10">Curl_base64_encode<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">data<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">valuep<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">vlen<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">outptr<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">outlen<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

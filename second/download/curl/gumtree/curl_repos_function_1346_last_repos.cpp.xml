<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1346_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">curl_thread_create_thunk<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">arg<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">curl_actual_call<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type> <name pos:line="3" pos:column="29">ac<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><name pos:line="3" pos:column="34">arg<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <function_decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> (<modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><name pos:line="4" pos:column="18">func<pos:position pos:line="4" pos:column="22"/></name>)<parameter_list pos:line="4" pos:column="23">(<parameter><decl><type><name pos:line="4" pos:column="24">void<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type></decl></parameter>)<pos:position pos:line="4" pos:column="31"/></parameter_list> <init pos:line="4" pos:column="32">= <expr><name><name pos:line="4" pos:column="34">ac<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">func<pos:position pos:line="4" pos:column="42"/></name></name></expr></init>;<pos:position pos:line="4" pos:column="43"/></function_decl>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">void<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">real_arg<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name><name pos:line="5" pos:column="20">ac<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">arg<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">free<pos:position pos:line="7" pos:column="7"/></name><argument_list pos:line="7" pos:column="7">(<argument><expr><name pos:line="7" pos:column="8">ac<pos:position pos:line="7" pos:column="10"/></name></expr></argument>)<pos:position pos:line="7" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="12"/></expr_stmt>

  <expr_stmt><expr><call pos:line="9" pos:column="3">(<modifier pos:line="9" pos:column="4">*<pos:position pos:line="9" pos:column="5"/></modifier><name pos:line="9" pos:column="5">func<pos:position pos:line="9" pos:column="9"/></name>)<argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">real_arg<pos:position pos:line="9" pos:column="19"/></name></expr></argument>)<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>

  <return pos:line="11" pos:column="3">return <expr><literal type="number" pos:line="11" pos:column="10">0<pos:position pos:line="11" pos:column="11"/></literal></expr>;<pos:position pos:line="11" pos:column="12"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2647_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">nss_init<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_easy<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">data<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">cert_dir<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">struct_stat<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">initialized<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_OK<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* list of all CRL items we need to destroy in Curl_nss_cleanup() */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">Curl_llist_init<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><operator pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="20">nss_crl_list<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">nss_destroy_crl_item<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* First we check if $SSL_DIR points to a valid dir */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">cert_dir<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">getenv<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"SSL_DIR"<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">cert_dir<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block pos:line="15" pos:column="16">{
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><call><name pos:line="16" pos:column="9">stat<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">cert_dir<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="25">st<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call> <operator pos:line="16" pos:column="29">!=<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">||<pos:position pos:line="16" pos:column="37"/></operator>
        <operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">!<pos:position pos:line="17" pos:column="11"/></operator><call><name pos:line="17" pos:column="11">S_ISDIR<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">st<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">st_mode<pos:position pos:line="17" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32"> <block pos:line="17" pos:column="33">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">cert_dir<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Now we check if the default location is a valid dir */</comment>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">cert_dir<pos:position pos:line="23" pos:column="15"/></name></expr>)<pos:position pos:line="23" pos:column="16"/></condition><then pos:line="23" pos:column="16"> <block pos:line="23" pos:column="17">{
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><call><name pos:line="24" pos:column="9">stat<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">SSL_DIR<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">st<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator> <operator pos:line="24" pos:column="34">&amp;&amp;<pos:position pos:line="24" pos:column="44"/></operator>
        <operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">S_ISDIR<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">st<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">st_mode<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <block pos:line="25" pos:column="32">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">cert_dir<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">char<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">SSL_DIR<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">nspr_io_identity<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">==<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">PR_INVALID_IO_LAYER<pos:position pos:line="30" pos:column="45"/></name></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46"> <block pos:line="30" pos:column="47">{
    <comment type="block" pos:line="31" pos:column="5">/* allocate an identity for our own NSPR I/O layer */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">nspr_io_identity<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">PR_GetUniqueIdentity<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><literal type="string" pos:line="32" pos:column="45">"libcurl"<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">nspr_io_identity<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">PR_INVALID_IO_LAYER<pos:position pos:line="33" pos:column="47"/></name></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48">
      <block type="pseudo"><return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* the default methods just call down to the lower I/O layer */</comment>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">memcpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><operator pos:line="37" pos:column="12">&amp;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="13">nspr_io_methods<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="30">PR_GetDefaultIOMethods<pos:position pos:line="37" pos:column="52"/></name><argument_list pos:line="37" pos:column="52">()<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="56">sizeof <name pos:line="37" pos:column="63">nspr_io_methods<pos:position pos:line="37" pos:column="78"/></name></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* override certain methods in the table by our wrappers */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">nspr_io_methods<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">recv<pos:position pos:line="40" pos:column="25"/></name></name>  <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">nspr_io_recv<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">nspr_io_methods<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">send<pos:position pos:line="41" pos:column="25"/></name></name>  <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">nspr_io_send<pos:position pos:line="41" pos:column="41"/></name></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">nspr_io_methods<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">.<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">close<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">nspr_io_close<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">result<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name pos:line="45" pos:column="12">nss_init_core<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">data<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">cert_dir<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">result<pos:position pos:line="46" pos:column="12"/></name></expr>)<pos:position pos:line="46" pos:column="13"/></condition><then pos:line="46" pos:column="13">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">result<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return></block></then></if>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">!<pos:position pos:line="49" pos:column="7"/></operator><call><name pos:line="49" pos:column="7">any_cipher_enabled<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">()<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="5">NSS_SetDomesticPolicy<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">()<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="52" pos:column="3">initialized<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">1<pos:position pos:line="52" pos:column="18"/></literal></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>

  <return pos:line="54" pos:column="3">return <expr><name pos:line="54" pos:column="10">CURLE_OK<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_16149.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_param_part<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">OperationConfig<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">config<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">str<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">pdata<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ptype<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier><modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">pfilename<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier><modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">pencoder<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="44">struct<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">curl_slist<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier><modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">pheaders<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">str<pos:position pos:line="5" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">type<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">filename<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">encoder<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">endpos<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">tp<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">sep<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">type_major<pos:position pos:line="12" pos:column="18"/></name><index pos:line="12" pos:column="18">[<expr><literal type="number" pos:line="12" pos:column="19">128<pos:position pos:line="12" pos:column="22"/></literal></expr>]<pos:position pos:line="12" pos:column="23"/></index></name> <init pos:line="12" pos:column="24">= <expr><literal type="string" pos:line="12" pos:column="26">""<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name></type> <name><name pos:line="13" pos:column="8">type_minor<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><literal type="number" pos:line="13" pos:column="19">128<pos:position pos:line="13" pos:column="22"/></literal></expr>]<pos:position pos:line="13" pos:column="23"/></index></name> <init pos:line="13" pos:column="24">= <expr><literal type="string" pos:line="13" pos:column="26">""<pos:position pos:line="13" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">endct<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">curl_slist<pos:position pos:line="15" pos:column="20"/></name></name> <modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type><name pos:line="15" pos:column="22">headers<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><name pos:line="15" pos:column="32">NULL<pos:position pos:line="15" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">ptype<pos:position pos:line="17" pos:column="11"/></name></expr>)<pos:position pos:line="17" pos:column="12"/></condition><then pos:line="17" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">ptype<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt></block></then></if>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><name pos:line="19" pos:column="6">pfilename<pos:position pos:line="19" pos:column="15"/></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">pfilename<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name pos:line="21" pos:column="6">pheaders<pos:position pos:line="21" pos:column="14"/></name></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">pheaders<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">NULL<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt></block></then></if>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">pencoder<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition><then pos:line="23" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">pencoder<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt></block></then></if>
  <while pos:line="25" pos:column="3">while<condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">ISSPACE<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">p<pos:position pos:line="25" pos:column="19"/></name></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="21"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">++<pos:position pos:line="26" pos:column="8"/></operator></expr>;<pos:position pos:line="26" pos:column="9"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="27" pos:column="3">tp<pos:position pos:line="27" pos:column="5"/></name> <operator pos:line="27" pos:column="6">=<pos:position pos:line="27" pos:column="7"/></operator> <name pos:line="27" pos:column="8">p<pos:position pos:line="27" pos:column="9"/></name></expr>;<pos:position pos:line="27" pos:column="10"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="28" pos:column="3">*<pos:position pos:line="28" pos:column="4"/></operator><name pos:line="28" pos:column="4">pdata<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">get_param_word<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="28">p<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">endpos<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
  <comment type="block" pos:line="29" pos:column="3">/* If not quoted, strip trailing spaces. */</comment>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">*<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">pdata<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">==<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">tp<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19">
    <block type="pseudo"><while pos:line="31" pos:column="5">while<condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">endpos<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&gt;<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="20">*<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">pdata<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&amp;&amp;<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="30">ISSPACE<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name><name pos:line="31" pos:column="38">endpos<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><operator pos:line="31" pos:column="45">-<pos:position pos:line="31" pos:column="46"/></operator><literal type="number" pos:line="31" pos:column="46">1<pos:position pos:line="31" pos:column="47"/></literal></expr>]<pos:position pos:line="31" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="50"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">endpos<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">--<pos:position pos:line="32" pos:column="15"/></operator></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt></block></while></block></then></if>
  <expr_stmt><expr><name pos:line="33" pos:column="3">sep<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">p<pos:position pos:line="33" pos:column="11"/></name></expr>;<pos:position pos:line="33" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="34" pos:column="3">*<pos:position pos:line="34" pos:column="4"/></operator><name pos:line="34" pos:column="4">endpos<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="char" pos:line="34" pos:column="13">'\0'<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
  <while pos:line="35" pos:column="3">while<condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">sep<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">==<pos:position pos:line="35" pos:column="15"/></operator> <literal type="char" pos:line="35" pos:column="16">';'<pos:position pos:line="35" pos:column="19"/></literal></expr>)<pos:position pos:line="35" pos:column="20"/></condition> <block pos:line="35" pos:column="21">{
    <while pos:line="36" pos:column="5">while<condition pos:line="36" pos:column="10">(<expr><call><name pos:line="36" pos:column="11">ISSPACE<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><operator pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></operator><operator pos:line="36" pos:column="20">++<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">p<pos:position pos:line="36" pos:column="23"/></name></expr></argument>)<pos:position pos:line="36" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="25"/></condition>
      <block type="pseudo"><empty_stmt pos:line="37" pos:column="7">;<pos:position pos:line="37" pos:column="8"/></empty_stmt></block></while>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><operator pos:line="39" pos:column="8">!<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">endct<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">&amp;&amp;<pos:position pos:line="39" pos:column="25"/></operator> <call><name pos:line="39" pos:column="18">checkprefix<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><literal type="string" pos:line="39" pos:column="30">"type="<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">p<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <block pos:line="39" pos:column="43">{
      <for pos:line="40" pos:column="7">for<control pos:line="40" pos:column="10">(<init><expr><name pos:line="40" pos:column="11">p<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">+=<pos:position pos:line="40" pos:column="15"/></operator> <literal type="number" pos:line="40" pos:column="16">5<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></init> <condition><expr><call><name pos:line="40" pos:column="19">ISSPACE<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">*<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">p<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="31"/></condition> <incr><expr><name pos:line="40" pos:column="32">p<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">++<pos:position pos:line="40" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="36"/></control>
        <block type="pseudo"><empty_stmt pos:line="41" pos:column="9">;<pos:position pos:line="41" pos:column="10"/></empty_stmt></block></for>
      <comment type="block" pos:line="42" pos:column="7">/* set type pointer */</comment>
      <expr_stmt><expr><name pos:line="43" pos:column="7">type<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">p<pos:position pos:line="43" pos:column="15"/></name></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>

      <comment type="block" pos:line="45" pos:column="7">/* verify that this is a fine type specifier */</comment>
      <if pos:line="46" pos:column="7">if<condition pos:line="46" pos:column="9">(<expr><literal type="number" pos:line="46" pos:column="10">2<pos:position pos:line="46" pos:column="11"/></literal> <operator pos:line="46" pos:column="12">!=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">sscanf<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">type<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"%127[^/ ]/%127[^;, \n]"<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">type_major<pos:position pos:line="46" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="66">type_minor<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="78"/></condition><then pos:line="46" pos:column="78"> <block pos:line="46" pos:column="79">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">warnf<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name><name pos:line="47" pos:column="15">config<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">global<pos:position pos:line="47" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="31">"Illegally formatted content-type field!\n"<pos:position pos:line="47" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">curl_slist_free_all<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">headers<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></return> <comment type="block" pos:line="49" pos:column="20">/* illegal content-type syntax! */</comment>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="52" pos:column="7">/* now point beyond the content-type specifier */</comment>
      <expr_stmt><expr><name pos:line="53" pos:column="7">endpos<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">type<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">+<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">strlen<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">type_major<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call> <operator pos:line="53" pos:column="42">+<pos:position pos:line="53" pos:column="43"/></operator> <call><name pos:line="53" pos:column="44">strlen<pos:position pos:line="53" pos:column="50"/></name><argument_list pos:line="53" pos:column="50">(<argument><expr><name pos:line="53" pos:column="51">type_minor<pos:position pos:line="53" pos:column="61"/></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call> <operator pos:line="53" pos:column="63">+<pos:position pos:line="53" pos:column="64"/></operator> <literal type="number" pos:line="53" pos:column="65">1<pos:position pos:line="53" pos:column="66"/></literal></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
      <for pos:line="54" pos:column="7">for<control pos:line="54" pos:column="10">(<init><expr><name pos:line="54" pos:column="11">p<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">endpos<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></init> <condition><expr><call><name pos:line="54" pos:column="23">ISSPACE<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><operator pos:line="54" pos:column="31">*<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">p<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></condition> <incr><expr><name pos:line="54" pos:column="36">p<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">++<pos:position pos:line="54" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="40"/></control>
        <block type="pseudo"><empty_stmt pos:line="55" pos:column="9">;<pos:position pos:line="55" pos:column="10"/></empty_stmt></block></for>
      <while pos:line="56" pos:column="7">while<condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">p<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">&amp;&amp;<pos:position pos:line="56" pos:column="26"/></operator> <operator pos:line="56" pos:column="19">*<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">p<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">!=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="char" pos:line="56" pos:column="25">';'<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">&amp;&amp;<pos:position pos:line="56" pos:column="39"/></operator> <operator pos:line="56" pos:column="32">*<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">p<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">!=<pos:position pos:line="56" pos:column="37"/></operator> <literal type="char" pos:line="56" pos:column="38">','<pos:position pos:line="56" pos:column="41"/></literal></expr>)<pos:position pos:line="56" pos:column="42"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="9">p<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">++<pos:position pos:line="57" pos:column="12"/></operator></expr>;<pos:position pos:line="57" pos:column="13"/></expr_stmt></block></while>
      <expr_stmt><expr><name pos:line="58" pos:column="7">endct<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">p<pos:position pos:line="58" pos:column="16"/></name></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="59" pos:column="7">sep<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <operator pos:line="59" pos:column="13">*<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">p<pos:position pos:line="59" pos:column="15"/></name></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <elseif pos:line="61" pos:column="5">else <if pos:line="61" pos:column="10">if<condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">checkprefix<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><literal type="string" pos:line="61" pos:column="25">"filename="<pos:position pos:line="61" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">p<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="41"/></condition><then pos:line="61" pos:column="41"> <block pos:line="61" pos:column="42">{
      <if pos:line="62" pos:column="7">if<condition pos:line="62" pos:column="9">(<expr><name pos:line="62" pos:column="10">endct<pos:position pos:line="62" pos:column="15"/></name></expr>)<pos:position pos:line="62" pos:column="16"/></condition><then pos:line="62" pos:column="16"> <block pos:line="62" pos:column="17">{
        <expr_stmt><expr><operator pos:line="63" pos:column="9">*<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">endct<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <literal type="char" pos:line="63" pos:column="18">'\0'<pos:position pos:line="63" pos:column="22"/></literal></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">endct<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">NULL<pos:position pos:line="64" pos:column="21"/></name></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="65" pos:column="8"/></block></then></if>
      <for pos:line="66" pos:column="7">for<control pos:line="66" pos:column="10">(<init><expr><name pos:line="66" pos:column="11">p<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">+=<pos:position pos:line="66" pos:column="15"/></operator> <literal type="number" pos:line="66" pos:column="16">9<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></init> <condition><expr><call><name pos:line="66" pos:column="19">ISSPACE<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><operator pos:line="66" pos:column="27">*<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="28">p<pos:position pos:line="66" pos:column="29"/></name></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></condition> <incr><expr><name pos:line="66" pos:column="32">p<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">++<pos:position pos:line="66" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="36"/></control>
        <block type="pseudo"><empty_stmt pos:line="67" pos:column="9">;<pos:position pos:line="67" pos:column="10"/></empty_stmt></block></for>
      <expr_stmt><expr><name pos:line="68" pos:column="7">tp<pos:position pos:line="68" pos:column="9"/></name> <operator pos:line="68" pos:column="10">=<pos:position pos:line="68" pos:column="11"/></operator> <name pos:line="68" pos:column="12">p<pos:position pos:line="68" pos:column="13"/></name></expr>;<pos:position pos:line="68" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">filename<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">get_param_word<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><operator pos:line="69" pos:column="33">&amp;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="34">p<pos:position pos:line="69" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="37">&amp;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="38">endpos<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt>
      <comment type="block" pos:line="70" pos:column="7">/* If not quoted, strip trailing spaces. */</comment>
      <if pos:line="71" pos:column="7">if<condition pos:line="71" pos:column="9">(<expr><name pos:line="71" pos:column="10">filename<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">==<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">tp<pos:position pos:line="71" pos:column="24"/></name></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
        <block type="pseudo"><while pos:line="72" pos:column="9">while<condition pos:line="72" pos:column="14">(<expr><name pos:line="72" pos:column="15">endpos<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">&gt;<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="24">filename<pos:position pos:line="72" pos:column="32"/></name> <operator pos:line="72" pos:column="33">&amp;&amp;<pos:position pos:line="72" pos:column="43"/></operator> <call><name pos:line="72" pos:column="36">ISSPACE<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name><name pos:line="72" pos:column="44">endpos<pos:position pos:line="72" pos:column="50"/></name><index pos:line="72" pos:column="50">[<expr><operator pos:line="72" pos:column="51">-<pos:position pos:line="72" pos:column="52"/></operator><literal type="number" pos:line="72" pos:column="52">1<pos:position pos:line="72" pos:column="53"/></literal></expr>]<pos:position pos:line="72" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="56"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="11">endpos<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">--<pos:position pos:line="73" pos:column="19"/></operator></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt></block></while></block></then></if>
      <expr_stmt><expr><name pos:line="74" pos:column="7">sep<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <operator pos:line="74" pos:column="13">*<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">p<pos:position pos:line="74" pos:column="15"/></name></expr>;<pos:position pos:line="74" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="75" pos:column="7">*<pos:position pos:line="75" pos:column="8"/></operator><name pos:line="75" pos:column="8">endpos<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <literal type="char" pos:line="75" pos:column="17">'\0'<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="77" pos:column="5">else <if pos:line="77" pos:column="10">if<condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">checkprefix<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><literal type="string" pos:line="77" pos:column="25">"headers="<pos:position pos:line="77" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">p<pos:position pos:line="77" pos:column="38"/></name></expr></argument>)<pos:position pos:line="77" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="40"/></condition><then pos:line="77" pos:column="40"> <block pos:line="77" pos:column="41">{
      <if pos:line="78" pos:column="7">if<condition pos:line="78" pos:column="9">(<expr><name pos:line="78" pos:column="10">endct<pos:position pos:line="78" pos:column="15"/></name></expr>)<pos:position pos:line="78" pos:column="16"/></condition><then pos:line="78" pos:column="16"> <block pos:line="78" pos:column="17">{
        <expr_stmt><expr><operator pos:line="79" pos:column="9">*<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">endct<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <literal type="char" pos:line="79" pos:column="18">'\0'<pos:position pos:line="79" pos:column="22"/></literal></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">endct<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">=<pos:position pos:line="80" pos:column="16"/></operator> <name pos:line="80" pos:column="17">NULL<pos:position pos:line="80" pos:column="21"/></name></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="82" pos:column="7">p<pos:position pos:line="82" pos:column="8"/></name> <operator pos:line="82" pos:column="9">+=<pos:position pos:line="82" pos:column="11"/></operator> <literal type="number" pos:line="82" pos:column="12">8<pos:position pos:line="82" pos:column="13"/></literal></expr>;<pos:position pos:line="82" pos:column="14"/></expr_stmt>
      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><operator pos:line="83" pos:column="10">*<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">p<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">==<pos:position pos:line="83" pos:column="15"/></operator> <literal type="char" pos:line="83" pos:column="16">'@'<pos:position pos:line="83" pos:column="19"/></literal> <operator pos:line="83" pos:column="20">||<pos:position pos:line="83" pos:column="22"/></operator> <operator pos:line="83" pos:column="23">*<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">p<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">==<pos:position pos:line="83" pos:column="28"/></operator> <literal type="char" pos:line="83" pos:column="29">'&lt;'<pos:position pos:line="83" pos:column="35"/></literal></expr>)<pos:position pos:line="83" pos:column="33"/></condition><then pos:line="83" pos:column="33"> <block pos:line="83" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">char<pos:position pos:line="84" pos:column="13"/></name> <modifier pos:line="84" pos:column="14">*<pos:position pos:line="84" pos:column="15"/></modifier></type><name pos:line="84" pos:column="15">hdrfile<pos:position pos:line="84" pos:column="22"/></name></decl>;<pos:position pos:line="84" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">FILE<pos:position pos:line="85" pos:column="13"/></name> <modifier pos:line="85" pos:column="14">*<pos:position pos:line="85" pos:column="15"/></modifier></type><name pos:line="85" pos:column="15">fp<pos:position pos:line="85" pos:column="17"/></name></decl>;<pos:position pos:line="85" pos:column="18"/></decl_stmt>
        <comment type="block" pos:line="86" pos:column="9">/* Read headers from a file. */</comment>

        <do pos:line="88" pos:column="9">do <block pos:line="88" pos:column="12">{
          <expr_stmt><expr><name pos:line="89" pos:column="11">p<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">++<pos:position pos:line="89" pos:column="14"/></operator></expr>;<pos:position pos:line="89" pos:column="15"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block> while<condition pos:line="90" pos:column="16">(<expr><call><name pos:line="90" pos:column="17">ISSPACE<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><operator pos:line="90" pos:column="25">*<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="26">p<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="29"/></condition>;<pos:position pos:line="90" pos:column="30"/></do>
        <expr_stmt><expr><name pos:line="91" pos:column="9">tp<pos:position pos:line="91" pos:column="11"/></name> <operator pos:line="91" pos:column="12">=<pos:position pos:line="91" pos:column="13"/></operator> <name pos:line="91" pos:column="14">p<pos:position pos:line="91" pos:column="15"/></name></expr>;<pos:position pos:line="91" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="92" pos:column="9">hdrfile<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <call><name pos:line="92" pos:column="19">get_param_word<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><operator pos:line="92" pos:column="34">&amp;<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="35">p<pos:position pos:line="92" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="38">&amp;<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="39">endpos<pos:position pos:line="92" pos:column="45"/></name></expr></argument>)<pos:position pos:line="92" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="47"/></expr_stmt>
        <comment type="block" pos:line="93" pos:column="9">/* If not quoted, strip trailing spaces. */</comment>
        <if pos:line="94" pos:column="9">if<condition pos:line="94" pos:column="11">(<expr><name pos:line="94" pos:column="12">hdrfile<pos:position pos:line="94" pos:column="19"/></name> <operator pos:line="94" pos:column="20">==<pos:position pos:line="94" pos:column="22"/></operator> <name pos:line="94" pos:column="23">tp<pos:position pos:line="94" pos:column="25"/></name></expr>)<pos:position pos:line="94" pos:column="26"/></condition><then pos:line="94" pos:column="26">
          <block type="pseudo"><while pos:line="95" pos:column="11">while<condition pos:line="95" pos:column="16">(<expr><name pos:line="95" pos:column="17">endpos<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">&gt;<pos:position pos:line="95" pos:column="28"/></operator> <name pos:line="95" pos:column="26">hdrfile<pos:position pos:line="95" pos:column="33"/></name> <operator pos:line="95" pos:column="34">&amp;&amp;<pos:position pos:line="95" pos:column="44"/></operator> <call><name pos:line="95" pos:column="37">ISSPACE<pos:position pos:line="95" pos:column="44"/></name><argument_list pos:line="95" pos:column="44">(<argument><expr><name><name pos:line="95" pos:column="45">endpos<pos:position pos:line="95" pos:column="51"/></name><index pos:line="95" pos:column="51">[<expr><operator pos:line="95" pos:column="52">-<pos:position pos:line="95" pos:column="53"/></operator><literal type="number" pos:line="95" pos:column="53">1<pos:position pos:line="95" pos:column="54"/></literal></expr>]<pos:position pos:line="95" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="57"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="13">endpos<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">--<pos:position pos:line="96" pos:column="21"/></operator></expr>;<pos:position pos:line="96" pos:column="22"/></expr_stmt></block></while></block></then></if>
        <expr_stmt><expr><name pos:line="97" pos:column="9">sep<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">=<pos:position pos:line="97" pos:column="14"/></operator> <operator pos:line="97" pos:column="15">*<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">p<pos:position pos:line="97" pos:column="17"/></name></expr>;<pos:position pos:line="97" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">endpos<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <literal type="char" pos:line="98" pos:column="19">'\0'<pos:position pos:line="98" pos:column="23"/></literal></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt>
        <comment type="block" pos:line="99" pos:column="9">/* TODO: maybe special fopen for VMS? */</comment>
        <expr_stmt><expr><name pos:line="100" pos:column="9">fp<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">=<pos:position pos:line="100" pos:column="13"/></operator> <call><name pos:line="100" pos:column="14">fopen<pos:position pos:line="100" pos:column="19"/></name><argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">hdrfile<pos:position pos:line="100" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="29">FOPEN_READTEXT<pos:position pos:line="100" pos:column="43"/></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>
        <if pos:line="101" pos:column="9">if<condition pos:line="101" pos:column="11">(<expr><operator pos:line="101" pos:column="12">!<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="13">fp<pos:position pos:line="101" pos:column="15"/></name></expr>)<pos:position pos:line="101" pos:column="16"/></condition><then pos:line="101" pos:column="16">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="11">warnf<pos:position pos:line="102" pos:column="16"/></name><argument_list pos:line="102" pos:column="16">(<argument><expr><name><name pos:line="102" pos:column="17">config<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">-&gt;<pos:position pos:line="102" pos:column="28"/></operator><name pos:line="102" pos:column="25">global<pos:position pos:line="102" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="33">"Cannot read from %s: %s\n"<pos:position pos:line="102" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="62">hdrfile<pos:position pos:line="102" pos:column="69"/></name></expr></argument>,
                <argument><expr><call><name pos:line="103" pos:column="17">strerror<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><name pos:line="103" pos:column="26">errno<pos:position pos:line="103" pos:column="31"/></name></expr></argument>)<pos:position pos:line="103" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="34"/></expr_stmt></block></then>
        <else pos:line="104" pos:column="9">else <block pos:line="104" pos:column="14">{
          <decl_stmt><decl><type><name pos:line="105" pos:column="11">int<pos:position pos:line="105" pos:column="14"/></name></type> <name pos:line="105" pos:column="15">i<pos:position pos:line="105" pos:column="16"/></name> <init pos:line="105" pos:column="17">= <expr><call><name pos:line="105" pos:column="19">read_field_headers<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">config<pos:position pos:line="105" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="46">hdrfile<pos:position pos:line="105" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="55">fp<pos:position pos:line="105" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="59">&amp;<pos:position pos:line="105" pos:column="64"/></operator><name pos:line="105" pos:column="60">headers<pos:position pos:line="105" pos:column="67"/></name></expr></argument>)<pos:position pos:line="105" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="105" pos:column="69"/></decl_stmt>

          <expr_stmt><expr><call><name pos:line="107" pos:column="11">fclose<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">fp<pos:position pos:line="107" pos:column="20"/></name></expr></argument>)<pos:position pos:line="107" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="22"/></expr_stmt>
          <if pos:line="108" pos:column="11">if<condition pos:line="108" pos:column="13">(<expr><name pos:line="108" pos:column="14">i<pos:position pos:line="108" pos:column="15"/></name></expr>)<pos:position pos:line="108" pos:column="16"/></condition><then pos:line="108" pos:column="16"> <block pos:line="108" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="109" pos:column="13">curl_slist_free_all<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><name pos:line="109" pos:column="33">headers<pos:position pos:line="109" pos:column="40"/></name></expr></argument>)<pos:position pos:line="109" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="42"/></expr_stmt>
            <return pos:line="110" pos:column="13">return <expr><operator pos:line="110" pos:column="20">-<pos:position pos:line="110" pos:column="21"/></operator><literal type="number" pos:line="110" pos:column="21">1<pos:position pos:line="110" pos:column="22"/></literal></expr>;<pos:position pos:line="110" pos:column="23"/></return>
          }<pos:position pos:line="111" pos:column="12"/></block></then></if>
        }<pos:position pos:line="112" pos:column="10"/></block></else></if>
      }<pos:position pos:line="113" pos:column="8"/></block></then>
      <else pos:line="114" pos:column="7">else <block pos:line="114" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">char<pos:position pos:line="115" pos:column="13"/></name> <modifier pos:line="115" pos:column="14">*<pos:position pos:line="115" pos:column="15"/></modifier></type><name pos:line="115" pos:column="15">hdr<pos:position pos:line="115" pos:column="18"/></name></decl>;<pos:position pos:line="115" pos:column="19"/></decl_stmt>

        <while pos:line="117" pos:column="9">while<condition pos:line="117" pos:column="14">(<expr><call><name pos:line="117" pos:column="15">ISSPACE<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><operator pos:line="117" pos:column="23">*<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="24">p<pos:position pos:line="117" pos:column="25"/></name></expr></argument>)<pos:position pos:line="117" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="27"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="11">p<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">++<pos:position pos:line="118" pos:column="14"/></operator></expr>;<pos:position pos:line="118" pos:column="15"/></expr_stmt></block></while>
        <expr_stmt><expr><name pos:line="119" pos:column="9">tp<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <name pos:line="119" pos:column="14">p<pos:position pos:line="119" pos:column="15"/></name></expr>;<pos:position pos:line="119" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">hdr<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">=<pos:position pos:line="120" pos:column="14"/></operator> <call><name pos:line="120" pos:column="15">get_param_word<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><operator pos:line="120" pos:column="30">&amp;<pos:position pos:line="120" pos:column="35"/></operator><name pos:line="120" pos:column="31">p<pos:position pos:line="120" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="34">&amp;<pos:position pos:line="120" pos:column="39"/></operator><name pos:line="120" pos:column="35">endpos<pos:position pos:line="120" pos:column="41"/></name></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="121" pos:column="9">/* If not quoted, strip trailing spaces. */</comment>
        <if pos:line="122" pos:column="9">if<condition pos:line="122" pos:column="11">(<expr><name pos:line="122" pos:column="12">hdr<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">==<pos:position pos:line="122" pos:column="18"/></operator> <name pos:line="122" pos:column="19">tp<pos:position pos:line="122" pos:column="21"/></name></expr>)<pos:position pos:line="122" pos:column="22"/></condition><then pos:line="122" pos:column="22">
          <block type="pseudo"><while pos:line="123" pos:column="11">while<condition pos:line="123" pos:column="16">(<expr><name pos:line="123" pos:column="17">endpos<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">&gt;<pos:position pos:line="123" pos:column="28"/></operator> <name pos:line="123" pos:column="26">hdr<pos:position pos:line="123" pos:column="29"/></name> <operator pos:line="123" pos:column="30">&amp;&amp;<pos:position pos:line="123" pos:column="40"/></operator> <call><name pos:line="123" pos:column="33">ISSPACE<pos:position pos:line="123" pos:column="40"/></name><argument_list pos:line="123" pos:column="40">(<argument><expr><name><name pos:line="123" pos:column="41">endpos<pos:position pos:line="123" pos:column="47"/></name><index pos:line="123" pos:column="47">[<expr><operator pos:line="123" pos:column="48">-<pos:position pos:line="123" pos:column="49"/></operator><literal type="number" pos:line="123" pos:column="49">1<pos:position pos:line="123" pos:column="50"/></literal></expr>]<pos:position pos:line="123" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="123" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="53"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="13">endpos<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">--<pos:position pos:line="124" pos:column="21"/></operator></expr>;<pos:position pos:line="124" pos:column="22"/></expr_stmt></block></while></block></then></if>
        <expr_stmt><expr><name pos:line="125" pos:column="9">sep<pos:position pos:line="125" pos:column="12"/></name> <operator pos:line="125" pos:column="13">=<pos:position pos:line="125" pos:column="14"/></operator> <operator pos:line="125" pos:column="15">*<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">p<pos:position pos:line="125" pos:column="17"/></name></expr>;<pos:position pos:line="125" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="126" pos:column="9">*<pos:position pos:line="126" pos:column="10"/></operator><name pos:line="126" pos:column="10">endpos<pos:position pos:line="126" pos:column="16"/></name> <operator pos:line="126" pos:column="17">=<pos:position pos:line="126" pos:column="18"/></operator> <literal type="char" pos:line="126" pos:column="19">'\0'<pos:position pos:line="126" pos:column="23"/></literal></expr>;<pos:position pos:line="126" pos:column="24"/></expr_stmt>
        <if pos:line="127" pos:column="9">if<condition pos:line="127" pos:column="11">(<expr><call><name pos:line="127" pos:column="12">slist_append<pos:position pos:line="127" pos:column="24"/></name><argument_list pos:line="127" pos:column="24">(<argument><expr><operator pos:line="127" pos:column="25">&amp;<pos:position pos:line="127" pos:column="30"/></operator><name pos:line="127" pos:column="26">headers<pos:position pos:line="127" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="35">hdr<pos:position pos:line="127" pos:column="38"/></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="40"/></condition><then pos:line="127" pos:column="40"> <block pos:line="127" pos:column="41">{
          <expr_stmt><expr><call><name pos:line="128" pos:column="11">fprintf<pos:position pos:line="128" pos:column="18"/></name><argument_list pos:line="128" pos:column="18">(<argument><expr><name><name pos:line="128" pos:column="19">config<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">-&gt;<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="27">global<pos:position pos:line="128" pos:column="33"/></name><operator pos:line="128" pos:column="33">-&gt;<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="35">errors<pos:position pos:line="128" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="43">"Out of memory for field header!\n"<pos:position pos:line="128" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="80"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">curl_slist_free_all<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">headers<pos:position pos:line="129" pos:column="38"/></name></expr></argument>)<pos:position pos:line="129" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="40"/></expr_stmt>
          <return pos:line="130" pos:column="11">return <expr><operator pos:line="130" pos:column="18">-<pos:position pos:line="130" pos:column="19"/></operator><literal type="number" pos:line="130" pos:column="19">1<pos:position pos:line="130" pos:column="20"/></literal></expr>;<pos:position pos:line="130" pos:column="21"/></return>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>
      }<pos:position pos:line="132" pos:column="8"/></block></else></if>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="134" pos:column="5">else <if pos:line="134" pos:column="10">if<condition pos:line="134" pos:column="12">(<expr><call><name pos:line="134" pos:column="13">checkprefix<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><literal type="string" pos:line="134" pos:column="25">"encoder="<pos:position pos:line="134" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="37">p<pos:position pos:line="134" pos:column="38"/></name></expr></argument>)<pos:position pos:line="134" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="40"/></condition><then pos:line="134" pos:column="40"> <block pos:line="134" pos:column="41">{
      <if pos:line="135" pos:column="7">if<condition pos:line="135" pos:column="9">(<expr><name pos:line="135" pos:column="10">endct<pos:position pos:line="135" pos:column="15"/></name></expr>)<pos:position pos:line="135" pos:column="16"/></condition><then pos:line="135" pos:column="16"> <block pos:line="135" pos:column="17">{
        <expr_stmt><expr><operator pos:line="136" pos:column="9">*<pos:position pos:line="136" pos:column="10"/></operator><name pos:line="136" pos:column="10">endct<pos:position pos:line="136" pos:column="15"/></name> <operator pos:line="136" pos:column="16">=<pos:position pos:line="136" pos:column="17"/></operator> <literal type="char" pos:line="136" pos:column="18">'\0'<pos:position pos:line="136" pos:column="22"/></literal></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="137" pos:column="9">endct<pos:position pos:line="137" pos:column="14"/></name> <operator pos:line="137" pos:column="15">=<pos:position pos:line="137" pos:column="16"/></operator> <name pos:line="137" pos:column="17">NULL<pos:position pos:line="137" pos:column="21"/></name></expr>;<pos:position pos:line="137" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="138" pos:column="8"/></block></then></if>
      <for pos:line="139" pos:column="7">for<control pos:line="139" pos:column="10">(<init><expr><name pos:line="139" pos:column="11">p<pos:position pos:line="139" pos:column="12"/></name> <operator pos:line="139" pos:column="13">+=<pos:position pos:line="139" pos:column="15"/></operator> <literal type="number" pos:line="139" pos:column="16">8<pos:position pos:line="139" pos:column="17"/></literal></expr>;<pos:position pos:line="139" pos:column="18"/></init> <condition><expr><call><name pos:line="139" pos:column="19">ISSPACE<pos:position pos:line="139" pos:column="26"/></name><argument_list pos:line="139" pos:column="26">(<argument><expr><operator pos:line="139" pos:column="27">*<pos:position pos:line="139" pos:column="28"/></operator><name pos:line="139" pos:column="28">p<pos:position pos:line="139" pos:column="29"/></name></expr></argument>)<pos:position pos:line="139" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="31"/></condition> <incr><expr><name pos:line="139" pos:column="32">p<pos:position pos:line="139" pos:column="33"/></name><operator pos:line="139" pos:column="33">++<pos:position pos:line="139" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="139" pos:column="36"/></control>
        <block type="pseudo"><empty_stmt pos:line="140" pos:column="9">;<pos:position pos:line="140" pos:column="10"/></empty_stmt></block></for>
      <expr_stmt><expr><name pos:line="141" pos:column="7">tp<pos:position pos:line="141" pos:column="9"/></name> <operator pos:line="141" pos:column="10">=<pos:position pos:line="141" pos:column="11"/></operator> <name pos:line="141" pos:column="12">p<pos:position pos:line="141" pos:column="13"/></name></expr>;<pos:position pos:line="141" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="142" pos:column="7">encoder<pos:position pos:line="142" pos:column="14"/></name> <operator pos:line="142" pos:column="15">=<pos:position pos:line="142" pos:column="16"/></operator> <call><name pos:line="142" pos:column="17">get_param_word<pos:position pos:line="142" pos:column="31"/></name><argument_list pos:line="142" pos:column="31">(<argument><expr><operator pos:line="142" pos:column="32">&amp;<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="33">p<pos:position pos:line="142" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="36">&amp;<pos:position pos:line="142" pos:column="41"/></operator><name pos:line="142" pos:column="37">endpos<pos:position pos:line="142" pos:column="43"/></name></expr></argument>)<pos:position pos:line="142" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="45"/></expr_stmt>
      <comment type="block" pos:line="143" pos:column="7">/* If not quoted, strip trailing spaces. */</comment>
      <if pos:line="144" pos:column="7">if<condition pos:line="144" pos:column="9">(<expr><name pos:line="144" pos:column="10">encoder<pos:position pos:line="144" pos:column="17"/></name> <operator pos:line="144" pos:column="18">==<pos:position pos:line="144" pos:column="20"/></operator> <name pos:line="144" pos:column="21">tp<pos:position pos:line="144" pos:column="23"/></name></expr>)<pos:position pos:line="144" pos:column="24"/></condition><then pos:line="144" pos:column="24">
        <block type="pseudo"><while pos:line="145" pos:column="9">while<condition pos:line="145" pos:column="14">(<expr><name pos:line="145" pos:column="15">endpos<pos:position pos:line="145" pos:column="21"/></name> <operator pos:line="145" pos:column="22">&gt;<pos:position pos:line="145" pos:column="26"/></operator> <name pos:line="145" pos:column="24">encoder<pos:position pos:line="145" pos:column="31"/></name> <operator pos:line="145" pos:column="32">&amp;&amp;<pos:position pos:line="145" pos:column="42"/></operator> <call><name pos:line="145" pos:column="35">ISSPACE<pos:position pos:line="145" pos:column="42"/></name><argument_list pos:line="145" pos:column="42">(<argument><expr><name><name pos:line="145" pos:column="43">endpos<pos:position pos:line="145" pos:column="49"/></name><index pos:line="145" pos:column="49">[<expr><operator pos:line="145" pos:column="50">-<pos:position pos:line="145" pos:column="51"/></operator><literal type="number" pos:line="145" pos:column="51">1<pos:position pos:line="145" pos:column="52"/></literal></expr>]<pos:position pos:line="145" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="145" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="55"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="11">endpos<pos:position pos:line="146" pos:column="17"/></name><operator pos:line="146" pos:column="17">--<pos:position pos:line="146" pos:column="19"/></operator></expr>;<pos:position pos:line="146" pos:column="20"/></expr_stmt></block></while></block></then></if>
      <expr_stmt><expr><name pos:line="147" pos:column="7">sep<pos:position pos:line="147" pos:column="10"/></name> <operator pos:line="147" pos:column="11">=<pos:position pos:line="147" pos:column="12"/></operator> <operator pos:line="147" pos:column="13">*<pos:position pos:line="147" pos:column="14"/></operator><name pos:line="147" pos:column="14">p<pos:position pos:line="147" pos:column="15"/></name></expr>;<pos:position pos:line="147" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="148" pos:column="7">*<pos:position pos:line="148" pos:column="8"/></operator><name pos:line="148" pos:column="8">endpos<pos:position pos:line="148" pos:column="14"/></name> <operator pos:line="148" pos:column="15">=<pos:position pos:line="148" pos:column="16"/></operator> <literal type="char" pos:line="148" pos:column="17">'\0'<pos:position pos:line="148" pos:column="21"/></literal></expr>;<pos:position pos:line="148" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if></elseif>
    <else pos:line="150" pos:column="5">else <block pos:line="150" pos:column="10">{
      <comment type="block" pos:line="151" pos:column="7">/* unknown prefix, skip to next block */</comment>
      <decl_stmt><decl><type><name pos:line="152" pos:column="7">char<pos:position pos:line="152" pos:column="11"/></name> <modifier pos:line="152" pos:column="12">*<pos:position pos:line="152" pos:column="13"/></modifier></type><name pos:line="152" pos:column="13">unknown<pos:position pos:line="152" pos:column="20"/></name> <init pos:line="152" pos:column="21">= <expr><call><name pos:line="152" pos:column="23">get_param_word<pos:position pos:line="152" pos:column="37"/></name><argument_list pos:line="152" pos:column="37">(<argument><expr><operator pos:line="152" pos:column="38">&amp;<pos:position pos:line="152" pos:column="43"/></operator><name pos:line="152" pos:column="39">p<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="42">&amp;<pos:position pos:line="152" pos:column="47"/></operator><name pos:line="152" pos:column="43">endpos<pos:position pos:line="152" pos:column="49"/></name></expr></argument>)<pos:position pos:line="152" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="152" pos:column="51"/></decl_stmt>

      <expr_stmt><expr><name pos:line="154" pos:column="7">sep<pos:position pos:line="154" pos:column="10"/></name> <operator pos:line="154" pos:column="11">=<pos:position pos:line="154" pos:column="12"/></operator> <operator pos:line="154" pos:column="13">*<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">p<pos:position pos:line="154" pos:column="15"/></name></expr>;<pos:position pos:line="154" pos:column="16"/></expr_stmt>
      <if pos:line="155" pos:column="7">if<condition pos:line="155" pos:column="9">(<expr><name pos:line="155" pos:column="10">endct<pos:position pos:line="155" pos:column="15"/></name></expr>)<pos:position pos:line="155" pos:column="16"/></condition><then pos:line="155" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="9">endct<pos:position pos:line="156" pos:column="14"/></name> <operator pos:line="156" pos:column="15">=<pos:position pos:line="156" pos:column="16"/></operator> <name pos:line="156" pos:column="17">p<pos:position pos:line="156" pos:column="18"/></name></expr>;<pos:position pos:line="156" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="157" pos:column="7">else <block pos:line="157" pos:column="12">{
        <expr_stmt><expr><operator pos:line="158" pos:column="9">*<pos:position pos:line="158" pos:column="10"/></operator><name pos:line="158" pos:column="10">endpos<pos:position pos:line="158" pos:column="16"/></name> <operator pos:line="158" pos:column="17">=<pos:position pos:line="158" pos:column="18"/></operator> <literal type="char" pos:line="158" pos:column="19">'\0'<pos:position pos:line="158" pos:column="23"/></literal></expr>;<pos:position pos:line="158" pos:column="24"/></expr_stmt>
         <if pos:line="159" pos:column="10">if<condition pos:line="159" pos:column="12">(<expr><operator pos:line="159" pos:column="13">*<pos:position pos:line="159" pos:column="14"/></operator><name pos:line="159" pos:column="14">unknown<pos:position pos:line="159" pos:column="21"/></name></expr>)<pos:position pos:line="159" pos:column="22"/></condition><then pos:line="159" pos:column="22">
           <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="12">warnf<pos:position pos:line="160" pos:column="17"/></name><argument_list pos:line="160" pos:column="17">(<argument><expr><name><name pos:line="160" pos:column="18">config<pos:position pos:line="160" pos:column="24"/></name><operator pos:line="160" pos:column="24">-&gt;<pos:position pos:line="160" pos:column="29"/></operator><name pos:line="160" pos:column="26">global<pos:position pos:line="160" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="34">"skip unknown form field: %s\n"<pos:position pos:line="160" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="67">unknown<pos:position pos:line="160" pos:column="74"/></name></expr></argument>)<pos:position pos:line="160" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="76"/></expr_stmt></block></then></if>
      }<pos:position pos:line="161" pos:column="8"/></block></else></if>
    }<pos:position pos:line="162" pos:column="6"/></block></else></if>
  }<pos:position pos:line="163" pos:column="4"/></block></while>

  <comment type="block" pos:line="165" pos:column="3">/* Terminate and strip content type. */</comment>
  <if pos:line="166" pos:column="3">if<condition pos:line="166" pos:column="5">(<expr><name pos:line="166" pos:column="6">type<pos:position pos:line="166" pos:column="10"/></name></expr>)<pos:position pos:line="166" pos:column="11"/></condition><then pos:line="166" pos:column="11"> <block pos:line="166" pos:column="12">{
    <if pos:line="167" pos:column="5">if<condition pos:line="167" pos:column="7">(<expr><operator pos:line="167" pos:column="8">!<pos:position pos:line="167" pos:column="9"/></operator><name pos:line="167" pos:column="9">endct<pos:position pos:line="167" pos:column="14"/></name></expr>)<pos:position pos:line="167" pos:column="15"/></condition><then pos:line="167" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="7">endct<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">=<pos:position pos:line="168" pos:column="14"/></operator> <name pos:line="168" pos:column="15">type<pos:position pos:line="168" pos:column="19"/></name> <operator pos:line="168" pos:column="20">+<pos:position pos:line="168" pos:column="21"/></operator> <call><name pos:line="168" pos:column="22">strlen<pos:position pos:line="168" pos:column="28"/></name><argument_list pos:line="168" pos:column="28">(<argument><expr><name pos:line="168" pos:column="29">type<pos:position pos:line="168" pos:column="33"/></name></expr></argument>)<pos:position pos:line="168" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="35"/></expr_stmt></block></then></if>
    <while pos:line="169" pos:column="5">while<condition pos:line="169" pos:column="10">(<expr><name pos:line="169" pos:column="11">endct<pos:position pos:line="169" pos:column="16"/></name> <operator pos:line="169" pos:column="17">&gt;<pos:position pos:line="169" pos:column="21"/></operator> <name pos:line="169" pos:column="19">type<pos:position pos:line="169" pos:column="23"/></name> <operator pos:line="169" pos:column="24">&amp;&amp;<pos:position pos:line="169" pos:column="34"/></operator> <call><name pos:line="169" pos:column="27">ISSPACE<pos:position pos:line="169" pos:column="34"/></name><argument_list pos:line="169" pos:column="34">(<argument><expr><name><name pos:line="169" pos:column="35">endct<pos:position pos:line="169" pos:column="40"/></name><index pos:line="169" pos:column="40">[<expr><operator pos:line="169" pos:column="41">-<pos:position pos:line="169" pos:column="42"/></operator><literal type="number" pos:line="169" pos:column="42">1<pos:position pos:line="169" pos:column="43"/></literal></expr>]<pos:position pos:line="169" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="169" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="46"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="170" pos:column="7">endct<pos:position pos:line="170" pos:column="12"/></name><operator pos:line="170" pos:column="12">--<pos:position pos:line="170" pos:column="14"/></operator></expr>;<pos:position pos:line="170" pos:column="15"/></expr_stmt></block></while>
    <expr_stmt><expr><operator pos:line="171" pos:column="5">*<pos:position pos:line="171" pos:column="6"/></operator><name pos:line="171" pos:column="6">endct<pos:position pos:line="171" pos:column="11"/></name> <operator pos:line="171" pos:column="12">=<pos:position pos:line="171" pos:column="13"/></operator> <literal type="char" pos:line="171" pos:column="14">'\0'<pos:position pos:line="171" pos:column="18"/></literal></expr>;<pos:position pos:line="171" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="172" pos:column="4"/></block></then></if>

  <if pos:line="174" pos:column="3">if<condition pos:line="174" pos:column="5">(<expr><name pos:line="174" pos:column="6">ptype<pos:position pos:line="174" pos:column="11"/></name></expr>)<pos:position pos:line="174" pos:column="12"/></condition><then pos:line="174" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="175" pos:column="5">*<pos:position pos:line="175" pos:column="6"/></operator><name pos:line="175" pos:column="6">ptype<pos:position pos:line="175" pos:column="11"/></name> <operator pos:line="175" pos:column="12">=<pos:position pos:line="175" pos:column="13"/></operator> <name pos:line="175" pos:column="14">type<pos:position pos:line="175" pos:column="18"/></name></expr>;<pos:position pos:line="175" pos:column="19"/></expr_stmt></block></then>
  <elseif pos:line="176" pos:column="3">else <if pos:line="176" pos:column="8">if<condition pos:line="176" pos:column="10">(<expr><name pos:line="176" pos:column="11">type<pos:position pos:line="176" pos:column="15"/></name></expr>)<pos:position pos:line="176" pos:column="16"/></condition><then pos:line="176" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="5">warnf<pos:position pos:line="177" pos:column="10"/></name><argument_list pos:line="177" pos:column="10">(<argument><expr><name><name pos:line="177" pos:column="11">config<pos:position pos:line="177" pos:column="17"/></name><operator pos:line="177" pos:column="17">-&gt;<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="19">global<pos:position pos:line="177" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="27">"Field content type not allowed here: %s\n"<pos:position pos:line="177" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="72">type<pos:position pos:line="177" pos:column="76"/></name></expr></argument>)<pos:position pos:line="177" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="78"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="179" pos:column="3">if<condition pos:line="179" pos:column="5">(<expr><name pos:line="179" pos:column="6">pfilename<pos:position pos:line="179" pos:column="15"/></name></expr>)<pos:position pos:line="179" pos:column="16"/></condition><then pos:line="179" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="180" pos:column="5">*<pos:position pos:line="180" pos:column="6"/></operator><name pos:line="180" pos:column="6">pfilename<pos:position pos:line="180" pos:column="15"/></name> <operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator> <name pos:line="180" pos:column="18">filename<pos:position pos:line="180" pos:column="26"/></name></expr>;<pos:position pos:line="180" pos:column="27"/></expr_stmt></block></then>
  <elseif pos:line="181" pos:column="3">else <if pos:line="181" pos:column="8">if<condition pos:line="181" pos:column="10">(<expr><name pos:line="181" pos:column="11">filename<pos:position pos:line="181" pos:column="19"/></name></expr>)<pos:position pos:line="181" pos:column="20"/></condition><then pos:line="181" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="182" pos:column="5">warnf<pos:position pos:line="182" pos:column="10"/></name><argument_list pos:line="182" pos:column="10">(<argument><expr><name><name pos:line="182" pos:column="11">config<pos:position pos:line="182" pos:column="17"/></name><operator pos:line="182" pos:column="17">-&gt;<pos:position pos:line="182" pos:column="22"/></operator><name pos:line="182" pos:column="19">global<pos:position pos:line="182" pos:column="25"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="183" pos:column="11">"Field file name not allowed here: %s\n"<pos:position pos:line="183" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="183" pos:column="53">filename<pos:position pos:line="183" pos:column="61"/></name></expr></argument>)<pos:position pos:line="183" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="63"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="185" pos:column="3">if<condition pos:line="185" pos:column="5">(<expr><name pos:line="185" pos:column="6">pencoder<pos:position pos:line="185" pos:column="14"/></name></expr>)<pos:position pos:line="185" pos:column="15"/></condition><then pos:line="185" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="186" pos:column="5">*<pos:position pos:line="186" pos:column="6"/></operator><name pos:line="186" pos:column="6">pencoder<pos:position pos:line="186" pos:column="14"/></name> <operator pos:line="186" pos:column="15">=<pos:position pos:line="186" pos:column="16"/></operator> <name pos:line="186" pos:column="17">encoder<pos:position pos:line="186" pos:column="24"/></name></expr>;<pos:position pos:line="186" pos:column="25"/></expr_stmt></block></then>
  <elseif pos:line="187" pos:column="3">else <if pos:line="187" pos:column="8">if<condition pos:line="187" pos:column="10">(<expr><name pos:line="187" pos:column="11">encoder<pos:position pos:line="187" pos:column="18"/></name></expr>)<pos:position pos:line="187" pos:column="19"/></condition><then pos:line="187" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="5">warnf<pos:position pos:line="188" pos:column="10"/></name><argument_list pos:line="188" pos:column="10">(<argument><expr><name><name pos:line="188" pos:column="11">config<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">-&gt;<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="19">global<pos:position pos:line="188" pos:column="25"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="189" pos:column="11">"Field encoder not allowed here: %s\n"<pos:position pos:line="189" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="189" pos:column="51">encoder<pos:position pos:line="189" pos:column="58"/></name></expr></argument>)<pos:position pos:line="189" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="60"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="191" pos:column="3">if<condition pos:line="191" pos:column="5">(<expr><name pos:line="191" pos:column="6">pheaders<pos:position pos:line="191" pos:column="14"/></name></expr>)<pos:position pos:line="191" pos:column="15"/></condition><then pos:line="191" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="192" pos:column="5">*<pos:position pos:line="192" pos:column="6"/></operator><name pos:line="192" pos:column="6">pheaders<pos:position pos:line="192" pos:column="14"/></name> <operator pos:line="192" pos:column="15">=<pos:position pos:line="192" pos:column="16"/></operator> <name pos:line="192" pos:column="17">headers<pos:position pos:line="192" pos:column="24"/></name></expr>;<pos:position pos:line="192" pos:column="25"/></expr_stmt></block></then>
  <elseif pos:line="193" pos:column="3">else <if pos:line="193" pos:column="8">if<condition pos:line="193" pos:column="10">(<expr><name pos:line="193" pos:column="11">headers<pos:position pos:line="193" pos:column="18"/></name></expr>)<pos:position pos:line="193" pos:column="19"/></condition><then pos:line="193" pos:column="19"> <block pos:line="193" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="194" pos:column="5">warnf<pos:position pos:line="194" pos:column="10"/></name><argument_list pos:line="194" pos:column="10">(<argument><expr><name><name pos:line="194" pos:column="11">config<pos:position pos:line="194" pos:column="17"/></name><operator pos:line="194" pos:column="17">-&gt;<pos:position pos:line="194" pos:column="22"/></operator><name pos:line="194" pos:column="19">global<pos:position pos:line="194" pos:column="25"/></name></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="195" pos:column="11">"Field headers not allowed here: %s\n"<pos:position pos:line="195" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="51">headers<pos:position pos:line="195" pos:column="58"/></name><operator pos:line="195" pos:column="58">-&gt;<pos:position pos:line="195" pos:column="63"/></operator><name pos:line="195" pos:column="60">data<pos:position pos:line="195" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="196" pos:column="5">curl_slist_free_all<pos:position pos:line="196" pos:column="24"/></name><argument_list pos:line="196" pos:column="24">(<argument><expr><name pos:line="196" pos:column="25">headers<pos:position pos:line="196" pos:column="32"/></name></expr></argument>)<pos:position pos:line="196" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="197" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><operator pos:line="199" pos:column="3">*<pos:position pos:line="199" pos:column="4"/></operator><name pos:line="199" pos:column="4">str<pos:position pos:line="199" pos:column="7"/></name> <operator pos:line="199" pos:column="8">=<pos:position pos:line="199" pos:column="9"/></operator> <name pos:line="199" pos:column="10">p<pos:position pos:line="199" pos:column="11"/></name></expr>;<pos:position pos:line="199" pos:column="12"/></expr_stmt>
  <return pos:line="200" pos:column="3">return <expr><name pos:line="200" pos:column="10">sep<pos:position pos:line="200" pos:column="13"/></name> <operator pos:line="200" pos:column="14">&amp;<pos:position pos:line="200" pos:column="19"/></operator> <literal type="number" pos:line="200" pos:column="16">0xFF<pos:position pos:line="200" pos:column="20"/></literal></expr>;<pos:position pos:line="200" pos:column="21"/></return>
}<pos:position pos:line="201" pos:column="2"/></block></function></unit>

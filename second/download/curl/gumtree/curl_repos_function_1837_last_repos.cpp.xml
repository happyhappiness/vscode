<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1837_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">decodeQuantum<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">unsigned<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">dest<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">src<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">padding<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">p<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">long<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">i<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">x<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

  <for pos:line="7" pos:column="3">for<control pos:line="7" pos:column="6">(<init><expr><name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal></expr><operator pos:line="7" pos:column="12">,<pos:position pos:line="7" pos:column="13"/></operator> <expr><name pos:line="7" pos:column="14">s<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">src<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></init> <condition><expr><name pos:line="7" pos:column="23">i<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&lt;<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="27">4<pos:position pos:line="7" pos:column="28"/></literal></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><name pos:line="7" pos:column="30">i<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">++<pos:position pos:line="7" pos:column="33"/></operator></expr><operator pos:line="7" pos:column="33">,<pos:position pos:line="7" pos:column="34"/></operator> <expr><name pos:line="7" pos:column="35">s<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">++<pos:position pos:line="7" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="39"/></control> <block pos:line="7" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">long<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">v<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <literal type="char" pos:line="10" pos:column="14">'='<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
      <expr_stmt><expr><name pos:line="11" pos:column="7">x<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">x<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;&lt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="17">6<pos:position pos:line="11" pos:column="18"/></literal><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="12" pos:column="7">padding<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">++<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">p<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">base64<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

      <while pos:line="17" pos:column="7">while<condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">p<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&amp;&amp;<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><operator pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">p<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">!=<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">s<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">)<pos:position pos:line="17" pos:column="29"/></operator></expr>)<pos:position pos:line="17" pos:column="30"/></condition> <block pos:line="17" pos:column="31">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">v<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">++<pos:position pos:line="18" pos:column="12"/></operator></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">p<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">++<pos:position pos:line="19" pos:column="12"/></operator></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="20" pos:column="8"/></block></while>

      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">p<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">==<pos:position pos:line="22" pos:column="15"/></operator> <operator pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">s<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">x<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">x<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">&lt;&lt;<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="19">6<pos:position pos:line="23" pos:column="20"/></literal><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="22">+<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">v<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt></block></then>
      <else pos:line="24" pos:column="7">else
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></else></if>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">padding<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">&lt;<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="5">dest<pos:position pos:line="30" pos:column="9"/></name><index pos:line="30" pos:column="9">[<expr><literal type="number" pos:line="30" pos:column="10">2<pos:position pos:line="30" pos:column="11"/></literal></expr>]<pos:position pos:line="30" pos:column="12"/></index></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">curlx_ultouc<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">x<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">&amp;<pos:position pos:line="30" pos:column="35"/></operator> <literal type="number" pos:line="30" pos:column="32">0xFFUL<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">x<pos:position pos:line="32" pos:column="4"/></name> <operator pos:line="32" pos:column="5">&gt;&gt;=<pos:position pos:line="32" pos:column="14"/></operator> <literal type="number" pos:line="32" pos:column="9">8<pos:position pos:line="32" pos:column="10"/></literal></expr>;<pos:position pos:line="32" pos:column="11"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">padding<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">&lt;<pos:position pos:line="33" pos:column="18"/></operator> <literal type="number" pos:line="33" pos:column="16">2<pos:position pos:line="33" pos:column="17"/></literal></expr>)<pos:position pos:line="33" pos:column="18"/></condition><then pos:line="33" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="5">dest<pos:position pos:line="34" pos:column="9"/></name><index pos:line="34" pos:column="9">[<expr><literal type="number" pos:line="34" pos:column="10">1<pos:position pos:line="34" pos:column="11"/></literal></expr>]<pos:position pos:line="34" pos:column="12"/></index></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">curlx_ultouc<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">x<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">&amp;<pos:position pos:line="34" pos:column="35"/></operator> <literal type="number" pos:line="34" pos:column="32">0xFFUL<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">x<pos:position pos:line="36" pos:column="4"/></name> <operator pos:line="36" pos:column="5">&gt;&gt;=<pos:position pos:line="36" pos:column="14"/></operator> <literal type="number" pos:line="36" pos:column="9">8<pos:position pos:line="36" pos:column="10"/></literal></expr>;<pos:position pos:line="36" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">dest<pos:position pos:line="37" pos:column="7"/></name><index pos:line="37" pos:column="7">[<expr><literal type="number" pos:line="37" pos:column="8">0<pos:position pos:line="37" pos:column="9"/></literal></expr>]<pos:position pos:line="37" pos:column="10"/></index></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">curlx_ultouc<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">x<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="30">0xFFUL<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><literal type="number" pos:line="39" pos:column="10">3<pos:position pos:line="39" pos:column="11"/></literal> <operator pos:line="39" pos:column="12">-<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">padding<pos:position pos:line="39" pos:column="21"/></name></expr>;<pos:position pos:line="39" pos:column="22"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

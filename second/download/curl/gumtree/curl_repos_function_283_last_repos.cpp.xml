<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_283_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">my_get_ext<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">X509<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">cert<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">type<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">extensiontype<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">STACK_OF<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">ACCESS_DESCRIPTION<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call> <operator pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">accessinfo<pos:position pos:line="5" pos:column="44"/></name></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">accessinfo<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator>  <call><name pos:line="6" pos:column="17">X509_get_ext_d2i<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">cert<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">extensiontype<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">NULL<pos:position pos:line="6" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="61">NULL<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><call><name pos:line="8" pos:column="7">sk_ACCESS_DESCRIPTION_num<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">accessinfo<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>
  <for pos:line="10" pos:column="3">for<control pos:line="10" pos:column="6">(<init><expr><name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></init> <condition><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&lt;<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="18">sk_ACCESS_DESCRIPTION_num<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">accessinfo<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></condition> <incr><expr><name pos:line="10" pos:column="57">i<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">++<pos:position pos:line="10" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="61"/></control> <block pos:line="10" pos:column="62">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ACCESS_DESCRIPTION<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type> <name pos:line="11" pos:column="26">ad<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name pos:line="11" pos:column="31">sk_ACCESS_DESCRIPTION_value<pos:position pos:line="11" pos:column="58"/></name><argument_list pos:line="11" pos:column="58">(<argument><expr><name pos:line="11" pos:column="59">accessinfo<pos:position pos:line="11" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="71">i<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><call><name pos:line="12" pos:column="8">OBJ_obj2nid<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">ad<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">method<pos:position pos:line="12" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call> <operator pos:line="12" pos:column="32">==<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">type<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <block pos:line="12" pos:column="41">{
      <if pos:line="13" pos:column="7">if<condition pos:line="13" pos:column="9">(<expr><name><name pos:line="13" pos:column="10">ad<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">location<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">type<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">GEN_URI<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ia5string<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name><name pos:line="14" pos:column="26">ad<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">location<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">d<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">.<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">ia5<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></return>
      }<pos:position pos:line="15" pos:column="8"/></block></then></if>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">NULL<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></for>
  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">NULL<pos:position pos:line="19" pos:column="14"/></name></expr>;<pos:position pos:line="19" pos:column="15"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

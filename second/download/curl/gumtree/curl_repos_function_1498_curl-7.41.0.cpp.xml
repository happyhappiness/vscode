<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1498_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_input_negotiate<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">bool<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">proxy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">header<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BYTE<pos:position pos:line="4" pos:column="7"/></name>              <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">input_token<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">NULL<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">SecBufferDesc<pos:position pos:line="5" pos:column="16"/></name></type>     <name pos:line="5" pos:column="21">out_buff_desc<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">SecBuffer<pos:position pos:line="6" pos:column="12"/></name></type>         <name pos:line="6" pos:column="21">out_sec_buff<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SecBufferDesc<pos:position pos:line="7" pos:column="16"/></name></type>     <name pos:line="7" pos:column="21">in_buff_desc<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SecBuffer<pos:position pos:line="8" pos:column="12"/></name></type>         <name pos:line="8" pos:column="21">in_sec_buff<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">SECURITY_STATUS<pos:position pos:line="9" pos:column="18"/></name></type>   <name pos:line="9" pos:column="21">status<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">long<pos:position pos:line="10" pos:column="16"/></name></type>     <name pos:line="10" pos:column="21">attrs<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">TimeStamp<pos:position pos:line="11" pos:column="12"/></name></type>         <name pos:line="11" pos:column="21">expiry<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt> <comment type="block" pos:line="11" pos:column="29">/* For Windows 9x compatibility of SSPI calls */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">len<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="19">input_token_len<pos:position pos:line="12" pos:column="34"/></name> <init pos:line="12" pos:column="35">= <expr><literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">CURLcode<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">result<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Point to the username and password */</comment>
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">userp<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">passwdp<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Point to the correct struct with this */</comment>
  <decl_stmt><decl><type><name><name pos:line="20" pos:column="3">struct<pos:position pos:line="20" pos:column="9"/></name> <name pos:line="20" pos:column="10">negotiatedata<pos:position pos:line="20" pos:column="23"/></name></name> <modifier pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></modifier></type><name pos:line="20" pos:column="25">neg_ctx<pos:position pos:line="20" pos:column="32"/></name></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">proxy<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition><then pos:line="22" pos:column="12"> <block pos:line="22" pos:column="13">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">userp<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name><name pos:line="23" pos:column="13">conn<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">proxyuser<pos:position pos:line="23" pos:column="28"/></name></name></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">passwdp<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name><name pos:line="24" pos:column="15">conn<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">proxypasswd<pos:position pos:line="24" pos:column="32"/></name></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">neg_ctx<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <operator pos:line="25" pos:column="15">&amp;<pos:position pos:line="25" pos:column="20"/></operator><name><name pos:line="25" pos:column="16">conn<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">data<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">state<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">.<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">proxyneg<pos:position pos:line="25" pos:column="42"/></name></name></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then>
  <else pos:line="27" pos:column="3">else <block pos:line="27" pos:column="8">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">userp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name><name pos:line="28" pos:column="13">conn<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">user<pos:position pos:line="28" pos:column="23"/></name></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">passwdp<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name><name pos:line="29" pos:column="15">conn<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">passwd<pos:position pos:line="29" pos:column="27"/></name></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">neg_ctx<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <operator pos:line="30" pos:column="15">&amp;<pos:position pos:line="30" pos:column="20"/></operator><name><name pos:line="30" pos:column="16">conn<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">data<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">state<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">negotiate<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="33" pos:column="3">/* Not set means empty */</comment>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">!<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">userp<pos:position pos:line="34" pos:column="12"/></name></expr>)<pos:position pos:line="34" pos:column="13"/></condition><then pos:line="34" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">userp<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <literal type="string" pos:line="35" pos:column="13">""<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><operator pos:line="37" pos:column="6">!<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">passwdp<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="5">passwdp<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <literal type="string" pos:line="38" pos:column="15">""<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt></block></then></if>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name><name pos:line="40" pos:column="6">neg_ctx<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">context<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">&amp;&amp;<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="26">neg_ctx<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">status<pos:position pos:line="40" pos:column="41"/></name></name> <operator pos:line="40" pos:column="42">==<pos:position pos:line="40" pos:column="44"/></operator> <name pos:line="40" pos:column="45">SEC_E_OK<pos:position pos:line="40" pos:column="53"/></name></expr>)<pos:position pos:line="40" pos:column="54"/></condition><then pos:line="40" pos:column="54"> <block pos:line="40" pos:column="55">{
    <comment type="block" pos:line="41" pos:column="5">/* We finished successfully our part of authentication, but server
     * rejected it (since we're again here). Exit with an error since we
     * can't invent anything better */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">Curl_cleanup_negotiate<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">conn<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">data<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><operator pos:line="48" pos:column="6">!<pos:position pos:line="48" pos:column="7"/></operator><name><name pos:line="48" pos:column="7">neg_ctx<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">server_name<pos:position pos:line="48" pos:column="27"/></name></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28"> <block pos:line="48" pos:column="29">{
    <comment type="block" pos:line="49" pos:column="5">/* Check proxy auth requested but no given proxy name */</comment>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name pos:line="50" pos:column="8">proxy<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">&amp;&amp;<pos:position pos:line="50" pos:column="24"/></operator> <operator pos:line="50" pos:column="17">!<pos:position pos:line="50" pos:column="18"/></operator><name><name pos:line="50" pos:column="18">conn<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">proxy<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">.<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">name<pos:position pos:line="50" pos:column="34"/></name></name></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35">
      <block type="pseudo"><return pos:line="51" pos:column="7">return <expr><name pos:line="51" pos:column="14">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="51" pos:column="41"/></name></expr>;<pos:position pos:line="51" pos:column="42"/></return></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* Generate our SPN */</comment>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">neg_ctx<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">server_name<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <call><name pos:line="54" pos:column="28">Curl_sasl_build_spn<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><literal type="string" pos:line="54" pos:column="48">"HTTP"<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>,
                                                <argument><expr><ternary><condition><expr><name pos:line="55" pos:column="49">proxy<pos:position pos:line="55" pos:column="54"/></name></expr> ?<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56"> <expr><name><name pos:line="55" pos:column="57">conn<pos:position pos:line="55" pos:column="61"/></name><operator pos:line="55" pos:column="61">-&gt;<pos:position pos:line="55" pos:column="66"/></operator><name pos:line="55" pos:column="63">proxy<pos:position pos:line="55" pos:column="68"/></name><operator pos:line="55" pos:column="68">.<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="69">name<pos:position pos:line="55" pos:column="73"/></name></name></expr> <pos:position pos:line="55" pos:column="74"/></then><else pos:line="55" pos:column="74">:
                                                        <expr><name><name pos:line="56" pos:column="57">conn<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">-&gt;<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="63">host<pos:position pos:line="56" pos:column="67"/></name><operator pos:line="56" pos:column="67">.<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="68">name<pos:position pos:line="56" pos:column="72"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><operator pos:line="57" pos:column="8">!<pos:position pos:line="57" pos:column="9"/></operator><name><name pos:line="57" pos:column="9">neg_ctx<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">server_name<pos:position pos:line="57" pos:column="29"/></name></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30">
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="58" pos:column="33"/></name></expr>;<pos:position pos:line="58" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">!<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">neg_ctx<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">output_token<pos:position pos:line="61" pos:column="28"/></name></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29"> <block pos:line="61" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">PSecPkgInfo<pos:position pos:line="62" pos:column="16"/></name></type> <name pos:line="62" pos:column="17">SecurityPackage<pos:position pos:line="62" pos:column="32"/></name></decl>;<pos:position pos:line="62" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><name pos:line="63" pos:column="5">status<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name><name pos:line="63" pos:column="14">s_pSecFn<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">QuerySecurityPackageInfo<pos:position pos:line="63" pos:column="48"/></name></name><argument_list pos:line="63" pos:column="48">(<argument><expr><operator pos:line="63" pos:column="49">(<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">TCHAR<pos:position pos:line="63" pos:column="55"/></name> <operator pos:line="63" pos:column="56">*<pos:position pos:line="63" pos:column="57"/></operator><operator pos:line="63" pos:column="57">)<pos:position pos:line="63" pos:column="58"/></operator>
                                                <call><name pos:line="64" pos:column="49">TEXT<pos:position pos:line="64" pos:column="53"/></name><argument_list pos:line="64" pos:column="53">(<argument><expr><name pos:line="64" pos:column="54">SP_NAME_NEGOTIATE<pos:position pos:line="64" pos:column="71"/></name></expr></argument>)<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr></argument>,
                                                <argument><expr><operator pos:line="65" pos:column="49">&amp;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="50">SecurityPackage<pos:position pos:line="65" pos:column="65"/></name></expr></argument>)<pos:position pos:line="65" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="67"/></expr_stmt>
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name pos:line="66" pos:column="8">status<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">!=<pos:position pos:line="66" pos:column="17"/></operator> <name pos:line="66" pos:column="18">SEC_E_OK<pos:position pos:line="66" pos:column="26"/></name></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
      <block type="pseudo"><return pos:line="67" pos:column="7">return <expr><name pos:line="67" pos:column="14">CURLE_NOT_BUILT_IN<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="69" pos:column="5">/* Allocate input and output buffers according to the max token size
       as indicated by the security package */</comment>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">neg_ctx<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">token_max<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name><name pos:line="71" pos:column="26">SecurityPackage<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">-&gt;<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="43">cbMaxToken<pos:position pos:line="71" pos:column="53"/></name></name></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">neg_ctx<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">output_token<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">=<pos:position pos:line="72" pos:column="28"/></operator> <call><name pos:line="72" pos:column="29">malloc<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><name><name pos:line="72" pos:column="36">neg_ctx<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">-&gt;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="45">token_max<pos:position pos:line="72" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="73" pos:column="5">s_pSecFn<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">FreeContextBuffer<pos:position pos:line="73" pos:column="32"/></name></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">SecurityPackage<pos:position pos:line="73" pos:column="48"/></name></expr></argument>)<pos:position pos:line="73" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="76" pos:column="3">/* Obtain the input token, if any */</comment>
  <expr_stmt><expr><name pos:line="77" pos:column="3">header<pos:position pos:line="77" pos:column="9"/></name> <operator pos:line="77" pos:column="10">+=<pos:position pos:line="77" pos:column="12"/></operator> <call><name pos:line="77" pos:column="13">strlen<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><literal type="string" pos:line="77" pos:column="20">"Negotiate"<pos:position pos:line="77" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt>
  <while pos:line="78" pos:column="3">while<condition pos:line="78" pos:column="8">(<expr><operator pos:line="78" pos:column="9">*<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">header<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">&amp;&amp;<pos:position pos:line="78" pos:column="27"/></operator> <call><name pos:line="78" pos:column="20">ISSPACE<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument><expr><operator pos:line="78" pos:column="28">*<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="29">header<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="37"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="5">header<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">++<pos:position pos:line="79" pos:column="13"/></operator></expr>;<pos:position pos:line="79" pos:column="14"/></expr_stmt></block></while>

  <expr_stmt><expr><name pos:line="81" pos:column="3">len<pos:position pos:line="81" pos:column="6"/></name> <operator pos:line="81" pos:column="7">=<pos:position pos:line="81" pos:column="8"/></operator> <call><name pos:line="81" pos:column="9">strlen<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">header<pos:position pos:line="81" pos:column="22"/></name></expr></argument>)<pos:position pos:line="81" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="24"/></expr_stmt>
  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><operator pos:line="82" pos:column="6">!<pos:position pos:line="82" pos:column="7"/></operator><name pos:line="82" pos:column="7">len<pos:position pos:line="82" pos:column="10"/></name></expr>)<pos:position pos:line="82" pos:column="11"/></condition><then pos:line="82" pos:column="11"> <block pos:line="82" pos:column="12">{
    <comment type="block" pos:line="83" pos:column="5">/* Is this the first call in a new negotiation? */</comment>
    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">(<expr><name><name pos:line="84" pos:column="8">neg_ctx<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">context<pos:position pos:line="84" pos:column="24"/></name></name></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25"> <block pos:line="84" pos:column="26">{
      <comment type="block" pos:line="85" pos:column="7">/* The server rejected our authentication and hasn't suppled any more
         negotiation mechanisms */</comment>
      <return pos:line="87" pos:column="7">return <expr><name pos:line="87" pos:column="14">CURLE_LOGIN_DENIED<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/* We have to acquire credentials and allocate memory for the context */</comment>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">neg_ctx<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">credentials<pos:position pos:line="91" pos:column="25"/></name></name> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <call><name pos:line="91" pos:column="28">malloc<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><sizeof pos:line="91" pos:column="35">sizeof<argument_list pos:line="91" pos:column="41">(<argument><expr><name pos:line="91" pos:column="42">CredHandle<pos:position pos:line="91" pos:column="52"/></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">neg_ctx<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">-&gt;<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="14">context<pos:position pos:line="92" pos:column="21"/></name></name> <operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator> <call><name pos:line="92" pos:column="24">malloc<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><sizeof pos:line="92" pos:column="31">sizeof<argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">CtxtHandle<pos:position pos:line="92" pos:column="48"/></name></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="51"/></expr_stmt>

    <if pos:line="94" pos:column="5">if<condition pos:line="94" pos:column="7">(<expr><operator pos:line="94" pos:column="8">!<pos:position pos:line="94" pos:column="9"/></operator><name><name pos:line="94" pos:column="9">neg_ctx<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">credentials<pos:position pos:line="94" pos:column="29"/></name></name> <operator pos:line="94" pos:column="30">||<pos:position pos:line="94" pos:column="32"/></operator> <operator pos:line="94" pos:column="33">!<pos:position pos:line="94" pos:column="34"/></operator><name><name pos:line="94" pos:column="34">neg_ctx<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">-&gt;<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="43">context<pos:position pos:line="94" pos:column="50"/></name></name></expr>)<pos:position pos:line="94" pos:column="51"/></condition><then pos:line="94" pos:column="51">
      <block type="pseudo"><return pos:line="95" pos:column="7">return <expr><name pos:line="95" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></return></block></then></if>

    <if pos:line="97" pos:column="5">if<condition pos:line="97" pos:column="7">(<expr><name pos:line="97" pos:column="8">userp<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">&amp;&amp;<pos:position pos:line="97" pos:column="24"/></operator> <operator pos:line="97" pos:column="17">*<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">userp<pos:position pos:line="97" pos:column="23"/></name></expr>)<pos:position pos:line="97" pos:column="24"/></condition><then pos:line="97" pos:column="24"> <block pos:line="97" pos:column="25">{
      <comment type="block" pos:line="98" pos:column="7">/* Populate our identity structure */</comment>
      <expr_stmt><expr><name pos:line="99" pos:column="7">result<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <call><name pos:line="99" pos:column="16">Curl_create_sspi_identity<pos:position pos:line="99" pos:column="41"/></name><argument_list pos:line="99" pos:column="41">(<argument><expr><name pos:line="99" pos:column="42">userp<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="49">passwdp<pos:position pos:line="99" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="58">&amp;<pos:position pos:line="99" pos:column="63"/></operator><name><name pos:line="99" pos:column="59">neg_ctx<pos:position pos:line="99" pos:column="66"/></name><operator pos:line="99" pos:column="66">-&gt;<pos:position pos:line="99" pos:column="71"/></operator><name pos:line="99" pos:column="68">identity<pos:position pos:line="99" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>
      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><name pos:line="100" pos:column="10">result<pos:position pos:line="100" pos:column="16"/></name></expr>)<pos:position pos:line="100" pos:column="17"/></condition><then pos:line="100" pos:column="17">
        <block type="pseudo"><return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">result<pos:position pos:line="101" pos:column="22"/></name></expr>;<pos:position pos:line="101" pos:column="23"/></return></block></then></if>

      <comment type="block" pos:line="103" pos:column="7">/* Allow proper cleanup of the identity structure */</comment>
      <expr_stmt><expr><name><name pos:line="104" pos:column="7">neg_ctx<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">p_identity<pos:position pos:line="104" pos:column="26"/></name></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <operator pos:line="104" pos:column="29">&amp;<pos:position pos:line="104" pos:column="34"/></operator><name><name pos:line="104" pos:column="30">neg_ctx<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">-&gt;<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="39">identity<pos:position pos:line="104" pos:column="47"/></name></name></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then>
    <else pos:line="106" pos:column="5">else
      <comment type="block" pos:line="107" pos:column="7">/* Use the current Windows user */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="7">neg_ctx<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">-&gt;<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="16">p_identity<pos:position pos:line="108" pos:column="26"/></name></name> <operator pos:line="108" pos:column="27">=<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="29">NULL<pos:position pos:line="108" pos:column="33"/></name></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="110" pos:column="5">/* Acquire our credientials handle */</comment>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">neg_ctx<pos:position pos:line="111" pos:column="12"/></name><operator pos:line="111" pos:column="12">-&gt;<pos:position pos:line="111" pos:column="17"/></operator><name pos:line="111" pos:column="14">status<pos:position pos:line="111" pos:column="20"/></name></name> <operator pos:line="111" pos:column="21">=<pos:position pos:line="111" pos:column="22"/></operator>
      <call><name><name pos:line="112" pos:column="7">s_pSecFn<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">-&gt;<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="17">AcquireCredentialsHandle<pos:position pos:line="112" pos:column="41"/></name></name><argument_list pos:line="112" pos:column="41">(<argument><expr><name pos:line="112" pos:column="42">NULL<pos:position pos:line="112" pos:column="46"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="113" pos:column="42">(<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="43">TCHAR<pos:position pos:line="113" pos:column="48"/></name> <operator pos:line="113" pos:column="49">*<pos:position pos:line="113" pos:column="50"/></operator><operator pos:line="113" pos:column="50">)<pos:position pos:line="113" pos:column="51"/></operator> <call><name pos:line="113" pos:column="52">TEXT<pos:position pos:line="113" pos:column="56"/></name><argument_list pos:line="113" pos:column="56">(<argument><expr><name pos:line="113" pos:column="57">SP_NAME_NEGOTIATE<pos:position pos:line="113" pos:column="74"/></name></expr></argument>)<pos:position pos:line="113" pos:column="75"/></argument_list></call></expr></argument>,
                                         <argument><expr><name pos:line="114" pos:column="42">SECPKG_CRED_OUTBOUND<pos:position pos:line="114" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="64">NULL<pos:position pos:line="114" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="115" pos:column="42">neg_ctx<pos:position pos:line="115" pos:column="49"/></name><operator pos:line="115" pos:column="49">-&gt;<pos:position pos:line="115" pos:column="54"/></operator><name pos:line="115" pos:column="51">p_identity<pos:position pos:line="115" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="63">NULL<pos:position pos:line="115" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="69">NULL<pos:position pos:line="115" pos:column="73"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="116" pos:column="42">neg_ctx<pos:position pos:line="116" pos:column="49"/></name><operator pos:line="116" pos:column="49">-&gt;<pos:position pos:line="116" pos:column="54"/></operator><name pos:line="116" pos:column="51">credentials<pos:position pos:line="116" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="64">&amp;<pos:position pos:line="116" pos:column="69"/></operator><name pos:line="116" pos:column="65">expiry<pos:position pos:line="116" pos:column="71"/></name></expr></argument>)<pos:position pos:line="116" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="73"/></expr_stmt>
    <if pos:line="117" pos:column="5">if<condition pos:line="117" pos:column="7">(<expr><name><name pos:line="117" pos:column="8">neg_ctx<pos:position pos:line="117" pos:column="15"/></name><operator pos:line="117" pos:column="15">-&gt;<pos:position pos:line="117" pos:column="20"/></operator><name pos:line="117" pos:column="17">status<pos:position pos:line="117" pos:column="23"/></name></name> <operator pos:line="117" pos:column="24">!=<pos:position pos:line="117" pos:column="26"/></operator> <name pos:line="117" pos:column="27">SEC_E_OK<pos:position pos:line="117" pos:column="35"/></name></expr>)<pos:position pos:line="117" pos:column="36"/></condition><then pos:line="117" pos:column="36">
      <block type="pseudo"><return pos:line="118" pos:column="7">return <expr><name pos:line="118" pos:column="14">CURLE_LOGIN_DENIED<pos:position pos:line="118" pos:column="32"/></name></expr>;<pos:position pos:line="118" pos:column="33"/></return></block></then></if>
  }<pos:position pos:line="119" pos:column="4"/></block></then>
  <else pos:line="120" pos:column="3">else <block pos:line="120" pos:column="8">{
    <expr_stmt><expr><name pos:line="121" pos:column="5">result<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">=<pos:position pos:line="121" pos:column="13"/></operator> <call><name pos:line="121" pos:column="14">Curl_base64_decode<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">header<pos:position pos:line="121" pos:column="39"/></name></expr></argument>,
                                <argument><expr><operator pos:line="122" pos:column="33">(<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">unsigned<pos:position pos:line="122" pos:column="42"/></name> <name pos:line="122" pos:column="43">char<pos:position pos:line="122" pos:column="47"/></name> <operator pos:line="122" pos:column="48">*<pos:position pos:line="122" pos:column="49"/></operator><operator pos:line="122" pos:column="49">*<pos:position pos:line="122" pos:column="50"/></operator><operator pos:line="122" pos:column="50">)<pos:position pos:line="122" pos:column="51"/></operator><operator pos:line="122" pos:column="51">&amp;<pos:position pos:line="122" pos:column="56"/></operator><name pos:line="122" pos:column="52">input_token<pos:position pos:line="122" pos:column="63"/></name></expr></argument>,
                                <argument><expr><operator pos:line="123" pos:column="33">&amp;<pos:position pos:line="123" pos:column="38"/></operator><name pos:line="123" pos:column="34">input_token_len<pos:position pos:line="123" pos:column="49"/></name></expr></argument>)<pos:position pos:line="123" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="51"/></expr_stmt>
    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">(<expr><name pos:line="124" pos:column="8">result<pos:position pos:line="124" pos:column="14"/></name></expr>)<pos:position pos:line="124" pos:column="15"/></condition><then pos:line="124" pos:column="15">
      <block type="pseudo"><return pos:line="125" pos:column="7">return <expr><name pos:line="125" pos:column="14">result<pos:position pos:line="125" pos:column="20"/></name></expr>;<pos:position pos:line="125" pos:column="21"/></return></block></then></if>

    <if pos:line="127" pos:column="5">if<condition pos:line="127" pos:column="7">(<expr><operator pos:line="127" pos:column="8">!<pos:position pos:line="127" pos:column="9"/></operator><name pos:line="127" pos:column="9">input_token_len<pos:position pos:line="127" pos:column="24"/></name></expr>)<pos:position pos:line="127" pos:column="25"/></condition><then pos:line="127" pos:column="25"> <block pos:line="127" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="128" pos:column="7">infof<pos:position pos:line="128" pos:column="12"/></name><argument_list pos:line="128" pos:column="12">(<argument><expr><name><name pos:line="128" pos:column="13">conn<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">-&gt;<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="19">data<pos:position pos:line="128" pos:column="23"/></name></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="129" pos:column="13">"Negotiate handshake failure (empty challenge message)\n"<pos:position pos:line="129" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="72"/></expr_stmt>

      <return pos:line="131" pos:column="7">return <expr><name pos:line="131" pos:column="14">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="131" pos:column="40"/></name></expr>;<pos:position pos:line="131" pos:column="41"/></return>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>
  }<pos:position pos:line="133" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="135" pos:column="3">/* Setup the "output" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="136" pos:column="3">out_buff_desc<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">.<pos:position pos:line="136" pos:column="17"/></operator><name pos:line="136" pos:column="17">ulVersion<pos:position pos:line="136" pos:column="26"/></name></name> <operator pos:line="136" pos:column="27">=<pos:position pos:line="136" pos:column="28"/></operator> <name pos:line="136" pos:column="29">SECBUFFER_VERSION<pos:position pos:line="136" pos:column="46"/></name></expr>;<pos:position pos:line="136" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="137" pos:column="3">out_buff_desc<pos:position pos:line="137" pos:column="16"/></name><operator pos:line="137" pos:column="16">.<pos:position pos:line="137" pos:column="17"/></operator><name pos:line="137" pos:column="17">cBuffers<pos:position pos:line="137" pos:column="25"/></name></name>  <operator pos:line="137" pos:column="27">=<pos:position pos:line="137" pos:column="28"/></operator> <literal type="number" pos:line="137" pos:column="29">1<pos:position pos:line="137" pos:column="30"/></literal></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="138" pos:column="3">out_buff_desc<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">.<pos:position pos:line="138" pos:column="17"/></operator><name pos:line="138" pos:column="17">pBuffers<pos:position pos:line="138" pos:column="25"/></name></name>  <operator pos:line="138" pos:column="27">=<pos:position pos:line="138" pos:column="28"/></operator> <operator pos:line="138" pos:column="29">&amp;<pos:position pos:line="138" pos:column="34"/></operator><name pos:line="138" pos:column="30">out_sec_buff<pos:position pos:line="138" pos:column="42"/></name></expr>;<pos:position pos:line="138" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="139" pos:column="3">out_sec_buff<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">.<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">BufferType<pos:position pos:line="139" pos:column="26"/></name></name> <operator pos:line="139" pos:column="27">=<pos:position pos:line="139" pos:column="28"/></operator> <name pos:line="139" pos:column="29">SECBUFFER_TOKEN<pos:position pos:line="139" pos:column="44"/></name></expr>;<pos:position pos:line="139" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="140" pos:column="3">out_sec_buff<pos:position pos:line="140" pos:column="15"/></name><operator pos:line="140" pos:column="15">.<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="16">pvBuffer<pos:position pos:line="140" pos:column="24"/></name></name>   <operator pos:line="140" pos:column="27">=<pos:position pos:line="140" pos:column="28"/></operator> <name><name pos:line="140" pos:column="29">neg_ctx<pos:position pos:line="140" pos:column="36"/></name><operator pos:line="140" pos:column="36">-&gt;<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="38">output_token<pos:position pos:line="140" pos:column="50"/></name></name></expr>;<pos:position pos:line="140" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="141" pos:column="3">out_sec_buff<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">.<pos:position pos:line="141" pos:column="16"/></operator><name pos:line="141" pos:column="16">cbBuffer<pos:position pos:line="141" pos:column="24"/></name></name>   <operator pos:line="141" pos:column="27">=<pos:position pos:line="141" pos:column="28"/></operator> <call><name pos:line="141" pos:column="29">curlx_uztoul<pos:position pos:line="141" pos:column="41"/></name><argument_list pos:line="141" pos:column="41">(<argument><expr><name><name pos:line="141" pos:column="42">neg_ctx<pos:position pos:line="141" pos:column="49"/></name><operator pos:line="141" pos:column="49">-&gt;<pos:position pos:line="141" pos:column="54"/></operator><name pos:line="141" pos:column="51">token_max<pos:position pos:line="141" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="143" pos:column="3">/* Setup the "input" security buffer if present */</comment>
  <if pos:line="144" pos:column="3">if<condition pos:line="144" pos:column="5">(<expr><name pos:line="144" pos:column="6">input_token<pos:position pos:line="144" pos:column="17"/></name></expr>)<pos:position pos:line="144" pos:column="18"/></condition><then pos:line="144" pos:column="18"> <block pos:line="144" pos:column="19">{
    <expr_stmt><expr><name><name pos:line="145" pos:column="5">in_buff_desc<pos:position pos:line="145" pos:column="17"/></name><operator pos:line="145" pos:column="17">.<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="18">ulVersion<pos:position pos:line="145" pos:column="27"/></name></name> <operator pos:line="145" pos:column="28">=<pos:position pos:line="145" pos:column="29"/></operator> <name pos:line="145" pos:column="30">SECBUFFER_VERSION<pos:position pos:line="145" pos:column="47"/></name></expr>;<pos:position pos:line="145" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="146" pos:column="5">in_buff_desc<pos:position pos:line="146" pos:column="17"/></name><operator pos:line="146" pos:column="17">.<pos:position pos:line="146" pos:column="18"/></operator><name pos:line="146" pos:column="18">cBuffers<pos:position pos:line="146" pos:column="26"/></name></name>  <operator pos:line="146" pos:column="28">=<pos:position pos:line="146" pos:column="29"/></operator> <literal type="number" pos:line="146" pos:column="30">1<pos:position pos:line="146" pos:column="31"/></literal></expr>;<pos:position pos:line="146" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="147" pos:column="5">in_buff_desc<pos:position pos:line="147" pos:column="17"/></name><operator pos:line="147" pos:column="17">.<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">pBuffers<pos:position pos:line="147" pos:column="26"/></name></name>  <operator pos:line="147" pos:column="28">=<pos:position pos:line="147" pos:column="29"/></operator> <operator pos:line="147" pos:column="30">&amp;<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="31">in_sec_buff<pos:position pos:line="147" pos:column="42"/></name></expr>;<pos:position pos:line="147" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="148" pos:column="5">in_sec_buff<pos:position pos:line="148" pos:column="16"/></name><operator pos:line="148" pos:column="16">.<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="17">BufferType<pos:position pos:line="148" pos:column="27"/></name></name> <operator pos:line="148" pos:column="28">=<pos:position pos:line="148" pos:column="29"/></operator> <name pos:line="148" pos:column="30">SECBUFFER_TOKEN<pos:position pos:line="148" pos:column="45"/></name></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="149" pos:column="5">in_sec_buff<pos:position pos:line="149" pos:column="16"/></name><operator pos:line="149" pos:column="16">.<pos:position pos:line="149" pos:column="17"/></operator><name pos:line="149" pos:column="17">pvBuffer<pos:position pos:line="149" pos:column="25"/></name></name>   <operator pos:line="149" pos:column="28">=<pos:position pos:line="149" pos:column="29"/></operator> <name pos:line="149" pos:column="30">input_token<pos:position pos:line="149" pos:column="41"/></name></expr>;<pos:position pos:line="149" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="150" pos:column="5">in_sec_buff<pos:position pos:line="150" pos:column="16"/></name><operator pos:line="150" pos:column="16">.<pos:position pos:line="150" pos:column="17"/></operator><name pos:line="150" pos:column="17">cbBuffer<pos:position pos:line="150" pos:column="25"/></name></name>   <operator pos:line="150" pos:column="28">=<pos:position pos:line="150" pos:column="29"/></operator> <call><name pos:line="150" pos:column="30">curlx_uztoul<pos:position pos:line="150" pos:column="42"/></name><argument_list pos:line="150" pos:column="42">(<argument><expr><name pos:line="150" pos:column="43">input_token_len<pos:position pos:line="150" pos:column="58"/></name></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="151" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="153" pos:column="3">/* Generate our message */</comment>
  <expr_stmt><expr><name><name pos:line="154" pos:column="3">neg_ctx<pos:position pos:line="154" pos:column="10"/></name><operator pos:line="154" pos:column="10">-&gt;<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="12">status<pos:position pos:line="154" pos:column="18"/></name></name> <operator pos:line="154" pos:column="19">=<pos:position pos:line="154" pos:column="20"/></operator> <call><name><name pos:line="154" pos:column="21">s_pSecFn<pos:position pos:line="154" pos:column="29"/></name><operator pos:line="154" pos:column="29">-&gt;<pos:position pos:line="154" pos:column="34"/></operator><name pos:line="154" pos:column="31">InitializeSecurityContext<pos:position pos:line="154" pos:column="56"/></name></name><argument_list pos:line="154" pos:column="56">(
    <argument><expr><name><name pos:line="155" pos:column="5">neg_ctx<pos:position pos:line="155" pos:column="12"/></name><operator pos:line="155" pos:column="12">-&gt;<pos:position pos:line="155" pos:column="17"/></operator><name pos:line="155" pos:column="14">credentials<pos:position pos:line="155" pos:column="25"/></name></name></expr></argument>,
    <argument><expr><ternary><condition><expr><name pos:line="156" pos:column="5">input_token<pos:position pos:line="156" pos:column="16"/></name></expr> ?<pos:position pos:line="156" pos:column="18"/></condition><then pos:line="156" pos:column="18"> <expr><name><name pos:line="156" pos:column="19">neg_ctx<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">-&gt;<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="28">context<pos:position pos:line="156" pos:column="35"/></name></name></expr> <pos:position pos:line="156" pos:column="36"/></then><else pos:line="156" pos:column="36">: <expr><name pos:line="156" pos:column="38">NULL<pos:position pos:line="156" pos:column="42"/></name></expr></else></ternary></expr></argument>,
    <argument><expr><name><name pos:line="157" pos:column="5">neg_ctx<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">server_name<pos:position pos:line="157" pos:column="25"/></name></name></expr></argument>,
    <argument><expr><name pos:line="158" pos:column="5">ISC_REQ_CONFIDENTIALITY<pos:position pos:line="158" pos:column="28"/></name></expr></argument>,
    <argument><expr><literal type="number" pos:line="159" pos:column="5">0<pos:position pos:line="159" pos:column="6"/></literal></expr></argument>,
    <argument><expr><name pos:line="160" pos:column="5">SECURITY_NATIVE_DREP<pos:position pos:line="160" pos:column="25"/></name></expr></argument>,
    <argument><expr><ternary><condition><expr><name pos:line="161" pos:column="5">input_token<pos:position pos:line="161" pos:column="16"/></name></expr> ?<pos:position pos:line="161" pos:column="18"/></condition><then pos:line="161" pos:column="18"> <expr><operator pos:line="161" pos:column="19">&amp;<pos:position pos:line="161" pos:column="24"/></operator><name pos:line="161" pos:column="20">in_buff_desc<pos:position pos:line="161" pos:column="32"/></name></expr> <pos:position pos:line="161" pos:column="33"/></then><else pos:line="161" pos:column="33">: <expr><name pos:line="161" pos:column="35">NULL<pos:position pos:line="161" pos:column="39"/></name></expr></else></ternary></expr></argument>,
    <argument><expr><literal type="number" pos:line="162" pos:column="5">0<pos:position pos:line="162" pos:column="6"/></literal></expr></argument>,
    <argument><expr><name><name pos:line="163" pos:column="5">neg_ctx<pos:position pos:line="163" pos:column="12"/></name><operator pos:line="163" pos:column="12">-&gt;<pos:position pos:line="163" pos:column="17"/></operator><name pos:line="163" pos:column="14">context<pos:position pos:line="163" pos:column="21"/></name></name></expr></argument>,
    <argument><expr><operator pos:line="164" pos:column="5">&amp;<pos:position pos:line="164" pos:column="10"/></operator><name pos:line="164" pos:column="6">out_buff_desc<pos:position pos:line="164" pos:column="19"/></name></expr></argument>,
    <argument><expr><operator pos:line="165" pos:column="5">&amp;<pos:position pos:line="165" pos:column="10"/></operator><name pos:line="165" pos:column="6">attrs<pos:position pos:line="165" pos:column="11"/></name></expr></argument>,
    <argument><expr><operator pos:line="166" pos:column="5">&amp;<pos:position pos:line="166" pos:column="10"/></operator><name pos:line="166" pos:column="6">expiry<pos:position pos:line="166" pos:column="12"/></name></expr></argument>)<pos:position pos:line="166" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="168" pos:column="3">Curl_safefree<pos:position pos:line="168" pos:column="16"/></name><argument_list pos:line="168" pos:column="16">(<argument><expr><name pos:line="168" pos:column="17">input_token<pos:position pos:line="168" pos:column="28"/></name></expr></argument>)<pos:position pos:line="168" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="30"/></expr_stmt>

  <if pos:line="170" pos:column="3">if<condition pos:line="170" pos:column="5">(<expr><call><name pos:line="170" pos:column="6">GSS_ERROR<pos:position pos:line="170" pos:column="15"/></name><argument_list pos:line="170" pos:column="15">(<argument><expr><name><name pos:line="170" pos:column="16">neg_ctx<pos:position pos:line="170" pos:column="23"/></name><operator pos:line="170" pos:column="23">-&gt;<pos:position pos:line="170" pos:column="28"/></operator><name pos:line="170" pos:column="25">status<pos:position pos:line="170" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="33"/></condition><then pos:line="170" pos:column="33">
    <block type="pseudo"><return pos:line="171" pos:column="5">return <expr><name pos:line="171" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="171" pos:column="31"/></name></expr>;<pos:position pos:line="171" pos:column="32"/></return></block></then></if>

  <if pos:line="173" pos:column="3">if<condition pos:line="173" pos:column="5">(<expr><name><name pos:line="173" pos:column="6">neg_ctx<pos:position pos:line="173" pos:column="13"/></name><operator pos:line="173" pos:column="13">-&gt;<pos:position pos:line="173" pos:column="18"/></operator><name pos:line="173" pos:column="15">status<pos:position pos:line="173" pos:column="21"/></name></name> <operator pos:line="173" pos:column="22">==<pos:position pos:line="173" pos:column="24"/></operator> <name pos:line="173" pos:column="25">SEC_I_COMPLETE_NEEDED<pos:position pos:line="173" pos:column="46"/></name> <operator pos:line="173" pos:column="47">||<pos:position pos:line="173" pos:column="49"/></operator>
     <name><name pos:line="174" pos:column="6">neg_ctx<pos:position pos:line="174" pos:column="13"/></name><operator pos:line="174" pos:column="13">-&gt;<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="15">status<pos:position pos:line="174" pos:column="21"/></name></name> <operator pos:line="174" pos:column="22">==<pos:position pos:line="174" pos:column="24"/></operator> <name pos:line="174" pos:column="25">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="174" pos:column="52"/></name></expr>)<pos:position pos:line="174" pos:column="53"/></condition><then pos:line="174" pos:column="53"> <block pos:line="174" pos:column="54">{
    <expr_stmt><expr><name><name pos:line="175" pos:column="5">neg_ctx<pos:position pos:line="175" pos:column="12"/></name><operator pos:line="175" pos:column="12">-&gt;<pos:position pos:line="175" pos:column="17"/></operator><name pos:line="175" pos:column="14">status<pos:position pos:line="175" pos:column="20"/></name></name> <operator pos:line="175" pos:column="21">=<pos:position pos:line="175" pos:column="22"/></operator> <call><name><name pos:line="175" pos:column="23">s_pSecFn<pos:position pos:line="175" pos:column="31"/></name><operator pos:line="175" pos:column="31">-&gt;<pos:position pos:line="175" pos:column="36"/></operator><name pos:line="175" pos:column="33">CompleteAuthToken<pos:position pos:line="175" pos:column="50"/></name></name><argument_list pos:line="175" pos:column="50">(<argument><expr><name><name pos:line="175" pos:column="51">neg_ctx<pos:position pos:line="175" pos:column="58"/></name><operator pos:line="175" pos:column="58">-&gt;<pos:position pos:line="175" pos:column="63"/></operator><name pos:line="175" pos:column="60">context<pos:position pos:line="175" pos:column="67"/></name></name></expr></argument>,
                                                  <argument><expr><operator pos:line="176" pos:column="51">&amp;<pos:position pos:line="176" pos:column="56"/></operator><name pos:line="176" pos:column="52">out_buff_desc<pos:position pos:line="176" pos:column="65"/></name></expr></argument>)<pos:position pos:line="176" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="67"/></expr_stmt>
    <if pos:line="177" pos:column="5">if<condition pos:line="177" pos:column="7">(<expr><call><name pos:line="177" pos:column="8">GSS_ERROR<pos:position pos:line="177" pos:column="17"/></name><argument_list pos:line="177" pos:column="17">(<argument><expr><name><name pos:line="177" pos:column="18">neg_ctx<pos:position pos:line="177" pos:column="25"/></name><operator pos:line="177" pos:column="25">-&gt;<pos:position pos:line="177" pos:column="30"/></operator><name pos:line="177" pos:column="27">status<pos:position pos:line="177" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="35"/></condition><then pos:line="177" pos:column="35">
      <block type="pseudo"><return pos:line="178" pos:column="7">return <expr><name pos:line="178" pos:column="14">CURLE_RECV_ERROR<pos:position pos:line="178" pos:column="30"/></name></expr>;<pos:position pos:line="178" pos:column="31"/></return></block></then></if>
  }<pos:position pos:line="179" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="181" pos:column="3">neg_ctx<pos:position pos:line="181" pos:column="10"/></name><operator pos:line="181" pos:column="10">-&gt;<pos:position pos:line="181" pos:column="15"/></operator><name pos:line="181" pos:column="12">output_token_length<pos:position pos:line="181" pos:column="31"/></name></name> <operator pos:line="181" pos:column="32">=<pos:position pos:line="181" pos:column="33"/></operator> <name><name pos:line="181" pos:column="34">out_sec_buff<pos:position pos:line="181" pos:column="46"/></name><operator pos:line="181" pos:column="46">.<pos:position pos:line="181" pos:column="47"/></operator><name pos:line="181" pos:column="47">cbBuffer<pos:position pos:line="181" pos:column="55"/></name></name></expr>;<pos:position pos:line="181" pos:column="56"/></expr_stmt>

  <return pos:line="183" pos:column="3">return <expr><name pos:line="183" pos:column="10">CURLE_OK<pos:position pos:line="183" pos:column="18"/></name></expr>;<pos:position pos:line="183" pos:column="19"/></return>
}<pos:position pos:line="184" pos:column="2"/></block></function></unit>

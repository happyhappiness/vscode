<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2337_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_ntlm_type1_message<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">Curl_easy<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">data<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">userp<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="3" pos:column="46">const<pos:position pos:line="3" pos:column="51"/></specifier> <name pos:line="3" pos:column="52">char<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">passwdp<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
                                             <parameter><decl><type><name><name pos:line="4" pos:column="46">struct<pos:position pos:line="4" pos:column="52"/></name> <name pos:line="4" pos:column="53">ntlmdata<pos:position pos:line="4" pos:column="61"/></name></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier></type><name pos:line="4" pos:column="63">ntlm<pos:position pos:line="4" pos:column="67"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="5" pos:column="46">char<pos:position pos:line="5" pos:column="50"/></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier><modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier></type><name pos:line="5" pos:column="53">outptr<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="61">size_t<pos:position pos:line="5" pos:column="67"/></name> <modifier pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></modifier></type><name pos:line="5" pos:column="69">outlen<pos:position pos:line="5" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="76"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">PSecPkgInfo<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">SecurityPackage<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SecBuffer<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">type_1_buf<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">SecBufferDesc<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">type_1_desc<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">SECURITY_STATUS<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">status<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">long<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">attrs<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">TimeStamp<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">expiry<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt> <comment type="block" pos:line="12" pos:column="21">/* For Windows 9x compatibility of SSPI calls */</comment>

  <comment type="block" pos:line="14" pos:column="3">/* Clean up any former leftovers and initialise to defaults */</comment>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">Curl_auth_ntlm_cleanup<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">ntlm<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Query the security package for NTLM */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">status<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name><name pos:line="18" pos:column="12">s_pSecFn<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">QuerySecurityPackageInfo<pos:position pos:line="18" pos:column="46"/></name></name><argument_list pos:line="18" pos:column="46">(<argument><expr><operator pos:line="18" pos:column="47">(<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">TCHAR<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">*<pos:position pos:line="18" pos:column="55"/></operator><operator pos:line="18" pos:column="55">)<pos:position pos:line="18" pos:column="56"/></operator> <call><name pos:line="18" pos:column="57">TEXT<pos:position pos:line="18" pos:column="61"/></name><argument_list pos:line="18" pos:column="61">(<argument><expr><name pos:line="18" pos:column="62">SP_NAME_NTLM<pos:position pos:line="18" pos:column="74"/></name></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr></argument>,
                                              <argument><expr><operator pos:line="19" pos:column="47">&amp;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="48">SecurityPackage<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">status<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">!=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">SEC_E_OK<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">CURLE_NOT_BUILT_IN<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="23" pos:column="3">ntlm<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">token_max<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name><name pos:line="23" pos:column="21">SecurityPackage<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">cbMaxToken<pos:position pos:line="23" pos:column="48"/></name></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Release the package buffer as it is not required anymore */</comment>
  <expr_stmt><expr><call><name><name pos:line="26" pos:column="3">s_pSecFn<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">FreeContextBuffer<pos:position pos:line="26" pos:column="30"/></name></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">SecurityPackage<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* Allocate our output buffer */</comment>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">ntlm<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">output_token<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">malloc<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name><name pos:line="29" pos:column="31">ntlm<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">token_max<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><name><name pos:line="30" pos:column="7">ntlm<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">output_token<pos:position pos:line="30" pos:column="25"/></name></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
    <block type="pseudo"><return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></return></block></then></if>

  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><name pos:line="33" pos:column="6">userp<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">&amp;&amp;<pos:position pos:line="33" pos:column="22"/></operator> <operator pos:line="33" pos:column="15">*<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">userp<pos:position pos:line="33" pos:column="21"/></name></expr>)<pos:position pos:line="33" pos:column="22"/></condition><then pos:line="33" pos:column="22"> <block pos:line="33" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">CURLcode<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">result<pos:position pos:line="34" pos:column="20"/></name></decl>;<pos:position pos:line="34" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* Populate our identity structure */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">result<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">Curl_create_sspi_identity<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">userp<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">passwdp<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="56">&amp;<pos:position pos:line="37" pos:column="61"/></operator><name><name pos:line="37" pos:column="57">ntlm<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">identity<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name pos:line="38" pos:column="8">result<pos:position pos:line="38" pos:column="14"/></name></expr>)<pos:position pos:line="38" pos:column="15"/></condition><then pos:line="38" pos:column="15">
      <block type="pseudo"><return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">result<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/* Allow proper cleanup of the identity structure */</comment>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">ntlm<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">p_identity<pos:position pos:line="42" pos:column="21"/></name></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name><name pos:line="42" pos:column="25">ntlm<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">identity<pos:position pos:line="42" pos:column="39"/></name></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then>
  <else pos:line="44" pos:column="3">else
    <comment type="block" pos:line="45" pos:column="5">/* Use the current Windows user */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="5">ntlm<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">p_identity<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="48" pos:column="3">/* Allocate our credentials handle */</comment>
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">ntlm<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">credentials<pos:position pos:line="49" pos:column="20"/></name></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">malloc<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><sizeof pos:line="49" pos:column="30">sizeof<argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">CredHandle<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="50"/></expr_stmt>
  <if pos:line="50" pos:column="3">if<condition pos:line="50" pos:column="5">(<expr><operator pos:line="50" pos:column="6">!<pos:position pos:line="50" pos:column="7"/></operator><name><name pos:line="50" pos:column="7">ntlm<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">credentials<pos:position pos:line="50" pos:column="24"/></name></name></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25">
    <block type="pseudo"><return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">memset<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><name><name pos:line="53" pos:column="10">ntlm<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">credentials<pos:position pos:line="53" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="29">0<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="32">sizeof<argument_list pos:line="53" pos:column="38">(<argument><expr><name pos:line="53" pos:column="39">CredHandle<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* Acquire our credentials handle */</comment>
  <expr_stmt><expr><name pos:line="56" pos:column="3">status<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <call><name><name pos:line="56" pos:column="12">s_pSecFn<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">AcquireCredentialsHandle<pos:position pos:line="56" pos:column="46"/></name></name><argument_list pos:line="56" pos:column="46">(<argument><expr><name pos:line="56" pos:column="47">NULL<pos:position pos:line="56" pos:column="51"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="57" pos:column="47">(<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="48">TCHAR<pos:position pos:line="57" pos:column="53"/></name> <operator pos:line="57" pos:column="54">*<pos:position pos:line="57" pos:column="55"/></operator><operator pos:line="57" pos:column="55">)<pos:position pos:line="57" pos:column="56"/></operator> <call><name pos:line="57" pos:column="57">TEXT<pos:position pos:line="57" pos:column="61"/></name><argument_list pos:line="57" pos:column="61">(<argument><expr><name pos:line="57" pos:column="62">SP_NAME_NTLM<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr></argument>,
                                              <argument><expr><name pos:line="58" pos:column="47">SECPKG_CRED_OUTBOUND<pos:position pos:line="58" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="69">NULL<pos:position pos:line="58" pos:column="73"/></name></expr></argument>,
                                              <argument><expr><name><name pos:line="59" pos:column="47">ntlm<pos:position pos:line="59" pos:column="51"/></name><operator pos:line="59" pos:column="51">-&gt;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="53">p_identity<pos:position pos:line="59" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="65">NULL<pos:position pos:line="59" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="71">NULL<pos:position pos:line="59" pos:column="75"/></name></expr></argument>,
                                              <argument><expr><name><name pos:line="60" pos:column="47">ntlm<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">-&gt;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="53">credentials<pos:position pos:line="60" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="66">&amp;<pos:position pos:line="60" pos:column="71"/></operator><name pos:line="60" pos:column="67">expiry<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name pos:line="61" pos:column="6">status<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">!=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">SEC_E_OK<pos:position pos:line="61" pos:column="24"/></name></expr>)<pos:position pos:line="61" pos:column="25"/></condition><then pos:line="61" pos:column="25">
    <block type="pseudo"><return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></return></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Allocate our new context handle */</comment>
  <expr_stmt><expr><name><name pos:line="65" pos:column="3">ntlm<pos:position pos:line="65" pos:column="7"/></name><operator pos:line="65" pos:column="7">-&gt;<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="9">context<pos:position pos:line="65" pos:column="16"/></name></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <call><name pos:line="65" pos:column="19">malloc<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><sizeof pos:line="65" pos:column="26">sizeof<argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">CtxtHandle<pos:position pos:line="65" pos:column="43"/></name></expr></argument>)<pos:position pos:line="65" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><operator pos:line="66" pos:column="6">!<pos:position pos:line="66" pos:column="7"/></operator><name><name pos:line="66" pos:column="7">ntlm<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">-&gt;<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="13">context<pos:position pos:line="66" pos:column="20"/></name></name></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21">
    <block type="pseudo"><return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="67" pos:column="31"/></name></expr>;<pos:position pos:line="67" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="69" pos:column="3">memset<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><name><name pos:line="69" pos:column="10">ntlm<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">context<pos:position pos:line="69" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="25">0<pos:position pos:line="69" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="28">sizeof<argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">CtxtHandle<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>

  <comment type="block" pos:line="71" pos:column="3">/* Setup the type-1 "output" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="72" pos:column="3">type_1_desc<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">.<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">ulVersion<pos:position pos:line="72" pos:column="24"/></name></name> <operator pos:line="72" pos:column="25">=<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">SECBUFFER_VERSION<pos:position pos:line="72" pos:column="44"/></name></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">type_1_desc<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">.<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">cBuffers<pos:position pos:line="73" pos:column="23"/></name></name>  <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <literal type="number" pos:line="73" pos:column="27">1<pos:position pos:line="73" pos:column="28"/></literal></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="74" pos:column="3">type_1_desc<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">.<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">pBuffers<pos:position pos:line="74" pos:column="23"/></name></name>  <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <operator pos:line="74" pos:column="27">&amp;<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="28">type_1_buf<pos:position pos:line="74" pos:column="38"/></name></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="75" pos:column="3">type_1_buf<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">.<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">BufferType<pos:position pos:line="75" pos:column="24"/></name></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="27">SECBUFFER_TOKEN<pos:position pos:line="75" pos:column="42"/></name></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="76" pos:column="3">type_1_buf<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">.<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">pvBuffer<pos:position pos:line="76" pos:column="22"/></name></name>   <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <name><name pos:line="76" pos:column="27">ntlm<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">-&gt;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="33">output_token<pos:position pos:line="76" pos:column="45"/></name></name></expr>;<pos:position pos:line="76" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="77" pos:column="3">type_1_buf<pos:position pos:line="77" pos:column="13"/></name><operator pos:line="77" pos:column="13">.<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">cbBuffer<pos:position pos:line="77" pos:column="22"/></name></name>   <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <call><name pos:line="77" pos:column="27">curlx_uztoul<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name><name pos:line="77" pos:column="40">ntlm<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">-&gt;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="46">token_max<pos:position pos:line="77" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="57"/></expr_stmt>

  <comment type="block" pos:line="79" pos:column="3">/* Generate our type-1 message */</comment>
  <expr_stmt><expr><name pos:line="80" pos:column="3">status<pos:position pos:line="80" pos:column="9"/></name> <operator pos:line="80" pos:column="10">=<pos:position pos:line="80" pos:column="11"/></operator> <call><name><name pos:line="80" pos:column="12">s_pSecFn<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">-&gt;<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="22">InitializeSecurityContext<pos:position pos:line="80" pos:column="47"/></name></name><argument_list pos:line="80" pos:column="47">(<argument><expr><name><name pos:line="80" pos:column="48">ntlm<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">-&gt;<pos:position pos:line="80" pos:column="57"/></operator><name pos:line="80" pos:column="54">credentials<pos:position pos:line="80" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="67">NULL<pos:position pos:line="80" pos:column="71"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="81" pos:column="48">(<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="49">TCHAR<pos:position pos:line="81" pos:column="54"/></name> <operator pos:line="81" pos:column="55">*<pos:position pos:line="81" pos:column="56"/></operator><operator pos:line="81" pos:column="56">)<pos:position pos:line="81" pos:column="57"/></operator> <call><name pos:line="81" pos:column="58">TEXT<pos:position pos:line="81" pos:column="62"/></name><argument_list pos:line="81" pos:column="62">(<argument><expr><literal type="string" pos:line="81" pos:column="63">""<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr></argument>,
                                               <argument><expr><literal type="number" pos:line="82" pos:column="48">0<pos:position pos:line="82" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="51">0<pos:position pos:line="82" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="54">SECURITY_NETWORK_DREP<pos:position pos:line="82" pos:column="75"/></name></expr></argument>,
                                               <argument><expr><name pos:line="83" pos:column="48">NULL<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="54">0<pos:position pos:line="83" pos:column="55"/></literal></expr></argument>,
                                               <argument><expr><name><name pos:line="84" pos:column="48">ntlm<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">-&gt;<pos:position pos:line="84" pos:column="57"/></operator><name pos:line="84" pos:column="54">context<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="63">&amp;<pos:position pos:line="84" pos:column="68"/></operator><name pos:line="84" pos:column="64">type_1_desc<pos:position pos:line="84" pos:column="75"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="85" pos:column="48">&amp;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="49">attrs<pos:position pos:line="85" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="56">&amp;<pos:position pos:line="85" pos:column="61"/></operator><name pos:line="85" pos:column="57">expiry<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="65"/></expr_stmt>
  <if pos:line="86" pos:column="3">if<condition pos:line="86" pos:column="5">(<expr><name pos:line="86" pos:column="6">status<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">==<pos:position pos:line="86" pos:column="15"/></operator> <name pos:line="86" pos:column="16">SEC_I_COMPLETE_NEEDED<pos:position pos:line="86" pos:column="37"/></name> <operator pos:line="86" pos:column="38">||<pos:position pos:line="86" pos:column="40"/></operator>
    <name pos:line="87" pos:column="5">status<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">==<pos:position pos:line="87" pos:column="14"/></operator> <name pos:line="87" pos:column="15">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="87" pos:column="42"/></name></expr>)<pos:position pos:line="87" pos:column="43"/></condition><then pos:line="87" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="88" pos:column="5">s_pSecFn<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">CompleteAuthToken<pos:position pos:line="88" pos:column="32"/></name></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name><name pos:line="88" pos:column="33">ntlm<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">context<pos:position pos:line="88" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="48">&amp;<pos:position pos:line="88" pos:column="53"/></operator><name pos:line="88" pos:column="49">type_1_desc<pos:position pos:line="88" pos:column="60"/></name></expr></argument>)<pos:position pos:line="88" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt></block></then>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if<condition pos:line="89" pos:column="10">(<expr><name pos:line="89" pos:column="11">status<pos:position pos:line="89" pos:column="17"/></name> <operator pos:line="89" pos:column="18">!=<pos:position pos:line="89" pos:column="20"/></operator> <name pos:line="89" pos:column="21">SEC_E_OK<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">&amp;&amp;<pos:position pos:line="89" pos:column="40"/></operator> <name pos:line="89" pos:column="33">status<pos:position pos:line="89" pos:column="39"/></name> <operator pos:line="89" pos:column="40">!=<pos:position pos:line="89" pos:column="42"/></operator> <name pos:line="89" pos:column="43">SEC_I_CONTINUE_NEEDED<pos:position pos:line="89" pos:column="64"/></name></expr>)<pos:position pos:line="89" pos:column="65"/></condition><then pos:line="89" pos:column="65">
    <block type="pseudo"><return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="90" pos:column="28"/></name></expr>;<pos:position pos:line="90" pos:column="29"/></return></block></then></if></elseif></if>

  <comment type="block" pos:line="92" pos:column="3">/* Base64 encode the response */</comment>
  <return pos:line="93" pos:column="3">return <expr><call><name pos:line="93" pos:column="10">Curl_base64_encode<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name pos:line="93" pos:column="29">data<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="35">(<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="36">char<pos:position pos:line="93" pos:column="40"/></name> <operator pos:line="93" pos:column="41">*<pos:position pos:line="93" pos:column="42"/></operator><operator pos:line="93" pos:column="42">)<pos:position pos:line="93" pos:column="43"/></operator> <name><name pos:line="93" pos:column="44">ntlm<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">output_token<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="94" pos:column="29">type_1_buf<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">.<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="40">cbBuffer<pos:position pos:line="94" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">outptr<pos:position pos:line="94" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="58">outlen<pos:position pos:line="94" pos:column="64"/></name></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="66"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

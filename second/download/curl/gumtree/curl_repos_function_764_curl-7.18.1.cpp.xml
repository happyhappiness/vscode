<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_764_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_remove_handle<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">CURLM<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">multi_handle<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">CURL<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">curl_handle<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_multi<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">multi<pos:position pos:line="4" pos:column="27"/></name><init pos:line="4" pos:column="27">=<expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator>struct <name pos:line="4" pos:column="36">Curl_multi<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">multi_handle<pos:position pos:line="4" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_one_easy<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">easy<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* First, make some basic checks that the CURLM handle is a good handle */</comment>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><call><name pos:line="8" pos:column="7">GOOD_MULTI_HANDLE<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">multi<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* Verify that we got a somewhat good easy handle too */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><call><name pos:line="12" pos:column="7">GOOD_EASY_HANDLE<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">curl_handle<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLM_BAD_EASY_HANDLE<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if>

  <comment type="block" pos:line="15" pos:column="3">/* pick-up from the 'curl_handle' the kept position in the list */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">easy<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><operator pos:line="16" pos:column="11">(<pos:position pos:line="16" pos:column="12"/></operator>struct <name pos:line="16" pos:column="19">SessionHandle<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">curl_handle<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">)<pos:position pos:line="16" pos:column="47"/></operator><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">multi_pos<pos:position pos:line="16" pos:column="58"/></name></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">easy<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block pos:line="18" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">bool<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">premature<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><call pos:line="19" pos:column="22">(<name pos:line="19" pos:column="23">bool<pos:position pos:line="19" pos:column="27"/></name>)<argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">easy<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">state<pos:position pos:line="19" pos:column="40"/></name></name> <operator pos:line="19" pos:column="41">!=<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">CURLM_STATE_COMPLETED<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="67"/></decl_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* If the 'state' is not INIT or COMPLETED, we might need to do something
       nice to put the easy_handle in a good known state when this returns. */</comment>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">premature<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18">
      <comment type="block" pos:line="24" pos:column="7">/* this handle is "alive" so we need to count down the total number of
         alive connections when this is removed */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="7">multi<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">num_alive<pos:position pos:line="26" pos:column="23"/></name></name><operator pos:line="26" pos:column="23">--<pos:position pos:line="26" pos:column="25"/></operator></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt></block></then></if>

    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">easy<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">easy_conn<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">&amp;&amp;<pos:position pos:line="28" pos:column="34"/></operator>
        <operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name><name pos:line="29" pos:column="10">easy<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">easy_conn<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">send_pipe<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">size<pos:position pos:line="29" pos:column="42"/></name></name> <operator pos:line="29" pos:column="43">+<pos:position pos:line="29" pos:column="44"/></operator>
         <name><name pos:line="30" pos:column="10">easy<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">easy_conn<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">recv_pipe<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">size<pos:position pos:line="30" pos:column="42"/></name></name> <operator pos:line="30" pos:column="43">&gt;<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="45">1<pos:position pos:line="30" pos:column="46"/></literal><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="48">&amp;&amp;<pos:position pos:line="30" pos:column="58"/></operator>
        <name><name pos:line="31" pos:column="9">easy<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">state<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">&gt;<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="23">CURLM_STATE_WAITDO<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">&amp;&amp;<pos:position pos:line="31" pos:column="52"/></operator>
        <name><name pos:line="32" pos:column="9">easy<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">state<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">&lt;<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="23">CURLM_STATE_COMPLETED<pos:position pos:line="32" pos:column="44"/></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <block pos:line="32" pos:column="46">{
      <comment type="block" pos:line="33" pos:column="7">/* If the handle is in a pipeline and has started sending off its
         request but not received its reponse yet, we need to close
         connection. */</comment>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">easy<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">easy_conn<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">bits<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">.<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">close<pos:position pos:line="36" pos:column="34"/></name></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">TRUE<pos:position pos:line="36" pos:column="41"/></name></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
      <comment type="block" pos:line="37" pos:column="7">/* Set connection owner so that Curl_done() closes it.
         We can sefely do this here since connection is killed. */</comment>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">easy<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">easy_conn<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">data<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name><name pos:line="39" pos:column="31">easy<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">easy_handle<pos:position pos:line="39" pos:column="48"/></name></name></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* The timer must be shut down before easy-&gt;multi is set to NULL,
       else the timenode will remain in the splay tree after
       curl_easy_cleanup is called. */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">Curl_expire<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">easy<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">easy_handle<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="36">0<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>

    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name><name pos:line="47" pos:column="8">easy<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">easy_handle<pos:position pos:line="47" pos:column="25"/></name><operator pos:line="47" pos:column="25">-&gt;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="27">dns<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">.<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="31">hostcachetype<pos:position pos:line="47" pos:column="44"/></name></name> <operator pos:line="47" pos:column="45">==<pos:position pos:line="47" pos:column="47"/></operator> <name pos:line="47" pos:column="48">HCACHE_MULTI<pos:position pos:line="47" pos:column="60"/></name></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61"> <block pos:line="47" pos:column="62">{
      <comment type="block" pos:line="48" pos:column="7">/* clear out the usage of the shared DNS cache */</comment>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">easy<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">easy_handle<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">dns<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">hostcache<pos:position pos:line="49" pos:column="39"/></name></name> <operator pos:line="49" pos:column="40">=<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="42">NULL<pos:position pos:line="49" pos:column="46"/></name></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">easy<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">easy_handle<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">dns<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">.<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">hostcachetype<pos:position pos:line="50" pos:column="43"/></name></name> <operator pos:line="50" pos:column="44">=<pos:position pos:line="50" pos:column="45"/></operator> <name pos:line="50" pos:column="46">HCACHE_NONE<pos:position pos:line="50" pos:column="57"/></name></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* we must call Curl_done() here (if we still "own it") so that we don't
       leave a half-baked one around */</comment>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name><name pos:line="55" pos:column="8">easy<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">easy_conn<pos:position pos:line="55" pos:column="23"/></name></name> <operator pos:line="55" pos:column="24">&amp;&amp;<pos:position pos:line="55" pos:column="34"/></operator>
       <operator pos:line="56" pos:column="8">(<pos:position pos:line="56" pos:column="9"/></operator><name><name pos:line="56" pos:column="9">easy<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">easy_conn<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">data<pos:position pos:line="56" pos:column="30"/></name></name> <operator pos:line="56" pos:column="31">==<pos:position pos:line="56" pos:column="33"/></operator> <name><name pos:line="56" pos:column="34">easy<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">easy_handle<pos:position pos:line="56" pos:column="51"/></name></name><operator pos:line="56" pos:column="51">)<pos:position pos:line="56" pos:column="52"/></operator></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53"> <block pos:line="56" pos:column="54">{

      <comment type="block" pos:line="58" pos:column="7">/* Curl_done() clears the conn-&gt;data field to lose the association
         between the easy handle and the connection

         Note that this ignores the return code simply because there's nothing
         really useful to do with it anyway! */</comment>
      <expr_stmt><expr><operator pos:line="63" pos:column="7">(<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">void<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">)<pos:position pos:line="63" pos:column="13"/></operator><call><name pos:line="63" pos:column="13">Curl_done<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><operator pos:line="63" pos:column="23">&amp;<pos:position pos:line="63" pos:column="28"/></operator><name><name pos:line="63" pos:column="24">easy<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">easy_conn<pos:position pos:line="63" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="41">easy<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">result<pos:position pos:line="63" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">premature<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>

      <if pos:line="65" pos:column="7">if<condition pos:line="65" pos:column="9">(<expr><name><name pos:line="65" pos:column="10">easy<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">easy_conn<pos:position pos:line="65" pos:column="25"/></name></name></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
        <comment type="block" pos:line="66" pos:column="9">/* the connection is still alive, set back the association to enable
           the check below to trigger TRUE */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="9">easy<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">easy_conn<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">data<pos:position pos:line="68" pos:column="30"/></name></name> <operator pos:line="68" pos:column="31">=<pos:position pos:line="68" pos:column="32"/></operator> <name><name pos:line="68" pos:column="33">easy<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">easy_handle<pos:position pos:line="68" pos:column="50"/></name></name></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* If this easy_handle was the last one in charge for one or more
       connections a the shared connection cache, we might need to keep this
       handle around until either A) the connection is closed and killed
       properly, or B) another easy_handle uses the connection.

       The reason why we need to have a easy_handle associated with a live
       connection is simply that some connections will need a handle to get
       closed down properly. Currently, the only connections that need to keep
       a easy_handle handle around are using FTP(S). Such connections have
       the PROT_CLOSEACTION bit set.

       Thus, we need to check for all connections in the shared cache that
       points to this handle and are using PROT_CLOSEACTION. If there's any,
       we need to add this handle to the list of "easy handles kept around for
       nice connection closures".
     */</comment>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><call><name pos:line="87" pos:column="8">multi_conn_using<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">multi<pos:position pos:line="87" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="32">easy<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">-&gt;<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="38">easy_handle<pos:position pos:line="87" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="51"/></condition><then pos:line="87" pos:column="51"> <block pos:line="87" pos:column="52">{
      <comment type="block" pos:line="88" pos:column="7">/* There's at least one connection using this handle so we must keep
         this handle around. We also keep the connection cache pointer
         pointing to the shared one since that will be used on close as
         well. */</comment>
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">easy<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">easy_handle<pos:position pos:line="92" pos:column="24"/></name><operator pos:line="92" pos:column="24">-&gt;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="26">state<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">.<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="32">shared_conn<pos:position pos:line="92" pos:column="43"/></name></name> <operator pos:line="92" pos:column="44">=<pos:position pos:line="92" pos:column="45"/></operator> <name pos:line="92" pos:column="46">multi<pos:position pos:line="92" pos:column="51"/></name></expr>;<pos:position pos:line="92" pos:column="52"/></expr_stmt>

      <comment type="block" pos:line="94" pos:column="7">/* this handle is still being used by a shared connection cache and
         thus we leave it around for now */</comment>
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">add_closure<pos:position pos:line="96" pos:column="18"/></name><argument_list pos:line="96" pos:column="18">(<argument><expr><name pos:line="96" pos:column="19">multi<pos:position pos:line="96" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="26">easy<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">easy_handle<pos:position pos:line="96" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>

    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">(<expr><name><name pos:line="99" pos:column="8">easy<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">-&gt;<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="14">easy_handle<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">-&gt;<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="27">state<pos:position pos:line="99" pos:column="32"/></name><operator pos:line="99" pos:column="32">.<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="33">connc<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">-&gt;<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="40">type<pos:position pos:line="99" pos:column="44"/></name></name> <operator pos:line="99" pos:column="45">==<pos:position pos:line="99" pos:column="47"/></operator> <name pos:line="99" pos:column="48">CONNCACHE_MULTI<pos:position pos:line="99" pos:column="63"/></name></expr>)<pos:position pos:line="99" pos:column="64"/></condition><then pos:line="99" pos:column="64"> <block pos:line="99" pos:column="65">{
      <comment type="block" pos:line="100" pos:column="7">/* if this was using the shared connection cache we clear the pointer
         to that since we're not part of that handle anymore */</comment>
      <expr_stmt><expr><name><name pos:line="102" pos:column="7">easy<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">easy_handle<pos:position pos:line="102" pos:column="24"/></name><operator pos:line="102" pos:column="24">-&gt;<pos:position pos:line="102" pos:column="29"/></operator><name pos:line="102" pos:column="26">state<pos:position pos:line="102" pos:column="31"/></name><operator pos:line="102" pos:column="31">.<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="32">connc<pos:position pos:line="102" pos:column="37"/></name></name> <operator pos:line="102" pos:column="38">=<pos:position pos:line="102" pos:column="39"/></operator> <name pos:line="102" pos:column="40">NULL<pos:position pos:line="102" pos:column="44"/></name></expr>;<pos:position pos:line="102" pos:column="45"/></expr_stmt>

      <comment type="block" pos:line="104" pos:column="7">/* and modify the connectindex since this handle can't point to the
         connection cache anymore */</comment>
      <if pos:line="106" pos:column="7">if<condition pos:line="106" pos:column="9">(<expr><name><name pos:line="106" pos:column="10">easy<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">easy_conn<pos:position pos:line="106" pos:column="25"/></name></name> <operator pos:line="106" pos:column="26">&amp;&amp;<pos:position pos:line="106" pos:column="36"/></operator>
         <operator pos:line="107" pos:column="10">(<pos:position pos:line="107" pos:column="11"/></operator><name><name pos:line="107" pos:column="11">easy<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">-&gt;<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="17">easy_conn<pos:position pos:line="107" pos:column="26"/></name><operator pos:line="107" pos:column="26">-&gt;<pos:position pos:line="107" pos:column="31"/></operator><name pos:line="107" pos:column="28">send_pipe<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">size<pos:position pos:line="107" pos:column="43"/></name></name> <operator pos:line="107" pos:column="44">+<pos:position pos:line="107" pos:column="45"/></operator>
          <name><name pos:line="108" pos:column="11">easy<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">easy_conn<pos:position pos:line="108" pos:column="26"/></name><operator pos:line="108" pos:column="26">-&gt;<pos:position pos:line="108" pos:column="31"/></operator><name pos:line="108" pos:column="28">recv_pipe<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">size<pos:position pos:line="108" pos:column="43"/></name></name> <operator pos:line="108" pos:column="44">==<pos:position pos:line="108" pos:column="46"/></operator> <literal type="number" pos:line="108" pos:column="47">0<pos:position pos:line="108" pos:column="48"/></literal><operator pos:line="108" pos:column="48">)<pos:position pos:line="108" pos:column="49"/></operator></expr>)<pos:position pos:line="108" pos:column="50"/></condition><then pos:line="108" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="109" pos:column="9">easy<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">-&gt;<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="15">easy_conn<pos:position pos:line="109" pos:column="24"/></name><operator pos:line="109" pos:column="24">-&gt;<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="26">connectindex<pos:position pos:line="109" pos:column="38"/></name></name> <operator pos:line="109" pos:column="39">=<pos:position pos:line="109" pos:column="40"/></operator> <operator pos:line="109" pos:column="41">-<pos:position pos:line="109" pos:column="42"/></operator><literal type="number" pos:line="109" pos:column="42">1<pos:position pos:line="109" pos:column="43"/></literal></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt></block></then></if>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="112" pos:column="5">/* change state without using multistate(), only to make singlesocket() do
       what we want */</comment>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">easy<pos:position pos:line="114" pos:column="9"/></name><operator pos:line="114" pos:column="9">-&gt;<pos:position pos:line="114" pos:column="14"/></operator><name pos:line="114" pos:column="11">state<pos:position pos:line="114" pos:column="16"/></name></name> <operator pos:line="114" pos:column="17">=<pos:position pos:line="114" pos:column="18"/></operator> <name pos:line="114" pos:column="19">CURLM_STATE_COMPLETED<pos:position pos:line="114" pos:column="40"/></name></expr>;<pos:position pos:line="114" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">singlesocket<pos:position pos:line="115" pos:column="17"/></name><argument_list pos:line="115" pos:column="17">(<argument><expr><name pos:line="115" pos:column="18">multi<pos:position pos:line="115" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="25">easy<pos:position pos:line="115" pos:column="29"/></name></expr></argument>)<pos:position pos:line="115" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt> <comment type="block" pos:line="115" pos:column="32">/* to let the application know what sockets
                                  that vanish with this handle */</comment>

    <expr_stmt><expr><call><name pos:line="118" pos:column="5">Curl_easy_addmulti<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><name><name pos:line="118" pos:column="24">easy<pos:position pos:line="118" pos:column="28"/></name><operator pos:line="118" pos:column="28">-&gt;<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="30">easy_handle<pos:position pos:line="118" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="43">NULL<pos:position pos:line="118" pos:column="47"/></name></expr></argument>)<pos:position pos:line="118" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="49"/></expr_stmt> <comment type="block" pos:line="118" pos:column="50">/* clear the association
                                                    to this multi handle */</comment>

    <comment type="block" pos:line="121" pos:column="5">/* make the previous node point to our next */</comment>
    <if pos:line="122" pos:column="5">if<condition pos:line="122" pos:column="7">(<expr><name><name pos:line="122" pos:column="8">easy<pos:position pos:line="122" pos:column="12"/></name><operator pos:line="122" pos:column="12">-&gt;<pos:position pos:line="122" pos:column="17"/></operator><name pos:line="122" pos:column="14">prev<pos:position pos:line="122" pos:column="18"/></name></name></expr>)<pos:position pos:line="122" pos:column="19"/></condition><then pos:line="122" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="7">easy<pos:position pos:line="123" pos:column="11"/></name><operator pos:line="123" pos:column="11">-&gt;<pos:position pos:line="123" pos:column="16"/></operator><name pos:line="123" pos:column="13">prev<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">next<pos:position pos:line="123" pos:column="23"/></name></name> <operator pos:line="123" pos:column="24">=<pos:position pos:line="123" pos:column="25"/></operator> <name><name pos:line="123" pos:column="26">easy<pos:position pos:line="123" pos:column="30"/></name><operator pos:line="123" pos:column="30">-&gt;<pos:position pos:line="123" pos:column="35"/></operator><name pos:line="123" pos:column="32">next<pos:position pos:line="123" pos:column="36"/></name></name></expr>;<pos:position pos:line="123" pos:column="37"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="124" pos:column="5">/* make our next point to our previous node */</comment>
    <if pos:line="125" pos:column="5">if<condition pos:line="125" pos:column="7">(<expr><name><name pos:line="125" pos:column="8">easy<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">-&gt;<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="14">next<pos:position pos:line="125" pos:column="18"/></name></name></expr>)<pos:position pos:line="125" pos:column="19"/></condition><then pos:line="125" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="126" pos:column="7">easy<pos:position pos:line="126" pos:column="11"/></name><operator pos:line="126" pos:column="11">-&gt;<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="13">next<pos:position pos:line="126" pos:column="17"/></name><operator pos:line="126" pos:column="17">-&gt;<pos:position pos:line="126" pos:column="22"/></operator><name pos:line="126" pos:column="19">prev<pos:position pos:line="126" pos:column="23"/></name></name> <operator pos:line="126" pos:column="24">=<pos:position pos:line="126" pos:column="25"/></operator> <name><name pos:line="126" pos:column="26">easy<pos:position pos:line="126" pos:column="30"/></name><operator pos:line="126" pos:column="30">-&gt;<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="32">prev<pos:position pos:line="126" pos:column="36"/></name></name></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="128" pos:column="5">easy<pos:position pos:line="128" pos:column="9"/></name><operator pos:line="128" pos:column="9">-&gt;<pos:position pos:line="128" pos:column="14"/></operator><name pos:line="128" pos:column="11">easy_handle<pos:position pos:line="128" pos:column="22"/></name><operator pos:line="128" pos:column="22">-&gt;<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="24">set<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">.<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="28">one_easy<pos:position pos:line="128" pos:column="36"/></name></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <name pos:line="128" pos:column="39">NULL<pos:position pos:line="128" pos:column="43"/></name></expr>;<pos:position pos:line="128" pos:column="44"/></expr_stmt> <comment type="block" pos:line="128" pos:column="45">/* detached */</comment>

    <comment type="block" pos:line="130" pos:column="5">/* Null the position in the controlling structure */</comment>
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">easy<pos:position pos:line="131" pos:column="9"/></name><operator pos:line="131" pos:column="9">-&gt;<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="11">easy_handle<pos:position pos:line="131" pos:column="22"/></name><operator pos:line="131" pos:column="22">-&gt;<pos:position pos:line="131" pos:column="27"/></operator><name pos:line="131" pos:column="24">multi_pos<pos:position pos:line="131" pos:column="33"/></name></name> <operator pos:line="131" pos:column="34">=<pos:position pos:line="131" pos:column="35"/></operator> <name pos:line="131" pos:column="36">NULL<pos:position pos:line="131" pos:column="40"/></name></expr>;<pos:position pos:line="131" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="133" pos:column="5">/* NOTE NOTE NOTE
       We do not touch the easy handle here! */</comment>
    <if pos:line="135" pos:column="5">if<condition pos:line="135" pos:column="7">(<expr><name><name pos:line="135" pos:column="8">easy<pos:position pos:line="135" pos:column="12"/></name><operator pos:line="135" pos:column="12">-&gt;<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="14">msg<pos:position pos:line="135" pos:column="17"/></name></name></expr>)<pos:position pos:line="135" pos:column="18"/></condition><then pos:line="135" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="7">free<pos:position pos:line="136" pos:column="11"/></name><argument_list pos:line="136" pos:column="11">(<argument><expr><name><name pos:line="136" pos:column="12">easy<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">-&gt;<pos:position pos:line="136" pos:column="21"/></operator><name pos:line="136" pos:column="18">msg<pos:position pos:line="136" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">free<pos:position pos:line="137" pos:column="9"/></name><argument_list pos:line="137" pos:column="9">(<argument><expr><name pos:line="137" pos:column="10">easy<pos:position pos:line="137" pos:column="14"/></name></expr></argument>)<pos:position pos:line="137" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="139" pos:column="5">multi<pos:position pos:line="139" pos:column="10"/></name><operator pos:line="139" pos:column="10">-&gt;<pos:position pos:line="139" pos:column="15"/></operator><name pos:line="139" pos:column="12">num_easy<pos:position pos:line="139" pos:column="20"/></name></name><operator pos:line="139" pos:column="20">--<pos:position pos:line="139" pos:column="22"/></operator></expr>;<pos:position pos:line="139" pos:column="23"/></expr_stmt> <comment type="block" pos:line="139" pos:column="24">/* one less to care about now */</comment>

    <expr_stmt><expr><call><name pos:line="141" pos:column="5">update_timer<pos:position pos:line="141" pos:column="17"/></name><argument_list pos:line="141" pos:column="17">(<argument><expr><name pos:line="141" pos:column="18">multi<pos:position pos:line="141" pos:column="23"/></name></expr></argument>)<pos:position pos:line="141" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="25"/></expr_stmt>
    <return pos:line="142" pos:column="5">return <expr><name pos:line="142" pos:column="12">CURLM_OK<pos:position pos:line="142" pos:column="20"/></name></expr>;<pos:position pos:line="142" pos:column="21"/></return>
  }<pos:position pos:line="143" pos:column="4"/></block></then>
  <else pos:line="144" pos:column="3">else
    <block type="pseudo"><return pos:line="145" pos:column="5">return <expr><name pos:line="145" pos:column="12">CURLM_BAD_EASY_HANDLE<pos:position pos:line="145" pos:column="33"/></name></expr>;<pos:position pos:line="145" pos:column="34"/></return></block></else></if> <comment type="block" pos:line="145" pos:column="35">/* twasn't found */</comment>
}<pos:position pos:line="146" pos:column="2"/></block></function></unit>

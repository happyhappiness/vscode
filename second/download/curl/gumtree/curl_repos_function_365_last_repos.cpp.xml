<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_365_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">curl_multi_strerror_ccsid<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">CURLMcode<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">error<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">unsigned<pos:position pos:line="2" pos:column="52"/></name> <name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">ccsid<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type> <name pos:line="6" pos:column="16">s<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type> <name pos:line="7" pos:column="10">buf<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">s<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <call><name pos:line="9" pos:column="7">curl_multi_strerror<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">error<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">s<pos:position pos:line="11" pos:column="8"/></name></expr>)<pos:position pos:line="11" pos:column="9"/></condition><then pos:line="11" pos:column="9">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">s<pos:position pos:line="12" pos:column="13"/></name></expr>;<pos:position pos:line="12" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">i<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <name pos:line="14" pos:column="7">MAX_CONV_EXPANSION<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><call><name pos:line="14" pos:column="29">strlen<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">s<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">+<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">1<pos:position pos:line="14" pos:column="42"/></literal><operator pos:line="14" pos:column="42">)<pos:position pos:line="14" pos:column="43"/></operator></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">buf<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">Curl_thread_buffer<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">LK_MULTI_STRERROR<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">i<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call><operator pos:line="16" pos:column="54">)<pos:position pos:line="16" pos:column="55"/></operator></expr>)<pos:position pos:line="16" pos:column="56"/></condition><then pos:line="16" pos:column="56">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><specifier pos:line="17" pos:column="13">const<pos:position pos:line="17" pos:column="18"/></specifier> <name pos:line="17" pos:column="19">char<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></return></block></then></if>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><call><name pos:line="19" pos:column="6">convert<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="19">i<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">ccsid<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">s<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="32">-<pos:position pos:line="19" pos:column="33"/></operator><literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">ASCII_CCSID<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">&lt;<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="51">0<pos:position pos:line="19" pos:column="52"/></literal></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><specifier pos:line="20" pos:column="13">const<pos:position pos:line="20" pos:column="18"/></specifier> <name pos:line="20" pos:column="19">char<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">)<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">NULL<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></return></block></then></if>

  <return pos:line="22" pos:column="3">return <expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><specifier pos:line="22" pos:column="11">const<pos:position pos:line="22" pos:column="16"/></specifier> <name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">buf<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_43_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">logmsg<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">msg<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">time_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">t<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">time<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">tm<pos:position pos:line="4" pos:column="14"/></name></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">curr_time<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">localtime<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="39">t<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">loctime<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">80<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">strcpy<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">loctime<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="21">asctime<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">curr_time<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">loctime<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><call><name pos:line="8" pos:column="13">strlen<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">loctime<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call> <operator pos:line="8" pos:column="29">-<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="31">1<pos:position pos:line="8" pos:column="32"/></literal></expr>]<pos:position pos:line="8" pos:column="33"/></index></name> <operator pos:line="8" pos:column="34">=<pos:position pos:line="8" pos:column="35"/></operator> <literal type="char" pos:line="8" pos:column="36">'\0'<pos:position pos:line="8" pos:column="40"/></literal></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">logfp<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="20">"%s: %d: %s\n"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">loctime<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="45">(<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">int<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator><call><name pos:line="9" pos:column="50">getpid<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">()<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">msg<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">fflush<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">logfp<pos:position pos:line="10" pos:column="17"/></name></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

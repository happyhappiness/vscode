<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2114.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pubkey_show<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">SessionHandle<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">num<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">type<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="4" pos:column="25">const<pos:position pos:line="4" pos:column="30"/></specifier> <name pos:line="4" pos:column="31">char<pos:position pos:line="4" pos:column="35"/></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">name<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="5" pos:column="25">unsigned<pos:position pos:line="5" pos:column="33"/></name> <name pos:line="5" pos:column="34">char<pos:position pos:line="5" pos:column="38"/></name> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type><name pos:line="5" pos:column="40">raw<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name></type> <name pos:line="6" pos:column="29">len<pos:position pos:line="6" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="33"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">left<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">namebuf<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><literal type="number" pos:line="10" pos:column="16">32<pos:position pos:line="10" pos:column="18"/></literal></expr>]<pos:position pos:line="10" pos:column="19"/></index></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">buffer<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">left<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name pos:line="13" pos:column="10">len<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">3<pos:position pos:line="13" pos:column="15"/></literal> <operator pos:line="13" pos:column="16">+<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">buffer<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">malloc<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">left<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">buffer<pos:position pos:line="15" pos:column="12"/></name></expr>)<pos:position pos:line="15" pos:column="13"/></condition><then pos:line="15" pos:column="13"> <block pos:line="15" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">ptr<pos:position pos:line="16" pos:column="14"/></name><init pos:line="16" pos:column="14">=<expr><name pos:line="16" pos:column="15">buffer<pos:position pos:line="16" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">snprintf<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">namebuf<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="23">sizeof<argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">namebuf<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"%s(%s)"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">type<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">name<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
    <for pos:line="18" pos:column="5">for<control pos:line="18" pos:column="8">(<init><expr><name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator><literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></init> <condition><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="17">len<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></condition> <incr><expr><name pos:line="18" pos:column="22">i<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">++<pos:position pos:line="18" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="26"/></control> <block pos:line="18" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">snprintf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">ptr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="21">left<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="27">"%02x:"<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="36">raw<pos:position pos:line="19" pos:column="39"/></name><index pos:line="19" pos:column="39">[<expr><name pos:line="19" pos:column="40">i<pos:position pos:line="19" pos:column="41"/></name></expr>]<pos:position pos:line="19" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">ptr<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">+=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="number" pos:line="20" pos:column="14">3<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">left<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">-=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="number" pos:line="21" pos:column="15">3<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">infof<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">data<pos:position pos:line="23" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="17">"   %s: %s\n"<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">namebuf<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">buffer<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">data<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">num<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">namebuf<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">buffer<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">buffer<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

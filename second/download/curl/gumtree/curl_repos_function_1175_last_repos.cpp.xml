<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1175_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_state_select_resp<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">connectdata<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">conn<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">imapcode<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">imapstate<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">instate<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">IMAP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">imap<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">conn<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">data<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">req<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">protop<pos:position pos:line="6" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">imap_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">imapc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">imapc<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">line<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">data<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">state<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">buffer<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">tmp<pos:position pos:line="9" pos:column="11"/></name><index pos:line="9" pos:column="11">[<expr><literal type="number" pos:line="9" pos:column="12">20<pos:position pos:line="9" pos:column="14"/></literal></expr>]<pos:position pos:line="9" pos:column="15"/></index></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">instate<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt> <comment type="block" pos:line="11" pos:column="18">/* no use for this yet */</comment>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">imapcode<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <literal type="char" pos:line="13" pos:column="18">'*'<pos:position pos:line="13" pos:column="21"/></literal></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <block pos:line="13" pos:column="23">{
    <comment type="block" pos:line="14" pos:column="5">/* See if this is an UIDVALIDITY response */</comment>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><call><name pos:line="15" pos:column="8">sscanf<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">line<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">2<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"OK [UIDVALIDITY %19[0123456789]]"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">tmp<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call> <operator pos:line="15" pos:column="66">==<pos:position pos:line="15" pos:column="68"/></operator> <literal type="number" pos:line="15" pos:column="69">1<pos:position pos:line="15" pos:column="70"/></literal></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71"> <block pos:line="15" pos:column="72">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">Curl_safefree<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">imapc<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">mailbox_uidvalidity<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">imapc<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">mailbox_uidvalidity<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">=<pos:position pos:line="17" pos:column="35"/></operator> <call><name pos:line="17" pos:column="36">strdup<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">tmp<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if<condition pos:line="20" pos:column="10">(<expr><name pos:line="20" pos:column="11">imapcode<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">==<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">IMAP_RESP_OK<pos:position pos:line="20" pos:column="35"/></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
    <comment type="block" pos:line="21" pos:column="5">/* Check if the UIDVALIDITY has been specified and matches */</comment>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><name><name pos:line="22" pos:column="8">imap<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">uidvalidity<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">&amp;&amp;<pos:position pos:line="22" pos:column="36"/></operator> <name><name pos:line="22" pos:column="29">imapc<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">mailbox_uidvalidity<pos:position pos:line="22" pos:column="55"/></name></name> <operator pos:line="22" pos:column="56">&amp;&amp;<pos:position pos:line="22" pos:column="66"/></operator>
       <call><name pos:line="23" pos:column="8">strcmp<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">imap<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">uidvalidity<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="34">imapc<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">mailbox_uidvalidity<pos:position pos:line="23" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">failf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name><name pos:line="24" pos:column="13">conn<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">data<pos:position pos:line="24" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="25">"Mailbox UIDVALIDITY has changed"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">result<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">CURLE_REMOTE_FILE_NOT_FOUND<pos:position pos:line="25" pos:column="43"/></name></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
      <comment type="block" pos:line="28" pos:column="7">/* Note the currently opened mailbox on this connection */</comment>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">imapc<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">mailbox<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">strdup<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name><name pos:line="29" pos:column="31">imap<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">mailbox<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>

      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name><name pos:line="31" pos:column="10">imap<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">custom<pos:position pos:line="31" pos:column="22"/></name></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">result<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">imap_perform_list<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">conn<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt></block></then>
      <elseif pos:line="33" pos:column="7">else <if pos:line="33" pos:column="12">if<condition pos:line="33" pos:column="14">(<expr><name><name pos:line="33" pos:column="15">imap<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">query<pos:position pos:line="33" pos:column="26"/></name></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">result<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">imap_perform_search<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">conn<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt></block></then></if></elseif>
      <else pos:line="35" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="9">result<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">imap_perform_fetch<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">conn<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if></elseif>
  <else pos:line="39" pos:column="3">else <block pos:line="39" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">failf<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">data<pos:position pos:line="40" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="17">"Select failed"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">result<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">CURLE_LOGIN_DENIED<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></else></if>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

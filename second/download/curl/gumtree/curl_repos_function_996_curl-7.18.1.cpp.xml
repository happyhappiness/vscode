<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_996_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_nss_connect<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">sockindex<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">PRInt32<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">err<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PRFileDesc<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">model<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">PRBool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ssl2<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">ssl3<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">tlsv1<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">conn<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">curl_socket_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">sockfd<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name><name pos:line="7" pos:column="26">conn<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">sock<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[<expr><name pos:line="7" pos:column="37">sockindex<pos:position pos:line="7" pos:column="46"/></name></expr>]<pos:position pos:line="7" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">ssl_connect_data<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">connssl<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name><name pos:line="8" pos:column="39">conn<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">ssl<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">sockindex<pos:position pos:line="8" pos:column="58"/></name></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">SECStatus<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">rv<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">HAVE_PK11_CREATEGENERICOBJECT<pos:position pos:line="10" pos:column="37"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">configstring<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">certDir<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">curlerr<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">curlerr<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* FIXME. NSS doesn't support multiple databases open at the same time. */</comment>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">initialized<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">initialized<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">1<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">certDir<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">getenv<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><literal type="string" pos:line="22" pos:column="22">"SSL_DIR"<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt> <comment type="block" pos:line="22" pos:column="34">/* Look in $SSL_DIR */</comment>

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><operator pos:line="24" pos:column="8">!<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">certDir<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
      <decl_stmt><decl><type><name><name pos:line="25" pos:column="7">struct<pos:position pos:line="25" pos:column="13"/></name> <name pos:line="25" pos:column="14">stat<pos:position pos:line="25" pos:column="18"/></name></name></type> <name pos:line="25" pos:column="19">st<pos:position pos:line="25" pos:column="21"/></name></decl>;<pos:position pos:line="25" pos:column="22"/></decl_stmt>

      <if pos:line="27" pos:column="7">if<condition pos:line="27" pos:column="9">(<expr><call><name pos:line="27" pos:column="10">stat<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">SSL_DIR<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="25">st<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call> <operator pos:line="27" pos:column="29">==<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34">
        <block type="pseudo"><if pos:line="28" pos:column="9">if<condition pos:line="28" pos:column="11">(<expr><call><name pos:line="28" pos:column="12">S_ISDIR<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name><name pos:line="28" pos:column="20">st<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">st_mode<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{
          <expr_stmt><expr><name pos:line="29" pos:column="11">certDir<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">char<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">*<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">SSL_DIR<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><operator pos:line="33" pos:column="8">!<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="9">certDir<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block pos:line="33" pos:column="18">{
      <expr_stmt><expr><name pos:line="34" pos:column="7">rv<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">NSS_NoDB_Init<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">NULL<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">rv<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">NSS_Initialize<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">certDir<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">NULL<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">NULL<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="48">"secmod.db"<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>,
                          <argument><expr><name pos:line="38" pos:column="27">NSS_INIT_READONLY<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">rv<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">!=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">SECSuccess<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">infof<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name><name pos:line="41" pos:column="13">conn<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">data<pos:position pos:line="41" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="25">"Unable to initialize NSS database\n"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">curlerr<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
      <goto pos:line="43" pos:column="7">goto <name pos:line="43" pos:column="12">error<pos:position pos:line="43" pos:column="17"/></name>;<pos:position pos:line="43" pos:column="18"/></goto>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">NSS_SetDomesticPolicy<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">()<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>

<cpp:ifdef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifdef<pos:position pos:line="48" pos:column="7"/></cpp:directive> <name pos:line="48" pos:column="8">HAVE_PK11_CREATEGENERICOBJECT<pos:position pos:line="48" pos:column="37"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="49" pos:column="5">configstring<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <operator pos:line="49" pos:column="20">(<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">char<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">*<pos:position pos:line="49" pos:column="27"/></operator><operator pos:line="49" pos:column="27">)<pos:position pos:line="49" pos:column="28"/></operator><call><name pos:line="49" pos:column="28">malloc<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">PATH_MAX<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">PR_snprintf<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">configstring<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">PATH_MAX<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="41">"library=%s name=PEM"<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">pem_library<pos:position pos:line="51" pos:column="75"/></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">mod<pos:position pos:line="53" pos:column="8"/></name> <operator pos:line="53" pos:column="9">=<pos:position pos:line="53" pos:column="10"/></operator> <call><name pos:line="53" pos:column="11">SECMOD_LoadUserModule<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">configstring<pos:position pos:line="53" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="47">NULL<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">PR_FALSE<pos:position pos:line="53" pos:column="61"/></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">free<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name pos:line="54" pos:column="10">configstring<pos:position pos:line="54" pos:column="22"/></name></expr></argument>)<pos:position pos:line="54" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">mod<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">||<pos:position pos:line="55" pos:column="15"/></operator> <operator pos:line="55" pos:column="16">!<pos:position pos:line="55" pos:column="17"/></operator><name><name pos:line="55" pos:column="17">mod<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">loaded<pos:position pos:line="55" pos:column="28"/></name></name></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29"> <block pos:line="55" pos:column="30">{
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><name pos:line="56" pos:column="10">mod<pos:position pos:line="56" pos:column="13"/></name></expr>)<pos:position pos:line="56" pos:column="14"/></condition><then pos:line="56" pos:column="14"> <block pos:line="56" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">SECMOD_DestroyModule<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">mod<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">mod<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">NULL<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">infof<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><name pos:line="60" pos:column="13">data<pos:position pos:line="60" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="19">"WARNING: failed to load NSS PEM library %s. Using OpenSSL "<pos:position pos:line="60" pos:column="79"/></literal>
            <literal type="string" pos:line="61" pos:column="13">"PEM certificates will not work.\n"<pos:position pos:line="61" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">pem_library<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="66" pos:column="3">model<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <call><name pos:line="66" pos:column="11">PR_NewTCPSocket<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">()<pos:position pos:line="66" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
  <if pos:line="67" pos:column="3">if<condition pos:line="67" pos:column="5">(<expr><operator pos:line="67" pos:column="6">!<pos:position pos:line="67" pos:column="7"/></operator><name pos:line="67" pos:column="7">model<pos:position pos:line="67" pos:column="12"/></name></expr>)<pos:position pos:line="67" pos:column="13"/></condition><then pos:line="67" pos:column="13">
    <block type="pseudo"><goto pos:line="68" pos:column="5">goto <name pos:line="68" pos:column="10">error<pos:position pos:line="68" pos:column="15"/></name>;<pos:position pos:line="68" pos:column="16"/></goto></block></then></if>
  <expr_stmt><expr><name pos:line="69" pos:column="3">model<pos:position pos:line="69" pos:column="8"/></name> <operator pos:line="69" pos:column="9">=<pos:position pos:line="69" pos:column="10"/></operator> <call><name pos:line="69" pos:column="11">SSL_ImportFD<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><name pos:line="69" pos:column="24">NULL<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="30">model<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><call><name pos:line="71" pos:column="6">SSL_OptionSet<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">model<pos:position pos:line="71" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="27">SSL_SECURITY<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">PR_TRUE<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call> <operator pos:line="71" pos:column="50">!=<pos:position pos:line="71" pos:column="52"/></operator> <name pos:line="71" pos:column="53">SECSuccess<pos:position pos:line="71" pos:column="63"/></name></expr>)<pos:position pos:line="71" pos:column="64"/></condition><then pos:line="71" pos:column="64">
    <block type="pseudo"><goto pos:line="72" pos:column="5">goto <name pos:line="72" pos:column="10">error<pos:position pos:line="72" pos:column="15"/></name>;<pos:position pos:line="72" pos:column="16"/></goto></block></then></if>
  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><call><name pos:line="73" pos:column="6">SSL_OptionSet<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">(<argument><expr><name pos:line="73" pos:column="20">model<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">SSL_HANDSHAKE_AS_SERVER<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">PR_FALSE<pos:position pos:line="73" pos:column="60"/></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call> <operator pos:line="73" pos:column="62">!=<pos:position pos:line="73" pos:column="64"/></operator> <name pos:line="73" pos:column="65">SECSuccess<pos:position pos:line="73" pos:column="75"/></name></expr>)<pos:position pos:line="73" pos:column="76"/></condition><then pos:line="73" pos:column="76">
    <block type="pseudo"><goto pos:line="74" pos:column="5">goto <name pos:line="74" pos:column="10">error<pos:position pos:line="74" pos:column="15"/></name>;<pos:position pos:line="74" pos:column="16"/></goto></block></then></if>
  <if pos:line="75" pos:column="3">if<condition pos:line="75" pos:column="5">(<expr><call><name pos:line="75" pos:column="6">SSL_OptionSet<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">model<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="27">SSL_HANDSHAKE_AS_CLIENT<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="52">PR_TRUE<pos:position pos:line="75" pos:column="59"/></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call> <operator pos:line="75" pos:column="61">!=<pos:position pos:line="75" pos:column="63"/></operator> <name pos:line="75" pos:column="64">SECSuccess<pos:position pos:line="75" pos:column="74"/></name></expr>)<pos:position pos:line="75" pos:column="75"/></condition><then pos:line="75" pos:column="75">
    <block type="pseudo"><goto pos:line="76" pos:column="5">goto <name pos:line="76" pos:column="10">error<pos:position pos:line="76" pos:column="15"/></name>;<pos:position pos:line="76" pos:column="16"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="78" pos:column="3">ssl2<pos:position pos:line="78" pos:column="7"/></name> <operator pos:line="78" pos:column="8">=<pos:position pos:line="78" pos:column="9"/></operator> <name pos:line="78" pos:column="10">ssl3<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">tlsv1<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <name pos:line="78" pos:column="25">PR_FALSE<pos:position pos:line="78" pos:column="33"/></name></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>

  <switch pos:line="80" pos:column="3">switch <condition pos:line="80" pos:column="10">(<expr><name><name pos:line="80" pos:column="11">data<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">-&gt;<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="17">set<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">.<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">ssl<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">.<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="25">version<pos:position pos:line="80" pos:column="32"/></name></name></expr>)<pos:position pos:line="80" pos:column="33"/></condition> <block pos:line="80" pos:column="34">{
  <default pos:line="81" pos:column="3">default:<pos:position pos:line="81" pos:column="11"/></default>
  <case pos:line="82" pos:column="3">case <expr><name pos:line="82" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="82" pos:column="31"/></name></expr>:<pos:position pos:line="82" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="83" pos:column="5">ssl3<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <name pos:line="83" pos:column="12">tlsv1<pos:position pos:line="83" pos:column="17"/></name> <operator pos:line="83" pos:column="18">=<pos:position pos:line="83" pos:column="19"/></operator> <name pos:line="83" pos:column="20">PR_TRUE<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
    <break pos:line="84" pos:column="5">break;<pos:position pos:line="84" pos:column="11"/></break>
  <case pos:line="85" pos:column="3">case <expr><name pos:line="85" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="85" pos:column="29"/></name></expr>:<pos:position pos:line="85" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="86" pos:column="5">tlsv1<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <name pos:line="86" pos:column="13">PR_TRUE<pos:position pos:line="86" pos:column="20"/></name></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt>
    <break pos:line="87" pos:column="5">break;<pos:position pos:line="87" pos:column="11"/></break>
  <case pos:line="88" pos:column="3">case <expr><name pos:line="88" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="88" pos:column="29"/></name></expr>:<pos:position pos:line="88" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="89" pos:column="5">ssl2<pos:position pos:line="89" pos:column="9"/></name> <operator pos:line="89" pos:column="10">=<pos:position pos:line="89" pos:column="11"/></operator> <name pos:line="89" pos:column="12">PR_TRUE<pos:position pos:line="89" pos:column="19"/></name></expr>;<pos:position pos:line="89" pos:column="20"/></expr_stmt>
    <break pos:line="90" pos:column="5">break;<pos:position pos:line="90" pos:column="11"/></break>
  <case pos:line="91" pos:column="3">case <expr><name pos:line="91" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="91" pos:column="29"/></name></expr>:<pos:position pos:line="91" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="92" pos:column="5">ssl3<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <name pos:line="92" pos:column="12">PR_TRUE<pos:position pos:line="92" pos:column="19"/></name></expr>;<pos:position pos:line="92" pos:column="20"/></expr_stmt>
    <break pos:line="93" pos:column="5">break;<pos:position pos:line="93" pos:column="11"/></break>
  }<pos:position pos:line="94" pos:column="4"/></block></switch>

  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><call><name pos:line="96" pos:column="6">SSL_OptionSet<pos:position pos:line="96" pos:column="19"/></name><argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">model<pos:position pos:line="96" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="27">SSL_ENABLE_SSL2<pos:position pos:line="96" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="44">ssl2<pos:position pos:line="96" pos:column="48"/></name></expr></argument>)<pos:position pos:line="96" pos:column="49"/></argument_list></call> <operator pos:line="96" pos:column="50">!=<pos:position pos:line="96" pos:column="52"/></operator> <name pos:line="96" pos:column="53">SECSuccess<pos:position pos:line="96" pos:column="63"/></name></expr>)<pos:position pos:line="96" pos:column="64"/></condition><then pos:line="96" pos:column="64">
    <block type="pseudo"><goto pos:line="97" pos:column="5">goto <name pos:line="97" pos:column="10">error<pos:position pos:line="97" pos:column="15"/></name>;<pos:position pos:line="97" pos:column="16"/></goto></block></then></if>
  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><call><name pos:line="98" pos:column="6">SSL_OptionSet<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><name pos:line="98" pos:column="20">model<pos:position pos:line="98" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="27">SSL_ENABLE_SSL3<pos:position pos:line="98" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="44">ssl3<pos:position pos:line="98" pos:column="48"/></name></expr></argument>)<pos:position pos:line="98" pos:column="49"/></argument_list></call> <operator pos:line="98" pos:column="50">!=<pos:position pos:line="98" pos:column="52"/></operator> <name pos:line="98" pos:column="53">SECSuccess<pos:position pos:line="98" pos:column="63"/></name></expr>)<pos:position pos:line="98" pos:column="64"/></condition><then pos:line="98" pos:column="64">
    <block type="pseudo"><goto pos:line="99" pos:column="5">goto <name pos:line="99" pos:column="10">error<pos:position pos:line="99" pos:column="15"/></name>;<pos:position pos:line="99" pos:column="16"/></goto></block></then></if>
  <if pos:line="100" pos:column="3">if<condition pos:line="100" pos:column="5">(<expr><call><name pos:line="100" pos:column="6">SSL_OptionSet<pos:position pos:line="100" pos:column="19"/></name><argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">model<pos:position pos:line="100" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="27">SSL_ENABLE_TLS<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">tlsv1<pos:position pos:line="100" pos:column="48"/></name></expr></argument>)<pos:position pos:line="100" pos:column="49"/></argument_list></call> <operator pos:line="100" pos:column="50">!=<pos:position pos:line="100" pos:column="52"/></operator> <name pos:line="100" pos:column="53">SECSuccess<pos:position pos:line="100" pos:column="63"/></name></expr>)<pos:position pos:line="100" pos:column="64"/></condition><then pos:line="100" pos:column="64">
    <block type="pseudo"><goto pos:line="101" pos:column="5">goto <name pos:line="101" pos:column="10">error<pos:position pos:line="101" pos:column="15"/></name>;<pos:position pos:line="101" pos:column="16"/></goto></block></then></if>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><call><name pos:line="103" pos:column="6">SSL_OptionSet<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><name pos:line="103" pos:column="20">model<pos:position pos:line="103" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="27">SSL_V2_COMPATIBLE_HELLO<pos:position pos:line="103" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="52">ssl2<pos:position pos:line="103" pos:column="56"/></name></expr></argument>)<pos:position pos:line="103" pos:column="57"/></argument_list></call> <operator pos:line="103" pos:column="58">!=<pos:position pos:line="103" pos:column="60"/></operator> <name pos:line="103" pos:column="61">SECSuccess<pos:position pos:line="103" pos:column="71"/></name></expr>)<pos:position pos:line="103" pos:column="72"/></condition><then pos:line="103" pos:column="72">
    <block type="pseudo"><goto pos:line="104" pos:column="5">goto <name pos:line="104" pos:column="10">error<pos:position pos:line="104" pos:column="15"/></name>;<pos:position pos:line="104" pos:column="16"/></goto></block></then></if>

  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><name><name pos:line="106" pos:column="6">data<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">set<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">.<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">ssl<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">cipher_list<pos:position pos:line="106" pos:column="31"/></name></name></expr>)<pos:position pos:line="106" pos:column="32"/></condition><then pos:line="106" pos:column="32"> <block pos:line="106" pos:column="33">{
    <if pos:line="107" pos:column="5">if<condition pos:line="107" pos:column="7">(<expr><call><name pos:line="107" pos:column="8">set_ciphers<pos:position pos:line="107" pos:column="19"/></name><argument_list pos:line="107" pos:column="19">(<argument><expr><name pos:line="107" pos:column="20">data<pos:position pos:line="107" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="26">model<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="33">data<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">set<pos:position pos:line="107" pos:column="42"/></name><operator pos:line="107" pos:column="42">.<pos:position pos:line="107" pos:column="43"/></operator><name pos:line="107" pos:column="43">ssl<pos:position pos:line="107" pos:column="46"/></name><operator pos:line="107" pos:column="46">.<pos:position pos:line="107" pos:column="47"/></operator><name pos:line="107" pos:column="47">cipher_list<pos:position pos:line="107" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="59"/></argument_list></call> <operator pos:line="107" pos:column="60">!=<pos:position pos:line="107" pos:column="62"/></operator> <name pos:line="107" pos:column="63">SECSuccess<pos:position pos:line="107" pos:column="73"/></name></expr>)<pos:position pos:line="107" pos:column="74"/></condition><then pos:line="107" pos:column="74"> <block pos:line="107" pos:column="75">{
      <expr_stmt><expr><name pos:line="108" pos:column="7">curlerr<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <name pos:line="108" pos:column="17">CURLE_SSL_CIPHER<pos:position pos:line="108" pos:column="33"/></name></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt>
      <goto pos:line="109" pos:column="7">goto <name pos:line="109" pos:column="12">error<pos:position pos:line="109" pos:column="17"/></name>;<pos:position pos:line="109" pos:column="18"/></goto>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="113" pos:column="3">data<pos:position pos:line="113" pos:column="7"/></name><operator pos:line="113" pos:column="7">-&gt;<pos:position pos:line="113" pos:column="12"/></operator><name pos:line="113" pos:column="9">set<pos:position pos:line="113" pos:column="12"/></name><operator pos:line="113" pos:column="12">.<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="13">ssl<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">.<pos:position pos:line="113" pos:column="17"/></operator><name pos:line="113" pos:column="17">certverifyresult<pos:position pos:line="113" pos:column="33"/></name></name><operator pos:line="113" pos:column="33">=<pos:position pos:line="113" pos:column="34"/></operator><literal type="number" pos:line="113" pos:column="34">0<pos:position pos:line="113" pos:column="35"/></literal></expr>;<pos:position pos:line="113" pos:column="36"/></expr_stmt> <comment type="block" pos:line="113" pos:column="37">/* not checked yet */</comment>
  <if pos:line="114" pos:column="3">if<condition pos:line="114" pos:column="5">(<expr><call><name pos:line="114" pos:column="6">SSL_BadCertHook<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">model<pos:position pos:line="114" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="29">(<pos:position pos:line="114" pos:column="30"/></operator><name pos:line="114" pos:column="30">SSLBadCertHandler<pos:position pos:line="114" pos:column="47"/></name><operator pos:line="114" pos:column="47">)<pos:position pos:line="114" pos:column="48"/></operator> <name pos:line="114" pos:column="49">BadCertHandler<pos:position pos:line="114" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="65">conn<pos:position pos:line="114" pos:column="69"/></name></expr></argument>)<pos:position pos:line="114" pos:column="70"/></argument_list></call>
     <operator pos:line="115" pos:column="6">!=<pos:position pos:line="115" pos:column="8"/></operator> <name pos:line="115" pos:column="9">SECSuccess<pos:position pos:line="115" pos:column="19"/></name></expr>)<pos:position pos:line="115" pos:column="20"/></condition><then pos:line="115" pos:column="20"> <block pos:line="115" pos:column="21">{
    <goto pos:line="116" pos:column="5">goto <name pos:line="116" pos:column="10">error<pos:position pos:line="116" pos:column="15"/></name>;<pos:position pos:line="116" pos:column="16"/></goto>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>
  <if pos:line="118" pos:column="3">if<condition pos:line="118" pos:column="5">(<expr><call><name pos:line="118" pos:column="6">SSL_HandshakeCallback<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">model<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="35">(<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="36">SSLHandshakeCallback<pos:position pos:line="118" pos:column="56"/></name><operator pos:line="118" pos:column="56">)<pos:position pos:line="118" pos:column="57"/></operator> <name pos:line="118" pos:column="58">HandshakeCallback<pos:position pos:line="118" pos:column="75"/></name></expr></argument>,
                           <argument><expr><name pos:line="119" pos:column="28">NULL<pos:position pos:line="119" pos:column="32"/></name></expr></argument>)<pos:position pos:line="119" pos:column="33"/></argument_list></call> <operator pos:line="119" pos:column="34">!=<pos:position pos:line="119" pos:column="36"/></operator> <name pos:line="119" pos:column="37">SECSuccess<pos:position pos:line="119" pos:column="47"/></name></expr>)<pos:position pos:line="119" pos:column="48"/></condition><then pos:line="119" pos:column="48">
    <block type="pseudo"><goto pos:line="120" pos:column="5">goto <name pos:line="120" pos:column="10">error<pos:position pos:line="120" pos:column="15"/></name>;<pos:position pos:line="120" pos:column="16"/></goto></block></then></if>

  <if pos:line="122" pos:column="3">if<condition pos:line="122" pos:column="5">(<expr><operator pos:line="122" pos:column="6">!<pos:position pos:line="122" pos:column="7"/></operator><name><name pos:line="122" pos:column="7">data<pos:position pos:line="122" pos:column="11"/></name><operator pos:line="122" pos:column="11">-&gt;<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="13">set<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">.<pos:position pos:line="122" pos:column="17"/></operator><name pos:line="122" pos:column="17">ssl<pos:position pos:line="122" pos:column="20"/></name><operator pos:line="122" pos:column="20">.<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="21">verifypeer<pos:position pos:line="122" pos:column="31"/></name></name></expr>)<pos:position pos:line="122" pos:column="32"/></condition><then pos:line="122" pos:column="32">
    <comment type="block" pos:line="123" pos:column="5">/* skip the verifying of the peer */</comment>
    <block type="pseudo"><empty_stmt pos:line="124" pos:column="5">;<pos:position pos:line="124" pos:column="6"/></empty_stmt></block></then>
  <elseif pos:line="125" pos:column="3">else <if pos:line="125" pos:column="8">if<condition pos:line="125" pos:column="10">(<expr><name><name pos:line="125" pos:column="11">data<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">-&gt;<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="17">set<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">.<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">ssl<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">.<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="25">CAfile<pos:position pos:line="125" pos:column="31"/></name></name></expr>)<pos:position pos:line="125" pos:column="32"/></condition><then pos:line="125" pos:column="32"> <block pos:line="125" pos:column="33">{
    <decl_stmt><decl><type><name pos:line="126" pos:column="5">int<pos:position pos:line="126" pos:column="8"/></name></type> <name pos:line="126" pos:column="9">rc<pos:position pos:line="126" pos:column="11"/></name> <init pos:line="126" pos:column="12">= <expr><call><name pos:line="126" pos:column="14">nss_load_cert<pos:position pos:line="126" pos:column="27"/></name><argument_list pos:line="126" pos:column="27">(<argument><expr><name><name pos:line="126" pos:column="28">data<pos:position pos:line="126" pos:column="32"/></name><operator pos:line="126" pos:column="32">-&gt;<pos:position pos:line="126" pos:column="37"/></operator><name pos:line="126" pos:column="34">set<pos:position pos:line="126" pos:column="37"/></name><operator pos:line="126" pos:column="37">.<pos:position pos:line="126" pos:column="38"/></operator><name pos:line="126" pos:column="38">ssl<pos:position pos:line="126" pos:column="41"/></name><operator pos:line="126" pos:column="41">.<pos:position pos:line="126" pos:column="42"/></operator><name pos:line="126" pos:column="42">CAfile<pos:position pos:line="126" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="50">PR_TRUE<pos:position pos:line="126" pos:column="57"/></name></expr></argument>)<pos:position pos:line="126" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="126" pos:column="59"/></decl_stmt>
    <if pos:line="127" pos:column="5">if<condition pos:line="127" pos:column="7">(<expr><operator pos:line="127" pos:column="8">!<pos:position pos:line="127" pos:column="9"/></operator><name pos:line="127" pos:column="9">rc<pos:position pos:line="127" pos:column="11"/></name></expr>)<pos:position pos:line="127" pos:column="12"/></condition><then pos:line="127" pos:column="12"> <block pos:line="127" pos:column="13">{
      <expr_stmt><expr><name pos:line="128" pos:column="7">curlerr<pos:position pos:line="128" pos:column="14"/></name> <operator pos:line="128" pos:column="15">=<pos:position pos:line="128" pos:column="16"/></operator> <name pos:line="128" pos:column="17">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="128" pos:column="41"/></name></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
      <goto pos:line="129" pos:column="7">goto <name pos:line="129" pos:column="12">error<pos:position pos:line="129" pos:column="17"/></name>;<pos:position pos:line="129" pos:column="18"/></goto>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="132" pos:column="3">else <if pos:line="132" pos:column="8">if<condition pos:line="132" pos:column="10">(<expr><name><name pos:line="132" pos:column="11">data<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">-&gt;<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="17">set<pos:position pos:line="132" pos:column="20"/></name><operator pos:line="132" pos:column="20">.<pos:position pos:line="132" pos:column="21"/></operator><name pos:line="132" pos:column="21">ssl<pos:position pos:line="132" pos:column="24"/></name><operator pos:line="132" pos:column="24">.<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="25">CApath<pos:position pos:line="132" pos:column="31"/></name></name></expr>)<pos:position pos:line="132" pos:column="32"/></condition><then pos:line="132" pos:column="32"> <block pos:line="132" pos:column="33">{
    <decl_stmt><decl><type><name><name pos:line="133" pos:column="5">struct<pos:position pos:line="133" pos:column="11"/></name> <name pos:line="133" pos:column="12">stat<pos:position pos:line="133" pos:column="16"/></name></name></type> <name pos:line="133" pos:column="17">st<pos:position pos:line="133" pos:column="19"/></name></decl>;<pos:position pos:line="133" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="134" pos:column="5">PRDir<pos:position pos:line="134" pos:column="10"/></name>      <modifier pos:line="134" pos:column="16">*<pos:position pos:line="134" pos:column="17"/></modifier></type><name pos:line="134" pos:column="17">dir<pos:position pos:line="134" pos:column="20"/></name></decl>;<pos:position pos:line="134" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="135" pos:column="5">PRDirEntry<pos:position pos:line="135" pos:column="15"/></name> <modifier pos:line="135" pos:column="16">*<pos:position pos:line="135" pos:column="17"/></modifier></type><name pos:line="135" pos:column="17">entry<pos:position pos:line="135" pos:column="22"/></name></decl>;<pos:position pos:line="135" pos:column="23"/></decl_stmt>

    <if pos:line="137" pos:column="5">if<condition pos:line="137" pos:column="7">(<expr><call><name pos:line="137" pos:column="8">stat<pos:position pos:line="137" pos:column="12"/></name><argument_list pos:line="137" pos:column="12">(<argument><expr><name><name pos:line="137" pos:column="13">data<pos:position pos:line="137" pos:column="17"/></name><operator pos:line="137" pos:column="17">-&gt;<pos:position pos:line="137" pos:column="22"/></operator><name pos:line="137" pos:column="19">set<pos:position pos:line="137" pos:column="22"/></name><operator pos:line="137" pos:column="22">.<pos:position pos:line="137" pos:column="23"/></operator><name pos:line="137" pos:column="23">ssl<pos:position pos:line="137" pos:column="26"/></name><operator pos:line="137" pos:column="26">.<pos:position pos:line="137" pos:column="27"/></operator><name pos:line="137" pos:column="27">CApath<pos:position pos:line="137" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="35">&amp;<pos:position pos:line="137" pos:column="40"/></operator><name pos:line="137" pos:column="36">st<pos:position pos:line="137" pos:column="38"/></name></expr></argument>)<pos:position pos:line="137" pos:column="39"/></argument_list></call> <operator pos:line="137" pos:column="40">==<pos:position pos:line="137" pos:column="42"/></operator> <operator pos:line="137" pos:column="43">-<pos:position pos:line="137" pos:column="44"/></operator><literal type="number" pos:line="137" pos:column="44">1<pos:position pos:line="137" pos:column="45"/></literal></expr>)<pos:position pos:line="137" pos:column="46"/></condition><then pos:line="137" pos:column="46"> <block pos:line="137" pos:column="47">{
      <expr_stmt><expr><name pos:line="138" pos:column="7">curlerr<pos:position pos:line="138" pos:column="14"/></name> <operator pos:line="138" pos:column="15">=<pos:position pos:line="138" pos:column="16"/></operator> <name pos:line="138" pos:column="17">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="138" pos:column="41"/></name></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
      <goto pos:line="139" pos:column="7">goto <name pos:line="139" pos:column="12">error<pos:position pos:line="139" pos:column="17"/></name>;<pos:position pos:line="139" pos:column="18"/></goto>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>

    <if pos:line="142" pos:column="5">if<condition pos:line="142" pos:column="7">(<expr><call><name pos:line="142" pos:column="8">S_ISDIR<pos:position pos:line="142" pos:column="15"/></name><argument_list pos:line="142" pos:column="15">(<argument><expr><name><name pos:line="142" pos:column="16">st<pos:position pos:line="142" pos:column="18"/></name><operator pos:line="142" pos:column="18">.<pos:position pos:line="142" pos:column="19"/></operator><name pos:line="142" pos:column="19">st_mode<pos:position pos:line="142" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="28"/></condition><then pos:line="142" pos:column="28"> <block pos:line="142" pos:column="29">{
      <decl_stmt><decl><type><name pos:line="143" pos:column="7">int<pos:position pos:line="143" pos:column="10"/></name></type> <name pos:line="143" pos:column="11">rc<pos:position pos:line="143" pos:column="13"/></name></decl>;<pos:position pos:line="143" pos:column="14"/></decl_stmt>

      <expr_stmt><expr><name pos:line="145" pos:column="7">dir<pos:position pos:line="145" pos:column="10"/></name> <operator pos:line="145" pos:column="11">=<pos:position pos:line="145" pos:column="12"/></operator> <call><name pos:line="145" pos:column="13">PR_OpenDir<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><name><name pos:line="145" pos:column="24">data<pos:position pos:line="145" pos:column="28"/></name><operator pos:line="145" pos:column="28">-&gt;<pos:position pos:line="145" pos:column="33"/></operator><name pos:line="145" pos:column="30">set<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">.<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="34">ssl<pos:position pos:line="145" pos:column="37"/></name><operator pos:line="145" pos:column="37">.<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="38">CApath<pos:position pos:line="145" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="46"/></expr_stmt>
      <do pos:line="146" pos:column="7">do <block pos:line="146" pos:column="10">{
        <expr_stmt><expr><name pos:line="147" pos:column="9">entry<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <call><name pos:line="147" pos:column="17">PR_ReadDir<pos:position pos:line="147" pos:column="27"/></name><argument_list pos:line="147" pos:column="27">(<argument><expr><name pos:line="147" pos:column="28">dir<pos:position pos:line="147" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="33">PR_SKIP_BOTH<pos:position pos:line="147" pos:column="45"/></name> <operator pos:line="147" pos:column="46">|<pos:position pos:line="147" pos:column="47"/></operator> <name pos:line="147" pos:column="48">PR_SKIP_HIDDEN<pos:position pos:line="147" pos:column="62"/></name></expr></argument>)<pos:position pos:line="147" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="64"/></expr_stmt>

        <if pos:line="149" pos:column="9">if<condition pos:line="149" pos:column="11">(<expr><name pos:line="149" pos:column="12">entry<pos:position pos:line="149" pos:column="17"/></name></expr>)<pos:position pos:line="149" pos:column="18"/></condition><then pos:line="149" pos:column="18"> <block pos:line="149" pos:column="19">{
          <decl_stmt><decl><type><name pos:line="150" pos:column="11">char<pos:position pos:line="150" pos:column="15"/></name></type> <name><name pos:line="150" pos:column="16">fullpath<pos:position pos:line="150" pos:column="24"/></name><index pos:line="150" pos:column="24">[<expr><name pos:line="150" pos:column="25">PATH_MAX<pos:position pos:line="150" pos:column="33"/></name></expr>]<pos:position pos:line="150" pos:column="34"/></index></name></decl>;<pos:position pos:line="150" pos:column="35"/></decl_stmt>

          <expr_stmt><expr><call><name pos:line="152" pos:column="11">snprintf<pos:position pos:line="152" pos:column="19"/></name><argument_list pos:line="152" pos:column="19">(<argument><expr><name pos:line="152" pos:column="20">fullpath<pos:position pos:line="152" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="152" pos:column="30">sizeof<argument_list pos:line="152" pos:column="36">(<argument><expr><name pos:line="152" pos:column="37">fullpath<pos:position pos:line="152" pos:column="45"/></name></expr></argument>)<pos:position pos:line="152" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="48">"%s/%s"<pos:position pos:line="152" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="57">data<pos:position pos:line="152" pos:column="61"/></name><operator pos:line="152" pos:column="61">-&gt;<pos:position pos:line="152" pos:column="66"/></operator><name pos:line="152" pos:column="63">set<pos:position pos:line="152" pos:column="66"/></name><operator pos:line="152" pos:column="66">.<pos:position pos:line="152" pos:column="67"/></operator><name pos:line="152" pos:column="67">ssl<pos:position pos:line="152" pos:column="70"/></name><operator pos:line="152" pos:column="70">.<pos:position pos:line="152" pos:column="71"/></operator><name pos:line="152" pos:column="71">CApath<pos:position pos:line="152" pos:column="77"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="153" pos:column="20">entry<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">-&gt;<pos:position pos:line="153" pos:column="30"/></operator><name pos:line="153" pos:column="27">name<pos:position pos:line="153" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="154" pos:column="11">rc<pos:position pos:line="154" pos:column="13"/></name> <operator pos:line="154" pos:column="14">=<pos:position pos:line="154" pos:column="15"/></operator> <call><name pos:line="154" pos:column="16">nss_load_cert<pos:position pos:line="154" pos:column="29"/></name><argument_list pos:line="154" pos:column="29">(<argument><expr><name pos:line="154" pos:column="30">fullpath<pos:position pos:line="154" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="40">PR_TRUE<pos:position pos:line="154" pos:column="47"/></name></expr></argument>)<pos:position pos:line="154" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="49"/></expr_stmt>
          <comment type="block" pos:line="155" pos:column="11">/* FIXME: check this return value! */</comment>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>
      <comment type="block" pos:line="157" pos:column="7">/* This is purposefully tolerant of errors so non-PEM files
       * can be in the same directory */</comment>
      }<pos:position pos:line="159" pos:column="8"/></block> while<condition pos:line="159" pos:column="14">(<expr><name pos:line="159" pos:column="15">entry<pos:position pos:line="159" pos:column="20"/></name> <operator pos:line="159" pos:column="21">!=<pos:position pos:line="159" pos:column="23"/></operator> <name pos:line="159" pos:column="24">NULL<pos:position pos:line="159" pos:column="28"/></name></expr>)<pos:position pos:line="159" pos:column="29"/></condition>;<pos:position pos:line="159" pos:column="30"/></do>
      <expr_stmt><expr><call><name pos:line="160" pos:column="7">PR_CloseDir<pos:position pos:line="160" pos:column="18"/></name><argument_list pos:line="160" pos:column="18">(<argument><expr><name pos:line="160" pos:column="19">dir<pos:position pos:line="160" pos:column="22"/></name></expr></argument>)<pos:position pos:line="160" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if></elseif></if>
  <expr_stmt><expr><call><name pos:line="163" pos:column="3">infof<pos:position pos:line="163" pos:column="8"/></name><argument_list pos:line="163" pos:column="8">(<argument><expr><name pos:line="163" pos:column="9">data<pos:position pos:line="163" pos:column="13"/></name></expr></argument>,
        <argument><expr><literal type="string" pos:line="164" pos:column="9">"  CAfile: %s\n"<pos:position pos:line="164" pos:column="25"/></literal>
        <literal type="string" pos:line="165" pos:column="9">"  CApath: %s\n"<pos:position pos:line="165" pos:column="25"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><name><name pos:line="166" pos:column="9">data<pos:position pos:line="166" pos:column="13"/></name><operator pos:line="166" pos:column="13">-&gt;<pos:position pos:line="166" pos:column="18"/></operator><name pos:line="166" pos:column="15">set<pos:position pos:line="166" pos:column="18"/></name><operator pos:line="166" pos:column="18">.<pos:position pos:line="166" pos:column="19"/></operator><name pos:line="166" pos:column="19">ssl<pos:position pos:line="166" pos:column="22"/></name><operator pos:line="166" pos:column="22">.<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="23">CAfile<pos:position pos:line="166" pos:column="29"/></name></name></expr> ?<pos:position pos:line="166" pos:column="31"/></condition><then pos:line="166" pos:column="31"> <expr><name><name pos:line="166" pos:column="32">data<pos:position pos:line="166" pos:column="36"/></name><operator pos:line="166" pos:column="36">-&gt;<pos:position pos:line="166" pos:column="41"/></operator><name pos:line="166" pos:column="38">set<pos:position pos:line="166" pos:column="41"/></name><operator pos:line="166" pos:column="41">.<pos:position pos:line="166" pos:column="42"/></operator><name pos:line="166" pos:column="42">ssl<pos:position pos:line="166" pos:column="45"/></name><operator pos:line="166" pos:column="45">.<pos:position pos:line="166" pos:column="46"/></operator><name pos:line="166" pos:column="46">CAfile<pos:position pos:line="166" pos:column="52"/></name></name></expr> <pos:position pos:line="166" pos:column="53"/></then><else pos:line="166" pos:column="53">: <expr><literal type="string" pos:line="166" pos:column="55">"none"<pos:position pos:line="166" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><ternary><condition><expr><name><name pos:line="167" pos:column="9">data<pos:position pos:line="167" pos:column="13"/></name><operator pos:line="167" pos:column="13">-&gt;<pos:position pos:line="167" pos:column="18"/></operator><name pos:line="167" pos:column="15">set<pos:position pos:line="167" pos:column="18"/></name><operator pos:line="167" pos:column="18">.<pos:position pos:line="167" pos:column="19"/></operator><name pos:line="167" pos:column="19">ssl<pos:position pos:line="167" pos:column="22"/></name><operator pos:line="167" pos:column="22">.<pos:position pos:line="167" pos:column="23"/></operator><name pos:line="167" pos:column="23">CApath<pos:position pos:line="167" pos:column="29"/></name></name></expr> ?<pos:position pos:line="167" pos:column="31"/></condition><then pos:line="167" pos:column="31"> <expr><name><name pos:line="167" pos:column="32">data<pos:position pos:line="167" pos:column="36"/></name><operator pos:line="167" pos:column="36">-&gt;<pos:position pos:line="167" pos:column="41"/></operator><name pos:line="167" pos:column="38">set<pos:position pos:line="167" pos:column="41"/></name><operator pos:line="167" pos:column="41">.<pos:position pos:line="167" pos:column="42"/></operator><name pos:line="167" pos:column="42">ssl<pos:position pos:line="167" pos:column="45"/></name><operator pos:line="167" pos:column="45">.<pos:position pos:line="167" pos:column="46"/></operator><name pos:line="167" pos:column="46">CApath<pos:position pos:line="167" pos:column="52"/></name></name></expr> <pos:position pos:line="167" pos:column="53"/></then><else pos:line="167" pos:column="53">: <expr><literal type="string" pos:line="167" pos:column="55">"none"<pos:position pos:line="167" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="167" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="63"/></expr_stmt>

  <if pos:line="169" pos:column="3">if<condition pos:line="169" pos:column="5">(<expr><name><name pos:line="169" pos:column="6">data<pos:position pos:line="169" pos:column="10"/></name><operator pos:line="169" pos:column="10">-&gt;<pos:position pos:line="169" pos:column="15"/></operator><name pos:line="169" pos:column="12">set<pos:position pos:line="169" pos:column="15"/></name><operator pos:line="169" pos:column="15">.<pos:position pos:line="169" pos:column="16"/></operator><name pos:line="169" pos:column="16">str<pos:position pos:line="169" pos:column="19"/></name><index pos:line="169" pos:column="19">[<expr><name pos:line="169" pos:column="20">STRING_CERT<pos:position pos:line="169" pos:column="31"/></name></expr>]<pos:position pos:line="169" pos:column="32"/></index></name></expr>)<pos:position pos:line="169" pos:column="33"/></condition><then pos:line="169" pos:column="33"> <block pos:line="169" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="170" pos:column="5">char<pos:position pos:line="170" pos:column="9"/></name> <modifier pos:line="170" pos:column="10">*<pos:position pos:line="170" pos:column="11"/></modifier></type><name pos:line="170" pos:column="11">n<pos:position pos:line="170" pos:column="12"/></name></decl>;<pos:position pos:line="170" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="171" pos:column="5">char<pos:position pos:line="171" pos:column="9"/></name> <modifier pos:line="171" pos:column="10">*<pos:position pos:line="171" pos:column="11"/></modifier></type><name pos:line="171" pos:column="11">nickname<pos:position pos:line="171" pos:column="19"/></name></decl>;<pos:position pos:line="171" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="173" pos:column="5">nickname<pos:position pos:line="173" pos:column="13"/></name> <operator pos:line="173" pos:column="14">=<pos:position pos:line="173" pos:column="15"/></operator> <operator pos:line="173" pos:column="16">(<pos:position pos:line="173" pos:column="17"/></operator><name pos:line="173" pos:column="17">char<pos:position pos:line="173" pos:column="21"/></name> <operator pos:line="173" pos:column="22">*<pos:position pos:line="173" pos:column="23"/></operator><operator pos:line="173" pos:column="23">)<pos:position pos:line="173" pos:column="24"/></operator><call><name pos:line="173" pos:column="24">malloc<pos:position pos:line="173" pos:column="30"/></name><argument_list pos:line="173" pos:column="30">(<argument><expr><name pos:line="173" pos:column="31">PATH_MAX<pos:position pos:line="173" pos:column="39"/></name></expr></argument>)<pos:position pos:line="173" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="41"/></expr_stmt>
    <if pos:line="174" pos:column="5">if<condition pos:line="174" pos:column="7">(<expr><call><name pos:line="174" pos:column="8">is_file<pos:position pos:line="174" pos:column="15"/></name><argument_list pos:line="174" pos:column="15">(<argument><expr><name><name pos:line="174" pos:column="16">data<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">-&gt;<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="22">set<pos:position pos:line="174" pos:column="25"/></name><operator pos:line="174" pos:column="25">.<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="26">str<pos:position pos:line="174" pos:column="29"/></name><index pos:line="174" pos:column="29">[<expr><name pos:line="174" pos:column="30">STRING_CERT<pos:position pos:line="174" pos:column="41"/></name></expr>]<pos:position pos:line="174" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="174" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="44"/></condition><then pos:line="174" pos:column="44"> <block pos:line="174" pos:column="45">{
      <expr_stmt><expr><name pos:line="175" pos:column="7">n<pos:position pos:line="175" pos:column="8"/></name> <operator pos:line="175" pos:column="9">=<pos:position pos:line="175" pos:column="10"/></operator> <call><name pos:line="175" pos:column="11">strrchr<pos:position pos:line="175" pos:column="18"/></name><argument_list pos:line="175" pos:column="18">(<argument><expr><name><name pos:line="175" pos:column="19">data<pos:position pos:line="175" pos:column="23"/></name><operator pos:line="175" pos:column="23">-&gt;<pos:position pos:line="175" pos:column="28"/></operator><name pos:line="175" pos:column="25">set<pos:position pos:line="175" pos:column="28"/></name><operator pos:line="175" pos:column="28">.<pos:position pos:line="175" pos:column="29"/></operator><name pos:line="175" pos:column="29">str<pos:position pos:line="175" pos:column="32"/></name><index pos:line="175" pos:column="32">[<expr><name pos:line="175" pos:column="33">STRING_CERT<pos:position pos:line="175" pos:column="44"/></name></expr>]<pos:position pos:line="175" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="175" pos:column="47">'/'<pos:position pos:line="175" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="52"/></expr_stmt>
      <if pos:line="176" pos:column="7">if<condition pos:line="176" pos:column="9">(<expr><name pos:line="176" pos:column="10">n<pos:position pos:line="176" pos:column="11"/></name></expr>)<pos:position pos:line="176" pos:column="12"/></condition><then pos:line="176" pos:column="12"> <block pos:line="176" pos:column="13">{
        <expr_stmt><expr><name pos:line="177" pos:column="9">n<pos:position pos:line="177" pos:column="10"/></name><operator pos:line="177" pos:column="10">++<pos:position pos:line="177" pos:column="12"/></operator></expr>;<pos:position pos:line="177" pos:column="13"/></expr_stmt> <comment type="block" pos:line="177" pos:column="14">/* skip last slash */</comment>
        <expr_stmt><expr><call><name pos:line="178" pos:column="9">snprintf<pos:position pos:line="178" pos:column="17"/></name><argument_list pos:line="178" pos:column="17">(<argument><expr><name pos:line="178" pos:column="18">nickname<pos:position pos:line="178" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="28">PATH_MAX<pos:position pos:line="178" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="38">"PEM Token #%ld:%s"<pos:position pos:line="178" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="59">1<pos:position pos:line="178" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="62">n<pos:position pos:line="178" pos:column="63"/></name></expr></argument>)<pos:position pos:line="178" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="179" pos:column="8"/></block></then></if>
    }<pos:position pos:line="180" pos:column="6"/></block></then>
    <else pos:line="181" pos:column="5">else <block pos:line="181" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="182" pos:column="7">strncpy<pos:position pos:line="182" pos:column="14"/></name><argument_list pos:line="182" pos:column="14">(<argument><expr><name pos:line="182" pos:column="15">nickname<pos:position pos:line="182" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="25">data<pos:position pos:line="182" pos:column="29"/></name><operator pos:line="182" pos:column="29">-&gt;<pos:position pos:line="182" pos:column="34"/></operator><name pos:line="182" pos:column="31">set<pos:position pos:line="182" pos:column="34"/></name><operator pos:line="182" pos:column="34">.<pos:position pos:line="182" pos:column="35"/></operator><name pos:line="182" pos:column="35">str<pos:position pos:line="182" pos:column="38"/></name><index pos:line="182" pos:column="38">[<expr><name pos:line="182" pos:column="39">STRING_CERT<pos:position pos:line="182" pos:column="50"/></name></expr>]<pos:position pos:line="182" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="53">PATH_MAX<pos:position pos:line="182" pos:column="61"/></name></expr></argument>)<pos:position pos:line="182" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="183" pos:column="6"/></block></else></if>
    <if pos:line="184" pos:column="5">if<condition pos:line="184" pos:column="7">(<expr><call><name pos:line="184" pos:column="8">nss_Init_Tokens<pos:position pos:line="184" pos:column="23"/></name><argument_list pos:line="184" pos:column="23">(<argument><expr><name pos:line="184" pos:column="24">conn<pos:position pos:line="184" pos:column="28"/></name></expr></argument>)<pos:position pos:line="184" pos:column="29"/></argument_list></call> <operator pos:line="184" pos:column="30">!=<pos:position pos:line="184" pos:column="32"/></operator> <name pos:line="184" pos:column="33">SECSuccess<pos:position pos:line="184" pos:column="43"/></name></expr>)<pos:position pos:line="184" pos:column="44"/></condition><then pos:line="184" pos:column="44"> <block pos:line="184" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="185" pos:column="7">free<pos:position pos:line="185" pos:column="11"/></name><argument_list pos:line="185" pos:column="11">(<argument><expr><name pos:line="185" pos:column="12">nickname<pos:position pos:line="185" pos:column="20"/></name></expr></argument>)<pos:position pos:line="185" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="22"/></expr_stmt>
      <goto pos:line="186" pos:column="7">goto <name pos:line="186" pos:column="12">error<pos:position pos:line="186" pos:column="17"/></name>;<pos:position pos:line="186" pos:column="18"/></goto>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>
    <if pos:line="188" pos:column="5">if<condition pos:line="188" pos:column="7">(<expr><operator pos:line="188" pos:column="8">!<pos:position pos:line="188" pos:column="9"/></operator><call><name pos:line="188" pos:column="9">cert_stuff<pos:position pos:line="188" pos:column="19"/></name><argument_list pos:line="188" pos:column="19">(<argument><expr><name pos:line="188" pos:column="20">conn<pos:position pos:line="188" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="26">data<pos:position pos:line="188" pos:column="30"/></name><operator pos:line="188" pos:column="30">-&gt;<pos:position pos:line="188" pos:column="35"/></operator><name pos:line="188" pos:column="32">set<pos:position pos:line="188" pos:column="35"/></name><operator pos:line="188" pos:column="35">.<pos:position pos:line="188" pos:column="36"/></operator><name pos:line="188" pos:column="36">str<pos:position pos:line="188" pos:column="39"/></name><index pos:line="188" pos:column="39">[<expr><name pos:line="188" pos:column="40">STRING_CERT<pos:position pos:line="188" pos:column="51"/></name></expr>]<pos:position pos:line="188" pos:column="52"/></index></name></expr></argument>,
                    <argument><expr><name><name pos:line="189" pos:column="21">data<pos:position pos:line="189" pos:column="25"/></name><operator pos:line="189" pos:column="25">-&gt;<pos:position pos:line="189" pos:column="30"/></operator><name pos:line="189" pos:column="27">set<pos:position pos:line="189" pos:column="30"/></name><operator pos:line="189" pos:column="30">.<pos:position pos:line="189" pos:column="31"/></operator><name pos:line="189" pos:column="31">str<pos:position pos:line="189" pos:column="34"/></name><index pos:line="189" pos:column="34">[<expr><name pos:line="189" pos:column="35">STRING_KEY<pos:position pos:line="189" pos:column="45"/></name></expr>]<pos:position pos:line="189" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="189" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="189" pos:column="48"/></condition><then pos:line="189" pos:column="48"> <block pos:line="189" pos:column="49">{
      <comment type="block" pos:line="190" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <expr_stmt><expr><call><name pos:line="191" pos:column="7">free<pos:position pos:line="191" pos:column="11"/></name><argument_list pos:line="191" pos:column="11">(<argument><expr><name pos:line="191" pos:column="12">nickname<pos:position pos:line="191" pos:column="20"/></name></expr></argument>)<pos:position pos:line="191" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="22"/></expr_stmt>
      <return pos:line="192" pos:column="7">return <expr><name pos:line="192" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="192" pos:column="35"/></name></expr>;<pos:position pos:line="192" pos:column="36"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="195" pos:column="5">connssl<pos:position pos:line="195" pos:column="12"/></name><operator pos:line="195" pos:column="12">-&gt;<pos:position pos:line="195" pos:column="17"/></operator><name pos:line="195" pos:column="14">client_nickname<pos:position pos:line="195" pos:column="29"/></name></name> <operator pos:line="195" pos:column="30">=<pos:position pos:line="195" pos:column="31"/></operator> <call><name pos:line="195" pos:column="32">strdup<pos:position pos:line="195" pos:column="38"/></name><argument_list pos:line="195" pos:column="38">(<argument><expr><name pos:line="195" pos:column="39">nickname<pos:position pos:line="195" pos:column="47"/></name></expr></argument>)<pos:position pos:line="195" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="49"/></expr_stmt>
    <if pos:line="196" pos:column="5">if<condition pos:line="196" pos:column="7">(<expr><call><name pos:line="196" pos:column="8">SSL_GetClientAuthDataHook<pos:position pos:line="196" pos:column="33"/></name><argument_list pos:line="196" pos:column="33">(<argument><expr><name pos:line="196" pos:column="34">model<pos:position pos:line="196" pos:column="39"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="197" pos:column="34">(<pos:position pos:line="197" pos:column="35"/></operator><name pos:line="197" pos:column="35">SSLGetClientAuthData<pos:position pos:line="197" pos:column="55"/></name><operator pos:line="197" pos:column="55">)<pos:position pos:line="197" pos:column="56"/></operator> <name pos:line="197" pos:column="57">SelectClientCert<pos:position pos:line="197" pos:column="73"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="198" pos:column="34">(<pos:position pos:line="198" pos:column="35"/></operator><name pos:line="198" pos:column="35">void<pos:position pos:line="198" pos:column="39"/></name> <operator pos:line="198" pos:column="40">*<pos:position pos:line="198" pos:column="41"/></operator><operator pos:line="198" pos:column="41">)<pos:position pos:line="198" pos:column="42"/></operator><name><name pos:line="198" pos:column="42">connssl<pos:position pos:line="198" pos:column="49"/></name><operator pos:line="198" pos:column="49">-&gt;<pos:position pos:line="198" pos:column="54"/></operator><name pos:line="198" pos:column="51">client_nickname<pos:position pos:line="198" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="67"/></argument_list></call> <operator pos:line="198" pos:column="68">!=<pos:position pos:line="198" pos:column="70"/></operator>
       <name pos:line="199" pos:column="8">SECSuccess<pos:position pos:line="199" pos:column="18"/></name></expr>)<pos:position pos:line="199" pos:column="19"/></condition><then pos:line="199" pos:column="19"> <block pos:line="199" pos:column="20">{
      <expr_stmt><expr><name pos:line="200" pos:column="7">curlerr<pos:position pos:line="200" pos:column="14"/></name> <operator pos:line="200" pos:column="15">=<pos:position pos:line="200" pos:column="16"/></operator> <name pos:line="200" pos:column="17">CURLE_SSL_CERTPROBLEM<pos:position pos:line="200" pos:column="38"/></name></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt>
      <goto pos:line="201" pos:column="7">goto <name pos:line="201" pos:column="12">error<pos:position pos:line="201" pos:column="17"/></name>;<pos:position pos:line="201" pos:column="18"/></goto>
    }<pos:position pos:line="202" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="204" pos:column="5">free<pos:position pos:line="204" pos:column="9"/></name><argument_list pos:line="204" pos:column="9">(<argument><expr><name pos:line="204" pos:column="10">nickname<pos:position pos:line="204" pos:column="18"/></name></expr></argument>)<pos:position pos:line="204" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="206" pos:column="5">PK11_SetPasswordFunc<pos:position pos:line="206" pos:column="25"/></name><argument_list pos:line="206" pos:column="25">(<argument><expr><name pos:line="206" pos:column="26">nss_no_password<pos:position pos:line="206" pos:column="41"/></name></expr></argument>)<pos:position pos:line="206" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="207" pos:column="4"/></block></then>
  <else pos:line="208" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="209" pos:column="5">connssl<pos:position pos:line="209" pos:column="12"/></name><operator pos:line="209" pos:column="12">-&gt;<pos:position pos:line="209" pos:column="17"/></operator><name pos:line="209" pos:column="14">client_nickname<pos:position pos:line="209" pos:column="29"/></name></name> <operator pos:line="209" pos:column="30">=<pos:position pos:line="209" pos:column="31"/></operator> <name pos:line="209" pos:column="32">NULL<pos:position pos:line="209" pos:column="36"/></name></expr>;<pos:position pos:line="209" pos:column="37"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="211" pos:column="3">/* Import our model socket  onto the existing file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="212" pos:column="3">connssl<pos:position pos:line="212" pos:column="10"/></name><operator pos:line="212" pos:column="10">-&gt;<pos:position pos:line="212" pos:column="15"/></operator><name pos:line="212" pos:column="12">handle<pos:position pos:line="212" pos:column="18"/></name></name> <operator pos:line="212" pos:column="19">=<pos:position pos:line="212" pos:column="20"/></operator> <call><name pos:line="212" pos:column="21">PR_ImportTCPSocket<pos:position pos:line="212" pos:column="39"/></name><argument_list pos:line="212" pos:column="39">(<argument><expr><name pos:line="212" pos:column="40">sockfd<pos:position pos:line="212" pos:column="46"/></name></expr></argument>)<pos:position pos:line="212" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="213" pos:column="3">connssl<pos:position pos:line="213" pos:column="10"/></name><operator pos:line="213" pos:column="10">-&gt;<pos:position pos:line="213" pos:column="15"/></operator><name pos:line="213" pos:column="12">handle<pos:position pos:line="213" pos:column="18"/></name></name> <operator pos:line="213" pos:column="19">=<pos:position pos:line="213" pos:column="20"/></operator> <call><name pos:line="213" pos:column="21">SSL_ImportFD<pos:position pos:line="213" pos:column="33"/></name><argument_list pos:line="213" pos:column="33">(<argument><expr><name pos:line="213" pos:column="34">model<pos:position pos:line="213" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="41">connssl<pos:position pos:line="213" pos:column="48"/></name><operator pos:line="213" pos:column="48">-&gt;<pos:position pos:line="213" pos:column="53"/></operator><name pos:line="213" pos:column="50">handle<pos:position pos:line="213" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="58"/></expr_stmt>
  <if pos:line="214" pos:column="3">if<condition pos:line="214" pos:column="5">(<expr><operator pos:line="214" pos:column="6">!<pos:position pos:line="214" pos:column="7"/></operator><name><name pos:line="214" pos:column="7">connssl<pos:position pos:line="214" pos:column="14"/></name><operator pos:line="214" pos:column="14">-&gt;<pos:position pos:line="214" pos:column="19"/></operator><name pos:line="214" pos:column="16">handle<pos:position pos:line="214" pos:column="22"/></name></name></expr>)<pos:position pos:line="214" pos:column="23"/></condition><then pos:line="214" pos:column="23">
    <block type="pseudo"><goto pos:line="215" pos:column="5">goto <name pos:line="215" pos:column="10">error<pos:position pos:line="215" pos:column="15"/></name>;<pos:position pos:line="215" pos:column="16"/></goto></block></then></if>
  <expr_stmt><expr><call><name pos:line="216" pos:column="3">PR_Close<pos:position pos:line="216" pos:column="11"/></name><argument_list pos:line="216" pos:column="11">(<argument><expr><name pos:line="216" pos:column="12">model<pos:position pos:line="216" pos:column="17"/></name></expr></argument>)<pos:position pos:line="216" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="19"/></expr_stmt> <comment type="block" pos:line="216" pos:column="20">/* We don't need this any more */</comment>

  <comment type="block" pos:line="218" pos:column="3">/* Force handshake on next I/O */</comment>
  <expr_stmt><expr><call><name pos:line="219" pos:column="3">SSL_ResetHandshake<pos:position pos:line="219" pos:column="21"/></name><argument_list pos:line="219" pos:column="21">(<argument><expr><name><name pos:line="219" pos:column="22">connssl<pos:position pos:line="219" pos:column="29"/></name><operator pos:line="219" pos:column="29">-&gt;<pos:position pos:line="219" pos:column="34"/></operator><name pos:line="219" pos:column="31">handle<pos:position pos:line="219" pos:column="37"/></name></name></expr></argument>, <comment type="block" pos:line="219" pos:column="39">/* asServer */</comment> <argument><expr><name pos:line="219" pos:column="54">PR_FALSE<pos:position pos:line="219" pos:column="62"/></name></expr></argument>)<pos:position pos:line="219" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="221" pos:column="3">SSL_SetURL<pos:position pos:line="221" pos:column="13"/></name><argument_list pos:line="221" pos:column="13">(<argument><expr><name><name pos:line="221" pos:column="14">connssl<pos:position pos:line="221" pos:column="21"/></name><operator pos:line="221" pos:column="21">-&gt;<pos:position pos:line="221" pos:column="26"/></operator><name pos:line="221" pos:column="23">handle<pos:position pos:line="221" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="31">conn<pos:position pos:line="221" pos:column="35"/></name><operator pos:line="221" pos:column="35">-&gt;<pos:position pos:line="221" pos:column="40"/></operator><name pos:line="221" pos:column="37">host<pos:position pos:line="221" pos:column="41"/></name><operator pos:line="221" pos:column="41">.<pos:position pos:line="221" pos:column="42"/></operator><name pos:line="221" pos:column="42">name<pos:position pos:line="221" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="48"/></expr_stmt>

  <comment type="block" pos:line="223" pos:column="3">/* Force the handshake now */</comment>
  <if pos:line="224" pos:column="3">if<condition pos:line="224" pos:column="5">(<expr><call><name pos:line="224" pos:column="6">SSL_ForceHandshakeWithTimeout<pos:position pos:line="224" pos:column="35"/></name><argument_list pos:line="224" pos:column="35">(<argument><expr><name><name pos:line="224" pos:column="36">connssl<pos:position pos:line="224" pos:column="43"/></name><operator pos:line="224" pos:column="43">-&gt;<pos:position pos:line="224" pos:column="48"/></operator><name pos:line="224" pos:column="45">handle<pos:position pos:line="224" pos:column="51"/></name></name></expr></argument>,
                                    <argument><expr><call><name pos:line="225" pos:column="37">PR_SecondsToInterval<pos:position pos:line="225" pos:column="57"/></name><argument_list pos:line="225" pos:column="57">(<argument><expr><name pos:line="225" pos:column="58">HANDSHAKE_TIMEOUT<pos:position pos:line="225" pos:column="75"/></name></expr></argument>)<pos:position pos:line="225" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="225" pos:column="77"/></argument_list></call>
      <operator pos:line="226" pos:column="7">!=<pos:position pos:line="226" pos:column="9"/></operator> <name pos:line="226" pos:column="10">SECSuccess<pos:position pos:line="226" pos:column="20"/></name></expr>)<pos:position pos:line="226" pos:column="21"/></condition><then pos:line="226" pos:column="21"> <block pos:line="226" pos:column="22">{
    <if pos:line="227" pos:column="5">if<condition pos:line="227" pos:column="7">(<expr><name><name pos:line="227" pos:column="8">conn<pos:position pos:line="227" pos:column="12"/></name><operator pos:line="227" pos:column="12">-&gt;<pos:position pos:line="227" pos:column="17"/></operator><name pos:line="227" pos:column="14">data<pos:position pos:line="227" pos:column="18"/></name><operator pos:line="227" pos:column="18">-&gt;<pos:position pos:line="227" pos:column="23"/></operator><name pos:line="227" pos:column="20">set<pos:position pos:line="227" pos:column="23"/></name><operator pos:line="227" pos:column="23">.<pos:position pos:line="227" pos:column="24"/></operator><name pos:line="227" pos:column="24">ssl<pos:position pos:line="227" pos:column="27"/></name><operator pos:line="227" pos:column="27">.<pos:position pos:line="227" pos:column="28"/></operator><name pos:line="227" pos:column="28">certverifyresult<pos:position pos:line="227" pos:column="44"/></name></name><operator pos:line="227" pos:column="44">!=<pos:position pos:line="227" pos:column="46"/></operator><literal type="number" pos:line="227" pos:column="46">0<pos:position pos:line="227" pos:column="47"/></literal></expr>)<pos:position pos:line="227" pos:column="48"/></condition><then pos:line="227" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name pos:line="228" pos:column="7">curlerr<pos:position pos:line="228" pos:column="14"/></name> <operator pos:line="228" pos:column="15">=<pos:position pos:line="228" pos:column="16"/></operator> <name pos:line="228" pos:column="17">CURLE_SSL_CACERT<pos:position pos:line="228" pos:column="33"/></name></expr>;<pos:position pos:line="228" pos:column="34"/></expr_stmt></block></then></if>
    <goto pos:line="229" pos:column="5">goto <name pos:line="229" pos:column="10">error<pos:position pos:line="229" pos:column="15"/></name>;<pos:position pos:line="229" pos:column="16"/></goto>
  }<pos:position pos:line="230" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="232" pos:column="3">connssl<pos:position pos:line="232" pos:column="10"/></name><operator pos:line="232" pos:column="10">-&gt;<pos:position pos:line="232" pos:column="15"/></operator><name pos:line="232" pos:column="12">state<pos:position pos:line="232" pos:column="17"/></name></name> <operator pos:line="232" pos:column="18">=<pos:position pos:line="232" pos:column="19"/></operator> <name pos:line="232" pos:column="20">ssl_connection_complete<pos:position pos:line="232" pos:column="43"/></name></expr>;<pos:position pos:line="232" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="234" pos:column="3">display_conn_info<pos:position pos:line="234" pos:column="20"/></name><argument_list pos:line="234" pos:column="20">(<argument><expr><name pos:line="234" pos:column="21">conn<pos:position pos:line="234" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="27">connssl<pos:position pos:line="234" pos:column="34"/></name><operator pos:line="234" pos:column="34">-&gt;<pos:position pos:line="234" pos:column="39"/></operator><name pos:line="234" pos:column="36">handle<pos:position pos:line="234" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="234" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="44"/></expr_stmt>

  <return pos:line="236" pos:column="3">return <expr><name pos:line="236" pos:column="10">CURLE_OK<pos:position pos:line="236" pos:column="18"/></name></expr>;<pos:position pos:line="236" pos:column="19"/></return>

<label><name pos:line="238" pos:column="1">error<pos:position pos:line="238" pos:column="6"/></name>:<pos:position pos:line="238" pos:column="7"/></label>
  <expr_stmt><expr><name pos:line="239" pos:column="3">err<pos:position pos:line="239" pos:column="6"/></name> <operator pos:line="239" pos:column="7">=<pos:position pos:line="239" pos:column="8"/></operator> <call><name pos:line="239" pos:column="9">PR_GetError<pos:position pos:line="239" pos:column="20"/></name><argument_list pos:line="239" pos:column="20">()<pos:position pos:line="239" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="240" pos:column="3">infof<pos:position pos:line="240" pos:column="8"/></name><argument_list pos:line="240" pos:column="8">(<argument><expr><name pos:line="240" pos:column="9">data<pos:position pos:line="240" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="15">"NSS error %d\n"<pos:position pos:line="240" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="240" pos:column="33">err<pos:position pos:line="240" pos:column="36"/></name></expr></argument>)<pos:position pos:line="240" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="38"/></expr_stmt>
  <if pos:line="241" pos:column="3">if<condition pos:line="241" pos:column="5">(<expr><name pos:line="241" pos:column="6">model<pos:position pos:line="241" pos:column="11"/></name></expr>)<pos:position pos:line="241" pos:column="12"/></condition><then pos:line="241" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="242" pos:column="5">PR_Close<pos:position pos:line="242" pos:column="13"/></name><argument_list pos:line="242" pos:column="13">(<argument><expr><name pos:line="242" pos:column="14">model<pos:position pos:line="242" pos:column="19"/></name></expr></argument>)<pos:position pos:line="242" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="21"/></expr_stmt></block></then></if>
  <return pos:line="243" pos:column="3">return <expr><name pos:line="243" pos:column="10">curlerr<pos:position pos:line="243" pos:column="17"/></name></expr>;<pos:position pos:line="243" pos:column="18"/></return>
}<pos:position pos:line="244" pos:column="2"/></block></function></unit>

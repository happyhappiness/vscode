<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_372_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_getFormData<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">FormData<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">finalform<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">curl_httppost<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">post<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">curl_off_t<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">sizep<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FormData<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">form<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FormData<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">firstform<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_httppost<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">file<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">CURLE_OK<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_off_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">size<pos:position pos:line="10" pos:column="18"/></name><init pos:line="10" pos:column="18">=<expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt> <comment type="block" pos:line="10" pos:column="22">/* support potentially ENORMOUS formposts */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">boundary<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">fileboundary<pos:position pos:line="12" pos:column="21"/></name><init pos:line="12" pos:column="21">=<expr><name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">curl_slist<pos:position pos:line="13" pos:column="20"/></name></name><modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type> <name pos:line="13" pos:column="22">curList<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">finalform<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt> <comment type="block" pos:line="15" pos:column="20">/* default form is empty */</comment>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">post<pos:position pos:line="17" pos:column="11"/></name></expr>)<pos:position pos:line="17" pos:column="12"/></condition><then pos:line="17" pos:column="12">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">result<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return></block></then></if> <comment type="block" pos:line="18" pos:column="20">/* no input =&gt; no output! */</comment>

  <expr_stmt><expr><name pos:line="20" pos:column="3">boundary<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">Curl_FormBoundary<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">()<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">boundary<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Make the first line of the output */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">result<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">AddFormDataf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">form<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">NULL<pos:position pos:line="25" pos:column="36"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="26" pos:column="25">"Content-Type: multipart/form-data;"<pos:position pos:line="26" pos:column="61"/></literal>
                        <literal type="string" pos:line="27" pos:column="25">" boundary=%s\r\n"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>,
                        <argument><expr><name pos:line="28" pos:column="25">boundary<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">result<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <block pos:line="29" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">free<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">boundary<pos:position pos:line="30" pos:column="18"/></name></expr></argument>)<pos:position pos:line="30" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">result<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="33" pos:column="3">/* we DO NOT include that line in the total size of the POST, since it'll be
     part of the header! */</comment>

  <expr_stmt><expr><name pos:line="36" pos:column="3">firstform<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">form<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>

  <do pos:line="38" pos:column="3">do <block pos:line="38" pos:column="6">{

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">size<pos:position pos:line="40" pos:column="12"/></name></expr>)<pos:position pos:line="40" pos:column="13"/></condition><then pos:line="40" pos:column="13"> <block pos:line="40" pos:column="14">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">result<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">AddFormDataf<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><operator pos:line="41" pos:column="29">&amp;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="30">form<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="36">&amp;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="37">size<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="43">"\r\n"<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">result<pos:position pos:line="42" pos:column="17"/></name></expr>)<pos:position pos:line="42" pos:column="18"/></condition><then pos:line="42" pos:column="18">
        <block type="pseudo"><break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="46" pos:column="5">/* boundary */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">result<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">AddFormDataf<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><operator pos:line="47" pos:column="27">&amp;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="28">form<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="35">size<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="41">"--%s\r\n"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">boundary<pos:position pos:line="47" pos:column="61"/></name></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">result<pos:position pos:line="48" pos:column="15"/></name></expr>)<pos:position pos:line="48" pos:column="16"/></condition><then pos:line="48" pos:column="16">
      <block type="pseudo"><break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="51" pos:column="5">result<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">AddFormDataf<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><operator pos:line="51" pos:column="27">&amp;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="28">form<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">size<pos:position pos:line="51" pos:column="39"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="52" pos:column="27">"Content-Disposition: form-data; name=\""<pos:position pos:line="52" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">result<pos:position pos:line="53" pos:column="15"/></name></expr>)<pos:position pos:line="53" pos:column="16"/></condition><then pos:line="53" pos:column="16">
      <block type="pseudo"><break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="56" pos:column="5">result<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">AddFormData<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><operator pos:line="56" pos:column="26">&amp;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="27">form<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">FORM_DATA<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="44">post<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">-&gt;<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="50">name<pos:position pos:line="56" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="56">post<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">namelength<pos:position pos:line="56" pos:column="72"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="57" pos:column="26">&amp;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="27">size<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">result<pos:position pos:line="58" pos:column="15"/></name></expr>)<pos:position pos:line="58" pos:column="16"/></condition><then pos:line="58" pos:column="16">
      <block type="pseudo"><break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="61" pos:column="5">result<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">AddFormDataf<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="28">form<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="34">&amp;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="35">size<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="41">"\""<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">result<pos:position pos:line="62" pos:column="15"/></name></expr>)<pos:position pos:line="62" pos:column="16"/></condition><then pos:line="62" pos:column="16">
      <block type="pseudo"><break pos:line="63" pos:column="7">break;<pos:position pos:line="63" pos:column="13"/></break></block></then></if>

    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name><name pos:line="65" pos:column="8">post<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">more<pos:position pos:line="65" pos:column="18"/></name></name></expr>)<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19"> <block pos:line="65" pos:column="20">{
      <comment type="block" pos:line="66" pos:column="7">/* If used, this is a link to more file names, we must then do
         the magic to include several files with the same field name */</comment>

      <expr_stmt><expr><name pos:line="69" pos:column="7">fileboundary<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <call><name pos:line="69" pos:column="22">Curl_FormBoundary<pos:position pos:line="69" pos:column="39"/></name><argument_list pos:line="69" pos:column="39">()<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>

      <expr_stmt><expr><name pos:line="71" pos:column="7">result<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <call><name pos:line="71" pos:column="16">AddFormDataf<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><operator pos:line="71" pos:column="29">&amp;<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="30">form<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="36">&amp;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="37">size<pos:position pos:line="71" pos:column="41"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="72" pos:column="29">"\r\nContent-Type: multipart/mixed,"<pos:position pos:line="72" pos:column="65"/></literal>
                            <literal type="string" pos:line="73" pos:column="29">" boundary=%s\r\n"<pos:position pos:line="73" pos:column="47"/></literal></expr></argument>,
                            <argument><expr><name pos:line="74" pos:column="29">fileboundary<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
      <if pos:line="75" pos:column="7">if <condition pos:line="75" pos:column="10">(<expr><name pos:line="75" pos:column="11">result<pos:position pos:line="75" pos:column="17"/></name></expr>)<pos:position pos:line="75" pos:column="18"/></condition><then pos:line="75" pos:column="18">
        <block type="pseudo"><break pos:line="76" pos:column="9">break;<pos:position pos:line="76" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="79" pos:column="5">file<pos:position pos:line="79" pos:column="9"/></name> <operator pos:line="79" pos:column="10">=<pos:position pos:line="79" pos:column="11"/></operator> <name pos:line="79" pos:column="12">post<pos:position pos:line="79" pos:column="16"/></name></expr>;<pos:position pos:line="79" pos:column="17"/></expr_stmt>

    <do pos:line="81" pos:column="5">do <block pos:line="81" pos:column="8">{

      <comment type="block" pos:line="83" pos:column="7">/* If 'showfilename' is set, that is a faked name passed on to us
         to use to in the formpost. If that is not set, the actually used
         local file name should be added. */</comment>

      <if pos:line="87" pos:column="7">if<condition pos:line="87" pos:column="9">(<expr><name><name pos:line="87" pos:column="10">post<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">more<pos:position pos:line="87" pos:column="20"/></name></name></expr>)<pos:position pos:line="87" pos:column="21"/></condition><then pos:line="87" pos:column="21"> <block pos:line="87" pos:column="22">{
        <comment type="block" pos:line="88" pos:column="9">/* if multiple-file */</comment>
        <decl_stmt><decl><type><name pos:line="89" pos:column="9">char<pos:position pos:line="89" pos:column="13"/></name> <modifier pos:line="89" pos:column="14">*<pos:position pos:line="89" pos:column="15"/></modifier></type><name pos:line="89" pos:column="15">filebasename<pos:position pos:line="89" pos:column="27"/></name><init pos:line="89" pos:column="27">=
          <expr><ternary><condition><expr><operator pos:line="90" pos:column="11">(<pos:position pos:line="90" pos:column="12"/></operator><operator pos:line="90" pos:column="12">!<pos:position pos:line="90" pos:column="13"/></operator><name><name pos:line="90" pos:column="13">file<pos:position pos:line="90" pos:column="17"/></name><operator pos:line="90" pos:column="17">-&gt;<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="19">showfilename<pos:position pos:line="90" pos:column="31"/></name></name><operator pos:line="90" pos:column="31">)<pos:position pos:line="90" pos:column="32"/></operator></expr>?<pos:position pos:line="90" pos:column="33"/></condition><then><expr><call><name pos:line="90" pos:column="33">strippath<pos:position pos:line="90" pos:column="42"/></name><argument_list pos:line="90" pos:column="42">(<argument><expr><name><name pos:line="90" pos:column="43">file<pos:position pos:line="90" pos:column="47"/></name><operator pos:line="90" pos:column="47">-&gt;<pos:position pos:line="90" pos:column="52"/></operator><name pos:line="90" pos:column="49">contents<pos:position pos:line="90" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></call></expr></then><else pos:line="90" pos:column="58">:<expr><name pos:line="90" pos:column="59">NULL<pos:position pos:line="90" pos:column="63"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="90" pos:column="64"/></decl_stmt>

        <expr_stmt><expr><name pos:line="92" pos:column="9">result<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <call><name pos:line="92" pos:column="18">AddFormDataf<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><operator pos:line="92" pos:column="31">&amp;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="32">form<pos:position pos:line="92" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="38">&amp;<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="39">size<pos:position pos:line="92" pos:column="43"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="93" pos:column="31">"\r\n--%s\r\nContent-Disposition: "<pos:position pos:line="93" pos:column="66"/></literal>
                              <literal type="string" pos:line="94" pos:column="31">"attachment; filename=\"%s\""<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>,
                              <argument><expr><name pos:line="95" pos:column="31">fileboundary<pos:position pos:line="95" pos:column="43"/></name></expr></argument>,
                              <argument><expr><operator pos:line="96" pos:column="31">(<pos:position pos:line="96" pos:column="32"/></operator><ternary><condition><expr><name><name pos:line="96" pos:column="32">file<pos:position pos:line="96" pos:column="36"/></name><operator pos:line="96" pos:column="36">-&gt;<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="38">showfilename<pos:position pos:line="96" pos:column="50"/></name></name></expr>?<pos:position pos:line="96" pos:column="51"/></condition><then><expr><name><name pos:line="96" pos:column="51">file<pos:position pos:line="96" pos:column="55"/></name><operator pos:line="96" pos:column="55">-&gt;<pos:position pos:line="96" pos:column="60"/></operator><name pos:line="96" pos:column="57">showfilename<pos:position pos:line="96" pos:column="69"/></name></name></expr></then><else pos:line="96" pos:column="69">:
                               <expr><name pos:line="97" pos:column="32">filebasename<pos:position pos:line="97" pos:column="44"/></name></expr></else></ternary><operator pos:line="97" pos:column="44">)<pos:position pos:line="97" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">filebasename<pos:position pos:line="98" pos:column="25"/></name></expr>)<pos:position pos:line="98" pos:column="26"/></condition><then pos:line="98" pos:column="26">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="11">free<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">filebasename<pos:position pos:line="99" pos:column="28"/></name></expr></argument>)<pos:position pos:line="99" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt></block></then></if>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">result<pos:position pos:line="100" pos:column="19"/></name></expr>)<pos:position pos:line="100" pos:column="20"/></condition><then pos:line="100" pos:column="20">
          <block type="pseudo"><break pos:line="101" pos:column="11">break;<pos:position pos:line="101" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="102" pos:column="8"/></block></then>
      <elseif pos:line="103" pos:column="7">else <if pos:line="103" pos:column="12">if<condition pos:line="103" pos:column="14">(<expr><operator pos:line="103" pos:column="15">(<pos:position pos:line="103" pos:column="16"/></operator><name><name pos:line="103" pos:column="16">post<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">flags<pos:position pos:line="103" pos:column="27"/></name></name> <operator pos:line="103" pos:column="28">&amp;<pos:position pos:line="103" pos:column="33"/></operator> <name pos:line="103" pos:column="30">HTTPPOST_FILENAME<pos:position pos:line="103" pos:column="47"/></name><operator pos:line="103" pos:column="47">)<pos:position pos:line="103" pos:column="48"/></operator> <operator pos:line="103" pos:column="49">||<pos:position pos:line="103" pos:column="51"/></operator>
              <operator pos:line="104" pos:column="15">(<pos:position pos:line="104" pos:column="16"/></operator><name><name pos:line="104" pos:column="16">post<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">-&gt;<pos:position pos:line="104" pos:column="25"/></operator><name pos:line="104" pos:column="22">flags<pos:position pos:line="104" pos:column="27"/></name></name> <operator pos:line="104" pos:column="28">&amp;<pos:position pos:line="104" pos:column="33"/></operator> <name pos:line="104" pos:column="30">HTTPPOST_BUFFER<pos:position pos:line="104" pos:column="45"/></name><operator pos:line="104" pos:column="45">)<pos:position pos:line="104" pos:column="46"/></operator></expr>)<pos:position pos:line="104" pos:column="47"/></condition><then pos:line="104" pos:column="47"> <block pos:line="104" pos:column="48">{

        <decl_stmt><decl><type><name pos:line="106" pos:column="9">char<pos:position pos:line="106" pos:column="13"/></name> <modifier pos:line="106" pos:column="14">*<pos:position pos:line="106" pos:column="15"/></modifier></type><name pos:line="106" pos:column="15">filebasename<pos:position pos:line="106" pos:column="27"/></name><init pos:line="106" pos:column="27">=
          <expr><ternary><condition><expr><operator pos:line="107" pos:column="11">(<pos:position pos:line="107" pos:column="12"/></operator><operator pos:line="107" pos:column="12">!<pos:position pos:line="107" pos:column="13"/></operator><name><name pos:line="107" pos:column="13">post<pos:position pos:line="107" pos:column="17"/></name><operator pos:line="107" pos:column="17">-&gt;<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="19">showfilename<pos:position pos:line="107" pos:column="31"/></name></name><operator pos:line="107" pos:column="31">)<pos:position pos:line="107" pos:column="32"/></operator></expr>?<pos:position pos:line="107" pos:column="33"/></condition><then><expr><call><name pos:line="107" pos:column="33">strippath<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name><name pos:line="107" pos:column="43">post<pos:position pos:line="107" pos:column="47"/></name><operator pos:line="107" pos:column="47">-&gt;<pos:position pos:line="107" pos:column="52"/></operator><name pos:line="107" pos:column="49">contents<pos:position pos:line="107" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr></then><else pos:line="107" pos:column="58">:<expr><name pos:line="107" pos:column="59">NULL<pos:position pos:line="107" pos:column="63"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="107" pos:column="64"/></decl_stmt>

        <expr_stmt><expr><name pos:line="109" pos:column="9">result<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">=<pos:position pos:line="109" pos:column="17"/></operator> <call><name pos:line="109" pos:column="18">AddFormDataf<pos:position pos:line="109" pos:column="30"/></name><argument_list pos:line="109" pos:column="30">(<argument><expr><operator pos:line="109" pos:column="31">&amp;<pos:position pos:line="109" pos:column="36"/></operator><name pos:line="109" pos:column="32">form<pos:position pos:line="109" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="38">&amp;<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="39">size<pos:position pos:line="109" pos:column="43"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="110" pos:column="31">"; filename=\"%s\""<pos:position pos:line="110" pos:column="50"/></literal></expr></argument>,
                              <argument><expr><operator pos:line="111" pos:column="31">(<pos:position pos:line="111" pos:column="32"/></operator><ternary><condition><expr><name><name pos:line="111" pos:column="32">post<pos:position pos:line="111" pos:column="36"/></name><operator pos:line="111" pos:column="36">-&gt;<pos:position pos:line="111" pos:column="41"/></operator><name pos:line="111" pos:column="38">showfilename<pos:position pos:line="111" pos:column="50"/></name></name></expr>?<pos:position pos:line="111" pos:column="51"/></condition><then><expr><name><name pos:line="111" pos:column="51">post<pos:position pos:line="111" pos:column="55"/></name><operator pos:line="111" pos:column="55">-&gt;<pos:position pos:line="111" pos:column="60"/></operator><name pos:line="111" pos:column="57">showfilename<pos:position pos:line="111" pos:column="69"/></name></name></expr></then><else pos:line="111" pos:column="69">:
                               <expr><name pos:line="112" pos:column="32">filebasename<pos:position pos:line="112" pos:column="44"/></name></expr></else></ternary><operator pos:line="112" pos:column="44">)<pos:position pos:line="112" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">filebasename<pos:position pos:line="113" pos:column="25"/></name></expr>)<pos:position pos:line="113" pos:column="26"/></condition><then pos:line="113" pos:column="26">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="11">free<pos:position pos:line="114" pos:column="15"/></name><argument_list pos:line="114" pos:column="15">(<argument><expr><name pos:line="114" pos:column="16">filebasename<pos:position pos:line="114" pos:column="28"/></name></expr></argument>)<pos:position pos:line="114" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="30"/></expr_stmt></block></then></if>

        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">result<pos:position pos:line="116" pos:column="19"/></name></expr>)<pos:position pos:line="116" pos:column="20"/></condition><then pos:line="116" pos:column="20">
          <block type="pseudo"><break pos:line="117" pos:column="11">break;<pos:position pos:line="117" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="118" pos:column="8"/></block></then></if></elseif></if>

      <if pos:line="120" pos:column="7">if<condition pos:line="120" pos:column="9">(<expr><name><name pos:line="120" pos:column="10">file<pos:position pos:line="120" pos:column="14"/></name><operator pos:line="120" pos:column="14">-&gt;<pos:position pos:line="120" pos:column="19"/></operator><name pos:line="120" pos:column="16">contenttype<pos:position pos:line="120" pos:column="27"/></name></name></expr>)<pos:position pos:line="120" pos:column="28"/></condition><then pos:line="120" pos:column="28"> <block pos:line="120" pos:column="29">{
        <comment type="block" pos:line="121" pos:column="9">/* we have a specified type */</comment>
        <expr_stmt><expr><name pos:line="122" pos:column="9">result<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">=<pos:position pos:line="122" pos:column="17"/></operator> <call><name pos:line="122" pos:column="18">AddFormDataf<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">(<argument><expr><operator pos:line="122" pos:column="31">&amp;<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="32">form<pos:position pos:line="122" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="38">&amp;<pos:position pos:line="122" pos:column="43"/></operator><name pos:line="122" pos:column="39">size<pos:position pos:line="122" pos:column="43"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="123" pos:column="31">"\r\nContent-Type: %s"<pos:position pos:line="123" pos:column="53"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="124" pos:column="31">file<pos:position pos:line="124" pos:column="35"/></name><operator pos:line="124" pos:column="35">-&gt;<pos:position pos:line="124" pos:column="40"/></operator><name pos:line="124" pos:column="37">contenttype<pos:position pos:line="124" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="50"/></expr_stmt>
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">result<pos:position pos:line="125" pos:column="19"/></name></expr>)<pos:position pos:line="125" pos:column="20"/></condition><then pos:line="125" pos:column="20">
          <block type="pseudo"><break pos:line="126" pos:column="11">break;<pos:position pos:line="126" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="129" pos:column="7">curList<pos:position pos:line="129" pos:column="14"/></name> <operator pos:line="129" pos:column="15">=<pos:position pos:line="129" pos:column="16"/></operator> <name><name pos:line="129" pos:column="17">file<pos:position pos:line="129" pos:column="21"/></name><operator pos:line="129" pos:column="21">-&gt;<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="23">contentheader<pos:position pos:line="129" pos:column="36"/></name></name></expr>;<pos:position pos:line="129" pos:column="37"/></expr_stmt>
      <while pos:line="130" pos:column="7">while<condition pos:line="130" pos:column="12">( <expr><name pos:line="130" pos:column="14">curList<pos:position pos:line="130" pos:column="21"/></name></expr> )<pos:position pos:line="130" pos:column="23"/></condition> <block pos:line="130" pos:column="24">{
        <comment type="block" pos:line="131" pos:column="9">/* Process the additional headers specified for this form */</comment>
        <expr_stmt><expr><name pos:line="132" pos:column="9">result<pos:position pos:line="132" pos:column="15"/></name> <operator pos:line="132" pos:column="16">=<pos:position pos:line="132" pos:column="17"/></operator> <call><name pos:line="132" pos:column="18">AddFormDataf<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">( <argument><expr><operator pos:line="132" pos:column="32">&amp;<pos:position pos:line="132" pos:column="37"/></operator><name pos:line="132" pos:column="33">form<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="39">&amp;<pos:position pos:line="132" pos:column="44"/></operator><name pos:line="132" pos:column="40">size<pos:position pos:line="132" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="46">"\r\n%s"<pos:position pos:line="132" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="56">curList<pos:position pos:line="132" pos:column="63"/></name><operator pos:line="132" pos:column="63">-&gt;<pos:position pos:line="132" pos:column="68"/></operator><name pos:line="132" pos:column="65">data<pos:position pos:line="132" pos:column="69"/></name></name></expr></argument> )<pos:position pos:line="132" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="72"/></expr_stmt>
        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name pos:line="133" pos:column="13">result<pos:position pos:line="133" pos:column="19"/></name></expr>)<pos:position pos:line="133" pos:column="20"/></condition><then pos:line="133" pos:column="20">
          <block type="pseudo"><break pos:line="134" pos:column="11">break;<pos:position pos:line="134" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="135" pos:column="9">curList<pos:position pos:line="135" pos:column="16"/></name> <operator pos:line="135" pos:column="17">=<pos:position pos:line="135" pos:column="18"/></operator> <name><name pos:line="135" pos:column="19">curList<pos:position pos:line="135" pos:column="26"/></name><operator pos:line="135" pos:column="26">-&gt;<pos:position pos:line="135" pos:column="31"/></operator><name pos:line="135" pos:column="28">next<pos:position pos:line="135" pos:column="32"/></name></name></expr>;<pos:position pos:line="135" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="136" pos:column="8"/></block></while>
      <if pos:line="137" pos:column="7">if <condition pos:line="137" pos:column="10">(<expr><name pos:line="137" pos:column="11">result<pos:position pos:line="137" pos:column="17"/></name></expr>)<pos:position pos:line="137" pos:column="18"/></condition><then pos:line="137" pos:column="18"> <block pos:line="137" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">Curl_formclean<pos:position pos:line="138" pos:column="23"/></name><argument_list pos:line="138" pos:column="23">(<argument><expr><name pos:line="138" pos:column="24">firstform<pos:position pos:line="138" pos:column="33"/></name></expr></argument>)<pos:position pos:line="138" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">free<pos:position pos:line="139" pos:column="13"/></name><argument_list pos:line="139" pos:column="13">(<argument><expr><name pos:line="139" pos:column="14">boundary<pos:position pos:line="139" pos:column="22"/></name></expr></argument>)<pos:position pos:line="139" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="24"/></expr_stmt>
        <return pos:line="140" pos:column="9">return <expr><name pos:line="140" pos:column="16">result<pos:position pos:line="140" pos:column="22"/></name></expr>;<pos:position pos:line="140" pos:column="23"/></return>
      }<pos:position pos:line="141" pos:column="8"/></block></then></if>

<cpp:if pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">if<pos:position pos:line="143" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="143" pos:column="5">0<pos:position pos:line="143" pos:column="6"/></literal></expr></cpp:if>
      <comment type="block" pos:line="144" pos:column="7">/* The header Content-Transfer-Encoding: seems to confuse some receivers
       * (like the built-in PHP engine). While I can't see any reason why it
       * should, I can just as well skip this to the benefit of the users who
       * are using such confused receivers.
       */</comment>

      if(file-&gt;contenttype &amp;&amp;
         !checkprefix("text/", file-&gt;contenttype)) {
        <comment type="block" pos:line="152" pos:column="9">/* this is not a text content, mention our binary encoding */</comment>
        size += AddFormData(&amp;form, "\r\nContent-Transfer-Encoding: binary", 0);
      }
<cpp:endif pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">endif<pos:position pos:line="155" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="157" pos:column="7">result<pos:position pos:line="157" pos:column="13"/></name> <operator pos:line="157" pos:column="14">=<pos:position pos:line="157" pos:column="15"/></operator> <call><name pos:line="157" pos:column="16">AddFormDataf<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><operator pos:line="157" pos:column="29">&amp;<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="30">form<pos:position pos:line="157" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="36">&amp;<pos:position pos:line="157" pos:column="41"/></operator><name pos:line="157" pos:column="37">size<pos:position pos:line="157" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="43">"\r\n\r\n"<pos:position pos:line="157" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="55"/></expr_stmt>
      <if pos:line="158" pos:column="7">if <condition pos:line="158" pos:column="10">(<expr><name pos:line="158" pos:column="11">result<pos:position pos:line="158" pos:column="17"/></name></expr>)<pos:position pos:line="158" pos:column="18"/></condition><then pos:line="158" pos:column="18">
        <block type="pseudo"><break pos:line="159" pos:column="9">break;<pos:position pos:line="159" pos:column="15"/></break></block></then></if>

      <if pos:line="161" pos:column="7">if<condition pos:line="161" pos:column="9">(<expr><operator pos:line="161" pos:column="10">(<pos:position pos:line="161" pos:column="11"/></operator><name><name pos:line="161" pos:column="11">post<pos:position pos:line="161" pos:column="15"/></name><operator pos:line="161" pos:column="15">-&gt;<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="17">flags<pos:position pos:line="161" pos:column="22"/></name></name> <operator pos:line="161" pos:column="23">&amp;<pos:position pos:line="161" pos:column="28"/></operator> <name pos:line="161" pos:column="25">HTTPPOST_FILENAME<pos:position pos:line="161" pos:column="42"/></name><operator pos:line="161" pos:column="42">)<pos:position pos:line="161" pos:column="43"/></operator> <operator pos:line="161" pos:column="44">||<pos:position pos:line="161" pos:column="46"/></operator>
         <operator pos:line="162" pos:column="10">(<pos:position pos:line="162" pos:column="11"/></operator><name><name pos:line="162" pos:column="11">post<pos:position pos:line="162" pos:column="15"/></name><operator pos:line="162" pos:column="15">-&gt;<pos:position pos:line="162" pos:column="20"/></operator><name pos:line="162" pos:column="17">flags<pos:position pos:line="162" pos:column="22"/></name></name> <operator pos:line="162" pos:column="23">&amp;<pos:position pos:line="162" pos:column="28"/></operator> <name pos:line="162" pos:column="25">HTTPPOST_READFILE<pos:position pos:line="162" pos:column="42"/></name><operator pos:line="162" pos:column="42">)<pos:position pos:line="162" pos:column="43"/></operator></expr>)<pos:position pos:line="162" pos:column="44"/></condition><then pos:line="162" pos:column="44"> <block pos:line="162" pos:column="45">{
        <comment type="block" pos:line="163" pos:column="9">/* we should include the contents from the specified file */</comment>
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">FILE<pos:position pos:line="164" pos:column="13"/></name> <modifier pos:line="164" pos:column="14">*<pos:position pos:line="164" pos:column="15"/></modifier></type><name pos:line="164" pos:column="15">fileread<pos:position pos:line="164" pos:column="23"/></name></decl>;<pos:position pos:line="164" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="166" pos:column="9">fileread<pos:position pos:line="166" pos:column="17"/></name> <operator pos:line="166" pos:column="18">=<pos:position pos:line="166" pos:column="19"/></operator> <ternary><condition><expr><call><name pos:line="166" pos:column="20">strequal<pos:position pos:line="166" pos:column="28"/></name><argument_list pos:line="166" pos:column="28">(<argument><expr><literal type="string" pos:line="166" pos:column="29">"-"<pos:position pos:line="166" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="34">file<pos:position pos:line="166" pos:column="38"/></name><operator pos:line="166" pos:column="38">-&gt;<pos:position pos:line="166" pos:column="43"/></operator><name pos:line="166" pos:column="40">contents<pos:position pos:line="166" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="166" pos:column="50"/></condition><then pos:line="166" pos:column="50">
          <expr><name pos:line="167" pos:column="11">stdin<pos:position pos:line="167" pos:column="16"/></name></expr></then><else pos:line="167" pos:column="16">:<expr><call><name pos:line="167" pos:column="17">fopen<pos:position pos:line="167" pos:column="22"/></name><argument_list pos:line="167" pos:column="22">(<argument><expr><name><name pos:line="167" pos:column="23">file<pos:position pos:line="167" pos:column="27"/></name><operator pos:line="167" pos:column="27">-&gt;<pos:position pos:line="167" pos:column="32"/></operator><name pos:line="167" pos:column="29">contents<pos:position pos:line="167" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="39">"rb"<pos:position pos:line="167" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="44"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="167" pos:column="45"/></expr_stmt> <comment type="block" pos:line="167" pos:column="46">/* binary read for win32  */</comment>

        <comment type="block" pos:line="169" pos:column="9">/*
         * VMS: This only allows for stream files on VMS.  Stream files are
         * OK, as are FIXED &amp; VAR files WITHOUT implied CC For implied CC,
         * every record needs to have a \n appended &amp; 1 added to SIZE
         */</comment>

        <if pos:line="175" pos:column="9">if<condition pos:line="175" pos:column="11">(<expr><name pos:line="175" pos:column="12">fileread<pos:position pos:line="175" pos:column="20"/></name></expr>)<pos:position pos:line="175" pos:column="21"/></condition><then pos:line="175" pos:column="21"> <block pos:line="175" pos:column="22">{
          <if pos:line="176" pos:column="11">if<condition pos:line="176" pos:column="13">(<expr><name pos:line="176" pos:column="14">fileread<pos:position pos:line="176" pos:column="22"/></name> <operator pos:line="176" pos:column="23">!=<pos:position pos:line="176" pos:column="25"/></operator> <name pos:line="176" pos:column="26">stdin<pos:position pos:line="176" pos:column="31"/></name></expr>)<pos:position pos:line="176" pos:column="32"/></condition><then pos:line="176" pos:column="32"> <block pos:line="176" pos:column="33">{
            <comment type="block" pos:line="177" pos:column="13">/* close the file again */</comment>
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">fclose<pos:position pos:line="178" pos:column="19"/></name><argument_list pos:line="178" pos:column="19">(<argument><expr><name pos:line="178" pos:column="20">fileread<pos:position pos:line="178" pos:column="28"/></name></expr></argument>)<pos:position pos:line="178" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="30"/></expr_stmt>
            <comment type="block" pos:line="179" pos:column="13">/* add the file name only - for later reading from this */</comment>
            <expr_stmt><expr><name pos:line="180" pos:column="13">result<pos:position pos:line="180" pos:column="19"/></name> <operator pos:line="180" pos:column="20">=<pos:position pos:line="180" pos:column="21"/></operator> <call><name pos:line="180" pos:column="22">AddFormData<pos:position pos:line="180" pos:column="33"/></name><argument_list pos:line="180" pos:column="33">(<argument><expr><operator pos:line="180" pos:column="34">&amp;<pos:position pos:line="180" pos:column="39"/></operator><name pos:line="180" pos:column="35">form<pos:position pos:line="180" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="41">FORM_FILE<pos:position pos:line="180" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="52">file<pos:position pos:line="180" pos:column="56"/></name><operator pos:line="180" pos:column="56">-&gt;<pos:position pos:line="180" pos:column="61"/></operator><name pos:line="180" pos:column="58">contents<pos:position pos:line="180" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="180" pos:column="68">0<pos:position pos:line="180" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="180" pos:column="71">&amp;<pos:position pos:line="180" pos:column="76"/></operator><name pos:line="180" pos:column="72">size<pos:position pos:line="180" pos:column="76"/></name></expr></argument>)<pos:position pos:line="180" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="78"/></expr_stmt>
          }<pos:position pos:line="181" pos:column="12"/></block></then>
          <else pos:line="182" pos:column="11">else <block pos:line="182" pos:column="16">{
            <comment type="block" pos:line="183" pos:column="13">/* When uploading from stdin, we can't know the size of the file,
             * thus must read the full file as before. We *could* use chunked
             * transfer-encoding, but that only works for HTTP 1.1 and we
             * can't be sure we work with such a server.
             */</comment>
            <decl_stmt><decl><type><name pos:line="188" pos:column="13">size_t<pos:position pos:line="188" pos:column="19"/></name></type> <name pos:line="188" pos:column="20">nread<pos:position pos:line="188" pos:column="25"/></name></decl>;<pos:position pos:line="188" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="189" pos:column="13">char<pos:position pos:line="189" pos:column="17"/></name></type> <name><name pos:line="189" pos:column="18">buffer<pos:position pos:line="189" pos:column="24"/></name><index pos:line="189" pos:column="24">[<expr><literal type="number" pos:line="189" pos:column="25">512<pos:position pos:line="189" pos:column="28"/></literal></expr>]<pos:position pos:line="189" pos:column="29"/></index></name></decl>;<pos:position pos:line="189" pos:column="30"/></decl_stmt>
            <while pos:line="190" pos:column="13">while<condition pos:line="190" pos:column="18">(<expr><operator pos:line="190" pos:column="19">(<pos:position pos:line="190" pos:column="20"/></operator><name pos:line="190" pos:column="20">nread<pos:position pos:line="190" pos:column="25"/></name> <operator pos:line="190" pos:column="26">=<pos:position pos:line="190" pos:column="27"/></operator> <call><name pos:line="190" pos:column="28">fread<pos:position pos:line="190" pos:column="33"/></name><argument_list pos:line="190" pos:column="33">(<argument><expr><name pos:line="190" pos:column="34">buffer<pos:position pos:line="190" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="190" pos:column="42">1<pos:position pos:line="190" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="190" pos:column="45">sizeof<argument_list pos:line="190" pos:column="51">(<argument><expr><name pos:line="190" pos:column="52">buffer<pos:position pos:line="190" pos:column="58"/></name></expr></argument>)<pos:position pos:line="190" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="190" pos:column="61">fileread<pos:position pos:line="190" pos:column="69"/></name></expr></argument>)<pos:position pos:line="190" pos:column="70"/></argument_list></call><operator pos:line="190" pos:column="70">)<pos:position pos:line="190" pos:column="71"/></operator></expr>)<pos:position pos:line="190" pos:column="72"/></condition> <block pos:line="190" pos:column="73">{
              <expr_stmt><expr><name pos:line="191" pos:column="15">result<pos:position pos:line="191" pos:column="21"/></name> <operator pos:line="191" pos:column="22">=<pos:position pos:line="191" pos:column="23"/></operator> <call><name pos:line="191" pos:column="24">AddFormData<pos:position pos:line="191" pos:column="35"/></name><argument_list pos:line="191" pos:column="35">(<argument><expr><operator pos:line="191" pos:column="36">&amp;<pos:position pos:line="191" pos:column="41"/></operator><name pos:line="191" pos:column="37">form<pos:position pos:line="191" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="43">FORM_DATA<pos:position pos:line="191" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="54">buffer<pos:position pos:line="191" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="62">nread<pos:position pos:line="191" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="191" pos:column="69">&amp;<pos:position pos:line="191" pos:column="74"/></operator><name pos:line="191" pos:column="70">size<pos:position pos:line="191" pos:column="74"/></name></expr></argument>)<pos:position pos:line="191" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="76"/></expr_stmt>
              <if pos:line="192" pos:column="15">if <condition pos:line="192" pos:column="18">(<expr><name pos:line="192" pos:column="19">result<pos:position pos:line="192" pos:column="25"/></name></expr>)<pos:position pos:line="192" pos:column="26"/></condition><then pos:line="192" pos:column="26">
                <block type="pseudo"><break pos:line="193" pos:column="17">break;<pos:position pos:line="193" pos:column="23"/></break></block></then></if>
            }<pos:position pos:line="194" pos:column="14"/></block></while>
          }<pos:position pos:line="195" pos:column="12"/></block></else></if>

          <if pos:line="197" pos:column="11">if <condition pos:line="197" pos:column="14">(<expr><name pos:line="197" pos:column="15">result<pos:position pos:line="197" pos:column="21"/></name></expr>)<pos:position pos:line="197" pos:column="22"/></condition><then pos:line="197" pos:column="22"> <block pos:line="197" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">Curl_formclean<pos:position pos:line="198" pos:column="27"/></name><argument_list pos:line="198" pos:column="27">(<argument><expr><name pos:line="198" pos:column="28">firstform<pos:position pos:line="198" pos:column="37"/></name></expr></argument>)<pos:position pos:line="198" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="199" pos:column="13">free<pos:position pos:line="199" pos:column="17"/></name><argument_list pos:line="199" pos:column="17">(<argument><expr><name pos:line="199" pos:column="18">boundary<pos:position pos:line="199" pos:column="26"/></name></expr></argument>)<pos:position pos:line="199" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="28"/></expr_stmt>
            <return pos:line="200" pos:column="13">return <expr><name pos:line="200" pos:column="20">result<pos:position pos:line="200" pos:column="26"/></name></expr>;<pos:position pos:line="200" pos:column="27"/></return>
          }<pos:position pos:line="201" pos:column="12"/></block></then></if>

        }<pos:position pos:line="203" pos:column="10"/></block></then>
        <else pos:line="204" pos:column="9">else <block pos:line="204" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="205" pos:column="11">Curl_formclean<pos:position pos:line="205" pos:column="25"/></name><argument_list pos:line="205" pos:column="25">(<argument><expr><name pos:line="205" pos:column="26">firstform<pos:position pos:line="205" pos:column="35"/></name></expr></argument>)<pos:position pos:line="205" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="206" pos:column="11">free<pos:position pos:line="206" pos:column="15"/></name><argument_list pos:line="206" pos:column="15">(<argument><expr><name pos:line="206" pos:column="16">boundary<pos:position pos:line="206" pos:column="24"/></name></expr></argument>)<pos:position pos:line="206" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="207" pos:column="11">*<pos:position pos:line="207" pos:column="12"/></operator><name pos:line="207" pos:column="12">finalform<pos:position pos:line="207" pos:column="21"/></name> <operator pos:line="207" pos:column="22">=<pos:position pos:line="207" pos:column="23"/></operator> <name pos:line="207" pos:column="24">NULL<pos:position pos:line="207" pos:column="28"/></name></expr>;<pos:position pos:line="207" pos:column="29"/></expr_stmt>
          <return pos:line="208" pos:column="11">return <expr><name pos:line="208" pos:column="18">CURLE_READ_ERROR<pos:position pos:line="208" pos:column="34"/></name></expr>;<pos:position pos:line="208" pos:column="35"/></return>
        }<pos:position pos:line="209" pos:column="10"/></block></else></if>

      }<pos:position pos:line="211" pos:column="8"/></block></then>
      <elseif pos:line="212" pos:column="7">else <if pos:line="212" pos:column="12">if <condition pos:line="212" pos:column="15">(<expr><name><name pos:line="212" pos:column="16">post<pos:position pos:line="212" pos:column="20"/></name><operator pos:line="212" pos:column="20">-&gt;<pos:position pos:line="212" pos:column="25"/></operator><name pos:line="212" pos:column="22">flags<pos:position pos:line="212" pos:column="27"/></name></name> <operator pos:line="212" pos:column="28">&amp;<pos:position pos:line="212" pos:column="33"/></operator> <name pos:line="212" pos:column="30">HTTPPOST_BUFFER<pos:position pos:line="212" pos:column="45"/></name></expr>)<pos:position pos:line="212" pos:column="46"/></condition><then pos:line="212" pos:column="46"> <block pos:line="212" pos:column="47">{
        <comment type="block" pos:line="213" pos:column="9">/* include contents of buffer */</comment>
        <expr_stmt><expr><name pos:line="214" pos:column="9">result<pos:position pos:line="214" pos:column="15"/></name> <operator pos:line="214" pos:column="16">=<pos:position pos:line="214" pos:column="17"/></operator> <call><name pos:line="214" pos:column="18">AddFormData<pos:position pos:line="214" pos:column="29"/></name><argument_list pos:line="214" pos:column="29">(<argument><expr><operator pos:line="214" pos:column="30">&amp;<pos:position pos:line="214" pos:column="35"/></operator><name pos:line="214" pos:column="31">form<pos:position pos:line="214" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="37">FORM_DATA<pos:position pos:line="214" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="48">post<pos:position pos:line="214" pos:column="52"/></name><operator pos:line="214" pos:column="52">-&gt;<pos:position pos:line="214" pos:column="57"/></operator><name pos:line="214" pos:column="54">buffer<pos:position pos:line="214" pos:column="60"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="215" pos:column="30">post<pos:position pos:line="215" pos:column="34"/></name><operator pos:line="215" pos:column="34">-&gt;<pos:position pos:line="215" pos:column="39"/></operator><name pos:line="215" pos:column="36">bufferlength<pos:position pos:line="215" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="50">&amp;<pos:position pos:line="215" pos:column="55"/></operator><name pos:line="215" pos:column="51">size<pos:position pos:line="215" pos:column="55"/></name></expr></argument>)<pos:position pos:line="215" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="57"/></expr_stmt>
          <if pos:line="216" pos:column="11">if <condition pos:line="216" pos:column="14">(<expr><name pos:line="216" pos:column="15">result<pos:position pos:line="216" pos:column="21"/></name></expr>)<pos:position pos:line="216" pos:column="22"/></condition><then pos:line="216" pos:column="22">
            <block type="pseudo"><break pos:line="217" pos:column="13">break;<pos:position pos:line="217" pos:column="19"/></break></block></then></if>
      }<pos:position pos:line="218" pos:column="8"/></block></then></if></elseif>

      <else pos:line="220" pos:column="7">else <block pos:line="220" pos:column="12">{
        <comment type="block" pos:line="221" pos:column="9">/* include the contents we got */</comment>
        <expr_stmt><expr><name pos:line="222" pos:column="9">result<pos:position pos:line="222" pos:column="15"/></name> <operator pos:line="222" pos:column="16">=<pos:position pos:line="222" pos:column="17"/></operator> <call><name pos:line="222" pos:column="18">AddFormData<pos:position pos:line="222" pos:column="29"/></name><argument_list pos:line="222" pos:column="29">(<argument><expr><operator pos:line="222" pos:column="30">&amp;<pos:position pos:line="222" pos:column="35"/></operator><name pos:line="222" pos:column="31">form<pos:position pos:line="222" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="37">FORM_DATA<pos:position pos:line="222" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="48">post<pos:position pos:line="222" pos:column="52"/></name><operator pos:line="222" pos:column="52">-&gt;<pos:position pos:line="222" pos:column="57"/></operator><name pos:line="222" pos:column="54">contents<pos:position pos:line="222" pos:column="62"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="223" pos:column="30">post<pos:position pos:line="223" pos:column="34"/></name><operator pos:line="223" pos:column="34">-&gt;<pos:position pos:line="223" pos:column="39"/></operator><name pos:line="223" pos:column="36">contentslength<pos:position pos:line="223" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="223" pos:column="52">&amp;<pos:position pos:line="223" pos:column="57"/></operator><name pos:line="223" pos:column="53">size<pos:position pos:line="223" pos:column="57"/></name></expr></argument>)<pos:position pos:line="223" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="59"/></expr_stmt>
        <if pos:line="224" pos:column="9">if <condition pos:line="224" pos:column="12">(<expr><name pos:line="224" pos:column="13">result<pos:position pos:line="224" pos:column="19"/></name></expr>)<pos:position pos:line="224" pos:column="20"/></condition><then pos:line="224" pos:column="20">
          <block type="pseudo"><break pos:line="225" pos:column="11">break;<pos:position pos:line="225" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="226" pos:column="8"/></block></else></if>
    }<pos:position pos:line="227" pos:column="6"/></block> while<condition pos:line="227" pos:column="12">(<expr><operator pos:line="227" pos:column="13">(<pos:position pos:line="227" pos:column="14"/></operator><name pos:line="227" pos:column="14">file<pos:position pos:line="227" pos:column="18"/></name> <operator pos:line="227" pos:column="19">=<pos:position pos:line="227" pos:column="20"/></operator> <name><name pos:line="227" pos:column="21">file<pos:position pos:line="227" pos:column="25"/></name><operator pos:line="227" pos:column="25">-&gt;<pos:position pos:line="227" pos:column="30"/></operator><name pos:line="227" pos:column="27">more<pos:position pos:line="227" pos:column="31"/></name></name><operator pos:line="227" pos:column="31">)<pos:position pos:line="227" pos:column="32"/></operator></expr>)<pos:position pos:line="227" pos:column="33"/></condition>;<pos:position pos:line="227" pos:column="34"/></do> <comment type="block" pos:line="227" pos:column="35">/* for each specified file for this field */</comment>
    <if pos:line="228" pos:column="5">if <condition pos:line="228" pos:column="8">(<expr><name pos:line="228" pos:column="9">result<pos:position pos:line="228" pos:column="15"/></name></expr>)<pos:position pos:line="228" pos:column="16"/></condition><then pos:line="228" pos:column="16"> <block pos:line="228" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="229" pos:column="7">Curl_formclean<pos:position pos:line="229" pos:column="21"/></name><argument_list pos:line="229" pos:column="21">(<argument><expr><name pos:line="229" pos:column="22">firstform<pos:position pos:line="229" pos:column="31"/></name></expr></argument>)<pos:position pos:line="229" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="230" pos:column="7">free<pos:position pos:line="230" pos:column="11"/></name><argument_list pos:line="230" pos:column="11">(<argument><expr><name pos:line="230" pos:column="12">boundary<pos:position pos:line="230" pos:column="20"/></name></expr></argument>)<pos:position pos:line="230" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="22"/></expr_stmt>
      <return pos:line="231" pos:column="7">return <expr><name pos:line="231" pos:column="14">result<pos:position pos:line="231" pos:column="20"/></name></expr>;<pos:position pos:line="231" pos:column="21"/></return>
    }<pos:position pos:line="232" pos:column="6"/></block></then></if>

    <if pos:line="234" pos:column="5">if<condition pos:line="234" pos:column="7">(<expr><name><name pos:line="234" pos:column="8">post<pos:position pos:line="234" pos:column="12"/></name><operator pos:line="234" pos:column="12">-&gt;<pos:position pos:line="234" pos:column="17"/></operator><name pos:line="234" pos:column="14">more<pos:position pos:line="234" pos:column="18"/></name></name></expr>)<pos:position pos:line="234" pos:column="19"/></condition><then pos:line="234" pos:column="19"> <block pos:line="234" pos:column="20">{
      <comment type="block" pos:line="235" pos:column="7">/* this was a multiple-file inclusion, make a termination file
         boundary: */</comment>
      <expr_stmt><expr><name pos:line="237" pos:column="7">result<pos:position pos:line="237" pos:column="13"/></name> <operator pos:line="237" pos:column="14">=<pos:position pos:line="237" pos:column="15"/></operator> <call><name pos:line="237" pos:column="16">AddFormDataf<pos:position pos:line="237" pos:column="28"/></name><argument_list pos:line="237" pos:column="28">(<argument><expr><operator pos:line="237" pos:column="29">&amp;<pos:position pos:line="237" pos:column="34"/></operator><name pos:line="237" pos:column="30">form<pos:position pos:line="237" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="237" pos:column="36">&amp;<pos:position pos:line="237" pos:column="41"/></operator><name pos:line="237" pos:column="37">size<pos:position pos:line="237" pos:column="41"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="238" pos:column="28">"\r\n--%s--"<pos:position pos:line="238" pos:column="40"/></literal></expr></argument>,
                           <argument><expr><name pos:line="239" pos:column="28">fileboundary<pos:position pos:line="239" pos:column="40"/></name></expr></argument>)<pos:position pos:line="239" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="240" pos:column="7">free<pos:position pos:line="240" pos:column="11"/></name><argument_list pos:line="240" pos:column="11">(<argument><expr><name pos:line="240" pos:column="12">fileboundary<pos:position pos:line="240" pos:column="24"/></name></expr></argument>)<pos:position pos:line="240" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="26"/></expr_stmt>
      <if pos:line="241" pos:column="7">if <condition pos:line="241" pos:column="10">(<expr><name pos:line="241" pos:column="11">result<pos:position pos:line="241" pos:column="17"/></name></expr>)<pos:position pos:line="241" pos:column="18"/></condition><then pos:line="241" pos:column="18">
        <block type="pseudo"><break pos:line="242" pos:column="9">break;<pos:position pos:line="242" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="243" pos:column="6"/></block></then></if>

  }<pos:position pos:line="245" pos:column="4"/></block> while<condition pos:line="245" pos:column="10">(<expr><operator pos:line="245" pos:column="11">(<pos:position pos:line="245" pos:column="12"/></operator><name pos:line="245" pos:column="12">post<pos:position pos:line="245" pos:column="16"/></name><operator pos:line="245" pos:column="16">=<pos:position pos:line="245" pos:column="17"/></operator><name><name pos:line="245" pos:column="17">post<pos:position pos:line="245" pos:column="21"/></name><operator pos:line="245" pos:column="21">-&gt;<pos:position pos:line="245" pos:column="26"/></operator><name pos:line="245" pos:column="23">next<pos:position pos:line="245" pos:column="27"/></name></name><operator pos:line="245" pos:column="27">)<pos:position pos:line="245" pos:column="28"/></operator></expr>)<pos:position pos:line="245" pos:column="29"/></condition>;<pos:position pos:line="245" pos:column="30"/></do> <comment type="block" pos:line="245" pos:column="31">/* for each field */</comment>
  <if pos:line="246" pos:column="3">if <condition pos:line="246" pos:column="6">(<expr><name pos:line="246" pos:column="7">result<pos:position pos:line="246" pos:column="13"/></name></expr>)<pos:position pos:line="246" pos:column="14"/></condition><then pos:line="246" pos:column="14"> <block pos:line="246" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="247" pos:column="5">Curl_formclean<pos:position pos:line="247" pos:column="19"/></name><argument_list pos:line="247" pos:column="19">(<argument><expr><name pos:line="247" pos:column="20">firstform<pos:position pos:line="247" pos:column="29"/></name></expr></argument>)<pos:position pos:line="247" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="248" pos:column="5">free<pos:position pos:line="248" pos:column="9"/></name><argument_list pos:line="248" pos:column="9">(<argument><expr><name pos:line="248" pos:column="10">boundary<pos:position pos:line="248" pos:column="18"/></name></expr></argument>)<pos:position pos:line="248" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="20"/></expr_stmt>
    <return pos:line="249" pos:column="5">return <expr><name pos:line="249" pos:column="12">result<pos:position pos:line="249" pos:column="18"/></name></expr>;<pos:position pos:line="249" pos:column="19"/></return>
  }<pos:position pos:line="250" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="252" pos:column="3">/* end-boundary for everything */</comment>
  <expr_stmt><expr><name pos:line="253" pos:column="3">result<pos:position pos:line="253" pos:column="9"/></name> <operator pos:line="253" pos:column="10">=<pos:position pos:line="253" pos:column="11"/></operator> <call><name pos:line="253" pos:column="12">AddFormDataf<pos:position pos:line="253" pos:column="24"/></name><argument_list pos:line="253" pos:column="24">(<argument><expr><operator pos:line="253" pos:column="25">&amp;<pos:position pos:line="253" pos:column="30"/></operator><name pos:line="253" pos:column="26">form<pos:position pos:line="253" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="32">&amp;<pos:position pos:line="253" pos:column="37"/></operator><name pos:line="253" pos:column="33">size<pos:position pos:line="253" pos:column="37"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="254" pos:column="24">"\r\n--%s--\r\n"<pos:position pos:line="254" pos:column="40"/></literal></expr></argument>,
                       <argument><expr><name pos:line="255" pos:column="24">boundary<pos:position pos:line="255" pos:column="32"/></name></expr></argument>)<pos:position pos:line="255" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="34"/></expr_stmt>
  <if pos:line="256" pos:column="3">if <condition pos:line="256" pos:column="6">(<expr><name pos:line="256" pos:column="7">result<pos:position pos:line="256" pos:column="13"/></name></expr>)<pos:position pos:line="256" pos:column="14"/></condition><then pos:line="256" pos:column="14"> <block pos:line="256" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="257" pos:column="5">Curl_formclean<pos:position pos:line="257" pos:column="19"/></name><argument_list pos:line="257" pos:column="19">(<argument><expr><name pos:line="257" pos:column="20">firstform<pos:position pos:line="257" pos:column="29"/></name></expr></argument>)<pos:position pos:line="257" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="258" pos:column="5">free<pos:position pos:line="258" pos:column="9"/></name><argument_list pos:line="258" pos:column="9">(<argument><expr><name pos:line="258" pos:column="10">boundary<pos:position pos:line="258" pos:column="18"/></name></expr></argument>)<pos:position pos:line="258" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="20"/></expr_stmt>
    <return pos:line="259" pos:column="5">return <expr><name pos:line="259" pos:column="12">result<pos:position pos:line="259" pos:column="18"/></name></expr>;<pos:position pos:line="259" pos:column="19"/></return>
  }<pos:position pos:line="260" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="262" pos:column="3">*<pos:position pos:line="262" pos:column="4"/></operator><name pos:line="262" pos:column="4">sizep<pos:position pos:line="262" pos:column="9"/></name> <operator pos:line="262" pos:column="10">=<pos:position pos:line="262" pos:column="11"/></operator> <name pos:line="262" pos:column="12">size<pos:position pos:line="262" pos:column="16"/></name></expr>;<pos:position pos:line="262" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="264" pos:column="3">free<pos:position pos:line="264" pos:column="7"/></name><argument_list pos:line="264" pos:column="7">(<argument><expr><name pos:line="264" pos:column="8">boundary<pos:position pos:line="264" pos:column="16"/></name></expr></argument>)<pos:position pos:line="264" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="266" pos:column="3">*<pos:position pos:line="266" pos:column="4"/></operator><name pos:line="266" pos:column="4">finalform<pos:position pos:line="266" pos:column="13"/></name><operator pos:line="266" pos:column="13">=<pos:position pos:line="266" pos:column="14"/></operator><name pos:line="266" pos:column="14">firstform<pos:position pos:line="266" pos:column="23"/></name></expr>;<pos:position pos:line="266" pos:column="24"/></expr_stmt>

  <return pos:line="268" pos:column="3">return <expr><name pos:line="268" pos:column="10">result<pos:position pos:line="268" pos:column="16"/></name></expr>;<pos:position pos:line="268" pos:column="17"/></return>
}<pos:position pos:line="269" pos:column="2"/></block></function></unit>

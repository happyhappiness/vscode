<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_242_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">read_callback<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dest<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">size<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">nmemb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">void<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">userp<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">WriteThis<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">wt<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><operator pos:line="3" pos:column="26">(<pos:position pos:line="3" pos:column="27"/></operator>struct <name pos:line="3" pos:column="34">WriteThis<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">userp<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">buffer_size<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">size<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">nmemb<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name><name pos:line="6" pos:column="6">wt<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">sizeleft<pos:position pos:line="6" pos:column="18"/></name></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
    <comment type="block" pos:line="7" pos:column="5">/* copy as much as possible from the source to the destination */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">copy_this_much<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name><name pos:line="8" pos:column="29">wt<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">sizeleft<pos:position pos:line="8" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><name pos:line="9" pos:column="8">copy_this_much<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&gt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">buffer_size<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">copy_this_much<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">buffer_size<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memcpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">dest<pos:position pos:line="11" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="18">wt<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">readptr<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">copy_this_much<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">wt<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">readptr<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">+=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">copy_this_much<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">wt<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">sizeleft<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">-=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">copy_this_much<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">copy_this_much<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></return> <comment type="block" pos:line="15" pos:column="28">/* we copied this many bytes */</comment>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <return pos:line="18" pos:column="3">return <expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>;<pos:position pos:line="18" pos:column="12"/></return> <comment type="block" pos:line="18" pos:column="13">/* no more data left to deliver */</comment>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

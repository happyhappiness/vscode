<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_44_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><name pos:line="3" pos:column="12">CURLE_OK<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* curl easy handle */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURL<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">handle<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* help data */</comment>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">callback_data<pos:position pos:line="9" pos:column="23"/></name></name></type> <name pos:line="9" pos:column="24">data<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><block pos:line="9" pos:column="31">{ <expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr> }<pos:position pos:line="9" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* global initialization */</comment>
  <expr_stmt><expr><name pos:line="12" pos:column="3">rc<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">curl_global_init<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">CURL_GLOBAL_ALL<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">rc<pos:position pos:line="13" pos:column="8"/></name></expr>)<pos:position pos:line="13" pos:column="9"/></condition><then pos:line="13" pos:column="9">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">rc<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* initialization of easy handle */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">handle<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">curl_easy_init<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">()<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">handle<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14"> <block pos:line="18" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">curl_global_cleanup<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">()<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* turn on wildcard matching */</comment>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">curl_easy_setopt<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">handle<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">CURLOPT_WILDCARDMATCH<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="51">1L<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* callback is called before download of concrete file started */</comment>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">curl_easy_setopt<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">handle<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">CURLOPT_CHUNK_BGN_FUNCTION<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">file_is_coming<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* callback is called after data from the file have been transferred */</comment>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">curl_easy_setopt<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">handle<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">CURLOPT_CHUNK_END_FUNCTION<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">file_is_downloaded<pos:position pos:line="30" pos:column="74"/></name></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* this callback will write contents into files */</comment>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">curl_easy_setopt<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">handle<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">CURLOPT_WRITEFUNCTION<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">write_it<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* put transfer data into callbacks */</comment>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">curl_easy_setopt<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">handle<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="28">CURLOPT_CHUNK_DATA<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="48">&amp;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="49">data<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">curl_easy_setopt<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">handle<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">CURLOPT_WRITEDATA<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">data<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* curl_easy_setopt(handle, CURLOPT_VERBOSE, 1L); */</comment>

  <comment type="block" pos:line="41" pos:column="3">/* set an URL containing wildcard pattern (only in the last part) */</comment>
  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name pos:line="42" pos:column="6">argc<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">==<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">2<pos:position pos:line="42" pos:column="15"/></literal></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="5">curl_easy_setopt<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">handle<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">CURLOPT_URL<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">argv<pos:position pos:line="43" pos:column="47"/></name><index pos:line="43" pos:column="47">[<expr><literal type="number" pos:line="43" pos:column="48">1<pos:position pos:line="43" pos:column="49"/></literal></expr>]<pos:position pos:line="43" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt></block></then>
  <else pos:line="44" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">curl_easy_setopt<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">handle<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">CURLOPT_URL<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="43">"ftp://example.com/test/*"<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="71"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="47" pos:column="3">/* and start transfer! */</comment>
  <expr_stmt><expr><name pos:line="48" pos:column="3">rc<pos:position pos:line="48" pos:column="5"/></name> <operator pos:line="48" pos:column="6">=<pos:position pos:line="48" pos:column="7"/></operator> <call><name pos:line="48" pos:column="8">curl_easy_perform<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">handle<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">curl_easy_cleanup<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">handle<pos:position pos:line="50" pos:column="27"/></name></expr></argument>)<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">curl_global_cleanup<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">()<pos:position pos:line="51" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">rc<pos:position pos:line="52" pos:column="12"/></name></expr>;<pos:position pos:line="52" pos:column="13"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

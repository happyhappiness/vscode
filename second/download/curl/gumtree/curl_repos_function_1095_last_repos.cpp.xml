<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1095_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">on_stream_close<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">nghttp2_session<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">session<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int32_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">stream_id<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">uint32_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">error_code<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">void<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">userp<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data_s<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">HTTP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">stream<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">connectdata<pos:position pos:line="6" pos:column="21"/></name></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">conn<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><operator pos:line="6" pos:column="30">(<pos:position pos:line="6" pos:column="31"/></operator>struct <name pos:line="6" pos:column="38">connectdata<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">userp<pos:position pos:line="6" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">session<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">stream_id<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">stream_id<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
    <comment type="block" pos:line="11" pos:column="5">/* get the stream from the hash based on Stream ID, stream ID zero is for
       connection-oriented stuff */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">data_s<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">nghttp2_session_get_stream_user_data<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">session<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">stream_id<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><operator pos:line="14" pos:column="8">!<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">data_s<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
      <comment type="block" pos:line="15" pos:column="7">/* We could get stream ID not in the hash.  For example, if we
         decided to reject stream (e.g., PUSH_PROMISE). */</comment>
      <return pos:line="17" pos:column="7">return <expr><literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">DEBUGF<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><call><name pos:line="19" pos:column="12">infof<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">data_s<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"on_stream_close(), %s (err %d), stream %u\n"<pos:position pos:line="19" pos:column="71"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="20" pos:column="18">Curl_http2_strerror<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">error_code<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">error_code<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">stream_id<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">stream<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">data_s<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">req<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">protop<pos:position pos:line="21" pos:column="32"/></name></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">stream<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">stream<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">error_code<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">error_code<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">stream<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">closed<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">TRUE<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">data_s<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">state<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">drain<pos:position pos:line="27" pos:column="24"/></name></name><operator pos:line="27" pos:column="24">++<pos:position pos:line="27" pos:column="26"/></operator></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">conn<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">proto<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">httpc<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">drain_total<pos:position pos:line="28" pos:column="34"/></name></name><operator pos:line="28" pos:column="34">++<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* remove the entry from the hash as the stream is now gone */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">nghttp2_session_set_stream_user_data<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">session<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">stream_id<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="62">0<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">DEBUGF<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><call><name pos:line="32" pos:column="12">infof<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">data_s<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">"Removed stream %u hash!\n"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">stream_id<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><literal type="number" pos:line="34" pos:column="10">0<pos:position pos:line="34" pos:column="11"/></literal></expr>;<pos:position pos:line="34" pos:column="12"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

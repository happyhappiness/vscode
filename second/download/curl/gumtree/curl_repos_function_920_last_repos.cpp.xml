<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_920_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">main_init<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">GlobalConfig<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">config<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">__DJGPP__<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call> <operator pos:line="5" pos:column="24">||<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">defined<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">__GO32__<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="6" pos:column="3">/* stop stat() wasting time */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">_djstat_flags<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">|=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">_STAT_INODE<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">|<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">_STAT_EXEC_MAGIC<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">|<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="53">_STAT_DIRSIZE<pos:position pos:line="7" pos:column="66"/></name></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="10" pos:column="3">/* Initialise the global config */</comment>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">config<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">showerror<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">-<pos:position pos:line="11" pos:column="24"/></operator><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>             <comment type="block" pos:line="11" pos:column="39">/* Will show errors */</comment>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">config<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">errors<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">stderr<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>            <comment type="block" pos:line="12" pos:column="39">/* Default errors to stderr */</comment>

  <comment type="block" pos:line="14" pos:column="3">/* Allocate the initial operate config */</comment>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">config<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">first<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name><name pos:line="15" pos:column="19">config<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">last<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <call><name pos:line="15" pos:column="34">malloc<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><sizeof pos:line="15" pos:column="41">sizeof<argument_list pos:line="15" pos:column="47">(<argument><expr pos:line="15" pos:column="48">struct <name pos:line="15" pos:column="55">OperationConfig<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">config<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">first<pos:position pos:line="16" pos:column="19"/></name></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
    <comment type="block" pos:line="17" pos:column="5">/* Perform the libcurl initialization */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">curl_global_init<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">CURL_GLOBAL_DEFAULT<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><operator pos:line="19" pos:column="8">!<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">result<pos:position pos:line="19" pos:column="15"/></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <block pos:line="19" pos:column="17">{
      <comment type="block" pos:line="20" pos:column="7">/* Get information about libcurl */</comment>
      <expr_stmt><expr><name pos:line="21" pos:column="7">result<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">get_libcurl_info<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">()<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>

      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><operator pos:line="23" pos:column="10">!<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">result<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18"> <block pos:line="23" pos:column="19">{
        <comment type="block" pos:line="24" pos:column="9">/* Get a curl handle to use for all forthcoming curl transfers */</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">config<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">easy<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">curl_easy_init<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">()<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
        <if pos:line="26" pos:column="9">if<condition pos:line="26" pos:column="11">(<expr><name><name pos:line="26" pos:column="12">config<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">easy<pos:position pos:line="26" pos:column="24"/></name></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25"> <block pos:line="26" pos:column="26">{
          <comment type="block" pos:line="27" pos:column="11">/* Initialise the config */</comment>
          <expr_stmt><expr><call><name pos:line="28" pos:column="11">config_init<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name><name pos:line="28" pos:column="23">config<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">first<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="29" pos:column="11">config<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">first<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">easy<pos:position pos:line="29" pos:column="30"/></name></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">config<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">easy<pos:position pos:line="29" pos:column="45"/></name></name></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="30" pos:column="11">config<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">first<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">global<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">config<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <else pos:line="32" pos:column="9">else <block pos:line="32" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="33" pos:column="11">helpf<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">stderr<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">"error initializing curl easy handle\n"<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
          <expr_stmt><expr><name pos:line="34" pos:column="11">result<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">CURLE_FAILED_INIT<pos:position pos:line="34" pos:column="37"/></name></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="35" pos:column="11">free<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name><name pos:line="35" pos:column="16">config<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">first<pos:position pos:line="35" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
      }<pos:position pos:line="37" pos:column="8"/></block></then>
      <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">helpf<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">stderr<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="23">"error retrieving curl library information\n"<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">free<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name><name pos:line="40" pos:column="14">config<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">first<pos:position pos:line="40" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">helpf<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">stderr<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"error initializing curl library\n"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">free<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name><name pos:line="45" pos:column="12">config<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">first<pos:position pos:line="45" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>
  }<pos:position pos:line="47" pos:column="4"/></block></then>
  <else pos:line="48" pos:column="3">else <block pos:line="48" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">helpf<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">stderr<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"error initializing curl\n"<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">result<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></else></if>

  <return pos:line="53" pos:column="3">return <expr><name pos:line="53" pos:column="10">result<pos:position pos:line="53" pos:column="16"/></name></expr>;<pos:position pos:line="53" pos:column="17"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

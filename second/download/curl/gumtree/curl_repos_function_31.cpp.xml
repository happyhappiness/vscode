<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_31.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_escape<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">string<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
   <decl_stmt><decl><type><name pos:line="3" pos:column="4">int<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">alloc<pos:position pos:line="3" pos:column="13"/></name><init pos:line="3" pos:column="13">=<expr><call><name pos:line="3" pos:column="14">strlen<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">string<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call><operator pos:line="3" pos:column="28">+<pos:position pos:line="3" pos:column="29"/></operator><literal type="number" pos:line="3" pos:column="29">1<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="4" pos:column="4">char<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">ns<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">malloc<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">alloc<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="5" pos:column="4">unsigned<pos:position pos:line="5" pos:column="12"/></name> <name pos:line="5" pos:column="13">char<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">in<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="6" pos:column="4">int<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">newlen<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">alloc<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="7" pos:column="4">int<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">index<pos:position pos:line="7" pos:column="13"/></name><init pos:line="7" pos:column="13">=<expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

   <while pos:line="9" pos:column="4">while<condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">string<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition> <block pos:line="9" pos:column="19">{
      <expr_stmt><expr><name pos:line="10" pos:column="7">in<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">string<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">(<expr><literal type="char" pos:line="11" pos:column="10">' '<pos:position pos:line="11" pos:column="13"/></literal> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">in<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
	 <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="10">ns<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><name pos:line="12" pos:column="13">index<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">++<pos:position pos:line="12" pos:column="20"/></operator></expr>]<pos:position pos:line="12" pos:column="21"/></index></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="char" pos:line="12" pos:column="24">'+'<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt></block></then>
      <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if<condition pos:line="13" pos:column="14">(<expr><operator pos:line="13" pos:column="15">!<pos:position pos:line="13" pos:column="16"/></operator><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">in<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&gt;=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="char" pos:line="13" pos:column="23">'a'<pos:position pos:line="13" pos:column="26"/></literal> <operator pos:line="13" pos:column="27">&amp;&amp;<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="30">in<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&lt;=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="char" pos:line="13" pos:column="36">'z'<pos:position pos:line="13" pos:column="39"/></literal><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">&amp;&amp;<pos:position pos:line="13" pos:column="51"/></operator>
	      <operator pos:line="14" pos:column="15">!<pos:position pos:line="14" pos:column="16"/></operator><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">in<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&gt;=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="char" pos:line="14" pos:column="23">'A'<pos:position pos:line="14" pos:column="26"/></literal> <operator pos:line="14" pos:column="27">&amp;&amp;<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="30">in<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">&lt;=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="char" pos:line="14" pos:column="36">'Z'<pos:position pos:line="14" pos:column="39"/></literal><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="41">&amp;&amp;<pos:position pos:line="14" pos:column="51"/></operator>
	      <operator pos:line="15" pos:column="15">!<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">in<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&gt;=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="char" pos:line="15" pos:column="23">'0'<pos:position pos:line="15" pos:column="26"/></literal> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="30">in<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">&lt;=<pos:position pos:line="15" pos:column="38"/></operator> <literal type="char" pos:line="15" pos:column="36">'9'<pos:position pos:line="15" pos:column="39"/></literal><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
	 <comment type="block" pos:line="16" pos:column="10">/* encode it */</comment>
	 <expr_stmt><expr><name pos:line="17" pos:column="10">newlen<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">+=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="20">2<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt> <comment type="block" pos:line="17" pos:column="23">/* the size grows with two, since this'll become a %XX */</comment>
	 <if pos:line="18" pos:column="10">if<condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">newlen<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">&gt;<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="22">alloc<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{
	    <expr_stmt><expr><name pos:line="19" pos:column="13">alloc<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">*=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">2<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="20" pos:column="13">ns<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">realloc<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">ns<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">alloc<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
	    <if pos:line="21" pos:column="13">if<condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">!<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">ns<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
	       <block type="pseudo"><return pos:line="22" pos:column="16">return <expr><name pos:line="22" pos:column="23">NULL<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return></block></then></if>
	 }<pos:position pos:line="23" pos:column="11"/></block></then></if>
	 <expr_stmt><expr><call><name pos:line="24" pos:column="10">sprintf<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><operator pos:line="24" pos:column="18">&amp;<pos:position pos:line="24" pos:column="23"/></operator><name><name pos:line="24" pos:column="19">ns<pos:position pos:line="24" pos:column="21"/></name><index pos:line="24" pos:column="21">[<expr><name pos:line="24" pos:column="22">index<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"%%%02X"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">in<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
	 <expr_stmt><expr><name pos:line="25" pos:column="10">index<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">+=<pos:position pos:line="25" pos:column="17"/></operator><literal type="number" pos:line="25" pos:column="17">3<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if></elseif>
      <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
	 <comment type="block" pos:line="28" pos:column="10">/* just copy this */</comment>
	 <expr_stmt><expr><name><name pos:line="29" pos:column="10">ns<pos:position pos:line="29" pos:column="12"/></name><index pos:line="29" pos:column="12">[<expr><name pos:line="29" pos:column="13">index<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator></expr>]<pos:position pos:line="29" pos:column="21"/></index></name><operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">in<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name pos:line="31" pos:column="7">string<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">++<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
   }<pos:position pos:line="32" pos:column="5"/></block></while>
   <expr_stmt><expr><name><name pos:line="33" pos:column="4">ns<pos:position pos:line="33" pos:column="6"/></name><index pos:line="33" pos:column="6">[<expr><name pos:line="33" pos:column="7">index<pos:position pos:line="33" pos:column="12"/></name></expr>]<pos:position pos:line="33" pos:column="13"/></index></name><operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt> <comment type="block" pos:line="33" pos:column="17">/* terminate it */</comment>
   <return pos:line="34" pos:column="4">return <expr><name pos:line="34" pos:column="11">ns<pos:position pos:line="34" pos:column="13"/></name></expr>;<pos:position pos:line="34" pos:column="14"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2322_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">auth_decode_digest_md5_message<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">chlg64<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">nonce<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">size_t<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">nlen<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="3" pos:column="48">char<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">realm<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="61">size_t<pos:position pos:line="3" pos:column="67"/></name></type> <name pos:line="3" pos:column="68">rlen<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="4" pos:column="48">char<pos:position pos:line="4" pos:column="52"/></name> <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier></type><name pos:line="4" pos:column="54">alg<pos:position pos:line="4" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="59">size_t<pos:position pos:line="4" pos:column="65"/></name></type> <name pos:line="4" pos:column="66">alen<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="5" pos:column="48">char<pos:position pos:line="5" pos:column="52"/></name> <modifier pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></modifier></type><name pos:line="5" pos:column="54">qop<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="59">size_t<pos:position pos:line="5" pos:column="65"/></name></type> <name pos:line="5" pos:column="66">qlen<pos:position pos:line="5" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="71"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">CURLE_OK<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">chlg<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">chlglen<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">chlg64len<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name pos:line="10" pos:column="22">strlen<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">chlg64<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Decode the base-64 encoded challenge message */</comment>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">chlg64len<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&amp;&amp;<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">chlg64<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">!=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="char" pos:line="13" pos:column="30">'='<pos:position pos:line="13" pos:column="33"/></literal></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <block pos:line="13" pos:column="35">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">result<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">Curl_base64_decode<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">chlg64<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="42">chlg<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">chlglen<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">result<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">result<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* Ensure we have a valid challenge message */</comment>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">chlg<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></return></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Retrieve nonce string from the challenge */</comment>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><call><name pos:line="24" pos:column="7">auth_digest_get_key_value<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">(<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">char<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></operator><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="42">chlg<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="48">"nonce=\""<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">nonce<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="67">nlen<pos:position pos:line="24" pos:column="71"/></name></expr></argument>,
                                <argument><expr><literal type="char" pos:line="25" pos:column="33">'\"'<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">free<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">chlg<pos:position pos:line="26" pos:column="14"/></name></expr></argument>)<pos:position pos:line="26" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="27" pos:column="38"/></name></expr>;<pos:position pos:line="27" pos:column="39"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Retrieve realm string from the challenge */</comment>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><call><name pos:line="31" pos:column="7">auth_digest_get_key_value<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">(<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">char<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">*<pos:position pos:line="31" pos:column="40"/></operator><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">chlg<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="48">"realm=\""<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">realm<pos:position pos:line="31" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="67">rlen<pos:position pos:line="31" pos:column="71"/></name></expr></argument>,
                                <argument><expr><literal type="char" pos:line="32" pos:column="33">'\"'<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
    <comment type="block" pos:line="33" pos:column="5">/* Challenge does not have a realm, set empty string [RFC2831] page 6 */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">strcpy<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">realm<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">""<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* Retrieve algorithm string from the challenge */</comment>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><operator pos:line="38" pos:column="6">!<pos:position pos:line="38" pos:column="7"/></operator><call><name pos:line="38" pos:column="7">auth_digest_get_key_value<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">char<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">*<pos:position pos:line="38" pos:column="40"/></operator><operator pos:line="38" pos:column="40">)<pos:position pos:line="38" pos:column="41"/></operator> <name pos:line="38" pos:column="42">chlg<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="48">"algorithm="<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="62">alg<pos:position pos:line="38" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="67">alen<pos:position pos:line="38" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="73">','<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="78"/></condition><then pos:line="38" pos:column="78"> <block pos:line="38" pos:column="79">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">free<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name pos:line="39" pos:column="10">chlg<pos:position pos:line="39" pos:column="14"/></name></expr></argument>)<pos:position pos:line="39" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Retrieve qop-options string from the challenge */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><operator pos:line="44" pos:column="6">!<pos:position pos:line="44" pos:column="7"/></operator><call><name pos:line="44" pos:column="7">auth_digest_get_key_value<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><operator pos:line="44" pos:column="33">(<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">char<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">*<pos:position pos:line="44" pos:column="40"/></operator><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="42">chlg<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="48">"qop=\""<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">qop<pos:position pos:line="44" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="63">qlen<pos:position pos:line="44" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="69">'\"'<pos:position pos:line="44" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="75"/></condition><then pos:line="44" pos:column="75"> <block pos:line="44" pos:column="76">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">free<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><name pos:line="45" pos:column="10">chlg<pos:position pos:line="45" pos:column="14"/></name></expr></argument>)<pos:position pos:line="45" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">free<pos:position pos:line="49" pos:column="7"/></name><argument_list pos:line="49" pos:column="7">(<argument><expr><name pos:line="49" pos:column="8">chlg<pos:position pos:line="49" pos:column="12"/></name></expr></argument>)<pos:position pos:line="49" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt>

  <return pos:line="51" pos:column="3">return <expr><name pos:line="51" pos:column="10">CURLE_OK<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

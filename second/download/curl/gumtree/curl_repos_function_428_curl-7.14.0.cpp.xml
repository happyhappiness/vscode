<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_428_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tld_check_name<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">SessionHandle<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">data<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">ace_hostname<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">err_pos<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">uc_name<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Convert (and downcase) ACE-name back into locale's character set */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">rc<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">idna_to_unicode_lzlz<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">ace_hostname<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">uc_name<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="53">0<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">!=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">IDNA_SUCCESS<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">FALSE<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator></expr>;<pos:position pos:line="11" pos:column="20"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">rc<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <call><name pos:line="13" pos:column="8">tld_check_lz<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">uc_name<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">err_pos<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">rc<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">==<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">TLD_INVALID<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="6">infof<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">data<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="18">"WARNING: %s; pos %u = `%c'/0x%02X\n"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>,
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">HAVE_TLD_STRERROR<pos:position pos:line="16" pos:column="25"/></name></cpp:ifdef>
           <argument><expr><call><name pos:line="17" pos:column="12">tld_strerror<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">rc<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr></argument>,
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
           <argument><expr><literal type="string" pos:line="19" pos:column="12">"&lt;no msg&gt;"<pos:position pos:line="19" pos:column="28"/></literal></expr></argument>,
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
           <argument><expr><name pos:line="21" pos:column="12">err_pos<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="21">uc_name<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><name pos:line="21" pos:column="29">err_pos<pos:position pos:line="21" pos:column="36"/></name></expr>]<pos:position pos:line="21" pos:column="37"/></index></name></expr></argument>,
           <argument><expr><name><name pos:line="22" pos:column="12">uc_name<pos:position pos:line="22" pos:column="19"/></name><index pos:line="22" pos:column="19">[<expr><name pos:line="22" pos:column="20">err_pos<pos:position pos:line="22" pos:column="27"/></name></expr>]<pos:position pos:line="22" pos:column="28"/></index></name> <operator pos:line="22" pos:column="29">&amp;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="31">255<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt></block></then>
  <elseif pos:line="23" pos:column="3">else <if pos:line="23" pos:column="8">if <condition pos:line="23" pos:column="11">(<expr><name pos:line="23" pos:column="12">rc<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">!=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">TLD_SUCCESS<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
       <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="8">infof<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">data<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="20">"WARNING: TLD check for %s failed; %s\n"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>,
             <argument><expr><name pos:line="25" pos:column="14">uc_name<pos:position pos:line="25" pos:column="21"/></name></expr></argument>,
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">HAVE_TLD_STRERROR<pos:position pos:line="26" pos:column="25"/></name></cpp:ifdef>
             <argument><expr><call><name pos:line="27" pos:column="14">tld_strerror<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">rc<pos:position pos:line="27" pos:column="29"/></name></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></call>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
             <literal type="string" pos:line="29" pos:column="14">"&lt;no msg&gt;"<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
         )<pos:position pos:line="31" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="12"/></expr_stmt></block></then></if></elseif></if>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">uc_name<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="6">idn_free<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">uc_name<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">rc<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">TLD_SUCCESS<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">)<pos:position pos:line="34" pos:column="29"/></operator></expr>;<pos:position pos:line="34" pos:column="30"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1719_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_rand_hex<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">Curl_easy<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">data<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">rnd<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">size_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">num<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">hex<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="string" pos:line="5" pos:column="21">"0123456789abcdef"<pos:position pos:line="5" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">buffer<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><literal type="number" pos:line="6" pos:column="24">128<pos:position pos:line="6" pos:column="27"/></literal></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">bufp<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">buffer<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">DEBUGASSERT<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">num<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&gt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">1<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">num<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">/<pos:position pos:line="10" pos:column="11"/></operator><literal type="number" pos:line="10" pos:column="11">2<pos:position pos:line="10" pos:column="12"/></literal> <operator pos:line="10" pos:column="13">&gt;=<pos:position pos:line="10" pos:column="18"/></operator> <sizeof pos:line="10" pos:column="16">sizeof<argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">buffer<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></sizeof><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">||<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">!<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">num<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">&amp;<pos:position pos:line="10" pos:column="45"/></operator><literal type="number" pos:line="10" pos:column="41">1<pos:position pos:line="10" pos:column="42"/></literal><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
    <comment type="block" pos:line="11" pos:column="5">/* make sure it fits in the local buffer and that it is an odd number! */</comment>
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">num<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">--<pos:position pos:line="14" pos:column="8"/></operator></expr>;<pos:position pos:line="14" pos:column="9"/></expr_stmt> <comment type="block" pos:line="14" pos:column="10">/* save one for zero termination */</comment>

  <expr_stmt><expr><name pos:line="16" pos:column="3">result<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">Curl_rand<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">data<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">buffer<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">num<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">/<pos:position pos:line="16" pos:column="40"/></operator><literal type="number" pos:line="16" pos:column="40">2<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">result<pos:position pos:line="17" pos:column="12"/></name></expr>)<pos:position pos:line="17" pos:column="13"/></condition><then pos:line="17" pos:column="13">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">result<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return></block></then></if>

  <while pos:line="20" pos:column="3">while<condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">num<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition> <block pos:line="20" pos:column="14">{
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">rnd<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">++<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">hex<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">bufp<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="27">0xF0<pos:position pos:line="21" pos:column="31"/></literal><operator pos:line="21" pos:column="31">)<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">&gt;&gt;<pos:position pos:line="21" pos:column="37"/></operator><literal type="number" pos:line="21" pos:column="34">4<pos:position pos:line="21" pos:column="35"/></literal></expr>]<pos:position pos:line="21" pos:column="36"/></index></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">rnd<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">++<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name><name pos:line="22" pos:column="14">hex<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><operator pos:line="22" pos:column="18">*<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">bufp<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="26">0x0F<pos:position pos:line="22" pos:column="30"/></literal></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">bufp<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">++<pos:position pos:line="23" pos:column="11"/></operator></expr>;<pos:position pos:line="23" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">num<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">-=<pos:position pos:line="24" pos:column="11"/></operator> <literal type="number" pos:line="24" pos:column="12">2<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">rnd<pos:position pos:line="26" pos:column="7"/></name> <operator pos:line="26" pos:column="8">=<pos:position pos:line="26" pos:column="9"/></operator> <literal type="number" pos:line="26" pos:column="10">0<pos:position pos:line="26" pos:column="11"/></literal></expr>;<pos:position pos:line="26" pos:column="12"/></expr_stmt>

  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">result<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

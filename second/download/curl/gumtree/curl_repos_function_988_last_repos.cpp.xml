<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_988_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">getpass_r<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">prompt<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buffer<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">buflen<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">sts<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">short<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">chan<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* MSK, 23-JAN-2004, iosbdef.h wasn't in VAX V7.2 or CC 6.4  */</comment>
  <comment type="block" pos:line="7" pos:column="3">/* distribution so I created this.  May revert back later to */</comment>
  <comment type="block" pos:line="8" pos:column="3">/* struct _iosb iosb;                                        */</comment>
  <struct pos:line="9" pos:column="3">struct <name pos:line="9" pos:column="10">_iosb<pos:position pos:line="9" pos:column="15"/></name>
     <block pos:line="10" pos:column="6">{<public type="default" pos:line="10" pos:column="7">
     <decl_stmt><decl><type><name pos:line="11" pos:column="6">short<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">int<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">iosb$w_status<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt> <comment type="block" pos:line="11" pos:column="31">/* status     */</comment>
     <decl_stmt><decl><type><name pos:line="12" pos:column="6">short<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">iosb$w_bcnt<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>   <comment type="block" pos:line="12" pos:column="31">/* byte count */</comment>
     <decl_stmt><decl><type><name pos:line="13" pos:column="6">int<pos:position pos:line="13" pos:column="9"/></name></type>       <name pos:line="13" pos:column="16">unused<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>        <comment type="block" pos:line="13" pos:column="31">/* unused     */</comment>
     <pos:position pos:line="14" pos:column="6"/></public>}<pos:position pos:line="14" pos:column="7"/></block> <decl><name pos:line="14" pos:column="8">iosb<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></struct>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">$DESCRIPTOR<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">ttdesc<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"TT"<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">buffer<pos:position pos:line="18" pos:column="9"/></name><index pos:line="18" pos:column="9">[<expr><literal type="number" pos:line="18" pos:column="10">0<pos:position pos:line="18" pos:column="11"/></literal></expr>]<pos:position pos:line="18" pos:column="12"/></index></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="char" pos:line="18" pos:column="15">'\0'<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">sts<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <call><name pos:line="19" pos:column="9">sys$assign<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="21">ttdesc<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="29">&amp;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="30">chan<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="36">0<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="39">0<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">sts<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">&amp;<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="12">1<pos:position pos:line="20" pos:column="13"/></literal></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">sts<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">sys$qiow<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="23">chan<pos:position pos:line="21" pos:column="27"/></name></expr></argument>,
                   <argument><expr><name pos:line="22" pos:column="20">IO$_READPROMPT<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">|<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">IO$M_NOECHO<pos:position pos:line="22" pos:column="48"/></name></expr></argument>,
                   <argument><expr><operator pos:line="23" pos:column="20">&amp;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="21">iosb<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">buffer<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">buflen<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>,
                   <argument><expr><name pos:line="24" pos:column="20">prompt<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="28">strlen<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">prompt<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><operator pos:line="26" pos:column="8">(<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">sts<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">&amp;<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal><operator pos:line="26" pos:column="16">)<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">&amp;&amp;<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">iosb<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">iosb$w_status<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator> <literal type="number" pos:line="26" pos:column="43">1<pos:position pos:line="26" pos:column="44"/></literal><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="7">buffer<pos:position pos:line="27" pos:column="13"/></name><index pos:line="27" pos:column="13">[<expr><name><name pos:line="27" pos:column="14">iosb<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">iosb$w_bcnt<pos:position pos:line="27" pos:column="30"/></name></name></expr>]<pos:position pos:line="27" pos:column="31"/></index></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="char" pos:line="27" pos:column="34">'\0'<pos:position pos:line="27" pos:column="38"/></literal></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">sts<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">sys$dassgn<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">chan<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">buffer<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return> <comment type="block" pos:line="31" pos:column="18">/* we always return success */</comment>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1722_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ntlm_core_mk_ntlmv2_resp<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">unsigned<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ntlmv2hash<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">unsigned<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">challenge_client<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">ntlmdata<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">ntlm<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">unsigned<pos:position pos:line="4" pos:column="48"/></name> <name pos:line="4" pos:column="49">char<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier><modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type><name pos:line="4" pos:column="56">ntresp<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="5" pos:column="40">unsigned<pos:position pos:line="5" pos:column="48"/></name> <name pos:line="5" pos:column="49">int<pos:position pos:line="5" pos:column="52"/></name> <modifier pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></modifier></type><name pos:line="5" pos:column="54">ntresp_len<pos:position pos:line="5" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="65"/></parameter_list>
<block pos:line="6" pos:column="1">{
<comment type="block" pos:line="7" pos:column="1">/* NTLMv2 response structure :
------------------------------------------------------------------------------
0     HMAC MD5         16 bytes
------BLOB--------------------------------------------------------------------
16    Signature        0x01010000
20    Reserved         long (0x00000000)
24    Timestamp        LE, 64-bit signed value representing the number of
                       tenths of a microsecond since January 1, 1601.
32    Client Nonce     8 bytes
40    Unknown          4 bytes
44    Target Info      N bytes (from the type-2 message)
44+N  Unknown          4 bytes
------------------------------------------------------------------------------
*/</comment>

  <decl_stmt><decl><type><name pos:line="22" pos:column="3">unsigned<pos:position pos:line="22" pos:column="11"/></name> <name pos:line="22" pos:column="12">int<pos:position pos:line="22" pos:column="15"/></name></type> <name pos:line="22" pos:column="16">len<pos:position pos:line="22" pos:column="19"/></name> <init pos:line="22" pos:column="20">= <expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">unsigned<pos:position pos:line="23" pos:column="11"/></name> <name pos:line="23" pos:column="12">char<pos:position pos:line="23" pos:column="16"/></name> <modifier pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></modifier></type><name pos:line="23" pos:column="18">ptr<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><name pos:line="23" pos:column="24">NULL<pos:position pos:line="23" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">unsigned<pos:position pos:line="24" pos:column="11"/></name> <name pos:line="24" pos:column="12">char<pos:position pos:line="24" pos:column="16"/></name></type> <name><name pos:line="24" pos:column="17">hmac_output<pos:position pos:line="24" pos:column="28"/></name><index pos:line="24" pos:column="28">[<expr><name pos:line="24" pos:column="29">NTLM_HMAC_MD5_LEN<pos:position pos:line="24" pos:column="46"/></name></expr>]<pos:position pos:line="24" pos:column="47"/></index></name></decl>;<pos:position pos:line="24" pos:column="48"/></decl_stmt>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><call><name pos:line="25" pos:column="5">defined<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">HAVE_LONGLONG<pos:position pos:line="25" pos:column="26"/></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">long<pos:position pos:line="26" pos:column="7"/></name> <name pos:line="26" pos:column="8">long<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">tw<pos:position pos:line="26" pos:column="15"/></name></decl>;<pos:position pos:line="26" pos:column="16"/></decl_stmt>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">__int64<pos:position pos:line="28" pos:column="10"/></name></type> <name pos:line="28" pos:column="11">tw<pos:position pos:line="28" pos:column="13"/></name></decl>;<pos:position pos:line="28" pos:column="14"/></decl_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">CURLcode<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">result<pos:position pos:line="30" pos:column="18"/></name> <init pos:line="30" pos:column="19">= <expr><name pos:line="30" pos:column="21">CURLE_OK<pos:position pos:line="30" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* Calculate the timestamp */</comment>
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">DEBUGBUILD<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="34" pos:column="3">char<pos:position pos:line="34" pos:column="7"/></name> <modifier pos:line="34" pos:column="8">*<pos:position pos:line="34" pos:column="9"/></modifier></type><name pos:line="34" pos:column="9">force_timestamp<pos:position pos:line="34" pos:column="24"/></name> <init pos:line="34" pos:column="25">= <expr><call><name pos:line="34" pos:column="27">getenv<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><literal type="string" pos:line="34" pos:column="34">"CURL_FORCETIME"<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="52"/></decl_stmt>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name pos:line="35" pos:column="6">force_timestamp<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="5">tw<pos:position pos:line="36" pos:column="7"/></name> <operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator> <literal type="number" pos:line="36" pos:column="10">11644473600ULL<pos:position pos:line="36" pos:column="24"/></literal> <operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator> <literal type="number" pos:line="36" pos:column="27">10000000ULL<pos:position pos:line="36" pos:column="38"/></literal></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt></block></then>
  <else pos:line="37" pos:column="3">else
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
  <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="3">tw<pos:position pos:line="39" pos:column="5"/></name> <operator pos:line="39" pos:column="6">=<pos:position pos:line="39" pos:column="7"/></operator> <operator pos:line="39" pos:column="8">(<pos:position pos:line="39" pos:column="9"/></operator><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">long<pos:position pos:line="39" pos:column="14"/></name> <name pos:line="39" pos:column="15">long<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">)<pos:position pos:line="39" pos:column="20"/></operator><call><name pos:line="39" pos:column="20">time<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">NULL<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call> <operator pos:line="39" pos:column="31">+<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">11644473600ULL<pos:position pos:line="39" pos:column="47"/></literal><operator pos:line="39" pos:column="47">)<pos:position pos:line="39" pos:column="48"/></operator> <operator pos:line="39" pos:column="49">*<pos:position pos:line="39" pos:column="50"/></operator> <literal type="number" pos:line="39" pos:column="51">10000000ULL<pos:position pos:line="39" pos:column="62"/></literal></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="41" pos:column="3">/* Calculate the response len */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">len<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <name pos:line="42" pos:column="9">NTLM_HMAC_MD5_LEN<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">+<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">NTLMv2_BLOB_LEN<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* Allocate the response */</comment>
  <expr_stmt><expr><name pos:line="45" pos:column="3">ptr<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <call><name pos:line="45" pos:column="9">malloc<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">len<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><operator pos:line="46" pos:column="6">!<pos:position pos:line="46" pos:column="7"/></operator><name pos:line="46" pos:column="7">ptr<pos:position pos:line="46" pos:column="10"/></name></expr>)<pos:position pos:line="46" pos:column="11"/></condition><then pos:line="46" pos:column="11">
    <block type="pseudo"><return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">memset<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">ptr<pos:position pos:line="49" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="15">0<pos:position pos:line="49" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="18">len<pos:position pos:line="49" pos:column="21"/></name></expr></argument>)<pos:position pos:line="49" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="51" pos:column="3">/* Create the BLOB structure */</comment>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">snprintf<pos:position pos:line="52" pos:column="11"/></name><argument_list pos:line="52" pos:column="11">(<argument><expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">char<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">*<pos:position pos:line="52" pos:column="19"/></operator><operator pos:line="52" pos:column="19">)<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">ptr<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">+<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">NTLM_HMAC_MD5_LEN<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">NTLMv2_BLOB_LEN<pos:position pos:line="52" pos:column="60"/></name></expr></argument>,
           <argument><expr><name pos:line="53" pos:column="12">NTLMv2_BLOB_SIGNATURE<pos:position pos:line="53" pos:column="33"/></name>
           <literal type="string" pos:line="54" pos:column="12">"%c%c%c%c"<pos:position pos:line="54" pos:column="22"/></literal></expr></argument>,  <comment type="block" pos:line="54" pos:column="25">/* Reserved = 0 */</comment>
           <argument><expr><literal type="number" pos:line="55" pos:column="12">0<pos:position pos:line="55" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="15">0<pos:position pos:line="55" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="18">0<pos:position pos:line="55" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="21">0<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">Curl_write64_le<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name pos:line="57" pos:column="19">tw<pos:position pos:line="57" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="23">ptr<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">+<pos:position pos:line="57" pos:column="28"/></operator> <literal type="number" pos:line="57" pos:column="29">24<pos:position pos:line="57" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">memcpy<pos:position pos:line="58" pos:column="9"/></name><argument_list pos:line="58" pos:column="9">(<argument><expr><name pos:line="58" pos:column="10">ptr<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">+<pos:position pos:line="58" pos:column="15"/></operator> <literal type="number" pos:line="58" pos:column="16">32<pos:position pos:line="58" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="20">challenge_client<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="38">8<pos:position pos:line="58" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">memcpy<pos:position pos:line="59" pos:column="9"/></name><argument_list pos:line="59" pos:column="9">(<argument><expr><name pos:line="59" pos:column="10">ptr<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">+<pos:position pos:line="59" pos:column="15"/></operator> <literal type="number" pos:line="59" pos:column="16">44<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="20">ntlm<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">-&gt;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="26">target_info<pos:position pos:line="59" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="39">ntlm<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">target_info_len<pos:position pos:line="59" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="61" pos:column="3">/* Concatenate the Type 2 challenge with the BLOB and do HMAC MD5 */</comment>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">memcpy<pos:position pos:line="62" pos:column="9"/></name><argument_list pos:line="62" pos:column="9">(<argument><expr><name pos:line="62" pos:column="10">ptr<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">+<pos:position pos:line="62" pos:column="15"/></operator> <literal type="number" pos:line="62" pos:column="16">8<pos:position pos:line="62" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="19">&amp;<pos:position pos:line="62" pos:column="24"/></operator><name><name pos:line="62" pos:column="20">ntlm<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">nonce<pos:position pos:line="62" pos:column="31"/></name><index pos:line="62" pos:column="31">[<expr><literal type="number" pos:line="62" pos:column="32">0<pos:position pos:line="62" pos:column="33"/></literal></expr>]<pos:position pos:line="62" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="36">8<pos:position pos:line="62" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name pos:line="63" pos:column="3">result<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">Curl_hmac_md5<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">ntlmv2hash<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">NTLM_HMAC_MD5_LEN<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">ptr<pos:position pos:line="63" pos:column="60"/></name> <operator pos:line="63" pos:column="61">+<pos:position pos:line="63" pos:column="62"/></operator> <literal type="number" pos:line="63" pos:column="63">8<pos:position pos:line="63" pos:column="64"/></literal></expr></argument>,
                         <argument><expr><name pos:line="64" pos:column="26">NTLMv2_BLOB_LEN<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">+<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="44">8<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">hmac_output<pos:position pos:line="64" pos:column="58"/></name></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name pos:line="65" pos:column="6">result<pos:position pos:line="65" pos:column="12"/></name></expr>)<pos:position pos:line="65" pos:column="13"/></condition><then pos:line="65" pos:column="13"> <block pos:line="65" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">Curl_safefree<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">ptr<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>

    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">result<pos:position pos:line="68" pos:column="18"/></name></expr>;<pos:position pos:line="68" pos:column="19"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* Concatenate the HMAC MD5 output  with the BLOB */</comment>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">memcpy<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><name pos:line="72" pos:column="10">ptr<pos:position pos:line="72" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="15">hmac_output<pos:position pos:line="72" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="28">NTLM_HMAC_MD5_LEN<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>

  <comment type="block" pos:line="74" pos:column="3">/* Return the response */</comment>
  <expr_stmt><expr><operator pos:line="75" pos:column="3">*<pos:position pos:line="75" pos:column="4"/></operator><name pos:line="75" pos:column="4">ntresp<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <name pos:line="75" pos:column="13">ptr<pos:position pos:line="75" pos:column="16"/></name></expr>;<pos:position pos:line="75" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="76" pos:column="3">*<pos:position pos:line="76" pos:column="4"/></operator><name pos:line="76" pos:column="4">ntresp_len<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name pos:line="76" pos:column="17">len<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>

  <return pos:line="78" pos:column="3">return <expr><name pos:line="78" pos:column="10">result<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

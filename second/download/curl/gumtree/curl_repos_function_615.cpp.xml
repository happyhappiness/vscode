<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_615.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">file_upload<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">FILEPROTO<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">file<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">proto<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">file<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">dir<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">strchr<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name><name pos:line="4" pos:column="22">file<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">path<pos:position pos:line="4" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">DIRSEP<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">res<pos:position pos:line="6" pos:column="15"/></name><init pos:line="6" pos:column="15">=<expr><name pos:line="6" pos:column="16">CURLE_OK<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name><name pos:line="8" pos:column="15">data<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">state<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">buffer<pos:position pos:line="8" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">nread<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">nwrite<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">curl_off_t<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">bytecount<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">timeval<pos:position pos:line="12" pos:column="17"/></name></name></type> <name pos:line="12" pos:column="18">now<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">Curl_tvnow<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">()<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/*
   * Since FILE: doesn't do the full init, we need to provide some extra
   * assignments here.
   */</comment>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">conn<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">fread<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name><name pos:line="18" pos:column="17">data<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">set<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">fread<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">conn<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">fread_in<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name><name pos:line="19" pos:column="20">data<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">set<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">in<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">conn<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">upload_fromhere<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">buf<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">dir<pos:position pos:line="22" pos:column="10"/></name></expr>)<pos:position pos:line="22" pos:column="11"/></condition><then pos:line="22" pos:column="11">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></return></block></then></if> <comment type="block" pos:line="23" pos:column="42">/* fix: better error code */</comment>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><operator pos:line="25" pos:column="6">!<pos:position pos:line="25" pos:column="7"/></operator><name><name pos:line="25" pos:column="7">dir<pos:position pos:line="25" pos:column="10"/></name><index pos:line="25" pos:column="10">[<expr><literal type="number" pos:line="25" pos:column="11">1<pos:position pos:line="25" pos:column="12"/></literal></expr>]<pos:position pos:line="25" pos:column="13"/></index></name></expr>)<pos:position pos:line="25" pos:column="14"/></condition><then pos:line="25" pos:column="14">
     <block type="pseudo"><return pos:line="26" pos:column="6">return <expr><name pos:line="26" pos:column="13">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="26" pos:column="41"/></name></expr>;<pos:position pos:line="26" pos:column="42"/></return></block></then></if> <comment type="block" pos:line="26" pos:column="43">/* fix: better error code */</comment>

  <expr_stmt><expr><name pos:line="28" pos:column="3">fp<pos:position pos:line="28" pos:column="5"/></name> <operator pos:line="28" pos:column="6">=<pos:position pos:line="28" pos:column="7"/></operator> <call><name pos:line="28" pos:column="8">fopen<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">file<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">path<pos:position pos:line="28" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="26">"wb"<pos:position pos:line="28" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><operator pos:line="29" pos:column="6">!<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">fp<pos:position pos:line="29" pos:column="9"/></name></expr>)<pos:position pos:line="29" pos:column="10"/></condition><then pos:line="29" pos:column="10"> <block pos:line="29" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">failf<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">data<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="17">"Can't open %s for writing"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="46">file<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">path<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">CURLE_WRITE_ERROR<pos:position pos:line="31" pos:column="29"/></name></expr>;<pos:position pos:line="31" pos:column="30"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">-<pos:position pos:line="34" pos:column="7"/></operator><literal type="number" pos:line="34" pos:column="7">1<pos:position pos:line="34" pos:column="8"/></literal> <operator pos:line="34" pos:column="9">!=<pos:position pos:line="34" pos:column="11"/></operator> <name><name pos:line="34" pos:column="12">data<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">set<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">infilesize<pos:position pos:line="34" pos:column="32"/></name></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
    <comment type="block" pos:line="35" pos:column="5">/* known size of data to "upload" */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">data<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="34">data<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">set<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">.<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">infilesize<pos:position pos:line="36" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt></block></then></if>

  <while pos:line="38" pos:column="3">while <condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">res<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">CURLE_OK<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition> <block pos:line="38" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">readcount<pos:position pos:line="39" pos:column="18"/></name></decl>;<pos:position pos:line="39" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">res<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">Curl_fillreadbuffer<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">conn<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">BUFSIZE<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="46">&amp;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="47">readcount<pos:position pos:line="40" pos:column="56"/></name></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">res<pos:position pos:line="41" pos:column="11"/></name></expr>)<pos:position pos:line="41" pos:column="12"/></condition><then pos:line="41" pos:column="12">
      <block type="pseudo"><break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">nread<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">size_t<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">)<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">readcount<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">nread<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">&lt;=<pos:position pos:line="46" pos:column="20"/></operator> <literal type="number" pos:line="46" pos:column="18">0<pos:position pos:line="46" pos:column="19"/></literal></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20">
      <block type="pseudo"><break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* write the data to the target */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">nwrite<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">fwrite<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">buf<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="26">1<pos:position pos:line="50" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="29">nread<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">fp<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><name pos:line="51" pos:column="8">nwrite<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">!=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">nread<pos:position pos:line="51" pos:column="23"/></name></expr>)<pos:position pos:line="51" pos:column="24"/></condition><then pos:line="51" pos:column="24"> <block pos:line="51" pos:column="25">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">res<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">CURLE_SEND_ERROR<pos:position pos:line="52" pos:column="29"/></name></expr>;<pos:position pos:line="52" pos:column="30"/></expr_stmt>
      <break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="56" pos:column="5">bytecount<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">+=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">nread<pos:position pos:line="56" pos:column="23"/></name></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">data<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">bytecount<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>

    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><call><name pos:line="60" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">conn<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="7">res<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <name pos:line="61" pos:column="13">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt></block></then>
    <else pos:line="62" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">res<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <call><name pos:line="63" pos:column="13">Curl_speedcheck<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">data<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">now<pos:position pos:line="63" pos:column="38"/></name></expr></argument>)<pos:position pos:line="63" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt></block></else></if>
  }<pos:position pos:line="64" pos:column="4"/></block></while>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><operator pos:line="65" pos:column="6">!<pos:position pos:line="65" pos:column="7"/></operator><name pos:line="65" pos:column="7">res<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">&amp;&amp;<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="14">Curl_pgrsUpdate<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">conn<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="36"/></condition><then pos:line="65" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="5">res<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <name pos:line="66" pos:column="11">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="66" pos:column="36"/></name></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">fclose<pos:position pos:line="68" pos:column="9"/></name><argument_list pos:line="68" pos:column="9">(<argument><expr><name pos:line="68" pos:column="10">fp<pos:position pos:line="68" pos:column="12"/></name></expr></argument>)<pos:position pos:line="68" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="14"/></expr_stmt>

  <return pos:line="70" pos:column="3">return <expr><name pos:line="70" pos:column="10">res<pos:position pos:line="70" pos:column="13"/></name></expr>;<pos:position pos:line="70" pos:column="14"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

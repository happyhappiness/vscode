<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2289_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_addrinfo_set_port<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">Curl_addrinfo<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">addrinfo<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">port<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Curl_addrinfo<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ca<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sockaddr_in<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">addr<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">ENABLE_IPV6<pos:position pos:line="5" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">sockaddr_in6<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">addr6<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">ca<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">addrinfo<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></init> <condition><expr><name pos:line="8" pos:column="22">ca<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">!=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></condition> <incr><expr><name pos:line="8" pos:column="34">ca<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">=<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="39">ca<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">ai_next<pos:position pos:line="8" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="51"/></control> <block pos:line="8" pos:column="52">{
    <switch pos:line="9" pos:column="5">switch<condition pos:line="9" pos:column="11">(<expr><name><name pos:line="9" pos:column="12">ca<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">ai_family<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition> <block pos:line="9" pos:column="27">{
    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">AF_INET<pos:position pos:line="10" pos:column="17"/></name></expr>:<pos:position pos:line="10" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="11" pos:column="7">addr<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">void<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></operator><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">ca<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">ai_addr<pos:position pos:line="11" pos:column="33"/></name></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt> <comment type="block" pos:line="11" pos:column="35">/* storage area for this info */</comment>
      <expr_stmt><expr><name><name pos:line="12" pos:column="7">addr<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">sin_port<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">htons<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><operator pos:line="12" pos:column="30">(<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">unsigned<pos:position pos:line="12" pos:column="39"/></name> <name pos:line="12" pos:column="40">short<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">port<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
      <break pos:line="13" pos:column="7">break;<pos:position pos:line="13" pos:column="13"/></break>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">ENABLE_IPV6<pos:position pos:line="15" pos:column="19"/></name></cpp:ifdef>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">AF_INET6<pos:position pos:line="16" pos:column="18"/></name></expr>:<pos:position pos:line="16" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="17" pos:column="7">addr6<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">(<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">void<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">ca<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">ai_addr<pos:position pos:line="17" pos:column="34"/></name></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt> <comment type="block" pos:line="17" pos:column="36">/* storage area for this info */</comment>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">addr6<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">sin6_port<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">htons<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">unsigned<pos:position pos:line="18" pos:column="41"/></name> <name pos:line="18" pos:column="42">short<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">port<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="21" pos:column="6"/></block></switch>
  }<pos:position pos:line="22" pos:column="4"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

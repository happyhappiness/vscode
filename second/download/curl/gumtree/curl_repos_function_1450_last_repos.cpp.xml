<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1450_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">SocketIsDead<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">curl_socket_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">sock<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">sval<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bool<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">ret_val<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">TRUE<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">sval<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">SOCKET_READABLE<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">sock<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">sval<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
    <comment type="block" pos:line="8" pos:column="5">/* timeout */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">ret_val<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">FALSE<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt></block></then></if>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">ret_val<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

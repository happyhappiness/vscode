<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_72_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">url_fclose<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">URL_FILE<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">file<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">ret<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt><comment type="block" pos:line="4" pos:column="15">/* default is good return */</comment>

    <switch pos:line="6" pos:column="5">switch<condition pos:line="6" pos:column="11">(<expr><name><name pos:line="6" pos:column="12">file<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">type<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition>
    <block pos:line="7" pos:column="5">{
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">CFTYPE_FILE<pos:position pos:line="8" pos:column="21"/></name></expr>:<pos:position pos:line="8" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">fclose<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">file<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">handle<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">file<pos:position pos:line="9" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt> <comment type="block" pos:line="9" pos:column="40">/* passthrough */</comment>
        <break pos:line="10" pos:column="9">break;<pos:position pos:line="10" pos:column="15"/></break>

    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">CFTYPE_CURL<pos:position pos:line="12" pos:column="21"/></name></expr>:<pos:position pos:line="12" pos:column="22"/></case>
        <comment type="block" pos:line="13" pos:column="9">/* make sure the easy handle is not in the multi handle anymore */</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">curl_multi_remove_handle<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">multi_handle<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="48">file<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">handle<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">curl<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* cleanup */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">curl_easy_cleanup<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">file<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">handle<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">.<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">curl<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>

    <default pos:line="20" pos:column="5">default:<pos:position pos:line="20" pos:column="13"/></default> <comment type="block" pos:line="20" pos:column="14">/* unknown or supported type - oh dear */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">ret<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">EOF<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">errno<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">EBADF<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>

    }<pos:position pos:line="25" pos:column="6"/></block></switch>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name><name pos:line="27" pos:column="8">file<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">buffer<pos:position pos:line="27" pos:column="20"/></name></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">free<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">file<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">buffer<pos:position pos:line="28" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt></block></then></if><comment type="block" pos:line="28" pos:column="28">/* free any allocated buffer space */</comment>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">free<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">file<pos:position pos:line="30" pos:column="14"/></name></expr></argument>)<pos:position pos:line="30" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">ret<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

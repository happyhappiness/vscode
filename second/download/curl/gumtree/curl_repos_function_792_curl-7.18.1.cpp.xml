<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_792_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_closure<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">Curl_multi<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">multi<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                        <parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">SessionHandle<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">data<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">closure<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">cl<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator>struct <name pos:line="5" pos:column="32">closure<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator><call><name pos:line="5" pos:column="42">calloc<pos:position pos:line="5" pos:column="48"/></name><argument_list pos:line="5" pos:column="48">(<argument><expr><sizeof pos:line="5" pos:column="49">sizeof<argument_list pos:line="5" pos:column="55">(<argument><expr pos:line="5" pos:column="56">struct <name pos:line="5" pos:column="63">closure<pos:position pos:line="5" pos:column="70"/></name></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="73">1<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">closure<pos:position pos:line="6" pos:column="17"/></name></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">p<pos:position pos:line="6" pos:column="20"/></name><init pos:line="6" pos:column="20">=<expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">closure<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">n<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">cl<pos:position pos:line="8" pos:column="8"/></name></expr>)<pos:position pos:line="8" pos:column="9"/></condition><then pos:line="8" pos:column="9"> <block pos:line="8" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">cl<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">easy_handle<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">data<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">cl<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">next<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name><name pos:line="10" pos:column="16">multi<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">closure<pos:position pos:line="10" pos:column="30"/></name></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">multi<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">closure<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">cl<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">p<pos:position pos:line="14" pos:column="4"/></name> <operator pos:line="14" pos:column="5">=<pos:position pos:line="14" pos:column="6"/></operator> <name><name pos:line="14" pos:column="7">multi<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">closure<pos:position pos:line="14" pos:column="21"/></name></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">cl<pos:position pos:line="15" pos:column="5"/></name> <operator pos:line="15" pos:column="6">=<pos:position pos:line="15" pos:column="7"/></operator> <name><name pos:line="15" pos:column="8">p<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">next<pos:position pos:line="15" pos:column="15"/></name></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt> <comment type="block" pos:line="15" pos:column="17">/* start immediately on the second since the first is the one
                   we just added and it is _very_ likely to actually exist
                   used in the cache since that's the whole purpose of adding
                   it to this list! */</comment>

  <comment type="block" pos:line="20" pos:column="3">/* When adding, scan through all the other currently kept handles and see if
     there are any connections still referring to them and kill them if not. */</comment>
  <while pos:line="22" pos:column="3">while<condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">cl<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition> <block pos:line="22" pos:column="13">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">bool<pos:position pos:line="23" pos:column="9"/></name></type> <name pos:line="23" pos:column="10">inuse<pos:position pos:line="23" pos:column="15"/></name> <init pos:line="23" pos:column="16">= <expr><name pos:line="23" pos:column="18">FALSE<pos:position pos:line="23" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="24"/></decl_stmt>
    <for pos:line="24" pos:column="5">for<control pos:line="24" pos:column="8">(<init><expr><name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator><literal type="number" pos:line="24" pos:column="11">0<pos:position pos:line="24" pos:column="12"/></literal></expr>;<pos:position pos:line="24" pos:column="13"/></init> <condition><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">&lt;<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="17">multi<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">connc<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">num<pos:position pos:line="24" pos:column="34"/></name></name></expr>;<pos:position pos:line="24" pos:column="35"/></condition> <incr><expr><name pos:line="24" pos:column="36">i<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">++<pos:position pos:line="24" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="40"/></control> <block pos:line="24" pos:column="41">{
      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><name><name pos:line="25" pos:column="10">multi<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">connc<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">connects<pos:position pos:line="25" pos:column="32"/></name><index pos:line="25" pos:column="32">[<expr><name pos:line="25" pos:column="33">i<pos:position pos:line="25" pos:column="34"/></name></expr>]<pos:position pos:line="25" pos:column="35"/></index></name> <operator pos:line="25" pos:column="36">&amp;&amp;<pos:position pos:line="25" pos:column="46"/></operator>
         <operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name><name pos:line="26" pos:column="11">multi<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">connc<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">connects<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><name pos:line="26" pos:column="34">i<pos:position pos:line="26" pos:column="35"/></name></expr>]<pos:position pos:line="26" pos:column="36"/></index></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">data<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">==<pos:position pos:line="26" pos:column="45"/></operator> <name><name pos:line="26" pos:column="46">cl<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">easy_handle<pos:position pos:line="26" pos:column="61"/></name></name><operator pos:line="26" pos:column="61">)<pos:position pos:line="26" pos:column="62"/></operator></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63"> <block pos:line="26" pos:column="64">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">inuse<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">TRUE<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="32" pos:column="5">n<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <name><name pos:line="32" pos:column="9">cl<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">next<pos:position pos:line="32" pos:column="17"/></name></name></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>

    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">inuse<pos:position pos:line="34" pos:column="14"/></name></expr>)<pos:position pos:line="34" pos:column="15"/></condition><then pos:line="34" pos:column="15"> <block pos:line="34" pos:column="16">{
      <comment type="block" pos:line="35" pos:column="7">/* cl-&gt;easy_handle is now killable */</comment>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">infof<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">data<pos:position pos:line="36" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"Delayed kill of easy handle %p\n"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="55">cl<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="59">easy_handle<pos:position pos:line="36" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
      <comment type="block" pos:line="37" pos:column="7">/* unmark it as not having a connection around that uses it anymore */</comment>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">cl<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">easy_handle<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">state<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">.<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">shared_conn<pos:position pos:line="38" pos:column="41"/></name></name><operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">NULL<pos:position pos:line="38" pos:column="47"/></name></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">Curl_close<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">cl<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">easy_handle<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">p<pos:position pos:line="40" pos:column="11"/></name></expr>)<pos:position pos:line="40" pos:column="12"/></condition><then pos:line="40" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="9">p<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">next<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">n<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt></block></then>
      <else pos:line="42" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="9">multi<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">closure<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">n<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt></block></else></if>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">free<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">cl<pos:position pos:line="44" pos:column="14"/></name></expr></argument>)<pos:position pos:line="44" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">p<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name pos:line="47" pos:column="11">cl<pos:position pos:line="47" pos:column="13"/></name></expr>;<pos:position pos:line="47" pos:column="14"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="49" pos:column="5">cl<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <name pos:line="49" pos:column="10">n<pos:position pos:line="49" pos:column="11"/></name></expr>;<pos:position pos:line="49" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></while>

}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

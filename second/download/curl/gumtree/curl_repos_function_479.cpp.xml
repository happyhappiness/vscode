<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_479.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">Curl_strlcat<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">dst<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">src<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">size_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">siz<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">d<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">dst<pos:position pos:line="3" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">src<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">n<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">siz<pos:position pos:line="5" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">dlen<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Find the end of dst and adjust bytes left but don't go past end */</comment>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">--<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal> <operator pos:line="9" pos:column="19">&amp;&amp;<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">d<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="char" pos:line="9" pos:column="28">'\0'<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">d<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">++<pos:position pos:line="10" pos:column="8"/></operator></expr>;<pos:position pos:line="10" pos:column="9"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="11" pos:column="3">dlen<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">d<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">dst<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">n<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <name pos:line="12" pos:column="7">siz<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">-<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">dlen<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">n<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">==<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>)<pos:position pos:line="14" pos:column="14"/></condition><then pos:line="14" pos:column="14">
    <block type="pseudo"><return pos:line="15" pos:column="5">return<expr><operator pos:line="15" pos:column="11">(<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">dlen<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">+<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">strlen<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">s<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call><operator pos:line="15" pos:column="28">)<pos:position pos:line="15" pos:column="29"/></operator></expr>;<pos:position pos:line="15" pos:column="30"/></return></block></then></if>
  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">s<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">!=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="char" pos:line="16" pos:column="16">'\0'<pos:position pos:line="16" pos:column="20"/></literal></expr>)<pos:position pos:line="16" pos:column="21"/></condition> <block pos:line="16" pos:column="22">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">n<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">!=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16"> <block pos:line="17" pos:column="17">{
      <expr_stmt><expr><operator pos:line="18" pos:column="7">*<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">d<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <operator pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">s<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">n<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">--<pos:position pos:line="19" pos:column="10"/></operator></expr>;<pos:position pos:line="19" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">s<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">++<pos:position pos:line="21" pos:column="8"/></operator></expr>;<pos:position pos:line="21" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">*<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">d<pos:position pos:line="23" pos:column="5"/></name> <operator pos:line="23" pos:column="6">=<pos:position pos:line="23" pos:column="7"/></operator> <literal type="char" pos:line="23" pos:column="8">'\0'<pos:position pos:line="23" pos:column="12"/></literal></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>

  <return pos:line="25" pos:column="3">return<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">dlen<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">+<pos:position pos:line="25" pos:column="16"/></operator> <operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">s<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">-<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">src<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator><operator pos:line="25" pos:column="26">)<pos:position pos:line="25" pos:column="27"/></operator></expr>;<pos:position pos:line="25" pos:column="28"/></return>     <comment type="block" pos:line="25" pos:column="33">/* count does not include NUL */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

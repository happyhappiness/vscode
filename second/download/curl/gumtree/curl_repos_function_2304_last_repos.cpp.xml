<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2304_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ntlm_decode_type2_target<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">Curl_easy<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">buffer<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">size_t<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">size<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="4" pos:column="42">struct<pos:position pos:line="4" pos:column="48"/></name> <name pos:line="4" pos:column="49">ntlmdata<pos:position pos:line="4" pos:column="57"/></name></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">ntlm<pos:position pos:line="4" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="64"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">short<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">target_info_len<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">target_info_offset<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><call><name pos:line="9" pos:column="5">defined<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator> <name pos:line="10" pos:column="10">data<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">size<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&gt;=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="14">48<pos:position pos:line="13" pos:column="16"/></literal></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">target_info_len<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <call><name pos:line="14" pos:column="23">Curl_read16_le<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name><name pos:line="14" pos:column="39">buffer<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><literal type="number" pos:line="14" pos:column="46">40<pos:position pos:line="14" pos:column="48"/></literal></expr>]<pos:position pos:line="14" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">target_info_offset<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">Curl_read32_le<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><operator pos:line="15" pos:column="41">&amp;<pos:position pos:line="15" pos:column="46"/></operator><name><name pos:line="15" pos:column="42">buffer<pos:position pos:line="15" pos:column="48"/></name><index pos:line="15" pos:column="48">[<expr><literal type="number" pos:line="15" pos:column="49">44<pos:position pos:line="15" pos:column="51"/></literal></expr>]<pos:position pos:line="15" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">target_info_len<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&gt;<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">target_info_offset<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">+<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">target_info_len<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator> <operator pos:line="17" pos:column="50">&gt;<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="52">size<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator> <operator pos:line="17" pos:column="58">||<pos:position pos:line="17" pos:column="60"/></operator>
         <operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">target_info_offset<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">&lt;<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="32">48<pos:position pos:line="18" pos:column="34"/></literal><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">infof<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">data<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"NTLM handshake failure (bad type-2 message). "<pos:position pos:line="19" pos:column="68"/></literal>
                    <literal type="string" pos:line="20" pos:column="21">"Target Info Offset Len is set incorrect by the peer\n"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></return>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="24" pos:column="7">ntlm<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">target_info<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">malloc<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">target_info_len<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">!<pos:position pos:line="25" pos:column="11"/></operator><name><name pos:line="25" pos:column="11">ntlm<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">target_info<pos:position pos:line="25" pos:column="28"/></name></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="28" pos:column="7">memcpy<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">ntlm<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">target_info<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator><name><name pos:line="28" pos:column="34">buffer<pos:position pos:line="28" pos:column="40"/></name><index pos:line="28" pos:column="40">[<expr><name pos:line="28" pos:column="41">target_info_offset<pos:position pos:line="28" pos:column="59"/></name></expr>]<pos:position pos:line="28" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">target_info_len<pos:position pos:line="28" pos:column="77"/></name></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">ntlm<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">target_info_len<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">target_info_len<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">CURLE_OK<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

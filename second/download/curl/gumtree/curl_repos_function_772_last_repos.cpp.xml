<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_772_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fuzz_initialize_fuzz_data<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">FUZZ_DATA<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">fuzz<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">uint8_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">data<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">size_t<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">data_len<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name> <init pos:line="5" pos:column="10">= <expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Initialize the fuzz data. */</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">fuzz<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">FUZZ_DATA<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Create an easy handle. This will have all of the settings configured on
     it. */</comment>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">fuzz<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">easy<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">curl_easy_init<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">()<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">FCHECK<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name><name pos:line="13" pos:column="10">fuzz<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">easy<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">!=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Set some standard options on the CURL easy handle. We need to override the
     socket function so that we create our own sockets to present to CURL. */</comment>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">FTRY<pos:position pos:line="17" pos:column="7"/></name><argument_list pos:line="17" pos:column="7">(<argument><expr><call><name pos:line="17" pos:column="8">curl_easy_setopt<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">fuzz<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">easy<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="18" pos:column="25">CURLOPT_OPENSOCKETFUNCTION<pos:position pos:line="18" pos:column="51"/></name></expr></argument>,
                        <argument><expr><name pos:line="19" pos:column="25">fuzz_open_socket<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">FTRY<pos:position pos:line="20" pos:column="7"/></name><argument_list pos:line="20" pos:column="7">(<argument><expr><call><name pos:line="20" pos:column="8">curl_easy_setopt<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">fuzz<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">easy<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">CURLOPT_OPENSOCKETDATA<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">fuzz<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* In case something tries to set a socket option, intercept this. */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">FTRY<pos:position pos:line="23" pos:column="7"/></name><argument_list pos:line="23" pos:column="7">(<argument><expr><call><name pos:line="23" pos:column="8">curl_easy_setopt<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">fuzz<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">easy<pos:position pos:line="23" pos:column="35"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="24" pos:column="25">CURLOPT_SOCKOPTFUNCTION<pos:position pos:line="24" pos:column="48"/></name></expr></argument>,
                        <argument><expr><name pos:line="25" pos:column="25">fuzz_sockopt_callback<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Set the standard read function callback. */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">FTRY<pos:position pos:line="28" pos:column="7"/></name><argument_list pos:line="28" pos:column="7">(<argument><expr><call><name pos:line="28" pos:column="8">curl_easy_setopt<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">fuzz<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">easy<pos:position pos:line="28" pos:column="35"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="29" pos:column="25">CURLOPT_READFUNCTION<pos:position pos:line="29" pos:column="45"/></name></expr></argument>,
                        <argument><expr><name pos:line="30" pos:column="25">fuzz_read_callback<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">FTRY<pos:position pos:line="31" pos:column="7"/></name><argument_list pos:line="31" pos:column="7">(<argument><expr><call><name pos:line="31" pos:column="8">curl_easy_setopt<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">fuzz<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">easy<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">CURLOPT_READDATA<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">fuzz<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="33" pos:column="3">/* Set the standard write function callback. */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">FTRY<pos:position pos:line="34" pos:column="7"/></name><argument_list pos:line="34" pos:column="7">(<argument><expr><call><name pos:line="34" pos:column="8">curl_easy_setopt<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name><name pos:line="34" pos:column="25">fuzz<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">easy<pos:position pos:line="34" pos:column="35"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="35" pos:column="25">CURLOPT_WRITEFUNCTION<pos:position pos:line="35" pos:column="46"/></name></expr></argument>,
                        <argument><expr><name pos:line="36" pos:column="25">fuzz_write_callback<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">FTRY<pos:position pos:line="37" pos:column="7"/></name><argument_list pos:line="37" pos:column="7">(<argument><expr><call><name pos:line="37" pos:column="8">curl_easy_setopt<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name><name pos:line="37" pos:column="25">fuzz<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">easy<pos:position pos:line="37" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">CURLOPT_WRITEDATA<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">fuzz<pos:position pos:line="37" pos:column="60"/></name></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* Can enable verbose mode by changing 0L to 1L */</comment>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">FTRY<pos:position pos:line="40" pos:column="7"/></name><argument_list pos:line="40" pos:column="7">(<argument><expr><call><name pos:line="40" pos:column="8">curl_easy_setopt<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">fuzz<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">easy<pos:position pos:line="40" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">CURLOPT_VERBOSE<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="54">0L<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="42" pos:column="3">/* Set up the state parser */</comment>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">fuzz<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">state<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">data<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">data<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">fuzz<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">state<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">data_len<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">data_len<pos:position pos:line="44" pos:column="34"/></name></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>

<label><name pos:line="46" pos:column="1">EXIT_LABEL<pos:position pos:line="46" pos:column="11"/></name>:<pos:position pos:line="46" pos:column="12"/></label>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">rc<pos:position pos:line="48" pos:column="12"/></name></expr>;<pos:position pos:line="48" pos:column="13"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

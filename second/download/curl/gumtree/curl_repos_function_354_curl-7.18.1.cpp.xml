<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_354_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">dump<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">timebuf<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">text<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="3" pos:column="11">FILE<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">stream<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="25">unsigned<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">ptr<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="45">size_t<pos:position pos:line="3" pos:column="51"/></name></type> <name pos:line="3" pos:column="52">size<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="4" pos:column="11">trace<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">tracetype<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="28">curl_infotype<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">infotype<pos:position pos:line="4" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="51"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">c<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">int<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">width<pos:position pos:line="9" pos:column="21"/></name><init pos:line="9" pos:column="21">=<expr><literal type="number" pos:line="9" pos:column="22">0x10<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">tracetype<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">TRACE_ASCII<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
    <comment type="block" pos:line="12" pos:column="5">/* without the hex output, we can fit more on screen */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">width<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">0x40<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">fprintf<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">stream<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"%s%s, %zd bytes (0x%zx)\n"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">timebuf<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">text<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">size<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">size<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>

  <for pos:line="17" pos:column="3">for<control pos:line="17" pos:column="6">(<init><expr><name pos:line="17" pos:column="7">i<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator><literal type="number" pos:line="17" pos:column="9">0<pos:position pos:line="17" pos:column="10"/></literal></expr>;<pos:position pos:line="17" pos:column="11"/></init> <condition><expr><name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">&lt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">size<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></condition> <incr><expr><name pos:line="17" pos:column="20">i<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">+=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">width<pos:position pos:line="17" pos:column="29"/></name></expr></incr>)<pos:position pos:line="17" pos:column="30"/></control> <block pos:line="17" pos:column="31">{

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stream<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"%04zx: "<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">tracetype<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">TRACE_BIN<pos:position pos:line="21" pos:column="30"/></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
      <comment type="block" pos:line="22" pos:column="7">/* hex not disabled, show it */</comment>
      <for pos:line="23" pos:column="7">for<control pos:line="23" pos:column="10">(<init><expr><name pos:line="23" pos:column="11">c<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></init> <condition><expr><name pos:line="23" pos:column="18">c<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">&lt;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="22">width<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></condition> <incr><expr><name pos:line="23" pos:column="29">c<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">++<pos:position pos:line="23" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="24" pos:column="9">if<condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">+<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">c<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&lt;<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="18">size<pos:position pos:line="24" pos:column="22"/></name></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="11">fprintf<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">stream<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"%02x "<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="36">ptr<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">i<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">+<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">c<pos:position pos:line="25" pos:column="43"/></name></expr>]<pos:position pos:line="25" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt></block></then>
        <else pos:line="26" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="11">fputs<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><literal type="string" pos:line="27" pos:column="17">"   "<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">stream<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt></block></else></if></block></for>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">c<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></init> <condition><expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">c<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">width<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator> <operator pos:line="30" pos:column="28">&amp;&amp;<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="31">(<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">i<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">+<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">c<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">&lt;<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="38">size<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator></expr>;<pos:position pos:line="30" pos:column="44"/></condition> <incr><expr><name pos:line="30" pos:column="45">c<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">++<pos:position pos:line="30" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="49"/></control> <block pos:line="30" pos:column="50">{
      <comment type="block" pos:line="31" pos:column="7">/* check for 0D0A; if found, skip past and start a new line of output */</comment>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">tracetype<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">==<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">TRACE_ASCII<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">&amp;&amp;<pos:position pos:line="32" pos:column="48"/></operator>
          <operator pos:line="33" pos:column="11">(<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">i<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">+<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">c<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">+<pos:position pos:line="33" pos:column="16"/></operator><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal> <operator pos:line="33" pos:column="18">&lt;<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="20">size<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">)<pos:position pos:line="33" pos:column="25"/></operator> <operator pos:line="33" pos:column="26">&amp;&amp;<pos:position pos:line="33" pos:column="36"/></operator> <name><name pos:line="33" pos:column="29">ptr<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><name pos:line="33" pos:column="33">i<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">+<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">c<pos:position pos:line="33" pos:column="36"/></name></expr>]<pos:position pos:line="33" pos:column="37"/></index></name><operator pos:line="33" pos:column="37">==<pos:position pos:line="33" pos:column="39"/></operator><literal type="number" pos:line="33" pos:column="39">0x0D<pos:position pos:line="33" pos:column="43"/></literal> <operator pos:line="33" pos:column="44">&amp;&amp;<pos:position pos:line="33" pos:column="54"/></operator> <name><name pos:line="33" pos:column="47">ptr<pos:position pos:line="33" pos:column="50"/></name><index pos:line="33" pos:column="50">[<expr><name pos:line="33" pos:column="51">i<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">+<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="53">c<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">+<pos:position pos:line="33" pos:column="55"/></operator><literal type="number" pos:line="33" pos:column="55">1<pos:position pos:line="33" pos:column="56"/></literal></expr>]<pos:position pos:line="33" pos:column="57"/></index></name><operator pos:line="33" pos:column="57">==<pos:position pos:line="33" pos:column="59"/></operator><literal type="number" pos:line="33" pos:column="59">0x0A<pos:position pos:line="33" pos:column="63"/></literal></expr>)<pos:position pos:line="33" pos:column="64"/></condition><then pos:line="33" pos:column="64"> <block pos:line="33" pos:column="65">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">i<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">+=<pos:position pos:line="34" pos:column="12"/></operator><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">c<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">+<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">2<pos:position pos:line="34" pos:column="16"/></literal><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">width<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">)<pos:position pos:line="34" pos:column="23"/></operator></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">CURL_DOES_CONVERSIONS<pos:position pos:line="37" pos:column="29"/></name></cpp:ifdef>
      <comment type="block" pos:line="38" pos:column="7">/* repeat the 0D0A check above but use the host encoding for CRLF */</comment>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">(<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">tracetype<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">TRACE_ASCII<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">)<pos:position pos:line="39" pos:column="37"/></operator> <operator pos:line="39" pos:column="38">&amp;&amp;<pos:position pos:line="39" pos:column="48"/></operator>
          <operator pos:line="40" pos:column="11">(<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">i<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">+<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">c<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">+<pos:position pos:line="40" pos:column="16"/></operator><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal> <operator pos:line="40" pos:column="18">&lt;<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="20">size<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">)<pos:position pos:line="40" pos:column="25"/></operator> <operator pos:line="40" pos:column="26">&amp;&amp;<pos:position pos:line="40" pos:column="36"/></operator> <name><name pos:line="40" pos:column="29">ptr<pos:position pos:line="40" pos:column="32"/></name><index pos:line="40" pos:column="32">[<expr><name pos:line="40" pos:column="33">i<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">+<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">c<pos:position pos:line="40" pos:column="36"/></name></expr>]<pos:position pos:line="40" pos:column="37"/></index></name><operator pos:line="40" pos:column="37">==<pos:position pos:line="40" pos:column="39"/></operator><literal type="char" pos:line="40" pos:column="39">'\r'<pos:position pos:line="40" pos:column="43"/></literal> <operator pos:line="40" pos:column="44">&amp;&amp;<pos:position pos:line="40" pos:column="54"/></operator> <name><name pos:line="40" pos:column="47">ptr<pos:position pos:line="40" pos:column="50"/></name><index pos:line="40" pos:column="50">[<expr><name pos:line="40" pos:column="51">i<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">+<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">c<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">+<pos:position pos:line="40" pos:column="55"/></operator><literal type="number" pos:line="40" pos:column="55">1<pos:position pos:line="40" pos:column="56"/></literal></expr>]<pos:position pos:line="40" pos:column="57"/></index></name><operator pos:line="40" pos:column="57">==<pos:position pos:line="40" pos:column="59"/></operator><literal type="char" pos:line="40" pos:column="59">'\n'<pos:position pos:line="40" pos:column="63"/></literal></expr>)<pos:position pos:line="40" pos:column="64"/></condition><then pos:line="40" pos:column="64"> <block pos:line="40" pos:column="65">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">i<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">+=<pos:position pos:line="41" pos:column="12"/></operator><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">c<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">+<pos:position pos:line="41" pos:column="15"/></operator><literal type="number" pos:line="41" pos:column="15">2<pos:position pos:line="41" pos:column="16"/></literal><operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">width<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
        <break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="44" pos:column="7">/* convert to host encoding and print this character */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">fprintf<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">stream<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"%c"<pos:position pos:line="45" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="29">convert_char<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">infotype<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="52">ptr<pos:position pos:line="45" pos:column="55"/></name><index pos:line="45" pos:column="55">[<expr><name pos:line="45" pos:column="56">i<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">+<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="58">c<pos:position pos:line="45" pos:column="59"/></name></expr>]<pos:position pos:line="45" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><operator pos:line="47" pos:column="7">(<pos:position pos:line="47" pos:column="8"/></operator><name pos:line="47" pos:column="8">void<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">)<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">infotype<pos:position pos:line="47" pos:column="21"/></name></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">fprintf<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">stream<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"%c"<pos:position pos:line="48" pos:column="27"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="49" pos:column="15">(<pos:position pos:line="49" pos:column="16"/></operator><name><name pos:line="49" pos:column="16">ptr<pos:position pos:line="49" pos:column="19"/></name><index pos:line="49" pos:column="19">[<expr><name pos:line="49" pos:column="20">i<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">+<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">c<pos:position pos:line="49" pos:column="23"/></name></expr>]<pos:position pos:line="49" pos:column="24"/></index></name><operator pos:line="49" pos:column="24">&gt;=<pos:position pos:line="49" pos:column="29"/></operator><literal type="number" pos:line="49" pos:column="26">0x20<pos:position pos:line="49" pos:column="30"/></literal><operator pos:line="49" pos:column="30">)<pos:position pos:line="49" pos:column="31"/></operator> <operator pos:line="49" pos:column="32">&amp;&amp;<pos:position pos:line="49" pos:column="42"/></operator> <operator pos:line="49" pos:column="35">(<pos:position pos:line="49" pos:column="36"/></operator><name><name pos:line="49" pos:column="36">ptr<pos:position pos:line="49" pos:column="39"/></name><index pos:line="49" pos:column="39">[<expr><name pos:line="49" pos:column="40">i<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">+<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">c<pos:position pos:line="49" pos:column="43"/></name></expr>]<pos:position pos:line="49" pos:column="44"/></index></name><operator pos:line="49" pos:column="44">&lt;<pos:position pos:line="49" pos:column="48"/></operator><literal type="number" pos:line="49" pos:column="45">0x80<pos:position pos:line="49" pos:column="49"/></literal><operator pos:line="49" pos:column="49">)<pos:position pos:line="49" pos:column="50"/></operator></expr>?<pos:position pos:line="49" pos:column="51"/></condition><then><expr><name><name pos:line="49" pos:column="51">ptr<pos:position pos:line="49" pos:column="54"/></name><index pos:line="49" pos:column="54">[<expr><name pos:line="49" pos:column="55">i<pos:position pos:line="49" pos:column="56"/></name><operator pos:line="49" pos:column="56">+<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="57">c<pos:position pos:line="49" pos:column="58"/></name></expr>]<pos:position pos:line="49" pos:column="59"/></index></name></expr></then><else pos:line="49" pos:column="59">:<expr><name pos:line="49" pos:column="60">UNPRINTABLE_CHAR<pos:position pos:line="49" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="49" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* CURL_DOES_CONVERSIONS */</comment>
      <comment type="block" pos:line="51" pos:column="7">/* check again for 0D0A, to avoid an extra \n if it's at width */</comment>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">(<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">tracetype<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">==<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">TRACE_ASCII<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">)<pos:position pos:line="52" pos:column="37"/></operator> <operator pos:line="52" pos:column="38">&amp;&amp;<pos:position pos:line="52" pos:column="48"/></operator>
          <operator pos:line="53" pos:column="11">(<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="12">i<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">+<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">c<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">+<pos:position pos:line="53" pos:column="16"/></operator><literal type="number" pos:line="53" pos:column="16">2<pos:position pos:line="53" pos:column="17"/></literal> <operator pos:line="53" pos:column="18">&lt;<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="20">size<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">)<pos:position pos:line="53" pos:column="25"/></operator> <operator pos:line="53" pos:column="26">&amp;&amp;<pos:position pos:line="53" pos:column="36"/></operator> <name><name pos:line="53" pos:column="29">ptr<pos:position pos:line="53" pos:column="32"/></name><index pos:line="53" pos:column="32">[<expr><name pos:line="53" pos:column="33">i<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">+<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">c<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">+<pos:position pos:line="53" pos:column="37"/></operator><literal type="number" pos:line="53" pos:column="37">1<pos:position pos:line="53" pos:column="38"/></literal></expr>]<pos:position pos:line="53" pos:column="39"/></index></name><operator pos:line="53" pos:column="39">==<pos:position pos:line="53" pos:column="41"/></operator><literal type="number" pos:line="53" pos:column="41">0x0D<pos:position pos:line="53" pos:column="45"/></literal> <operator pos:line="53" pos:column="46">&amp;&amp;<pos:position pos:line="53" pos:column="56"/></operator> <name><name pos:line="53" pos:column="49">ptr<pos:position pos:line="53" pos:column="52"/></name><index pos:line="53" pos:column="52">[<expr><name pos:line="53" pos:column="53">i<pos:position pos:line="53" pos:column="54"/></name><operator pos:line="53" pos:column="54">+<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="55">c<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">+<pos:position pos:line="53" pos:column="57"/></operator><literal type="number" pos:line="53" pos:column="57">2<pos:position pos:line="53" pos:column="58"/></literal></expr>]<pos:position pos:line="53" pos:column="59"/></index></name><operator pos:line="53" pos:column="59">==<pos:position pos:line="53" pos:column="61"/></operator><literal type="number" pos:line="53" pos:column="61">0x0A<pos:position pos:line="53" pos:column="65"/></literal></expr>)<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66"> <block pos:line="53" pos:column="67">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">i<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">+=<pos:position pos:line="54" pos:column="12"/></operator><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">c<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">+<pos:position pos:line="54" pos:column="15"/></operator><literal type="number" pos:line="54" pos:column="15">3<pos:position pos:line="54" pos:column="16"/></literal><operator pos:line="54" pos:column="16">-<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">width<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">)<pos:position pos:line="54" pos:column="23"/></operator></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
        <break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">fputc<pos:position pos:line="58" pos:column="10"/></name><argument_list pos:line="58" pos:column="10">(<argument><expr><literal type="char" pos:line="58" pos:column="11">'\n'<pos:position pos:line="58" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="17">stream<pos:position pos:line="58" pos:column="23"/></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt> <comment type="block" pos:line="58" pos:column="26">/* newline */</comment>
  }<pos:position pos:line="59" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">fflush<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">stream<pos:position pos:line="60" pos:column="16"/></name></expr></argument>)<pos:position pos:line="60" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="18"/></expr_stmt>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

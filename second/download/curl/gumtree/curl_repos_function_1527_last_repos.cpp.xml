<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1527_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_multi_statemach<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">connectdata<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conn<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">bool<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">done<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type>                   <name pos:line="3" pos:column="25">rc<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">tftp_event_t<pos:position pos:line="4" pos:column="15"/></name></type>          <name pos:line="4" pos:column="25">event<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type>              <name pos:line="5" pos:column="25">result<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">CURLE_OK<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name>  <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">data<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name><name pos:line="6" pos:column="29">conn<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">data<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">tftp_state_data_t<pos:position pos:line="7" pos:column="20"/></name>     <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">state<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><operator pos:line="7" pos:column="34">(<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">tftp_state_data_t<pos:position pos:line="7" pos:column="52"/></name> <operator pos:line="7" pos:column="53">*<pos:position pos:line="7" pos:column="54"/></operator><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator><name><name pos:line="7" pos:column="55">conn<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">-&gt;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="61">proto<pos:position pos:line="7" pos:column="66"/></name><operator pos:line="7" pos:column="66">.<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="67">tftpc<pos:position pos:line="7" pos:column="72"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="73"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">long<pos:position pos:line="8" pos:column="7"/></name></type>                  <name pos:line="8" pos:column="25">timeout_ms<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><call><name pos:line="8" pos:column="38">tftp_state_timeout<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><name pos:line="8" pos:column="57">conn<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="63">&amp;<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="64">event<pos:position pos:line="8" pos:column="69"/></name></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="71"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="10" pos:column="3">*<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">done<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name pos:line="10" pos:column="11">FALSE<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">timeout_ms<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">failf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">data<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="17">"TFTP response timeout"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">event<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">!=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">TFTP_EVENT_NONE<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> <block pos:line="16" pos:column="32">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">result<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">tftp_state_machine<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">state<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">event<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">result<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">result<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">done<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">state<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">state<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">==<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">TFTP_STATE_FIN<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator></expr> ?<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47"> <expr><name pos:line="20" pos:column="48">TRUE<pos:position pos:line="20" pos:column="52"/></name></expr> <pos:position pos:line="20" pos:column="53"/></then><else pos:line="20" pos:column="53">: <expr><name pos:line="20" pos:column="55">FALSE<pos:position pos:line="20" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">done<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14">
      <comment type="block" pos:line="22" pos:column="7">/* Tell curl we're done */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">Curl_setup_transfer<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">conn<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="33">-<pos:position pos:line="23" pos:column="34"/></operator><literal type="number" pos:line="23" pos:column="34">1<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="37">-<pos:position pos:line="23" pos:column="38"/></operator><literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">FALSE<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">NULL<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="54">-<pos:position pos:line="23" pos:column="55"/></operator><literal type="number" pos:line="23" pos:column="55">1<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">NULL<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then>
  <else pos:line="25" pos:column="3">else <block pos:line="25" pos:column="8">{
    <comment type="block" pos:line="26" pos:column="5">/* no timeouts to handle, check our socket */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rc<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">SOCKET_READABLE<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">state<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">sockfd<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">rc<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">==<pos:position pos:line="29" pos:column="13"/></operator> <operator pos:line="29" pos:column="14">-<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
      <comment type="block" pos:line="30" pos:column="7">/* bail out */</comment>
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">int<pos:position pos:line="31" pos:column="10"/></name></type> <name pos:line="31" pos:column="11">error<pos:position pos:line="31" pos:column="16"/></name> <init pos:line="31" pos:column="17">= <expr><name pos:line="31" pos:column="19">SOCKERRNO<pos:position pos:line="31" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="29"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">failf<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">data<pos:position pos:line="32" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="19">"%s"<pos:position pos:line="32" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="25">Curl_strerror<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">conn<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">error<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">state<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">event<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">TFTP_EVENT_ERROR<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if<condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">rc<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">tftp_receive_packet<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">conn<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
      <if pos:line="37" pos:column="7">if<condition pos:line="37" pos:column="9">(<expr><name pos:line="37" pos:column="10">result<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">result<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="39" pos:column="7">result<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">tftp_state_machine<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">state<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="42">state<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">event<pos:position pos:line="39" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">result<pos:position pos:line="40" pos:column="16"/></name></expr>)<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">result<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">done<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="42" pos:column="15">(<pos:position pos:line="42" pos:column="16"/></operator><name><name pos:line="42" pos:column="16">state<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">state<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">==<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">TFTP_STATE_FIN<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">)<pos:position pos:line="42" pos:column="47"/></operator></expr> ?<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49"> <expr><name pos:line="42" pos:column="50">TRUE<pos:position pos:line="42" pos:column="54"/></name></expr> <pos:position pos:line="42" pos:column="55"/></then><else pos:line="42" pos:column="55">: <expr><name pos:line="42" pos:column="57">FALSE<pos:position pos:line="42" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>
      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><operator pos:line="43" pos:column="10">*<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">done<pos:position pos:line="43" pos:column="15"/></name></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16">
        <comment type="block" pos:line="44" pos:column="9">/* Tell curl we're done */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">Curl_setup_transfer<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">conn<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="35">-<pos:position pos:line="45" pos:column="36"/></operator><literal type="number" pos:line="45" pos:column="36">1<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="39">-<pos:position pos:line="45" pos:column="40"/></operator><literal type="number" pos:line="45" pos:column="40">1<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">FALSE<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="50">NULL<pos:position pos:line="45" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="56">-<pos:position pos:line="45" pos:column="57"/></operator><literal type="number" pos:line="45" pos:column="57">1<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">NULL<pos:position pos:line="45" pos:column="64"/></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif></if>
    <comment type="block" pos:line="47" pos:column="5">/* if rc == 0, then select() timed out */</comment>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">result<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

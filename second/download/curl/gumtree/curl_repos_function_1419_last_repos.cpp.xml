<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1419_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_add_buffer<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">Curl_send_buffer<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">in<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">inptr<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">size_t<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">size<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">new_rb<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">new_size<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">~<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">size<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="14">in<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">size_used<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
    <comment type="block" pos:line="7" pos:column="5">/* If resulting used size of send buffer would wrap size_t, cleanup
       the whole buffer and return error. Otherwise the required buffer
       size will fit into a single allocatable memory chunk */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">Curl_safefree<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name><name pos:line="10" pos:column="19">in<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">buffer<pos:position pos:line="10" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">free<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">in<pos:position pos:line="11" pos:column="12"/></name></expr></argument>)<pos:position pos:line="11" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name><name pos:line="15" pos:column="7">in<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">buffer<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">||<pos:position pos:line="15" pos:column="20"/></operator>
     <operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">in<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">size_used<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">+<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">size<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">&gt;<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name><name pos:line="16" pos:column="33">in<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">size_max<pos:position pos:line="16" pos:column="45"/></name></name> <operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="48">1<pos:position pos:line="16" pos:column="49"/></literal><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52"> <block pos:line="16" pos:column="53">{

    <comment type="block" pos:line="18" pos:column="5">/* If current buffer size isn't enough to hold the result, use a
       buffer size that doubles the required size. If this new size
       would wrap size_t, then just use the largest possible one */</comment>

    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">(<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">size<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">&gt;<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">size_t<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal> <operator pos:line="22" pos:column="27">/<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">2<pos:position pos:line="22" pos:column="30"/></literal><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator> <operator pos:line="22" pos:column="32">||<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name><name pos:line="22" pos:column="36">in<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">size_used<pos:position pos:line="22" pos:column="49"/></name></name> <operator pos:line="22" pos:column="50">&gt;<pos:position pos:line="22" pos:column="54"/></operator> <operator pos:line="22" pos:column="52">(<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">size_t<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">)<pos:position pos:line="22" pos:column="60"/></operator><operator pos:line="22" pos:column="60">-<pos:position pos:line="22" pos:column="61"/></operator><literal type="number" pos:line="22" pos:column="61">1<pos:position pos:line="22" pos:column="62"/></literal> <operator pos:line="22" pos:column="63">/<pos:position pos:line="22" pos:column="64"/></operator> <literal type="number" pos:line="22" pos:column="65">2<pos:position pos:line="22" pos:column="66"/></literal><operator pos:line="22" pos:column="66">)<pos:position pos:line="22" pos:column="67"/></operator> <operator pos:line="22" pos:column="68">||<pos:position pos:line="22" pos:column="70"/></operator>
       <operator pos:line="23" pos:column="8">(<pos:position pos:line="23" pos:column="9"/></operator><operator pos:line="23" pos:column="9">~<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">size<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">2<pos:position pos:line="23" pos:column="19"/></literal><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">&lt;<pos:position pos:line="23" pos:column="25"/></operator> <operator pos:line="23" pos:column="23">(<pos:position pos:line="23" pos:column="24"/></operator><name><name pos:line="23" pos:column="24">in<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">size_used<pos:position pos:line="23" pos:column="37"/></name></name> <operator pos:line="23" pos:column="38">*<pos:position pos:line="23" pos:column="39"/></operator> <literal type="number" pos:line="23" pos:column="40">2<pos:position pos:line="23" pos:column="41"/></literal><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">)<pos:position pos:line="23" pos:column="43"/></operator></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">new_size<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">(<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">size_t<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">)<pos:position pos:line="24" pos:column="26"/></operator><operator pos:line="24" pos:column="26">-<pos:position pos:line="24" pos:column="27"/></operator><literal type="number" pos:line="24" pos:column="27">1<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">new_size<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name><name pos:line="26" pos:column="19">in<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">size_used<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">size<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="41">*<pos:position pos:line="26" pos:column="42"/></operator> <literal type="number" pos:line="26" pos:column="43">2<pos:position pos:line="26" pos:column="44"/></literal></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></else></if>

    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name><name pos:line="28" pos:column="8">in<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">buffer<pos:position pos:line="28" pos:column="18"/></name></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
      <comment type="block" pos:line="29" pos:column="7">/* we have a buffer, enlarge the existing one */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">new_rb<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">Curl_saferealloc<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">in<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">buffer<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">new_size<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt></block></then>
    <else pos:line="31" pos:column="5">else
      <comment type="block" pos:line="32" pos:column="7">/* create a new buffer */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">new_rb<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">malloc<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">new_size<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt></block></else></if>

    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">!<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">new_rb<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
      <comment type="block" pos:line="36" pos:column="7">/* If we failed, we cleanup the whole buffer and return error */</comment>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">free<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">in<pos:position pos:line="37" pos:column="14"/></name></expr></argument>)<pos:position pos:line="37" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><name pos:line="38" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="38" pos:column="33"/></name></expr>;<pos:position pos:line="38" pos:column="34"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">in<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">buffer<pos:position pos:line="41" pos:column="15"/></name></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">new_rb<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">in<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">size_max<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">new_size<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">memcpy<pos:position pos:line="44" pos:column="9"/></name><argument_list pos:line="44" pos:column="9">(<argument><expr><operator pos:line="44" pos:column="10">&amp;<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="11">in<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">buffer<pos:position pos:line="44" pos:column="21"/></name><index pos:line="44" pos:column="21">[<expr><name><name pos:line="44" pos:column="22">in<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">size_used<pos:position pos:line="44" pos:column="35"/></name></name></expr>]<pos:position pos:line="44" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">inptr<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">size<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="46" pos:column="3">in<pos:position pos:line="46" pos:column="5"/></name><operator pos:line="46" pos:column="5">-&gt;<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="7">size_used<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">+=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">size<pos:position pos:line="46" pos:column="24"/></name></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">CURLE_OK<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_91.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <specifier pos:line="1" pos:column="6">static<pos:position pos:line="1" pos:column="12"/></specifier></type> <name pos:line="1" pos:column="13">urlfree<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">UrlData<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">data<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">bool<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">totally<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">USE_SSLEAY<pos:position pos:line="3" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name><name pos:line="4" pos:column="7">data<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">use_ssl<pos:position pos:line="4" pos:column="20"/></name></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
    <if pos:line="5" pos:column="5">if<condition pos:line="5" pos:column="7">(<expr><name><name pos:line="5" pos:column="8">data<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">ssl<pos:position pos:line="5" pos:column="17"/></name></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
      <expr_stmt><expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">void<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">)<pos:position pos:line="6" pos:column="13"/></operator><call><name pos:line="6" pos:column="13">SSL_shutdown<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name><name pos:line="6" pos:column="26">data<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">ssl<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="7" pos:column="7">SSL_set_connect_state<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">data<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">ssl<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="9" pos:column="7">SSL_free<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">ssl<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">ssl<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name><name pos:line="12" pos:column="8">data<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">ctx<pos:position pos:line="12" pos:column="17"/></name></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">SSL_CTX_free<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">data<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">ctx<pos:position pos:line="13" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">data<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">ctx<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">data<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">use_ssl<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">FALSE<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt> <comment type="block" pos:line="16" pos:column="28">/* get back to ordinary socket usage */</comment>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="18" pos:column="8">/* USE_SSLEAY */</comment>

  <comment type="block" pos:line="20" pos:column="3">/* close possibly still open sockets */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">-<pos:position pos:line="21" pos:column="7"/></operator><literal type="number" pos:line="21" pos:column="7">1<pos:position pos:line="21" pos:column="8"/></literal> <operator pos:line="21" pos:column="9">!=<pos:position pos:line="21" pos:column="11"/></operator> <name><name pos:line="21" pos:column="12">data<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">secondarysocket<pos:position pos:line="21" pos:column="33"/></name></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">sclose<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">data<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">secondarysocket<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">data<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">secondarysocket<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">-<pos:position pos:line="23" pos:column="30"/></operator><literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>	
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><operator pos:line="25" pos:column="6">-<pos:position pos:line="25" pos:column="7"/></operator><literal type="number" pos:line="25" pos:column="7">1<pos:position pos:line="25" pos:column="8"/></literal> <operator pos:line="25" pos:column="9">!=<pos:position pos:line="25" pos:column="11"/></operator> <name><name pos:line="25" pos:column="12">data<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">firstsocket<pos:position pos:line="25" pos:column="29"/></name></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">sclose<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">data<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">firstsocket<pos:position pos:line="26" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">data<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">firstsocket<pos:position pos:line="27" pos:column="22"/></name></name><operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator><operator pos:line="27" pos:column="23">-<pos:position pos:line="27" pos:column="24"/></operator><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name><name pos:line="30" pos:column="6">data<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">bits<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">proxystringalloc<pos:position pos:line="30" pos:column="33"/></name></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">data<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">bits<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">proxystringalloc<pos:position pos:line="31" pos:column="32"/></name></name><operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="33">FALSE<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt><empty_stmt pos:line="31" pos:column="39">;<pos:position pos:line="31" pos:column="40"/></empty_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">free<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name><name pos:line="32" pos:column="10">data<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">proxy<pos:position pos:line="32" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">data<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">proxy<pos:position pos:line="33" pos:column="16"/></name></name><operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">NULL<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Since we allocated the string the previous round, it means that we
       "discovered" the proxy in the environment variables and thus we must
       switch off that knowledge again... */</comment>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">data<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">bits<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">httpproxy<pos:position pos:line="38" pos:column="25"/></name></name><operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">FALSE<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name><name pos:line="41" pos:column="6">data<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">ptr_proxyuserpwd<pos:position pos:line="41" pos:column="28"/></name></name></expr>)<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29"> <block pos:line="41" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">free<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><name><name pos:line="42" pos:column="10">data<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">ptr_proxyuserpwd<pos:position pos:line="42" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">data<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">ptr_proxyuserpwd<pos:position pos:line="43" pos:column="27"/></name></name><operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">NULL<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name><name pos:line="45" pos:column="6">data<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">ptr_uagent<pos:position pos:line="45" pos:column="22"/></name></name></expr>)<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23"> <block pos:line="45" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">free<pos:position pos:line="46" pos:column="9"/></name><argument_list pos:line="46" pos:column="9">(<argument><expr><name><name pos:line="46" pos:column="10">data<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">ptr_uagent<pos:position pos:line="46" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">data<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">ptr_uagent<pos:position pos:line="47" pos:column="21"/></name></name><operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">NULL<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name><name pos:line="49" pos:column="6">data<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">ptr_userpwd<pos:position pos:line="49" pos:column="23"/></name></name></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">free<pos:position pos:line="50" pos:column="9"/></name><argument_list pos:line="50" pos:column="9">(<argument><expr><name><name pos:line="50" pos:column="10">data<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">ptr_userpwd<pos:position pos:line="50" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">data<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">ptr_userpwd<pos:position pos:line="51" pos:column="22"/></name></name><operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">NULL<pos:position pos:line="51" pos:column="27"/></name></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">data<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">ptr_rangeline<pos:position pos:line="53" pos:column="25"/></name></name></expr>)<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <block pos:line="53" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">free<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><name><name pos:line="54" pos:column="10">data<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">ptr_rangeline<pos:position pos:line="54" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">data<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">ptr_rangeline<pos:position pos:line="55" pos:column="24"/></name></name><operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">NULL<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>
  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><name><name pos:line="57" pos:column="6">data<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">ptr_ref<pos:position pos:line="57" pos:column="19"/></name></name></expr>)<pos:position pos:line="57" pos:column="20"/></condition><then pos:line="57" pos:column="20"> <block pos:line="57" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">free<pos:position pos:line="58" pos:column="9"/></name><argument_list pos:line="58" pos:column="9">(<argument><expr><name><name pos:line="58" pos:column="10">data<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">ptr_ref<pos:position pos:line="58" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">ptr_ref<pos:position pos:line="59" pos:column="18"/></name></name><operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><name><name pos:line="61" pos:column="6">data<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">ptr_cookie<pos:position pos:line="61" pos:column="22"/></name></name></expr>)<pos:position pos:line="61" pos:column="23"/></condition><then pos:line="61" pos:column="23"> <block pos:line="61" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">free<pos:position pos:line="62" pos:column="9"/></name><argument_list pos:line="62" pos:column="9">(<argument><expr><name><name pos:line="62" pos:column="10">data<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">ptr_cookie<pos:position pos:line="62" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">data<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">ptr_cookie<pos:position pos:line="63" pos:column="21"/></name></name><operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">NULL<pos:position pos:line="63" pos:column="26"/></name></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name><name pos:line="65" pos:column="6">data<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">ptr_host<pos:position pos:line="65" pos:column="20"/></name></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21"> <block pos:line="65" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">free<pos:position pos:line="66" pos:column="9"/></name><argument_list pos:line="66" pos:column="9">(<argument><expr><name><name pos:line="66" pos:column="10">data<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">ptr_host<pos:position pos:line="66" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">data<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">ptr_host<pos:position pos:line="67" pos:column="19"/></name></name><operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">NULL<pos:position pos:line="67" pos:column="24"/></name></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><name pos:line="70" pos:column="6">totally<pos:position pos:line="70" pos:column="13"/></name></expr>)<pos:position pos:line="70" pos:column="14"/></condition><then pos:line="70" pos:column="14"> <block pos:line="70" pos:column="15">{
    <comment type="block" pos:line="71" pos:column="5">/* we let the switch decide whether we're doing a part or total
       cleanup */</comment>

    <comment type="block" pos:line="74" pos:column="5">/* check for allocated [URL] memory to free: */</comment>
    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><name><name pos:line="75" pos:column="8">data<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">freethis<pos:position pos:line="75" pos:column="22"/></name></name></expr>)<pos:position pos:line="75" pos:column="23"/></condition><then pos:line="75" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="7">free<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><name><name pos:line="76" pos:column="12">data<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">freethis<pos:position pos:line="76" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="78" pos:column="5">if<condition pos:line="78" pos:column="7">(<expr><name><name pos:line="78" pos:column="8">data<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">headerbuff<pos:position pos:line="78" pos:column="24"/></name></name></expr>)<pos:position pos:line="78" pos:column="25"/></condition><then pos:line="78" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="7">free<pos:position pos:line="79" pos:column="11"/></name><argument_list pos:line="79" pos:column="11">(<argument><expr><name><name pos:line="79" pos:column="12">data<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">headerbuff<pos:position pos:line="79" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt></block></then></if>

    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name><name pos:line="81" pos:column="8">data<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">free_referer<pos:position pos:line="81" pos:column="26"/></name></name></expr>)<pos:position pos:line="81" pos:column="27"/></condition><then pos:line="81" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="7">free<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><name><name pos:line="82" pos:column="12">data<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">referer<pos:position pos:line="82" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">cookie_cleanup<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name><name pos:line="84" pos:column="20">data<pos:position pos:line="84" pos:column="24"/></name><operator pos:line="84" pos:column="24">-&gt;<pos:position pos:line="84" pos:column="29"/></operator><name pos:line="84" pos:column="26">cookies<pos:position pos:line="84" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">free<pos:position pos:line="86" pos:column="9"/></name><argument_list pos:line="86" pos:column="9">(<argument><expr><name pos:line="86" pos:column="10">data<pos:position pos:line="86" pos:column="14"/></name></expr></argument>)<pos:position pos:line="86" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="88" pos:column="5">/* global cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">curl_free<pos:position pos:line="89" pos:column="14"/></name><argument_list pos:line="89" pos:column="14">()<pos:position pos:line="89" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

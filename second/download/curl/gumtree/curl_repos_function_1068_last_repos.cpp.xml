<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1068_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">concat_url<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">base<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">relurl<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" format="doxygen" pos:line="3" pos:column="3">/***
   TRY to append this new path to the old URL
   to the right of the host part. Oh crap, this is doomed to cause
   problems in the future...
  */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">newest<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">protsep<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">pathsep<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">newlen<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">bool<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">host_changed<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name pos:line="12" pos:column="23">FALSE<pos:position pos:line="12" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">useurl<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><name pos:line="14" pos:column="24">relurl<pos:position pos:line="14" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">urllen<pos:position pos:line="15" pos:column="16"/></name></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* we must make our own copy of the URL to play with, as it may
     point to read-only data */</comment>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">url_clone<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><call><name pos:line="19" pos:column="21">strdup<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">base<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">url_clone<pos:position pos:line="21" pos:column="16"/></name></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">NULL<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="22" pos:column="18">/* skip out of this NOW */</comment>

  <comment type="block" pos:line="24" pos:column="3">/* protsep points to the start of the host name */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">protsep<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">strstr<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">url_clone<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"//"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">protsep<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="5">protsep<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">url_clone<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">protsep<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">+=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">2<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt></block></else></if> <comment type="block" pos:line="29" pos:column="19">/* pass the slashes */</comment>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><literal type="char" pos:line="31" pos:column="6">'/'<pos:position pos:line="31" pos:column="9"/></literal> <operator pos:line="31" pos:column="10">!=<pos:position pos:line="31" pos:column="12"/></operator> <name><name pos:line="31" pos:column="13">relurl<pos:position pos:line="31" pos:column="19"/></name><index pos:line="31" pos:column="19">[<expr><literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>]<pos:position pos:line="31" pos:column="22"/></index></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block pos:line="31" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">int<pos:position pos:line="32" pos:column="8"/></name></type> <name pos:line="32" pos:column="9">level<pos:position pos:line="32" pos:column="14"/></name> <init pos:line="32" pos:column="15">= <expr><literal type="number" pos:line="32" pos:column="17">0<pos:position pos:line="32" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* First we need to find out if there's a ?-letter in the URL,
       and cut it and the right-side of that off */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">pathsep<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strchr<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">protsep<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="31">'?'<pos:position pos:line="36" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">pathsep<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">pathsep<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* we have a relative path to append to the last slash if there's one
       available, or if the new URL is just a query string (starts with a
       '?')  we append the new one at the end of the entire currently worked
       out URL */</comment>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name><name pos:line="44" pos:column="8">useurl<pos:position pos:line="44" pos:column="14"/></name><index pos:line="44" pos:column="14">[<expr><literal type="number" pos:line="44" pos:column="15">0<pos:position pos:line="44" pos:column="16"/></literal></expr>]<pos:position pos:line="44" pos:column="17"/></index></name> <operator pos:line="44" pos:column="18">!=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="char" pos:line="44" pos:column="21">'?'<pos:position pos:line="44" pos:column="24"/></literal></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25"> <block pos:line="44" pos:column="26">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">pathsep<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <call><name pos:line="45" pos:column="17">strrchr<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">protsep<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="34">'/'<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
      <if pos:line="46" pos:column="7">if<condition pos:line="46" pos:column="9">(<expr><name pos:line="46" pos:column="10">pathsep<pos:position pos:line="46" pos:column="17"/></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">pathsep<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="50" pos:column="5">/* Check if there's any slash after the host name, and if so, remember
       that position instead */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">pathsep<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">strchr<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">protsep<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="31">'/'<pos:position pos:line="52" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">(<expr><name pos:line="53" pos:column="8">pathsep<pos:position pos:line="53" pos:column="15"/></name></expr>)<pos:position pos:line="53" pos:column="16"/></condition><then pos:line="53" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">protsep<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">=<pos:position pos:line="54" pos:column="16"/></operator> <name pos:line="54" pos:column="17">pathsep<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">+<pos:position pos:line="54" pos:column="26"/></operator> <literal type="number" pos:line="54" pos:column="27">1<pos:position pos:line="54" pos:column="28"/></literal></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="55" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">protsep<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <name pos:line="56" pos:column="17">NULL<pos:position pos:line="56" pos:column="21"/></name></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="58" pos:column="5">/* now deal with one "./" or any amount of "../" in the newurl
       and act accordingly */</comment>

    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><operator pos:line="61" pos:column="8">(<pos:position pos:line="61" pos:column="9"/></operator><name><name pos:line="61" pos:column="9">useurl<pos:position pos:line="61" pos:column="15"/></name><index pos:line="61" pos:column="15">[<expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>]<pos:position pos:line="61" pos:column="18"/></index></name> <operator pos:line="61" pos:column="19">==<pos:position pos:line="61" pos:column="21"/></operator> <literal type="char" pos:line="61" pos:column="22">'.'<pos:position pos:line="61" pos:column="25"/></literal><operator pos:line="61" pos:column="25">)<pos:position pos:line="61" pos:column="26"/></operator> <operator pos:line="61" pos:column="27">&amp;&amp;<pos:position pos:line="61" pos:column="37"/></operator> <operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name><name pos:line="61" pos:column="31">useurl<pos:position pos:line="61" pos:column="37"/></name><index pos:line="61" pos:column="37">[<expr><literal type="number" pos:line="61" pos:column="38">1<pos:position pos:line="61" pos:column="39"/></literal></expr>]<pos:position pos:line="61" pos:column="40"/></index></name> <operator pos:line="61" pos:column="41">==<pos:position pos:line="61" pos:column="43"/></operator> <literal type="char" pos:line="61" pos:column="44">'/'<pos:position pos:line="61" pos:column="47"/></literal><operator pos:line="61" pos:column="47">)<pos:position pos:line="61" pos:column="48"/></operator></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">useurl<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">+=<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">2<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt></block></then></if> <comment type="block" pos:line="62" pos:column="20">/* just skip the "./" */</comment>

    <while pos:line="64" pos:column="5">while<condition pos:line="64" pos:column="10">(<expr><operator pos:line="64" pos:column="11">(<pos:position pos:line="64" pos:column="12"/></operator><name><name pos:line="64" pos:column="12">useurl<pos:position pos:line="64" pos:column="18"/></name><index pos:line="64" pos:column="18">[<expr><literal type="number" pos:line="64" pos:column="19">0<pos:position pos:line="64" pos:column="20"/></literal></expr>]<pos:position pos:line="64" pos:column="21"/></index></name> <operator pos:line="64" pos:column="22">==<pos:position pos:line="64" pos:column="24"/></operator> <literal type="char" pos:line="64" pos:column="25">'.'<pos:position pos:line="64" pos:column="28"/></literal><operator pos:line="64" pos:column="28">)<pos:position pos:line="64" pos:column="29"/></operator> <operator pos:line="64" pos:column="30">&amp;&amp;<pos:position pos:line="64" pos:column="40"/></operator>
          <operator pos:line="65" pos:column="11">(<pos:position pos:line="65" pos:column="12"/></operator><name><name pos:line="65" pos:column="12">useurl<pos:position pos:line="65" pos:column="18"/></name><index pos:line="65" pos:column="18">[<expr><literal type="number" pos:line="65" pos:column="19">1<pos:position pos:line="65" pos:column="20"/></literal></expr>]<pos:position pos:line="65" pos:column="21"/></index></name> <operator pos:line="65" pos:column="22">==<pos:position pos:line="65" pos:column="24"/></operator> <literal type="char" pos:line="65" pos:column="25">'.'<pos:position pos:line="65" pos:column="28"/></literal><operator pos:line="65" pos:column="28">)<pos:position pos:line="65" pos:column="29"/></operator> <operator pos:line="65" pos:column="30">&amp;&amp;<pos:position pos:line="65" pos:column="40"/></operator>
          <operator pos:line="66" pos:column="11">(<pos:position pos:line="66" pos:column="12"/></operator><name><name pos:line="66" pos:column="12">useurl<pos:position pos:line="66" pos:column="18"/></name><index pos:line="66" pos:column="18">[<expr><literal type="number" pos:line="66" pos:column="19">2<pos:position pos:line="66" pos:column="20"/></literal></expr>]<pos:position pos:line="66" pos:column="21"/></index></name> <operator pos:line="66" pos:column="22">==<pos:position pos:line="66" pos:column="24"/></operator> <literal type="char" pos:line="66" pos:column="25">'/'<pos:position pos:line="66" pos:column="28"/></literal><operator pos:line="66" pos:column="28">)<pos:position pos:line="66" pos:column="29"/></operator></expr>)<pos:position pos:line="66" pos:column="30"/></condition> <block pos:line="66" pos:column="31">{
      <expr_stmt><expr><name pos:line="67" pos:column="7">level<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">++<pos:position pos:line="67" pos:column="14"/></operator></expr>;<pos:position pos:line="67" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="68" pos:column="7">useurl<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">+=<pos:position pos:line="68" pos:column="16"/></operator> <literal type="number" pos:line="68" pos:column="17">3<pos:position pos:line="68" pos:column="18"/></literal></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt> <comment type="block" pos:line="68" pos:column="20">/* pass the "../" */</comment>
    }<pos:position pos:line="69" pos:column="6"/></block></while>

    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name pos:line="71" pos:column="8">protsep<pos:position pos:line="71" pos:column="15"/></name></expr>)<pos:position pos:line="71" pos:column="16"/></condition><then pos:line="71" pos:column="16"> <block pos:line="71" pos:column="17">{
      <while pos:line="72" pos:column="7">while<condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">level<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">--<pos:position pos:line="72" pos:column="20"/></operator></expr>)<pos:position pos:line="72" pos:column="21"/></condition> <block pos:line="72" pos:column="22">{
        <comment type="block" pos:line="73" pos:column="9">/* cut off one more level from the right of the original URL */</comment>
        <expr_stmt><expr><name pos:line="74" pos:column="9">pathsep<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <call><name pos:line="74" pos:column="19">strrchr<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">protsep<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="36">'/'<pos:position pos:line="74" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
        <if pos:line="75" pos:column="9">if<condition pos:line="75" pos:column="11">(<expr><name pos:line="75" pos:column="12">pathsep<pos:position pos:line="75" pos:column="19"/></name></expr>)<pos:position pos:line="75" pos:column="20"/></condition><then pos:line="75" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="76" pos:column="11">*<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">pathsep<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <literal type="number" pos:line="76" pos:column="22">0<pos:position pos:line="76" pos:column="23"/></literal></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt></block></then>
        <else pos:line="77" pos:column="9">else <block pos:line="77" pos:column="14">{
          <expr_stmt><expr><operator pos:line="78" pos:column="11">*<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="12">protsep<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>
          <break pos:line="79" pos:column="11">break;<pos:position pos:line="79" pos:column="17"/></break>
        }<pos:position pos:line="80" pos:column="10"/></block></else></if>
      }<pos:position pos:line="81" pos:column="8"/></block></while>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
  }<pos:position pos:line="83" pos:column="4"/></block></then>
  <else pos:line="84" pos:column="3">else <block pos:line="84" pos:column="8">{
    <comment type="block" pos:line="85" pos:column="5">/* We got a new absolute path for this server */</comment>

    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><operator pos:line="87" pos:column="8">(<pos:position pos:line="87" pos:column="9"/></operator><name><name pos:line="87" pos:column="9">relurl<pos:position pos:line="87" pos:column="15"/></name><index pos:line="87" pos:column="15">[<expr><literal type="number" pos:line="87" pos:column="16">0<pos:position pos:line="87" pos:column="17"/></literal></expr>]<pos:position pos:line="87" pos:column="18"/></index></name> <operator pos:line="87" pos:column="19">==<pos:position pos:line="87" pos:column="21"/></operator> <literal type="char" pos:line="87" pos:column="22">'/'<pos:position pos:line="87" pos:column="25"/></literal><operator pos:line="87" pos:column="25">)<pos:position pos:line="87" pos:column="26"/></operator> <operator pos:line="87" pos:column="27">&amp;&amp;<pos:position pos:line="87" pos:column="37"/></operator> <operator pos:line="87" pos:column="30">(<pos:position pos:line="87" pos:column="31"/></operator><name><name pos:line="87" pos:column="31">relurl<pos:position pos:line="87" pos:column="37"/></name><index pos:line="87" pos:column="37">[<expr><literal type="number" pos:line="87" pos:column="38">1<pos:position pos:line="87" pos:column="39"/></literal></expr>]<pos:position pos:line="87" pos:column="40"/></index></name> <operator pos:line="87" pos:column="41">==<pos:position pos:line="87" pos:column="43"/></operator> <literal type="char" pos:line="87" pos:column="44">'/'<pos:position pos:line="87" pos:column="47"/></literal><operator pos:line="87" pos:column="47">)<pos:position pos:line="87" pos:column="48"/></operator></expr>)<pos:position pos:line="87" pos:column="49"/></condition><then pos:line="87" pos:column="49"> <block pos:line="87" pos:column="50">{
      <comment type="block" pos:line="88" pos:column="7">/* the new URL starts with //, just keep the protocol part from the
         original one */</comment>
      <expr_stmt><expr><operator pos:line="90" pos:column="7">*<pos:position pos:line="90" pos:column="8"/></operator><name pos:line="90" pos:column="8">protsep<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <literal type="number" pos:line="90" pos:column="18">0<pos:position pos:line="90" pos:column="19"/></literal></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="91" pos:column="7">useurl<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <operator pos:line="91" pos:column="16">&amp;<pos:position pos:line="91" pos:column="21"/></operator><name><name pos:line="91" pos:column="17">relurl<pos:position pos:line="91" pos:column="23"/></name><index pos:line="91" pos:column="23">[<expr><literal type="number" pos:line="91" pos:column="24">2<pos:position pos:line="91" pos:column="25"/></literal></expr>]<pos:position pos:line="91" pos:column="26"/></index></name></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt> <comment type="block" pos:line="91" pos:column="28">/* we keep the slashes from the original, so we
                              skip the new ones */</comment>
      <expr_stmt><expr><name pos:line="93" pos:column="7">host_changed<pos:position pos:line="93" pos:column="19"/></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">TRUE<pos:position pos:line="93" pos:column="26"/></name></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then>
    <else pos:line="95" pos:column="5">else <block pos:line="95" pos:column="10">{
      <comment type="block" pos:line="96" pos:column="7">/* cut off the original URL from the first slash, or deal with URLs
         without slash */</comment>
      <expr_stmt><expr><name pos:line="98" pos:column="7">pathsep<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <call><name pos:line="98" pos:column="17">strchr<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">protsep<pos:position pos:line="98" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="98" pos:column="33">'/'<pos:position pos:line="98" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt>
      <if pos:line="99" pos:column="7">if<condition pos:line="99" pos:column="9">(<expr><name pos:line="99" pos:column="10">pathsep<pos:position pos:line="99" pos:column="17"/></name></expr>)<pos:position pos:line="99" pos:column="18"/></condition><then pos:line="99" pos:column="18"> <block pos:line="99" pos:column="19">{
        <comment type="block" pos:line="100" pos:column="9">/* When people use badly formatted URLs, such as
           "http://www.url.com?dir=/home/daniel" we must not use the first
           slash, if there's a ?-letter before it! */</comment>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">char<pos:position pos:line="103" pos:column="13"/></name> <modifier pos:line="103" pos:column="14">*<pos:position pos:line="103" pos:column="15"/></modifier></type><name pos:line="103" pos:column="15">sep<pos:position pos:line="103" pos:column="18"/></name> <init pos:line="103" pos:column="19">= <expr><call><name pos:line="103" pos:column="21">strchr<pos:position pos:line="103" pos:column="27"/></name><argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">protsep<pos:position pos:line="103" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="103" pos:column="37">'?'<pos:position pos:line="103" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="103" pos:column="42"/></decl_stmt>
        <if pos:line="104" pos:column="9">if<condition pos:line="104" pos:column="11">(<expr><name pos:line="104" pos:column="12">sep<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">&amp;&amp;<pos:position pos:line="104" pos:column="26"/></operator> <operator pos:line="104" pos:column="19">(<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="20">sep<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">&lt;<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="26">pathsep<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">)<pos:position pos:line="104" pos:column="34"/></operator></expr>)<pos:position pos:line="104" pos:column="35"/></condition><then pos:line="104" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="11">pathsep<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="21">sep<pos:position pos:line="105" pos:column="24"/></name></expr>;<pos:position pos:line="105" pos:column="25"/></expr_stmt></block></then></if>
        <expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">pathsep<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">=<pos:position pos:line="106" pos:column="19"/></operator> <literal type="number" pos:line="106" pos:column="20">0<pos:position pos:line="106" pos:column="21"/></literal></expr>;<pos:position pos:line="106" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="107" pos:column="8"/></block></then>
      <else pos:line="108" pos:column="7">else <block pos:line="108" pos:column="12">{
        <comment type="block" pos:line="109" pos:column="9">/* There was no slash. Now, since we might be operating on a badly
           formatted URL, such as "http://www.url.com?id=2380" which doesn't
           use a slash separator as it is supposed to, we need to check for a
           ?-letter as well! */</comment>
        <expr_stmt><expr><name pos:line="113" pos:column="9">pathsep<pos:position pos:line="113" pos:column="16"/></name> <operator pos:line="113" pos:column="17">=<pos:position pos:line="113" pos:column="18"/></operator> <call><name pos:line="113" pos:column="19">strchr<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">protsep<pos:position pos:line="113" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="113" pos:column="35">'?'<pos:position pos:line="113" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="40"/></expr_stmt>
        <if pos:line="114" pos:column="9">if<condition pos:line="114" pos:column="11">(<expr><name pos:line="114" pos:column="12">pathsep<pos:position pos:line="114" pos:column="19"/></name></expr>)<pos:position pos:line="114" pos:column="20"/></condition><then pos:line="114" pos:column="20">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="115" pos:column="11">*<pos:position pos:line="115" pos:column="12"/></operator><name pos:line="115" pos:column="12">pathsep<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <literal type="number" pos:line="115" pos:column="22">0<pos:position pos:line="115" pos:column="23"/></literal></expr>;<pos:position pos:line="115" pos:column="24"/></expr_stmt></block></then></if>
      }<pos:position pos:line="116" pos:column="8"/></block></else></if>
    }<pos:position pos:line="117" pos:column="6"/></block></else></if>
  }<pos:position pos:line="118" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="120" pos:column="3">/* If the new part contains a space, this is a mighty stupid redirect
     but we still make an effort to do "right". To the left of a '?'
     letter we replace each space with %20 while it is replaced with '+'
     on the right side of the '?' letter.
  */</comment>
  <expr_stmt><expr><name pos:line="125" pos:column="3">newlen<pos:position pos:line="125" pos:column="9"/></name> <operator pos:line="125" pos:column="10">=<pos:position pos:line="125" pos:column="11"/></operator> <call><name pos:line="125" pos:column="12">strlen_url<pos:position pos:line="125" pos:column="22"/></name><argument_list pos:line="125" pos:column="22">(<argument><expr><name pos:line="125" pos:column="23">useurl<pos:position pos:line="125" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="31">!<pos:position pos:line="125" pos:column="32"/></operator><name pos:line="125" pos:column="32">host_changed<pos:position pos:line="125" pos:column="44"/></name></expr></argument>)<pos:position pos:line="125" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="127" pos:column="3">urllen<pos:position pos:line="127" pos:column="9"/></name> <operator pos:line="127" pos:column="10">=<pos:position pos:line="127" pos:column="11"/></operator> <call><name pos:line="127" pos:column="12">strlen<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name pos:line="127" pos:column="19">url_clone<pos:position pos:line="127" pos:column="28"/></name></expr></argument>)<pos:position pos:line="127" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="129" pos:column="3">newest<pos:position pos:line="129" pos:column="9"/></name> <operator pos:line="129" pos:column="10">=<pos:position pos:line="129" pos:column="11"/></operator> <call><name pos:line="129" pos:column="12">malloc<pos:position pos:line="129" pos:column="18"/></name><argument_list pos:line="129" pos:column="18">(<argument><expr><name pos:line="129" pos:column="19">urllen<pos:position pos:line="129" pos:column="25"/></name> <operator pos:line="129" pos:column="26">+<pos:position pos:line="129" pos:column="27"/></operator> <literal type="number" pos:line="129" pos:column="28">1<pos:position pos:line="129" pos:column="29"/></literal> <operator pos:line="129" pos:column="30">+<pos:position pos:line="129" pos:column="31"/></operator> <comment type="block" pos:line="129" pos:column="32">/* possible slash */</comment>
                  <name pos:line="130" pos:column="19">newlen<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">+<pos:position pos:line="130" pos:column="27"/></operator> <literal type="number" pos:line="130" pos:column="28">1<pos:position pos:line="130" pos:column="29"/></literal></expr></argument> <comment type="block" pos:line="130" pos:column="30">/* zero byte */</comment>)<pos:position pos:line="130" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="47"/></expr_stmt>

  <if pos:line="132" pos:column="3">if<condition pos:line="132" pos:column="5">(<expr><operator pos:line="132" pos:column="6">!<pos:position pos:line="132" pos:column="7"/></operator><name pos:line="132" pos:column="7">newest<pos:position pos:line="132" pos:column="13"/></name></expr>)<pos:position pos:line="132" pos:column="14"/></condition><then pos:line="132" pos:column="14"> <block pos:line="132" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">free<pos:position pos:line="133" pos:column="9"/></name><argument_list pos:line="133" pos:column="9">(<argument><expr><name pos:line="133" pos:column="10">url_clone<pos:position pos:line="133" pos:column="19"/></name></expr></argument>)<pos:position pos:line="133" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="21"/></expr_stmt> <comment type="block" pos:line="133" pos:column="22">/* don't leak this */</comment>
    <return pos:line="134" pos:column="5">return <expr><name pos:line="134" pos:column="12">NULL<pos:position pos:line="134" pos:column="16"/></name></expr>;<pos:position pos:line="134" pos:column="17"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="137" pos:column="3">/* copy over the root url part */</comment>
  <expr_stmt><expr><call><name pos:line="138" pos:column="3">memcpy<pos:position pos:line="138" pos:column="9"/></name><argument_list pos:line="138" pos:column="9">(<argument><expr><name pos:line="138" pos:column="10">newest<pos:position pos:line="138" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="18">url_clone<pos:position pos:line="138" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="29">urllen<pos:position pos:line="138" pos:column="35"/></name></expr></argument>)<pos:position pos:line="138" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="140" pos:column="3">/* check if we need to append a slash */</comment>
  <if pos:line="141" pos:column="3">if<condition pos:line="141" pos:column="5">(<expr><operator pos:line="141" pos:column="6">(<pos:position pos:line="141" pos:column="7"/></operator><literal type="char" pos:line="141" pos:column="7">'/'<pos:position pos:line="141" pos:column="10"/></literal> <operator pos:line="141" pos:column="11">==<pos:position pos:line="141" pos:column="13"/></operator> <name><name pos:line="141" pos:column="14">useurl<pos:position pos:line="141" pos:column="20"/></name><index pos:line="141" pos:column="20">[<expr><literal type="number" pos:line="141" pos:column="21">0<pos:position pos:line="141" pos:column="22"/></literal></expr>]<pos:position pos:line="141" pos:column="23"/></index></name><operator pos:line="141" pos:column="23">)<pos:position pos:line="141" pos:column="24"/></operator> <operator pos:line="141" pos:column="25">||<pos:position pos:line="141" pos:column="27"/></operator> <operator pos:line="141" pos:column="28">(<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="29">protsep<pos:position pos:line="141" pos:column="36"/></name> <operator pos:line="141" pos:column="37">&amp;&amp;<pos:position pos:line="141" pos:column="47"/></operator> <operator pos:line="141" pos:column="40">!<pos:position pos:line="141" pos:column="41"/></operator><operator pos:line="141" pos:column="41">*<pos:position pos:line="141" pos:column="42"/></operator><name pos:line="141" pos:column="42">protsep<pos:position pos:line="141" pos:column="49"/></name><operator pos:line="141" pos:column="49">)<pos:position pos:line="141" pos:column="50"/></operator> <operator pos:line="141" pos:column="51">||<pos:position pos:line="141" pos:column="53"/></operator> <operator pos:line="141" pos:column="54">(<pos:position pos:line="141" pos:column="55"/></operator><literal type="char" pos:line="141" pos:column="55">'?'<pos:position pos:line="141" pos:column="58"/></literal> <operator pos:line="141" pos:column="59">==<pos:position pos:line="141" pos:column="61"/></operator> <name><name pos:line="141" pos:column="62">useurl<pos:position pos:line="141" pos:column="68"/></name><index pos:line="141" pos:column="68">[<expr><literal type="number" pos:line="141" pos:column="69">0<pos:position pos:line="141" pos:column="70"/></literal></expr>]<pos:position pos:line="141" pos:column="71"/></index></name><operator pos:line="141" pos:column="71">)<pos:position pos:line="141" pos:column="72"/></operator></expr>)<pos:position pos:line="141" pos:column="73"/></condition><then pos:line="141" pos:column="73">
    <block type="pseudo"><empty_stmt pos:line="142" pos:column="5">;<pos:position pos:line="142" pos:column="6"/></empty_stmt></block></then>
  <else pos:line="143" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="5">newest<pos:position pos:line="144" pos:column="11"/></name><index pos:line="144" pos:column="11">[<expr><name pos:line="144" pos:column="12">urllen<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">++<pos:position pos:line="144" pos:column="20"/></operator></expr>]<pos:position pos:line="144" pos:column="21"/></index></name><operator pos:line="144" pos:column="21">=<pos:position pos:line="144" pos:column="22"/></operator><literal type="char" pos:line="144" pos:column="22">'/'<pos:position pos:line="144" pos:column="25"/></literal></expr>;<pos:position pos:line="144" pos:column="26"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="146" pos:column="3">/* then append the new piece on the right side */</comment>
  <expr_stmt><expr><call><name pos:line="147" pos:column="3">strcpy_url<pos:position pos:line="147" pos:column="13"/></name><argument_list pos:line="147" pos:column="13">(<argument><expr><operator pos:line="147" pos:column="14">&amp;<pos:position pos:line="147" pos:column="19"/></operator><name><name pos:line="147" pos:column="15">newest<pos:position pos:line="147" pos:column="21"/></name><index pos:line="147" pos:column="21">[<expr><name pos:line="147" pos:column="22">urllen<pos:position pos:line="147" pos:column="28"/></name></expr>]<pos:position pos:line="147" pos:column="29"/></index></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="31">useurl<pos:position pos:line="147" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="147" pos:column="39">!<pos:position pos:line="147" pos:column="40"/></operator><name pos:line="147" pos:column="40">host_changed<pos:position pos:line="147" pos:column="52"/></name></expr></argument>)<pos:position pos:line="147" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="149" pos:column="3">free<pos:position pos:line="149" pos:column="7"/></name><argument_list pos:line="149" pos:column="7">(<argument><expr><name pos:line="149" pos:column="8">url_clone<pos:position pos:line="149" pos:column="17"/></name></expr></argument>)<pos:position pos:line="149" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="19"/></expr_stmt>

  <return pos:line="151" pos:column="3">return <expr><name pos:line="151" pos:column="10">newest<pos:position pos:line="151" pos:column="16"/></name></expr>;<pos:position pos:line="151" pos:column="17"/></return>
}<pos:position pos:line="152" pos:column="2"/></block></function></unit>

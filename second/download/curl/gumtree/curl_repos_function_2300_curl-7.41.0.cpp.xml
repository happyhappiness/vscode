<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2300_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_nss_init<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* curl_global_init() is not thread-safe so this test is ok */</comment>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">nss_initlock<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">==<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">PR_Init<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">PR_USER_THREAD<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">PR_PRIORITY_NORMAL<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="49">256<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">nss_initlock<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <call><name pos:line="6" pos:column="20">PR_NewLock<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">()<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">nss_crllock<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">PR_NewLock<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* We will actually initialize NSS later */</comment>

  <return pos:line="12" pos:column="3">return <expr><literal type="number" pos:line="12" pos:column="10">1<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

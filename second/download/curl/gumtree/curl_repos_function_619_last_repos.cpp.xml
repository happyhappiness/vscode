<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_619_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">url<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLM<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">multi<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">running<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">num_handles<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">enum<pos:position pos:line="7" pos:column="7"/></name> <name pos:line="7" pos:column="8">HandleState<pos:position pos:line="7" pos:column="19"/></name></name></type> <name pos:line="7" pos:column="20">state<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">ReadyForNewHandle<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">urllen<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">strlen<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">url<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call> <operator pos:line="8" pos:column="31">+<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">4<pos:position pos:line="8" pos:column="34"/></literal> <operator pos:line="8" pos:column="35">+<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="37">1<pos:position pos:line="8" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">full_url<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><call><name pos:line="9" pos:column="20">malloc<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">urllen<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">start_test_timing<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">full_url<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">fprintf<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">stderr<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="21">"Not enough memory for full url\n"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">TEST_ERR_MAJOR_BAD<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <for pos:line="18" pos:column="3">for<control pos:line="18" pos:column="6">(<init><expr><name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></init> <condition><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="18">MAX_EASY_HANDLES<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></condition> <incr><expr><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name></expr></incr>)<pos:position pos:line="18" pos:column="40"/></control> <block pos:line="18" pos:column="41">{
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">easy<pos:position pos:line="19" pos:column="9"/></name><index pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name></expr>]<pos:position pos:line="19" pos:column="12"/></index></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NULL<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">sockets<pos:position pos:line="20" pos:column="12"/></name><index pos:line="20" pos:column="12">[<expr><name pos:line="20" pos:column="13">i<pos:position pos:line="20" pos:column="14"/></name></expr>]<pos:position pos:line="20" pos:column="15"/></index></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">res_global_init<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">CURL_GLOBAL_ALL<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">res<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10"> <block pos:line="24" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">full_url<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">res<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">multi_init<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">multi<pos:position pos:line="29" pos:column="19"/></name></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>

<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">USE_PIPELINING<pos:position pos:line="31" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">multi_setopt<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">multi<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="23">CURLMOPT_PIPELINING<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="44">1L<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">multi_setopt<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">multi<pos:position pos:line="33" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">CURLMOPT_MAX_HOST_CONNECTIONS<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="54">5L<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">multi_setopt<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">multi<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">CURLMOPT_MAX_TOTAL_CONNECTIONS<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="55">10L<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="37" pos:column="3">for<control pos:line="37" pos:column="6">(<init pos:line="37" pos:column="7">;<pos:position pos:line="37" pos:column="8"/></init><condition pos:line="37" pos:column="8">;<pos:position pos:line="37" pos:column="9"/></condition><incr/>)<pos:position pos:line="37" pos:column="10"/></control> <block pos:line="37" pos:column="11">{
    <decl_stmt><decl><type><name><name pos:line="38" pos:column="5">struct<pos:position pos:line="38" pos:column="11"/></name> <name pos:line="38" pos:column="12">timeval<pos:position pos:line="38" pos:column="19"/></name></name></type> <name pos:line="38" pos:column="20">interval<pos:position pos:line="38" pos:column="28"/></name></decl>;<pos:position pos:line="38" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">fd_set<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">fdread<pos:position pos:line="39" pos:column="18"/></name></decl>;<pos:position pos:line="39" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">fd_set<pos:position pos:line="40" pos:column="11"/></name></type> <name pos:line="40" pos:column="12">fdwrite<pos:position pos:line="40" pos:column="19"/></name></decl>;<pos:position pos:line="40" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">fd_set<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">fdexcep<pos:position pos:line="41" pos:column="19"/></name></decl>;<pos:position pos:line="41" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">long<pos:position pos:line="42" pos:column="9"/></name></type> <name pos:line="42" pos:column="10">timeout<pos:position pos:line="42" pos:column="17"/></name> <init pos:line="42" pos:column="18">= <expr><operator pos:line="42" pos:column="20">-<pos:position pos:line="42" pos:column="21"/></operator><literal type="number" pos:line="42" pos:column="21">99<pos:position pos:line="42" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">int<pos:position pos:line="43" pos:column="8"/></name></type> <name pos:line="43" pos:column="9">maxfd<pos:position pos:line="43" pos:column="14"/></name> <init pos:line="43" pos:column="15">= <expr><operator pos:line="43" pos:column="17">-<pos:position pos:line="43" pos:column="18"/></operator><literal type="number" pos:line="43" pos:column="18">99<pos:position pos:line="43" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">bool<pos:position pos:line="44" pos:column="9"/></name></type> <name pos:line="44" pos:column="10">found_new_socket<pos:position pos:line="44" pos:column="26"/></name> <init pos:line="44" pos:column="27">= <expr><name pos:line="44" pos:column="29">FALSE<pos:position pos:line="44" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Start a new handle if we aren't at the max */</comment>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">state<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">==<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">ReadyForNewHandle<pos:position pos:line="47" pos:column="34"/></name></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35"> <block pos:line="47" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">easy_init<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">easy<pos:position pos:line="48" pos:column="21"/></name><index pos:line="48" pos:column="21">[<expr><name pos:line="48" pos:column="22">num_handles<pos:position pos:line="48" pos:column="33"/></name></expr>]<pos:position pos:line="48" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>

      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><name pos:line="50" pos:column="10">num_handles<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">%<pos:position pos:line="50" pos:column="23"/></operator> <literal type="number" pos:line="50" pos:column="24">3<pos:position pos:line="50" pos:column="25"/></literal> <operator pos:line="50" pos:column="26">==<pos:position pos:line="50" pos:column="28"/></operator> <literal type="number" pos:line="50" pos:column="29">2<pos:position pos:line="50" pos:column="30"/></literal></expr>)<pos:position pos:line="50" pos:column="31"/></condition><then pos:line="50" pos:column="31"> <block pos:line="50" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">snprintf<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">full_url<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="28">urllen<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="36">"%s0200"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">url<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">easy_setopt<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name><name pos:line="52" pos:column="21">easy<pos:position pos:line="52" pos:column="25"/></name><index pos:line="52" pos:column="25">[<expr><name pos:line="52" pos:column="26">num_handles<pos:position pos:line="52" pos:column="37"/></name></expr>]<pos:position pos:line="52" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">CURLOPT_HTTPAUTH<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">CURLAUTH_NTLM<pos:position pos:line="52" pos:column="71"/></name></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="73"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></then>
      <else pos:line="54" pos:column="7">else <block pos:line="54" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">snprintf<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">full_url<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="28">urllen<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="36">"%s0100"<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">url<pos:position pos:line="55" pos:column="49"/></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">easy_setopt<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name><name pos:line="56" pos:column="21">easy<pos:position pos:line="56" pos:column="25"/></name><index pos:line="56" pos:column="25">[<expr><name pos:line="56" pos:column="26">num_handles<pos:position pos:line="56" pos:column="37"/></name></expr>]<pos:position pos:line="56" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">CURLOPT_HTTPAUTH<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">CURLAUTH_BASIC<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="57" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">easy_setopt<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name><name pos:line="58" pos:column="19">easy<pos:position pos:line="58" pos:column="23"/></name><index pos:line="58" pos:column="23">[<expr><name pos:line="58" pos:column="24">num_handles<pos:position pos:line="58" pos:column="35"/></name></expr>]<pos:position pos:line="58" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">CURLOPT_FRESH_CONNECT<pos:position pos:line="58" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="61">1L<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">easy_setopt<pos:position pos:line="59" pos:column="18"/></name><argument_list pos:line="59" pos:column="18">(<argument><expr><name><name pos:line="59" pos:column="19">easy<pos:position pos:line="59" pos:column="23"/></name><index pos:line="59" pos:column="23">[<expr><name pos:line="59" pos:column="24">num_handles<pos:position pos:line="59" pos:column="35"/></name></expr>]<pos:position pos:line="59" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">CURLOPT_URL<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="51">full_url<pos:position pos:line="59" pos:column="59"/></name></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">easy_setopt<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">(<argument><expr><name><name pos:line="60" pos:column="19">easy<pos:position pos:line="60" pos:column="23"/></name><index pos:line="60" pos:column="23">[<expr><name pos:line="60" pos:column="24">num_handles<pos:position pos:line="60" pos:column="35"/></name></expr>]<pos:position pos:line="60" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">CURLOPT_VERBOSE<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="55">1L<pos:position pos:line="60" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">easy_setopt<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><name><name pos:line="61" pos:column="19">easy<pos:position pos:line="61" pos:column="23"/></name><index pos:line="61" pos:column="23">[<expr><name pos:line="61" pos:column="24">num_handles<pos:position pos:line="61" pos:column="35"/></name></expr>]<pos:position pos:line="61" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">CURLOPT_HTTPGET<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="55">1L<pos:position pos:line="61" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">easy_setopt<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><name><name pos:line="62" pos:column="19">easy<pos:position pos:line="62" pos:column="23"/></name><index pos:line="62" pos:column="23">[<expr><name pos:line="62" pos:column="24">num_handles<pos:position pos:line="62" pos:column="35"/></name></expr>]<pos:position pos:line="62" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">CURLOPT_USERPWD<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="55">"testuser:testpass"<pos:position pos:line="62" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">easy_setopt<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name><name pos:line="63" pos:column="19">easy<pos:position pos:line="63" pos:column="23"/></name><index pos:line="63" pos:column="23">[<expr><name pos:line="63" pos:column="24">num_handles<pos:position pos:line="63" pos:column="35"/></name></expr>]<pos:position pos:line="63" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">CURLOPT_WRITEFUNCTION<pos:position pos:line="63" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="61">callback<pos:position pos:line="63" pos:column="69"/></name></expr></argument>)<pos:position pos:line="63" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">easy_setopt<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name><name pos:line="64" pos:column="19">easy<pos:position pos:line="64" pos:column="23"/></name><index pos:line="64" pos:column="23">[<expr><name pos:line="64" pos:column="24">num_handles<pos:position pos:line="64" pos:column="35"/></name></expr>]<pos:position pos:line="64" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">CURLOPT_WRITEDATA<pos:position pos:line="64" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="57">easy<pos:position pos:line="64" pos:column="61"/></name> <operator pos:line="64" pos:column="62">+<pos:position pos:line="64" pos:column="63"/></operator> <name pos:line="64" pos:column="64">num_handles<pos:position pos:line="64" pos:column="75"/></name></expr></argument>)<pos:position pos:line="64" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">easy_setopt<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name><name pos:line="65" pos:column="19">easy<pos:position pos:line="65" pos:column="23"/></name><index pos:line="65" pos:column="23">[<expr><name pos:line="65" pos:column="24">num_handles<pos:position pos:line="65" pos:column="35"/></name></expr>]<pos:position pos:line="65" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">CURLOPT_HEADER<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="54">1L<pos:position pos:line="65" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="67" pos:column="7">multi_add_handle<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">multi<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="31">easy<pos:position pos:line="67" pos:column="35"/></name><index pos:line="67" pos:column="35">[<expr><name pos:line="67" pos:column="36">num_handles<pos:position pos:line="67" pos:column="47"/></name></expr>]<pos:position pos:line="67" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="68" pos:column="7">num_handles<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">+=<pos:position pos:line="68" pos:column="21"/></operator> <literal type="number" pos:line="68" pos:column="22">1<pos:position pos:line="68" pos:column="23"/></literal></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="69" pos:column="7">state<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">NeedSocketForNewHandle<pos:position pos:line="69" pos:column="37"/></name></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">multi_perform<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">multi<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="26">&amp;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="27">running<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">abort_on_test_timeout<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">()<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>

    <if pos:line="76" pos:column="5">if<condition pos:line="76" pos:column="7">(<expr><operator pos:line="76" pos:column="8">!<pos:position pos:line="76" pos:column="9"/></operator><name pos:line="76" pos:column="9">running<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">&amp;&amp;<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="20">state<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">==<pos:position pos:line="76" pos:column="28"/></operator> <name pos:line="76" pos:column="29">NoMoreHandles<pos:position pos:line="76" pos:column="42"/></name></expr>)<pos:position pos:line="76" pos:column="43"/></condition><then pos:line="76" pos:column="43">
      <block type="pseudo"><break pos:line="77" pos:column="7">break;<pos:position pos:line="77" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="77" pos:column="14">/* done */</comment>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">FD_ZERO<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><operator pos:line="79" pos:column="13">&amp;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="14">fdread<pos:position pos:line="79" pos:column="20"/></name></expr></argument>)<pos:position pos:line="79" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">FD_ZERO<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><operator pos:line="80" pos:column="13">&amp;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="14">fdwrite<pos:position pos:line="80" pos:column="21"/></name></expr></argument>)<pos:position pos:line="80" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">FD_ZERO<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><operator pos:line="81" pos:column="13">&amp;<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="14">fdexcep<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">multi_fdset<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">multi<pos:position pos:line="83" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="24">&amp;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="25">fdread<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="33">&amp;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="34">fdwrite<pos:position pos:line="83" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="43">&amp;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="44">fdexcep<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="53">&amp;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="54">maxfd<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="85" pos:column="5">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name pos:line="87" pos:column="8">state<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">==<pos:position pos:line="87" pos:column="16"/></operator> <name pos:line="87" pos:column="17">NeedSocketForNewHandle<pos:position pos:line="87" pos:column="39"/></name></expr>)<pos:position pos:line="87" pos:column="40"/></condition><then pos:line="87" pos:column="40"> <block pos:line="87" pos:column="41">{
      <if pos:line="88" pos:column="7">if<condition pos:line="88" pos:column="9">(<expr><name pos:line="88" pos:column="10">maxfd<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">!=<pos:position pos:line="88" pos:column="18"/></operator> <operator pos:line="88" pos:column="19">-<pos:position pos:line="88" pos:column="20"/></operator><literal type="number" pos:line="88" pos:column="20">1<pos:position pos:line="88" pos:column="21"/></literal> <operator pos:line="88" pos:column="22">&amp;&amp;<pos:position pos:line="88" pos:column="32"/></operator> <operator pos:line="88" pos:column="25">!<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="26">found_new_socket<pos:position pos:line="88" pos:column="42"/></name></expr>)<pos:position pos:line="88" pos:column="43"/></condition><then pos:line="88" pos:column="43"> <block pos:line="88" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">fprintf<pos:position pos:line="89" pos:column="16"/></name><argument_list pos:line="89" pos:column="16">(<argument><expr><name pos:line="89" pos:column="17">stderr<pos:position pos:line="89" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="25">"Warning: socket did not open immediately for new "<pos:position pos:line="89" pos:column="76"/></literal>
                <literal type="string" pos:line="90" pos:column="17">"handle (trying again)\n"<pos:position pos:line="90" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
        <continue pos:line="91" pos:column="9">continue;<pos:position pos:line="91" pos:column="18"/></continue>
      }<pos:position pos:line="92" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="93" pos:column="7">state<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="93" pos:column="15">num_handles<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">&lt;<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="29">MAX_EASY_HANDLES<pos:position pos:line="93" pos:column="45"/></name></expr> ?<pos:position pos:line="93" pos:column="47"/></condition><then pos:line="93" pos:column="47"> <expr><name pos:line="93" pos:column="48">ReadyForNewHandle<pos:position pos:line="93" pos:column="65"/></name></expr>
                                             <pos:position pos:line="94" pos:column="46"/></then><else pos:line="94" pos:column="46">: <expr><name pos:line="94" pos:column="48">NoMoreHandles<pos:position pos:line="94" pos:column="61"/></name></expr></else></ternary></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">multi_timeout<pos:position pos:line="97" pos:column="18"/></name><argument_list pos:line="97" pos:column="18">(<argument><expr><name pos:line="97" pos:column="19">multi<pos:position pos:line="97" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="26">&amp;<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="27">timeout<pos:position pos:line="97" pos:column="34"/></name></expr></argument>)<pos:position pos:line="97" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="99" pos:column="5">/* At this point, timeout is guaranteed to be greater or equal than -1. */</comment>

    <expr_stmt><expr><call><name pos:line="101" pos:column="5">fprintf<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">stderr<pos:position pos:line="101" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="21">"%s:%d num_handles %d timeout %ld\n"<pos:position pos:line="101" pos:column="57"/></literal></expr></argument>,
            <argument><expr><name pos:line="102" pos:column="13">__FILE__<pos:position pos:line="102" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="23">__LINE__<pos:position pos:line="102" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="33">num_handles<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="46">timeout<pos:position pos:line="102" pos:column="53"/></name></expr></argument>)<pos:position pos:line="102" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="55"/></expr_stmt>

    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><name pos:line="104" pos:column="8">timeout<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">!=<pos:position pos:line="104" pos:column="18"/></operator> <operator pos:line="104" pos:column="19">-<pos:position pos:line="104" pos:column="20"/></operator><literal type="number" pos:line="104" pos:column="20">1L<pos:position pos:line="104" pos:column="22"/></literal></expr>)<pos:position pos:line="104" pos:column="23"/></condition><then pos:line="104" pos:column="23"> <block pos:line="104" pos:column="24">{
      <decl_stmt><decl><type><name pos:line="105" pos:column="7">int<pos:position pos:line="105" pos:column="10"/></name></type> <name pos:line="105" pos:column="11">itimeout<pos:position pos:line="105" pos:column="19"/></name> <init pos:line="105" pos:column="20">= <expr><ternary><condition><expr><operator pos:line="105" pos:column="22">(<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">timeout<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">&gt;<pos:position pos:line="105" pos:column="35"/></operator> <operator pos:line="105" pos:column="33">(<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="34">long<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">)<pos:position pos:line="105" pos:column="39"/></operator><name pos:line="105" pos:column="39">INT_MAX<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">)<pos:position pos:line="105" pos:column="47"/></operator></expr> ?<pos:position pos:line="105" pos:column="49"/></condition><then pos:line="105" pos:column="49"> <expr><name pos:line="105" pos:column="50">INT_MAX<pos:position pos:line="105" pos:column="57"/></name></expr> <pos:position pos:line="105" pos:column="58"/></then><else pos:line="105" pos:column="58">: <expr><operator pos:line="105" pos:column="60">(<pos:position pos:line="105" pos:column="61"/></operator><name pos:line="105" pos:column="61">int<pos:position pos:line="105" pos:column="64"/></name><operator pos:line="105" pos:column="64">)<pos:position pos:line="105" pos:column="65"/></operator><name pos:line="105" pos:column="65">timeout<pos:position pos:line="105" pos:column="72"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="105" pos:column="73"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="106" pos:column="7">interval<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">.<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">tv_sec<pos:position pos:line="106" pos:column="22"/></name></name> <operator pos:line="106" pos:column="23">=<pos:position pos:line="106" pos:column="24"/></operator> <name pos:line="106" pos:column="25">itimeout<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">/<pos:position pos:line="106" pos:column="34"/></operator><literal type="number" pos:line="106" pos:column="34">1000<pos:position pos:line="106" pos:column="38"/></literal></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="107" pos:column="7">interval<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">.<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="16">tv_usec<pos:position pos:line="107" pos:column="23"/></name></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <operator pos:line="107" pos:column="26">(<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="27">itimeout<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">%<pos:position pos:line="107" pos:column="36"/></operator><literal type="number" pos:line="107" pos:column="36">1000<pos:position pos:line="107" pos:column="40"/></literal><operator pos:line="107" pos:column="40">)<pos:position pos:line="107" pos:column="41"/></operator><operator pos:line="107" pos:column="41">*<pos:position pos:line="107" pos:column="42"/></operator><literal type="number" pos:line="107" pos:column="42">1000<pos:position pos:line="107" pos:column="46"/></literal></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then>
    <else pos:line="109" pos:column="5">else <block pos:line="109" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="110" pos:column="7">interval<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">.<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="16">tv_sec<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">=<pos:position pos:line="110" pos:column="24"/></operator> <name pos:line="110" pos:column="25">TEST_HANG_TIMEOUT<pos:position pos:line="110" pos:column="42"/></name><operator pos:line="110" pos:column="42">/<pos:position pos:line="110" pos:column="43"/></operator><literal type="number" pos:line="110" pos:column="43">1000<pos:position pos:line="110" pos:column="47"/></literal> <operator pos:line="110" pos:column="48">+<pos:position pos:line="110" pos:column="49"/></operator> <literal type="number" pos:line="110" pos:column="50">1<pos:position pos:line="110" pos:column="51"/></literal></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="111" pos:column="7">interval<pos:position pos:line="111" pos:column="15"/></name><operator pos:line="111" pos:column="15">.<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="16">tv_usec<pos:position pos:line="111" pos:column="23"/></name></name> <operator pos:line="111" pos:column="24">=<pos:position pos:line="111" pos:column="25"/></operator> <literal type="number" pos:line="111" pos:column="26">0<pos:position pos:line="111" pos:column="27"/></literal></expr>;<pos:position pos:line="111" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="113" pos:column="7">/* if there's no timeout and we get here on the last handle, we may
         already have read the last part of the stream so waiting makes no
         sense */</comment>
      <if pos:line="116" pos:column="7">if<condition pos:line="116" pos:column="9">(<expr><operator pos:line="116" pos:column="10">!<pos:position pos:line="116" pos:column="11"/></operator><name pos:line="116" pos:column="11">running<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">&amp;&amp;<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="22">num_handles<pos:position pos:line="116" pos:column="33"/></name> <operator pos:line="116" pos:column="34">==<pos:position pos:line="116" pos:column="36"/></operator> <name pos:line="116" pos:column="37">MAX_EASY_HANDLES<pos:position pos:line="116" pos:column="53"/></name></expr>)<pos:position pos:line="116" pos:column="54"/></condition><then pos:line="116" pos:column="54"> <block pos:line="116" pos:column="55">{
        <break pos:line="117" pos:column="9">break;<pos:position pos:line="117" pos:column="15"/></break>
      }<pos:position pos:line="118" pos:column="8"/></block></then></if>
    }<pos:position pos:line="119" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="121" pos:column="5">select_test<pos:position pos:line="121" pos:column="16"/></name><argument_list pos:line="121" pos:column="16">(<argument><expr><name pos:line="121" pos:column="17">maxfd<pos:position pos:line="121" pos:column="22"/></name> <operator pos:line="121" pos:column="23">+<pos:position pos:line="121" pos:column="24"/></operator> <literal type="number" pos:line="121" pos:column="25">1<pos:position pos:line="121" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="121" pos:column="28">&amp;<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="29">fdread<pos:position pos:line="121" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="37">&amp;<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="38">fdwrite<pos:position pos:line="121" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="47">&amp;<pos:position pos:line="121" pos:column="52"/></operator><name pos:line="121" pos:column="48">fdexcep<pos:position pos:line="121" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="57">&amp;<pos:position pos:line="121" pos:column="62"/></operator><name pos:line="121" pos:column="58">interval<pos:position pos:line="121" pos:column="66"/></name></expr></argument>)<pos:position pos:line="121" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="123" pos:column="5">abort_on_test_timeout<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">()<pos:position pos:line="123" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="124" pos:column="4"/></block></for>

<label><name pos:line="126" pos:column="1">test_cleanup<pos:position pos:line="126" pos:column="13"/></name>:<pos:position pos:line="126" pos:column="14"/></label>

  <comment type="block" pos:line="128" pos:column="3">/* proper cleanup sequence - type PB */</comment>

  <for pos:line="130" pos:column="3">for<control pos:line="130" pos:column="6">(<init><expr><name pos:line="130" pos:column="7">i<pos:position pos:line="130" pos:column="8"/></name> <operator pos:line="130" pos:column="9">=<pos:position pos:line="130" pos:column="10"/></operator> <literal type="number" pos:line="130" pos:column="11">0<pos:position pos:line="130" pos:column="12"/></literal></expr>;<pos:position pos:line="130" pos:column="13"/></init> <condition><expr><name pos:line="130" pos:column="14">i<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">&lt;<pos:position pos:line="130" pos:column="20"/></operator> <name pos:line="130" pos:column="18">MAX_EASY_HANDLES<pos:position pos:line="130" pos:column="34"/></name></expr>;<pos:position pos:line="130" pos:column="35"/></condition> <incr><expr><name pos:line="130" pos:column="36">i<pos:position pos:line="130" pos:column="37"/></name><operator pos:line="130" pos:column="37">++<pos:position pos:line="130" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="130" pos:column="40"/></control> <block pos:line="130" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">printf<pos:position pos:line="131" pos:column="11"/></name><argument_list pos:line="131" pos:column="11">(<argument><expr><literal type="string" pos:line="131" pos:column="12">"Data connection %d: %d\n"<pos:position pos:line="131" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="40">i<pos:position pos:line="131" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="43">counter<pos:position pos:line="131" pos:column="50"/></name><index pos:line="131" pos:column="50">[<expr><name pos:line="131" pos:column="51">i<pos:position pos:line="131" pos:column="52"/></name></expr>]<pos:position pos:line="131" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">curl_multi_remove_handle<pos:position pos:line="132" pos:column="29"/></name><argument_list pos:line="132" pos:column="29">(<argument><expr><name pos:line="132" pos:column="30">multi<pos:position pos:line="132" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="37">easy<pos:position pos:line="132" pos:column="41"/></name><index pos:line="132" pos:column="41">[<expr><name pos:line="132" pos:column="42">i<pos:position pos:line="132" pos:column="43"/></name></expr>]<pos:position pos:line="132" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="132" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">curl_easy_cleanup<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name><name pos:line="133" pos:column="23">easy<pos:position pos:line="133" pos:column="27"/></name><index pos:line="133" pos:column="27">[<expr><name pos:line="133" pos:column="28">i<pos:position pos:line="133" pos:column="29"/></name></expr>]<pos:position pos:line="133" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="134" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="136" pos:column="3">curl_multi_cleanup<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">(<argument><expr><name pos:line="136" pos:column="22">multi<pos:position pos:line="136" pos:column="27"/></name></expr></argument>)<pos:position pos:line="136" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="137" pos:column="3">curl_global_cleanup<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">()<pos:position pos:line="137" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="139" pos:column="3">free<pos:position pos:line="139" pos:column="7"/></name><argument_list pos:line="139" pos:column="7">(<argument><expr><name pos:line="139" pos:column="8">full_url<pos:position pos:line="139" pos:column="16"/></name></expr></argument>)<pos:position pos:line="139" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="18"/></expr_stmt>

  <return pos:line="141" pos:column="3">return <expr><name pos:line="141" pos:column="10">res<pos:position pos:line="141" pos:column="13"/></name></expr>;<pos:position pos:line="141" pos:column="14"/></return>
}<pos:position pos:line="142" pos:column="2"/></block></function></unit>

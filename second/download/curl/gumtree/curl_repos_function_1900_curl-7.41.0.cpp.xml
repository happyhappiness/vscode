<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1900_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">_ldap_url_parse2<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">LDAPURLDesc<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">ludp<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><name pos:line="3" pos:column="12">LDAP_SUCCESS<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">path<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">q<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name><name pos:line="9" pos:column="7">conn<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">data<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">||<pos:position pos:line="9" pos:column="20"/></operator>
      <operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name><name pos:line="10" pos:column="8">conn<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">data<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">state<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">path<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">||<pos:position pos:line="10" pos:column="33"/></operator>
      <name><name pos:line="11" pos:column="7">conn<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">data<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">state<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">path<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr>]<pos:position pos:line="11" pos:column="32"/></index></name> <operator pos:line="11" pos:column="33">!=<pos:position pos:line="11" pos:column="35"/></operator> <literal type="char" pos:line="11" pos:column="36">'/'<pos:position pos:line="11" pos:column="39"/></literal> <operator pos:line="11" pos:column="40">||<pos:position pos:line="11" pos:column="42"/></operator>
      <operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><call><name pos:line="12" pos:column="8">checkprefix<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="string" pos:line="12" pos:column="20">"LDAP"<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="28">conn<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">data<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">change<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">url<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">LDAP_INVALID_SYNTAX<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ludp<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">lud_scope<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">LDAP_SCOPE_BASE<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">ludp<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">lud_port<pos:position pos:line="16" pos:column="17"/></name></name>  <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name><name pos:line="16" pos:column="21">conn<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">remote_port<pos:position pos:line="16" pos:column="38"/></name></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">ludp<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">lud_host<pos:position pos:line="17" pos:column="17"/></name></name>  <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="21">conn<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">host<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">name<pos:position pos:line="17" pos:column="36"/></name></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Duplicate the path */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">p<pos:position pos:line="20" pos:column="4"/></name> <operator pos:line="20" pos:column="5">=<pos:position pos:line="20" pos:column="6"/></operator> <name pos:line="20" pos:column="7">path<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">strdup<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name><name pos:line="20" pos:column="21">conn<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">data<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">state<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">path<pos:position pos:line="20" pos:column="43"/></name></name> <operator pos:line="20" pos:column="44">+<pos:position pos:line="20" pos:column="45"/></operator> <literal type="number" pos:line="20" pos:column="46">1<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">path<pos:position pos:line="21" pos:column="11"/></name></expr>)<pos:position pos:line="21" pos:column="12"/></condition><then pos:line="21" pos:column="12">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Parse the DN (Distinguished Name) */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">q<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <call><name pos:line="25" pos:column="7">strchr<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">p<pos:position pos:line="25" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="17">'?'<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">q<pos:position pos:line="26" pos:column="7"/></name></expr>)<pos:position pos:line="26" pos:column="8"/></condition><then pos:line="26" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">q<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">++<pos:position pos:line="27" pos:column="9"/></operator> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <literal type="char" pos:line="27" pos:column="12">'\0'<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt></block></then></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><operator pos:line="29" pos:column="6">*<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">p<pos:position pos:line="29" pos:column="8"/></name></expr>)<pos:position pos:line="29" pos:column="9"/></condition><then pos:line="29" pos:column="9"> <block pos:line="29" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name> <modifier pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></modifier></type><name pos:line="30" pos:column="11">dn<pos:position pos:line="30" pos:column="13"/></name> <init pos:line="30" pos:column="14">= <expr><name pos:line="30" pos:column="16">p<pos:position pos:line="30" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">unescaped<pos:position pos:line="31" pos:column="20"/></name></decl>;<pos:position pos:line="31" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">LDAP_TRACE<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><literal type="string" pos:line="33" pos:column="18">"DN '%s'\n"<pos:position pos:line="33" pos:column="29"/></literal><operator pos:line="33" pos:column="29">,<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">dn<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">)<pos:position pos:line="33" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Unescape the DN */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">unescaped<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">curl_easy_unescape<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name><name pos:line="36" pos:column="36">conn<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">-&gt;<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="42">data<pos:position pos:line="36" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">dn<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="52">0<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">NULL<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><operator pos:line="37" pos:column="8">!<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="9">unescaped<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19"> <block pos:line="37" pos:column="20">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">rc<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <name pos:line="38" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

      <goto pos:line="40" pos:column="7">goto <name pos:line="40" pos:column="12">quit<pos:position pos:line="40" pos:column="16"/></name>;<pos:position pos:line="40" pos:column="17"/></goto>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><call><name pos:line="43" pos:column="5">defined<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="44" pos:column="5">/* Convert the unescaped string to a tchar */</comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">ludp<pos:position pos:line="45" pos:column="9"/></name><operator pos:line="45" pos:column="9">-&gt;<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="11">lud_dn<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">Curl_convert_UTF8_to_tchar<pos:position pos:line="45" pos:column="46"/></name><argument_list pos:line="45" pos:column="46">(<argument><expr><name pos:line="45" pos:column="47">unescaped<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Free the unescaped string as we are done with it */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">Curl_unicodefree<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">unescaped<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>

    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><operator pos:line="50" pos:column="8">!<pos:position pos:line="50" pos:column="9"/></operator><name><name pos:line="50" pos:column="9">ludp<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">lud_dn<pos:position pos:line="50" pos:column="21"/></name></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22"> <block pos:line="50" pos:column="23">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">rc<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <name pos:line="51" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="51" pos:column="26"/></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>

      <goto pos:line="53" pos:column="7">goto <name pos:line="53" pos:column="12">quit<pos:position pos:line="53" pos:column="16"/></name>;<pos:position pos:line="53" pos:column="17"/></goto>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
<cpp:else pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">else<pos:position pos:line="55" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">ludp<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">lud_dn<pos:position pos:line="56" pos:column="17"/></name></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">unescaped<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="60" pos:column="3">p<pos:position pos:line="60" pos:column="4"/></name> <operator pos:line="60" pos:column="5">=<pos:position pos:line="60" pos:column="6"/></operator> <name pos:line="60" pos:column="7">q<pos:position pos:line="60" pos:column="8"/></name></expr>;<pos:position pos:line="60" pos:column="9"/></expr_stmt>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">!<pos:position pos:line="61" pos:column="7"/></operator><name pos:line="61" pos:column="7">p<pos:position pos:line="61" pos:column="8"/></name></expr>)<pos:position pos:line="61" pos:column="9"/></condition><then pos:line="61" pos:column="9">
    <block type="pseudo"><goto pos:line="62" pos:column="5">goto <name pos:line="62" pos:column="10">quit<pos:position pos:line="62" pos:column="14"/></name>;<pos:position pos:line="62" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="64" pos:column="3">/* Parse the attributes. skip "??" */</comment>
  <expr_stmt><expr><name pos:line="65" pos:column="3">q<pos:position pos:line="65" pos:column="4"/></name> <operator pos:line="65" pos:column="5">=<pos:position pos:line="65" pos:column="6"/></operator> <call><name pos:line="65" pos:column="7">strchr<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">p<pos:position pos:line="65" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="65" pos:column="17">'?'<pos:position pos:line="65" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name pos:line="66" pos:column="6">q<pos:position pos:line="66" pos:column="7"/></name></expr>)<pos:position pos:line="66" pos:column="8"/></condition><then pos:line="66" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="5">*<pos:position pos:line="67" pos:column="6"/></operator><name pos:line="67" pos:column="6">q<pos:position pos:line="67" pos:column="7"/></name><operator pos:line="67" pos:column="7">++<pos:position pos:line="67" pos:column="9"/></operator> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <literal type="char" pos:line="67" pos:column="12">'\0'<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt></block></then></if>

  <if pos:line="69" pos:column="3">if<condition pos:line="69" pos:column="5">(<expr><operator pos:line="69" pos:column="6">*<pos:position pos:line="69" pos:column="7"/></operator><name pos:line="69" pos:column="7">p<pos:position pos:line="69" pos:column="8"/></name></expr>)<pos:position pos:line="69" pos:column="9"/></condition><then pos:line="69" pos:column="9"> <block pos:line="69" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">char<pos:position pos:line="70" pos:column="9"/></name> <modifier pos:line="70" pos:column="10">*<pos:position pos:line="70" pos:column="11"/></modifier><modifier pos:line="70" pos:column="11">*<pos:position pos:line="70" pos:column="12"/></modifier></type><name pos:line="70" pos:column="12">attributes<pos:position pos:line="70" pos:column="22"/></name></decl>;<pos:position pos:line="70" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">size_t<pos:position pos:line="71" pos:column="11"/></name></type> <name pos:line="71" pos:column="12">count<pos:position pos:line="71" pos:column="17"/></name> <init pos:line="71" pos:column="18">= <expr><literal type="number" pos:line="71" pos:column="20">0<pos:position pos:line="71" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="22"/></decl_stmt>

    <comment type="block" pos:line="73" pos:column="5">/* Split the string into an array of attributes */</comment>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><operator pos:line="74" pos:column="8">!<pos:position pos:line="74" pos:column="9"/></operator><call><name pos:line="74" pos:column="9">split_str<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">p<pos:position pos:line="74" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="22">&amp;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="23">attributes<pos:position pos:line="74" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="35">&amp;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="36">count<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="43"/></condition><then pos:line="74" pos:column="43"> <block pos:line="74" pos:column="44">{
      <expr_stmt><expr><name pos:line="75" pos:column="7">rc<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <name pos:line="75" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="75" pos:column="26"/></name></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>

      <goto pos:line="77" pos:column="7">goto <name pos:line="77" pos:column="12">quit<pos:position pos:line="77" pos:column="16"/></name>;<pos:position pos:line="77" pos:column="17"/></goto>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="80" pos:column="5">/* Allocate our array (+1 for the NULL entry) */</comment>
<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><call><name pos:line="81" pos:column="5">defined<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="81" pos:column="27"/></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">ludp<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">-&gt;<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="11">lud_attrs<pos:position pos:line="82" pos:column="20"/></name></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <call><name pos:line="82" pos:column="23">calloc<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">count<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">+<pos:position pos:line="82" pos:column="37"/></operator> <literal type="number" pos:line="82" pos:column="38">1<pos:position pos:line="82" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="41">sizeof<argument_list pos:line="82" pos:column="47">(<argument><expr><name pos:line="82" pos:column="48">TCHAR<pos:position pos:line="82" pos:column="53"/></name> <operator pos:line="82" pos:column="54">*<pos:position pos:line="82" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="58"/></expr_stmt>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">ludp<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">lud_attrs<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">calloc<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">count<pos:position pos:line="84" pos:column="35"/></name> <operator pos:line="84" pos:column="36">+<pos:position pos:line="84" pos:column="37"/></operator> <literal type="number" pos:line="84" pos:column="38">1<pos:position pos:line="84" pos:column="39"/></literal></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="41">sizeof<argument_list pos:line="84" pos:column="47">(<argument><expr><name pos:line="84" pos:column="48">char<pos:position pos:line="84" pos:column="52"/></name> <operator pos:line="84" pos:column="53">*<pos:position pos:line="84" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><operator pos:line="86" pos:column="8">!<pos:position pos:line="86" pos:column="9"/></operator><name><name pos:line="86" pos:column="9">ludp<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">lud_attrs<pos:position pos:line="86" pos:column="24"/></name></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <block pos:line="86" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="87" pos:column="7">Curl_safefree<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><name pos:line="87" pos:column="21">attributes<pos:position pos:line="87" pos:column="31"/></name></expr></argument>)<pos:position pos:line="87" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>

      <expr_stmt><expr><name pos:line="89" pos:column="7">rc<pos:position pos:line="89" pos:column="9"/></name> <operator pos:line="89" pos:column="10">=<pos:position pos:line="89" pos:column="11"/></operator> <name pos:line="89" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="89" pos:column="26"/></name></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>

      <goto pos:line="91" pos:column="7">goto <name pos:line="91" pos:column="12">quit<pos:position pos:line="91" pos:column="16"/></name>;<pos:position pos:line="91" pos:column="17"/></goto>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <for pos:line="94" pos:column="5">for<control pos:line="94" pos:column="8">(<init><expr><name pos:line="94" pos:column="9">i<pos:position pos:line="94" pos:column="10"/></name> <operator pos:line="94" pos:column="11">=<pos:position pos:line="94" pos:column="12"/></operator> <literal type="number" pos:line="94" pos:column="13">0<pos:position pos:line="94" pos:column="14"/></literal></expr>;<pos:position pos:line="94" pos:column="15"/></init> <condition><expr><name pos:line="94" pos:column="16">i<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">&lt;<pos:position pos:line="94" pos:column="22"/></operator> <name pos:line="94" pos:column="20">count<pos:position pos:line="94" pos:column="25"/></name></expr>;<pos:position pos:line="94" pos:column="26"/></condition> <incr><expr><name pos:line="94" pos:column="27">i<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">++<pos:position pos:line="94" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="31"/></control> <block pos:line="94" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="95" pos:column="7">char<pos:position pos:line="95" pos:column="11"/></name> <modifier pos:line="95" pos:column="12">*<pos:position pos:line="95" pos:column="13"/></modifier></type><name pos:line="95" pos:column="13">unescaped<pos:position pos:line="95" pos:column="22"/></name></decl>;<pos:position pos:line="95" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="97" pos:column="7">LDAP_TRACE<pos:position pos:line="97" pos:column="17"/></name> <argument_list pos:line="97" pos:column="18">(<argument><expr><operator pos:line="97" pos:column="19">(<pos:position pos:line="97" pos:column="20"/></operator><literal type="string" pos:line="97" pos:column="20">"attr[%d] '%s'\n"<pos:position pos:line="97" pos:column="37"/></literal><operator pos:line="97" pos:column="37">,<pos:position pos:line="97" pos:column="38"/></operator> <name pos:line="97" pos:column="39">i<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">,<pos:position pos:line="97" pos:column="41"/></operator> <name><name pos:line="97" pos:column="42">attributes<pos:position pos:line="97" pos:column="52"/></name><index pos:line="97" pos:column="52">[<expr><name pos:line="97" pos:column="53">i<pos:position pos:line="97" pos:column="54"/></name></expr>]<pos:position pos:line="97" pos:column="55"/></index></name><operator pos:line="97" pos:column="55">)<pos:position pos:line="97" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="99" pos:column="7">/* Unescape the attribute */</comment>
      <expr_stmt><expr><name pos:line="100" pos:column="7">unescaped<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">=<pos:position pos:line="100" pos:column="18"/></operator> <call><name pos:line="100" pos:column="19">curl_easy_unescape<pos:position pos:line="100" pos:column="37"/></name><argument_list pos:line="100" pos:column="37">(<argument><expr><name><name pos:line="100" pos:column="38">conn<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">data<pos:position pos:line="100" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="50">attributes<pos:position pos:line="100" pos:column="60"/></name><index pos:line="100" pos:column="60">[<expr><name pos:line="100" pos:column="61">i<pos:position pos:line="100" pos:column="62"/></name></expr>]<pos:position pos:line="100" pos:column="63"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="65">0<pos:position pos:line="100" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="68">NULL<pos:position pos:line="100" pos:column="72"/></name></expr></argument>)<pos:position pos:line="100" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="74"/></expr_stmt>
      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">(<expr><operator pos:line="101" pos:column="10">!<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="11">unescaped<pos:position pos:line="101" pos:column="20"/></name></expr>)<pos:position pos:line="101" pos:column="21"/></condition><then pos:line="101" pos:column="21"> <block pos:line="101" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">Curl_safefree<pos:position pos:line="102" pos:column="22"/></name><argument_list pos:line="102" pos:column="22">(<argument><expr><name pos:line="102" pos:column="23">attributes<pos:position pos:line="102" pos:column="33"/></name></expr></argument>)<pos:position pos:line="102" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name pos:line="104" pos:column="9">rc<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <name pos:line="104" pos:column="14">LDAP_NO_MEMORY<pos:position pos:line="104" pos:column="28"/></name></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>

        <goto pos:line="106" pos:column="9">goto <name pos:line="106" pos:column="14">quit<pos:position pos:line="106" pos:column="18"/></name>;<pos:position pos:line="106" pos:column="19"/></goto>
      }<pos:position pos:line="107" pos:column="8"/></block></then></if>

<cpp:if pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">if<pos:position pos:line="109" pos:column="4"/></cpp:directive> <expr><call><name pos:line="109" pos:column="5">defined<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><name pos:line="109" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="109" pos:column="27"/></name></expr></argument>)<pos:position pos:line="109" pos:column="28"/></argument_list></call></expr></cpp:if>
      <comment type="block" pos:line="110" pos:column="7">/* Convert the unescaped string to a tchar */</comment>
      <expr_stmt><expr><name><name pos:line="111" pos:column="7">ludp<pos:position pos:line="111" pos:column="11"/></name><operator pos:line="111" pos:column="11">-&gt;<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="13">lud_attrs<pos:position pos:line="111" pos:column="22"/></name><index pos:line="111" pos:column="22">[<expr><name pos:line="111" pos:column="23">i<pos:position pos:line="111" pos:column="24"/></name></expr>]<pos:position pos:line="111" pos:column="25"/></index></name> <operator pos:line="111" pos:column="26">=<pos:position pos:line="111" pos:column="27"/></operator> <call><name pos:line="111" pos:column="28">Curl_convert_UTF8_to_tchar<pos:position pos:line="111" pos:column="54"/></name><argument_list pos:line="111" pos:column="54">(<argument><expr><name pos:line="111" pos:column="55">unescaped<pos:position pos:line="111" pos:column="64"/></name></expr></argument>)<pos:position pos:line="111" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="66"/></expr_stmt>

      <comment type="block" pos:line="113" pos:column="7">/* Free the unescaped string as we are done with it */</comment>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">Curl_unicodefree<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">unescaped<pos:position pos:line="114" pos:column="33"/></name></expr></argument>)<pos:position pos:line="114" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>

      <if pos:line="116" pos:column="7">if<condition pos:line="116" pos:column="9">(<expr><operator pos:line="116" pos:column="10">!<pos:position pos:line="116" pos:column="11"/></operator><name><name pos:line="116" pos:column="11">ludp<pos:position pos:line="116" pos:column="15"/></name><operator pos:line="116" pos:column="15">-&gt;<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="17">lud_attrs<pos:position pos:line="116" pos:column="26"/></name><index pos:line="116" pos:column="26">[<expr><name pos:line="116" pos:column="27">i<pos:position pos:line="116" pos:column="28"/></name></expr>]<pos:position pos:line="116" pos:column="29"/></index></name></expr>)<pos:position pos:line="116" pos:column="30"/></condition><then pos:line="116" pos:column="30"> <block pos:line="116" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="117" pos:column="9">Curl_safefree<pos:position pos:line="117" pos:column="22"/></name><argument_list pos:line="117" pos:column="22">(<argument><expr><name pos:line="117" pos:column="23">attributes<pos:position pos:line="117" pos:column="33"/></name></expr></argument>)<pos:position pos:line="117" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name pos:line="119" pos:column="9">rc<pos:position pos:line="119" pos:column="11"/></name> <operator pos:line="119" pos:column="12">=<pos:position pos:line="119" pos:column="13"/></operator> <name pos:line="119" pos:column="14">LDAP_NO_MEMORY<pos:position pos:line="119" pos:column="28"/></name></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt>

        <goto pos:line="121" pos:column="9">goto <name pos:line="121" pos:column="14">quit<pos:position pos:line="121" pos:column="18"/></name>;<pos:position pos:line="121" pos:column="19"/></goto>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if>
<cpp:else pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">else<pos:position pos:line="123" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name><name pos:line="124" pos:column="7">ludp<pos:position pos:line="124" pos:column="11"/></name><operator pos:line="124" pos:column="11">-&gt;<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="13">lud_attrs<pos:position pos:line="124" pos:column="22"/></name><index pos:line="124" pos:column="22">[<expr><name pos:line="124" pos:column="23">i<pos:position pos:line="124" pos:column="24"/></name></expr>]<pos:position pos:line="124" pos:column="25"/></index></name> <operator pos:line="124" pos:column="26">=<pos:position pos:line="124" pos:column="27"/></operator> <name pos:line="124" pos:column="28">unescaped<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name><name pos:line="127" pos:column="7">ludp<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">-&gt;<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="13">lud_attrs_dups<pos:position pos:line="127" pos:column="27"/></name></name><operator pos:line="127" pos:column="27">++<pos:position pos:line="127" pos:column="29"/></operator></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="130" pos:column="5">Curl_safefree<pos:position pos:line="130" pos:column="18"/></name><argument_list pos:line="130" pos:column="18">(<argument><expr><name pos:line="130" pos:column="19">attributes<pos:position pos:line="130" pos:column="29"/></name></expr></argument>)<pos:position pos:line="130" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="133" pos:column="3">p<pos:position pos:line="133" pos:column="4"/></name> <operator pos:line="133" pos:column="5">=<pos:position pos:line="133" pos:column="6"/></operator> <name pos:line="133" pos:column="7">q<pos:position pos:line="133" pos:column="8"/></name></expr>;<pos:position pos:line="133" pos:column="9"/></expr_stmt>
  <if pos:line="134" pos:column="3">if<condition pos:line="134" pos:column="5">(<expr><operator pos:line="134" pos:column="6">!<pos:position pos:line="134" pos:column="7"/></operator><name pos:line="134" pos:column="7">p<pos:position pos:line="134" pos:column="8"/></name></expr>)<pos:position pos:line="134" pos:column="9"/></condition><then pos:line="134" pos:column="9">
    <block type="pseudo"><goto pos:line="135" pos:column="5">goto <name pos:line="135" pos:column="10">quit<pos:position pos:line="135" pos:column="14"/></name>;<pos:position pos:line="135" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="137" pos:column="3">/* Parse the scope. skip "??" */</comment>
  <expr_stmt><expr><name pos:line="138" pos:column="3">q<pos:position pos:line="138" pos:column="4"/></name> <operator pos:line="138" pos:column="5">=<pos:position pos:line="138" pos:column="6"/></operator> <call><name pos:line="138" pos:column="7">strchr<pos:position pos:line="138" pos:column="13"/></name><argument_list pos:line="138" pos:column="13">(<argument><expr><name pos:line="138" pos:column="14">p<pos:position pos:line="138" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="138" pos:column="17">'?'<pos:position pos:line="138" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="22"/></expr_stmt>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">(<expr><name pos:line="139" pos:column="6">q<pos:position pos:line="139" pos:column="7"/></name></expr>)<pos:position pos:line="139" pos:column="8"/></condition><then pos:line="139" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="140" pos:column="5">*<pos:position pos:line="140" pos:column="6"/></operator><name pos:line="140" pos:column="6">q<pos:position pos:line="140" pos:column="7"/></name><operator pos:line="140" pos:column="7">++<pos:position pos:line="140" pos:column="9"/></operator> <operator pos:line="140" pos:column="10">=<pos:position pos:line="140" pos:column="11"/></operator> <literal type="char" pos:line="140" pos:column="12">'\0'<pos:position pos:line="140" pos:column="16"/></literal></expr>;<pos:position pos:line="140" pos:column="17"/></expr_stmt></block></then></if>

  <if pos:line="142" pos:column="3">if<condition pos:line="142" pos:column="5">(<expr><operator pos:line="142" pos:column="6">*<pos:position pos:line="142" pos:column="7"/></operator><name pos:line="142" pos:column="7">p<pos:position pos:line="142" pos:column="8"/></name></expr>)<pos:position pos:line="142" pos:column="9"/></condition><then pos:line="142" pos:column="9"> <block pos:line="142" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="143" pos:column="5">ludp<pos:position pos:line="143" pos:column="9"/></name><operator pos:line="143" pos:column="9">-&gt;<pos:position pos:line="143" pos:column="14"/></operator><name pos:line="143" pos:column="11">lud_scope<pos:position pos:line="143" pos:column="20"/></name></name> <operator pos:line="143" pos:column="21">=<pos:position pos:line="143" pos:column="22"/></operator> <call><name pos:line="143" pos:column="23">str2scope<pos:position pos:line="143" pos:column="32"/></name><argument_list pos:line="143" pos:column="32">(<argument><expr><name pos:line="143" pos:column="33">p<pos:position pos:line="143" pos:column="34"/></name></expr></argument>)<pos:position pos:line="143" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="36"/></expr_stmt>
    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">(<expr><name><name pos:line="144" pos:column="8">ludp<pos:position pos:line="144" pos:column="12"/></name><operator pos:line="144" pos:column="12">-&gt;<pos:position pos:line="144" pos:column="17"/></operator><name pos:line="144" pos:column="14">lud_scope<pos:position pos:line="144" pos:column="23"/></name></name> <operator pos:line="144" pos:column="24">==<pos:position pos:line="144" pos:column="26"/></operator> <operator pos:line="144" pos:column="27">-<pos:position pos:line="144" pos:column="28"/></operator><literal type="number" pos:line="144" pos:column="28">1<pos:position pos:line="144" pos:column="29"/></literal></expr>)<pos:position pos:line="144" pos:column="30"/></condition><then pos:line="144" pos:column="30"> <block pos:line="144" pos:column="31">{
      <expr_stmt><expr><name pos:line="145" pos:column="7">rc<pos:position pos:line="145" pos:column="9"/></name> <operator pos:line="145" pos:column="10">=<pos:position pos:line="145" pos:column="11"/></operator> <name pos:line="145" pos:column="12">LDAP_INVALID_SYNTAX<pos:position pos:line="145" pos:column="31"/></name></expr>;<pos:position pos:line="145" pos:column="32"/></expr_stmt>

      <goto pos:line="147" pos:column="7">goto <name pos:line="147" pos:column="12">quit<pos:position pos:line="147" pos:column="16"/></name>;<pos:position pos:line="147" pos:column="17"/></goto>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">LDAP_TRACE<pos:position pos:line="149" pos:column="15"/></name> <argument_list pos:line="149" pos:column="16">(<argument><expr><operator pos:line="149" pos:column="17">(<pos:position pos:line="149" pos:column="18"/></operator><literal type="string" pos:line="149" pos:column="18">"scope %d\n"<pos:position pos:line="149" pos:column="30"/></literal><operator pos:line="149" pos:column="30">,<pos:position pos:line="149" pos:column="31"/></operator> <name><name pos:line="149" pos:column="32">ludp<pos:position pos:line="149" pos:column="36"/></name><operator pos:line="149" pos:column="36">-&gt;<pos:position pos:line="149" pos:column="41"/></operator><name pos:line="149" pos:column="38">lud_scope<pos:position pos:line="149" pos:column="47"/></name></name><operator pos:line="149" pos:column="47">)<pos:position pos:line="149" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="149" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="152" pos:column="3">p<pos:position pos:line="152" pos:column="4"/></name> <operator pos:line="152" pos:column="5">=<pos:position pos:line="152" pos:column="6"/></operator> <name pos:line="152" pos:column="7">q<pos:position pos:line="152" pos:column="8"/></name></expr>;<pos:position pos:line="152" pos:column="9"/></expr_stmt>
  <if pos:line="153" pos:column="3">if<condition pos:line="153" pos:column="5">(<expr><operator pos:line="153" pos:column="6">!<pos:position pos:line="153" pos:column="7"/></operator><name pos:line="153" pos:column="7">p<pos:position pos:line="153" pos:column="8"/></name></expr>)<pos:position pos:line="153" pos:column="9"/></condition><then pos:line="153" pos:column="9">
    <block type="pseudo"><goto pos:line="154" pos:column="5">goto <name pos:line="154" pos:column="10">quit<pos:position pos:line="154" pos:column="14"/></name>;<pos:position pos:line="154" pos:column="15"/></goto></block></then></if>

  <comment type="block" pos:line="156" pos:column="3">/* Parse the filter */</comment>
  <expr_stmt><expr><name pos:line="157" pos:column="3">q<pos:position pos:line="157" pos:column="4"/></name> <operator pos:line="157" pos:column="5">=<pos:position pos:line="157" pos:column="6"/></operator> <call><name pos:line="157" pos:column="7">strchr<pos:position pos:line="157" pos:column="13"/></name><argument_list pos:line="157" pos:column="13">(<argument><expr><name pos:line="157" pos:column="14">p<pos:position pos:line="157" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="157" pos:column="17">'?'<pos:position pos:line="157" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="22"/></expr_stmt>
  <if pos:line="158" pos:column="3">if<condition pos:line="158" pos:column="5">(<expr><name pos:line="158" pos:column="6">q<pos:position pos:line="158" pos:column="7"/></name></expr>)<pos:position pos:line="158" pos:column="8"/></condition><then pos:line="158" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="159" pos:column="5">*<pos:position pos:line="159" pos:column="6"/></operator><name pos:line="159" pos:column="6">q<pos:position pos:line="159" pos:column="7"/></name><operator pos:line="159" pos:column="7">++<pos:position pos:line="159" pos:column="9"/></operator> <operator pos:line="159" pos:column="10">=<pos:position pos:line="159" pos:column="11"/></operator> <literal type="char" pos:line="159" pos:column="12">'\0'<pos:position pos:line="159" pos:column="16"/></literal></expr>;<pos:position pos:line="159" pos:column="17"/></expr_stmt></block></then></if>

  <if pos:line="161" pos:column="3">if<condition pos:line="161" pos:column="5">(<expr><operator pos:line="161" pos:column="6">*<pos:position pos:line="161" pos:column="7"/></operator><name pos:line="161" pos:column="7">p<pos:position pos:line="161" pos:column="8"/></name></expr>)<pos:position pos:line="161" pos:column="9"/></condition><then pos:line="161" pos:column="9"> <block pos:line="161" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="162" pos:column="5">char<pos:position pos:line="162" pos:column="9"/></name> <modifier pos:line="162" pos:column="10">*<pos:position pos:line="162" pos:column="11"/></modifier></type><name pos:line="162" pos:column="11">filter<pos:position pos:line="162" pos:column="17"/></name> <init pos:line="162" pos:column="18">= <expr><name pos:line="162" pos:column="20">p<pos:position pos:line="162" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="162" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="163" pos:column="5">char<pos:position pos:line="163" pos:column="9"/></name> <modifier pos:line="163" pos:column="10">*<pos:position pos:line="163" pos:column="11"/></modifier></type><name pos:line="163" pos:column="11">unescaped<pos:position pos:line="163" pos:column="20"/></name></decl>;<pos:position pos:line="163" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="165" pos:column="5">LDAP_TRACE<pos:position pos:line="165" pos:column="15"/></name> <argument_list pos:line="165" pos:column="16">(<argument><expr><operator pos:line="165" pos:column="17">(<pos:position pos:line="165" pos:column="18"/></operator><literal type="string" pos:line="165" pos:column="18">"filter '%s'\n"<pos:position pos:line="165" pos:column="33"/></literal><operator pos:line="165" pos:column="33">,<pos:position pos:line="165" pos:column="34"/></operator> <name pos:line="165" pos:column="35">filter<pos:position pos:line="165" pos:column="41"/></name><operator pos:line="165" pos:column="41">)<pos:position pos:line="165" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="165" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="167" pos:column="5">/* Unescape the filter */</comment>
    <expr_stmt><expr><name pos:line="168" pos:column="5">unescaped<pos:position pos:line="168" pos:column="14"/></name> <operator pos:line="168" pos:column="15">=<pos:position pos:line="168" pos:column="16"/></operator> <call><name pos:line="168" pos:column="17">curl_easy_unescape<pos:position pos:line="168" pos:column="35"/></name><argument_list pos:line="168" pos:column="35">(<argument><expr><name><name pos:line="168" pos:column="36">conn<pos:position pos:line="168" pos:column="40"/></name><operator pos:line="168" pos:column="40">-&gt;<pos:position pos:line="168" pos:column="45"/></operator><name pos:line="168" pos:column="42">data<pos:position pos:line="168" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="48">filter<pos:position pos:line="168" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="56">0<pos:position pos:line="168" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="59">NULL<pos:position pos:line="168" pos:column="63"/></name></expr></argument>)<pos:position pos:line="168" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="65"/></expr_stmt>
    <if pos:line="169" pos:column="5">if<condition pos:line="169" pos:column="7">(<expr><operator pos:line="169" pos:column="8">!<pos:position pos:line="169" pos:column="9"/></operator><name pos:line="169" pos:column="9">unescaped<pos:position pos:line="169" pos:column="18"/></name></expr>)<pos:position pos:line="169" pos:column="19"/></condition><then pos:line="169" pos:column="19"> <block pos:line="169" pos:column="20">{
      <expr_stmt><expr><name pos:line="170" pos:column="7">rc<pos:position pos:line="170" pos:column="9"/></name> <operator pos:line="170" pos:column="10">=<pos:position pos:line="170" pos:column="11"/></operator> <name pos:line="170" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="170" pos:column="26"/></name></expr>;<pos:position pos:line="170" pos:column="27"/></expr_stmt>

      <goto pos:line="172" pos:column="7">goto <name pos:line="172" pos:column="12">quit<pos:position pos:line="172" pos:column="16"/></name>;<pos:position pos:line="172" pos:column="17"/></goto>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if>

<cpp:if pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">if<pos:position pos:line="175" pos:column="4"/></cpp:directive> <expr><call><name pos:line="175" pos:column="5">defined<pos:position pos:line="175" pos:column="12"/></name><argument_list pos:line="175" pos:column="12">(<argument><expr><name pos:line="175" pos:column="13">USE_WIN32_LDAP<pos:position pos:line="175" pos:column="27"/></name></expr></argument>)<pos:position pos:line="175" pos:column="28"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="176" pos:column="5">/* Convert the unescaped string to a tchar */</comment>
    <expr_stmt><expr><name><name pos:line="177" pos:column="5">ludp<pos:position pos:line="177" pos:column="9"/></name><operator pos:line="177" pos:column="9">-&gt;<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="11">lud_filter<pos:position pos:line="177" pos:column="21"/></name></name> <operator pos:line="177" pos:column="22">=<pos:position pos:line="177" pos:column="23"/></operator> <call><name pos:line="177" pos:column="24">Curl_convert_UTF8_to_tchar<pos:position pos:line="177" pos:column="50"/></name><argument_list pos:line="177" pos:column="50">(<argument><expr><name pos:line="177" pos:column="51">unescaped<pos:position pos:line="177" pos:column="60"/></name></expr></argument>)<pos:position pos:line="177" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="179" pos:column="5">/* Free the unescaped string as we are done with it */</comment>
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">Curl_unicodefree<pos:position pos:line="180" pos:column="21"/></name><argument_list pos:line="180" pos:column="21">(<argument><expr><name pos:line="180" pos:column="22">unescaped<pos:position pos:line="180" pos:column="31"/></name></expr></argument>)<pos:position pos:line="180" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="33"/></expr_stmt>

    <if pos:line="182" pos:column="5">if<condition pos:line="182" pos:column="7">(<expr><operator pos:line="182" pos:column="8">!<pos:position pos:line="182" pos:column="9"/></operator><name><name pos:line="182" pos:column="9">ludp<pos:position pos:line="182" pos:column="13"/></name><operator pos:line="182" pos:column="13">-&gt;<pos:position pos:line="182" pos:column="18"/></operator><name pos:line="182" pos:column="15">lud_filter<pos:position pos:line="182" pos:column="25"/></name></name></expr>)<pos:position pos:line="182" pos:column="26"/></condition><then pos:line="182" pos:column="26"> <block pos:line="182" pos:column="27">{
      <expr_stmt><expr><name pos:line="183" pos:column="7">rc<pos:position pos:line="183" pos:column="9"/></name> <operator pos:line="183" pos:column="10">=<pos:position pos:line="183" pos:column="11"/></operator> <name pos:line="183" pos:column="12">LDAP_NO_MEMORY<pos:position pos:line="183" pos:column="26"/></name></expr>;<pos:position pos:line="183" pos:column="27"/></expr_stmt>

      <goto pos:line="185" pos:column="7">goto <name pos:line="185" pos:column="12">quit<pos:position pos:line="185" pos:column="16"/></name>;<pos:position pos:line="185" pos:column="17"/></goto>
    }<pos:position pos:line="186" pos:column="6"/></block></then></if>
<cpp:else pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">else<pos:position pos:line="187" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="188" pos:column="5">ludp<pos:position pos:line="188" pos:column="9"/></name><operator pos:line="188" pos:column="9">-&gt;<pos:position pos:line="188" pos:column="14"/></operator><name pos:line="188" pos:column="11">lud_filter<pos:position pos:line="188" pos:column="21"/></name></name> <operator pos:line="188" pos:column="22">=<pos:position pos:line="188" pos:column="23"/></operator> <name pos:line="188" pos:column="24">unescaped<pos:position pos:line="188" pos:column="33"/></name></expr>;<pos:position pos:line="188" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">endif<pos:position pos:line="189" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="190" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="192" pos:column="3">p<pos:position pos:line="192" pos:column="4"/></name> <operator pos:line="192" pos:column="5">=<pos:position pos:line="192" pos:column="6"/></operator> <name pos:line="192" pos:column="7">q<pos:position pos:line="192" pos:column="8"/></name></expr>;<pos:position pos:line="192" pos:column="9"/></expr_stmt>
  <if pos:line="193" pos:column="3">if<condition pos:line="193" pos:column="5">(<expr><name pos:line="193" pos:column="6">p<pos:position pos:line="193" pos:column="7"/></name> <operator pos:line="193" pos:column="8">&amp;&amp;<pos:position pos:line="193" pos:column="18"/></operator> <operator pos:line="193" pos:column="11">!<pos:position pos:line="193" pos:column="12"/></operator><operator pos:line="193" pos:column="12">*<pos:position pos:line="193" pos:column="13"/></operator><name pos:line="193" pos:column="13">p<pos:position pos:line="193" pos:column="14"/></name></expr>)<pos:position pos:line="193" pos:column="15"/></condition><then pos:line="193" pos:column="15"> <block pos:line="193" pos:column="16">{
    <expr_stmt><expr><name pos:line="194" pos:column="5">rc<pos:position pos:line="194" pos:column="7"/></name> <operator pos:line="194" pos:column="8">=<pos:position pos:line="194" pos:column="9"/></operator> <name pos:line="194" pos:column="10">LDAP_INVALID_SYNTAX<pos:position pos:line="194" pos:column="29"/></name></expr>;<pos:position pos:line="194" pos:column="30"/></expr_stmt>

    <goto pos:line="196" pos:column="5">goto <name pos:line="196" pos:column="10">quit<pos:position pos:line="196" pos:column="14"/></name>;<pos:position pos:line="196" pos:column="15"/></goto>
  }<pos:position pos:line="197" pos:column="4"/></block></then></if>

<label><name pos:line="199" pos:column="1">quit<pos:position pos:line="199" pos:column="5"/></name>:<pos:position pos:line="199" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="200" pos:column="3">Curl_safefree<pos:position pos:line="200" pos:column="16"/></name><argument_list pos:line="200" pos:column="16">(<argument><expr><name pos:line="200" pos:column="17">path<pos:position pos:line="200" pos:column="21"/></name></expr></argument>)<pos:position pos:line="200" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="23"/></expr_stmt>

  <return pos:line="202" pos:column="3">return <expr><name pos:line="202" pos:column="10">rc<pos:position pos:line="202" pos:column="12"/></name></expr>;<pos:position pos:line="202" pos:column="13"/></return>
}<pos:position pos:line="203" pos:column="2"/></block></function></unit>

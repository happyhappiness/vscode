<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1189_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_disconnect<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">connectdata<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">conn<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">bool<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">dead_connection<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">imap_conn<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">imapc<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">&amp;<pos:position pos:line="3" pos:column="34"/></operator><name><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">proto<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">.<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">imapc<pos:position pos:line="3" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* We cannot send quit unconditionally. If this connection is stale or
     bad in any way, sending quit and waiting around here will make the
     disconnect wait in vain and cause more problems than we need to. */</comment>

  <comment type="block" pos:line="9" pos:column="3">/* The IMAP session may or may not have been allocated/setup at this
     point! */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">dead_connection<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&amp;&amp;<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="26">imapc<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">pp<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">conn<pos:position pos:line="11" pos:column="40"/></name></name> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name><name pos:line="11" pos:column="44">imapc<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">pp<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">conn<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">bits<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">.<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="65">protoconnstart<pos:position pos:line="11" pos:column="79"/></name></name></expr>)<pos:position pos:line="11" pos:column="80"/></condition><then pos:line="11" pos:column="80">
    <block type="pseudo"><if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><operator pos:line="12" pos:column="8">!<pos:position pos:line="12" pos:column="9"/></operator><call><name pos:line="12" pos:column="9">imap_perform_logout<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">conn<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">void<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">)<pos:position pos:line="13" pos:column="13"/></operator><call><name pos:line="13" pos:column="13">imap_block_statemach<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">conn<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt></block></then></if></block></then></if> <comment type="block" pos:line="13" pos:column="41">/* ignore errors on LOGOUT */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* Disconnect from the server */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">Curl_pp_disconnect<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><operator pos:line="16" pos:column="22">&amp;<pos:position pos:line="16" pos:column="27"/></operator><name><name pos:line="16" pos:column="23">imapc<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">pp<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Cleanup the SASL module */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">Curl_sasl_cleanup<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">conn<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="27">imapc<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">sasl<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">.<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">authused<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Cleanup our connection based variables */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">Curl_safefree<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name><name pos:line="22" pos:column="17">imapc<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">mailbox<pos:position pos:line="22" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">Curl_safefree<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name><name pos:line="23" pos:column="17">imapc<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">mailbox_uidvalidity<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">CURLE_OK<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

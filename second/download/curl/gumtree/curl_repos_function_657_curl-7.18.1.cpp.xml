<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_657_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http_input_auth<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">httpcode<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">header<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list> <comment type="block" pos:line="3" pos:column="51">/* the first non-space */</comment>
<block pos:line="4" pos:column="1">{
  <comment type="block" pos:line="5" pos:column="3">/*
   * This resource requires authentication
   */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">SessionHandle<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name><name pos:line="8" pos:column="32">conn<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">data<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">long<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">availp<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">start<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">auth<pos:position pos:line="12" pos:column="14"/></name></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">authp<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">httpcode<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">407<pos:position pos:line="14" pos:column="21"/></literal></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">start<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">header<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">+<pos:position pos:line="15" pos:column="20"/></operator><call><name pos:line="15" pos:column="20">strlen<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"Proxy-authenticate:"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">availp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">&amp;<pos:position pos:line="16" pos:column="19"/></operator><name><name pos:line="16" pos:column="15">data<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">info<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">.<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">proxyauthavail<pos:position pos:line="16" pos:column="40"/></name></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">authp<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">&amp;<pos:position pos:line="17" pos:column="18"/></operator><name><name pos:line="17" pos:column="14">data<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">state<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">authproxy<pos:position pos:line="17" pos:column="35"/></name></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else <block pos:line="19" pos:column="8">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">start<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">header<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">+<pos:position pos:line="20" pos:column="20"/></operator><call><name pos:line="20" pos:column="20">strlen<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><literal type="string" pos:line="20" pos:column="27">"WWW-Authenticate:"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">availp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">&amp;<pos:position pos:line="21" pos:column="19"/></operator><name><name pos:line="21" pos:column="15">data<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">info<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">httpauthavail<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">authp<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name><name pos:line="22" pos:column="14">data<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">state<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">authhost<pos:position pos:line="22" pos:column="34"/></name></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="25" pos:column="3">/* pass all white spaces */</comment>
  <while pos:line="26" pos:column="3">while<condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">start<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">&amp;&amp;<pos:position pos:line="26" pos:column="26"/></operator> <call><name pos:line="26" pos:column="19">ISSPACE<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><operator pos:line="26" pos:column="27">*<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">start<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="35"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="5">start<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">++<pos:position pos:line="27" pos:column="12"/></operator></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt></block></while>

  <comment type="block" pos:line="29" pos:column="3">/*
   * Here we check if we want the specific single authentication (using ==) and
   * if we do, we initiate usage of it.
   *
   * If the provided authentication is wanted as one out of several accepted
   * types (using &amp;), we OR this authentication type to the authavail
   * variable.
   */</comment>

<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">HAVE_GSSAPI<pos:position pos:line="38" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><call><name pos:line="39" pos:column="6">checkprefix<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="string" pos:line="39" pos:column="18">"GSS-Negotiate"<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">start<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call> <operator pos:line="39" pos:column="42">||<pos:position pos:line="39" pos:column="44"/></operator>
      <call><name pos:line="40" pos:column="7">checkprefix<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="string" pos:line="40" pos:column="19">"Negotiate"<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">start<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block pos:line="40" pos:column="40">{
    <expr_stmt><expr><operator pos:line="41" pos:column="5">*<pos:position pos:line="41" pos:column="6"/></operator><name pos:line="41" pos:column="6">availp<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">|=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="41" pos:column="37"/></name></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">authp<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">avail<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">|=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><name><name pos:line="43" pos:column="8">authp<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">picked<pos:position pos:line="43" pos:column="21"/></name></name> <operator pos:line="43" pos:column="22">==<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="43" pos:column="46"/></name></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47"> <block pos:line="43" pos:column="48">{
      <comment type="block" pos:line="44" pos:column="7">/* if exactly this is wanted, go */</comment>
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">int<pos:position pos:line="45" pos:column="10"/></name></type> <name pos:line="45" pos:column="11">neg<pos:position pos:line="45" pos:column="14"/></name> <init pos:line="45" pos:column="15">= <expr><call><name pos:line="45" pos:column="17">Curl_input_negotiate<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">conn<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><call pos:line="45" pos:column="44">(<name pos:line="45" pos:column="45">bool<pos:position pos:line="45" pos:column="49"/></name>)<argument_list pos:line="45" pos:column="50">(<argument><expr><name pos:line="45" pos:column="51">httpcode<pos:position pos:line="45" pos:column="59"/></name> <operator pos:line="45" pos:column="60">==<pos:position pos:line="45" pos:column="62"/></operator> <literal type="number" pos:line="45" pos:column="63">407<pos:position pos:line="45" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="69">start<pos:position pos:line="45" pos:column="74"/></name></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="76"/></decl_stmt>
      <if pos:line="46" pos:column="7">if<condition pos:line="46" pos:column="9">(<expr><name pos:line="46" pos:column="10">neg<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">==<pos:position pos:line="46" pos:column="16"/></operator> <literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">data<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">req<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">newurl<pos:position pos:line="47" pos:column="25"/></name></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">strdup<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name><name pos:line="47" pos:column="35">data<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">change<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">.<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">url<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">data<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">state<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">authproblem<pos:position pos:line="48" pos:column="32"/></name></name> <operator pos:line="48" pos:column="33">=<pos:position pos:line="48" pos:column="34"/></operator> <operator pos:line="48" pos:column="35">(<pos:position pos:line="48" pos:column="36"/></operator><name><name pos:line="48" pos:column="36">data<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">req<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">newurl<pos:position pos:line="48" pos:column="52"/></name></name> <operator pos:line="48" pos:column="53">==<pos:position pos:line="48" pos:column="55"/></operator> <name pos:line="48" pos:column="56">NULL<pos:position pos:line="48" pos:column="60"/></name><operator pos:line="48" pos:column="60">)<pos:position pos:line="48" pos:column="61"/></operator></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="49" pos:column="8"/></block></then>
      <else pos:line="50" pos:column="7">else <block pos:line="50" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">infof<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">data<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="21">"Authentication problem. Ignoring this.\n"<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">data<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">state<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">.<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">authproblem<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="35">TRUE<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="53" pos:column="8"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
  }<pos:position pos:line="55" pos:column="4"/></block></then>
  <elseif pos:line="56" pos:column="3">else
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">USE_NTLM<pos:position pos:line="58" pos:column="16"/></name></cpp:ifdef>
    <comment type="block" pos:line="59" pos:column="5">/* NTLM support requires the SSL crypto libs */</comment>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><call><name pos:line="60" pos:column="8">checkprefix<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">(<argument><expr><literal type="string" pos:line="60" pos:column="20">"NTLM"<pos:position pos:line="60" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="28">start<pos:position pos:line="60" pos:column="33"/></name></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35"> <block pos:line="60" pos:column="36">{
      <expr_stmt><expr><operator pos:line="61" pos:column="7">*<pos:position pos:line="61" pos:column="8"/></operator><name pos:line="61" pos:column="8">availp<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">|=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">CURLAUTH_NTLM<pos:position pos:line="61" pos:column="31"/></name></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">authp<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">avail<pos:position pos:line="62" pos:column="19"/></name></name> <operator pos:line="62" pos:column="20">|=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">CURLAUTH_NTLM<pos:position pos:line="62" pos:column="36"/></name></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><name><name pos:line="63" pos:column="10">authp<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">-&gt;<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="17">picked<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">==<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">CURLAUTH_NTLM<pos:position pos:line="63" pos:column="40"/></name></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41"> <block pos:line="63" pos:column="42">{
        <comment type="block" pos:line="64" pos:column="9">/* NTLM authentication is picked and activated */</comment>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">CURLntlm<pos:position pos:line="65" pos:column="17"/></name></type> <name pos:line="65" pos:column="18">ntlm<pos:position pos:line="65" pos:column="22"/></name> <init pos:line="65" pos:column="23">=
          <expr><call><name pos:line="66" pos:column="11">Curl_input_ntlm<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">conn<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><call pos:line="66" pos:column="33">(<name pos:line="66" pos:column="34">bool<pos:position pos:line="66" pos:column="38"/></name>)<argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">httpcode<pos:position pos:line="66" pos:column="48"/></name> <operator pos:line="66" pos:column="49">==<pos:position pos:line="66" pos:column="51"/></operator> <literal type="number" pos:line="66" pos:column="52">407<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="58">start<pos:position pos:line="66" pos:column="63"/></name></expr></argument>)<pos:position pos:line="66" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="65"/></decl_stmt>

        <if pos:line="68" pos:column="9">if<condition pos:line="68" pos:column="11">(<expr><name pos:line="68" pos:column="12">CURLNTLM_BAD<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">!=<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="28">ntlm<pos:position pos:line="68" pos:column="32"/></name></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="11">data<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">state<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">.<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="23">authproblem<pos:position pos:line="69" pos:column="34"/></name></name> <operator pos:line="69" pos:column="35">=<pos:position pos:line="69" pos:column="36"/></operator> <name pos:line="69" pos:column="37">FALSE<pos:position pos:line="69" pos:column="42"/></name></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt></block></then>
        <else pos:line="70" pos:column="9">else <block pos:line="70" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="71" pos:column="11">infof<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">data<pos:position pos:line="71" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="23">"Authentication problem. Ignoring this.\n"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="72" pos:column="11">data<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">state<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">.<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="23">authproblem<pos:position pos:line="72" pos:column="34"/></name></name> <operator pos:line="72" pos:column="35">=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">TRUE<pos:position pos:line="72" pos:column="41"/></name></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></else></if>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="76" pos:column="5">else
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef<pos:position pos:line="78" pos:column="8"/></cpp:directive> <name pos:line="78" pos:column="9">CURL_DISABLE_CRYPTO_AUTH<pos:position pos:line="78" pos:column="33"/></name></cpp:ifndef>
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">(<expr><call><name pos:line="79" pos:column="10">checkprefix<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><literal type="string" pos:line="79" pos:column="22">"Digest"<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="32">start<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="39"/></condition><then pos:line="79" pos:column="39"> <block pos:line="79" pos:column="40">{
        <if pos:line="80" pos:column="9">if<condition pos:line="80" pos:column="11">(<expr><operator pos:line="80" pos:column="12">(<pos:position pos:line="80" pos:column="13"/></operator><name><name pos:line="80" pos:column="13">authp<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">-&gt;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="20">avail<pos:position pos:line="80" pos:column="25"/></name></name> <operator pos:line="80" pos:column="26">&amp;<pos:position pos:line="80" pos:column="31"/></operator> <name pos:line="80" pos:column="28">CURLAUTH_DIGEST<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">)<pos:position pos:line="80" pos:column="44"/></operator> <operator pos:line="80" pos:column="45">!=<pos:position pos:line="80" pos:column="47"/></operator> <literal type="number" pos:line="80" pos:column="48">0<pos:position pos:line="80" pos:column="49"/></literal></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50"> <block pos:line="80" pos:column="51">{
          <expr_stmt><expr><call><name pos:line="81" pos:column="11">infof<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name pos:line="81" pos:column="17">data<pos:position pos:line="81" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="23">"Ignoring duplicate digest auth header.\n"<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></then>
        <else pos:line="83" pos:column="9">else <block pos:line="83" pos:column="14">{
          <decl_stmt><decl><type><name pos:line="84" pos:column="11">CURLdigest<pos:position pos:line="84" pos:column="21"/></name></type> <name pos:line="84" pos:column="22">dig<pos:position pos:line="84" pos:column="25"/></name></decl>;<pos:position pos:line="84" pos:column="26"/></decl_stmt>
          <expr_stmt><expr><operator pos:line="85" pos:column="11">*<pos:position pos:line="85" pos:column="12"/></operator><name pos:line="85" pos:column="12">availp<pos:position pos:line="85" pos:column="18"/></name> <operator pos:line="85" pos:column="19">|=<pos:position pos:line="85" pos:column="21"/></operator> <name pos:line="85" pos:column="22">CURLAUTH_DIGEST<pos:position pos:line="85" pos:column="37"/></name></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="86" pos:column="11">authp<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">avail<pos:position pos:line="86" pos:column="23"/></name></name> <operator pos:line="86" pos:column="24">|=<pos:position pos:line="86" pos:column="26"/></operator> <name pos:line="86" pos:column="27">CURLAUTH_DIGEST<pos:position pos:line="86" pos:column="42"/></name></expr>;<pos:position pos:line="86" pos:column="43"/></expr_stmt>

          <comment type="block" pos:line="88" pos:column="11">/* We call this function on input Digest headers even if Digest
           * authentication isn't activated yet, as we need to store the
           * incoming data from this header in case we are gonna use Digest. */</comment>
          <expr_stmt><expr><name pos:line="91" pos:column="11">dig<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <call><name pos:line="91" pos:column="17">Curl_input_digest<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">conn<pos:position pos:line="91" pos:column="39"/></name></expr></argument>, <argument><expr><call pos:line="91" pos:column="41">(<name pos:line="91" pos:column="42">bool<pos:position pos:line="91" pos:column="46"/></name>)<argument_list pos:line="91" pos:column="47">(<argument><expr><name pos:line="91" pos:column="48">httpcode<pos:position pos:line="91" pos:column="56"/></name> <operator pos:line="91" pos:column="57">==<pos:position pos:line="91" pos:column="59"/></operator> <literal type="number" pos:line="91" pos:column="60">407<pos:position pos:line="91" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="66">start<pos:position pos:line="91" pos:column="71"/></name></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="73"/></expr_stmt>

          <if pos:line="93" pos:column="11">if<condition pos:line="93" pos:column="13">(<expr><name pos:line="93" pos:column="14">CURLDIGEST_FINE<pos:position pos:line="93" pos:column="29"/></name> <operator pos:line="93" pos:column="30">!=<pos:position pos:line="93" pos:column="32"/></operator> <name pos:line="93" pos:column="33">dig<pos:position pos:line="93" pos:column="36"/></name></expr>)<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37"> <block pos:line="93" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">infof<pos:position pos:line="94" pos:column="18"/></name><argument_list pos:line="94" pos:column="18">(<argument><expr><name pos:line="94" pos:column="19">data<pos:position pos:line="94" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="25">"Authentication problem. Ignoring this.\n"<pos:position pos:line="94" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="95" pos:column="13">data<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">state<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">.<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">authproblem<pos:position pos:line="95" pos:column="36"/></name></name> <operator pos:line="95" pos:column="37">=<pos:position pos:line="95" pos:column="38"/></operator> <name pos:line="95" pos:column="39">TRUE<pos:position pos:line="95" pos:column="43"/></name></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt>
          }<pos:position pos:line="96" pos:column="12"/></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></else></if>
      }<pos:position pos:line="98" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="99" pos:column="7">else
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">(<expr><call><name pos:line="101" pos:column="10">checkprefix<pos:position pos:line="101" pos:column="21"/></name><argument_list pos:line="101" pos:column="21">(<argument><expr><literal type="string" pos:line="101" pos:column="22">"Basic"<pos:position pos:line="101" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="31">start<pos:position pos:line="101" pos:column="36"/></name></expr></argument>)<pos:position pos:line="101" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="38"/></condition><then pos:line="101" pos:column="38"> <block pos:line="101" pos:column="39">{
        <expr_stmt><expr><operator pos:line="102" pos:column="9">*<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">availp<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">|=<pos:position pos:line="102" pos:column="19"/></operator> <name pos:line="102" pos:column="20">CURLAUTH_BASIC<pos:position pos:line="102" pos:column="34"/></name></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">authp<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">avail<pos:position pos:line="103" pos:column="21"/></name></name> <operator pos:line="103" pos:column="22">|=<pos:position pos:line="103" pos:column="24"/></operator> <name pos:line="103" pos:column="25">CURLAUTH_BASIC<pos:position pos:line="103" pos:column="39"/></name></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>
        <if pos:line="104" pos:column="9">if<condition pos:line="104" pos:column="11">(<expr><name><name pos:line="104" pos:column="12">authp<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">-&gt;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="19">picked<pos:position pos:line="104" pos:column="25"/></name></name> <operator pos:line="104" pos:column="26">==<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="29">CURLAUTH_BASIC<pos:position pos:line="104" pos:column="43"/></name></expr>)<pos:position pos:line="104" pos:column="44"/></condition><then pos:line="104" pos:column="44"> <block pos:line="104" pos:column="45">{
          <comment type="block" pos:line="105" pos:column="11">/* We asked for Basic authentication but got a 40X back
             anyway, which basicly means our name+password isn't
             valid. */</comment>
          <expr_stmt><expr><name><name pos:line="108" pos:column="11">authp<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">-&gt;<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="18">avail<pos:position pos:line="108" pos:column="23"/></name></name> <operator pos:line="108" pos:column="24">=<pos:position pos:line="108" pos:column="25"/></operator> <name pos:line="108" pos:column="26">CURLAUTH_NONE<pos:position pos:line="108" pos:column="39"/></name></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="109" pos:column="11">infof<pos:position pos:line="109" pos:column="16"/></name><argument_list pos:line="109" pos:column="16">(<argument><expr><name pos:line="109" pos:column="17">data<pos:position pos:line="109" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="23">"Authentication problem. Ignoring this.\n"<pos:position pos:line="109" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="67"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="110" pos:column="11">data<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">state<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">.<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="23">authproblem<pos:position pos:line="110" pos:column="34"/></name></name> <operator pos:line="110" pos:column="35">=<pos:position pos:line="110" pos:column="36"/></operator> <name pos:line="110" pos:column="37">TRUE<pos:position pos:line="110" pos:column="41"/></name></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>
      }<pos:position pos:line="112" pos:column="8"/></block></then></if></elseif></if>

  <return pos:line="114" pos:column="3">return <expr><name pos:line="114" pos:column="10">CURLE_OK<pos:position pos:line="114" pos:column="18"/></name></expr>;<pos:position pos:line="114" pos:column="19"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

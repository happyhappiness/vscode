<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1567_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">connect_init<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">bool<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">reinit<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">http_connect_state<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">s<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">reinit<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14"> <block pos:line="4" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">DEBUGASSERT<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><operator pos:line="5" pos:column="17">!<pos:position pos:line="5" pos:column="18"/></operator><name><name pos:line="5" pos:column="18">conn<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">connect_state<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">s<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">calloc<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="19">sizeof<argument_list pos:line="6" pos:column="25">(<argument><expr pos:line="6" pos:column="26">struct <name pos:line="6" pos:column="33">http_connect_state<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">s<pos:position pos:line="7" pos:column="10"/></name></expr>)<pos:position pos:line="7" pos:column="11"/></condition><then pos:line="7" pos:column="11">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">infof<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">conn<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"allocate connect buffer!\n"<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">conn<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">connect_state<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">s<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then>
  <else pos:line="12" pos:column="3">else <block pos:line="12" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">DEBUGASSERT<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">conn<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">connect_state<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">s<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name><name pos:line="14" pos:column="9">conn<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">connect_state<pos:position pos:line="14" pos:column="28"/></name></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">s<pos:position pos:line="16" pos:column="4"/></name><operator pos:line="16" pos:column="4">-&gt;<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="6">tunnel_state<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">TUNNEL_INIT<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">s<pos:position pos:line="17" pos:column="4"/></name><operator pos:line="17" pos:column="4">-&gt;<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="6">keepon<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">TRUE<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">s<pos:position pos:line="18" pos:column="4"/></name><operator pos:line="18" pos:column="4">-&gt;<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="6">line_start<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">s<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">connect_buffer<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">s<pos:position pos:line="19" pos:column="4"/></name><operator pos:line="19" pos:column="4">-&gt;<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="6">ptr<pos:position pos:line="19" pos:column="9"/></name></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name><name pos:line="19" pos:column="12">s<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">line_start<pos:position pos:line="19" pos:column="25"/></name></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">s<pos:position pos:line="20" pos:column="4"/></name><operator pos:line="20" pos:column="4">-&gt;<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="6">cl<pos:position pos:line="20" pos:column="8"/></name></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">CURLE_OK<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

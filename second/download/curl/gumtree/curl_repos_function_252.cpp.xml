<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_252.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">Curl_Transfer<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">struct<pos:position pos:line="2" pos:column="21"/></name> <name pos:line="2" pos:column="22">connectdata<pos:position pos:line="2" pos:column="33"/></name></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">c_conn<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="43">/* connection data */</comment>
              <parameter><decl><type><name pos:line="3" pos:column="15">int<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">sockindex<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>,       <comment type="block" pos:line="3" pos:column="36">/* socket index to read from or -1 */</comment>
              <parameter><decl><type><name pos:line="4" pos:column="15">curl_off_t<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">size<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>,     <comment type="block" pos:line="4" pos:column="36">/* -1 if unknown at this point */</comment>
              <parameter><decl><type><name pos:line="5" pos:column="15">bool<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">getheader<pos:position pos:line="5" pos:column="29"/></name></decl></parameter>,      <comment type="block" pos:line="5" pos:column="36">/* TRUE if header parsing is wanted */</comment>
              <parameter><decl><type><name pos:line="6" pos:column="15">curl_off_t<pos:position pos:line="6" pos:column="25"/></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">bytecountp<pos:position pos:line="6" pos:column="37"/></name></decl></parameter>, <comment type="block" pos:line="6" pos:column="39">/* return number of bytes read or NULL */</comment>
              <parameter><decl><type><name pos:line="7" pos:column="15">int<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">writesockindex<pos:position pos:line="7" pos:column="33"/></name></decl></parameter>,  <comment type="block" pos:line="7" pos:column="36">/* socket index to write to, it may very
                                      well be the same we read from. -1
                                      disables */</comment>
              <parameter><decl><type><name pos:line="10" pos:column="15">curl_off_t<pos:position pos:line="10" pos:column="25"/></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">writecountp<pos:position pos:line="10" pos:column="38"/></name></decl></parameter> <comment type="block" pos:line="10" pos:column="39">/* return number of bytes written or
                                       NULL */</comment>
              )<pos:position pos:line="12" pos:column="16"/></parameter_list>
<block pos:line="13" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">connectdata<pos:position pos:line="14" pos:column="21"/></name></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">conn<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator>struct <name pos:line="14" pos:column="38">connectdata<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">*<pos:position pos:line="14" pos:column="51"/></operator><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">c_conn<pos:position pos:line="14" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="59"/></decl_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">conn<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_BAD_FUNCTION_ARGUMENT<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">curlassert<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">sockindex<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&lt;=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="28">1<pos:position pos:line="18" pos:column="29"/></literal><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="34">(<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">sockindex<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">&gt;=<pos:position pos:line="18" pos:column="50"/></operator> <operator pos:line="18" pos:column="48">-<pos:position pos:line="18" pos:column="49"/></operator><literal type="number" pos:line="18" pos:column="49">1<pos:position pos:line="18" pos:column="50"/></literal><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* now copy all input parameters */</comment>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">conn<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">sockfd<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="21" pos:column="18">sockindex<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator><operator pos:line="21" pos:column="29">-<pos:position pos:line="21" pos:column="30"/></operator><literal type="number" pos:line="21" pos:column="30">1<pos:position pos:line="21" pos:column="31"/></literal></expr>?<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
    <expr><name pos:line="22" pos:column="5">CURL_SOCKET_BAD<pos:position pos:line="22" pos:column="20"/></name></expr></then><else pos:line="22" pos:column="20">:<expr><name><name pos:line="22" pos:column="21">conn<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">sock<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><name pos:line="22" pos:column="32">sockindex<pos:position pos:line="22" pos:column="41"/></name></expr>]<pos:position pos:line="22" pos:column="42"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">conn<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">size<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">size<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">conn<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">bits<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">getheader<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">getheader<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">conn<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">bytecountp<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">bytecountp<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">conn<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">writesockfd<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="26" pos:column="23">writesockindex<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">==<pos:position pos:line="26" pos:column="39"/></operator><operator pos:line="26" pos:column="39">-<pos:position pos:line="26" pos:column="40"/></operator><literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr>?<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
    <expr><name pos:line="27" pos:column="5">CURL_SOCKET_BAD<pos:position pos:line="27" pos:column="20"/></name></expr></then><else pos:line="27" pos:column="20">:<expr><name><name pos:line="27" pos:column="21">conn<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">sock<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><name pos:line="27" pos:column="32">writesockindex<pos:position pos:line="27" pos:column="46"/></name></expr>]<pos:position pos:line="27" pos:column="47"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">conn<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">writebytecountp<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">writecountp<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>

  <return pos:line="30" pos:column="3">return <expr><name pos:line="30" pos:column="10">CURLE_OK<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>

}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_521_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">easyret<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLMcode<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">multiret<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLSHcode<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">shareret<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">URL<pos:position pos:line="7" pos:column="12"/></name></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">curl_easy_strerror<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">INT_MAX<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">curl_multi_strerror<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">INT_MAX<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">curl_share_strerror<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">INT_MAX<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">curl_easy_strerror<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">-<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">INT_MAX<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">curl_multi_strerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">-<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">INT_MAX<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curl_share_strerror<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">-<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">INT_MAX<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  <for pos:line="15" pos:column="3">for<control pos:line="15" pos:column="6">(<init><expr><name pos:line="15" pos:column="7">easyret<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">CURLE_OK<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></init> <condition><expr><name pos:line="15" pos:column="27">easyret<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">&lt;=<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="38">CURL_LAST<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></condition> <incr><expr><name pos:line="15" pos:column="49">easyret<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">++<pos:position pos:line="15" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="59"/></control> <block pos:line="15" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">printf<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"e%d: %s\n"<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="25">(<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">int<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">easyret<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="39">curl_easy_strerror<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">easyret<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></for>
  <for pos:line="18" pos:column="3">for<control pos:line="18" pos:column="6">(<init><expr><name pos:line="18" pos:column="7">multiret<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="18" pos:column="42"/></name></expr>;<pos:position pos:line="18" pos:column="43"/></init> <condition><expr><name pos:line="18" pos:column="44">multiret<pos:position pos:line="18" pos:column="52"/></name> <operator pos:line="18" pos:column="53">&lt;=<pos:position pos:line="18" pos:column="58"/></operator> <name pos:line="18" pos:column="56">CURLM_LAST<pos:position pos:line="18" pos:column="66"/></name></expr>;<pos:position pos:line="18" pos:column="67"/></condition>
      <incr><expr><name pos:line="19" pos:column="7">multiret<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">++<pos:position pos:line="19" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="18"/></control> <block pos:line="19" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">printf<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"m%d: %s\n"<pos:position pos:line="20" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">int<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">multiret<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="40">curl_multi_strerror<pos:position pos:line="20" pos:column="59"/></name><argument_list pos:line="20" pos:column="59">(<argument><expr><name pos:line="20" pos:column="60">multiret<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>
  <for pos:line="22" pos:column="3">for<control pos:line="22" pos:column="6">(<init><expr><name pos:line="22" pos:column="7">shareret<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">CURLSHE_OK<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></init> <condition><expr><name pos:line="22" pos:column="30">shareret<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">&lt;=<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="42">CURLSHE_LAST<pos:position pos:line="22" pos:column="54"/></name></expr>;<pos:position pos:line="22" pos:column="55"/></condition> <incr><expr><name pos:line="22" pos:column="56">shareret<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">++<pos:position pos:line="22" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="67"/></control> <block pos:line="22" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">printf<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="string" pos:line="23" pos:column="12">"s%d: %s\n"<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">int<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">shareret<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="40">curl_share_strerror<pos:position pos:line="23" pos:column="59"/></name><argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">shareret<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></for>

  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">int<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">res<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

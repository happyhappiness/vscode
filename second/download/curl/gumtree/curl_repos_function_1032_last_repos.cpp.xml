<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1032_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">Curl_inet_ntop<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">af<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">src<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">buf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">size<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <switch pos:line="3" pos:column="3">switch<condition pos:line="3" pos:column="9">(<expr><name pos:line="3" pos:column="10">af<pos:position pos:line="3" pos:column="12"/></name></expr>)<pos:position pos:line="3" pos:column="13"/></condition> <block pos:line="3" pos:column="14">{
  <case pos:line="4" pos:column="3">case <expr><name pos:line="4" pos:column="8">AF_INET<pos:position pos:line="4" pos:column="15"/></name></expr>:<pos:position pos:line="4" pos:column="16"/></case>
    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">inet_ntop4<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><specifier pos:line="5" pos:column="24">const<pos:position pos:line="5" pos:column="29"/></specifier> <name pos:line="5" pos:column="30">unsigned<pos:position pos:line="5" pos:column="38"/></name> <name pos:line="5" pos:column="39">char<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">src<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="51">buf<pos:position pos:line="5" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">size<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></return>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">ENABLE_IPV6<pos:position pos:line="6" pos:column="19"/></name></cpp:ifdef>
  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">AF_INET6<pos:position pos:line="7" pos:column="16"/></name></expr>:<pos:position pos:line="7" pos:column="17"/></case>
    <return pos:line="8" pos:column="5">return <expr><call><name pos:line="8" pos:column="12">inet_ntop6<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><specifier pos:line="8" pos:column="24">const<pos:position pos:line="8" pos:column="29"/></specifier> <name pos:line="8" pos:column="30">unsigned<pos:position pos:line="8" pos:column="38"/></name> <name pos:line="8" pos:column="39">char<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">*<pos:position pos:line="8" pos:column="45"/></operator><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">src<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">buf<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">size<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></return>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
  <default pos:line="10" pos:column="3">default:<pos:position pos:line="10" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="11" pos:column="5">errno<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">EAFNOSUPPORT<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></switch>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

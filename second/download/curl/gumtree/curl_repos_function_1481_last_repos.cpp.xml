<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1481_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_noproxy<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">no_proxy<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* no_proxy=domain1.dom,host.domain2.dom
   *   (a comma-separated list of hosts which should
   *   not be proxied, or an asterisk to override
   *   all proxy variables)
   */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">tok_start<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">tok_end<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">separator<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><literal type="string" pos:line="10" pos:column="27">", "<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">no_proxy_len<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">namelen<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">endptr<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">no_proxy<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">&amp;&amp;<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="18">no_proxy<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr>]<pos:position pos:line="15" pos:column="29"/></index></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><call><name pos:line="16" pos:column="8">strcasecompare<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"*"<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">no_proxy<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <block pos:line="16" pos:column="39">{
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">TRUE<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* NO_PROXY was specified and it wasn't just an asterisk */</comment>

    <expr_stmt><expr><name pos:line="22" pos:column="5">no_proxy_len<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">strlen<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">no_proxy<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">endptr<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">strchr<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">name<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="27">':'<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">endptr<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">namelen<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">endptr<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">-<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">name<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="26" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">namelen<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">strlen<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">name<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt></block></else></if>

    <for pos:line="29" pos:column="5">for<control pos:line="29" pos:column="8">(<init><expr><name pos:line="29" pos:column="9">tok_start<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal></expr>;<pos:position pos:line="29" pos:column="23"/></init> <condition><expr><name pos:line="29" pos:column="24">tok_start<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">&lt;<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="36">no_proxy_len<pos:position pos:line="29" pos:column="48"/></name></expr>;<pos:position pos:line="29" pos:column="49"/></condition> <incr><expr><name pos:line="29" pos:column="50">tok_start<pos:position pos:line="29" pos:column="59"/></name> <operator pos:line="29" pos:column="60">=<pos:position pos:line="29" pos:column="61"/></operator> <name pos:line="29" pos:column="62">tok_end<pos:position pos:line="29" pos:column="69"/></name> <operator pos:line="29" pos:column="70">+<pos:position pos:line="29" pos:column="71"/></operator> <literal type="number" pos:line="29" pos:column="72">1<pos:position pos:line="29" pos:column="73"/></literal></expr></incr>)<pos:position pos:line="29" pos:column="74"/></control> <block pos:line="29" pos:column="75">{
      <while pos:line="30" pos:column="7">while<condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">tok_start<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="25">no_proxy_len<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">&amp;&amp;<pos:position pos:line="30" pos:column="48"/></operator>
            <call><name pos:line="31" pos:column="13">strchr<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">separator<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="31">no_proxy<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><name pos:line="31" pos:column="40">tok_start<pos:position pos:line="31" pos:column="49"/></name></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call> <operator pos:line="31" pos:column="52">!=<pos:position pos:line="31" pos:column="54"/></operator> <name pos:line="31" pos:column="55">NULL<pos:position pos:line="31" pos:column="59"/></name></expr>)<pos:position pos:line="31" pos:column="60"/></condition> <block pos:line="31" pos:column="61">{
        <comment type="block" pos:line="32" pos:column="9">/* Look for the beginning of the token. */</comment>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">tok_start<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></while>

      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name pos:line="36" pos:column="10">tok_start<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">==<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">no_proxy_len<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
        <block type="pseudo"><break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="37" pos:column="16">/* It was all trailing separator chars, no more tokens. */</comment>

      <for pos:line="39" pos:column="7">for<control pos:line="39" pos:column="10">(<init><expr><name pos:line="39" pos:column="11">tok_end<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">tok_start<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></init> <condition><expr><name pos:line="39" pos:column="32">tok_end<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">&lt;<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="42">no_proxy_len<pos:position pos:line="39" pos:column="54"/></name> <operator pos:line="39" pos:column="55">&amp;&amp;<pos:position pos:line="39" pos:column="65"/></operator>
            <call><name pos:line="40" pos:column="13">strchr<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">separator<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="31">no_proxy<pos:position pos:line="40" pos:column="39"/></name><index pos:line="40" pos:column="39">[<expr><name pos:line="40" pos:column="40">tok_end<pos:position pos:line="40" pos:column="47"/></name></expr>]<pos:position pos:line="40" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call> <operator pos:line="40" pos:column="50">==<pos:position pos:line="40" pos:column="52"/></operator> <name pos:line="40" pos:column="53">NULL<pos:position pos:line="40" pos:column="57"/></name></expr>;<pos:position pos:line="40" pos:column="58"/></condition> <incr><expr><operator pos:line="40" pos:column="59">++<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="61">tok_end<pos:position pos:line="40" pos:column="68"/></name></expr></incr>)<pos:position pos:line="40" pos:column="69"/></control>
        <comment type="block" pos:line="41" pos:column="9">/* Look for the end of the token. */</comment>
        <block type="pseudo"><empty_stmt pos:line="42" pos:column="9">;<pos:position pos:line="42" pos:column="10"/></empty_stmt></block></for>

      <comment type="block" pos:line="44" pos:column="7">/* To match previous behaviour, where it was necessary to specify
       * ".local.com" to prevent matching "notlocal.com", we will leave
       * the '.' off.
       */</comment>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><name><name pos:line="48" pos:column="10">no_proxy<pos:position pos:line="48" pos:column="18"/></name><index pos:line="48" pos:column="18">[<expr><name pos:line="48" pos:column="19">tok_start<pos:position pos:line="48" pos:column="28"/></name></expr>]<pos:position pos:line="48" pos:column="29"/></index></name> <operator pos:line="48" pos:column="30">==<pos:position pos:line="48" pos:column="32"/></operator> <literal type="char" pos:line="48" pos:column="33">'.'<pos:position pos:line="48" pos:column="36"/></literal></expr>)<pos:position pos:line="48" pos:column="37"/></condition><then pos:line="48" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="9">++<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">tok_start<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt></block></then></if>

      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">tok_end<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">-<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">tok_start<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">)<pos:position pos:line="51" pos:column="31"/></operator> <operator pos:line="51" pos:column="32">&lt;=<pos:position pos:line="51" pos:column="37"/></operator> <name pos:line="51" pos:column="35">namelen<pos:position pos:line="51" pos:column="42"/></name></expr>)<pos:position pos:line="51" pos:column="43"/></condition><then pos:line="51" pos:column="43"> <block pos:line="51" pos:column="44">{
        <comment type="block" pos:line="52" pos:column="9">/* Match the last part of the name to the domain we are checking. */</comment>
        <decl_stmt><decl><type><specifier pos:line="53" pos:column="9">const<pos:position pos:line="53" pos:column="14"/></specifier> <name pos:line="53" pos:column="15">char<pos:position pos:line="53" pos:column="19"/></name> <modifier pos:line="53" pos:column="20">*<pos:position pos:line="53" pos:column="21"/></modifier></type><name pos:line="53" pos:column="21">checkn<pos:position pos:line="53" pos:column="27"/></name> <init pos:line="53" pos:column="28">= <expr><name pos:line="53" pos:column="30">name<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">+<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">namelen<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">-<pos:position pos:line="53" pos:column="46"/></operator> <operator pos:line="53" pos:column="47">(<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">tok_end<pos:position pos:line="53" pos:column="55"/></name> <operator pos:line="53" pos:column="56">-<pos:position pos:line="53" pos:column="57"/></operator> <name pos:line="53" pos:column="58">tok_start<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">)<pos:position pos:line="53" pos:column="68"/></operator></expr></init></decl>;<pos:position pos:line="53" pos:column="69"/></decl_stmt>
        <if pos:line="54" pos:column="9">if<condition pos:line="54" pos:column="11">(<expr><call><name pos:line="54" pos:column="12">strncasecompare<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">no_proxy<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">+<pos:position pos:line="54" pos:column="38"/></operator> <name pos:line="54" pos:column="39">tok_start<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">checkn<pos:position pos:line="54" pos:column="56"/></name></expr></argument>,
                           <argument><expr><name pos:line="55" pos:column="28">tok_end<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">-<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">tok_start<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49"> <block pos:line="55" pos:column="50">{
          <if pos:line="56" pos:column="11">if<condition pos:line="56" pos:column="13">(<expr><operator pos:line="56" pos:column="14">(<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">tok_end<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">-<pos:position pos:line="56" pos:column="24"/></operator> <name pos:line="56" pos:column="25">tok_start<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">)<pos:position pos:line="56" pos:column="35"/></operator> <operator pos:line="56" pos:column="36">==<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">namelen<pos:position pos:line="56" pos:column="46"/></name> <operator pos:line="56" pos:column="47">||<pos:position pos:line="56" pos:column="49"/></operator> <operator pos:line="56" pos:column="50">*<pos:position pos:line="56" pos:column="51"/></operator><operator pos:line="56" pos:column="51">(<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="52">checkn<pos:position pos:line="56" pos:column="58"/></name> <operator pos:line="56" pos:column="59">-<pos:position pos:line="56" pos:column="60"/></operator> <literal type="number" pos:line="56" pos:column="61">1<pos:position pos:line="56" pos:column="62"/></literal><operator pos:line="56" pos:column="62">)<pos:position pos:line="56" pos:column="63"/></operator> <operator pos:line="56" pos:column="64">==<pos:position pos:line="56" pos:column="66"/></operator> <literal type="char" pos:line="56" pos:column="67">'.'<pos:position pos:line="56" pos:column="70"/></literal></expr>)<pos:position pos:line="56" pos:column="71"/></condition><then pos:line="56" pos:column="71"> <block pos:line="56" pos:column="72">{
            <comment type="block" pos:line="57" pos:column="13">/* We either have an exact match, or the previous character is a .
             * so it is within the same domain, so no proxy for this host.
             */</comment>
            <return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">TRUE<pos:position pos:line="60" pos:column="24"/></name></expr>;<pos:position pos:line="60" pos:column="25"/></return>
          }<pos:position pos:line="61" pos:column="12"/></block></then></if>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if> <comment type="block" pos:line="63" pos:column="9">/* if((tok_end - tok_start) &lt;= namelen) */</comment>
    }<pos:position pos:line="64" pos:column="6"/></block></for> <comment type="block" pos:line="64" pos:column="7">/* for(tok_start = 0; tok_start &lt; no_proxy_len;
         tok_start = tok_end + 1) */</comment>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if> <comment type="block" pos:line="66" pos:column="5">/* NO_PROXY was specified and it wasn't just an asterisk */</comment>

  <return pos:line="68" pos:column="3">return <expr><name pos:line="68" pos:column="10">FALSE<pos:position pos:line="68" pos:column="15"/></name></expr>;<pos:position pos:line="68" pos:column="16"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

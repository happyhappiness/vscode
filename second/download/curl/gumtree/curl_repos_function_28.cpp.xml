<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_28.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">my_get_token<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">line<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">save<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">NULL<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">first<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">last<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">retval<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">size<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">NULL<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">line<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">line<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">save<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">NULL<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">line<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><literal type="char" pos:line="14" pos:column="11">'\0'<pos:position pos:line="14" pos:column="15"/></literal> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">line<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">&amp;&amp;<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="29">(<pos:position pos:line="14" pos:column="30"/></operator><call><name pos:line="14" pos:column="30">isspace<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">line<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator></expr>)<pos:position pos:line="14" pos:column="46"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">line<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator></expr>;<pos:position pos:line="15" pos:column="12"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="16" pos:column="3">first<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <name pos:line="16" pos:column="11">line<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
  <while pos:line="17" pos:column="3">while <condition pos:line="17" pos:column="9">(<expr><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><literal type="char" pos:line="17" pos:column="11">'\0'<pos:position pos:line="17" pos:column="15"/></literal> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">line<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="26">&amp;&amp;<pos:position pos:line="17" pos:column="36"/></operator> <operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">!<pos:position pos:line="17" pos:column="31"/></operator><call><name pos:line="17" pos:column="31">isspace<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">*<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">line<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator></expr>)<pos:position pos:line="17" pos:column="47"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">line<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator></expr>;<pos:position pos:line="18" pos:column="12"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="19" pos:column="3">save<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <name pos:line="19" pos:column="10">line<pos:position pos:line="19" pos:column="14"/></name></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><literal type="char" pos:line="20" pos:column="10">'\0'<pos:position pos:line="20" pos:column="14"/></literal> <operator pos:line="20" pos:column="15">!=<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">line<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">line<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">++<pos:position pos:line="21" pos:column="11"/></operator></expr>;<pos:position pos:line="21" pos:column="12"/></expr_stmt></block></while>
  <expr_stmt><expr><name pos:line="22" pos:column="3">last<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name pos:line="22" pos:column="10">line<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">size<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <name pos:line="24" pos:column="10">last<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">-<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">first<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><literal type="number" pos:line="25" pos:column="7">0<pos:position pos:line="25" pos:column="8"/></literal> <operator pos:line="25" pos:column="9">==<pos:position pos:line="25" pos:column="11"/></operator> <name pos:line="25" pos:column="12">size<pos:position pos:line="25" pos:column="16"/></name></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">NULL<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">==<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">retval<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">malloc<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">size<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">+<pos:position pos:line="27" pos:column="38"/></operator> <literal type="number" pos:line="27" pos:column="39">1<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">NULL<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">memcpy<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">retval<pos:position pos:line="29" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="18">first<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">size<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">retval<pos:position pos:line="30" pos:column="9"/></name><index pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">size<pos:position pos:line="30" pos:column="14"/></name></expr>]<pos:position pos:line="30" pos:column="15"/></index></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="char" pos:line="30" pos:column="18">'\0'<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">retval<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_435_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_pretransfer<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">SessionHandle<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">data<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">res<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><name><name pos:line="4" pos:column="7">data<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">change<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">url<pos:position pos:line="4" pos:column="23"/></name></name></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> <block pos:line="4" pos:column="25">{
    <comment type="block" pos:line="5" pos:column="5">/* we can't do anything wihout URL */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">failf<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">data<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="17">"No URL set!"<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* Init the SSL session ID cache here. We do it here since we want to do it
     after the *_setopt() calls (that could change the size of the cache) but
     before any transfer takes place. */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">res<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">Curl_ssl_initsessions<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">data<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">data<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">set<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">.<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">ssl<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">numsessions<pos:position pos:line="13" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">res<pos:position pos:line="14" pos:column="9"/></name></expr>)<pos:position pos:line="14" pos:column="10"/></condition><then pos:line="14" pos:column="10">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">res<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">data<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">set<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">followlocation<pos:position pos:line="17" pos:column="27"/></name></name><operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator><literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt> <comment type="block" pos:line="17" pos:column="31">/* reset the location-follow counter */</comment>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">data<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">state<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">this_is_a_follow<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">FALSE<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt> <comment type="block" pos:line="18" pos:column="41">/* reset this */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">data<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">state<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">errorbuf<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">FALSE<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt> <comment type="block" pos:line="19" pos:column="33">/* no error has occurred */</comment>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">data<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">state<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">authproblem<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">FALSE<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">data<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">authhost<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">want<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">data<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">set<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">httpauth<pos:position pos:line="22" pos:column="49"/></name></name></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">data<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">state<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">authproxy<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">.<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">want<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name><name pos:line="23" pos:column="32">data<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">set<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">proxyauth<pos:position pos:line="23" pos:column="51"/></name></name></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* If there is a list of cookie files to read, do it now! */</comment>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name><name pos:line="26" pos:column="6">data<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">change<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">cookielist<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Curl_cookie_loadfiles<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">data<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

 <comment type="block" pos:line="30" pos:column="2">/* Allow data-&gt;set.use_port to set which port to use. This needs to be
  * disabled for example when we follow Location: headers to URLs using
  * different ports! */</comment>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">data<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">state<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">allow_port<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">TRUE<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><call><name pos:line="35" pos:column="5">defined<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">HAVE_SIGNAL<pos:position pos:line="35" pos:column="24"/></name></expr></argument>)<pos:position pos:line="35" pos:column="25"/></argument_list></call> <operator pos:line="35" pos:column="26">&amp;&amp;<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="29">defined<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">SIGPIPE<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call> <operator pos:line="35" pos:column="46">&amp;&amp;<pos:position pos:line="35" pos:column="56"/></operator> <operator pos:line="35" pos:column="49">!<pos:position pos:line="35" pos:column="50"/></operator><call><name pos:line="35" pos:column="50">defined<pos:position pos:line="35" pos:column="57"/></name><argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">HAVE_MSG_NOSIGNAL<pos:position pos:line="35" pos:column="75"/></name></expr></argument>)<pos:position pos:line="35" pos:column="76"/></argument_list></call></expr></cpp:if>
  <comment type="block" format="doxygen" pos:line="36" pos:column="3">/*************************************************************
   * Tell signal handler to ignore SIGPIPE
   *************************************************************/</comment>
  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><operator pos:line="39" pos:column="6">!<pos:position pos:line="39" pos:column="7"/></operator><name><name pos:line="39" pos:column="7">data<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">set<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">no_signal<pos:position pos:line="39" pos:column="26"/></name></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="5">data<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">state<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">prev_signal<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <call><name pos:line="40" pos:column="31">signal<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">SIGPIPE<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">SIG_IGN<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">Curl_initinfo<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">data<pos:position pos:line="43" pos:column="21"/></name></expr></argument>)<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt> <comment type="block" pos:line="43" pos:column="24">/* reset session-specific information "variables" */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">Curl_pgrsStartNow<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">data<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">CURLE_OK<pos:position pos:line="46" pos:column="18"/></name></expr>;<pos:position pos:line="46" pos:column="19"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

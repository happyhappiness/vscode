<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2117_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">get_cert_chain<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">ssl_connect_data<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">connssl<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">STACK_OF<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">X509<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call> <operator pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">sk<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">bufp<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">SessionHandle<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">conn<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">data<pos:position pos:line="9" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">numcerts<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">bufp<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">malloc<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">CERTBUFFERSIZE<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">bufp<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">sk<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">SSL_get_peer_cert_chain<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">connssl<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">handle<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">sk<pos:position pos:line="17" pos:column="9"/></name></expr>)<pos:position pos:line="17" pos:column="10"/></condition><then pos:line="17" pos:column="10"> <block pos:line="17" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">free<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">bufp<pos:position pos:line="18" pos:column="14"/></name></expr></argument>)<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">numcerts<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">sk_X509_num<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">sk<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">result<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">Curl_ssl_init_certinfo<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">data<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">numcerts<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">result<pos:position pos:line="25" pos:column="12"/></name></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13"> <block pos:line="25" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">free<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">bufp<pos:position pos:line="26" pos:column="14"/></name></expr></argument>)<pos:position pos:line="26" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">result<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">infof<pos:position pos:line="30" pos:column="8"/></name><argument_list pos:line="30" pos:column="8">(<argument><expr><name pos:line="30" pos:column="9">data<pos:position pos:line="30" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="15">"--- Certificate chain\n"<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
  <for pos:line="31" pos:column="3">for<control pos:line="31" pos:column="6">(<init><expr><name pos:line="31" pos:column="7">i<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator><literal type="number" pos:line="31" pos:column="9">0<pos:position pos:line="31" pos:column="10"/></literal></expr>;<pos:position pos:line="31" pos:column="11"/></init> <condition><expr><name pos:line="31" pos:column="12">i<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">&lt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">numcerts<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></condition> <incr><expr><name pos:line="31" pos:column="24">i<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">++<pos:position pos:line="31" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="28"/></control> <block pos:line="31" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">long<pos:position pos:line="32" pos:column="9"/></name></type> <name pos:line="32" pos:column="10">value<pos:position pos:line="32" pos:column="15"/></name></decl>;<pos:position pos:line="32" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">ASN1_INTEGER<pos:position pos:line="33" pos:column="17"/></name> <modifier pos:line="33" pos:column="18">*<pos:position pos:line="33" pos:column="19"/></modifier></type><name pos:line="33" pos:column="19">num<pos:position pos:line="33" pos:column="22"/></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">ASN1_TIME<pos:position pos:line="34" pos:column="14"/></name> <modifier pos:line="34" pos:column="15">*<pos:position pos:line="34" pos:column="16"/></modifier></type><name pos:line="34" pos:column="16">certdate<pos:position pos:line="34" pos:column="24"/></name></decl>;<pos:position pos:line="34" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* get the certs in "importance order" */</comment>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="37" pos:column="5">0<pos:position pos:line="37" pos:column="6"/></literal></expr></cpp:if>
    X509 *x = sk_X509_value(sk, numcerts - i - 1);
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">X509<pos:position pos:line="40" pos:column="9"/></name> <modifier pos:line="40" pos:column="10">*<pos:position pos:line="40" pos:column="11"/></modifier></type><name pos:line="40" pos:column="11">x<pos:position pos:line="40" pos:column="12"/></name> <init pos:line="40" pos:column="13">= <expr><call><name pos:line="40" pos:column="15">sk_X509_value<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">sk<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">i<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">X509_CINF<pos:position pos:line="43" pos:column="14"/></name> <modifier pos:line="43" pos:column="15">*<pos:position pos:line="43" pos:column="16"/></modifier></type><name pos:line="43" pos:column="16">cinf<pos:position pos:line="43" pos:column="20"/></name></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">EVP_PKEY<pos:position pos:line="44" pos:column="13"/></name> <modifier pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></modifier></type><name pos:line="44" pos:column="15">pubkey<pos:position pos:line="44" pos:column="21"/></name><init pos:line="44" pos:column="21">=<expr><name pos:line="44" pos:column="22">NULL<pos:position pos:line="44" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">int<pos:position pos:line="45" pos:column="8"/></name></type> <name pos:line="45" pos:column="9">j<pos:position pos:line="45" pos:column="10"/></name></decl>;<pos:position pos:line="45" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">char<pos:position pos:line="46" pos:column="9"/></name> <modifier pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></modifier></type><name pos:line="46" pos:column="11">ptr<pos:position pos:line="46" pos:column="14"/></name></decl>;<pos:position pos:line="46" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="48" pos:column="5">(<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">void<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">)<pos:position pos:line="48" pos:column="11"/></operator><call><name pos:line="48" pos:column="11">x509_name_oneline<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><call><name pos:line="48" pos:column="29">X509_get_subject_name<pos:position pos:line="48" pos:column="50"/></name><argument_list pos:line="48" pos:column="50">(<argument><expr><name pos:line="48" pos:column="51">x<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">bufp<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">CERTBUFFERSIZE<pos:position pos:line="48" pos:column="75"/></name></expr></argument>)<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">infof<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">data<pos:position pos:line="49" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="17">"%2d Subject: %s\n"<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">i<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">bufp<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">data<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">i<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"Subject"<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="48">bufp<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="52" pos:column="5">(<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">void<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">)<pos:position pos:line="52" pos:column="11"/></operator><call><name pos:line="52" pos:column="11">x509_name_oneline<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><call><name pos:line="52" pos:column="29">X509_get_issuer_name<pos:position pos:line="52" pos:column="49"/></name><argument_list pos:line="52" pos:column="49">(<argument><expr><name pos:line="52" pos:column="50">x<pos:position pos:line="52" pos:column="51"/></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">bufp<pos:position pos:line="52" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="60">CERTBUFFERSIZE<pos:position pos:line="52" pos:column="74"/></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">infof<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">data<pos:position pos:line="53" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="17">"   Issuer: %s\n"<pos:position pos:line="53" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">bufp<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">data<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">i<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="37">"Issuer"<pos:position pos:line="54" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">bufp<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">value<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <call><name pos:line="56" pos:column="13">X509_get_version<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">x<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">infof<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">data<pos:position pos:line="57" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="17">"   Version: %lu (0x%lx)\n"<pos:position pos:line="57" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">value<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">+<pos:position pos:line="57" pos:column="52"/></operator><literal type="number" pos:line="57" pos:column="52">1<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">value<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">snprintf<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">bufp<pos:position pos:line="58" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="20">CERTBUFFERSIZE<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="36">"%lx"<pos:position pos:line="58" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">value<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">data<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">i<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="37">"Version"<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">bufp<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt> <comment type="block" pos:line="59" pos:column="55">/* hex */</comment>

    <expr_stmt><expr><name pos:line="61" pos:column="5">num<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator><call><name pos:line="61" pos:column="9">X509_get_serialNumber<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">x<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name><name pos:line="62" pos:column="8">num<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">-&gt;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="13">length<pos:position pos:line="62" pos:column="19"/></name></name> <operator pos:line="62" pos:column="20">&lt;=<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="23">4<pos:position pos:line="62" pos:column="24"/></literal></expr>)<pos:position pos:line="62" pos:column="25"/></condition><then pos:line="62" pos:column="25"> <block pos:line="62" pos:column="26">{
      <expr_stmt><expr><name pos:line="63" pos:column="7">value<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <call><name pos:line="63" pos:column="15">ASN1_INTEGER_get<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">num<pos:position pos:line="63" pos:column="35"/></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">infof<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="18">"   Serial Number: %ld (0x%lx)\n"<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="53">value<pos:position pos:line="64" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">value<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">snprintf<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name pos:line="65" pos:column="16">bufp<pos:position pos:line="65" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="22">CERTBUFFERSIZE<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="38">"%lx"<pos:position pos:line="65" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">value<pos:position pos:line="65" pos:column="50"/></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then>
    <else pos:line="67" pos:column="5">else <block pos:line="67" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="68" pos:column="7">int<pos:position pos:line="68" pos:column="10"/></name></type> <name pos:line="68" pos:column="11">left<pos:position pos:line="68" pos:column="15"/></name> <init pos:line="68" pos:column="16">= <expr><name pos:line="68" pos:column="18">CERTBUFFERSIZE<pos:position pos:line="68" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="68" pos:column="33"/></decl_stmt>

      <expr_stmt><expr><name pos:line="70" pos:column="7">ptr<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">=<pos:position pos:line="70" pos:column="12"/></operator> <name pos:line="70" pos:column="13">bufp<pos:position pos:line="70" pos:column="17"/></name></expr>;<pos:position pos:line="70" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="71" pos:column="7">*<pos:position pos:line="71" pos:column="8"/></operator><name pos:line="71" pos:column="8">ptr<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">++<pos:position pos:line="71" pos:column="13"/></operator> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></expr_stmt>
      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">(<expr><name><name pos:line="72" pos:column="10">num<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">-&gt;<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="15">type<pos:position pos:line="72" pos:column="19"/></name></name> <operator pos:line="72" pos:column="20">==<pos:position pos:line="72" pos:column="22"/></operator> <name pos:line="72" pos:column="23">V_ASN1_NEG_INTEGER<pos:position pos:line="72" pos:column="41"/></name></expr>)<pos:position pos:line="72" pos:column="42"/></condition><then pos:line="72" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="73" pos:column="9">*<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">ptr<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">++<pos:position pos:line="73" pos:column="15"/></operator><operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator><literal type="char" pos:line="73" pos:column="16">'-'<pos:position pos:line="73" pos:column="19"/></literal></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt></block></then></if>

      <for pos:line="75" pos:column="7">for<control pos:line="75" pos:column="10">(<init><expr><name pos:line="75" pos:column="11">j<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator><literal type="number" pos:line="75" pos:column="13">0<pos:position pos:line="75" pos:column="14"/></literal></expr>;<pos:position pos:line="75" pos:column="15"/></init> <condition><expr><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">j<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">&lt;<pos:position pos:line="75" pos:column="22"/></operator><name><name pos:line="75" pos:column="19">num<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">length<pos:position pos:line="75" pos:column="30"/></name></name><operator pos:line="75" pos:column="30">)<pos:position pos:line="75" pos:column="31"/></operator> <operator pos:line="75" pos:column="32">&amp;&amp;<pos:position pos:line="75" pos:column="42"/></operator> <operator pos:line="75" pos:column="35">(<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="36">left<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">&gt;=<pos:position pos:line="75" pos:column="45"/></operator><literal type="number" pos:line="75" pos:column="42">4<pos:position pos:line="75" pos:column="43"/></literal><operator pos:line="75" pos:column="43">)<pos:position pos:line="75" pos:column="44"/></operator></expr>;<pos:position pos:line="75" pos:column="45"/></condition> <incr><expr><name pos:line="75" pos:column="46">j<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">++<pos:position pos:line="75" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="50"/></control> <block pos:line="75" pos:column="51">{
        <comment type="block" pos:line="76" pos:column="9">/* TODO: length restrictions */</comment>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">snprintf<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">ptr<pos:position pos:line="77" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="23">3<pos:position pos:line="77" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="26">"%02x%c"<pos:position pos:line="77" pos:column="34"/></literal></expr></argument>,<argument><expr><name><name pos:line="77" pos:column="35">num<pos:position pos:line="77" pos:column="38"/></name><operator pos:line="77" pos:column="38">-&gt;<pos:position pos:line="77" pos:column="43"/></operator><name pos:line="77" pos:column="40">data<pos:position pos:line="77" pos:column="44"/></name><index pos:line="77" pos:column="44">[<expr><name pos:line="77" pos:column="45">j<pos:position pos:line="77" pos:column="46"/></name></expr>]<pos:position pos:line="77" pos:column="47"/></index></name></expr></argument>,
                 <argument><expr><operator pos:line="78" pos:column="18">(<pos:position pos:line="78" pos:column="19"/></operator><ternary><condition><expr><operator pos:line="78" pos:column="19">(<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">j<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">+<pos:position pos:line="78" pos:column="22"/></operator><literal type="number" pos:line="78" pos:column="22">1<pos:position pos:line="78" pos:column="23"/></literal> <operator pos:line="78" pos:column="24">==<pos:position pos:line="78" pos:column="26"/></operator> <name><name pos:line="78" pos:column="27">num<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">-&gt;<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="32">length<pos:position pos:line="78" pos:column="38"/></name></name><operator pos:line="78" pos:column="38">)<pos:position pos:line="78" pos:column="39"/></operator></expr>?<pos:position pos:line="78" pos:column="40"/></condition><then><expr><literal type="char" pos:line="78" pos:column="40">'\n'<pos:position pos:line="78" pos:column="44"/></literal></expr></then><else pos:line="78" pos:column="44">:<expr><literal type="char" pos:line="78" pos:column="45">':'<pos:position pos:line="78" pos:column="48"/></literal></expr></else></ternary><operator pos:line="78" pos:column="48">)<pos:position pos:line="78" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">ptr<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">+=<pos:position pos:line="79" pos:column="15"/></operator> <literal type="number" pos:line="79" pos:column="16">3<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">left<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-=<pos:position pos:line="80" pos:column="15"/></operator><literal type="number" pos:line="80" pos:column="15">4<pos:position pos:line="80" pos:column="16"/></literal></expr>;<pos:position pos:line="80" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></for>
      <if pos:line="82" pos:column="7">if<condition pos:line="82" pos:column="9">(<expr><name><name pos:line="82" pos:column="10">num<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">length<pos:position pos:line="82" pos:column="21"/></name></name></expr>)<pos:position pos:line="82" pos:column="22"/></condition><then pos:line="82" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="9">infof<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">data<pos:position pos:line="83" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="83" pos:column="20">"   Serial Number: %s\n"<pos:position pos:line="83" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">bufp<pos:position pos:line="83" pos:column="50"/></name></expr></argument>)<pos:position pos:line="83" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt></block></then>
      <else pos:line="84" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="9">bufp<pos:position pos:line="85" pos:column="13"/></name><index pos:line="85" pos:column="13">[<expr><literal type="number" pos:line="85" pos:column="14">0<pos:position pos:line="85" pos:column="15"/></literal></expr>]<pos:position pos:line="85" pos:column="16"/></index></name><operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator><literal type="number" pos:line="85" pos:column="17">0<pos:position pos:line="85" pos:column="18"/></literal></expr>;<pos:position pos:line="85" pos:column="19"/></expr_stmt></block></else></if>
    }<pos:position pos:line="86" pos:column="6"/></block></else></if>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name><name pos:line="87" pos:column="8">bufp<pos:position pos:line="87" pos:column="12"/></name><index pos:line="87" pos:column="12">[<expr><literal type="number" pos:line="87" pos:column="13">0<pos:position pos:line="87" pos:column="14"/></literal></expr>]<pos:position pos:line="87" pos:column="15"/></index></name></expr>)<pos:position pos:line="87" pos:column="16"/></condition><then pos:line="87" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="7">Curl_ssl_push_certinfo<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">data<pos:position pos:line="88" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">i<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="39">"Serial Number"<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="56">bufp<pos:position pos:line="88" pos:column="60"/></name></expr></argument>)<pos:position pos:line="88" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt></block></then></if> <comment type="block" pos:line="88" pos:column="63">/* hex */</comment>

    <expr_stmt><expr><name pos:line="90" pos:column="5">cinf<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <name><name pos:line="90" pos:column="12">x<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">-&gt;<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="15">cert_info<pos:position pos:line="90" pos:column="24"/></name></name></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="92" pos:column="5">j<pos:position pos:line="92" pos:column="6"/></name> <operator pos:line="92" pos:column="7">=<pos:position pos:line="92" pos:column="8"/></operator> <call><name pos:line="92" pos:column="9">asn1_object_dump<pos:position pos:line="92" pos:column="25"/></name><argument_list pos:line="92" pos:column="25">(<argument><expr><name><name pos:line="92" pos:column="26">cinf<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">-&gt;<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="32">signature<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">-&gt;<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="43">algorithm<pos:position pos:line="92" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="54">bufp<pos:position pos:line="92" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="60">CERTBUFFERSIZE<pos:position pos:line="92" pos:column="74"/></name></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="76"/></expr_stmt>
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><operator pos:line="93" pos:column="8">!<pos:position pos:line="93" pos:column="9"/></operator><name pos:line="93" pos:column="9">j<pos:position pos:line="93" pos:column="10"/></name></expr>)<pos:position pos:line="93" pos:column="11"/></condition><then pos:line="93" pos:column="11"> <block pos:line="93" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="94" pos:column="7">infof<pos:position pos:line="94" pos:column="12"/></name><argument_list pos:line="94" pos:column="12">(<argument><expr><name pos:line="94" pos:column="13">data<pos:position pos:line="94" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="19">"   Signature Algorithm: %s\n"<pos:position pos:line="94" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="51">bufp<pos:position pos:line="94" pos:column="55"/></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">Curl_ssl_push_certinfo<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">data<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="36">i<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="39">"Signature Algorithm"<pos:position pos:line="95" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="62">bufp<pos:position pos:line="95" pos:column="66"/></name></expr></argument>)<pos:position pos:line="95" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="98" pos:column="5">certdate<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <call><name pos:line="98" pos:column="16">X509_get_notBefore<pos:position pos:line="98" pos:column="34"/></name><argument_list pos:line="98" pos:column="34">(<argument><expr><name pos:line="98" pos:column="35">x<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">asn1_output<pos:position pos:line="99" pos:column="16"/></name><argument_list pos:line="99" pos:column="16">(<argument><expr><name pos:line="99" pos:column="17">certdate<pos:position pos:line="99" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="27">bufp<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">CERTBUFFERSIZE<pos:position pos:line="99" pos:column="47"/></name></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">infof<pos:position pos:line="100" pos:column="10"/></name><argument_list pos:line="100" pos:column="10">(<argument><expr><name pos:line="100" pos:column="11">data<pos:position pos:line="100" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="17">"   Start date: %s\n"<pos:position pos:line="100" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="40">bufp<pos:position pos:line="100" pos:column="44"/></name></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="101" pos:column="27"/></name><argument_list pos:line="101" pos:column="27">(<argument><expr><name pos:line="101" pos:column="28">data<pos:position pos:line="101" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="34">i<pos:position pos:line="101" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="37">"Start date"<pos:position pos:line="101" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="51">bufp<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="103" pos:column="5">certdate<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <call><name pos:line="103" pos:column="16">X509_get_notAfter<pos:position pos:line="103" pos:column="33"/></name><argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">x<pos:position pos:line="103" pos:column="35"/></name></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">asn1_output<pos:position pos:line="104" pos:column="16"/></name><argument_list pos:line="104" pos:column="16">(<argument><expr><name pos:line="104" pos:column="17">certdate<pos:position pos:line="104" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="27">bufp<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="33">CERTBUFFERSIZE<pos:position pos:line="104" pos:column="47"/></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">infof<pos:position pos:line="105" pos:column="10"/></name><argument_list pos:line="105" pos:column="10">(<argument><expr><name pos:line="105" pos:column="11">data<pos:position pos:line="105" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="17">"   Expire date: %s\n"<pos:position pos:line="105" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="41">bufp<pos:position pos:line="105" pos:column="45"/></name></expr></argument>)<pos:position pos:line="105" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">Curl_ssl_push_certinfo<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><name pos:line="106" pos:column="28">data<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="34">i<pos:position pos:line="106" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="37">"Expire date"<pos:position pos:line="106" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="52">bufp<pos:position pos:line="106" pos:column="56"/></name></expr></argument>)<pos:position pos:line="106" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name pos:line="108" pos:column="5">j<pos:position pos:line="108" pos:column="6"/></name> <operator pos:line="108" pos:column="7">=<pos:position pos:line="108" pos:column="8"/></operator> <call><name pos:line="108" pos:column="9">asn1_object_dump<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name><name pos:line="108" pos:column="26">cinf<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">-&gt;<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="32">key<pos:position pos:line="108" pos:column="35"/></name><operator pos:line="108" pos:column="35">-&gt;<pos:position pos:line="108" pos:column="40"/></operator><name pos:line="108" pos:column="37">algor<pos:position pos:line="108" pos:column="42"/></name><operator pos:line="108" pos:column="42">-&gt;<pos:position pos:line="108" pos:column="47"/></operator><name pos:line="108" pos:column="44">algorithm<pos:position pos:line="108" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="55">bufp<pos:position pos:line="108" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="61">CERTBUFFERSIZE<pos:position pos:line="108" pos:column="75"/></name></expr></argument>)<pos:position pos:line="108" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="77"/></expr_stmt>
    <if pos:line="109" pos:column="5">if<condition pos:line="109" pos:column="7">(<expr><operator pos:line="109" pos:column="8">!<pos:position pos:line="109" pos:column="9"/></operator><name pos:line="109" pos:column="9">j<pos:position pos:line="109" pos:column="10"/></name></expr>)<pos:position pos:line="109" pos:column="11"/></condition><then pos:line="109" pos:column="11"> <block pos:line="109" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="110" pos:column="7">infof<pos:position pos:line="110" pos:column="12"/></name><argument_list pos:line="110" pos:column="12">(<argument><expr><name pos:line="110" pos:column="13">data<pos:position pos:line="110" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="19">"   Public Key Algorithm: %s\n"<pos:position pos:line="110" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="52">bufp<pos:position pos:line="110" pos:column="56"/></name></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">Curl_ssl_push_certinfo<pos:position pos:line="111" pos:column="29"/></name><argument_list pos:line="111" pos:column="29">(<argument><expr><name pos:line="111" pos:column="30">data<pos:position pos:line="111" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="36">i<pos:position pos:line="111" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="39">"Public Key Algorithm"<pos:position pos:line="111" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="63">bufp<pos:position pos:line="111" pos:column="67"/></name></expr></argument>)<pos:position pos:line="111" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="114" pos:column="5">pubkey<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">=<pos:position pos:line="114" pos:column="13"/></operator> <call><name pos:line="114" pos:column="14">X509_get_pubkey<pos:position pos:line="114" pos:column="29"/></name><argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">x<pos:position pos:line="114" pos:column="31"/></name></expr></argument>)<pos:position pos:line="114" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="33"/></expr_stmt>
    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><operator pos:line="115" pos:column="8">!<pos:position pos:line="115" pos:column="9"/></operator><name pos:line="115" pos:column="9">pubkey<pos:position pos:line="115" pos:column="15"/></name></expr>)<pos:position pos:line="115" pos:column="16"/></condition><then pos:line="115" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="7">infof<pos:position pos:line="116" pos:column="12"/></name><argument_list pos:line="116" pos:column="12">(<argument><expr><name pos:line="116" pos:column="13">data<pos:position pos:line="116" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="19">"   Unable to load public key\n"<pos:position pos:line="116" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="53"/></expr_stmt></block></then>
    <else pos:line="117" pos:column="5">else <block pos:line="117" pos:column="10">{
      <switch pos:line="118" pos:column="7">switch<condition pos:line="118" pos:column="13">(<expr><name><name pos:line="118" pos:column="14">pubkey<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">type<pos:position pos:line="118" pos:column="26"/></name></name></expr>)<pos:position pos:line="118" pos:column="27"/></condition> <block pos:line="118" pos:column="28">{
      <case pos:line="119" pos:column="7">case <expr><name pos:line="119" pos:column="12">EVP_PKEY_RSA<pos:position pos:line="119" pos:column="24"/></name></expr>:<pos:position pos:line="119" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="120" pos:column="9">infof<pos:position pos:line="120" pos:column="14"/></name><argument_list pos:line="120" pos:column="14">(<argument><expr><name pos:line="120" pos:column="15">data<pos:position pos:line="120" pos:column="19"/></name></expr></argument>,  <argument><expr><literal type="string" pos:line="120" pos:column="22">"   RSA Public Key (%d bits)\n"<pos:position pos:line="120" pos:column="53"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="121" pos:column="15">BN_num_bits<pos:position pos:line="121" pos:column="26"/></name><argument_list pos:line="121" pos:column="26">(<argument><expr><name><name pos:line="121" pos:column="27">pubkey<pos:position pos:line="121" pos:column="33"/></name><operator pos:line="121" pos:column="33">-&gt;<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="35">pkey<pos:position pos:line="121" pos:column="39"/></name><operator pos:line="121" pos:column="39">.<pos:position pos:line="121" pos:column="40"/></operator><name pos:line="121" pos:column="40">rsa<pos:position pos:line="121" pos:column="43"/></name><operator pos:line="121" pos:column="43">-&gt;<pos:position pos:line="121" pos:column="48"/></operator><name pos:line="121" pos:column="45">n<pos:position pos:line="121" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">snprintf<pos:position pos:line="122" pos:column="17"/></name><argument_list pos:line="122" pos:column="17">(<argument><expr><name pos:line="122" pos:column="18">bufp<pos:position pos:line="122" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="24">CERTBUFFERSIZE<pos:position pos:line="122" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="40">"%d"<pos:position pos:line="122" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="122" pos:column="46">BN_num_bits<pos:position pos:line="122" pos:column="57"/></name><argument_list pos:line="122" pos:column="57">(<argument><expr><name><name pos:line="122" pos:column="58">pubkey<pos:position pos:line="122" pos:column="64"/></name><operator pos:line="122" pos:column="64">-&gt;<pos:position pos:line="122" pos:column="69"/></operator><name pos:line="122" pos:column="66">pkey<pos:position pos:line="122" pos:column="70"/></name><operator pos:line="122" pos:column="70">.<pos:position pos:line="122" pos:column="71"/></operator><name pos:line="122" pos:column="71">rsa<pos:position pos:line="122" pos:column="74"/></name><operator pos:line="122" pos:column="74">-&gt;<pos:position pos:line="122" pos:column="79"/></operator><name pos:line="122" pos:column="76">n<pos:position pos:line="122" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="123" pos:column="9">Curl_ssl_push_certinfo<pos:position pos:line="123" pos:column="31"/></name><argument_list pos:line="123" pos:column="31">(<argument><expr><name pos:line="123" pos:column="32">data<pos:position pos:line="123" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="38">i<pos:position pos:line="123" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="41">"RSA Public Key"<pos:position pos:line="123" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="59">bufp<pos:position pos:line="123" pos:column="63"/></name></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="65"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="125" pos:column="9">print_pubkey_BN<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">rsa<pos:position pos:line="125" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="30">n<pos:position pos:line="125" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="33">i<pos:position pos:line="125" pos:column="34"/></name></expr></argument>)<pos:position pos:line="125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="126" pos:column="9">print_pubkey_BN<pos:position pos:line="126" pos:column="24"/></name><argument_list pos:line="126" pos:column="24">(<argument><expr><name pos:line="126" pos:column="25">rsa<pos:position pos:line="126" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="30">e<pos:position pos:line="126" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="33">i<pos:position pos:line="126" pos:column="34"/></name></expr></argument>)<pos:position pos:line="126" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">print_pubkey_BN<pos:position pos:line="127" pos:column="24"/></name><argument_list pos:line="127" pos:column="24">(<argument><expr><name pos:line="127" pos:column="25">rsa<pos:position pos:line="127" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="30">d<pos:position pos:line="127" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="33">i<pos:position pos:line="127" pos:column="34"/></name></expr></argument>)<pos:position pos:line="127" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">print_pubkey_BN<pos:position pos:line="128" pos:column="24"/></name><argument_list pos:line="128" pos:column="24">(<argument><expr><name pos:line="128" pos:column="25">rsa<pos:position pos:line="128" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="30">p<pos:position pos:line="128" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="33">i<pos:position pos:line="128" pos:column="34"/></name></expr></argument>)<pos:position pos:line="128" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">print_pubkey_BN<pos:position pos:line="129" pos:column="24"/></name><argument_list pos:line="129" pos:column="24">(<argument><expr><name pos:line="129" pos:column="25">rsa<pos:position pos:line="129" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="30">q<pos:position pos:line="129" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="33">i<pos:position pos:line="129" pos:column="34"/></name></expr></argument>)<pos:position pos:line="129" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">print_pubkey_BN<pos:position pos:line="130" pos:column="24"/></name><argument_list pos:line="130" pos:column="24">(<argument><expr><name pos:line="130" pos:column="25">rsa<pos:position pos:line="130" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="30">dmp1<pos:position pos:line="130" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="36">i<pos:position pos:line="130" pos:column="37"/></name></expr></argument>)<pos:position pos:line="130" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">print_pubkey_BN<pos:position pos:line="131" pos:column="24"/></name><argument_list pos:line="131" pos:column="24">(<argument><expr><name pos:line="131" pos:column="25">rsa<pos:position pos:line="131" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="30">dmq1<pos:position pos:line="131" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="36">i<pos:position pos:line="131" pos:column="37"/></name></expr></argument>)<pos:position pos:line="131" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">print_pubkey_BN<pos:position pos:line="132" pos:column="24"/></name><argument_list pos:line="132" pos:column="24">(<argument><expr><name pos:line="132" pos:column="25">rsa<pos:position pos:line="132" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="30">iqmp<pos:position pos:line="132" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="36">i<pos:position pos:line="132" pos:column="37"/></name></expr></argument>)<pos:position pos:line="132" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="39"/></expr_stmt>
        <break pos:line="133" pos:column="9">break;<pos:position pos:line="133" pos:column="15"/></break>
      <case pos:line="134" pos:column="7">case <expr><name pos:line="134" pos:column="12">EVP_PKEY_DSA<pos:position pos:line="134" pos:column="24"/></name></expr>:<pos:position pos:line="134" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">print_pubkey_BN<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">(<argument><expr><name pos:line="135" pos:column="25">dsa<pos:position pos:line="135" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="30">p<pos:position pos:line="135" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="33">i<pos:position pos:line="135" pos:column="34"/></name></expr></argument>)<pos:position pos:line="135" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="136" pos:column="9">print_pubkey_BN<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">dsa<pos:position pos:line="136" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="30">q<pos:position pos:line="136" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="33">i<pos:position pos:line="136" pos:column="34"/></name></expr></argument>)<pos:position pos:line="136" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">print_pubkey_BN<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">(<argument><expr><name pos:line="137" pos:column="25">dsa<pos:position pos:line="137" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="30">g<pos:position pos:line="137" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="33">i<pos:position pos:line="137" pos:column="34"/></name></expr></argument>)<pos:position pos:line="137" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">print_pubkey_BN<pos:position pos:line="138" pos:column="24"/></name><argument_list pos:line="138" pos:column="24">(<argument><expr><name pos:line="138" pos:column="25">dsa<pos:position pos:line="138" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="30">priv_key<pos:position pos:line="138" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="40">i<pos:position pos:line="138" pos:column="41"/></name></expr></argument>)<pos:position pos:line="138" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">print_pubkey_BN<pos:position pos:line="139" pos:column="24"/></name><argument_list pos:line="139" pos:column="24">(<argument><expr><name pos:line="139" pos:column="25">dsa<pos:position pos:line="139" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="30">pub_key<pos:position pos:line="139" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="39">i<pos:position pos:line="139" pos:column="40"/></name></expr></argument>)<pos:position pos:line="139" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
        <break pos:line="140" pos:column="9">break;<pos:position pos:line="140" pos:column="15"/></break>
      <case pos:line="141" pos:column="7">case <expr><name pos:line="141" pos:column="12">EVP_PKEY_DH<pos:position pos:line="141" pos:column="23"/></name></expr>:<pos:position pos:line="141" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">print_pubkey_BN<pos:position pos:line="142" pos:column="24"/></name><argument_list pos:line="142" pos:column="24">(<argument><expr><name pos:line="142" pos:column="25">dh<pos:position pos:line="142" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="29">p<pos:position pos:line="142" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="32">i<pos:position pos:line="142" pos:column="33"/></name></expr></argument>)<pos:position pos:line="142" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">print_pubkey_BN<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name pos:line="143" pos:column="25">dh<pos:position pos:line="143" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="29">g<pos:position pos:line="143" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="32">i<pos:position pos:line="143" pos:column="33"/></name></expr></argument>)<pos:position pos:line="143" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">print_pubkey_BN<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument><expr><name pos:line="144" pos:column="25">dh<pos:position pos:line="144" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="29">priv_key<pos:position pos:line="144" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="39">i<pos:position pos:line="144" pos:column="40"/></name></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="145" pos:column="9">print_pubkey_BN<pos:position pos:line="145" pos:column="24"/></name><argument_list pos:line="145" pos:column="24">(<argument><expr><name pos:line="145" pos:column="25">dh<pos:position pos:line="145" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="29">pub_key<pos:position pos:line="145" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="38">i<pos:position pos:line="145" pos:column="39"/></name></expr></argument>)<pos:position pos:line="145" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="41"/></expr_stmt>
        <break pos:line="146" pos:column="9">break;<pos:position pos:line="146" pos:column="15"/></break>
<cpp:if pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">if<pos:position pos:line="147" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="147" pos:column="5">0<pos:position pos:line="147" pos:column="6"/></literal></expr></cpp:if>
      case EVP_PKEY_EC: <comment type="block" pos:line="148" pos:column="25">/* symbol not present in OpenSSL 0.9.6 */</comment>
        <comment type="block" pos:line="149" pos:column="9">/* left TODO */</comment>
        break;
<cpp:endif pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">endif<pos:position pos:line="151" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="152" pos:column="8"/></block></switch>
      <expr_stmt><expr><call><name pos:line="153" pos:column="7">EVP_PKEY_free<pos:position pos:line="153" pos:column="20"/></name><argument_list pos:line="153" pos:column="20">(<argument><expr><name pos:line="153" pos:column="21">pubkey<pos:position pos:line="153" pos:column="27"/></name></expr></argument>)<pos:position pos:line="153" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="154" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="156" pos:column="5">X509V3_ext<pos:position pos:line="156" pos:column="15"/></name><argument_list pos:line="156" pos:column="15">(<argument><expr><name pos:line="156" pos:column="16">data<pos:position pos:line="156" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="22">i<pos:position pos:line="156" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="25">cinf<pos:position pos:line="156" pos:column="29"/></name><operator pos:line="156" pos:column="29">-&gt;<pos:position pos:line="156" pos:column="34"/></operator><name pos:line="156" pos:column="31">extensions<pos:position pos:line="156" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="158" pos:column="5">X509_signature<pos:position pos:line="158" pos:column="19"/></name><argument_list pos:line="158" pos:column="19">(<argument><expr><name pos:line="158" pos:column="20">data<pos:position pos:line="158" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="26">i<pos:position pos:line="158" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="29">x<pos:position pos:line="158" pos:column="30"/></name><operator pos:line="158" pos:column="30">-&gt;<pos:position pos:line="158" pos:column="35"/></operator><name pos:line="158" pos:column="32">signature<pos:position pos:line="158" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="160" pos:column="5">dumpcert<pos:position pos:line="160" pos:column="13"/></name><argument_list pos:line="160" pos:column="13">(<argument><expr><name pos:line="160" pos:column="14">data<pos:position pos:line="160" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="20">x<pos:position pos:line="160" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="23">i<pos:position pos:line="160" pos:column="24"/></name></expr></argument>)<pos:position pos:line="160" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="161" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="163" pos:column="3">free<pos:position pos:line="163" pos:column="7"/></name><argument_list pos:line="163" pos:column="7">(<argument><expr><name pos:line="163" pos:column="8">bufp<pos:position pos:line="163" pos:column="12"/></name></expr></argument>)<pos:position pos:line="163" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="14"/></expr_stmt>

  <return pos:line="165" pos:column="3">return <expr><name pos:line="165" pos:column="10">CURLE_OK<pos:position pos:line="165" pos:column="18"/></name></expr>;<pos:position pos:line="165" pos:column="19"/></return>
}<pos:position pos:line="166" pos:column="2"/></block></function></unit>

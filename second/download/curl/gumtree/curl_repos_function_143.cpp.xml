<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_143.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cookie_freelist<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">Cookie<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">co<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
   <decl_stmt><decl><type><name><name pos:line="3" pos:column="4">struct<pos:position pos:line="3" pos:column="10"/></name> <name pos:line="3" pos:column="11">Cookie<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">next<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
   <if pos:line="4" pos:column="4">if<condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">co<pos:position pos:line="4" pos:column="9"/></name></expr>)<pos:position pos:line="4" pos:column="10"/></condition><then pos:line="4" pos:column="10"> <block pos:line="4" pos:column="11">{
      <while pos:line="5" pos:column="7">while<condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">co<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition> <block pos:line="5" pos:column="17">{
	 <expr_stmt><expr><name pos:line="6" pos:column="10">next<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">co<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">next<pos:position pos:line="6" pos:column="25"/></name></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="7" pos:column="10">free<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">co<pos:position pos:line="7" pos:column="17"/></name></expr></argument>)<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt> <comment type="block" pos:line="7" pos:column="20">/* we only free the struct since the "members" are all
		      just copied! */</comment>
	 <expr_stmt><expr><name pos:line="9" pos:column="10">co<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">next<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="10" pos:column="8"/></block></while>
   }<pos:position pos:line="11" pos:column="5"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

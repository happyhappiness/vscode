<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_253_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">_mk_hash_element<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">curl_hash_element<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">e<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">key<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">size_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">key_len<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                  <parameter><decl><type><specifier pos:line="3" pos:column="19">const<pos:position pos:line="3" pos:column="24"/></specifier> <name pos:line="3" pos:column="25">void<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">p<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <expr_stmt><expr><operator pos:line="5" pos:column="3">*<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">e<pos:position pos:line="5" pos:column="5"/></name> <operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator> <operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">curl_hash_element<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator> <call><name pos:line="5" pos:column="30">malloc<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><sizeof pos:line="5" pos:column="37">sizeof<argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">curl_hash_element<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><operator pos:line="6" pos:column="4">*<pos:position pos:line="6" pos:column="5"/></operator><name pos:line="6" pos:column="5">e<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">)<pos:position pos:line="6" pos:column="7"/></operator><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">key<pos:position pos:line="6" pos:column="12"/></name></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">strdup<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">key<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><operator pos:line="7" pos:column="4">*<pos:position pos:line="7" pos:column="5"/></operator><name pos:line="7" pos:column="5">e<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">)<pos:position pos:line="7" pos:column="7"/></operator><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">key_len<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">key_len<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><operator pos:line="8" pos:column="4">*<pos:position pos:line="8" pos:column="5"/></operator><name pos:line="8" pos:column="5">e<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">)<pos:position pos:line="8" pos:column="7"/></operator><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">ptr<pos:position pos:line="8" pos:column="12"/></name></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">void<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">p<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_271_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tftp<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">testcase<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">test<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">tftphdr<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">tp<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">size<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">cp<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">first<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">ecode<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">formats<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">pf<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">filename<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">mode<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">error<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">server<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Open request dump file. */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">server<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">fopen<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">REQUEST_DUMP<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"ab"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">server<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">error<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">ERRNO<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">logmsg<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="string" pos:line="14" pos:column="12">"fopen() failed with error: %d %s"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">error<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="55">strerror<pos:position pos:line="14" pos:column="63"/></name><argument_list pos:line="14" pos:column="63">(<argument><expr><name pos:line="14" pos:column="64">error<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">logmsg<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"Error opening file: %s"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">REQUEST_DUMP<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* store input protocol */</comment>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">fprintf<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">server<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"opcode: %x\n"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="35">tp<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">th_opcode<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">cp<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <operator pos:line="22" pos:column="8">(<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name><name pos:line="22" pos:column="17">tp<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">th_stuff<pos:position pos:line="22" pos:column="29"/></name></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">filename<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">cp<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
<label><name pos:line="24" pos:column="1">again<pos:position pos:line="24" pos:column="6"/></name>:<pos:position pos:line="24" pos:column="7"/></label>
  <while pos:line="25" pos:column="3">while <condition pos:line="25" pos:column="9">(<expr><name pos:line="25" pos:column="10">cp<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">&lt;<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="15">buf<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">size<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition> <block pos:line="25" pos:column="27">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">cp<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <literal type="char" pos:line="26" pos:column="16">'\0'<pos:position pos:line="26" pos:column="20"/></literal></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
      <block type="pseudo"><break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">cp<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">++<pos:position pos:line="28" pos:column="9"/></operator></expr>;<pos:position pos:line="28" pos:column="10"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></while>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">cp<pos:position pos:line="30" pos:column="10"/></name></expr>)<pos:position pos:line="30" pos:column="11"/></condition><then pos:line="30" pos:column="11"> <block pos:line="30" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">nak<pos:position pos:line="31" pos:column="8"/></name><argument_list pos:line="31" pos:column="8">(<argument><expr><name pos:line="31" pos:column="9">EBADOP<pos:position pos:line="31" pos:column="15"/></name></expr></argument>)<pos:position pos:line="31" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">fclose<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">server<pos:position pos:line="32" pos:column="18"/></name></expr></argument>)<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">3<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">first<pos:position pos:line="35" pos:column="12"/></name></expr>)<pos:position pos:line="35" pos:column="13"/></condition><then pos:line="35" pos:column="13"> <block pos:line="35" pos:column="14">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">mode<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">++<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">cp<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">first<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal></expr>;<pos:position pos:line="37" pos:column="15"/></expr_stmt>
    <goto pos:line="38" pos:column="5">goto <name pos:line="38" pos:column="10">again<pos:position pos:line="38" pos:column="15"/></name>;<pos:position pos:line="38" pos:column="16"/></goto>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="40" pos:column="3">/* store input protocol */</comment>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">fprintf<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name pos:line="41" pos:column="11">server<pos:position pos:line="41" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"filename: %s\n"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="37">filename<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>

  <for pos:line="43" pos:column="3">for <control pos:line="43" pos:column="7">(<init><expr><name pos:line="43" pos:column="8">cp<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">mode<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></init> <condition><expr><operator pos:line="43" pos:column="19">*<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">cp<pos:position pos:line="43" pos:column="22"/></name></expr>;<pos:position pos:line="43" pos:column="23"/></condition> <incr><expr><name pos:line="43" pos:column="24">cp<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">++<pos:position pos:line="43" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="29"/></control>
    <block type="pseudo"><if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><call><name pos:line="44" pos:column="8">ISUPPER<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><operator pos:line="44" pos:column="16">*<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">cp<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="7">*<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">cp<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">char<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">)<pos:position pos:line="45" pos:column="19"/></operator><call><name pos:line="45" pos:column="19">tolower<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><operator pos:line="45" pos:column="27">(<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">int<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">)<pos:position pos:line="45" pos:column="32"/></operator><operator pos:line="45" pos:column="32">*<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">cp<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt></block></then></if></block></for>

  <comment type="block" pos:line="47" pos:column="3">/* store input protocol */</comment>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">fprintf<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">server<pos:position pos:line="48" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="19">"mode: %s\n"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="33">mode<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">fclose<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">server<pos:position pos:line="49" pos:column="16"/></name></expr></argument>)<pos:position pos:line="49" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>

  <for pos:line="51" pos:column="3">for <control pos:line="51" pos:column="7">(<init><expr><name pos:line="51" pos:column="8">pf<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">formats<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></init> <condition><expr><name><name pos:line="51" pos:column="22">pf<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">f_mode<pos:position pos:line="51" pos:column="32"/></name></name></expr>;<pos:position pos:line="51" pos:column="33"/></condition> <incr><expr><name pos:line="51" pos:column="34">pf<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">++<pos:position pos:line="51" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="39"/></control>
    <block type="pseudo"><if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">strcmp<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name><name pos:line="52" pos:column="16">pf<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">f_mode<pos:position pos:line="52" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">mode<pos:position pos:line="52" pos:column="32"/></name></expr></argument>)<pos:position pos:line="52" pos:column="33"/></argument_list></call> <operator pos:line="52" pos:column="34">==<pos:position pos:line="52" pos:column="36"/></operator> <literal type="number" pos:line="52" pos:column="37">0<pos:position pos:line="52" pos:column="38"/></literal></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39">
      <block type="pseudo"><break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break></block></then></if></block></for>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">!<pos:position pos:line="54" pos:column="8"/></operator><name><name pos:line="54" pos:column="8">pf<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">f_mode<pos:position pos:line="54" pos:column="18"/></name></name></expr>)<pos:position pos:line="54" pos:column="19"/></condition><then pos:line="54" pos:column="19"> <block pos:line="54" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">nak<pos:position pos:line="55" pos:column="8"/></name><argument_list pos:line="55" pos:column="8">(<argument><expr><name pos:line="55" pos:column="9">EBADOP<pos:position pos:line="55" pos:column="15"/></name></expr></argument>)<pos:position pos:line="55" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><literal type="number" pos:line="56" pos:column="12">2<pos:position pos:line="56" pos:column="13"/></literal></expr>;<pos:position pos:line="56" pos:column="14"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="58" pos:column="3">ecode<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">=<pos:position pos:line="58" pos:column="10"/></operator> <call><name pos:line="58" pos:column="11">validate_access<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">test<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">filename<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="43">tp<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">-&gt;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="47">th_opcode<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">ecode<pos:position pos:line="59" pos:column="12"/></name></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13"> <block pos:line="59" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">nak<pos:position pos:line="60" pos:column="8"/></name><argument_list pos:line="60" pos:column="8">(<argument><expr><name pos:line="60" pos:column="9">ecode<pos:position pos:line="60" pos:column="14"/></name></expr></argument>)<pos:position pos:line="60" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><literal type="number" pos:line="61" pos:column="12">1<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name><name pos:line="63" pos:column="7">tp<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">th_opcode<pos:position pos:line="63" pos:column="20"/></name></name> <operator pos:line="63" pos:column="21">==<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">WRQ<pos:position pos:line="63" pos:column="27"/></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="5">recvtftp<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">test<pos:position pos:line="64" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="20">pf<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="65" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">sendtftp<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">test<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="20">pf<pos:position pos:line="66" pos:column="22"/></name></expr></argument>)<pos:position pos:line="66" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt></block></else></if>

  <return pos:line="68" pos:column="3">return <expr><literal type="number" pos:line="68" pos:column="10">0<pos:position pos:line="68" pos:column="11"/></literal></expr>;<pos:position pos:line="68" pos:column="12"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

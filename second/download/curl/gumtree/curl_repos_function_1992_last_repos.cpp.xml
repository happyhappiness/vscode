<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1992_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">sanitize_cookie_path<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cookie_path<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">len<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">new_path<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">strdup<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">cookie_path<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">new_path<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* some stupid site sends path attribute with '"'. */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">len<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">strlen<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">new_path<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">new_path<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>]<pos:position pos:line="10" pos:column="17"/></index></name> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <literal type="char" pos:line="10" pos:column="21">'\"'<pos:position pos:line="10" pos:column="25"/></literal></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">memmove<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">void<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">new_path<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="31">(<pos:position pos:line="11" pos:column="32"/></operator><specifier pos:line="11" pos:column="32">const<pos:position pos:line="11" pos:column="37"/></specifier> <name pos:line="11" pos:column="38">void<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator><operator pos:line="11" pos:column="45">(<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">new_path<pos:position pos:line="11" pos:column="54"/></name> <operator pos:line="11" pos:column="55">+<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">1<pos:position pos:line="11" pos:column="58"/></literal><operator pos:line="11" pos:column="58">)<pos:position pos:line="11" pos:column="59"/></operator></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">len<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">len<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">--<pos:position pos:line="12" pos:column="10"/></operator></expr>;<pos:position pos:line="12" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">len<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">&amp;&amp;<pos:position pos:line="14" pos:column="20"/></operator> <operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">new_path<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><name pos:line="14" pos:column="23">len<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">-<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">1<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name> <operator pos:line="14" pos:column="32">==<pos:position pos:line="14" pos:column="34"/></operator> <literal type="char" pos:line="14" pos:column="35">'\"'<pos:position pos:line="14" pos:column="39"/></literal><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">new_path<pos:position pos:line="15" pos:column="13"/></name><index pos:line="15" pos:column="13">[<expr><name pos:line="15" pos:column="14">len<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">-<pos:position pos:line="15" pos:column="19"/></operator> <literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>]<pos:position pos:line="15" pos:column="22"/></index></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">0x0<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">len<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">--<pos:position pos:line="16" pos:column="10"/></operator></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* RFC6265 5.2.4 The Path Attribute */</comment>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name><name pos:line="20" pos:column="6">new_path<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>]<pos:position pos:line="20" pos:column="17"/></index></name> <operator pos:line="20" pos:column="18">!=<pos:position pos:line="20" pos:column="20"/></operator> <literal type="char" pos:line="20" pos:column="21">'/'<pos:position pos:line="20" pos:column="24"/></literal></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
    <comment type="block" pos:line="21" pos:column="5">/* Let cookie-path be the default-path. */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">new_path<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">new_path<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strdup<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"/"<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">new_path<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* convert /hoge/ to /hoge */</comment>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name pos:line="28" pos:column="6">len<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">&amp;&amp;<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="13">new_path<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name pos:line="28" pos:column="22">len<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">-<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="28">1<pos:position pos:line="28" pos:column="29"/></literal></expr>]<pos:position pos:line="28" pos:column="30"/></index></name> <operator pos:line="28" pos:column="31">==<pos:position pos:line="28" pos:column="33"/></operator> <literal type="char" pos:line="28" pos:column="34">'/'<pos:position pos:line="28" pos:column="37"/></literal></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">new_path<pos:position pos:line="29" pos:column="13"/></name><index pos:line="29" pos:column="13">[<expr><name pos:line="29" pos:column="14">len<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">-<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">1<pos:position pos:line="29" pos:column="21"/></literal></expr>]<pos:position pos:line="29" pos:column="22"/></index></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0x0<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">new_path<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

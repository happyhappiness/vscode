<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1197_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_parse_url_options<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">connectdata<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">conn<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">imap_conn<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">imapc<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">proto<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">imapc<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ptr<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">conn<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">options<pos:position pos:line="5" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">imapc<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">sasl<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">resetprefs<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">TRUE<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>

  <while pos:line="9" pos:column="3">while<condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">result<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&amp;&amp;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="20">ptr<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">ptr<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition> <block pos:line="9" pos:column="33">{
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">key<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name pos:line="10" pos:column="23">ptr<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">value<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

    <while pos:line="13" pos:column="5">while<condition pos:line="13" pos:column="10">(<expr><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">ptr<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">&amp;&amp;<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">ptr<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">!=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="char" pos:line="13" pos:column="27">'='<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">ptr<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="16" pos:column="5">value<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">ptr<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">+<pos:position pos:line="16" pos:column="18"/></operator> <literal type="number" pos:line="16" pos:column="19">1<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

    <while pos:line="18" pos:column="5">while<condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">*<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">ptr<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&amp;&amp;<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">ptr<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">!=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="char" pos:line="18" pos:column="27">';'<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">ptr<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">++<pos:position pos:line="19" pos:column="12"/></operator></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt></block></while>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><call><name pos:line="21" pos:column="8">strncasecompare<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">key<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="29">"AUTH="<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="38">5<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">result<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">Curl_sasl_parse_url_auth_option<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><operator pos:line="22" pos:column="48">&amp;<pos:position pos:line="22" pos:column="53"/></operator><name><name pos:line="22" pos:column="49">imapc<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">-&gt;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="56">sasl<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>,
                                               <argument><expr><name pos:line="23" pos:column="48">value<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">ptr<pos:position pos:line="23" pos:column="58"/></name> <operator pos:line="23" pos:column="59">-<pos:position pos:line="23" pos:column="60"/></operator> <name pos:line="23" pos:column="61">value<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then>
    <else pos:line="24" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">result<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt></block></else></if>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">*<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">ptr<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <literal type="char" pos:line="27" pos:column="16">';'<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">ptr<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">++<pos:position pos:line="28" pos:column="12"/></operator></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></while>

  <switch pos:line="31" pos:column="3">switch<condition pos:line="31" pos:column="9">(<expr><name><name pos:line="31" pos:column="10">imapc<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">sasl<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">prefmech<pos:position pos:line="31" pos:column="30"/></name></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition> <block pos:line="31" pos:column="32">{
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">SASL_AUTH_NONE<pos:position pos:line="32" pos:column="22"/></name></expr>:<pos:position pos:line="32" pos:column="23"/></case>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">imapc<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">preftype<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">IMAP_TYPE_NONE<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">SASL_AUTH_DEFAULT<pos:position pos:line="35" pos:column="25"/></name></expr>:<pos:position pos:line="35" pos:column="26"/></case>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">imapc<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">preftype<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">IMAP_TYPE_ANY<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <default pos:line="38" pos:column="3">default:<pos:position pos:line="38" pos:column="11"/></default>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">imapc<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">preftype<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">IMAP_TYPE_SASL<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  }<pos:position pos:line="41" pos:column="4"/></block></switch>

  <return pos:line="43" pos:column="3">return <expr><name pos:line="43" pos:column="10">result<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

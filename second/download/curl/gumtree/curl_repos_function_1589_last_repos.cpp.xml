<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1589_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">Curl_sh_entry<pos:position pos:line="1" pos:column="28"/></name></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">sh_addentry<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">curl_hash<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">sh<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">curl_socket_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">s<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="3" pos:column="42">struct<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">Curl_easy<pos:position pos:line="3" pos:column="58"/></name></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">data<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_sh_entry<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">there<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><call><name pos:line="5" pos:column="33">sh_getentry<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">(<argument><expr><name pos:line="5" pos:column="45">sh<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="49">s<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_sh_entry<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">check<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">there<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12">
    <comment type="block" pos:line="9" pos:column="5">/* it is present, return fine */</comment>
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">there<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* not present, add it */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">check<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">calloc<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="21">sizeof<argument_list pos:line="13" pos:column="27">(<argument><expr pos:line="13" pos:column="28">struct <name pos:line="13" pos:column="35">Curl_sh_entry<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">check<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">NULL<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="18">/* major failure */</comment>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">check<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">easy<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">data<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">check<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">-&gt;<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="10">socket<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">s<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* make/add new hash entry */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><operator pos:line="21" pos:column="6">!<pos:position pos:line="21" pos:column="7"/></operator><call><name pos:line="21" pos:column="7">Curl_hash_add<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">sh<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="25">(<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">char<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof<argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">curl_socket_t<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">check<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67"> <block pos:line="21" pos:column="68">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">free<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">check<pos:position pos:line="22" pos:column="15"/></name></expr></argument>)<pos:position pos:line="22" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return> <comment type="block" pos:line="23" pos:column="18">/* major failure */</comment>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">check<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return> <comment type="block" pos:line="26" pos:column="17">/* things are good in sockhash land */</comment>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

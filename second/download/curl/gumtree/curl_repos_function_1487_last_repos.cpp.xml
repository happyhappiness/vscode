<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1487_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">parse_login_details<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">login<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">size_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">len<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier><modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">userp<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier><modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">passwdp<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier><modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">optionsp<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ubuf<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">pbuf<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">obuf<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">psep<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">osep<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">ulen<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">plen<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">olen<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* Attempt to find the password separator */</comment>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">passwdp<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">psep<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">strchr<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">login<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="26">':'<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Within the constraint of the login string */</comment>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">psep<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">&gt;=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="16">login<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">+<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">len<pos:position pos:line="20" pos:column="27"/></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">psep<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">NULL<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Attempt to find the options separator */</comment>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">optionsp<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">osep<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">strchr<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">login<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="26">';'<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* Within the constraint of the login string */</comment>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">osep<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">&gt;=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="16">login<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">+<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">len<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">osep<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">NULL<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Calculate the portion lengths */</comment>
  <expr_stmt><expr><name pos:line="34" pos:column="3">ulen<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <operator pos:line="34" pos:column="10">(<pos:position pos:line="34" pos:column="11"/></operator><ternary><condition><expr><name pos:line="34" pos:column="11">psep<pos:position pos:line="34" pos:column="15"/></name></expr> ?<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
          <expr><call pos:line="35" pos:column="11">(<name pos:line="35" pos:column="12">size_t<pos:position pos:line="35" pos:column="18"/></name>)<argument_list pos:line="35" pos:column="19">(<argument><expr><ternary><condition><expr><name pos:line="35" pos:column="20">osep<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">&amp;&amp;<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="28">psep<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">&gt;<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="35">osep<pos:position pos:line="35" pos:column="39"/></name></expr> ?<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41"> <expr><name pos:line="35" pos:column="42">osep<pos:position pos:line="35" pos:column="46"/></name> <operator pos:line="35" pos:column="47">-<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">login<pos:position pos:line="35" pos:column="54"/></name></expr> <pos:position pos:line="35" pos:column="55"/></then><else pos:line="35" pos:column="55">: <expr><name pos:line="35" pos:column="57">psep<pos:position pos:line="35" pos:column="61"/></name> <operator pos:line="35" pos:column="62">-<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="64">login<pos:position pos:line="35" pos:column="69"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="35" pos:column="71"/></then><else pos:line="35" pos:column="71">:
          <expr><operator pos:line="36" pos:column="11">(<pos:position pos:line="36" pos:column="12"/></operator><ternary><condition><expr><name pos:line="36" pos:column="12">osep<pos:position pos:line="36" pos:column="16"/></name></expr> ?<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18"> <expr><call pos:line="36" pos:column="19">(<name pos:line="36" pos:column="20">size_t<pos:position pos:line="36" pos:column="26"/></name>)<argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">osep<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">-<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">login<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr> <pos:position pos:line="36" pos:column="42"/></then><else pos:line="36" pos:column="42">: <expr><name pos:line="36" pos:column="44">len<pos:position pos:line="36" pos:column="47"/></name></expr></else></ternary><operator pos:line="36" pos:column="47">)<pos:position pos:line="36" pos:column="48"/></operator></expr></else></ternary><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator></expr>;<pos:position pos:line="36" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name pos:line="37" pos:column="3">plen<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><ternary><condition><expr><name pos:line="37" pos:column="11">psep<pos:position pos:line="37" pos:column="15"/></name></expr> ?<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17">
          <expr><operator pos:line="38" pos:column="11">(<pos:position pos:line="38" pos:column="12"/></operator><ternary><condition><expr><name pos:line="38" pos:column="12">osep<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">&amp;&amp;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="20">osep<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">&gt;<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="27">psep<pos:position pos:line="38" pos:column="31"/></name></expr> ?<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33"> <expr><call pos:line="38" pos:column="34">(<name pos:line="38" pos:column="35">size_t<pos:position pos:line="38" pos:column="41"/></name>)<argument_list pos:line="38" pos:column="42">(<argument><expr><name pos:line="38" pos:column="43">osep<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">-<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">psep<pos:position pos:line="38" pos:column="54"/></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="38" pos:column="56"/></then><else pos:line="38" pos:column="56">:
                                 <expr><call pos:line="39" pos:column="34">(<name pos:line="39" pos:column="35">size_t<pos:position pos:line="39" pos:column="41"/></name>)<argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">login<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">+<pos:position pos:line="39" pos:column="50"/></operator> <name pos:line="39" pos:column="51">len<pos:position pos:line="39" pos:column="54"/></name> <operator pos:line="39" pos:column="55">-<pos:position pos:line="39" pos:column="56"/></operator> <name pos:line="39" pos:column="57">psep<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr></else></ternary><operator pos:line="39" pos:column="62">)<pos:position pos:line="39" pos:column="63"/></operator> <operator pos:line="39" pos:column="64">-<pos:position pos:line="39" pos:column="65"/></operator> <literal type="number" pos:line="39" pos:column="66">1<pos:position pos:line="39" pos:column="67"/></literal></expr> <pos:position pos:line="39" pos:column="68"/></then><else pos:line="39" pos:column="68">: <expr><literal type="number" pos:line="39" pos:column="70">0<pos:position pos:line="39" pos:column="71"/></literal></expr></else></ternary><operator pos:line="39" pos:column="71">)<pos:position pos:line="39" pos:column="72"/></operator></expr>;<pos:position pos:line="39" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><name pos:line="40" pos:column="3">olen<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><ternary><condition><expr><name pos:line="40" pos:column="11">osep<pos:position pos:line="40" pos:column="15"/></name></expr> ?<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17">
          <expr><operator pos:line="41" pos:column="11">(<pos:position pos:line="41" pos:column="12"/></operator><ternary><condition><expr><name pos:line="41" pos:column="12">psep<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">&amp;&amp;<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="20">psep<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">&gt;<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="27">osep<pos:position pos:line="41" pos:column="31"/></name></expr> ?<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33"> <expr><call pos:line="41" pos:column="34">(<name pos:line="41" pos:column="35">size_t<pos:position pos:line="41" pos:column="41"/></name>)<argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">psep<pos:position pos:line="41" pos:column="47"/></name> <operator pos:line="41" pos:column="48">-<pos:position pos:line="41" pos:column="49"/></operator> <name pos:line="41" pos:column="50">osep<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="41" pos:column="56"/></then><else pos:line="41" pos:column="56">:
                                 <expr><call pos:line="42" pos:column="34">(<name pos:line="42" pos:column="35">size_t<pos:position pos:line="42" pos:column="41"/></name>)<argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">login<pos:position pos:line="42" pos:column="48"/></name> <operator pos:line="42" pos:column="49">+<pos:position pos:line="42" pos:column="50"/></operator> <name pos:line="42" pos:column="51">len<pos:position pos:line="42" pos:column="54"/></name> <operator pos:line="42" pos:column="55">-<pos:position pos:line="42" pos:column="56"/></operator> <name pos:line="42" pos:column="57">osep<pos:position pos:line="42" pos:column="61"/></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr></else></ternary><operator pos:line="42" pos:column="62">)<pos:position pos:line="42" pos:column="63"/></operator> <operator pos:line="42" pos:column="64">-<pos:position pos:line="42" pos:column="65"/></operator> <literal type="number" pos:line="42" pos:column="66">1<pos:position pos:line="42" pos:column="67"/></literal></expr> <pos:position pos:line="42" pos:column="68"/></then><else pos:line="42" pos:column="68">: <expr><literal type="number" pos:line="42" pos:column="70">0<pos:position pos:line="42" pos:column="71"/></literal></expr></else></ternary><operator pos:line="42" pos:column="71">)<pos:position pos:line="42" pos:column="72"/></operator></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="44" pos:column="3">/* Allocate the user portion buffer */</comment>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">userp<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">&amp;&amp;<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="15">ulen<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">ubuf<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">malloc<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">ulen<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">+<pos:position pos:line="46" pos:column="25"/></operator> <literal type="number" pos:line="46" pos:column="26">1<pos:position pos:line="46" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><operator pos:line="47" pos:column="8">!<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">ubuf<pos:position pos:line="47" pos:column="13"/></name></expr>)<pos:position pos:line="47" pos:column="14"/></condition><then pos:line="47" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">result<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="48" pos:column="35"/></name></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Allocate the password portion buffer */</comment>
  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><operator pos:line="52" pos:column="6">!<pos:position pos:line="52" pos:column="7"/></operator><name pos:line="52" pos:column="7">result<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">&amp;&amp;<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="17">passwdp<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&amp;&amp;<pos:position pos:line="52" pos:column="35"/></operator> <name pos:line="52" pos:column="28">plen<pos:position pos:line="52" pos:column="32"/></name></expr>)<pos:position pos:line="52" pos:column="33"/></condition><then pos:line="52" pos:column="33"> <block pos:line="52" pos:column="34">{
    <expr_stmt><expr><name pos:line="53" pos:column="5">pbuf<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <call><name pos:line="53" pos:column="12">malloc<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">plen<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">+<pos:position pos:line="53" pos:column="25"/></operator> <literal type="number" pos:line="53" pos:column="26">1<pos:position pos:line="53" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">pbuf<pos:position pos:line="54" pos:column="13"/></name></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14"> <block pos:line="54" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">free<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><name pos:line="55" pos:column="12">ubuf<pos:position pos:line="55" pos:column="16"/></name></expr></argument>)<pos:position pos:line="55" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">result<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="56" pos:column="35"/></name></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* Allocate the options portion buffer */</comment>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">!<pos:position pos:line="61" pos:column="7"/></operator><name pos:line="61" pos:column="7">result<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">&amp;&amp;<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="17">optionsp<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">&amp;&amp;<pos:position pos:line="61" pos:column="36"/></operator> <name pos:line="61" pos:column="29">olen<pos:position pos:line="61" pos:column="33"/></name></expr>)<pos:position pos:line="61" pos:column="34"/></condition><then pos:line="61" pos:column="34"> <block pos:line="61" pos:column="35">{
    <expr_stmt><expr><name pos:line="62" pos:column="5">obuf<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">malloc<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">olen<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">+<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="26">1<pos:position pos:line="62" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><operator pos:line="63" pos:column="8">!<pos:position pos:line="63" pos:column="9"/></operator><name pos:line="63" pos:column="9">obuf<pos:position pos:line="63" pos:column="13"/></name></expr>)<pos:position pos:line="63" pos:column="14"/></condition><then pos:line="63" pos:column="14"> <block pos:line="63" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="64" pos:column="7">free<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><name pos:line="64" pos:column="12">pbuf<pos:position pos:line="64" pos:column="16"/></name></expr></argument>)<pos:position pos:line="64" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">free<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name pos:line="65" pos:column="12">ubuf<pos:position pos:line="65" pos:column="16"/></name></expr></argument>)<pos:position pos:line="65" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">result<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="66" pos:column="35"/></name></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><operator pos:line="70" pos:column="6">!<pos:position pos:line="70" pos:column="7"/></operator><name pos:line="70" pos:column="7">result<pos:position pos:line="70" pos:column="13"/></name></expr>)<pos:position pos:line="70" pos:column="14"/></condition><then pos:line="70" pos:column="14"> <block pos:line="70" pos:column="15">{
    <comment type="block" pos:line="71" pos:column="5">/* Store the user portion if necessary */</comment>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name pos:line="72" pos:column="8">ubuf<pos:position pos:line="72" pos:column="12"/></name></expr>)<pos:position pos:line="72" pos:column="13"/></condition><then pos:line="72" pos:column="13"> <block pos:line="72" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">memcpy<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><name pos:line="73" pos:column="14">ubuf<pos:position pos:line="73" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="20">login<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">ulen<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">ubuf<pos:position pos:line="74" pos:column="11"/></name><index pos:line="74" pos:column="11">[<expr><name pos:line="74" pos:column="12">ulen<pos:position pos:line="74" pos:column="16"/></name></expr>]<pos:position pos:line="74" pos:column="17"/></index></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <literal type="char" pos:line="74" pos:column="20">'\0'<pos:position pos:line="74" pos:column="24"/></literal></expr>;<pos:position pos:line="74" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">Curl_safefree<pos:position pos:line="75" pos:column="20"/></name><argument_list pos:line="75" pos:column="20">(<argument><expr><operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">userp<pos:position pos:line="75" pos:column="27"/></name></expr></argument>)<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="76" pos:column="7">*<pos:position pos:line="76" pos:column="8"/></operator><name pos:line="76" pos:column="8">userp<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <name pos:line="76" pos:column="16">ubuf<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* Store the password portion if necessary */</comment>
    <if pos:line="80" pos:column="5">if<condition pos:line="80" pos:column="7">(<expr><name pos:line="80" pos:column="8">pbuf<pos:position pos:line="80" pos:column="12"/></name></expr>)<pos:position pos:line="80" pos:column="13"/></condition><then pos:line="80" pos:column="13"> <block pos:line="80" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">memcpy<pos:position pos:line="81" pos:column="13"/></name><argument_list pos:line="81" pos:column="13">(<argument><expr><name pos:line="81" pos:column="14">pbuf<pos:position pos:line="81" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="20">psep<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">+<pos:position pos:line="81" pos:column="26"/></operator> <literal type="number" pos:line="81" pos:column="27">1<pos:position pos:line="81" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="30">plen<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="82" pos:column="7">pbuf<pos:position pos:line="82" pos:column="11"/></name><index pos:line="82" pos:column="11">[<expr><name pos:line="82" pos:column="12">plen<pos:position pos:line="82" pos:column="16"/></name></expr>]<pos:position pos:line="82" pos:column="17"/></index></name> <operator pos:line="82" pos:column="18">=<pos:position pos:line="82" pos:column="19"/></operator> <literal type="char" pos:line="82" pos:column="20">'\0'<pos:position pos:line="82" pos:column="24"/></literal></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">Curl_safefree<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><operator pos:line="83" pos:column="21">*<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">passwdp<pos:position pos:line="83" pos:column="29"/></name></expr></argument>)<pos:position pos:line="83" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="84" pos:column="7">*<pos:position pos:line="84" pos:column="8"/></operator><name pos:line="84" pos:column="8">passwdp<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">pbuf<pos:position pos:line="84" pos:column="22"/></name></expr>;<pos:position pos:line="84" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="87" pos:column="5">/* Store the options portion if necessary */</comment>
    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><name pos:line="88" pos:column="8">obuf<pos:position pos:line="88" pos:column="12"/></name></expr>)<pos:position pos:line="88" pos:column="13"/></condition><then pos:line="88" pos:column="13"> <block pos:line="88" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">memcpy<pos:position pos:line="89" pos:column="13"/></name><argument_list pos:line="89" pos:column="13">(<argument><expr><name pos:line="89" pos:column="14">obuf<pos:position pos:line="89" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="20">osep<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">+<pos:position pos:line="89" pos:column="26"/></operator> <literal type="number" pos:line="89" pos:column="27">1<pos:position pos:line="89" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="30">olen<pos:position pos:line="89" pos:column="34"/></name></expr></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="90" pos:column="7">obuf<pos:position pos:line="90" pos:column="11"/></name><index pos:line="90" pos:column="11">[<expr><name pos:line="90" pos:column="12">olen<pos:position pos:line="90" pos:column="16"/></name></expr>]<pos:position pos:line="90" pos:column="17"/></index></name> <operator pos:line="90" pos:column="18">=<pos:position pos:line="90" pos:column="19"/></operator> <literal type="char" pos:line="90" pos:column="20">'\0'<pos:position pos:line="90" pos:column="24"/></literal></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">Curl_safefree<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><operator pos:line="91" pos:column="21">*<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">optionsp<pos:position pos:line="91" pos:column="30"/></name></expr></argument>)<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="92" pos:column="7">*<pos:position pos:line="92" pos:column="8"/></operator><name pos:line="92" pos:column="8">optionsp<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <name pos:line="92" pos:column="19">obuf<pos:position pos:line="92" pos:column="23"/></name></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">result<pos:position pos:line="96" pos:column="16"/></name></expr>;<pos:position pos:line="96" pos:column="17"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_254.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_gss_name<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">struct<pos:position pos:line="2" pos:column="20"/></name> <name pos:line="2" pos:column="21">connectdata<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">conn<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">gss_name_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">server<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">negotiatedata<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">neg_ctx<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><operator pos:line="4" pos:column="35">&amp;<pos:position pos:line="4" pos:column="40"/></operator><name><name pos:line="4" pos:column="36">conn<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">data<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">state<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">.<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">negotiate<pos:position pos:line="4" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">OM_uint32<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">major_status<pos:position pos:line="5" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="27">minor_status<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gss_buffer_desc<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">token<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">GSS_C_EMPTY_BUFFER<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">name<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">2048<pos:position pos:line="7" pos:column="17"/></literal></expr>]<pos:position pos:line="7" pos:column="18"/></index></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name><modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type> <name pos:line="8" pos:column="15">service<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* GSSAPI implementation by Globus (known as GSI) requires the name to be
     of form "&lt;service&gt;/&lt;fqdn&gt;" instead of &lt;service&gt;@&lt;fqdn&gt; (ie. slash instead
     of at-sign). Also GSI servers are often identified as 'host' not 'khttp'.
     Change following lines if you want to use GSI */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* IIS uses the &lt;service&gt;@&lt;fqdn&gt; form but uses 'http' as the service name */</comment>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">neg_ctx<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">gss<pos:position pos:line="17" pos:column="19"/></name></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">service<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="string" pos:line="18" pos:column="15">"KHTTP"<pos:position pos:line="18" pos:column="22"/></literal></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt></block></then>
  <else pos:line="19" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="5">service<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"HTTP"<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">token<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">length<pos:position pos:line="22" pos:column="15"/></name></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">strlen<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">service<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call> <operator pos:line="22" pos:column="34">+<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal> <operator pos:line="22" pos:column="38">+<pos:position pos:line="22" pos:column="39"/></operator> <call><name pos:line="22" pos:column="40">strlen<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name><name pos:line="22" pos:column="47">conn<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">host<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">.<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="58">name<pos:position pos:line="22" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call> <operator pos:line="22" pos:column="64">+<pos:position pos:line="22" pos:column="65"/></operator> <literal type="number" pos:line="22" pos:column="66">1<pos:position pos:line="22" pos:column="67"/></literal></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">token<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">length<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">+<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal> <operator pos:line="23" pos:column="24">&gt;<pos:position pos:line="23" pos:column="28"/></operator> <sizeof pos:line="23" pos:column="26">sizeof<argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">name<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></sizeof></expr>)<pos:position pos:line="23" pos:column="39"/></condition><then pos:line="23" pos:column="39">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">EMSGSIZE<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">snprintf<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">name<pos:position pos:line="26" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="18">sizeof<argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">name<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="32">"%s@%s"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">service<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">conn<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">host<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">.<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">name<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">token<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">value<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <operator pos:line="28" pos:column="17">(<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">void<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><operator pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">name<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="29" pos:column="3">major_status<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">gss_import_name<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="35">minor_status<pos:position pos:line="29" pos:column="47"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="35">token<pos:position pos:line="30" pos:column="40"/></name></expr></argument>,
                                 <argument><expr><name pos:line="31" pos:column="34">GSS_C_NT_HOSTBASED_SERVICE<pos:position pos:line="31" pos:column="60"/></name></expr></argument>,
                                 <argument><expr><name pos:line="32" pos:column="34">server<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

  <return pos:line="34" pos:column="3">return <expr><ternary><condition><expr><call><name pos:line="34" pos:column="10">GSS_ERROR<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">major_status<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="35"/></condition><then pos:line="34" pos:column="35"> <expr><operator pos:line="34" pos:column="36">-<pos:position pos:line="34" pos:column="37"/></operator><literal type="number" pos:line="34" pos:column="37">1<pos:position pos:line="34" pos:column="38"/></literal></expr> <pos:position pos:line="34" pos:column="39"/></then><else pos:line="34" pos:column="39">: <expr><literal type="number" pos:line="34" pos:column="41">0<pos:position pos:line="34" pos:column="42"/></literal></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="43"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_539_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">readcallback<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name>  <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">size<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">size_t<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">nmemb<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="4" pos:column="28">void<pos:position pos:line="4" pos:column="32"/></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">clientp<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="42"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">counter<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><operator pos:line="6" pos:column="18">(<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">int<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">clientp<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">*<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">counter<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
    <comment type="block" pos:line="9" pos:column="5">/* only do this once and then require a clearing of this */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"READ ALREADY DONE!\n"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="13" pos:column="3">(<pos:position pos:line="13" pos:column="4"/></operator><operator pos:line="13" pos:column="4">*<pos:position pos:line="13" pos:column="5"/></operator><name pos:line="13" pos:column="5">counter<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">)<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">++<pos:position pos:line="13" pos:column="15"/></operator></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt> <comment type="block" pos:line="13" pos:column="17">/* bump */</comment>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">size<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">nmemb<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&gt;<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="21">strlen<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">UPLOADTHIS<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">stderr<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"READ!\n"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">strcpy<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">ptr<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="17">UPLOADTHIS<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><call><name pos:line="18" pos:column="12">strlen<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">UPLOADTHIS<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">fprintf<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">stderr<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"READ NOT FINE!\n"<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

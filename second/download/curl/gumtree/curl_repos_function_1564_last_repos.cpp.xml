<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1564_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_proxy_connect<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">sockindex<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><name><name pos:line="3" pos:column="6">conn<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">http_proxy<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">.<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">proxytype<pos:position pos:line="3" pos:column="32"/></name></name> <operator pos:line="3" pos:column="33">==<pos:position pos:line="3" pos:column="35"/></operator> <name pos:line="3" pos:column="36">CURLPROXY_HTTPS<pos:position pos:line="3" pos:column="51"/></name></expr>)<pos:position pos:line="3" pos:column="52"/></condition><then pos:line="3" pos:column="52"> <block pos:line="3" pos:column="53">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">CURLcode<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">result<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">https_proxy_connect<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">conn<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">sockindex<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <if pos:line="5" pos:column="5">if<condition pos:line="5" pos:column="7">(<expr><name pos:line="5" pos:column="8">result<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><name pos:line="6" pos:column="14">result<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name><name pos:line="7" pos:column="9">conn<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">bits<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">proxy_ssl_connected<pos:position pos:line="7" pos:column="39"/></name><index pos:line="7" pos:column="39">[<expr><name pos:line="7" pos:column="40">sockindex<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">result<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return></block></then></if> <comment type="block" pos:line="8" pos:column="22">/* wait for HTTPS proxy SSL initialization to complete */</comment>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">conn<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">bits<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">tunnel_proxy<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="33">conn<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">bits<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">.<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">httpproxy<pos:position pos:line="11" pos:column="53"/></name></name></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54"> <block pos:line="11" pos:column="55">{
<cpp:ifndef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifndef<pos:position pos:line="12" pos:column="8"/></cpp:directive> <name pos:line="12" pos:column="9">CURL_DISABLE_PROXY<pos:position pos:line="12" pos:column="27"/></name></cpp:ifndef>
    <comment type="block" pos:line="13" pos:column="5">/* for [protocol] tunneled through HTTP proxy */</comment>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">HTTP<pos:position pos:line="14" pos:column="16"/></name></name></type> <name pos:line="14" pos:column="17">http_proxy<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">void<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">prot_save<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">char<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">hostname<pos:position pos:line="16" pos:column="25"/></name></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">remote_port<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">CURLcode<pos:position pos:line="18" pos:column="13"/></name></type> <name pos:line="18" pos:column="14">result<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* BLOCKING */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* We want "seamless" operations through HTTP proxy tunnel */</comment>

    <comment type="block" pos:line="23" pos:column="5">/* Curl_proxyCONNECT is based on a pointer to a struct HTTP at the
     * member conn-&gt;proto.http; we want [protocol] through HTTP and we have
     * to change the member temporarily for connecting to the HTTP
     * proxy. After Curl_proxyCONNECT we have to set back the member to the
     * original pointer
     *
     * This function might be called several times in the multi interface case
     * if the proxy's CONNECT response is not instant.
     */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">prot_save<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name><name pos:line="32" pos:column="17">conn<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">data<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">req<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">protop<pos:position pos:line="32" pos:column="39"/></name></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memset<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><operator pos:line="33" pos:column="12">&amp;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="13">http_proxy<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="28">sizeof<argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">http_proxy<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">conn<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">data<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">req<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">.<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">protop<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="30">&amp;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="31">http_proxy<pos:position pos:line="34" pos:column="41"/></name></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">connkeep<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">conn<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="20">"HTTP proxy CONNECT"<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* for the secondary socket (FTP), use the "connect to host"
     * but ignore the "connect to port" (use the secondary port)
     */</comment>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name><name pos:line="41" pos:column="8">conn<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">bits<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">conn_to_host<pos:position pos:line="41" pos:column="31"/></name></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">hostname<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name><name pos:line="42" pos:column="18">conn<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">conn_to_host<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">.<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">name<pos:position pos:line="42" pos:column="41"/></name></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt></block></then>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if<condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">sockindex<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">==<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">SECONDARYSOCKET<pos:position pos:line="43" pos:column="41"/></name></expr>)<pos:position pos:line="43" pos:column="42"/></condition><then pos:line="43" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">hostname<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name><name pos:line="44" pos:column="18">conn<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">secondaryhostname<pos:position pos:line="44" pos:column="41"/></name></name></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <else pos:line="45" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">hostname<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name><name pos:line="46" pos:column="18">conn<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">-&gt;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="24">host<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">name<pos:position pos:line="46" pos:column="33"/></name></name></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt></block></else></if>

    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">sockindex<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">==<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">SECONDARYSOCKET<pos:position pos:line="48" pos:column="36"/></name></expr>)<pos:position pos:line="48" pos:column="37"/></condition><then pos:line="48" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">remote_port<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name><name pos:line="49" pos:column="21">conn<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">secondary_port<pos:position pos:line="49" pos:column="41"/></name></name></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt></block></then>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if<condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">conn<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">bits<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">conn_to_port<pos:position pos:line="50" pos:column="36"/></name></name></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="7">remote_port<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name><name pos:line="51" pos:column="21">conn<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">conn_to_port<pos:position pos:line="51" pos:column="39"/></name></name></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt></block></then></if></elseif>
    <else pos:line="52" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="7">remote_port<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name><name pos:line="53" pos:column="21">conn<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">remote_port<pos:position pos:line="53" pos:column="38"/></name></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">result<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">Curl_proxyCONNECT<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name pos:line="54" pos:column="32">conn<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">sockindex<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">hostname<pos:position pos:line="54" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="59">remote_port<pos:position pos:line="54" pos:column="70"/></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">conn<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">data<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">req<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">protop<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">prot_save<pos:position pos:line="55" pos:column="39"/></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><name pos:line="56" pos:column="8">CURLE_OK<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">!=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">result<pos:position pos:line="56" pos:column="26"/></name></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">result<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">Curl_safefree<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name><name pos:line="58" pos:column="19">conn<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">allocptr<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">.<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">proxyuserpwd<pos:position pos:line="58" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
<cpp:else pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">else<pos:position pos:line="59" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">CURLE_NOT_BUILT_IN<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></return>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="63" pos:column="3">/* no HTTP tunnel proxy, just return */</comment>
  <return pos:line="64" pos:column="3">return <expr><name pos:line="64" pos:column="10">CURLE_OK<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

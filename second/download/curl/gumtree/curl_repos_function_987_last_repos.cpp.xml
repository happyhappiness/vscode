<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_987_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">decc_init<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">feat_index<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">feat_value<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">feat_value_max<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">feat_value_min<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">sts<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Set the global flag to indicate that LIB$INITIALIZE worked. */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">decc_init_done<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">1<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Loop through all items in the decc_feat_array[]. */</comment>
  <for pos:line="14" pos:column="3">for<control pos:line="14" pos:column="6">(<init><expr><name pos:line="14" pos:column="7">i<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <literal type="number" pos:line="14" pos:column="11">0<pos:position pos:line="14" pos:column="12"/></literal></expr>;<pos:position pos:line="14" pos:column="13"/></init> <condition><expr><name><name pos:line="14" pos:column="14">decc_feat_array<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><name pos:line="14" pos:column="30">i<pos:position pos:line="14" pos:column="31"/></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">name<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></condition> <incr><expr><name pos:line="14" pos:column="47">i<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">++<pos:position pos:line="14" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="51"/></control> <block pos:line="14" pos:column="52">{

    <comment type="block" pos:line="16" pos:column="5">/* Get the feature index. */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">feat_index<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">decc$feature_get_index<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">decc_feat_array<pos:position pos:line="17" pos:column="56"/></name><index pos:line="17" pos:column="56">[<expr><name pos:line="17" pos:column="57">i<pos:position pos:line="17" pos:column="58"/></name></expr>]<pos:position pos:line="17" pos:column="59"/></index></name><operator pos:line="17" pos:column="59">.<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">name<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><name pos:line="19" pos:column="8">feat_index<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&gt;=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
      <comment type="block" pos:line="20" pos:column="7">/* Valid item.  Collect its properties. */</comment>
      <expr_stmt><expr><name pos:line="21" pos:column="7">feat_value<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">decc$feature_get_value<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">feat_index<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="55">1<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">feat_value_min<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">decc$feature_get_value<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">feat_index<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="59">2<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">feat_value_max<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">decc$feature_get_value<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">feat_index<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="59">3<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>

      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name><name pos:line="25" pos:column="11">decc_feat_array<pos:position pos:line="25" pos:column="26"/></name><index pos:line="25" pos:column="26">[<expr><name pos:line="25" pos:column="27">i<pos:position pos:line="25" pos:column="28"/></name></expr>]<pos:position pos:line="25" pos:column="29"/></index></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">value<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">&gt;=<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="39">feat_value_min<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator> <operator pos:line="25" pos:column="55">&amp;&amp;<pos:position pos:line="25" pos:column="65"/></operator>
         <operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name><name pos:line="26" pos:column="11">decc_feat_array<pos:position pos:line="26" pos:column="26"/></name><index pos:line="26" pos:column="26">[<expr><name pos:line="26" pos:column="27">i<pos:position pos:line="26" pos:column="28"/></name></expr>]<pos:position pos:line="26" pos:column="29"/></index></name><operator pos:line="26" pos:column="29">.<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">value<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">&lt;=<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="39">feat_value_max<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">)<pos:position pos:line="26" pos:column="54"/></operator></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55"> <block pos:line="26" pos:column="56">{
        <comment type="block" pos:line="27" pos:column="9">/* Valid value.  Set it if necessary. */</comment>
        <if pos:line="28" pos:column="9">if<condition pos:line="28" pos:column="11">(<expr><name pos:line="28" pos:column="12">feat_value<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <name><name pos:line="28" pos:column="26">decc_feat_array<pos:position pos:line="28" pos:column="41"/></name><index pos:line="28" pos:column="41">[<expr><name pos:line="28" pos:column="42">i<pos:position pos:line="28" pos:column="43"/></name></expr>]<pos:position pos:line="28" pos:column="44"/></index></name><operator pos:line="28" pos:column="44">.<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">value<pos:position pos:line="28" pos:column="50"/></name></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51"> <block pos:line="28" pos:column="52">{
          <expr_stmt><expr><name pos:line="29" pos:column="11">sts<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">decc$feature_set_value<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">feat_index<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="52">1<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>,
                                       <argument><expr><name><name pos:line="30" pos:column="40">decc_feat_array<pos:position pos:line="30" pos:column="55"/></name><index pos:line="30" pos:column="55">[<expr><name pos:line="30" pos:column="56">i<pos:position pos:line="30" pos:column="57"/></name></expr>]<pos:position pos:line="30" pos:column="58"/></index></name><operator pos:line="30" pos:column="58">.<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="59">value<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
      }<pos:position pos:line="32" pos:column="8"/></block></then>
      <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <comment type="block" pos:line="34" pos:column="9">/* Invalid DECC feature value. */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">printf<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="string" pos:line="35" pos:column="16">" INVALID DECC FEATURE VALUE, %d: %d &lt;= %s &lt;= %d.\n"<pos:position pos:line="35" pos:column="74"/></literal></expr></argument>,
               <argument><expr><name pos:line="36" pos:column="16">feat_value<pos:position pos:line="36" pos:column="26"/></name></expr></argument>,
               <argument><expr><name pos:line="37" pos:column="16">feat_value_min<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="32">decc_feat_array<pos:position pos:line="37" pos:column="47"/></name><index pos:line="37" pos:column="47">[<expr><name pos:line="37" pos:column="48">i<pos:position pos:line="37" pos:column="49"/></name></expr>]<pos:position pos:line="37" pos:column="50"/></index></name><operator pos:line="37" pos:column="50">.<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="51">name<pos:position pos:line="37" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">feat_value_max<pos:position pos:line="37" pos:column="71"/></name></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then>
    <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
      <comment type="block" pos:line="41" pos:column="7">/* Invalid DECC feature name. */</comment>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">printf<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><literal type="string" pos:line="42" pos:column="14">" UNKNOWN DECC FEATURE: %s.\n"<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="46">decc_feat_array<pos:position pos:line="42" pos:column="61"/></name><index pos:line="42" pos:column="61">[<expr><name pos:line="42" pos:column="62">i<pos:position pos:line="42" pos:column="63"/></name></expr>]<pos:position pos:line="42" pos:column="64"/></index></name><operator pos:line="42" pos:column="64">.<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="65">name<pos:position pos:line="42" pos:column="69"/></name></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>

  }<pos:position pos:line="45" pos:column="4"/></block></for>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

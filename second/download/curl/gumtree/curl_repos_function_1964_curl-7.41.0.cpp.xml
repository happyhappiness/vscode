<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1964_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">sasl_decode_cram_md5_message<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">chlg64<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">outptr<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">size_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">outlen<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">chlg64len<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">strlen<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">chlg64<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="7" pos:column="3">*<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">outptr<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">outlen<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Decode the challenge if necessary */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">chlg64len<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&amp;&amp;<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">chlg64<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="char" pos:line="11" pos:column="30">'='<pos:position pos:line="11" pos:column="33"/></literal></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">result<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">Curl_base64_decode<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">chlg64<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">(<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">unsigned<pos:position pos:line="12" pos:column="50"/></name> <name pos:line="12" pos:column="51">char<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator><operator pos:line="12" pos:column="57">*<pos:position pos:line="12" pos:column="58"/></operator><operator pos:line="12" pos:column="58">)<pos:position pos:line="12" pos:column="59"/></operator> <name pos:line="12" pos:column="60">outptr<pos:position pos:line="12" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">outlen<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
 }<pos:position pos:line="15" pos:column="3"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_983_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cert_stuff<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cert_file<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">key_file<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rv<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">cert_file<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block pos:line="6" pos:column="17">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">rv<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">nss_load_cert<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">cert_file<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">PR_FALSE<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><operator pos:line="8" pos:column="8">!<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12"> <block pos:line="8" pos:column="13">{
      <if pos:line="9" pos:column="7">if<condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">!<pos:position pos:line="9" pos:column="11"/></operator><call><name pos:line="9" pos:column="11">display_error<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">conn<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="31">PR_GetError<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">()<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">cert_file<pos:position pos:line="9" pos:column="55"/></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">failf<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"Unable to load client cert %d."<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="55">PR_GetError<pos:position pos:line="10" pos:column="66"/></name><argument_list pos:line="10" pos:column="66">()<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt></block></then></if>
      <return pos:line="11" pos:column="7">return <expr><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">key_file<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">||<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><call><name pos:line="14" pos:column="19">is_file<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">cert_file<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">key_file<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">rv<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">nss_load_key<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">conn<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">key_file<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
      <comment type="block" pos:line="18" pos:column="7">/* In case the cert file also has the key */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">rv<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">nss_load_key<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">conn<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">cert_file<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></else></if>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><operator pos:line="20" pos:column="8">!<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">rv<pos:position pos:line="20" pos:column="11"/></name></expr>)<pos:position pos:line="20" pos:column="12"/></condition><then pos:line="20" pos:column="12"> <block pos:line="20" pos:column="13">{
      <if pos:line="21" pos:column="7">if<condition pos:line="21" pos:column="9">(<expr><operator pos:line="21" pos:column="10">!<pos:position pos:line="21" pos:column="11"/></operator><call><name pos:line="21" pos:column="11">display_error<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">conn<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="31">PR_GetError<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">()<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">key_file<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">failf<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">data<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="21">"Unable to load client key %d."<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="54">PR_GetError<pos:position pos:line="22" pos:column="65"/></name><argument_list pos:line="22" pos:column="65">()<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt></block></then></if>

      <return pos:line="24" pos:column="7">return <expr><literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <return pos:line="27" pos:column="3">return <expr><literal type="number" pos:line="27" pos:column="10">1<pos:position pos:line="27" pos:column="11"/></literal></expr>;<pos:position pos:line="27" pos:column="12"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_74_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">formparse<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">input<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,
                     <parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">curl_httppost<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">httppost<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                     <parameter><decl><type><name><name pos:line="3" pos:column="22">struct<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">curl_httppost<pos:position pos:line="3" pos:column="42"/></name></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier><modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">last_post<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <comment type="block" pos:line="5" pos:column="3">/* nextarg MUST be a string in the format 'name=contents' and we'll
     build a linked list with the info */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">name<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">256<pos:position pos:line="7" pos:column="16"/></literal></expr>]<pos:position pos:line="7" pos:column="17"/></index></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">contents<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">major<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><literal type="number" pos:line="9" pos:column="14">128<pos:position pos:line="9" pos:column="17"/></literal></expr>]<pos:position pos:line="9" pos:column="18"/></index></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">minor<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">128<pos:position pos:line="10" pos:column="17"/></literal></expr>]<pos:position pos:line="10" pos:column="18"/></index></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">contp<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">sep<pos:position pos:line="13" pos:column="12"/></name></decl>;<pos:position pos:line="13" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">sep2<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Preallocate contents to the length of input to make sure we don't
     overwrite anything. */</comment>
  <expr_stmt><expr><name pos:line="18" pos:column="3">contents<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">malloc<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><call><name pos:line="18" pos:column="21">strlen<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">input<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">contents<pos:position pos:line="19" pos:column="11"/></name><index pos:line="19" pos:column="11">[<expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>]<pos:position pos:line="19" pos:column="14"/></index></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="char" pos:line="19" pos:column="17">'\000'<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
 
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><literal type="number" pos:line="21" pos:column="6">1<pos:position pos:line="21" pos:column="7"/></literal> <operator pos:line="21" pos:column="8">&lt;=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="11">sscanf<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">input<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="25">"%255[^=]=%[^\n]"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">name<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">contents<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
    <comment type="block" pos:line="22" pos:column="5">/* the input was using the correct format */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">contp<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">contents<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><literal type="char" pos:line="25" pos:column="8">'@'<pos:position pos:line="25" pos:column="11"/></literal> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name><name pos:line="25" pos:column="15">contp<pos:position pos:line="25" pos:column="20"/></name><index pos:line="25" pos:column="20">[<expr><literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>]<pos:position pos:line="25" pos:column="23"/></index></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block pos:line="25" pos:column="25">{
      <decl_stmt><decl><type><name><name pos:line="26" pos:column="7">struct<pos:position pos:line="26" pos:column="13"/></name> <name pos:line="26" pos:column="14">multi_files<pos:position pos:line="26" pos:column="25"/></name></name> <modifier pos:line="26" pos:column="26">*<pos:position pos:line="26" pos:column="27"/></modifier></type><name pos:line="26" pos:column="27">multi_start<pos:position pos:line="26" pos:column="38"/></name> <init pos:line="26" pos:column="39">= <expr><name pos:line="26" pos:column="41">NULL<pos:position pos:line="26" pos:column="45"/></name></expr></init></decl>, <modifier pos:line="26" pos:column="47">*<pos:position pos:line="26" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="26" pos:column="48">multi_current<pos:position pos:line="26" pos:column="61"/></name> <init pos:line="26" pos:column="62">= <expr><name pos:line="26" pos:column="64">NULL<pos:position pos:line="26" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="69"/></decl_stmt>
      <comment type="block" pos:line="27" pos:column="7">/* we use the @-letter to indicate file name(s) */</comment>
      <expr_stmt><expr><name pos:line="28" pos:column="7">contp<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">++<pos:position pos:line="28" pos:column="14"/></operator></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>

      <expr_stmt><expr><name pos:line="30" pos:column="7">multi_start<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">multi_current<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">NULL<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>

      <do pos:line="32" pos:column="7">do <block pos:line="32" pos:column="10">{
	<comment type="block" pos:line="33" pos:column="9">/* since this was a file, it may have a content-type specifier
	   at the end too, or a filename. Or both. */</comment>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">char<pos:position pos:line="35" pos:column="13"/></name> <modifier pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></modifier></type><name pos:line="35" pos:column="15">ptr<pos:position pos:line="35" pos:column="18"/></name></decl>;<pos:position pos:line="35" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name pos:line="36" pos:column="15">filename<pos:position pos:line="36" pos:column="23"/></name><init pos:line="36" pos:column="23">=<expr><name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="38" pos:column="9">sep<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator><call><name pos:line="38" pos:column="13">strchr<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">contp<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">FORM_TYPE_SEPARATOR<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">sep2<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator><call><name pos:line="39" pos:column="14">strchr<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">contp<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">FORM_FILE_SEPARATOR<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>

	<comment type="block" pos:line="41" pos:column="9">/* pick the closest */</comment>
	<if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><name pos:line="42" pos:column="12">sep2<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&amp;&amp;<pos:position pos:line="42" pos:column="27"/></operator> <operator pos:line="42" pos:column="20">(<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">sep2<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&lt;<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="28">sep<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">)<pos:position pos:line="42" pos:column="32"/></operator></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33"> <block pos:line="42" pos:column="34">{
	  <expr_stmt><expr><name pos:line="43" pos:column="11">sep<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">sep2<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>

	  <comment type="block" pos:line="45" pos:column="11">/* no type was specified! */</comment>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="48" pos:column="9">type<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">NULL<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>

	<if pos:line="50" pos:column="9">if<condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">sep<pos:position pos:line="50" pos:column="15"/></name></expr>)<pos:position pos:line="50" pos:column="16"/></condition><then pos:line="50" pos:column="16"> <block pos:line="50" pos:column="17">{

	  <comment type="block" pos:line="52" pos:column="11">/* if we got here on a comma, don't do much */</comment>
	  <if pos:line="53" pos:column="11">if<condition pos:line="53" pos:column="13">(<expr><name pos:line="53" pos:column="14">FORM_FILE_SEPARATOR<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">==<pos:position pos:line="53" pos:column="36"/></operator> <operator pos:line="53" pos:column="37">*<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">sep<pos:position pos:line="53" pos:column="41"/></name></expr>)<pos:position pos:line="53" pos:column="42"/></condition><then pos:line="53" pos:column="42">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="13">ptr<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">NULL<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt></block></then>
	  <else pos:line="55" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="13">ptr<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">sep<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">+<pos:position pos:line="56" pos:column="23"/></operator><literal type="number" pos:line="56" pos:column="23">1<pos:position pos:line="56" pos:column="24"/></literal></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt></block></else></if>

	  <expr_stmt><expr><operator pos:line="58" pos:column="11">*<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">sep<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt> <comment type="block" pos:line="58" pos:column="19">/* terminate file name at separator */</comment>

	  <while pos:line="60" pos:column="11">while<condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">ptr<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">&amp;&amp;<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="24">(<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">FORM_FILE_SEPARATOR<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">!=<pos:position pos:line="60" pos:column="46"/></operator> <operator pos:line="60" pos:column="47">*<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="48">ptr<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">)<pos:position pos:line="60" pos:column="52"/></operator></expr>)<pos:position pos:line="60" pos:column="53"/></condition> <block pos:line="60" pos:column="54">{

            <comment type="block" pos:line="62" pos:column="13">/* pass all white spaces */</comment>
            <while pos:line="63" pos:column="13">while<condition pos:line="63" pos:column="18">(<expr><call><name pos:line="63" pos:column="19">isspace<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><operator pos:line="63" pos:column="27">(<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">int<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">)<pos:position pos:line="63" pos:column="32"/></operator><operator pos:line="63" pos:column="32">*<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">ptr<pos:position pos:line="63" pos:column="36"/></name></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="38"/></condition>
              <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="15">ptr<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">++<pos:position pos:line="64" pos:column="20"/></operator></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt></block></while>

            <if pos:line="66" pos:column="13">if<condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">curl_strnequal<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="string" pos:line="66" pos:column="31">"type="<pos:position pos:line="66" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="40">ptr<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="45">5<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48"> <block pos:line="66" pos:column="49">{

              <comment type="block" pos:line="68" pos:column="15">/* set type pointer */</comment>
              <expr_stmt><expr><name pos:line="69" pos:column="15">type<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <operator pos:line="69" pos:column="22">&amp;<pos:position pos:line="69" pos:column="27"/></operator><name><name pos:line="69" pos:column="23">ptr<pos:position pos:line="69" pos:column="26"/></name><index pos:line="69" pos:column="26">[<expr><literal type="number" pos:line="69" pos:column="27">5<pos:position pos:line="69" pos:column="28"/></literal></expr>]<pos:position pos:line="69" pos:column="29"/></index></name></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
	    
              <comment type="block" pos:line="71" pos:column="15">/* verify that this is a fine type specifier */</comment>
              <if pos:line="72" pos:column="15">if<condition pos:line="72" pos:column="17">(<expr><literal type="number" pos:line="72" pos:column="18">2<pos:position pos:line="72" pos:column="19"/></literal> <operator pos:line="72" pos:column="20">!=<pos:position pos:line="72" pos:column="22"/></operator> <call><name pos:line="72" pos:column="23">sscanf<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">type<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="36">"%127[^/]/%127[^;,\n]"<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><name pos:line="73" pos:column="30">major<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="37">minor<pos:position pos:line="73" pos:column="42"/></name></expr></argument>)<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="44"/></condition><then pos:line="73" pos:column="44"> <block pos:line="73" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">fprintf<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">stderr<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="33">"Illegally formatted content-type field!\n"<pos:position pos:line="74" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">free<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">contents<pos:position pos:line="75" pos:column="30"/></name></expr></argument>)<pos:position pos:line="75" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">FreeMultiInfo<pos:position pos:line="76" pos:column="30"/></name> <argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">multi_start<pos:position pos:line="76" pos:column="43"/></name></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
                <return pos:line="77" pos:column="17">return <expr><literal type="number" pos:line="77" pos:column="24">2<pos:position pos:line="77" pos:column="25"/></literal></expr>;<pos:position pos:line="77" pos:column="26"/></return> <comment type="block" pos:line="77" pos:column="27">/* illegal content-type syntax! */</comment>
              }<pos:position pos:line="78" pos:column="16"/></block></then></if>
              <comment type="block" pos:line="79" pos:column="15">/* now point beyond the content-type specifier */</comment>
              <expr_stmt><expr><name pos:line="80" pos:column="15">sep<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <operator pos:line="80" pos:column="21">(<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">char<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">*<pos:position pos:line="80" pos:column="28"/></operator><operator pos:line="80" pos:column="28">)<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="29">type<pos:position pos:line="80" pos:column="33"/></name> <operator pos:line="80" pos:column="34">+<pos:position pos:line="80" pos:column="35"/></operator> <call><name pos:line="80" pos:column="36">strlen<pos:position pos:line="80" pos:column="42"/></name><argument_list pos:line="80" pos:column="42">(<argument><expr><name pos:line="80" pos:column="43">major<pos:position pos:line="80" pos:column="48"/></name></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call><operator pos:line="80" pos:column="49">+<pos:position pos:line="80" pos:column="50"/></operator><call><name pos:line="80" pos:column="50">strlen<pos:position pos:line="80" pos:column="56"/></name><argument_list pos:line="80" pos:column="56">(<argument><expr><name pos:line="80" pos:column="57">minor<pos:position pos:line="80" pos:column="62"/></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call><operator pos:line="80" pos:column="63">+<pos:position pos:line="80" pos:column="64"/></operator><literal type="number" pos:line="80" pos:column="64">1<pos:position pos:line="80" pos:column="65"/></literal></expr>;<pos:position pos:line="80" pos:column="66"/></expr_stmt>

              <expr_stmt><expr><operator pos:line="82" pos:column="15">*<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">sep<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator><literal type="number" pos:line="82" pos:column="20">0<pos:position pos:line="82" pos:column="21"/></literal></expr>;<pos:position pos:line="82" pos:column="22"/></expr_stmt> <comment type="block" pos:line="82" pos:column="23">/* zero terminate type string */</comment>

              <expr_stmt><expr><name pos:line="84" pos:column="15">ptr<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">sep<pos:position pos:line="84" pos:column="22"/></name><operator pos:line="84" pos:column="22">+<pos:position pos:line="84" pos:column="23"/></operator><literal type="number" pos:line="84" pos:column="23">1<pos:position pos:line="84" pos:column="24"/></literal></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then>
            <elseif pos:line="86" pos:column="13">else <if pos:line="86" pos:column="18">if<condition pos:line="86" pos:column="20">(<expr><call><name pos:line="86" pos:column="21">curl_strnequal<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><literal type="string" pos:line="86" pos:column="36">"filename="<pos:position pos:line="86" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="49">ptr<pos:position pos:line="86" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="54">9<pos:position pos:line="86" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="57"/></condition><then pos:line="86" pos:column="57"> <block pos:line="86" pos:column="58">{
              <expr_stmt><expr><name pos:line="87" pos:column="15">filename<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <operator pos:line="87" pos:column="26">&amp;<pos:position pos:line="87" pos:column="31"/></operator><name><name pos:line="87" pos:column="27">ptr<pos:position pos:line="87" pos:column="30"/></name><index pos:line="87" pos:column="30">[<expr><literal type="number" pos:line="87" pos:column="31">9<pos:position pos:line="87" pos:column="32"/></literal></expr>]<pos:position pos:line="87" pos:column="33"/></index></name></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
              <expr_stmt><expr><name pos:line="88" pos:column="15">ptr<pos:position pos:line="88" pos:column="18"/></name><operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator><call><name pos:line="88" pos:column="19">strchr<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">filename<pos:position pos:line="88" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">FORM_TYPE_SEPARATOR<pos:position pos:line="88" pos:column="55"/></name></expr></argument>)<pos:position pos:line="88" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="57"/></expr_stmt>
              <if pos:line="89" pos:column="15">if<condition pos:line="89" pos:column="17">(<expr><operator pos:line="89" pos:column="18">!<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="19">ptr<pos:position pos:line="89" pos:column="22"/></name></expr>)<pos:position pos:line="89" pos:column="23"/></condition><then pos:line="89" pos:column="23"> <block pos:line="89" pos:column="24">{
                <expr_stmt><expr><name pos:line="90" pos:column="17">ptr<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">=<pos:position pos:line="90" pos:column="21"/></operator><call><name pos:line="90" pos:column="21">strchr<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name pos:line="90" pos:column="28">filename<pos:position pos:line="90" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="38">FORM_FILE_SEPARATOR<pos:position pos:line="90" pos:column="57"/></name></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="59"/></expr_stmt>
              }<pos:position pos:line="91" pos:column="16"/></block></then></if>
              <if pos:line="92" pos:column="15">if<condition pos:line="92" pos:column="17">(<expr><name pos:line="92" pos:column="18">ptr<pos:position pos:line="92" pos:column="21"/></name></expr>)<pos:position pos:line="92" pos:column="22"/></condition><then pos:line="92" pos:column="22"> <block pos:line="92" pos:column="23">{
                <expr_stmt><expr><operator pos:line="93" pos:column="17">*<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="18">ptr<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">=<pos:position pos:line="93" pos:column="22"/></operator><literal type="number" pos:line="93" pos:column="22">0<pos:position pos:line="93" pos:column="23"/></literal></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt> <comment type="block" pos:line="93" pos:column="25">/* zero terminate */</comment>
                <expr_stmt><expr><name pos:line="94" pos:column="17">ptr<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">++<pos:position pos:line="94" pos:column="22"/></operator></expr>;<pos:position pos:line="94" pos:column="23"/></expr_stmt>
              }<pos:position pos:line="95" pos:column="16"/></block></then></if>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if></elseif>
            <else pos:line="97" pos:column="13">else
              <comment type="block" pos:line="98" pos:column="15">/* confusion, bail out of loop */</comment>
              <block type="pseudo"><break pos:line="99" pos:column="15">break;<pos:position pos:line="99" pos:column="21"/></break></block></else></if>
	  }<pos:position pos:line="100" pos:column="12"/></block></while>
          <comment type="block" pos:line="101" pos:column="11">/* find the following comma */</comment>
          <if pos:line="102" pos:column="11">if<condition pos:line="102" pos:column="13">(<expr><name pos:line="102" pos:column="14">ptr<pos:position pos:line="102" pos:column="17"/></name></expr>)<pos:position pos:line="102" pos:column="18"/></condition><then pos:line="102" pos:column="18">
            <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="13">sep<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator><call><name pos:line="103" pos:column="17">strchr<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">ptr<pos:position pos:line="103" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="29">FORM_FILE_SEPARATOR<pos:position pos:line="103" pos:column="48"/></name></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt></block></then>
          <else pos:line="104" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="13">sep<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">NULL<pos:position pos:line="105" pos:column="21"/></name></expr>;<pos:position pos:line="105" pos:column="22"/></expr_stmt></block></else></if>
	}<pos:position pos:line="106" pos:column="10"/></block></then>
	<else pos:line="107" pos:column="9">else <block pos:line="107" pos:column="14">{
	  <expr_stmt><expr><name pos:line="108" pos:column="11">sep<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator><call><name pos:line="108" pos:column="15">strchr<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><name pos:line="108" pos:column="22">contp<pos:position pos:line="108" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="29">FORM_FILE_SEPARATOR<pos:position pos:line="108" pos:column="48"/></name></expr></argument>)<pos:position pos:line="108" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="109" pos:column="10"/></block></else></if>
	<if pos:line="110" pos:column="9">if<condition pos:line="110" pos:column="11">(<expr><name pos:line="110" pos:column="12">sep<pos:position pos:line="110" pos:column="15"/></name></expr>)<pos:position pos:line="110" pos:column="16"/></condition><then pos:line="110" pos:column="16"> <block pos:line="110" pos:column="17">{
	  <comment type="block" pos:line="111" pos:column="11">/* the next file name starts here */</comment>
	  <expr_stmt><expr><operator pos:line="112" pos:column="11">*<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">sep<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator><literal type="number" pos:line="112" pos:column="17">0<pos:position pos:line="112" pos:column="18"/></literal></expr>;<pos:position pos:line="112" pos:column="19"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="113" pos:column="11">sep<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">++<pos:position pos:line="113" pos:column="16"/></operator></expr>;<pos:position pos:line="113" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="115" pos:column="9">/* if type == NULL curl_formadd takes care of the problem */</comment>

        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><operator pos:line="117" pos:column="13">!<pos:position pos:line="117" pos:column="14"/></operator><call><name pos:line="117" pos:column="14">AddMultiFiles<pos:position pos:line="117" pos:column="27"/></name> <argument_list pos:line="117" pos:column="28">(<argument><expr><name pos:line="117" pos:column="29">contp<pos:position pos:line="117" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="36">type<pos:position pos:line="117" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="42">filename<pos:position pos:line="117" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="52">&amp;<pos:position pos:line="117" pos:column="57"/></operator><name pos:line="117" pos:column="53">multi_start<pos:position pos:line="117" pos:column="64"/></name></expr></argument>,
                            <argument><expr><operator pos:line="118" pos:column="29">&amp;<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="30">multi_current<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="45"/></condition><then pos:line="118" pos:column="45"> <block pos:line="118" pos:column="46">{
          <expr_stmt><expr><call><name pos:line="119" pos:column="11">fprintf<pos:position pos:line="119" pos:column="18"/></name><argument_list pos:line="119" pos:column="18">(<argument><expr><name pos:line="119" pos:column="19">stderr<pos:position pos:line="119" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="27">"Error building form post!\n"<pos:position pos:line="119" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="120" pos:column="11">free<pos:position pos:line="120" pos:column="15"/></name><argument_list pos:line="120" pos:column="15">(<argument><expr><name pos:line="120" pos:column="16">contents<pos:position pos:line="120" pos:column="24"/></name></expr></argument>)<pos:position pos:line="120" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="121" pos:column="11">FreeMultiInfo<pos:position pos:line="121" pos:column="24"/></name> <argument_list pos:line="121" pos:column="25">(<argument><expr><name pos:line="121" pos:column="26">multi_start<pos:position pos:line="121" pos:column="37"/></name></expr></argument>)<pos:position pos:line="121" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="39"/></expr_stmt>
          <return pos:line="122" pos:column="11">return <expr><literal type="number" pos:line="122" pos:column="18">3<pos:position pos:line="122" pos:column="19"/></literal></expr>;<pos:position pos:line="122" pos:column="20"/></return>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="124" pos:column="9">contp<pos:position pos:line="124" pos:column="14"/></name> <operator pos:line="124" pos:column="15">=<pos:position pos:line="124" pos:column="16"/></operator> <name pos:line="124" pos:column="17">sep<pos:position pos:line="124" pos:column="20"/></name></expr>;<pos:position pos:line="124" pos:column="21"/></expr_stmt> <comment type="block" pos:line="124" pos:column="22">/* move the contents pointer to after the separator */</comment>

      }<pos:position pos:line="126" pos:column="8"/></block> while<condition pos:line="126" pos:column="14">(<expr><name pos:line="126" pos:column="15">sep<pos:position pos:line="126" pos:column="18"/></name> <operator pos:line="126" pos:column="19">&amp;&amp;<pos:position pos:line="126" pos:column="29"/></operator> <operator pos:line="126" pos:column="22">*<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="23">sep<pos:position pos:line="126" pos:column="26"/></name></expr>)<pos:position pos:line="126" pos:column="27"/></condition>;<pos:position pos:line="126" pos:column="28"/></do> <comment type="block" pos:line="126" pos:column="29">/* loop if there's another file name */</comment>

      <comment type="block" pos:line="128" pos:column="7">/* now we add the multiple files section */</comment>
      <if pos:line="129" pos:column="7">if <condition pos:line="129" pos:column="10">(<expr><name pos:line="129" pos:column="11">multi_start<pos:position pos:line="129" pos:column="22"/></name></expr>)<pos:position pos:line="129" pos:column="23"/></condition><then pos:line="129" pos:column="23"> <block pos:line="129" pos:column="24">{
        <decl_stmt><decl><type><name><name pos:line="130" pos:column="9">struct<pos:position pos:line="130" pos:column="15"/></name> <name pos:line="130" pos:column="16">curl_forms<pos:position pos:line="130" pos:column="26"/></name></name> <modifier pos:line="130" pos:column="27">*<pos:position pos:line="130" pos:column="28"/></modifier></type><name pos:line="130" pos:column="28">forms<pos:position pos:line="130" pos:column="33"/></name> <init pos:line="130" pos:column="34">= <expr><name pos:line="130" pos:column="36">NULL<pos:position pos:line="130" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="130" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="131" pos:column="9">struct<pos:position pos:line="131" pos:column="15"/></name> <name pos:line="131" pos:column="16">multi_files<pos:position pos:line="131" pos:column="27"/></name></name> <modifier pos:line="131" pos:column="28">*<pos:position pos:line="131" pos:column="29"/></modifier></type><name pos:line="131" pos:column="29">ptr<pos:position pos:line="131" pos:column="32"/></name> <init pos:line="131" pos:column="33">= <expr><name pos:line="131" pos:column="35">multi_start<pos:position pos:line="131" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="131" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="132" pos:column="9">unsigned<pos:position pos:line="132" pos:column="17"/></name> <name pos:line="132" pos:column="18">int<pos:position pos:line="132" pos:column="21"/></name></type> <name pos:line="132" pos:column="22">i<pos:position pos:line="132" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="132" pos:column="25">count<pos:position pos:line="132" pos:column="30"/></name> <init pos:line="132" pos:column="31">= <expr><literal type="number" pos:line="132" pos:column="33">0<pos:position pos:line="132" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="132" pos:column="35"/></decl_stmt>
        <while pos:line="133" pos:column="9">while <condition pos:line="133" pos:column="15">(<expr><name pos:line="133" pos:column="16">ptr<pos:position pos:line="133" pos:column="19"/></name></expr>)<pos:position pos:line="133" pos:column="20"/></condition> <block pos:line="133" pos:column="21">{
          <expr_stmt><expr><name pos:line="134" pos:column="11">ptr<pos:position pos:line="134" pos:column="14"/></name> <operator pos:line="134" pos:column="15">=<pos:position pos:line="134" pos:column="16"/></operator> <name><name pos:line="134" pos:column="17">ptr<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">-&gt;<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="22">next<pos:position pos:line="134" pos:column="26"/></name></name></expr>;<pos:position pos:line="134" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="135" pos:column="11">++<pos:position pos:line="135" pos:column="13"/></operator><name pos:line="135" pos:column="13">count<pos:position pos:line="135" pos:column="18"/></name></expr>;<pos:position pos:line="135" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="136" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="137" pos:column="9">forms<pos:position pos:line="137" pos:column="14"/></name> <operator pos:line="137" pos:column="15">=<pos:position pos:line="137" pos:column="16"/></operator>
          <operator pos:line="138" pos:column="11">(<pos:position pos:line="138" pos:column="12"/></operator>struct <name pos:line="138" pos:column="19">curl_forms<pos:position pos:line="138" pos:column="29"/></name> <operator pos:line="138" pos:column="30">*<pos:position pos:line="138" pos:column="31"/></operator><operator pos:line="138" pos:column="31">)<pos:position pos:line="138" pos:column="32"/></operator><call><name pos:line="138" pos:column="32">malloc<pos:position pos:line="138" pos:column="38"/></name><argument_list pos:line="138" pos:column="38">(<argument><expr><operator pos:line="138" pos:column="39">(<pos:position pos:line="138" pos:column="40"/></operator><name pos:line="138" pos:column="40">count<pos:position pos:line="138" pos:column="45"/></name><operator pos:line="138" pos:column="45">+<pos:position pos:line="138" pos:column="46"/></operator><literal type="number" pos:line="138" pos:column="46">1<pos:position pos:line="138" pos:column="47"/></literal><operator pos:line="138" pos:column="47">)<pos:position pos:line="138" pos:column="48"/></operator><operator pos:line="138" pos:column="48">*<pos:position pos:line="138" pos:column="49"/></operator><sizeof pos:line="138" pos:column="49">sizeof<argument_list pos:line="138" pos:column="55">(<argument><expr pos:line="138" pos:column="56">struct <name pos:line="138" pos:column="63">curl_forms<pos:position pos:line="138" pos:column="73"/></name></expr></argument>)<pos:position pos:line="138" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="138" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="76"/></expr_stmt>
        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><operator pos:line="139" pos:column="13">!<pos:position pos:line="139" pos:column="14"/></operator><name pos:line="139" pos:column="14">forms<pos:position pos:line="139" pos:column="19"/></name></expr>)<pos:position pos:line="139" pos:column="20"/></condition><then pos:line="139" pos:column="20">
        <block pos:line="140" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="141" pos:column="11">fprintf<pos:position pos:line="141" pos:column="18"/></name><argument_list pos:line="141" pos:column="18">(<argument><expr><name pos:line="141" pos:column="19">stderr<pos:position pos:line="141" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="27">"Error building form post!\n"<pos:position pos:line="141" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="142" pos:column="11">free<pos:position pos:line="142" pos:column="15"/></name><argument_list pos:line="142" pos:column="15">(<argument><expr><name pos:line="142" pos:column="16">contents<pos:position pos:line="142" pos:column="24"/></name></expr></argument>)<pos:position pos:line="142" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="143" pos:column="11">FreeMultiInfo<pos:position pos:line="143" pos:column="24"/></name> <argument_list pos:line="143" pos:column="25">(<argument><expr><name pos:line="143" pos:column="26">multi_start<pos:position pos:line="143" pos:column="37"/></name></expr></argument>)<pos:position pos:line="143" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="39"/></expr_stmt>
          <return pos:line="144" pos:column="11">return <expr><literal type="number" pos:line="144" pos:column="18">4<pos:position pos:line="144" pos:column="19"/></literal></expr>;<pos:position pos:line="144" pos:column="20"/></return>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if>
        <for pos:line="146" pos:column="9">for <control pos:line="146" pos:column="13">(<init><expr><name pos:line="146" pos:column="14">i<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <literal type="number" pos:line="146" pos:column="18">0<pos:position pos:line="146" pos:column="19"/></literal></expr><operator pos:line="146" pos:column="19">,<pos:position pos:line="146" pos:column="20"/></operator> <expr><name pos:line="146" pos:column="21">ptr<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">=<pos:position pos:line="146" pos:column="26"/></operator> <name pos:line="146" pos:column="27">multi_start<pos:position pos:line="146" pos:column="38"/></name></expr>;<pos:position pos:line="146" pos:column="39"/></init> <condition><expr><name pos:line="146" pos:column="40">i<pos:position pos:line="146" pos:column="41"/></name> <operator pos:line="146" pos:column="42">&lt;<pos:position pos:line="146" pos:column="46"/></operator> <name pos:line="146" pos:column="44">count<pos:position pos:line="146" pos:column="49"/></name></expr>;<pos:position pos:line="146" pos:column="50"/></condition> <incr><expr><operator pos:line="146" pos:column="51">++<pos:position pos:line="146" pos:column="53"/></operator><name pos:line="146" pos:column="53">i<pos:position pos:line="146" pos:column="54"/></name></expr><operator pos:line="146" pos:column="54">,<pos:position pos:line="146" pos:column="55"/></operator> <expr><name pos:line="146" pos:column="56">ptr<pos:position pos:line="146" pos:column="59"/></name> <operator pos:line="146" pos:column="60">=<pos:position pos:line="146" pos:column="61"/></operator> <name><name pos:line="146" pos:column="62">ptr<pos:position pos:line="146" pos:column="65"/></name><operator pos:line="146" pos:column="65">-&gt;<pos:position pos:line="146" pos:column="70"/></operator><name pos:line="146" pos:column="67">next<pos:position pos:line="146" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="146" pos:column="72"/></control>
        <block pos:line="147" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="148" pos:column="11">forms<pos:position pos:line="148" pos:column="16"/></name><index pos:line="148" pos:column="16">[<expr><name pos:line="148" pos:column="17">i<pos:position pos:line="148" pos:column="18"/></name></expr>]<pos:position pos:line="148" pos:column="19"/></index></name><operator pos:line="148" pos:column="19">.<pos:position pos:line="148" pos:column="20"/></operator><name pos:line="148" pos:column="20">option<pos:position pos:line="148" pos:column="26"/></name> <operator pos:line="148" pos:column="27">=<pos:position pos:line="148" pos:column="28"/></operator> <name><name pos:line="148" pos:column="29">ptr<pos:position pos:line="148" pos:column="32"/></name><operator pos:line="148" pos:column="32">-&gt;<pos:position pos:line="148" pos:column="37"/></operator><name pos:line="148" pos:column="34">form<pos:position pos:line="148" pos:column="38"/></name><operator pos:line="148" pos:column="38">.<pos:position pos:line="148" pos:column="39"/></operator><name pos:line="148" pos:column="39">option<pos:position pos:line="148" pos:column="45"/></name></name></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="149" pos:column="11">forms<pos:position pos:line="149" pos:column="16"/></name><index pos:line="149" pos:column="16">[<expr><name pos:line="149" pos:column="17">i<pos:position pos:line="149" pos:column="18"/></name></expr>]<pos:position pos:line="149" pos:column="19"/></index></name><operator pos:line="149" pos:column="19">.<pos:position pos:line="149" pos:column="20"/></operator><name pos:line="149" pos:column="20">value<pos:position pos:line="149" pos:column="25"/></name> <operator pos:line="149" pos:column="26">=<pos:position pos:line="149" pos:column="27"/></operator> <name><name pos:line="149" pos:column="28">ptr<pos:position pos:line="149" pos:column="31"/></name><operator pos:line="149" pos:column="31">-&gt;<pos:position pos:line="149" pos:column="36"/></operator><name pos:line="149" pos:column="33">form<pos:position pos:line="149" pos:column="37"/></name><operator pos:line="149" pos:column="37">.<pos:position pos:line="149" pos:column="38"/></operator><name pos:line="149" pos:column="38">value<pos:position pos:line="149" pos:column="43"/></name></name></expr>;<pos:position pos:line="149" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></for>
        <expr_stmt><expr><name><name pos:line="151" pos:column="9">forms<pos:position pos:line="151" pos:column="14"/></name><index pos:line="151" pos:column="14">[<expr><name pos:line="151" pos:column="15">count<pos:position pos:line="151" pos:column="20"/></name></expr>]<pos:position pos:line="151" pos:column="21"/></index></name><operator pos:line="151" pos:column="21">.<pos:position pos:line="151" pos:column="22"/></operator><name pos:line="151" pos:column="22">option<pos:position pos:line="151" pos:column="28"/></name> <operator pos:line="151" pos:column="29">=<pos:position pos:line="151" pos:column="30"/></operator> <name pos:line="151" pos:column="31">CURLFORM_END<pos:position pos:line="151" pos:column="43"/></name></expr>;<pos:position pos:line="151" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="152" pos:column="9">FreeMultiInfo<pos:position pos:line="152" pos:column="22"/></name> <argument_list pos:line="152" pos:column="23">(<argument><expr><name pos:line="152" pos:column="24">multi_start<pos:position pos:line="152" pos:column="35"/></name></expr></argument>)<pos:position pos:line="152" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="37"/></expr_stmt>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><call><name pos:line="153" pos:column="13">curl_formadd<pos:position pos:line="153" pos:column="25"/></name> <argument_list pos:line="153" pos:column="26">(<argument><expr><name pos:line="153" pos:column="27">httppost<pos:position pos:line="153" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="37">last_post<pos:position pos:line="153" pos:column="46"/></name></expr></argument>,
                          <argument><expr><name pos:line="154" pos:column="27">CURLFORM_COPYNAME<pos:position pos:line="154" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="46">name<pos:position pos:line="154" pos:column="50"/></name></expr></argument>,
                          <argument><expr><name pos:line="155" pos:column="27">CURLFORM_ARRAY<pos:position pos:line="155" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="43">forms<pos:position pos:line="155" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="50">CURLFORM_END<pos:position pos:line="155" pos:column="62"/></name></expr></argument>)<pos:position pos:line="155" pos:column="63"/></argument_list></call> <operator pos:line="155" pos:column="64">!=<pos:position pos:line="155" pos:column="66"/></operator> <literal type="number" pos:line="155" pos:column="67">0<pos:position pos:line="155" pos:column="68"/></literal></expr>)<pos:position pos:line="155" pos:column="69"/></condition><then pos:line="155" pos:column="69"> <block pos:line="155" pos:column="70">{
          <expr_stmt><expr><call><name pos:line="156" pos:column="11">fprintf<pos:position pos:line="156" pos:column="18"/></name><argument_list pos:line="156" pos:column="18">(<argument><expr><name pos:line="156" pos:column="19">stderr<pos:position pos:line="156" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="27">"curl_formadd failed!\n"<pos:position pos:line="156" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="157" pos:column="11">free<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><name pos:line="157" pos:column="16">forms<pos:position pos:line="157" pos:column="21"/></name></expr></argument>)<pos:position pos:line="157" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="158" pos:column="11">free<pos:position pos:line="158" pos:column="15"/></name><argument_list pos:line="158" pos:column="15">(<argument><expr><name pos:line="158" pos:column="16">contents<pos:position pos:line="158" pos:column="24"/></name></expr></argument>)<pos:position pos:line="158" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="26"/></expr_stmt>
          <return pos:line="159" pos:column="11">return <expr><literal type="number" pos:line="159" pos:column="18">5<pos:position pos:line="159" pos:column="19"/></literal></expr>;<pos:position pos:line="159" pos:column="20"/></return>
        }<pos:position pos:line="160" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">free<pos:position pos:line="161" pos:column="13"/></name><argument_list pos:line="161" pos:column="13">(<argument><expr><name pos:line="161" pos:column="14">forms<pos:position pos:line="161" pos:column="19"/></name></expr></argument>)<pos:position pos:line="161" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="162" pos:column="8"/></block></then></if>
    }<pos:position pos:line="163" pos:column="6"/></block></then>
    <else pos:line="164" pos:column="5">else <block pos:line="164" pos:column="10">{
      <if pos:line="165" pos:column="7">if<condition pos:line="165" pos:column="9">( <expr><name><name pos:line="165" pos:column="11">contp<pos:position pos:line="165" pos:column="16"/></name><index pos:line="165" pos:column="16">[<expr><literal type="number" pos:line="165" pos:column="17">0<pos:position pos:line="165" pos:column="18"/></literal></expr>]<pos:position pos:line="165" pos:column="19"/></index></name><operator pos:line="165" pos:column="19">==<pos:position pos:line="165" pos:column="21"/></operator><literal type="char" pos:line="165" pos:column="21">'&lt;'<pos:position pos:line="165" pos:column="27"/></literal></expr> )<pos:position pos:line="165" pos:column="26"/></condition><then pos:line="165" pos:column="26"> <block pos:line="165" pos:column="27">{
        <if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><call><name pos:line="166" pos:column="13">curl_formadd<pos:position pos:line="166" pos:column="25"/></name> <argument_list pos:line="166" pos:column="26">(<argument><expr><name pos:line="166" pos:column="27">httppost<pos:position pos:line="166" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="37">last_post<pos:position pos:line="166" pos:column="46"/></name></expr></argument>,
                          <argument><expr><name pos:line="167" pos:column="27">CURLFORM_COPYNAME<pos:position pos:line="167" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="46">name<pos:position pos:line="167" pos:column="50"/></name></expr></argument>,
                          <argument><expr><name pos:line="168" pos:column="27">CURLFORM_FILECONTENT<pos:position pos:line="168" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="49">contp<pos:position pos:line="168" pos:column="54"/></name><operator pos:line="168" pos:column="54">+<pos:position pos:line="168" pos:column="55"/></operator><literal type="number" pos:line="168" pos:column="55">1<pos:position pos:line="168" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="58">CURLFORM_END<pos:position pos:line="168" pos:column="70"/></name></expr></argument>)<pos:position pos:line="168" pos:column="71"/></argument_list></call> <operator pos:line="168" pos:column="72">!=<pos:position pos:line="168" pos:column="74"/></operator> <literal type="number" pos:line="168" pos:column="75">0<pos:position pos:line="168" pos:column="76"/></literal></expr>)<pos:position pos:line="168" pos:column="77"/></condition><then pos:line="168" pos:column="77"> <block pos:line="168" pos:column="78">{
          <expr_stmt><expr><call><name pos:line="169" pos:column="11">fprintf<pos:position pos:line="169" pos:column="18"/></name><argument_list pos:line="169" pos:column="18">(<argument><expr><name pos:line="169" pos:column="19">stderr<pos:position pos:line="169" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="27">"curl_formadd failed!\n"<pos:position pos:line="169" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="170" pos:column="11">free<pos:position pos:line="170" pos:column="15"/></name><argument_list pos:line="170" pos:column="15">(<argument><expr><name pos:line="170" pos:column="16">contents<pos:position pos:line="170" pos:column="24"/></name></expr></argument>)<pos:position pos:line="170" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="26"/></expr_stmt>
          <return pos:line="171" pos:column="11">return <expr><literal type="number" pos:line="171" pos:column="18">6<pos:position pos:line="171" pos:column="19"/></literal></expr>;<pos:position pos:line="171" pos:column="20"/></return>
        }<pos:position pos:line="172" pos:column="10"/></block></then></if>
      }<pos:position pos:line="173" pos:column="8"/></block></then>
      <else pos:line="174" pos:column="7">else <block pos:line="174" pos:column="12">{
        <if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><call><name pos:line="175" pos:column="13">curl_formadd<pos:position pos:line="175" pos:column="25"/></name> <argument_list pos:line="175" pos:column="26">(<argument><expr><name pos:line="175" pos:column="27">httppost<pos:position pos:line="175" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="37">last_post<pos:position pos:line="175" pos:column="46"/></name></expr></argument>,
                          <argument><expr><name pos:line="176" pos:column="27">CURLFORM_COPYNAME<pos:position pos:line="176" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="46">name<pos:position pos:line="176" pos:column="50"/></name></expr></argument>,
                          <argument><expr><name pos:line="177" pos:column="27">CURLFORM_COPYCONTENTS<pos:position pos:line="177" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="50">contp<pos:position pos:line="177" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="57">CURLFORM_END<pos:position pos:line="177" pos:column="69"/></name></expr></argument>)<pos:position pos:line="177" pos:column="70"/></argument_list></call> <operator pos:line="177" pos:column="71">!=<pos:position pos:line="177" pos:column="73"/></operator> <literal type="number" pos:line="177" pos:column="74">0<pos:position pos:line="177" pos:column="75"/></literal></expr>)<pos:position pos:line="177" pos:column="76"/></condition><then pos:line="177" pos:column="76"> <block pos:line="177" pos:column="77">{
          <expr_stmt><expr><call><name pos:line="178" pos:column="11">fprintf<pos:position pos:line="178" pos:column="18"/></name><argument_list pos:line="178" pos:column="18">(<argument><expr><name pos:line="178" pos:column="19">stderr<pos:position pos:line="178" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="27">"curl_formadd failed!\n"<pos:position pos:line="178" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="53"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="179" pos:column="11">free<pos:position pos:line="179" pos:column="15"/></name><argument_list pos:line="179" pos:column="15">(<argument><expr><name pos:line="179" pos:column="16">contents<pos:position pos:line="179" pos:column="24"/></name></expr></argument>)<pos:position pos:line="179" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="26"/></expr_stmt>
          <return pos:line="180" pos:column="11">return <expr><literal type="number" pos:line="180" pos:column="18">7<pos:position pos:line="180" pos:column="19"/></literal></expr>;<pos:position pos:line="180" pos:column="20"/></return>
        }<pos:position pos:line="181" pos:column="10"/></block></then></if>
      }<pos:position pos:line="182" pos:column="8"/></block></else></if>
    }<pos:position pos:line="183" pos:column="6"/></block></else></if>

  }<pos:position pos:line="185" pos:column="4"/></block></then>
  <else pos:line="186" pos:column="3">else <block pos:line="186" pos:column="8">{
    <expr_stmt><expr><call><name pos:line="187" pos:column="5">fprintf<pos:position pos:line="187" pos:column="12"/></name><argument_list pos:line="187" pos:column="12">(<argument><expr><name pos:line="187" pos:column="13">stderr<pos:position pos:line="187" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="21">"Illegally formatted input field!\n"<pos:position pos:line="187" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="188" pos:column="5">free<pos:position pos:line="188" pos:column="9"/></name><argument_list pos:line="188" pos:column="9">(<argument><expr><name pos:line="188" pos:column="10">contents<pos:position pos:line="188" pos:column="18"/></name></expr></argument>)<pos:position pos:line="188" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="20"/></expr_stmt>
    <return pos:line="189" pos:column="5">return <expr><literal type="number" pos:line="189" pos:column="12">1<pos:position pos:line="189" pos:column="13"/></literal></expr>;<pos:position pos:line="189" pos:column="14"/></return>
  }<pos:position pos:line="190" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="191" pos:column="3">free<pos:position pos:line="191" pos:column="7"/></name><argument_list pos:line="191" pos:column="7">(<argument><expr><name pos:line="191" pos:column="8">contents<pos:position pos:line="191" pos:column="16"/></name></expr></argument>)<pos:position pos:line="191" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="18"/></expr_stmt>
  <return pos:line="192" pos:column="3">return <expr><literal type="number" pos:line="192" pos:column="10">0<pos:position pos:line="192" pos:column="11"/></literal></expr>;<pos:position pos:line="192" pos:column="12"/></return>
}<pos:position pos:line="193" pos:column="2"/></block></function></unit>

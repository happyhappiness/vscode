<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">match_url<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">filename<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">URLGlob<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">glob<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">buf<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><name pos:line="2" pos:column="15">glob_buffer<pos:position pos:line="2" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">URLPattern<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">pat<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">filename<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">!=<pos:position pos:line="6" pos:column="22"/></operator> <literal type="char" pos:line="6" pos:column="23">'\0'<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition> <block pos:line="6" pos:column="29">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">filename<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <literal type="char" pos:line="7" pos:column="22">'#'<pos:position pos:line="7" pos:column="25"/></literal></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">!<pos:position pos:line="8" pos:column="12"/></operator><call><name pos:line="8" pos:column="12">isdigit<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">int<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">++<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">filename<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call> <operator pos:line="8" pos:column="38">||<pos:position pos:line="8" pos:column="40"/></operator>
	  <operator pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">filename<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <literal type="char" pos:line="9" pos:column="24">'0'<pos:position pos:line="9" pos:column="27"/></literal></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28"> <block pos:line="9" pos:column="29">{		<comment type="block" pos:line="9" pos:column="41">/* only '#1' ... '#9' allowed */</comment>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">printf<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"illegal matching expression\n"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">exit<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="12" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">filename<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">-<pos:position pos:line="13" pos:column="22"/></operator> <literal type="char" pos:line="13" pos:column="23">'1'<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">i<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal> <operator pos:line="14" pos:column="17">&gt;<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="19">glob<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">.<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">size<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">/<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">2<pos:position pos:line="14" pos:column="32"/></literal></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">printf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"match against nonexisting pattern\n"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="18" pos:column="7">pat<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name><name pos:line="18" pos:column="13">glob<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">pattern<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><name pos:line="18" pos:column="26">i<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
      <switch pos:line="19" pos:column="7">switch <condition pos:line="19" pos:column="14">(<expr><name><name pos:line="19" pos:column="15">pat<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">type<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition> <block pos:line="19" pos:column="25">{
      <case pos:line="20" pos:column="7">case <expr><name pos:line="20" pos:column="12">UPTSet<pos:position pos:line="20" pos:column="18"/></name></expr>:<pos:position pos:line="20" pos:column="19"/></case>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">strcpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">buf<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="21">pat<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">content<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">Set<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">elements<pos:position pos:line="21" pos:column="45"/></name><index pos:line="21" pos:column="45">[<expr><name><name pos:line="21" pos:column="46">pat<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">.<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">content<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">.<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">Set<pos:position pos:line="21" pos:column="61"/></name><operator pos:line="21" pos:column="61">.<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="62">ptr_s<pos:position pos:line="21" pos:column="67"/></name></name></expr>]<pos:position pos:line="21" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">buf<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">+=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">strlen<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">pat<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">content<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">Set<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">elements<pos:position pos:line="22" pos:column="47"/></name><index pos:line="22" pos:column="47">[<expr><name><name pos:line="22" pos:column="48">pat<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">.<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="52">content<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">.<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="60">Set<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">ptr_s<pos:position pos:line="22" pos:column="69"/></name></name></expr>]<pos:position pos:line="22" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
	<break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>
      <case pos:line="24" pos:column="7">case <expr><name pos:line="24" pos:column="12">UPTCharRange<pos:position pos:line="24" pos:column="24"/></name></expr>:<pos:position pos:line="24" pos:column="25"/></case>
	<expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">buf<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">pat<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">content<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">CharRange<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">ptr_c<pos:position pos:line="25" pos:column="45"/></name></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
	<break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break>
      <case pos:line="27" pos:column="7">case <expr><name pos:line="27" pos:column="12">UPTNumRange<pos:position pos:line="27" pos:column="23"/></name></expr>:<pos:position pos:line="27" pos:column="24"/></case>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">sprintf<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">buf<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="22">"%0*d"<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="30">pat<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">content<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">NumRange<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">.<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="51">padlength<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="62">pat<pos:position pos:line="28" pos:column="65"/></name><operator pos:line="28" pos:column="65">.<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="66">content<pos:position pos:line="28" pos:column="73"/></name><operator pos:line="28" pos:column="73">.<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="74">NumRange<pos:position pos:line="28" pos:column="82"/></name><operator pos:line="28" pos:column="82">.<pos:position pos:line="28" pos:column="83"/></operator><name pos:line="28" pos:column="83">ptr_n<pos:position pos:line="28" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">buf<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">+=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">strlen<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">buf<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	<break pos:line="30" pos:column="9">break;<pos:position pos:line="30" pos:column="15"/></break>
      <default pos:line="31" pos:column="7">default:<pos:position pos:line="31" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">printf<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"internal error: invalid pattern type (%d)\n"<pos:position pos:line="32" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="63">pat<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">.<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="67">type<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">exit<pos:position pos:line="33" pos:column="13"/></name> <argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">CURLE_FAILED_INIT<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></switch>
      <expr_stmt><expr><operator pos:line="35" pos:column="7">++<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">filename<pos:position pos:line="35" pos:column="17"/></name></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="7">*<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">buf<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">++<pos:position pos:line="38" pos:column="13"/></operator> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <operator pos:line="38" pos:column="16">*<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">filename<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">++<pos:position pos:line="38" pos:column="27"/></operator></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt></block></else></if>
  }<pos:position pos:line="39" pos:column="4"/></block></while>
  <expr_stmt><expr><operator pos:line="40" pos:column="3">*<pos:position pos:line="40" pos:column="4"/></operator><name pos:line="40" pos:column="4">buf<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <literal type="char" pos:line="40" pos:column="10">'\0'<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
  <return pos:line="41" pos:column="3">return <expr><call><name pos:line="41" pos:column="10">strdup<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">glob_buffer<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_function_1357.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">checkpasswd<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">kind<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="43">/* for what purpose */</comment>
                        <parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">userpwd<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <comment type="block" pos:line="2" pos:column="41">/* pointer to allocated string */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">strchr<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><operator pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">userpwd<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="32">':'<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">ptr<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11"> <block pos:line="5" pos:column="12">{
    <comment type="block" pos:line="6" pos:column="5">/* no password present, prompt for one */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">passwd<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">256<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name><init pos:line="7" pos:column="21">=<expr><literal type="string" pos:line="7" pos:column="22">""<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">prompt<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">256<pos:position pos:line="8" pos:column="20"/></literal></expr>]<pos:position pos:line="8" pos:column="21"/></index></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">passwdlen<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">userlen<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name pos:line="10" pos:column="22">strlen<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">userpwd<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">passptr<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* build a nice-looking prompt */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_msnprintf<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">prompt<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">prompt<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></sizeof></expr></argument>,
                   <argument><expr><literal type="string" pos:line="15" pos:column="20">"Enter %s password for user '%s':"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>,
                   <argument><expr><name pos:line="16" pos:column="20">kind<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">userpwd<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* get password */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">getpass_r<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">prompt<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">passwd<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="31">sizeof<argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">passwd<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">passwdlen<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">strlen<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">passwd<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* extend the allocated memory area to fit the password too */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">passptr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">realloc<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><operator pos:line="23" pos:column="23">*<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">userpwd<pos:position pos:line="23" pos:column="31"/></name></expr></argument>,
                      <argument><expr><name pos:line="24" pos:column="23">passwdlen<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">+<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">1<pos:position pos:line="24" pos:column="36"/></literal> <operator pos:line="24" pos:column="37">+<pos:position pos:line="24" pos:column="38"/></operator> <comment type="block" pos:line="24" pos:column="39">/* an extra for the colon */</comment>
                      <name pos:line="25" pos:column="23">userlen<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">+<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>   <comment type="block" pos:line="25" pos:column="39">/* an extra for the zero */</comment>

    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">passptr<pos:position pos:line="27" pos:column="15"/></name></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
      <comment type="block" pos:line="28" pos:column="7">/* append the password separated with a colon */</comment>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">passptr<pos:position pos:line="29" pos:column="14"/></name><index pos:line="29" pos:column="14">[<expr><name pos:line="29" pos:column="15">userlen<pos:position pos:line="29" pos:column="22"/></name></expr>]<pos:position pos:line="29" pos:column="23"/></index></name><operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator><literal type="char" pos:line="29" pos:column="24">':'<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">memcpy<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><operator pos:line="30" pos:column="14">&amp;<pos:position pos:line="30" pos:column="19"/></operator><name><name pos:line="30" pos:column="15">passptr<pos:position pos:line="30" pos:column="22"/></name><index pos:line="30" pos:column="22">[<expr><name pos:line="30" pos:column="23">userlen<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">+<pos:position pos:line="30" pos:column="31"/></operator><literal type="number" pos:line="30" pos:column="31">1<pos:position pos:line="30" pos:column="32"/></literal></expr>]<pos:position pos:line="30" pos:column="33"/></index></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">passwd<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">passwdlen<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">+<pos:position pos:line="30" pos:column="53"/></operator><literal type="number" pos:line="30" pos:column="53">1<pos:position pos:line="30" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="31" pos:column="7">*<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">userpwd<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">passptr<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

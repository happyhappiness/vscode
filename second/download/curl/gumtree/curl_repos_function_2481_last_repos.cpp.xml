<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2481_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">OSStatus<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">SocketWrite<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">SSLConnectionRef<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">connection<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">void<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">size_t<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">dataLength<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>  <comment type="block" pos:line="3" pos:column="50">/* IN/OUT */</comment>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">bytesSent<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <comment type="block" pos:line="6" pos:column="3">/*int sock = *(int *)connection;*/</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ssl_connect_data<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">connssl<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><operator pos:line="7" pos:column="38">(<pos:position pos:line="7" pos:column="39"/></operator>struct <name pos:line="7" pos:column="46">ssl_connect_data<pos:position pos:line="7" pos:column="62"/></name> <operator pos:line="7" pos:column="63">*<pos:position pos:line="7" pos:column="64"/></operator><operator pos:line="7" pos:column="64">)<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="65">connection<pos:position pos:line="7" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">sock<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name><name pos:line="8" pos:column="14">BACKEND<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">ssl_sockfd<pos:position pos:line="8" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">ssize_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">length<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">dataLen<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><operator pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">dataLength<pos:position pos:line="10" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">UInt8<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">dataPtr<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">UInt8<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">*<pos:position pos:line="11" pos:column="34"/></operator><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">data<pos:position pos:line="11" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">OSStatus<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">ortn<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">theErr<pos:position pos:line="13" pos:column="13"/></name></decl>;<pos:position pos:line="13" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">dataLength<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

  <do pos:line="17" pos:column="3">do <block pos:line="17" pos:column="6">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">length<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">write<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">sock<pos:position pos:line="18" pos:column="24"/></name></expr></argument>,
                   <argument><expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">char<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">dataPtr<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">+<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">bytesSent<pos:position pos:line="19" pos:column="47"/></name></expr></argument>,
                   <argument><expr><name pos:line="20" pos:column="20">dataLen<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">-<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">bytesSent<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block> while<condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">length<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&gt;<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">&amp;&amp;<pos:position pos:line="21" pos:column="34"/></operator>
           <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">bytesSent<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">+=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">length<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">)<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">&lt;<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="38">dataLen<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator></expr> )<pos:position pos:line="22" pos:column="48"/></condition>;<pos:position pos:line="22" pos:column="49"/></do>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name pos:line="24" pos:column="6">length<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">&lt;=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">theErr<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">errno<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">theErr<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">==<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">EAGAIN<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25"> <block pos:line="26" pos:column="26">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">ortn<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">errSSLWouldBlock<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">BACKEND<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">ssl_direction<pos:position pos:line="28" pos:column="29"/></name></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <literal type="boolean" pos:line="28" pos:column="32">true<pos:position pos:line="28" pos:column="36"/></literal></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">ortn<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">ioErr<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>
  }<pos:position pos:line="33" pos:column="4"/></block></then>
  <else pos:line="34" pos:column="3">else <block pos:line="34" pos:column="8">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">ortn<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <name pos:line="35" pos:column="12">noErr<pos:position pos:line="35" pos:column="17"/></name></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>
  <expr_stmt><expr><operator pos:line="37" pos:column="3">*<pos:position pos:line="37" pos:column="4"/></operator><name pos:line="37" pos:column="4">dataLength<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">bytesSent<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">ortn<pos:position pos:line="38" pos:column="14"/></name></expr>;<pos:position pos:line="38" pos:column="15"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1364_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_blockread_all<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">connectdata<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">conn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="50">/* connection data */</comment>
                       <parameter><decl><type><name pos:line="2" pos:column="24">curl_socket_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">sockfd<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,     <comment type="block" pos:line="2" pos:column="50">/* read from this socket */</comment>
                       <parameter><decl><type><name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">buf<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>,                <comment type="block" pos:line="3" pos:column="50">/* store read data here */</comment>
                       <parameter><decl><type><name pos:line="4" pos:column="24">ssize_t<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">buffersize<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>,       <comment type="block" pos:line="4" pos:column="50">/* max amount to read */</comment>
                       <parameter><decl><type><name pos:line="5" pos:column="24">ssize_t<pos:position pos:line="5" pos:column="31"/></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">n<pos:position pos:line="5" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="35"/></parameter_list>               <comment type="block" pos:line="5" pos:column="50">/* amount bytes read */</comment>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">nread<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">allread<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">result<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">time_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">timeleft<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">n<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <literal type="number" pos:line="11" pos:column="8">0<pos:position pos:line="11" pos:column="9"/></literal></expr>;<pos:position pos:line="11" pos:column="10"/></expr_stmt>
  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init pos:line="12" pos:column="7">;<pos:position pos:line="12" pos:column="8"/></init><condition pos:line="12" pos:column="8">;<pos:position pos:line="12" pos:column="9"/></condition><incr/>)<pos:position pos:line="12" pos:column="10"/></control> <block pos:line="12" pos:column="11">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">timeleft<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">Curl_timeleft<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name><name pos:line="13" pos:column="30">conn<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">data<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">TRUE<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">timeleft<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
      <comment type="block" pos:line="15" pos:column="7">/* we already got the timeout */</comment>
      <expr_stmt><expr><name pos:line="16" pos:column="7">result<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><call><name pos:line="19" pos:column="8">SOCKET_READABLE<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">sockfd<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">timeleft<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call> <operator pos:line="19" pos:column="42">&lt;=<pos:position pos:line="19" pos:column="47"/></operator> <literal type="number" pos:line="19" pos:column="45">0<pos:position pos:line="19" pos:column="46"/></literal></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">result<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">~<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">CURLE_OK<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">result<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">Curl_read_plain<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">sockfd<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">buf<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">buffersize<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="55">&amp;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="56">nread<pos:position pos:line="23" pos:column="61"/></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">CURLE_AGAIN<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">==<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">result<pos:position pos:line="24" pos:column="29"/></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">result<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15">
      <block type="pseudo"><break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break></block></then></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><name pos:line="29" pos:column="8">buffersize<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">==<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">nread<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
      <expr_stmt><expr><name pos:line="30" pos:column="7">allread<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">+=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">nread<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="31" pos:column="7">*<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">n<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">allread<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">result<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">CURLE_OK<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">!<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">nread<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15"> <block pos:line="35" pos:column="16">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <operator pos:line="36" pos:column="16">~<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">CURLE_OK<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">buffersize<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">-=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">nread<pos:position pos:line="40" pos:column="24"/></name></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">buf<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">+=<pos:position pos:line="41" pos:column="11"/></operator> <name pos:line="41" pos:column="12">nread<pos:position pos:line="41" pos:column="17"/></name></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">allread<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">+=<pos:position pos:line="42" pos:column="15"/></operator> <name pos:line="42" pos:column="16">nread<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></for>
  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

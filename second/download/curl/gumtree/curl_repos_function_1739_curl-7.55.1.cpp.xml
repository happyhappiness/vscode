<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1739_curl-7.55.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_loadhostpairs<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">Curl_easy<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">data<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">curl_slist<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">hostp<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">hostname<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><literal type="number" pos:line="4" pos:column="17">256<pos:position pos:line="4" pos:column="20"/></literal></expr>]<pos:position pos:line="4" pos:column="21"/></index></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">address<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">256<pos:position pos:line="5" pos:column="19"/></literal></expr>]<pos:position pos:line="5" pos:column="20"/></index></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">port<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">hostp<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name><name pos:line="8" pos:column="15">data<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">change<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">resolve<pos:position pos:line="8" pos:column="35"/></name></name></expr>;<pos:position pos:line="8" pos:column="36"/></init> <condition><expr><name pos:line="8" pos:column="37">hostp<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></condition> <incr><expr><name pos:line="8" pos:column="44">hostp<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">=<pos:position pos:line="8" pos:column="51"/></operator> <name><name pos:line="8" pos:column="52">hostp<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">next<pos:position pos:line="8" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="64"/></control> <block pos:line="8" pos:column="65">{
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><operator pos:line="9" pos:column="8">!<pos:position pos:line="9" pos:column="9"/></operator><name><name pos:line="9" pos:column="9">hostp<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">data<pos:position pos:line="9" pos:column="20"/></name></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
      <block type="pseudo"><continue pos:line="10" pos:column="7">continue;<pos:position pos:line="10" pos:column="16"/></continue></block></then></if>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name><name pos:line="11" pos:column="8">hostp<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">data<pos:position pos:line="11" pos:column="19"/></name><index pos:line="11" pos:column="19">[<expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <literal type="char" pos:line="11" pos:column="26">'-'<pos:position pos:line="11" pos:column="29"/></literal></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <block pos:line="11" pos:column="31">{
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">char<pos:position pos:line="12" pos:column="11"/></name> <modifier pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></modifier></type><name pos:line="12" pos:column="13">entry_id<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="13" pos:column="7">size_t<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">entry_len<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

      <if pos:line="15" pos:column="7">if<condition pos:line="15" pos:column="9">(<expr><literal type="number" pos:line="15" pos:column="10">2<pos:position pos:line="15" pos:column="11"/></literal> <operator pos:line="15" pos:column="12">!=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">sscanf<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">hostp<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">data<pos:position pos:line="15" pos:column="33"/></name></name> <operator pos:line="15" pos:column="34">+<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="36">1<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"%255[^:]:%d"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">hostname<pos:position pos:line="15" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="64">&amp;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="65">port<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="71"/></condition><then pos:line="15" pos:column="71"> <block pos:line="15" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">infof<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">data<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"Couldn't parse CURLOPT_RESOLVE removal entry '%s'!\n"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="17" pos:column="15">hostp<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">data<pos:position pos:line="17" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
        <continue pos:line="18" pos:column="9">continue;<pos:position pos:line="18" pos:column="18"/></continue>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="21" pos:column="7">/* Create an entry id, based upon the hostname and port */</comment>
      <expr_stmt><expr><name pos:line="22" pos:column="7">entry_id<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">create_hostcache_id<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">hostname<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">port<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
      <comment type="block" pos:line="23" pos:column="7">/* If we can't create the entry id, fail */</comment>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><operator pos:line="24" pos:column="10">!<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">entry_id<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></return>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="28" pos:column="7">entry_len<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">strlen<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">entry_id<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name><name pos:line="30" pos:column="10">data<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">share<pos:position pos:line="30" pos:column="21"/></name></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">Curl_share_lock<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">data<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="31">CURL_LOCK_DATA_DNS<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="33" pos:column="7">/* delete entry, ignore if it didn't exist */</comment>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">Curl_hash_delete<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">data<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">dns<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">.<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">hostcache<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">entry_id<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">entry_len<pos:position pos:line="34" pos:column="64"/></name><operator pos:line="34" pos:column="64">+<pos:position pos:line="34" pos:column="65"/></operator><literal type="number" pos:line="34" pos:column="65">1<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>

      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name><name pos:line="36" pos:column="10">data<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">share<pos:position pos:line="36" pos:column="21"/></name></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">Curl_share_unlock<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">data<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="33">CURL_LOCK_DATA_DNS<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="39" pos:column="7">/* free the allocated entry_id again */</comment>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">free<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">entry_id<pos:position pos:line="40" pos:column="20"/></name></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
      <decl_stmt><decl><type><name><name pos:line="43" pos:column="7">struct<pos:position pos:line="43" pos:column="13"/></name> <name pos:line="43" pos:column="14">Curl_dns_entry<pos:position pos:line="43" pos:column="28"/></name></name> <modifier pos:line="43" pos:column="29">*<pos:position pos:line="43" pos:column="30"/></modifier></type><name pos:line="43" pos:column="30">dns<pos:position pos:line="43" pos:column="33"/></name></decl>;<pos:position pos:line="43" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="44" pos:column="7">Curl_addrinfo<pos:position pos:line="44" pos:column="20"/></name> <modifier pos:line="44" pos:column="21">*<pos:position pos:line="44" pos:column="22"/></modifier></type><name pos:line="44" pos:column="22">addr<pos:position pos:line="44" pos:column="26"/></name></decl>;<pos:position pos:line="44" pos:column="27"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">char<pos:position pos:line="45" pos:column="11"/></name> <modifier pos:line="45" pos:column="12">*<pos:position pos:line="45" pos:column="13"/></modifier></type><name pos:line="45" pos:column="13">entry_id<pos:position pos:line="45" pos:column="21"/></name></decl>;<pos:position pos:line="45" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">size_t<pos:position pos:line="46" pos:column="13"/></name></type> <name pos:line="46" pos:column="14">entry_len<pos:position pos:line="46" pos:column="23"/></name></decl>;<pos:position pos:line="46" pos:column="24"/></decl_stmt>

      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><literal type="number" pos:line="48" pos:column="10">3<pos:position pos:line="48" pos:column="11"/></literal> <operator pos:line="48" pos:column="12">!=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">sscanf<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name><name pos:line="48" pos:column="22">hostp<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">data<pos:position pos:line="48" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="35">"%255[^:]:%d:%255s"<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">hostname<pos:position pos:line="48" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="66">&amp;<pos:position pos:line="48" pos:column="71"/></operator><name pos:line="48" pos:column="67">port<pos:position pos:line="48" pos:column="71"/></name></expr></argument>,
                     <argument><expr><name pos:line="49" pos:column="22">address<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31"> <block pos:line="49" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">infof<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">data<pos:position pos:line="50" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="21">"Couldn't parse CURLOPT_RESOLVE entry '%s'!\n"<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="51" pos:column="15">hostp<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">data<pos:position pos:line="51" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
        <continue pos:line="52" pos:column="9">continue;<pos:position pos:line="52" pos:column="18"/></continue>
      }<pos:position pos:line="53" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="55" pos:column="7">addr<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">Curl_str2addr<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">address<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">port<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><operator pos:line="56" pos:column="10">!<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">addr<pos:position pos:line="56" pos:column="15"/></name></expr>)<pos:position pos:line="56" pos:column="16"/></condition><then pos:line="56" pos:column="16"> <block pos:line="56" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">infof<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">data<pos:position pos:line="57" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="21">"Address in '%s' found illegal!\n"<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="57">hostp<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">-&gt;<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="64">data<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>
        <continue pos:line="58" pos:column="9">continue;<pos:position pos:line="58" pos:column="18"/></continue>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="61" pos:column="7">/* Create an entry id, based upon the hostname and port */</comment>
      <expr_stmt><expr><name pos:line="62" pos:column="7">entry_id<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">create_hostcache_id<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">hostname<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">port<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
      <comment type="block" pos:line="63" pos:column="7">/* If we can't create the entry id, fail */</comment>
      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><operator pos:line="64" pos:column="10">!<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">entry_id<pos:position pos:line="64" pos:column="19"/></name></expr>)<pos:position pos:line="64" pos:column="20"/></condition><then pos:line="64" pos:column="20"> <block pos:line="64" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">Curl_freeaddrinfo<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">addr<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="66" pos:column="35"/></name></expr>;<pos:position pos:line="66" pos:column="36"/></return>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="69" pos:column="7">entry_len<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">strlen<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">entry_id<pos:position pos:line="69" pos:column="34"/></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>

      <if pos:line="71" pos:column="7">if<condition pos:line="71" pos:column="9">(<expr><name><name pos:line="71" pos:column="10">data<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">share<pos:position pos:line="71" pos:column="21"/></name></name></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="9">Curl_share_lock<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">data<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="31">CURL_LOCK_DATA_DNS<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="72" pos:column="74"/></name></expr></argument>)<pos:position pos:line="72" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="76"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="74" pos:column="7">/* See if its already in our dns cache */</comment>
      <expr_stmt><expr><name pos:line="75" pos:column="7">dns<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <call><name pos:line="75" pos:column="13">Curl_hash_pick<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name><name pos:line="75" pos:column="28">data<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">dns<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">hostcache<pos:position pos:line="75" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="49">entry_id<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">entry_len<pos:position pos:line="75" pos:column="68"/></name><operator pos:line="75" pos:column="68">+<pos:position pos:line="75" pos:column="69"/></operator><literal type="number" pos:line="75" pos:column="69">1<pos:position pos:line="75" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="72"/></expr_stmt>

      <comment type="block" pos:line="77" pos:column="7">/* free the allocated entry_id again */</comment>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">free<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">entry_id<pos:position pos:line="78" pos:column="20"/></name></expr></argument>)<pos:position pos:line="78" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="22"/></expr_stmt>

      <if pos:line="80" pos:column="7">if<condition pos:line="80" pos:column="9">(<expr><operator pos:line="80" pos:column="10">!<pos:position pos:line="80" pos:column="11"/></operator><name pos:line="80" pos:column="11">dns<pos:position pos:line="80" pos:column="14"/></name></expr>)<pos:position pos:line="80" pos:column="15"/></condition><then pos:line="80" pos:column="15"> <block pos:line="80" pos:column="16">{
        <comment type="block" pos:line="81" pos:column="9">/* if not in the cache already, put this host in the cache */</comment>
        <expr_stmt><expr><name pos:line="82" pos:column="9">dns<pos:position pos:line="82" pos:column="12"/></name> <operator pos:line="82" pos:column="13">=<pos:position pos:line="82" pos:column="14"/></operator> <call><name pos:line="82" pos:column="15">Curl_cache_addr<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">data<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">addr<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">hostname<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">port<pos:position pos:line="82" pos:column="57"/></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt>
        <if pos:line="83" pos:column="9">if<condition pos:line="83" pos:column="11">(<expr><name pos:line="83" pos:column="12">dns<pos:position pos:line="83" pos:column="15"/></name></expr>)<pos:position pos:line="83" pos:column="16"/></condition><then pos:line="83" pos:column="16"> <block pos:line="83" pos:column="17">{
          <expr_stmt><expr><name><name pos:line="84" pos:column="11">dns<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="16">timestamp<pos:position pos:line="84" pos:column="25"/></name></name> <operator pos:line="84" pos:column="26">=<pos:position pos:line="84" pos:column="27"/></operator> <literal type="number" pos:line="84" pos:column="28">0<pos:position pos:line="84" pos:column="29"/></literal></expr>;<pos:position pos:line="84" pos:column="30"/></expr_stmt> <comment type="block" pos:line="84" pos:column="31">/* mark as added by CURLOPT_RESOLVE */</comment>
          <comment type="block" pos:line="85" pos:column="11">/* release the returned reference; the cache itself will keep the
           * entry alive: */</comment>
          <expr_stmt><expr><name><name pos:line="87" pos:column="11">dns<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">inuse<pos:position pos:line="87" pos:column="21"/></name></name><operator pos:line="87" pos:column="21">--<pos:position pos:line="87" pos:column="23"/></operator></expr>;<pos:position pos:line="87" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
      }<pos:position pos:line="89" pos:column="8"/></block></then>
      <else pos:line="90" pos:column="7">else
        <comment type="block" pos:line="91" pos:column="9">/* this is a duplicate, free it again */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="9">Curl_freeaddrinfo<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">addr<pos:position pos:line="92" pos:column="31"/></name></expr></argument>)<pos:position pos:line="92" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt></block></else></if>

      <if pos:line="94" pos:column="7">if<condition pos:line="94" pos:column="9">(<expr><name><name pos:line="94" pos:column="10">data<pos:position pos:line="94" pos:column="14"/></name><operator pos:line="94" pos:column="14">-&gt;<pos:position pos:line="94" pos:column="19"/></operator><name pos:line="94" pos:column="16">share<pos:position pos:line="94" pos:column="21"/></name></name></expr>)<pos:position pos:line="94" pos:column="22"/></condition><then pos:line="94" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="9">Curl_share_unlock<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">data<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="33">CURL_LOCK_DATA_DNS<pos:position pos:line="95" pos:column="51"/></name></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt></block></then></if>

      <if pos:line="97" pos:column="7">if<condition pos:line="97" pos:column="9">(<expr><operator pos:line="97" pos:column="10">!<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">dns<pos:position pos:line="97" pos:column="14"/></name></expr>)<pos:position pos:line="97" pos:column="15"/></condition><then pos:line="97" pos:column="15"> <block pos:line="97" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">Curl_freeaddrinfo<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">addr<pos:position pos:line="98" pos:column="31"/></name></expr></argument>)<pos:position pos:line="98" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>
        <return pos:line="99" pos:column="9">return <expr><name pos:line="99" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="99" pos:column="35"/></name></expr>;<pos:position pos:line="99" pos:column="36"/></return>
      }<pos:position pos:line="100" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">infof<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">data<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="19">"Added %s:%d:%s to DNS cache\n"<pos:position pos:line="101" pos:column="50"/></literal></expr></argument>,
            <argument><expr><name pos:line="102" pos:column="13">hostname<pos:position pos:line="102" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="23">port<pos:position pos:line="102" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="29">address<pos:position pos:line="102" pos:column="36"/></name></expr></argument>)<pos:position pos:line="102" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>
  }<pos:position pos:line="104" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="105" pos:column="3">data<pos:position pos:line="105" pos:column="7"/></name><operator pos:line="105" pos:column="7">-&gt;<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="9">change<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">.<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">resolve<pos:position pos:line="105" pos:column="23"/></name></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <name pos:line="105" pos:column="26">NULL<pos:position pos:line="105" pos:column="30"/></name></expr>;<pos:position pos:line="105" pos:column="31"/></expr_stmt> <comment type="block" pos:line="105" pos:column="32">/* dealt with now */</comment>

  <return pos:line="107" pos:column="3">return <expr><name pos:line="107" pos:column="10">CURLE_OK<pos:position pos:line="107" pos:column="18"/></name></expr>;<pos:position pos:line="107" pos:column="19"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_380_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">waitconnect<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">curl_socket_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">sockfd<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="39">/* socket */</comment>
                <parameter><decl><type><name pos:line="3" pos:column="17">long<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">timeout_msec<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">mpeix<pos:position pos:line="6" pos:column="13"/></name></cpp:ifdef>
  <comment type="block" pos:line="7" pos:column="3">/* Call this function once now, and ignore the results. We do this to
     "clear" the error state on the socket so that we can later read it
     reliably. This is reported necessary on the MPE/iX operating system. */</comment>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><call><name pos:line="10" pos:column="9">verifyconnect<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">sockfd<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">NULL<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="13" pos:column="3">/* now select() until we get connect or timeout */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">rc<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">Curl_socket_ready<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">CURL_SOCKET_BAD<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">sockfd<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="51">(<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">int<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">)<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">timeout_msec<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">-<pos:position pos:line="15" pos:column="7"/></operator><literal type="number" pos:line="15" pos:column="7">1<pos:position pos:line="15" pos:column="8"/></literal> <operator pos:line="15" pos:column="9">==<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">rc<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15">
    <comment type="block" pos:line="16" pos:column="5">/* error, no connect here, try next */</comment>
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">WAITCONN_SELECT_ERROR<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then>

  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if<condition pos:line="19" pos:column="10">(<expr><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">rc<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
    <comment type="block" pos:line="20" pos:column="5">/* timeout, no connect today */</comment>
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">WAITCONN_TIMEOUT<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return></block></then></if></elseif></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">rc<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">&amp;<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="11">CURL_CSELECT_ERR<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
    <comment type="block" pos:line="24" pos:column="5">/* error condition caught */</comment>
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">WAITCONN_FDSET_ERROR<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></return></block></then></if>

  <comment type="block" pos:line="27" pos:column="3">/* we have a connect! */</comment>
  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">WAITCONN_CONNECTED<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

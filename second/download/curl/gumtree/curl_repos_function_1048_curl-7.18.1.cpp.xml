<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1048_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">telrcv<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">struct<pos:position pos:line="2" pos:column="19"/></name> <name pos:line="2" pos:column="20">connectdata<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">conn<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
            <parameter><decl><type><specifier pos:line="3" pos:column="13">const<pos:position pos:line="3" pos:column="18"/></specifier> <name pos:line="3" pos:column="19">unsigned<pos:position pos:line="3" pos:column="27"/></name> <name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">inbuf<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <comment type="block" pos:line="3" pos:column="41">/* Data received from socket */</comment>
            <parameter><decl><type><name pos:line="4" pos:column="13">ssize_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">count<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="27"/></parameter_list>              <comment type="block" pos:line="4" pos:column="41">/* Number of bytes received */</comment>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">c<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">in<pos:position pos:line="7" pos:column="9"/></name> <init pos:line="7" pos:column="10">= <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">startwrite<pos:position pos:line="8" pos:column="17"/></name><init pos:line="8" pos:column="17">=<expr><operator pos:line="8" pos:column="18">-<pos:position pos:line="8" pos:column="19"/></operator><literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">SessionHandle<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">conn<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">data<pos:position pos:line="9" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">TELNET<pos:position pos:line="10" pos:column="16"/></name></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">tn<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator>struct <name pos:line="10" pos:column="31">TELNET<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name><name pos:line="10" pos:column="40">data<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">-&gt;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="46">state<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">.<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">proto<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">.<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">telnet<pos:position pos:line="10" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="65"/></decl_stmt>

<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define<pos:position pos:line="12" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">startskipping<pos:position pos:line="12" pos:column="22"/></name><parameter_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="13" pos:column="5">if(startwrite &gt;= 0) \
       Curl_client_write(conn, CLIENTWRITE_BODY, (char *)&amp;inbuf[startwrite], in-startwrite); \
    startwrite = -1<pos:position pos:line="15" pos:column="20"/></cpp:value></cpp:define>

<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">writebyte<pos:position pos:line="17" pos:column="18"/></name><parameter_list pos:line="17" pos:column="18">()<pos:position pos:line="17" pos:column="20"/></parameter_list></cpp:macro> \
    <cpp:value pos:line="18" pos:column="5">if(startwrite &lt; 0) \
      startwrite = in<pos:position pos:line="19" pos:column="22"/></cpp:value></cpp:define>

<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define<pos:position pos:line="21" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">bufferflush<pos:position pos:line="21" pos:column="20"/></name><parameter_list pos:line="21" pos:column="20">()<pos:position pos:line="21" pos:column="22"/></parameter_list></cpp:macro> <cpp:value pos:line="21" pos:column="23">startskipping()<pos:position pos:line="21" pos:column="38"/></cpp:value></cpp:define>

  <while pos:line="23" pos:column="3">while<condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">count<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">--<pos:position pos:line="23" pos:column="16"/></operator></expr>)<pos:position pos:line="23" pos:column="17"/></condition>
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">c<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <name><name pos:line="25" pos:column="9">inbuf<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><name pos:line="25" pos:column="15">in<pos:position pos:line="25" pos:column="17"/></name></expr>]<pos:position pos:line="25" pos:column="18"/></index></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/*infof(data,"In rcv state %d char %d\n", tn-&gt;telrcv_state, c);*/</comment>
    <switch pos:line="28" pos:column="5">switch <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">tn<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">telrcv_state<pos:position pos:line="28" pos:column="29"/></name></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition>
    <block pos:line="29" pos:column="5">{
      <case pos:line="30" pos:column="7">case <expr><name pos:line="30" pos:column="12">CURL_TS_CR<pos:position pos:line="30" pos:column="22"/></name></expr>:<pos:position pos:line="30" pos:column="23"/></case>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">tn<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">telrcv_state<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">CURL_TS_DATA<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
        <if pos:line="32" pos:column="9">if<condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">c<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">==<pos:position pos:line="32" pos:column="16"/></operator> <literal type="char" pos:line="32" pos:column="17">'\0'<pos:position pos:line="32" pos:column="21"/></literal></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22">
        <block pos:line="33" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="34" pos:column="11">startskipping<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">()<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
          <break pos:line="35" pos:column="11">break;<pos:position pos:line="35" pos:column="17"/></break>   <comment type="block" pos:line="35" pos:column="20">/* Ignore \0 after CR */</comment>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">writebyte<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">()<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
        <break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>

      <case pos:line="40" pos:column="7">case <expr><name pos:line="40" pos:column="12">CURL_TS_DATA<pos:position pos:line="40" pos:column="24"/></name></expr>:<pos:position pos:line="40" pos:column="25"/></case>
        <if pos:line="41" pos:column="9">if<condition pos:line="41" pos:column="11">(<expr><name pos:line="41" pos:column="12">c<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">==<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">CURL_IAC<pos:position pos:line="41" pos:column="25"/></name></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
        <block pos:line="42" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="43" pos:column="11">tn<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">telrcv_state<pos:position pos:line="43" pos:column="27"/></name></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">CURL_TS_IAC<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="44" pos:column="11">startskipping<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">()<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
          <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>
        }<pos:position pos:line="46" pos:column="10"/></block></then>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if<condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">c<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <literal type="char" pos:line="47" pos:column="22">'\r'<pos:position pos:line="47" pos:column="26"/></literal></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27">
        <block pos:line="48" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="49" pos:column="11">tn<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">telrcv_state<pos:position pos:line="49" pos:column="27"/></name></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">CURL_TS_CR<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">writebyte<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">()<pos:position pos:line="51" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>
        <break pos:line="52" pos:column="9">break;<pos:position pos:line="52" pos:column="15"/></break>

      <case pos:line="54" pos:column="7">case <expr><name pos:line="54" pos:column="12">CURL_TS_IAC<pos:position pos:line="54" pos:column="23"/></name></expr>:<pos:position pos:line="54" pos:column="24"/></case>
      <label><name pos:line="55" pos:column="7">process_iac<pos:position pos:line="55" pos:column="18"/></name>:<pos:position pos:line="55" pos:column="19"/></label>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">DEBUGASSERT<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">startwrite<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">&lt;<pos:position pos:line="56" pos:column="34"/></operator> <literal type="number" pos:line="56" pos:column="32">0<pos:position pos:line="56" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
      <switch pos:line="57" pos:column="7">switch <condition pos:line="57" pos:column="14">(<expr><name pos:line="57" pos:column="15">c<pos:position pos:line="57" pos:column="16"/></name></expr>)<pos:position pos:line="57" pos:column="17"/></condition>
      <block pos:line="58" pos:column="7">{
        <case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">CURL_WILL<pos:position pos:line="59" pos:column="23"/></name></expr>:<pos:position pos:line="59" pos:column="24"/></case>
          <expr_stmt><expr><name><name pos:line="60" pos:column="11">tn<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">telrcv_state<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <name pos:line="60" pos:column="30">CURL_TS_WILL<pos:position pos:line="60" pos:column="42"/></name></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
          <break pos:line="61" pos:column="11">break;<pos:position pos:line="61" pos:column="17"/></break>
        <case pos:line="62" pos:column="9">case <expr><name pos:line="62" pos:column="14">CURL_WONT<pos:position pos:line="62" pos:column="23"/></name></expr>:<pos:position pos:line="62" pos:column="24"/></case>
          <expr_stmt><expr><name><name pos:line="63" pos:column="11">tn<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">-&gt;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="15">telrcv_state<pos:position pos:line="63" pos:column="27"/></name></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <name pos:line="63" pos:column="30">CURL_TS_WONT<pos:position pos:line="63" pos:column="42"/></name></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
          <break pos:line="64" pos:column="11">break;<pos:position pos:line="64" pos:column="17"/></break>
        <case pos:line="65" pos:column="9">case <expr><name pos:line="65" pos:column="14">CURL_DO<pos:position pos:line="65" pos:column="21"/></name></expr>:<pos:position pos:line="65" pos:column="22"/></case>
          <expr_stmt><expr><name><name pos:line="66" pos:column="11">tn<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">telrcv_state<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">CURL_TS_DO<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
          <break pos:line="67" pos:column="11">break;<pos:position pos:line="67" pos:column="17"/></break>
        <case pos:line="68" pos:column="9">case <expr><name pos:line="68" pos:column="14">CURL_DONT<pos:position pos:line="68" pos:column="23"/></name></expr>:<pos:position pos:line="68" pos:column="24"/></case>
          <expr_stmt><expr><name><name pos:line="69" pos:column="11">tn<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">telrcv_state<pos:position pos:line="69" pos:column="27"/></name></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <name pos:line="69" pos:column="30">CURL_TS_DONT<pos:position pos:line="69" pos:column="42"/></name></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
          <break pos:line="70" pos:column="11">break;<pos:position pos:line="70" pos:column="17"/></break>
        <case pos:line="71" pos:column="9">case <expr><name pos:line="71" pos:column="14">CURL_SB<pos:position pos:line="71" pos:column="21"/></name></expr>:<pos:position pos:line="71" pos:column="22"/></case>
          <expr_stmt><expr><call><name pos:line="72" pos:column="11">CURL_SB_CLEAR<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">tn<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="73" pos:column="11">tn<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">-&gt;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="15">telrcv_state<pos:position pos:line="73" pos:column="27"/></name></name> <operator pos:line="73" pos:column="28">=<pos:position pos:line="73" pos:column="29"/></operator> <name pos:line="73" pos:column="30">CURL_TS_SB<pos:position pos:line="73" pos:column="40"/></name></expr>;<pos:position pos:line="73" pos:column="41"/></expr_stmt>
          <break pos:line="74" pos:column="11">break;<pos:position pos:line="74" pos:column="17"/></break>
        <case pos:line="75" pos:column="9">case <expr><name pos:line="75" pos:column="14">CURL_IAC<pos:position pos:line="75" pos:column="22"/></name></expr>:<pos:position pos:line="75" pos:column="23"/></case>
          <expr_stmt><expr><name><name pos:line="76" pos:column="11">tn<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">telrcv_state<pos:position pos:line="76" pos:column="27"/></name></name> <operator pos:line="76" pos:column="28">=<pos:position pos:line="76" pos:column="29"/></operator> <name pos:line="76" pos:column="30">CURL_TS_DATA<pos:position pos:line="76" pos:column="42"/></name></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="77" pos:column="11">writebyte<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">()<pos:position pos:line="77" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
          <break pos:line="78" pos:column="11">break;<pos:position pos:line="78" pos:column="17"/></break>
        <case pos:line="79" pos:column="9">case <expr><name pos:line="79" pos:column="14">CURL_DM<pos:position pos:line="79" pos:column="21"/></name></expr>:<pos:position pos:line="79" pos:column="22"/></case>
        <case pos:line="80" pos:column="9">case <expr><name pos:line="80" pos:column="14">CURL_NOP<pos:position pos:line="80" pos:column="22"/></name></expr>:<pos:position pos:line="80" pos:column="23"/></case>
        <case pos:line="81" pos:column="9">case <expr><name pos:line="81" pos:column="14">CURL_GA<pos:position pos:line="81" pos:column="21"/></name></expr>:<pos:position pos:line="81" pos:column="22"/></case>
        <default pos:line="82" pos:column="9">default:<pos:position pos:line="82" pos:column="17"/></default>
          <expr_stmt><expr><name><name pos:line="83" pos:column="11">tn<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">telrcv_state<pos:position pos:line="83" pos:column="27"/></name></name> <operator pos:line="83" pos:column="28">=<pos:position pos:line="83" pos:column="29"/></operator> <name pos:line="83" pos:column="30">CURL_TS_DATA<pos:position pos:line="83" pos:column="42"/></name></expr>;<pos:position pos:line="83" pos:column="43"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="84" pos:column="11">printoption<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name pos:line="84" pos:column="23">data<pos:position pos:line="84" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="29">"RCVD"<pos:position pos:line="84" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">CURL_IAC<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">c<pos:position pos:line="84" pos:column="48"/></name></expr></argument>)<pos:position pos:line="84" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
          <break pos:line="85" pos:column="11">break;<pos:position pos:line="85" pos:column="17"/></break>
      }<pos:position pos:line="86" pos:column="8"/></block></switch>
      <break pos:line="87" pos:column="7">break;<pos:position pos:line="87" pos:column="13"/></break>

      <case pos:line="89" pos:column="7">case <expr><name pos:line="89" pos:column="12">CURL_TS_WILL<pos:position pos:line="89" pos:column="24"/></name></expr>:<pos:position pos:line="89" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">printoption<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">data<pos:position pos:line="90" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="27">"RCVD"<pos:position pos:line="90" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="35">CURL_WILL<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">c<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">tn<pos:position pos:line="91" pos:column="11"/></name><operator pos:line="91" pos:column="11">-&gt;<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="13">please_negotiate<pos:position pos:line="91" pos:column="29"/></name></name> <operator pos:line="91" pos:column="30">=<pos:position pos:line="91" pos:column="31"/></operator> <literal type="number" pos:line="91" pos:column="32">1<pos:position pos:line="91" pos:column="33"/></literal></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">rec_will<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">conn<pos:position pos:line="92" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="24">c<pos:position pos:line="92" pos:column="25"/></name></expr></argument>)<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">tn<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">telrcv_state<pos:position pos:line="93" pos:column="25"/></name></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <name pos:line="93" pos:column="28">CURL_TS_DATA<pos:position pos:line="93" pos:column="40"/></name></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>

      <case pos:line="96" pos:column="7">case <expr><name pos:line="96" pos:column="12">CURL_TS_WONT<pos:position pos:line="96" pos:column="24"/></name></expr>:<pos:position pos:line="96" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">printoption<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">data<pos:position pos:line="97" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="27">"RCVD"<pos:position pos:line="97" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="35">CURL_WONT<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">c<pos:position pos:line="97" pos:column="47"/></name></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">tn<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">please_negotiate<pos:position pos:line="98" pos:column="29"/></name></name> <operator pos:line="98" pos:column="30">=<pos:position pos:line="98" pos:column="31"/></operator> <literal type="number" pos:line="98" pos:column="32">1<pos:position pos:line="98" pos:column="33"/></literal></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">rec_wont<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><name pos:line="99" pos:column="18">conn<pos:position pos:line="99" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="24">c<pos:position pos:line="99" pos:column="25"/></name></expr></argument>)<pos:position pos:line="99" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">tn<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">-&gt;<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="13">telrcv_state<pos:position pos:line="100" pos:column="25"/></name></name> <operator pos:line="100" pos:column="26">=<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="28">CURL_TS_DATA<pos:position pos:line="100" pos:column="40"/></name></expr>;<pos:position pos:line="100" pos:column="41"/></expr_stmt>
        <break pos:line="101" pos:column="9">break;<pos:position pos:line="101" pos:column="15"/></break>

      <case pos:line="103" pos:column="7">case <expr><name pos:line="103" pos:column="12">CURL_TS_DO<pos:position pos:line="103" pos:column="22"/></name></expr>:<pos:position pos:line="103" pos:column="23"/></case>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">printoption<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><name pos:line="104" pos:column="21">data<pos:position pos:line="104" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="27">"RCVD"<pos:position pos:line="104" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="35">CURL_DO<pos:position pos:line="104" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="44">c<pos:position pos:line="104" pos:column="45"/></name></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">tn<pos:position pos:line="105" pos:column="11"/></name><operator pos:line="105" pos:column="11">-&gt;<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="13">please_negotiate<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <literal type="number" pos:line="105" pos:column="32">1<pos:position pos:line="105" pos:column="33"/></literal></expr>;<pos:position pos:line="105" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">rec_do<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><name pos:line="106" pos:column="16">conn<pos:position pos:line="106" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="22">c<pos:position pos:line="106" pos:column="23"/></name></expr></argument>)<pos:position pos:line="106" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">tn<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">telrcv_state<pos:position pos:line="107" pos:column="25"/></name></name> <operator pos:line="107" pos:column="26">=<pos:position pos:line="107" pos:column="27"/></operator> <name pos:line="107" pos:column="28">CURL_TS_DATA<pos:position pos:line="107" pos:column="40"/></name></expr>;<pos:position pos:line="107" pos:column="41"/></expr_stmt>
        <break pos:line="108" pos:column="9">break;<pos:position pos:line="108" pos:column="15"/></break>

      <case pos:line="110" pos:column="7">case <expr><name pos:line="110" pos:column="12">CURL_TS_DONT<pos:position pos:line="110" pos:column="24"/></name></expr>:<pos:position pos:line="110" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">printoption<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">data<pos:position pos:line="111" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="27">"RCVD"<pos:position pos:line="111" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="35">CURL_DONT<pos:position pos:line="111" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="46">c<pos:position pos:line="111" pos:column="47"/></name></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">tn<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">-&gt;<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="13">please_negotiate<pos:position pos:line="112" pos:column="29"/></name></name> <operator pos:line="112" pos:column="30">=<pos:position pos:line="112" pos:column="31"/></operator> <literal type="number" pos:line="112" pos:column="32">1<pos:position pos:line="112" pos:column="33"/></literal></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">rec_dont<pos:position pos:line="113" pos:column="17"/></name><argument_list pos:line="113" pos:column="17">(<argument><expr><name pos:line="113" pos:column="18">conn<pos:position pos:line="113" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="24">c<pos:position pos:line="113" pos:column="25"/></name></expr></argument>)<pos:position pos:line="113" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="114" pos:column="9">tn<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">-&gt;<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="13">telrcv_state<pos:position pos:line="114" pos:column="25"/></name></name> <operator pos:line="114" pos:column="26">=<pos:position pos:line="114" pos:column="27"/></operator> <name pos:line="114" pos:column="28">CURL_TS_DATA<pos:position pos:line="114" pos:column="40"/></name></expr>;<pos:position pos:line="114" pos:column="41"/></expr_stmt>
        <break pos:line="115" pos:column="9">break;<pos:position pos:line="115" pos:column="15"/></break>

      <case pos:line="117" pos:column="7">case <expr><name pos:line="117" pos:column="12">CURL_TS_SB<pos:position pos:line="117" pos:column="22"/></name></expr>:<pos:position pos:line="117" pos:column="23"/></case>
        <if pos:line="118" pos:column="9">if<condition pos:line="118" pos:column="11">(<expr><name pos:line="118" pos:column="12">c<pos:position pos:line="118" pos:column="13"/></name> <operator pos:line="118" pos:column="14">==<pos:position pos:line="118" pos:column="16"/></operator> <name pos:line="118" pos:column="17">CURL_IAC<pos:position pos:line="118" pos:column="25"/></name></expr>)<pos:position pos:line="118" pos:column="26"/></condition><then pos:line="118" pos:column="26">
        <block pos:line="119" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="120" pos:column="11">tn<pos:position pos:line="120" pos:column="13"/></name><operator pos:line="120" pos:column="13">-&gt;<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="15">telrcv_state<pos:position pos:line="120" pos:column="27"/></name></name> <operator pos:line="120" pos:column="28">=<pos:position pos:line="120" pos:column="29"/></operator> <name pos:line="120" pos:column="30">CURL_TS_SE<pos:position pos:line="120" pos:column="40"/></name></expr>;<pos:position pos:line="120" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="121" pos:column="10"/></block></then>
        <else pos:line="122" pos:column="9">else
        <block pos:line="123" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="124" pos:column="11">CURL_SB_ACCUM<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">tn<pos:position pos:line="124" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="124" pos:column="28">c<pos:position pos:line="124" pos:column="29"/></name></expr></argument>)<pos:position pos:line="124" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="125" pos:column="10"/></block></else></if>
        <break pos:line="126" pos:column="9">break;<pos:position pos:line="126" pos:column="15"/></break>

      <case pos:line="128" pos:column="7">case <expr><name pos:line="128" pos:column="12">CURL_TS_SE<pos:position pos:line="128" pos:column="22"/></name></expr>:<pos:position pos:line="128" pos:column="23"/></case>
        <if pos:line="129" pos:column="9">if<condition pos:line="129" pos:column="11">(<expr><name pos:line="129" pos:column="12">c<pos:position pos:line="129" pos:column="13"/></name> <operator pos:line="129" pos:column="14">!=<pos:position pos:line="129" pos:column="16"/></operator> <name pos:line="129" pos:column="17">CURL_SE<pos:position pos:line="129" pos:column="24"/></name></expr>)<pos:position pos:line="129" pos:column="25"/></condition><then pos:line="129" pos:column="25">
        <block pos:line="130" pos:column="9">{
          <if pos:line="131" pos:column="11">if<condition pos:line="131" pos:column="13">(<expr><name pos:line="131" pos:column="14">c<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">!=<pos:position pos:line="131" pos:column="18"/></operator> <name pos:line="131" pos:column="19">CURL_IAC<pos:position pos:line="131" pos:column="27"/></name></expr>)<pos:position pos:line="131" pos:column="28"/></condition><then pos:line="131" pos:column="28">
          <block pos:line="132" pos:column="11">{
            <comment type="block" pos:line="133" pos:column="13">/*
             * This is an error.  We only expect to get "IAC IAC" or "IAC SE".
             * Several things may have happend.  An IAC was not doubled, the
             * IAC SE was left off, or another option got inserted into the
             * suboption are all possibilities.  If we assume that the IAC was
             * not doubled, and really the IAC SE was left off, we could get
             * into an infinate loop here.  So, instead, we terminate the
             * suboption, and process the partial suboption if we can.
             */</comment>
            <expr_stmt><expr><call><name pos:line="142" pos:column="13">CURL_SB_ACCUM<pos:position pos:line="142" pos:column="26"/></name><argument_list pos:line="142" pos:column="26">(<argument><expr><name pos:line="142" pos:column="27">tn<pos:position pos:line="142" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="31">CURL_IAC<pos:position pos:line="142" pos:column="39"/></name></expr></argument>)<pos:position pos:line="142" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">CURL_SB_ACCUM<pos:position pos:line="143" pos:column="26"/></name><argument_list pos:line="143" pos:column="26">(<argument><expr><name pos:line="143" pos:column="27">tn<pos:position pos:line="143" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="31">c<pos:position pos:line="143" pos:column="32"/></name></expr></argument>)<pos:position pos:line="143" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="144" pos:column="13">tn<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">-&gt;<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="17">subpointer<pos:position pos:line="144" pos:column="27"/></name></name> <operator pos:line="144" pos:column="28">-=<pos:position pos:line="144" pos:column="30"/></operator> <literal type="number" pos:line="144" pos:column="31">2<pos:position pos:line="144" pos:column="32"/></literal></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="145" pos:column="13">CURL_SB_TERM<pos:position pos:line="145" pos:column="25"/></name><argument_list pos:line="145" pos:column="25">(<argument><expr><name pos:line="145" pos:column="26">tn<pos:position pos:line="145" pos:column="28"/></name></expr></argument>)<pos:position pos:line="145" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="30"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="147" pos:column="13">printoption<pos:position pos:line="147" pos:column="24"/></name><argument_list pos:line="147" pos:column="24">(<argument><expr><name pos:line="147" pos:column="25">data<pos:position pos:line="147" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="31">"In SUBOPTION processing, RCVD"<pos:position pos:line="147" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="64">CURL_IAC<pos:position pos:line="147" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="74">c<pos:position pos:line="147" pos:column="75"/></name></expr></argument>)<pos:position pos:line="147" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">suboption<pos:position pos:line="148" pos:column="22"/></name><argument_list pos:line="148" pos:column="22">(<argument><expr><name pos:line="148" pos:column="23">conn<pos:position pos:line="148" pos:column="27"/></name></expr></argument>)<pos:position pos:line="148" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="29"/></expr_stmt>   <comment type="block" pos:line="148" pos:column="32">/* handle sub-option */</comment>
            <expr_stmt><expr><name><name pos:line="149" pos:column="13">tn<pos:position pos:line="149" pos:column="15"/></name><operator pos:line="149" pos:column="15">-&gt;<pos:position pos:line="149" pos:column="20"/></operator><name pos:line="149" pos:column="17">telrcv_state<pos:position pos:line="149" pos:column="29"/></name></name> <operator pos:line="149" pos:column="30">=<pos:position pos:line="149" pos:column="31"/></operator> <name pos:line="149" pos:column="32">CURL_TS_IAC<pos:position pos:line="149" pos:column="43"/></name></expr>;<pos:position pos:line="149" pos:column="44"/></expr_stmt>
            <goto pos:line="150" pos:column="13">goto <name pos:line="150" pos:column="18">process_iac<pos:position pos:line="150" pos:column="29"/></name>;<pos:position pos:line="150" pos:column="30"/></goto>
          }<pos:position pos:line="151" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="152" pos:column="11">CURL_SB_ACCUM<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">tn<pos:position pos:line="152" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="152" pos:column="28">c<pos:position pos:line="152" pos:column="29"/></name></expr></argument>)<pos:position pos:line="152" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="153" pos:column="11">tn<pos:position pos:line="153" pos:column="13"/></name><operator pos:line="153" pos:column="13">-&gt;<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="15">telrcv_state<pos:position pos:line="153" pos:column="27"/></name></name> <operator pos:line="153" pos:column="28">=<pos:position pos:line="153" pos:column="29"/></operator> <name pos:line="153" pos:column="30">CURL_TS_SB<pos:position pos:line="153" pos:column="40"/></name></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></then>
        <else pos:line="155" pos:column="9">else
        <block pos:line="156" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="157" pos:column="11">CURL_SB_ACCUM<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">tn<pos:position pos:line="157" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="29">CURL_IAC<pos:position pos:line="157" pos:column="37"/></name></expr></argument>)<pos:position pos:line="157" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="39"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="158" pos:column="11">CURL_SB_ACCUM<pos:position pos:line="158" pos:column="24"/></name><argument_list pos:line="158" pos:column="24">(<argument><expr><name pos:line="158" pos:column="25">tn<pos:position pos:line="158" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="29">CURL_SE<pos:position pos:line="158" pos:column="36"/></name></expr></argument>)<pos:position pos:line="158" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="159" pos:column="11">tn<pos:position pos:line="159" pos:column="13"/></name><operator pos:line="159" pos:column="13">-&gt;<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="15">subpointer<pos:position pos:line="159" pos:column="25"/></name></name> <operator pos:line="159" pos:column="26">-=<pos:position pos:line="159" pos:column="28"/></operator> <literal type="number" pos:line="159" pos:column="29">2<pos:position pos:line="159" pos:column="30"/></literal></expr>;<pos:position pos:line="159" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="160" pos:column="11">CURL_SB_TERM<pos:position pos:line="160" pos:column="23"/></name><argument_list pos:line="160" pos:column="23">(<argument><expr><name pos:line="160" pos:column="24">tn<pos:position pos:line="160" pos:column="26"/></name></expr></argument>)<pos:position pos:line="160" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="161" pos:column="11">suboption<pos:position pos:line="161" pos:column="20"/></name><argument_list pos:line="161" pos:column="20">(<argument><expr><name pos:line="161" pos:column="21">conn<pos:position pos:line="161" pos:column="25"/></name></expr></argument>)<pos:position pos:line="161" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="27"/></expr_stmt>   <comment type="block" pos:line="161" pos:column="30">/* handle sub-option */</comment>
          <expr_stmt><expr><name><name pos:line="162" pos:column="11">tn<pos:position pos:line="162" pos:column="13"/></name><operator pos:line="162" pos:column="13">-&gt;<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="15">telrcv_state<pos:position pos:line="162" pos:column="27"/></name></name> <operator pos:line="162" pos:column="28">=<pos:position pos:line="162" pos:column="29"/></operator> <name pos:line="162" pos:column="30">CURL_TS_DATA<pos:position pos:line="162" pos:column="42"/></name></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="163" pos:column="10"/></block></else></if>
        <break pos:line="164" pos:column="9">break;<pos:position pos:line="164" pos:column="15"/></break>
    }<pos:position pos:line="165" pos:column="6"/></block></switch>
    <expr_stmt><expr><operator pos:line="166" pos:column="5">++<pos:position pos:line="166" pos:column="7"/></operator><name pos:line="166" pos:column="7">in<pos:position pos:line="166" pos:column="9"/></name></expr>;<pos:position pos:line="166" pos:column="10"/></expr_stmt>
  }<pos:position pos:line="167" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="168" pos:column="3">bufferflush<pos:position pos:line="168" pos:column="14"/></name><argument_list pos:line="168" pos:column="14">()<pos:position pos:line="168" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="17"/></expr_stmt>
}<pos:position pos:line="169" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1691_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pop3_state_servergreet_resp<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">connectdata<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">conn<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">pop3code<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="3" pos:column="45">pop3state<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">instate<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">pop3_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">pop3c<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">pop3c<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">line<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">data<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">state<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">buffer<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">len<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><call><name pos:line="9" pos:column="16">strlen<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">line<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="12" pos:column="3">(<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">void<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">)<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">instate<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt> <comment type="block" pos:line="12" pos:column="18">/* no use for this yet */</comment>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">pop3code<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="char" pos:line="14" pos:column="18">'+'<pos:position pos:line="14" pos:column="21"/></literal></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">failf<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">data<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="17">"Got unexpected pop3-server response"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">result<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">CURLE_WEIRD_SERVER_REPLY<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <else pos:line="18" pos:column="3">else <block pos:line="18" pos:column="8">{
    <comment type="block" pos:line="19" pos:column="5">/* Does the server support APOP authentication? */</comment>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">len<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">&gt;=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="15">4<pos:position pos:line="20" pos:column="16"/></literal> <operator pos:line="20" pos:column="17">&amp;&amp;<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="20">line<pos:position pos:line="20" pos:column="24"/></name><index pos:line="20" pos:column="24">[<expr><name pos:line="20" pos:column="25">len<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">-<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">2<pos:position pos:line="20" pos:column="32"/></literal></expr>]<pos:position pos:line="20" pos:column="33"/></index></name> <operator pos:line="20" pos:column="34">==<pos:position pos:line="20" pos:column="36"/></operator> <literal type="char" pos:line="20" pos:column="37">'&gt;'<pos:position pos:line="20" pos:column="43"/></literal></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
      <comment type="block" pos:line="21" pos:column="7">/* Look for the APOP timestamp */</comment>
      <for pos:line="22" pos:column="7">for<control pos:line="22" pos:column="10">(<init><expr><name pos:line="22" pos:column="11">i<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">3<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></init> <condition><expr><name pos:line="22" pos:column="18">i<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&lt;<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="22">len<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">-<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">2<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></condition> <incr><expr><operator pos:line="22" pos:column="31">++<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">i<pos:position pos:line="22" pos:column="34"/></name></expr></incr>)<pos:position pos:line="22" pos:column="35"/></control> <block pos:line="22" pos:column="36">{
        <if pos:line="23" pos:column="9">if<condition pos:line="23" pos:column="11">(<expr><name><name pos:line="23" pos:column="12">line<pos:position pos:line="23" pos:column="16"/></name><index pos:line="23" pos:column="16">[<expr><name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name></expr>]<pos:position pos:line="23" pos:column="19"/></index></name> <operator pos:line="23" pos:column="20">==<pos:position pos:line="23" pos:column="22"/></operator> <literal type="char" pos:line="23" pos:column="23">'&lt;'<pos:position pos:line="23" pos:column="29"/></literal></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
          <comment type="block" pos:line="24" pos:column="11">/* Calculate the length of the timestamp */</comment>
          <decl_stmt><decl><type><name pos:line="25" pos:column="11">size_t<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">timestamplen<pos:position pos:line="25" pos:column="30"/></name> <init pos:line="25" pos:column="31">= <expr><name pos:line="25" pos:column="33">len<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">-<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="39">1<pos:position pos:line="25" pos:column="40"/></literal> <operator pos:line="25" pos:column="41">-<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">i<pos:position pos:line="25" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="45"/></decl_stmt>
          <if pos:line="26" pos:column="11">if<condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">timestamplen<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
            <block type="pseudo"><break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break></block></then></if>

          <comment type="block" pos:line="29" pos:column="11">/* Allocate some memory for the timestamp */</comment>
          <expr_stmt><expr><name><name pos:line="30" pos:column="11">pop3c<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">apoptimestamp<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <operator pos:line="30" pos:column="34">(<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">char<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">*<pos:position pos:line="30" pos:column="41"/></operator><operator pos:line="30" pos:column="41">)<pos:position pos:line="30" pos:column="42"/></operator><call><name pos:line="30" pos:column="42">calloc<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><literal type="number" pos:line="30" pos:column="49">1<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">timestamplen<pos:position pos:line="30" pos:column="64"/></name> <operator pos:line="30" pos:column="65">+<pos:position pos:line="30" pos:column="66"/></operator> <literal type="number" pos:line="30" pos:column="67">1<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>

          <if pos:line="32" pos:column="11">if<condition pos:line="32" pos:column="13">(<expr><operator pos:line="32" pos:column="14">!<pos:position pos:line="32" pos:column="15"/></operator><name><name pos:line="32" pos:column="15">pop3c<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">apoptimestamp<pos:position pos:line="32" pos:column="35"/></name></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36">
            <block type="pseudo"><break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break></block></then></if>

          <comment type="block" pos:line="35" pos:column="11">/* Copy the timestamp */</comment>
          <expr_stmt><expr><call><name pos:line="36" pos:column="11">memcpy<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name><name pos:line="36" pos:column="18">pop3c<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">apoptimestamp<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">line<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">+<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="47">i<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">timestamplen<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="37" pos:column="11">pop3c<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">apoptimestamp<pos:position pos:line="37" pos:column="31"/></name><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">timestamplen<pos:position pos:line="37" pos:column="44"/></name></expr>]<pos:position pos:line="37" pos:column="45"/></index></name> <operator pos:line="37" pos:column="46">=<pos:position pos:line="37" pos:column="47"/></operator> <literal type="char" pos:line="37" pos:column="48">'\0'<pos:position pos:line="37" pos:column="52"/></literal></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

          <comment type="block" pos:line="39" pos:column="11">/* Store the APOP capability */</comment>
          <expr_stmt><expr><name><name pos:line="40" pos:column="11">pop3c<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">authtypes<pos:position pos:line="40" pos:column="27"/></name></name> <operator pos:line="40" pos:column="28">|=<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">POP3_TYPE_APOP<pos:position pos:line="40" pos:column="45"/></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
          <break pos:line="41" pos:column="11">break;<pos:position pos:line="41" pos:column="17"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
      }<pos:position pos:line="43" pos:column="8"/></block></for>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="46" pos:column="5">result<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">pop3_perform_capa<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">conn<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></else></if>

  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">result<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

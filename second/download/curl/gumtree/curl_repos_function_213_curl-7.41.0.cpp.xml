<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_213_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">setsock<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fdp<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">curl_socket_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">s<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">CURL<pos:position pos:line="1" pos:column="52"/></name><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">e<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">act<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">GlobalInfo<pos:position pos:line="1" pos:column="75"/></name><modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">g<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">fprintf<pos:position pos:line="3" pos:column="10"/></name><argument_list pos:line="3" pos:column="10">(<argument><expr><name pos:line="3" pos:column="11">MSG_OUT<pos:position pos:line="3" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="20">"\nsetsock: socket=%d, act=%d, fdp=%p"<pos:position pos:line="3" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="60">s<pos:position pos:line="3" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="63">act<pos:position pos:line="3" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="68">fdp<pos:position pos:line="3" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="73"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">std<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">::<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">map<pos:position pos:line="5" pos:column="11"/></name><argument_list type="generic" pos:line="5" pos:column="11">&lt;<argument><expr><name pos:line="5" pos:column="12">curl_socket_t<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="27">boost<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">::<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">asio<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">::<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">ip<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">::<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="44">tcp<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">::<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">socket<pos:position pos:line="5" pos:column="55"/></name></name> <operator pos:line="5" pos:column="56">*<pos:position pos:line="5" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="61"/></argument_list></name><operator pos:line="5" pos:column="58">::<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="60">iterator<pos:position pos:line="5" pos:column="68"/></name></name></type> <name pos:line="5" pos:column="69">it<pos:position pos:line="5" pos:column="71"/></name> <init pos:line="5" pos:column="72">= <expr><call><name><name pos:line="5" pos:column="74">socket_map<pos:position pos:line="5" pos:column="84"/></name><operator pos:line="5" pos:column="84">.<pos:position pos:line="5" pos:column="85"/></operator><name pos:line="5" pos:column="85">find<pos:position pos:line="5" pos:column="89"/></name></name><argument_list pos:line="5" pos:column="89">(<argument><expr><name pos:line="5" pos:column="90">s<pos:position pos:line="5" pos:column="91"/></name></expr></argument>)<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="93"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">it<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">==<pos:position pos:line="7" pos:column="11"/></operator> <call><name><name pos:line="7" pos:column="12">socket_map<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">end<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
  <block pos:line="8" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">MSG_OUT<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="22">"\nsocket %d is a c-ares socket, ignoring"<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">s<pos:position pos:line="9" pos:column="67"/></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>

    <return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">boost<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">::<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">asio<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">::<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">ip<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">::<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">tcp<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">::<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">socket<pos:position pos:line="14" pos:column="31"/></name></name> <modifier pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></modifier></type> <name pos:line="14" pos:column="34">tcp_socket<pos:position pos:line="14" pos:column="44"/></name> <init pos:line="14" pos:column="45">= <expr><name><name pos:line="14" pos:column="47">it<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">second<pos:position pos:line="14" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="58"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">fdp<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <name pos:line="16" pos:column="10">act<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></expr_stmt>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">act<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">==<pos:position pos:line="18" pos:column="12"/></operator> <name pos:line="18" pos:column="13">CURL_POLL_IN<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">MSG_OUT<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="22">"\nwatching for socket to become readable"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">tcp_socket<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">async_read_some<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">(<argument><expr><call><name><name pos:line="22" pos:column="33">boost<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">::<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">asio<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">::<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">null_buffers<pos:position pos:line="22" pos:column="58"/></name></name><argument_list pos:line="22" pos:column="58">()<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr></argument>,
                                <argument><expr><call><name><name pos:line="23" pos:column="33">boost<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">::<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">bind<pos:position pos:line="23" pos:column="44"/></name></name><argument_list pos:line="23" pos:column="44">(<argument><expr><operator pos:line="23" pos:column="45">&amp;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="46">event_cb<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">g<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">tcp_socket<pos:position pos:line="23" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="71">act<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then>
  <elseif pos:line="25" pos:column="3">else <if pos:line="25" pos:column="8">if <condition pos:line="25" pos:column="11">(<expr><name pos:line="25" pos:column="12">act<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">CURL_POLL_OUT<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">MSG_OUT<pos:position pos:line="27" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="22">"\nwatching for socket to become writable"<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">tcp_socket<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">async_write_some<pos:position pos:line="29" pos:column="33"/></name></name><argument_list pos:line="29" pos:column="33">(<argument><expr><call><name><name pos:line="29" pos:column="34">boost<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">::<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="41">asio<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">::<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="47">null_buffers<pos:position pos:line="29" pos:column="59"/></name></name><argument_list pos:line="29" pos:column="59">()<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr></argument>,
                                 <argument><expr><call><name><name pos:line="30" pos:column="34">boost<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">::<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">bind<pos:position pos:line="30" pos:column="45"/></name></name><argument_list pos:line="30" pos:column="45">(<argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="47">event_cb<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">g<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">tcp_socket<pos:position pos:line="30" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="72">act<pos:position pos:line="30" pos:column="75"/></name></expr></argument>)<pos:position pos:line="30" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="32" pos:column="3">else <if pos:line="32" pos:column="8">if<condition pos:line="32" pos:column="10">(<expr><name pos:line="32" pos:column="11">act<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">==<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">CURL_POLL_INOUT<pos:position pos:line="32" pos:column="33"/></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fprintf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">MSG_OUT<pos:position pos:line="34" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="22">"\nwatching for socket to become readable &amp; writable"<pos:position pos:line="34" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">tcp_socket<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">async_read_some<pos:position pos:line="36" pos:column="32"/></name></name><argument_list pos:line="36" pos:column="32">(<argument><expr><call><name><name pos:line="36" pos:column="33">boost<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">::<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">asio<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">::<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">null_buffers<pos:position pos:line="36" pos:column="58"/></name></name><argument_list pos:line="36" pos:column="58">()<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr></argument>,
                                <argument><expr><call><name><name pos:line="37" pos:column="33">boost<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">::<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">bind<pos:position pos:line="37" pos:column="44"/></name></name><argument_list pos:line="37" pos:column="44">(<argument><expr><operator pos:line="37" pos:column="45">&amp;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="46">event_cb<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">g<pos:position pos:line="37" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="59">tcp_socket<pos:position pos:line="37" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="71">act<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">tcp_socket<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">async_write_some<pos:position pos:line="39" pos:column="33"/></name></name><argument_list pos:line="39" pos:column="33">(<argument><expr><call><name><name pos:line="39" pos:column="34">boost<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">::<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">asio<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">::<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">null_buffers<pos:position pos:line="39" pos:column="59"/></name></name><argument_list pos:line="39" pos:column="59">()<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr></argument>,
                                 <argument><expr><call><name><name pos:line="40" pos:column="34">boost<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">::<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">bind<pos:position pos:line="40" pos:column="45"/></name></name><argument_list pos:line="40" pos:column="45">(<argument><expr><operator pos:line="40" pos:column="46">&amp;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="47">event_cb<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">g<pos:position pos:line="40" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">tcp_socket<pos:position pos:line="40" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="72">act<pos:position pos:line="40" pos:column="75"/></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

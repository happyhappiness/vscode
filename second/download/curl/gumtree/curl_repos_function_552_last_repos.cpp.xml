<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_552_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">test_string_formatting<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">errors<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><literal type="number" pos:line="4" pos:column="12">256<pos:position pos:line="4" pos:column="15"/></literal></expr>]<pos:position pos:line="4" pos:column="16"/></index></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">curl_msnprintf<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">buf<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="23">sizeof<argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">buf<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="36">"%0*d%s"<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="46">2<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="49">9<pos:position pos:line="5" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="52">"foo"<pos:position pos:line="5" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">errors<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">+=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">string_check<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">buf<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"09foo"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">curl_msnprintf<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">buf<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="23">sizeof<argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="36">"%*.*s"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="45">5<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">2<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="51">"foo"<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">errors<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">+=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">string_check<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">buf<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"   fo"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">curl_msnprintf<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">buf<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="23">sizeof<argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">buf<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">"%*.*s"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="45">2<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="48">5<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="51">"foo"<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">errors<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">+=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">string_check<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">buf<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"foo"<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curl_msnprintf<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="23">sizeof<argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">buf<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"%*.*s"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">10<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="52">"foo"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">errors<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">+=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">string_check<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">buf<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"foo"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">curl_msnprintf<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">buf<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="23">sizeof<argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">"%-10s"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="45">"foo"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">errors<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">+=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">string_check<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"foo       "<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">curl_msnprintf<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="23">sizeof<argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"%10s"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="44">"foo"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">errors<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">+=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">string_check<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">buf<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"       foo"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">curl_msnprintf<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">buf<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="23">sizeof<argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">buf<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">"%*.*s"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="45">-<pos:position pos:line="23" pos:column="46"/></operator><literal type="number" pos:line="23" pos:column="46">10<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="50">-<pos:position pos:line="23" pos:column="51"/></operator><literal type="number" pos:line="23" pos:column="51">10<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="55">"foo"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">errors<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">+=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">string_check<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">buf<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"foo       "<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><operator pos:line="26" pos:column="6">!<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">errors<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">printf<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"All curl_mprintf() strings tests OK!\n"<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">printf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"Some curl_mprintf() string tests Failed!\n"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></else></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">errors<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

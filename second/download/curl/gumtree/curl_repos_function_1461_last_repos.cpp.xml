<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1461_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prune_dead_connections<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">Curl_easy<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">curltime<pos:position pos:line="3" pos:column="18"/></name></name></type> <name pos:line="3" pos:column="19">now<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">Curl_tvnow<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">()<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">time_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">elapsed<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">Curl_tvdiff<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">now<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="37">data<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="43">state<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">.<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">conn_cache<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">-&gt;<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="61">last_cleanup<pos:position pos:line="4" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="75"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">elapsed<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">&gt;=<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="17">1000L<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Curl_conncache_foreach<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name><name pos:line="7" pos:column="28">data<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">state<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">conn_cache<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">data<pos:position pos:line="7" pos:column="56"/></name></expr></argument>,
                           <argument><expr><name pos:line="8" pos:column="28">call_disconnect_if_dead<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">data<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">state<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">conn_cache<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">last_cleanup<pos:position pos:line="9" pos:column="41"/></name></name> <operator pos:line="9" pos:column="42">=<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="44">now<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

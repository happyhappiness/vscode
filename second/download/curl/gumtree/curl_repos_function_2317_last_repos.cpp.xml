<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2317_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_auth_digest_get_pair<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">str<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">value<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">content<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">endptr<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">c<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">starts_with_quote<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">FALSE<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bool<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">escape<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">FALSE<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">c<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">DIGEST_MAX_VALUE_LENGTH<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">-<pos:position pos:line="8" pos:column="36"/></operator> <literal type="number" pos:line="8" pos:column="37">1<pos:position pos:line="8" pos:column="38"/></literal></expr>;<pos:position pos:line="8" pos:column="39"/></init> <condition><expr><operator pos:line="8" pos:column="40">(<pos:position pos:line="8" pos:column="41"/></operator><operator pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">str<pos:position pos:line="8" pos:column="45"/></name> <operator pos:line="8" pos:column="46">&amp;&amp;<pos:position pos:line="8" pos:column="56"/></operator> <operator pos:line="8" pos:column="49">(<pos:position pos:line="8" pos:column="50"/></operator><operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">str<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">!=<pos:position pos:line="8" pos:column="57"/></operator> <literal type="char" pos:line="8" pos:column="58">'='<pos:position pos:line="8" pos:column="61"/></literal><operator pos:line="8" pos:column="61">)<pos:position pos:line="8" pos:column="62"/></operator> <operator pos:line="8" pos:column="63">&amp;&amp;<pos:position pos:line="8" pos:column="73"/></operator> <name pos:line="8" pos:column="66">c<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">--<pos:position pos:line="8" pos:column="69"/></operator><operator pos:line="8" pos:column="69">)<pos:position pos:line="8" pos:column="70"/></operator></expr>;<pos:position pos:line="8" pos:column="71"/></condition><incr/>)<pos:position pos:line="8" pos:column="72"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">value<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">++<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">str<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">++<pos:position pos:line="9" pos:column="22"/></operator></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt></block></for>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">*<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">value<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><literal type="char" pos:line="12" pos:column="6">'='<pos:position pos:line="12" pos:column="9"/></literal> <operator pos:line="12" pos:column="10">!=<pos:position pos:line="12" pos:column="12"/></operator> <operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">str<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">++<pos:position pos:line="12" pos:column="19"/></operator></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
    <comment type="block" pos:line="13" pos:column="5">/* eek, no match */</comment>
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">FALSE<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><literal type="char" pos:line="16" pos:column="6">'\"'<pos:position pos:line="16" pos:column="10"/></literal> <operator pos:line="16" pos:column="11">==<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">str<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
    <comment type="block" pos:line="17" pos:column="5">/* This starts with a quote so it must end with one as well! */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">str<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">++<pos:position pos:line="18" pos:column="10"/></operator></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">starts_with_quote<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">TRUE<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <for pos:line="22" pos:column="3">for<control pos:line="22" pos:column="6">(<init><expr><name pos:line="22" pos:column="7">c<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <name pos:line="22" pos:column="11">DIGEST_MAX_CONTENT_LENGTH<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator> <literal type="number" pos:line="22" pos:column="39">1<pos:position pos:line="22" pos:column="40"/></literal></expr>;<pos:position pos:line="22" pos:column="41"/></init> <condition><expr><operator pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">str<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">&amp;&amp;<pos:position pos:line="22" pos:column="57"/></operator> <name pos:line="22" pos:column="50">c<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">--<pos:position pos:line="22" pos:column="53"/></operator></expr>;<pos:position pos:line="22" pos:column="54"/></condition> <incr><expr><name pos:line="22" pos:column="55">str<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">++<pos:position pos:line="22" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="61"/></control> <block pos:line="22" pos:column="62">{
    <switch pos:line="23" pos:column="5">switch<condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">str<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition> <block pos:line="23" pos:column="18">{
    <case pos:line="24" pos:column="5">case <expr><literal type="char" pos:line="24" pos:column="10">'\\'<pos:position pos:line="24" pos:column="14"/></literal></expr>:<pos:position pos:line="24" pos:column="15"/></case>
      <if pos:line="25" pos:column="7">if<condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">!<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">escape<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
        <comment type="block" pos:line="26" pos:column="9">/* possibly the start of an escaped quote */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">escape<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">TRUE<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">content<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">++<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="char" pos:line="28" pos:column="22">'\\'<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt> <comment type="block" pos:line="28" pos:column="28">/* Even though this is an escape character, we still
                              store it as-is in the target buffer */</comment>
        <continue pos:line="30" pos:column="9">continue;<pos:position pos:line="30" pos:column="18"/></continue>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>

    <case pos:line="34" pos:column="5">case <expr><literal type="char" pos:line="34" pos:column="10">','<pos:position pos:line="34" pos:column="13"/></literal></expr>:<pos:position pos:line="34" pos:column="14"/></case>
      <if pos:line="35" pos:column="7">if<condition pos:line="35" pos:column="9">(<expr><operator pos:line="35" pos:column="10">!<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">starts_with_quote<pos:position pos:line="35" pos:column="28"/></name></expr>)<pos:position pos:line="35" pos:column="29"/></condition><then pos:line="35" pos:column="29"> <block pos:line="35" pos:column="30">{
        <comment type="block" pos:line="36" pos:column="9">/* This signals the end of the content if we didn't get a starting
           quote and then we do "sloppy" parsing */</comment>
        <expr_stmt><expr><name pos:line="38" pos:column="9">c<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></expr_stmt> <comment type="block" pos:line="38" pos:column="16">/* the end */</comment>
        <continue pos:line="39" pos:column="9">continue;<pos:position pos:line="39" pos:column="18"/></continue>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>

    <case pos:line="43" pos:column="5">case <expr><literal type="char" pos:line="43" pos:column="10">'\r'<pos:position pos:line="43" pos:column="14"/></literal></expr>:<pos:position pos:line="43" pos:column="15"/></case>
    <case pos:line="44" pos:column="5">case <expr><literal type="char" pos:line="44" pos:column="10">'\n'<pos:position pos:line="44" pos:column="14"/></literal></expr>:<pos:position pos:line="44" pos:column="15"/></case>
      <comment type="block" pos:line="45" pos:column="7">/* end of string */</comment>
      <expr_stmt><expr><name pos:line="46" pos:column="7">c<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <literal type="number" pos:line="46" pos:column="11">0<pos:position pos:line="46" pos:column="12"/></literal></expr>;<pos:position pos:line="46" pos:column="13"/></expr_stmt>
      <continue pos:line="47" pos:column="7">continue;<pos:position pos:line="47" pos:column="16"/></continue>

    <case pos:line="49" pos:column="5">case <expr><literal type="char" pos:line="49" pos:column="10">'\"'<pos:position pos:line="49" pos:column="14"/></literal></expr>:<pos:position pos:line="49" pos:column="15"/></case>
      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><operator pos:line="50" pos:column="10">!<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">escape<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">&amp;&amp;<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="21">starts_with_quote<pos:position pos:line="50" pos:column="38"/></name></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39"> <block pos:line="50" pos:column="40">{
        <comment type="block" pos:line="51" pos:column="9">/* end of string */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">c<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
        <continue pos:line="53" pos:column="9">continue;<pos:position pos:line="53" pos:column="18"/></continue>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>
      <break pos:line="55" pos:column="7">break;<pos:position pos:line="55" pos:column="13"/></break>
    }<pos:position pos:line="56" pos:column="6"/></block></switch>

    <expr_stmt><expr><name pos:line="58" pos:column="5">escape<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">FALSE<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><name pos:line="59" pos:column="6">content<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">++<pos:position pos:line="59" pos:column="15"/></operator> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">*<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">str<pos:position pos:line="59" pos:column="22"/></name></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></for>

  <expr_stmt><expr><operator pos:line="62" pos:column="3">*<pos:position pos:line="62" pos:column="4"/></operator><name pos:line="62" pos:column="4">content<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <literal type="number" pos:line="62" pos:column="14">0<pos:position pos:line="62" pos:column="15"/></literal></expr>;<pos:position pos:line="62" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="63" pos:column="3">*<pos:position pos:line="63" pos:column="4"/></operator><name pos:line="63" pos:column="4">endptr<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <name pos:line="63" pos:column="13">str<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></expr_stmt>

  <return pos:line="65" pos:column="3">return <expr><name pos:line="65" pos:column="10">TRUE<pos:position pos:line="65" pos:column="14"/></name></expr>;<pos:position pos:line="65" pos:column="15"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

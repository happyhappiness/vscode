<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_312_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_dict<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">nth<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">word<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">ppath<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">database<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">strategy<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">nthdef<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt> <comment type="block" pos:line="8" pos:column="24">/* This is not part of the protocol, but required
                          by RFC 2229 */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name><init pos:line="10" pos:column="18">=<expr><name pos:line="10" pos:column="19">CURLE_OK<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">SessionHandle<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">data<pos:position pos:line="11" pos:column="29"/></name><init pos:line="11" pos:column="29">=<expr><name><name pos:line="11" pos:column="30">conn<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">data<pos:position pos:line="11" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">path<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><name><name pos:line="13" pos:column="16">conn<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">path<pos:position pos:line="13" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">long<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">bytecount<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator><name><name pos:line="14" pos:column="22">conn<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">bytecount<pos:position pos:line="14" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">conn<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">bits<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">user_passwd<pos:position pos:line="16" pos:column="28"/></name></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
    <comment type="block" pos:line="17" pos:column="5">/* AUTH is missing */</comment>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">strnequal<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">path<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">DICT_MATCH<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="35">sizeof<argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">DICT_MATCH<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></sizeof><operator pos:line="20" pos:column="53">-<pos:position pos:line="20" pos:column="54"/></operator><literal type="number" pos:line="20" pos:column="54">1<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call> <operator pos:line="20" pos:column="57">||<pos:position pos:line="20" pos:column="59"/></operator>
      <call><name pos:line="21" pos:column="7">strnequal<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">path<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="23">DICT_MATCH2<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="36">sizeof<argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">DICT_MATCH2<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></sizeof><operator pos:line="21" pos:column="55">-<pos:position pos:line="21" pos:column="56"/></operator><literal type="number" pos:line="21" pos:column="56">1<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call> <operator pos:line="21" pos:column="59">||<pos:position pos:line="21" pos:column="61"/></operator>
      <call><name pos:line="22" pos:column="7">strnequal<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">path<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">DICT_MATCH3<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="36">sizeof<argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">DICT_MATCH3<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></sizeof><operator pos:line="22" pos:column="55">-<pos:position pos:line="22" pos:column="56"/></operator><literal type="number" pos:line="22" pos:column="56">1<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59"> <block pos:line="22" pos:column="60">{
      
    <expr_stmt><expr><name pos:line="24" pos:column="5">word<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">strchr<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">path<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="25">':'<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">word<pos:position pos:line="25" pos:column="13"/></name></expr>)<pos:position pos:line="25" pos:column="14"/></condition><then pos:line="25" pos:column="14"> <block pos:line="25" pos:column="15">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">word<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">++<pos:position pos:line="26" pos:column="13"/></operator></expr>;<pos:position pos:line="26" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">database<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">strchr<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">word<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="31">':'<pos:position pos:line="27" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">database<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20"> <block pos:line="28" pos:column="21">{
        <expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">database<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">char<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator><literal type="number" pos:line="29" pos:column="29">0<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">strategy<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <call><name pos:line="30" pos:column="20">strchr<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">database<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="37">':'<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">strategy<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22"> <block pos:line="31" pos:column="23">{
          <expr_stmt><expr><operator pos:line="32" pos:column="11">*<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">strategy<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">++<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="25">(<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">char<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="33" pos:column="11">nthdef<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">strchr<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">strategy<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="37">':'<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
          <if pos:line="34" pos:column="11">if <condition pos:line="34" pos:column="14">(<expr><name pos:line="34" pos:column="15">nthdef<pos:position pos:line="34" pos:column="21"/></name></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22"> <block pos:line="34" pos:column="23">{
            <expr_stmt><expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">nthdef<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">++<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">char<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">)<pos:position pos:line="35" pos:column="31"/></operator><literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
          }<pos:position pos:line="36" pos:column="12"/></block></then></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
      
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">word<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">==<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">NULL<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">||<pos:position pos:line="41" pos:column="26"/></operator> <operator pos:line="41" pos:column="27">(<pos:position pos:line="41" pos:column="28"/></operator><operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">word<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">==<pos:position pos:line="41" pos:column="36"/></operator> <operator pos:line="41" pos:column="37">(<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">char<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">)<pos:position pos:line="41" pos:column="43"/></operator><literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal><operator pos:line="41" pos:column="44">)<pos:position pos:line="41" pos:column="45"/></operator></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46"> <block pos:line="41" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">failf<pos:position pos:line="42" pos:column="12"/></name><argument_list pos:line="42" pos:column="12">(<argument><expr><name pos:line="42" pos:column="13">data<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="19">"lookup word is missing"<pos:position pos:line="42" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">database<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">==<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">NULL<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">)<pos:position pos:line="44" pos:column="27"/></operator> <operator pos:line="44" pos:column="28">||<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">(<pos:position pos:line="44" pos:column="32"/></operator><operator pos:line="44" pos:column="32">*<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">database<pos:position pos:line="44" pos:column="41"/></name> <operator pos:line="44" pos:column="42">==<pos:position pos:line="44" pos:column="44"/></operator> <operator pos:line="44" pos:column="45">(<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">char<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator><literal type="number" pos:line="44" pos:column="51">0<pos:position pos:line="44" pos:column="52"/></literal><operator pos:line="44" pos:column="52">)<pos:position pos:line="44" pos:column="53"/></operator></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">database<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <operator pos:line="45" pos:column="18">(<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">char<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">)<pos:position pos:line="45" pos:column="26"/></operator><literal type="string" pos:line="45" pos:column="26">"!"<pos:position pos:line="45" pos:column="29"/></literal></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">strategy<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">==<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">NULL<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">)<pos:position pos:line="47" pos:column="27"/></operator> <operator pos:line="47" pos:column="28">||<pos:position pos:line="47" pos:column="30"/></operator> <operator pos:line="47" pos:column="31">(<pos:position pos:line="47" pos:column="32"/></operator><operator pos:line="47" pos:column="32">*<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">strategy<pos:position pos:line="47" pos:column="41"/></name> <operator pos:line="47" pos:column="42">==<pos:position pos:line="47" pos:column="44"/></operator> <operator pos:line="47" pos:column="45">(<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="46">char<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">)<pos:position pos:line="47" pos:column="51"/></operator><literal type="number" pos:line="47" pos:column="51">0<pos:position pos:line="47" pos:column="52"/></literal><operator pos:line="47" pos:column="52">)<pos:position pos:line="47" pos:column="53"/></operator></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54"> <block pos:line="47" pos:column="55">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">strategy<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">char<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></operator><operator pos:line="48" pos:column="25">)<pos:position pos:line="48" pos:column="26"/></operator><literal type="string" pos:line="48" pos:column="26">"."<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">nthdef<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="26">||<pos:position pos:line="50" pos:column="28"/></operator> <operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">*<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">nthdef<pos:position pos:line="50" pos:column="37"/></name> <operator pos:line="50" pos:column="38">==<pos:position pos:line="50" pos:column="40"/></operator> <operator pos:line="50" pos:column="41">(<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">char<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">)<pos:position pos:line="50" pos:column="47"/></operator><literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator></expr>)<pos:position pos:line="50" pos:column="50"/></condition><then pos:line="50" pos:column="50"> <block pos:line="50" pos:column="51">{
      <expr_stmt><expr><name pos:line="51" pos:column="7">nth<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <literal type="number" pos:line="51" pos:column="13">0<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
      <expr_stmt><expr><name pos:line="54" pos:column="7">nth<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">atoi<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><name pos:line="54" pos:column="18">nthdef<pos:position pos:line="54" pos:column="24"/></name></expr></argument>)<pos:position pos:line="54" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>
      
    <expr_stmt><expr><name pos:line="57" pos:column="5">result<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">Curl_sendf<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name><name pos:line="57" pos:column="25">conn<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">firstsocket<pos:position pos:line="57" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">conn<pos:position pos:line="57" pos:column="48"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="58" pos:column="25">"CLIENT "<pos:position pos:line="58" pos:column="34"/></literal> <name pos:line="58" pos:column="35">LIBCURL_NAME<pos:position pos:line="58" pos:column="47"/></name> <literal type="string" pos:line="58" pos:column="48">" "<pos:position pos:line="58" pos:column="51"/></literal> <name pos:line="58" pos:column="52">LIBCURL_VERSION<pos:position pos:line="58" pos:column="67"/></name> <literal type="string" pos:line="58" pos:column="68">"\n"<pos:position pos:line="58" pos:column="72"/></literal>
                        <literal type="string" pos:line="59" pos:column="25">"MATCH "<pos:position pos:line="59" pos:column="33"/></literal>
                        <literal type="string" pos:line="60" pos:column="25">"%s "<pos:position pos:line="60" pos:column="30"/></literal>    <comment type="block" pos:line="60" pos:column="34">/* database */</comment>
                        <literal type="string" pos:line="61" pos:column="25">"%s "<pos:position pos:line="61" pos:column="30"/></literal>    <comment type="block" pos:line="61" pos:column="34">/* strategy */</comment>
                        <literal type="string" pos:line="62" pos:column="25">"%s\n"<pos:position pos:line="62" pos:column="31"/></literal>   <comment type="block" pos:line="62" pos:column="34">/* word */</comment>
                        <literal type="string" pos:line="63" pos:column="25">"QUIT\n"<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>,
                        
                        <argument><expr><name pos:line="65" pos:column="25">database<pos:position pos:line="65" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="66" pos:column="25">strategy<pos:position pos:line="66" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="67" pos:column="25">word<pos:position pos:line="67" pos:column="29"/></name></expr></argument>
                        )<pos:position pos:line="68" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="27"/></expr_stmt>
    <if pos:line="69" pos:column="5">if<condition pos:line="69" pos:column="7">(<expr><name pos:line="69" pos:column="8">result<pos:position pos:line="69" pos:column="14"/></name></expr>)<pos:position pos:line="69" pos:column="15"/></condition><then pos:line="69" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="7">failf<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><name pos:line="70" pos:column="13">data<pos:position pos:line="70" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="19">"Failed sending DICT request"<pos:position pos:line="70" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="71" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="7">result<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <call><name pos:line="72" pos:column="16">Curl_Transfer<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">conn<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="36">conn<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">-&gt;<pos:position pos:line="72" pos:column="45"/></operator><name pos:line="72" pos:column="42">firstsocket<pos:position pos:line="72" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="55">-<pos:position pos:line="72" pos:column="56"/></operator><literal type="number" pos:line="72" pos:column="56">1<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="59">FALSE<pos:position pos:line="72" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="66">bytecount<pos:position pos:line="72" pos:column="75"/></name></expr></argument>,
                             <argument><expr><operator pos:line="73" pos:column="30">-<pos:position pos:line="73" pos:column="31"/></operator><literal type="number" pos:line="73" pos:column="31">1<pos:position pos:line="73" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">NULL<pos:position pos:line="73" pos:column="38"/></name></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt></block></else></if> <comment type="block" pos:line="73" pos:column="41">/* no upload */</comment>      
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><name pos:line="74" pos:column="8">result<pos:position pos:line="74" pos:column="14"/></name></expr>)<pos:position pos:line="74" pos:column="15"/></condition><then pos:line="74" pos:column="15">
      <block type="pseudo"><return pos:line="75" pos:column="7">return <expr><name pos:line="75" pos:column="14">result<pos:position pos:line="75" pos:column="20"/></name></expr>;<pos:position pos:line="75" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="76" pos:column="4"/></block></then>
  <elseif pos:line="77" pos:column="3">else <if pos:line="77" pos:column="8">if <condition pos:line="77" pos:column="11">(<expr><call><name pos:line="77" pos:column="12">strnequal<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">path<pos:position pos:line="77" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="28">DICT_DEFINE<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="41">sizeof<argument_list pos:line="77" pos:column="47">(<argument><expr><name pos:line="77" pos:column="48">DICT_DEFINE<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></sizeof><operator pos:line="77" pos:column="60">-<pos:position pos:line="77" pos:column="61"/></operator><literal type="number" pos:line="77" pos:column="61">1<pos:position pos:line="77" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call> <operator pos:line="77" pos:column="64">||<pos:position pos:line="77" pos:column="66"/></operator>
           <call><name pos:line="78" pos:column="12">strnequal<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">path<pos:position pos:line="78" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="28">DICT_DEFINE2<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="42">sizeof<argument_list pos:line="78" pos:column="48">(<argument><expr><name pos:line="78" pos:column="49">DICT_DEFINE2<pos:position pos:line="78" pos:column="61"/></name></expr></argument>)<pos:position pos:line="78" pos:column="62"/></argument_list></sizeof><operator pos:line="78" pos:column="62">-<pos:position pos:line="78" pos:column="63"/></operator><literal type="number" pos:line="78" pos:column="63">1<pos:position pos:line="78" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="65"/></argument_list></call> <operator pos:line="78" pos:column="66">||<pos:position pos:line="78" pos:column="68"/></operator>
           <call><name pos:line="79" pos:column="12">strnequal<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">path<pos:position pos:line="79" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="28">DICT_DEFINE3<pos:position pos:line="79" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="42">sizeof<argument_list pos:line="79" pos:column="48">(<argument><expr><name pos:line="79" pos:column="49">DICT_DEFINE3<pos:position pos:line="79" pos:column="61"/></name></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></sizeof><operator pos:line="79" pos:column="62">-<pos:position pos:line="79" pos:column="63"/></operator><literal type="number" pos:line="79" pos:column="63">1<pos:position pos:line="79" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="66"/></condition><then pos:line="79" pos:column="66"> <block pos:line="79" pos:column="67">{
    
    <expr_stmt><expr><name pos:line="81" pos:column="5">word<pos:position pos:line="81" pos:column="9"/></name> <operator pos:line="81" pos:column="10">=<pos:position pos:line="81" pos:column="11"/></operator> <call><name pos:line="81" pos:column="12">strchr<pos:position pos:line="81" pos:column="18"/></name><argument_list pos:line="81" pos:column="18">(<argument><expr><name pos:line="81" pos:column="19">path<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="81" pos:column="25">':'<pos:position pos:line="81" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="30"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">word<pos:position pos:line="82" pos:column="13"/></name></expr>)<pos:position pos:line="82" pos:column="14"/></condition><then pos:line="82" pos:column="14"> <block pos:line="82" pos:column="15">{
      <expr_stmt><expr><name pos:line="83" pos:column="7">word<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">++<pos:position pos:line="83" pos:column="13"/></operator></expr>;<pos:position pos:line="83" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="84" pos:column="7">database<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">strchr<pos:position pos:line="84" pos:column="24"/></name><argument_list pos:line="84" pos:column="24">(<argument><expr><name pos:line="84" pos:column="25">word<pos:position pos:line="84" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="84" pos:column="31">':'<pos:position pos:line="84" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="36"/></expr_stmt>
      <if pos:line="85" pos:column="7">if <condition pos:line="85" pos:column="10">(<expr><name pos:line="85" pos:column="11">database<pos:position pos:line="85" pos:column="19"/></name></expr>)<pos:position pos:line="85" pos:column="20"/></condition><then pos:line="85" pos:column="20"> <block pos:line="85" pos:column="21">{
        <expr_stmt><expr><operator pos:line="86" pos:column="9">*<pos:position pos:line="86" pos:column="10"/></operator><name pos:line="86" pos:column="10">database<pos:position pos:line="86" pos:column="18"/></name><operator pos:line="86" pos:column="18">++<pos:position pos:line="86" pos:column="20"/></operator> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <operator pos:line="86" pos:column="23">(<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">char<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">)<pos:position pos:line="86" pos:column="29"/></operator><literal type="number" pos:line="86" pos:column="29">0<pos:position pos:line="86" pos:column="30"/></literal></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">nthdef<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <call><name pos:line="87" pos:column="18">strchr<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">database<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="87" pos:column="35">':'<pos:position pos:line="87" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">nthdef<pos:position pos:line="88" pos:column="19"/></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20"> <block pos:line="88" pos:column="21">{
          <expr_stmt><expr><operator pos:line="89" pos:column="11">*<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="12">nthdef<pos:position pos:line="89" pos:column="18"/></name><operator pos:line="89" pos:column="18">++<pos:position pos:line="89" pos:column="20"/></operator> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <operator pos:line="89" pos:column="23">(<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="24">char<pos:position pos:line="89" pos:column="28"/></name><operator pos:line="89" pos:column="28">)<pos:position pos:line="89" pos:column="29"/></operator><literal type="number" pos:line="89" pos:column="29">0<pos:position pos:line="89" pos:column="30"/></literal></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
      }<pos:position pos:line="91" pos:column="8"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
      
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">word<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">==<pos:position pos:line="94" pos:column="17"/></operator> <name pos:line="94" pos:column="18">NULL<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">)<pos:position pos:line="94" pos:column="23"/></operator> <operator pos:line="94" pos:column="24">||<pos:position pos:line="94" pos:column="26"/></operator> <operator pos:line="94" pos:column="27">(<pos:position pos:line="94" pos:column="28"/></operator><operator pos:line="94" pos:column="28">*<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="29">word<pos:position pos:line="94" pos:column="33"/></name> <operator pos:line="94" pos:column="34">==<pos:position pos:line="94" pos:column="36"/></operator> <operator pos:line="94" pos:column="37">(<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="38">char<pos:position pos:line="94" pos:column="42"/></name><operator pos:line="94" pos:column="42">)<pos:position pos:line="94" pos:column="43"/></operator><literal type="number" pos:line="94" pos:column="43">0<pos:position pos:line="94" pos:column="44"/></literal><operator pos:line="94" pos:column="44">)<pos:position pos:line="94" pos:column="45"/></operator></expr>)<pos:position pos:line="94" pos:column="46"/></condition><then pos:line="94" pos:column="46"> <block pos:line="94" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="95" pos:column="7">failf<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument><expr><name pos:line="95" pos:column="13">data<pos:position pos:line="95" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="19">"lookup word is missing"<pos:position pos:line="95" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">(<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">database<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">==<pos:position pos:line="97" pos:column="21"/></operator> <name pos:line="97" pos:column="22">NULL<pos:position pos:line="97" pos:column="26"/></name><operator pos:line="97" pos:column="26">)<pos:position pos:line="97" pos:column="27"/></operator> <operator pos:line="97" pos:column="28">||<pos:position pos:line="97" pos:column="30"/></operator> <operator pos:line="97" pos:column="31">(<pos:position pos:line="97" pos:column="32"/></operator><operator pos:line="97" pos:column="32">*<pos:position pos:line="97" pos:column="33"/></operator><name pos:line="97" pos:column="33">database<pos:position pos:line="97" pos:column="41"/></name> <operator pos:line="97" pos:column="42">==<pos:position pos:line="97" pos:column="44"/></operator> <operator pos:line="97" pos:column="45">(<pos:position pos:line="97" pos:column="46"/></operator><name pos:line="97" pos:column="46">char<pos:position pos:line="97" pos:column="50"/></name><operator pos:line="97" pos:column="50">)<pos:position pos:line="97" pos:column="51"/></operator><literal type="number" pos:line="97" pos:column="51">0<pos:position pos:line="97" pos:column="52"/></literal><operator pos:line="97" pos:column="52">)<pos:position pos:line="97" pos:column="53"/></operator></expr>)<pos:position pos:line="97" pos:column="54"/></condition><then pos:line="97" pos:column="54"> <block pos:line="97" pos:column="55">{
      <expr_stmt><expr><name pos:line="98" pos:column="7">database<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <operator pos:line="98" pos:column="18">(<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">char<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">*<pos:position pos:line="98" pos:column="25"/></operator><operator pos:line="98" pos:column="25">)<pos:position pos:line="98" pos:column="26"/></operator><literal type="string" pos:line="98" pos:column="26">"!"<pos:position pos:line="98" pos:column="29"/></literal></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><operator pos:line="100" pos:column="9">(<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">nthdef<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">==<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">NULL<pos:position pos:line="100" pos:column="24"/></name><operator pos:line="100" pos:column="24">)<pos:position pos:line="100" pos:column="25"/></operator> <operator pos:line="100" pos:column="26">||<pos:position pos:line="100" pos:column="28"/></operator> <operator pos:line="100" pos:column="29">(<pos:position pos:line="100" pos:column="30"/></operator><operator pos:line="100" pos:column="30">*<pos:position pos:line="100" pos:column="31"/></operator><name pos:line="100" pos:column="31">nthdef<pos:position pos:line="100" pos:column="37"/></name> <operator pos:line="100" pos:column="38">==<pos:position pos:line="100" pos:column="40"/></operator> <operator pos:line="100" pos:column="41">(<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="42">char<pos:position pos:line="100" pos:column="46"/></name><operator pos:line="100" pos:column="46">)<pos:position pos:line="100" pos:column="47"/></operator><literal type="number" pos:line="100" pos:column="47">0<pos:position pos:line="100" pos:column="48"/></literal><operator pos:line="100" pos:column="48">)<pos:position pos:line="100" pos:column="49"/></operator></expr>)<pos:position pos:line="100" pos:column="50"/></condition><then pos:line="100" pos:column="50"> <block pos:line="100" pos:column="51">{
      <expr_stmt><expr><name pos:line="101" pos:column="7">nth<pos:position pos:line="101" pos:column="10"/></name> <operator pos:line="101" pos:column="11">=<pos:position pos:line="101" pos:column="12"/></operator> <literal type="number" pos:line="101" pos:column="13">0<pos:position pos:line="101" pos:column="14"/></literal></expr>;<pos:position pos:line="101" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then>
    <else pos:line="103" pos:column="5">else <block pos:line="103" pos:column="10">{
      <expr_stmt><expr><name pos:line="104" pos:column="7">nth<pos:position pos:line="104" pos:column="10"/></name> <operator pos:line="104" pos:column="11">=<pos:position pos:line="104" pos:column="12"/></operator> <call><name pos:line="104" pos:column="13">atoi<pos:position pos:line="104" pos:column="17"/></name><argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">nthdef<pos:position pos:line="104" pos:column="24"/></name></expr></argument>)<pos:position pos:line="104" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></else></if>
      
    <expr_stmt><expr><name pos:line="107" pos:column="5">result<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">Curl_sendf<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name><name pos:line="107" pos:column="25">conn<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">firstsocket<pos:position pos:line="107" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="44">conn<pos:position pos:line="107" pos:column="48"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="108" pos:column="25">"CLIENT "<pos:position pos:line="108" pos:column="34"/></literal> <name pos:line="108" pos:column="35">LIBCURL_NAME<pos:position pos:line="108" pos:column="47"/></name> <literal type="string" pos:line="108" pos:column="48">" "<pos:position pos:line="108" pos:column="51"/></literal> <name pos:line="108" pos:column="52">LIBCURL_VERSION<pos:position pos:line="108" pos:column="67"/></name> <literal type="string" pos:line="108" pos:column="68">"\n"<pos:position pos:line="108" pos:column="72"/></literal>
                        <literal type="string" pos:line="109" pos:column="25">"DEFINE "<pos:position pos:line="109" pos:column="34"/></literal>
                        <literal type="string" pos:line="110" pos:column="25">"%s "<pos:position pos:line="110" pos:column="30"/></literal>     <comment type="block" pos:line="110" pos:column="35">/* database */</comment>
                        <literal type="string" pos:line="111" pos:column="25">"%s\n"<pos:position pos:line="111" pos:column="31"/></literal>    <comment type="block" pos:line="111" pos:column="35">/* word */</comment>
                        <literal type="string" pos:line="112" pos:column="25">"QUIT\n"<pos:position pos:line="112" pos:column="33"/></literal></expr></argument>,
                        <argument><expr><name pos:line="113" pos:column="25">database<pos:position pos:line="113" pos:column="33"/></name></expr></argument>,
                        <argument><expr><name pos:line="114" pos:column="25">word<pos:position pos:line="114" pos:column="29"/></name></expr></argument>)<pos:position pos:line="114" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="31"/></expr_stmt>
    <if pos:line="115" pos:column="5">if<condition pos:line="115" pos:column="7">(<expr><name pos:line="115" pos:column="8">result<pos:position pos:line="115" pos:column="14"/></name></expr>)<pos:position pos:line="115" pos:column="15"/></condition><then pos:line="115" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="7">failf<pos:position pos:line="116" pos:column="12"/></name><argument_list pos:line="116" pos:column="12">(<argument><expr><name pos:line="116" pos:column="13">data<pos:position pos:line="116" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="19">"Failed sending DICT request"<pos:position pos:line="116" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="117" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="7">result<pos:position pos:line="118" pos:column="13"/></name> <operator pos:line="118" pos:column="14">=<pos:position pos:line="118" pos:column="15"/></operator> <call><name pos:line="118" pos:column="16">Curl_Transfer<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">conn<pos:position pos:line="118" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="36">conn<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">-&gt;<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="42">firstsocket<pos:position pos:line="118" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="55">-<pos:position pos:line="118" pos:column="56"/></operator><literal type="number" pos:line="118" pos:column="56">1<pos:position pos:line="118" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="59">FALSE<pos:position pos:line="118" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="66">bytecount<pos:position pos:line="118" pos:column="75"/></name></expr></argument>,
                             <argument><expr><operator pos:line="119" pos:column="30">-<pos:position pos:line="119" pos:column="31"/></operator><literal type="number" pos:line="119" pos:column="31">1<pos:position pos:line="119" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="34">NULL<pos:position pos:line="119" pos:column="38"/></name></expr></argument>)<pos:position pos:line="119" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="40"/></expr_stmt></block></else></if> <comment type="block" pos:line="119" pos:column="41">/* no upload */</comment>
    
    <if pos:line="121" pos:column="5">if<condition pos:line="121" pos:column="7">(<expr><name pos:line="121" pos:column="8">result<pos:position pos:line="121" pos:column="14"/></name></expr>)<pos:position pos:line="121" pos:column="15"/></condition><then pos:line="121" pos:column="15">
      <block type="pseudo"><return pos:line="122" pos:column="7">return <expr><name pos:line="122" pos:column="14">result<pos:position pos:line="122" pos:column="20"/></name></expr>;<pos:position pos:line="122" pos:column="21"/></return></block></then></if>
      
  }<pos:position pos:line="124" pos:column="4"/></block></then></if></elseif>
  <else pos:line="125" pos:column="3">else <block pos:line="125" pos:column="8">{
      
    <expr_stmt><expr><name pos:line="127" pos:column="5">ppath<pos:position pos:line="127" pos:column="10"/></name> <operator pos:line="127" pos:column="11">=<pos:position pos:line="127" pos:column="12"/></operator> <call><name pos:line="127" pos:column="13">strchr<pos:position pos:line="127" pos:column="19"/></name><argument_list pos:line="127" pos:column="19">(<argument><expr><name pos:line="127" pos:column="20">path<pos:position pos:line="127" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="127" pos:column="26">'/'<pos:position pos:line="127" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="31"/></expr_stmt>
    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><name pos:line="128" pos:column="9">ppath<pos:position pos:line="128" pos:column="14"/></name></expr>)<pos:position pos:line="128" pos:column="15"/></condition><then pos:line="128" pos:column="15"> <block pos:line="128" pos:column="16">{
      <decl_stmt><decl><type><name pos:line="129" pos:column="7">int<pos:position pos:line="129" pos:column="10"/></name></type> <name pos:line="129" pos:column="11">i<pos:position pos:line="129" pos:column="12"/></name></decl>;<pos:position pos:line="129" pos:column="13"/></decl_stmt>
	
      <expr_stmt><expr><name pos:line="131" pos:column="7">ppath<pos:position pos:line="131" pos:column="12"/></name><operator pos:line="131" pos:column="12">++<pos:position pos:line="131" pos:column="14"/></operator></expr>;<pos:position pos:line="131" pos:column="15"/></expr_stmt>
      <for pos:line="132" pos:column="7">for <control pos:line="132" pos:column="11">(<init><expr><name pos:line="132" pos:column="12">i<pos:position pos:line="132" pos:column="13"/></name> <operator pos:line="132" pos:column="14">=<pos:position pos:line="132" pos:column="15"/></operator> <literal type="number" pos:line="132" pos:column="16">0<pos:position pos:line="132" pos:column="17"/></literal></expr>;<pos:position pos:line="132" pos:column="18"/></init> <condition><expr><name><name pos:line="132" pos:column="19">ppath<pos:position pos:line="132" pos:column="24"/></name><index pos:line="132" pos:column="24">[<expr><name pos:line="132" pos:column="25">i<pos:position pos:line="132" pos:column="26"/></name></expr>]<pos:position pos:line="132" pos:column="27"/></index></name></expr>;<pos:position pos:line="132" pos:column="28"/></condition> <incr><expr><name pos:line="132" pos:column="29">i<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">++<pos:position pos:line="132" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="132" pos:column="33"/></control> <block pos:line="132" pos:column="34">{
        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">ppath<pos:position pos:line="133" pos:column="18"/></name><index pos:line="133" pos:column="18">[<expr><name pos:line="133" pos:column="19">i<pos:position pos:line="133" pos:column="20"/></name></expr>]<pos:position pos:line="133" pos:column="21"/></index></name> <operator pos:line="133" pos:column="22">==<pos:position pos:line="133" pos:column="24"/></operator> <literal type="char" pos:line="133" pos:column="25">':'<pos:position pos:line="133" pos:column="28"/></literal></expr>)<pos:position pos:line="133" pos:column="29"/></condition><then pos:line="133" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="134" pos:column="11">ppath<pos:position pos:line="134" pos:column="16"/></name><index pos:line="134" pos:column="16">[<expr><name pos:line="134" pos:column="17">i<pos:position pos:line="134" pos:column="18"/></name></expr>]<pos:position pos:line="134" pos:column="19"/></index></name> <operator pos:line="134" pos:column="20">=<pos:position pos:line="134" pos:column="21"/></operator> <literal type="char" pos:line="134" pos:column="22">' '<pos:position pos:line="134" pos:column="25"/></literal></expr>;<pos:position pos:line="134" pos:column="26"/></expr_stmt></block></then></if>
      }<pos:position pos:line="135" pos:column="8"/></block></for>
      <expr_stmt><expr><name pos:line="136" pos:column="7">result<pos:position pos:line="136" pos:column="13"/></name> <operator pos:line="136" pos:column="14">=<pos:position pos:line="136" pos:column="15"/></operator> <call><name pos:line="136" pos:column="16">Curl_sendf<pos:position pos:line="136" pos:column="26"/></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name><name pos:line="136" pos:column="27">conn<pos:position pos:line="136" pos:column="31"/></name><operator pos:line="136" pos:column="31">-&gt;<pos:position pos:line="136" pos:column="36"/></operator><name pos:line="136" pos:column="33">firstsocket<pos:position pos:line="136" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="46">conn<pos:position pos:line="136" pos:column="50"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="137" pos:column="27">"CLIENT "<pos:position pos:line="137" pos:column="36"/></literal> <name pos:line="137" pos:column="37">LIBCURL_NAME<pos:position pos:line="137" pos:column="49"/></name> <literal type="string" pos:line="137" pos:column="50">" "<pos:position pos:line="137" pos:column="53"/></literal> <name pos:line="137" pos:column="54">LIBCURL_VERSION<pos:position pos:line="137" pos:column="69"/></name> <literal type="string" pos:line="137" pos:column="70">"\n"<pos:position pos:line="137" pos:column="74"/></literal>
                          <literal type="string" pos:line="138" pos:column="27">"%s\n"<pos:position pos:line="138" pos:column="33"/></literal>
                          <literal type="string" pos:line="139" pos:column="27">"QUIT\n"<pos:position pos:line="139" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="37">ppath<pos:position pos:line="139" pos:column="42"/></name></expr></argument>)<pos:position pos:line="139" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="44"/></expr_stmt>
      <if pos:line="140" pos:column="7">if<condition pos:line="140" pos:column="9">(<expr><name pos:line="140" pos:column="10">result<pos:position pos:line="140" pos:column="16"/></name></expr>)<pos:position pos:line="140" pos:column="17"/></condition><then pos:line="140" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="9">failf<pos:position pos:line="141" pos:column="14"/></name><argument_list pos:line="141" pos:column="14">(<argument><expr><name pos:line="141" pos:column="15">data<pos:position pos:line="141" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="21">"Failed sending DICT request"<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="52"/></expr_stmt></block></then>
      <else pos:line="142" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="9">result<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <call><name pos:line="143" pos:column="18">Curl_Transfer<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><name pos:line="143" pos:column="32">conn<pos:position pos:line="143" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="38">conn<pos:position pos:line="143" pos:column="42"/></name><operator pos:line="143" pos:column="42">-&gt;<pos:position pos:line="143" pos:column="47"/></operator><name pos:line="143" pos:column="44">firstsocket<pos:position pos:line="143" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="57">-<pos:position pos:line="143" pos:column="58"/></operator><literal type="number" pos:line="143" pos:column="58">1<pos:position pos:line="143" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="61">FALSE<pos:position pos:line="143" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="68">bytecount<pos:position pos:line="143" pos:column="77"/></name></expr></argument>,
                               <argument><expr><operator pos:line="144" pos:column="32">-<pos:position pos:line="144" pos:column="33"/></operator><literal type="number" pos:line="144" pos:column="33">1<pos:position pos:line="144" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="36">NULL<pos:position pos:line="144" pos:column="40"/></name></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="42"/></expr_stmt></block></else></if>
      <if pos:line="145" pos:column="7">if<condition pos:line="145" pos:column="9">(<expr><name pos:line="145" pos:column="10">result<pos:position pos:line="145" pos:column="16"/></name></expr>)<pos:position pos:line="145" pos:column="17"/></condition><then pos:line="145" pos:column="17">
        <block type="pseudo"><return pos:line="146" pos:column="9">return <expr><name pos:line="146" pos:column="16">result<pos:position pos:line="146" pos:column="22"/></name></expr>;<pos:position pos:line="146" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
  }<pos:position pos:line="148" pos:column="4"/></block></else></if>

  <return pos:line="150" pos:column="3">return <expr><name pos:line="150" pos:column="10">CURLE_OK<pos:position pos:line="150" pos:column="18"/></name></expr>;<pos:position pos:line="150" pos:column="19"/></return>
}<pos:position pos:line="151" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_683_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_close<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">SessionHandle<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">m<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">data<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">multi<pos:position pos:line="3" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">CURLDEBUG<pos:position pos:line="5" pos:column="17"/></name></cpp:ifdef>
  <comment type="block" pos:line="6" pos:column="3">/* only for debugging, scan through all connections and see if there's a
     pipe reference still identifying this handle */</comment>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">data<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">state<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">connc<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <name><name pos:line="9" pos:column="27">data<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">connc<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">type<pos:position pos:line="9" pos:column="50"/></name></name> <operator pos:line="9" pos:column="51">==<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="54">CONNCACHE_MULTI<pos:position pos:line="9" pos:column="69"/></name></expr>)<pos:position pos:line="9" pos:column="70"/></condition><then pos:line="9" pos:column="70"> <block pos:line="9" pos:column="71">{
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">conncache<pos:position pos:line="10" pos:column="21"/></name></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">c<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><name><name pos:line="10" pos:column="27">data<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">state<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">.<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">connc<pos:position pos:line="10" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">long<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">curl_llist<pos:position pos:line="12" pos:column="22"/></name></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">pipeline<pos:position pos:line="12" pos:column="32"/></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">curl_llist_element<pos:position pos:line="13" pos:column="30"/></name></name> <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier></type><name pos:line="13" pos:column="32">curr<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">connectdata<pos:position pos:line="14" pos:column="23"/></name></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">connptr<pos:position pos:line="14" pos:column="32"/></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>

    <for pos:line="16" pos:column="5">for<control pos:line="16" pos:column="8">(<init><expr><name pos:line="16" pos:column="9">i<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>;<pos:position pos:line="16" pos:column="13"/></init> <condition><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">&lt;<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="17">c<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">num<pos:position pos:line="16" pos:column="23"/></name></name></expr>;<pos:position pos:line="16" pos:column="24"/></condition> <incr><expr><name pos:line="16" pos:column="25">i<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">++<pos:position pos:line="16" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="29"/></control> <block pos:line="16" pos:column="30">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">connptr<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">c<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">connects<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><name pos:line="17" pos:column="29">i<pos:position pos:line="17" pos:column="30"/></name></expr>]<pos:position pos:line="17" pos:column="31"/></index></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><operator pos:line="18" pos:column="10">!<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">connptr<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
        <block type="pseudo"><continue pos:line="19" pos:column="9">continue;<pos:position pos:line="19" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="21" pos:column="7">pipeline<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">connptr<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">send_pipe<pos:position pos:line="21" pos:column="36"/></name></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
      <if pos:line="22" pos:column="7">if<condition pos:line="22" pos:column="9">(<expr><name pos:line="22" pos:column="10">pipeline<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">curr<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name><name pos:line="23" pos:column="21">pipeline<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">head<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></init> <condition><expr><name pos:line="23" pos:column="37">curr<pos:position pos:line="23" pos:column="41"/></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><name pos:line="23" pos:column="43">curr<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">=<pos:position pos:line="23" pos:column="48"/></operator><name><name pos:line="23" pos:column="48">curr<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">next<pos:position pos:line="23" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="59"/></control> <block pos:line="23" pos:column="60">{
          <if pos:line="24" pos:column="11">if<condition pos:line="24" pos:column="13">(<expr><name pos:line="24" pos:column="14">data<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <operator pos:line="24" pos:column="22">(<pos:position pos:line="24" pos:column="23"/></operator>struct <name pos:line="24" pos:column="30">SessionHandle<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">*<pos:position pos:line="24" pos:column="45"/></operator><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator> <name><name pos:line="24" pos:column="47">curr<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">ptr<pos:position pos:line="24" pos:column="56"/></name></name></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57"> <block pos:line="24" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">fprintf<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">stderr<pos:position pos:line="25" pos:column="27"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="26" pos:column="21">"MAJOR problem we %p are still in send pipe for %p done %d\n"<pos:position pos:line="26" pos:column="82"/></literal></expr></argument>,
                    <argument><expr><name pos:line="27" pos:column="21">data<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">connptr<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">connptr<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">bits<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">done<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="28" pos:column="12"/></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></for>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="31" pos:column="7">pipeline<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name><name pos:line="31" pos:column="18">connptr<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">recv_pipe<pos:position pos:line="31" pos:column="36"/></name></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">pipeline<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">curr<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name><name pos:line="33" pos:column="21">pipeline<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">head<pos:position pos:line="33" pos:column="35"/></name></name></expr>;<pos:position pos:line="33" pos:column="36"/></init> <condition><expr><name pos:line="33" pos:column="37">curr<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></condition> <incr><expr><name pos:line="33" pos:column="43">curr<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">=<pos:position pos:line="33" pos:column="48"/></operator><name><name pos:line="33" pos:column="48">curr<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">-&gt;<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="54">next<pos:position pos:line="33" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="33" pos:column="59"/></control> <block pos:line="33" pos:column="60">{
          <if pos:line="34" pos:column="11">if<condition pos:line="34" pos:column="13">(<expr><name pos:line="34" pos:column="14">data<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">(<pos:position pos:line="34" pos:column="23"/></operator>struct <name pos:line="34" pos:column="30">SessionHandle<pos:position pos:line="34" pos:column="43"/></name> <operator pos:line="34" pos:column="44">*<pos:position pos:line="34" pos:column="45"/></operator><operator pos:line="34" pos:column="45">)<pos:position pos:line="34" pos:column="46"/></operator> <name><name pos:line="34" pos:column="47">curr<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">-&gt;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="53">ptr<pos:position pos:line="34" pos:column="56"/></name></name></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57"> <block pos:line="34" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">fprintf<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">stderr<pos:position pos:line="35" pos:column="27"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="36" pos:column="21">"MAJOR problem we %p are still in recv pipe for %p done %d\n"<pos:position pos:line="36" pos:column="82"/></literal></expr></argument>,
                    <argument><expr><name pos:line="37" pos:column="21">data<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="27">connptr<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">connptr<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">bits<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">.<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">done<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="38" pos:column="12"/></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></for>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="41" pos:column="7">pipeline<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name><name pos:line="41" pos:column="18">connptr<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">pend_pipe<pos:position pos:line="41" pos:column="36"/></name></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">pipeline<pos:position pos:line="42" pos:column="18"/></name></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
        <for pos:line="43" pos:column="9">for <control pos:line="43" pos:column="13">(<init><expr><name pos:line="43" pos:column="14">curr<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <name><name pos:line="43" pos:column="21">pipeline<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">head<pos:position pos:line="43" pos:column="35"/></name></name></expr>;<pos:position pos:line="43" pos:column="36"/></init> <condition><expr><name pos:line="43" pos:column="37">curr<pos:position pos:line="43" pos:column="41"/></name></expr>;<pos:position pos:line="43" pos:column="42"/></condition> <incr><expr><name pos:line="43" pos:column="43">curr<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">=<pos:position pos:line="43" pos:column="48"/></operator><name><name pos:line="43" pos:column="48">curr<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">next<pos:position pos:line="43" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="43" pos:column="59"/></control> <block pos:line="43" pos:column="60">{
          <if pos:line="44" pos:column="11">if<condition pos:line="44" pos:column="13">(<expr><name pos:line="44" pos:column="14">data<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">==<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator>struct <name pos:line="44" pos:column="30">SessionHandle<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">*<pos:position pos:line="44" pos:column="45"/></operator><operator pos:line="44" pos:column="45">)<pos:position pos:line="44" pos:column="46"/></operator> <name><name pos:line="44" pos:column="47">curr<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">ptr<pos:position pos:line="44" pos:column="56"/></name></name></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">fprintf<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">stderr<pos:position pos:line="45" pos:column="27"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="46" pos:column="21">"MAJOR problem we %p are still in pend pipe for %p done %d\n"<pos:position pos:line="46" pos:column="82"/></literal></expr></argument>,
                    <argument><expr><name pos:line="47" pos:column="21">data<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">connptr<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="36">connptr<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">bits<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">.<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">done<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
          }<pos:position pos:line="48" pos:column="12"/></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></for>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><name pos:line="55" pos:column="6">m<pos:position pos:line="55" pos:column="7"/></name></expr>)<pos:position pos:line="55" pos:column="8"/></condition><then pos:line="55" pos:column="8">
    <comment type="block" pos:line="56" pos:column="5">/* This handle is still part of a multi handle, take care of this first
       and detach this handle from there. */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="5">Curl_multi_rmeasy<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name><name pos:line="58" pos:column="23">data<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">multi<pos:position pos:line="58" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">data<pos:position pos:line="58" pos:column="40"/></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="60" pos:column="3">data<pos:position pos:line="60" pos:column="7"/></name><operator pos:line="60" pos:column="7">-&gt;<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="9">magic<pos:position pos:line="60" pos:column="14"/></name></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">0<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt> <comment type="block" pos:line="60" pos:column="20">/* force a clear AFTER the possibly enforced removal from
                      the multi handle, since that function uses the magic
                      field! */</comment>

  <if pos:line="64" pos:column="3">if<condition pos:line="64" pos:column="5">(<expr><name><name pos:line="64" pos:column="6">data<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">state<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">connc<pos:position pos:line="64" pos:column="23"/></name></name></expr>)<pos:position pos:line="64" pos:column="24"/></condition><then pos:line="64" pos:column="24"> <block pos:line="64" pos:column="25">{

    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name><name pos:line="66" pos:column="8">data<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">state<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">connc<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">type<pos:position pos:line="66" pos:column="31"/></name></name> <operator pos:line="66" pos:column="32">==<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">CONNCACHE_PRIVATE<pos:position pos:line="66" pos:column="52"/></name></expr>)<pos:position pos:line="66" pos:column="53"/></condition><then pos:line="66" pos:column="53"> <block pos:line="66" pos:column="54">{
      <comment type="block" pos:line="67" pos:column="7">/* close all connections still alive that are in the private connection
         cache, as we no longer have the pointer left to the shared one. */</comment>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">close_connections<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">data<pos:position pos:line="69" pos:column="29"/></name></expr></argument>)<pos:position pos:line="69" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>

      <comment type="block" pos:line="71" pos:column="7">/* free the connection cache if allocated privately */</comment>
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">Curl_rm_connc<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name><name pos:line="72" pos:column="21">data<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">state<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">.<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="33">connc<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><name><name pos:line="76" pos:column="6">data<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">-&gt;<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="12">state<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">.<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">shared_conn<pos:position pos:line="76" pos:column="29"/></name></name></expr>)<pos:position pos:line="76" pos:column="30"/></condition><then pos:line="76" pos:column="30"> <block pos:line="76" pos:column="31">{
    <comment type="block" pos:line="77" pos:column="5">/* marked to be used by a pending connection so we can't kill this handle
       just yet */</comment>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">data<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">state<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">.<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">closed<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">=<pos:position pos:line="79" pos:column="25"/></operator> <name pos:line="79" pos:column="26">TRUE<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">CURLE_OK<pos:position pos:line="80" pos:column="20"/></name></expr>;<pos:position pos:line="80" pos:column="21"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <if pos:line="83" pos:column="3">if<condition pos:line="83" pos:column="5">(<expr><name><name pos:line="83" pos:column="6">data<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">dns<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">.<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="16">hostcachetype<pos:position pos:line="83" pos:column="29"/></name></name> <operator pos:line="83" pos:column="30">==<pos:position pos:line="83" pos:column="32"/></operator> <name pos:line="83" pos:column="33">HCACHE_PRIVATE<pos:position pos:line="83" pos:column="47"/></name></expr>)<pos:position pos:line="83" pos:column="48"/></condition><then pos:line="83" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="5">Curl_hash_destroy<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name><name pos:line="84" pos:column="23">data<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">dns<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">.<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="33">hostcache<pos:position pos:line="84" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt></block></then></if>

  <if pos:line="86" pos:column="3">if<condition pos:line="86" pos:column="5">(<expr><name><name pos:line="86" pos:column="6">data<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">-&gt;<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="12">state<pos:position pos:line="86" pos:column="17"/></name><operator pos:line="86" pos:column="17">.<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="18">rangestringalloc<pos:position pos:line="86" pos:column="34"/></name></name></expr>)<pos:position pos:line="86" pos:column="35"/></condition><then pos:line="86" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="5">free<pos:position pos:line="87" pos:column="9"/></name><argument_list pos:line="87" pos:column="9">(<argument><expr><name><name pos:line="87" pos:column="10">data<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">state<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">.<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="22">range<pos:position pos:line="87" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="89" pos:column="3">/* Free the pathbuffer */</comment>
  <expr_stmt><expr><call><name pos:line="90" pos:column="3">Curl_safefree<pos:position pos:line="90" pos:column="16"/></name><argument_list pos:line="90" pos:column="16">(<argument><expr><name><name pos:line="90" pos:column="17">data<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">state<pos:position pos:line="90" pos:column="28"/></name><operator pos:line="90" pos:column="28">.<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="29">pathbuffer<pos:position pos:line="90" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">Curl_safefree<pos:position pos:line="91" pos:column="16"/></name><argument_list pos:line="91" pos:column="16">(<argument><expr><name><name pos:line="91" pos:column="17">data<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-&gt;<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="23">state<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">.<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">proto<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">.<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="35">generic<pos:position pos:line="91" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="93" pos:column="3">/* Close down all open SSL info and sessions */</comment>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">Curl_ssl_close_all<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">data<pos:position pos:line="94" pos:column="26"/></name></expr></argument>)<pos:position pos:line="94" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">Curl_safefree<pos:position pos:line="95" pos:column="16"/></name><argument_list pos:line="95" pos:column="16">(<argument><expr><name><name pos:line="95" pos:column="17">data<pos:position pos:line="95" pos:column="21"/></name><operator pos:line="95" pos:column="21">-&gt;<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="23">state<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">.<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="29">first_host<pos:position pos:line="95" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">Curl_safefree<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><name><name pos:line="96" pos:column="17">data<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">state<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">.<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="29">scratch<pos:position pos:line="96" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>

  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name><name pos:line="98" pos:column="6">data<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">change<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">.<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">referer_alloc<pos:position pos:line="98" pos:column="32"/></name></name></expr>)<pos:position pos:line="98" pos:column="33"/></condition><then pos:line="98" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="5">free<pos:position pos:line="99" pos:column="9"/></name><argument_list pos:line="99" pos:column="9">(<argument><expr><name><name pos:line="99" pos:column="10">data<pos:position pos:line="99" pos:column="14"/></name><operator pos:line="99" pos:column="14">-&gt;<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="16">change<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">.<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="23">referer<pos:position pos:line="99" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="32"/></expr_stmt></block></then></if>

  <if pos:line="101" pos:column="3">if<condition pos:line="101" pos:column="5">(<expr><name><name pos:line="101" pos:column="6">data<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">change<pos:position pos:line="101" pos:column="18"/></name><operator pos:line="101" pos:column="18">.<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="19">url_alloc<pos:position pos:line="101" pos:column="28"/></name></name></expr>)<pos:position pos:line="101" pos:column="29"/></condition><then pos:line="101" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="5">free<pos:position pos:line="102" pos:column="9"/></name><argument_list pos:line="102" pos:column="9">(<argument><expr><name><name pos:line="102" pos:column="10">data<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">change<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">.<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">url<pos:position pos:line="102" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="28"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="104" pos:column="3">Curl_safefree<pos:position pos:line="104" pos:column="16"/></name><argument_list pos:line="104" pos:column="16">(<argument><expr><name><name pos:line="104" pos:column="17">data<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">-&gt;<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="23">state<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">.<pos:position pos:line="104" pos:column="29"/></operator><name pos:line="104" pos:column="29">headerbuff<pos:position pos:line="104" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>

<cpp:if pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">if<pos:position pos:line="106" pos:column="4"/></cpp:directive> <expr><operator pos:line="106" pos:column="5">!<pos:position pos:line="106" pos:column="6"/></operator><call><name pos:line="106" pos:column="6">defined<pos:position pos:line="106" pos:column="13"/></name><argument_list pos:line="106" pos:column="13">(<argument><expr><name pos:line="106" pos:column="14">CURL_DISABLE_HTTP<pos:position pos:line="106" pos:column="31"/></name></expr></argument>)<pos:position pos:line="106" pos:column="32"/></argument_list></call> <operator pos:line="106" pos:column="33">&amp;&amp;<pos:position pos:line="106" pos:column="43"/></operator> <operator pos:line="106" pos:column="36">!<pos:position pos:line="106" pos:column="37"/></operator><call><name pos:line="106" pos:column="37">defined<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name pos:line="106" pos:column="45">CURL_DISABLE_COOKIES<pos:position pos:line="106" pos:column="65"/></name></expr></argument>)<pos:position pos:line="106" pos:column="66"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="107" pos:column="3">flush_cookies<pos:position pos:line="107" pos:column="16"/></name><argument_list pos:line="107" pos:column="16">(<argument><expr><name pos:line="107" pos:column="17">data<pos:position pos:line="107" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="23">1<pos:position pos:line="107" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="110" pos:column="3">Curl_digest_cleanup<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">data<pos:position pos:line="110" pos:column="27"/></name></expr></argument>)<pos:position pos:line="110" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="112" pos:column="3">Curl_safefree<pos:position pos:line="112" pos:column="16"/></name><argument_list pos:line="112" pos:column="16">(<argument><expr><name><name pos:line="112" pos:column="17">data<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">-&gt;<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="23">info<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">.<pos:position pos:line="112" pos:column="28"/></operator><name pos:line="112" pos:column="28">contenttype<pos:position pos:line="112" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="41"/></expr_stmt>

  <comment type="block" pos:line="114" pos:column="3">/* this destroys the channel and we cannot use it anymore after this */</comment>
  <expr_stmt><expr><call><name pos:line="115" pos:column="3">ares_destroy<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><name><name pos:line="115" pos:column="16">data<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">-&gt;<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="22">state<pos:position pos:line="115" pos:column="27"/></name><operator pos:line="115" pos:column="27">.<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="28">areschannel<pos:position pos:line="115" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="41"/></expr_stmt>

<cpp:if pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">if<pos:position pos:line="117" pos:column="4"/></cpp:directive> <expr><call><name pos:line="117" pos:column="5">defined<pos:position pos:line="117" pos:column="12"/></name><argument_list pos:line="117" pos:column="12">(<argument><expr><name pos:line="117" pos:column="13">CURL_DOES_CONVERSIONS<pos:position pos:line="117" pos:column="34"/></name></expr></argument>)<pos:position pos:line="117" pos:column="35"/></argument_list></call> <operator pos:line="117" pos:column="36">&amp;&amp;<pos:position pos:line="117" pos:column="46"/></operator> <call><name pos:line="117" pos:column="39">defined<pos:position pos:line="117" pos:column="46"/></name><argument_list pos:line="117" pos:column="46">(<argument><expr><name pos:line="117" pos:column="47">HAVE_ICONV<pos:position pos:line="117" pos:column="57"/></name></expr></argument>)<pos:position pos:line="117" pos:column="58"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="118" pos:column="3">/* close iconv conversion descriptors */</comment>
  <if pos:line="119" pos:column="3">if<condition pos:line="119" pos:column="5">(<expr><name><name pos:line="119" pos:column="6">data<pos:position pos:line="119" pos:column="10"/></name><operator pos:line="119" pos:column="10">-&gt;<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="12">inbound_cd<pos:position pos:line="119" pos:column="22"/></name></name> <operator pos:line="119" pos:column="23">!=<pos:position pos:line="119" pos:column="25"/></operator> <operator pos:line="119" pos:column="26">(<pos:position pos:line="119" pos:column="27"/></operator><name pos:line="119" pos:column="27">iconv_t<pos:position pos:line="119" pos:column="34"/></name><operator pos:line="119" pos:column="34">)<pos:position pos:line="119" pos:column="35"/></operator><operator pos:line="119" pos:column="35">-<pos:position pos:line="119" pos:column="36"/></operator><literal type="number" pos:line="119" pos:column="36">1<pos:position pos:line="119" pos:column="37"/></literal></expr>)<pos:position pos:line="119" pos:column="38"/></condition><then pos:line="119" pos:column="38"> <block pos:line="119" pos:column="39">{
     <expr_stmt><expr><call><name pos:line="120" pos:column="6">iconv_close<pos:position pos:line="120" pos:column="17"/></name><argument_list pos:line="120" pos:column="17">(<argument><expr><name><name pos:line="120" pos:column="18">data<pos:position pos:line="120" pos:column="22"/></name><operator pos:line="120" pos:column="22">-&gt;<pos:position pos:line="120" pos:column="27"/></operator><name pos:line="120" pos:column="24">inbound_cd<pos:position pos:line="120" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
  <if pos:line="122" pos:column="3">if<condition pos:line="122" pos:column="5">(<expr><name><name pos:line="122" pos:column="6">data<pos:position pos:line="122" pos:column="10"/></name><operator pos:line="122" pos:column="10">-&gt;<pos:position pos:line="122" pos:column="15"/></operator><name pos:line="122" pos:column="12">outbound_cd<pos:position pos:line="122" pos:column="23"/></name></name> <operator pos:line="122" pos:column="24">!=<pos:position pos:line="122" pos:column="26"/></operator> <operator pos:line="122" pos:column="27">(<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="28">iconv_t<pos:position pos:line="122" pos:column="35"/></name><operator pos:line="122" pos:column="35">)<pos:position pos:line="122" pos:column="36"/></operator><operator pos:line="122" pos:column="36">-<pos:position pos:line="122" pos:column="37"/></operator><literal type="number" pos:line="122" pos:column="37">1<pos:position pos:line="122" pos:column="38"/></literal></expr>)<pos:position pos:line="122" pos:column="39"/></condition><then pos:line="122" pos:column="39"> <block pos:line="122" pos:column="40">{
     <expr_stmt><expr><call><name pos:line="123" pos:column="6">iconv_close<pos:position pos:line="123" pos:column="17"/></name><argument_list pos:line="123" pos:column="17">(<argument><expr><name><name pos:line="123" pos:column="18">data<pos:position pos:line="123" pos:column="22"/></name><operator pos:line="123" pos:column="22">-&gt;<pos:position pos:line="123" pos:column="27"/></operator><name pos:line="123" pos:column="24">outbound_cd<pos:position pos:line="123" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="124" pos:column="4"/></block></then></if>
  <if pos:line="125" pos:column="3">if<condition pos:line="125" pos:column="5">(<expr><name><name pos:line="125" pos:column="6">data<pos:position pos:line="125" pos:column="10"/></name><operator pos:line="125" pos:column="10">-&gt;<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="12">utf8_cd<pos:position pos:line="125" pos:column="19"/></name></name> <operator pos:line="125" pos:column="20">!=<pos:position pos:line="125" pos:column="22"/></operator> <operator pos:line="125" pos:column="23">(<pos:position pos:line="125" pos:column="24"/></operator><name pos:line="125" pos:column="24">iconv_t<pos:position pos:line="125" pos:column="31"/></name><operator pos:line="125" pos:column="31">)<pos:position pos:line="125" pos:column="32"/></operator><operator pos:line="125" pos:column="32">-<pos:position pos:line="125" pos:column="33"/></operator><literal type="number" pos:line="125" pos:column="33">1<pos:position pos:line="125" pos:column="34"/></literal></expr>)<pos:position pos:line="125" pos:column="35"/></condition><then pos:line="125" pos:column="35"> <block pos:line="125" pos:column="36">{
     <expr_stmt><expr><call><name pos:line="126" pos:column="6">iconv_close<pos:position pos:line="126" pos:column="17"/></name><argument_list pos:line="126" pos:column="17">(<argument><expr><name><name pos:line="126" pos:column="18">data<pos:position pos:line="126" pos:column="22"/></name><operator pos:line="126" pos:column="22">-&gt;<pos:position pos:line="126" pos:column="27"/></operator><name pos:line="126" pos:column="24">utf8_cd<pos:position pos:line="126" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="127" pos:column="4"/></block></then></if>
<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif<pos:position pos:line="128" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="128" pos:column="8">/* CURL_DOES_CONVERSIONS &amp;&amp; HAVE_ICONV */</comment>

  <comment type="block" pos:line="130" pos:column="3">/* No longer a dirty share, if it exists */</comment>
  <if pos:line="131" pos:column="3">if<condition pos:line="131" pos:column="5">(<expr><name><name pos:line="131" pos:column="6">data<pos:position pos:line="131" pos:column="10"/></name><operator pos:line="131" pos:column="10">-&gt;<pos:position pos:line="131" pos:column="15"/></operator><name pos:line="131" pos:column="12">share<pos:position pos:line="131" pos:column="17"/></name></name></expr>)<pos:position pos:line="131" pos:column="18"/></condition><then pos:line="131" pos:column="18"> <block pos:line="131" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">Curl_share_lock<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><name pos:line="132" pos:column="21">data<pos:position pos:line="132" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="27">CURL_LOCK_DATA_SHARE<pos:position pos:line="132" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="49">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="132" pos:column="72"/></name></expr></argument>)<pos:position pos:line="132" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="133" pos:column="5">data<pos:position pos:line="133" pos:column="9"/></name><operator pos:line="133" pos:column="9">-&gt;<pos:position pos:line="133" pos:column="14"/></operator><name pos:line="133" pos:column="11">share<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">-&gt;<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="18">dirty<pos:position pos:line="133" pos:column="23"/></name></name><operator pos:line="133" pos:column="23">--<pos:position pos:line="133" pos:column="25"/></operator></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">Curl_share_unlock<pos:position pos:line="134" pos:column="22"/></name><argument_list pos:line="134" pos:column="22">(<argument><expr><name pos:line="134" pos:column="23">data<pos:position pos:line="134" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="29">CURL_LOCK_DATA_SHARE<pos:position pos:line="134" pos:column="49"/></name></expr></argument>)<pos:position pos:line="134" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="137" pos:column="3">Curl_freeset<pos:position pos:line="137" pos:column="15"/></name><argument_list pos:line="137" pos:column="15">(<argument><expr><name pos:line="137" pos:column="16">data<pos:position pos:line="137" pos:column="20"/></name></expr></argument>)<pos:position pos:line="137" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="138" pos:column="3">free<pos:position pos:line="138" pos:column="7"/></name><argument_list pos:line="138" pos:column="7">(<argument><expr><name pos:line="138" pos:column="8">data<pos:position pos:line="138" pos:column="12"/></name></expr></argument>)<pos:position pos:line="138" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="14"/></expr_stmt>
  <return pos:line="139" pos:column="3">return <expr><name pos:line="139" pos:column="10">CURLE_OK<pos:position pos:line="139" pos:column="18"/></name></expr>;<pos:position pos:line="139" pos:column="19"/></return>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

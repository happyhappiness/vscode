<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_698_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ConnectionExists<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">SessionHandle<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">data<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                 <parameter><decl><type><name><name pos:line="3" pos:column="18">struct<pos:position pos:line="3" pos:column="24"/></name> <name pos:line="3" pos:column="25">connectdata<pos:position pos:line="3" pos:column="36"/></name></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">needle<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
                 <parameter><decl><type><name><name pos:line="4" pos:column="18">struct<pos:position pos:line="4" pos:column="24"/></name> <name pos:line="4" pos:column="25">connectdata<pos:position pos:line="4" pos:column="36"/></name></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier><modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">usethis<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="47"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">long<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">i<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">connectdata<pos:position pos:line="7" pos:column="21"/></name></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">check<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">canPipeline<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name pos:line="8" pos:column="22">IsPipeliningPossible<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">data<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>

  <for pos:line="10" pos:column="3">for<control pos:line="10" pos:column="6">(<init><expr><name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator><literal type="number" pos:line="10" pos:column="9">0<pos:position pos:line="10" pos:column="10"/></literal></expr>;<pos:position pos:line="10" pos:column="11"/></init> <condition><expr><name pos:line="10" pos:column="12">i<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">state<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">connc<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">num<pos:position pos:line="10" pos:column="37"/></name></name></expr>;<pos:position pos:line="10" pos:column="38"/></condition> <incr><expr><name pos:line="10" pos:column="39">i<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">++<pos:position pos:line="10" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="43"/></control> <block pos:line="10" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">bool<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">match<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">FALSE<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">pipeLen<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <comment type="block" pos:line="13" pos:column="5">/*
     * Note that if we use a HTTP proxy, we check connections to that
     * proxy and not to the actual remote server.
     */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">check<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <name><name pos:line="17" pos:column="13">data<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">state<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">connc<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">connects<pos:position pos:line="17" pos:column="40"/></name><index pos:line="17" pos:column="40">[<expr><name pos:line="17" pos:column="41">i<pos:position pos:line="17" pos:column="42"/></name></expr>]<pos:position pos:line="17" pos:column="43"/></index></name></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">!<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">check<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15">
      <comment type="block" pos:line="19" pos:column="7">/* NULL pointer means not filled-in entry */</comment>
      <block type="pseudo"><continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">pipeLen<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name><name pos:line="22" pos:column="15">check<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">send_pipe<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">size<pos:position pos:line="22" pos:column="37"/></name></name> <operator pos:line="22" pos:column="38">+<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="40">check<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">recv_pipe<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">size<pos:position pos:line="22" pos:column="62"/></name></name></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name><name pos:line="24" pos:column="8">check<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">connectindex<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <operator pos:line="24" pos:column="31">-<pos:position pos:line="24" pos:column="32"/></operator><literal type="number" pos:line="24" pos:column="32">1<pos:position pos:line="24" pos:column="33"/></literal></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">check<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">connectindex<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">i<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt> <comment type="block" pos:line="25" pos:column="32">/* Set this appropriately since it might have
                                  been set to -1 when the easy was removed
                                  from the multi */</comment>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">canPipeline<pos:position pos:line="30" pos:column="19"/></name></expr>)<pos:position pos:line="30" pos:column="20"/></condition><then pos:line="30" pos:column="20"> <block pos:line="30" pos:column="21">{
      <comment type="block" pos:line="31" pos:column="7">/* Make sure the pipe has only GET requests */</comment>
      <decl_stmt><decl><type><name><name pos:line="32" pos:column="7">struct<pos:position pos:line="32" pos:column="13"/></name> <name pos:line="32" pos:column="14">SessionHandle<pos:position pos:line="32" pos:column="27"/></name></name><modifier pos:line="32" pos:column="27">*<pos:position pos:line="32" pos:column="28"/></modifier></type> <name pos:line="32" pos:column="29">sh<pos:position pos:line="32" pos:column="31"/></name> <init pos:line="32" pos:column="32">= <expr><call><name pos:line="32" pos:column="34">gethandleathead<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name><name pos:line="32" pos:column="50">check<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">send_pipe<pos:position pos:line="32" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="68"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="33" pos:column="7">struct<pos:position pos:line="33" pos:column="13"/></name> <name pos:line="33" pos:column="14">SessionHandle<pos:position pos:line="33" pos:column="27"/></name></name><modifier pos:line="33" pos:column="27">*<pos:position pos:line="33" pos:column="28"/></modifier></type> <name pos:line="33" pos:column="29">rh<pos:position pos:line="33" pos:column="31"/></name> <init pos:line="33" pos:column="32">= <expr><call><name pos:line="33" pos:column="34">gethandleathead<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name><name pos:line="33" pos:column="50">check<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">recv_pipe<pos:position pos:line="33" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="68"/></decl_stmt>
      <if pos:line="34" pos:column="7">if<condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">sh<pos:position pos:line="34" pos:column="12"/></name></expr>)<pos:position pos:line="34" pos:column="13"/></condition><then pos:line="34" pos:column="13"> <block pos:line="34" pos:column="14">{
        <if pos:line="35" pos:column="9">if<condition pos:line="35" pos:column="11">(<expr><operator pos:line="35" pos:column="12">!<pos:position pos:line="35" pos:column="13"/></operator><call><name pos:line="35" pos:column="13">IsPipeliningPossible<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">sh<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38">
          <block type="pseudo"><continue pos:line="36" pos:column="11">continue;<pos:position pos:line="36" pos:column="20"/></continue></block></then></if>
      }<pos:position pos:line="37" pos:column="8"/></block></then>
      <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if<condition pos:line="38" pos:column="14">(<expr><name pos:line="38" pos:column="15">rh<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
        <if pos:line="39" pos:column="9">if<condition pos:line="39" pos:column="11">(<expr><operator pos:line="39" pos:column="12">!<pos:position pos:line="39" pos:column="13"/></operator><call><name pos:line="39" pos:column="13">IsPipeliningPossible<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">rh<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
          <block type="pseudo"><continue pos:line="40" pos:column="11">continue;<pos:position pos:line="40" pos:column="20"/></continue></block></then></if>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if></elseif></if>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">CURLDEBUG<pos:position pos:line="43" pos:column="17"/></name></cpp:ifdef>
      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">pipeLen<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">&gt;<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="20">MAX_PIPELINE_LENGTH<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition><then pos:line="44" pos:column="40"> <block pos:line="44" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">infof<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">data<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"BAD! Connection #%ld has too big pipeline!\n"<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="46" pos:column="15">check<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">connectindex<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <else pos:line="50" pos:column="5">else <block pos:line="50" pos:column="10">{
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><name pos:line="51" pos:column="10">pipeLen<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">&gt;<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="20">0<pos:position pos:line="51" pos:column="21"/></literal></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
        <comment type="block" pos:line="52" pos:column="9">/* can only happen within multi handles, and means that another easy
           handle is using this connection */</comment>
        <continue pos:line="54" pos:column="9">continue;<pos:position pos:line="54" pos:column="18"/></continue>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>

<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">CURLRES_ASYNCH<pos:position pos:line="57" pos:column="22"/></name></cpp:ifdef>
      <comment type="block" pos:line="58" pos:column="7">/* ip_addr_str is NULL only if the resolving of the name hasn't completed
         yet and until then we don't re-use this connection */</comment>
      <if pos:line="60" pos:column="7">if<condition pos:line="60" pos:column="9">(<expr><operator pos:line="60" pos:column="10">!<pos:position pos:line="60" pos:column="11"/></operator><name><name pos:line="60" pos:column="11">check<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">ip_addr_str<pos:position pos:line="60" pos:column="29"/></name></name></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30"> <block pos:line="60" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">infof<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">data<pos:position pos:line="61" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="62" pos:column="15">"Connection #%ld hasn't finished name resolve, can't reuse\n"<pos:position pos:line="62" pos:column="76"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="63" pos:column="15">check<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">connectindex<pos:position pos:line="63" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
        <continue pos:line="64" pos:column="9">continue;<pos:position pos:line="64" pos:column="18"/></continue>
      }<pos:position pos:line="65" pos:column="8"/></block></then></if>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>

      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">(<expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><name><name pos:line="68" pos:column="11">check<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">sock<pos:position pos:line="68" pos:column="22"/></name><index pos:line="68" pos:column="22">[<expr><name pos:line="68" pos:column="23">FIRSTSOCKET<pos:position pos:line="68" pos:column="34"/></name></expr>]<pos:position pos:line="68" pos:column="35"/></index></name> <operator pos:line="68" pos:column="36">==<pos:position pos:line="68" pos:column="38"/></operator> <name pos:line="68" pos:column="39">CURL_SOCKET_BAD<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">)<pos:position pos:line="68" pos:column="55"/></operator> <operator pos:line="68" pos:column="56">||<pos:position pos:line="68" pos:column="58"/></operator> <name><name pos:line="68" pos:column="59">check<pos:position pos:line="68" pos:column="64"/></name><operator pos:line="68" pos:column="64">-&gt;<pos:position pos:line="68" pos:column="69"/></operator><name pos:line="68" pos:column="66">bits<pos:position pos:line="68" pos:column="70"/></name><operator pos:line="68" pos:column="70">.<pos:position pos:line="68" pos:column="71"/></operator><name pos:line="68" pos:column="71">close<pos:position pos:line="68" pos:column="76"/></name></name></expr>)<pos:position pos:line="68" pos:column="77"/></condition><then pos:line="68" pos:column="77"> <block pos:line="68" pos:column="78">{
        <comment type="block" pos:line="69" pos:column="9">/* Don't pick a connection that hasn't connected yet or that is going to
           get closed. */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">infof<pos:position pos:line="71" pos:column="14"/></name><argument_list pos:line="71" pos:column="14">(<argument><expr><name pos:line="71" pos:column="15">data<pos:position pos:line="71" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="21">"Connection #%ld isn't open enough, can't reuse\n"<pos:position pos:line="71" pos:column="71"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="72" pos:column="15">check<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">connectindex<pos:position pos:line="72" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
<cpp:ifdef pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">ifdef<pos:position pos:line="73" pos:column="7"/></cpp:directive> <name pos:line="73" pos:column="8">CURLDEBUG<pos:position pos:line="73" pos:column="17"/></name></cpp:ifdef>
        <if pos:line="74" pos:column="9">if<condition pos:line="74" pos:column="11">(<expr><name><name pos:line="74" pos:column="12">check<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">recv_pipe<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">size<pos:position pos:line="74" pos:column="34"/></name></name> <operator pos:line="74" pos:column="35">&gt;<pos:position pos:line="74" pos:column="39"/></operator> <literal type="number" pos:line="74" pos:column="37">0<pos:position pos:line="74" pos:column="38"/></literal></expr>)<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39"> <block pos:line="74" pos:column="40">{
          <expr_stmt><expr><call><name pos:line="75" pos:column="11">infof<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">data<pos:position pos:line="75" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="23">"BAD! Unconnected #%ld has a non-empty recv pipeline!\n"<pos:position pos:line="75" pos:column="79"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="76" pos:column="17">check<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">connectindex<pos:position pos:line="76" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
        <continue pos:line="79" pos:column="9">continue;<pos:position pos:line="79" pos:column="18"/></continue>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></else></if>

    <if pos:line="83" pos:column="5">if<condition pos:line="83" pos:column="7">(<expr><operator pos:line="83" pos:column="8">(<pos:position pos:line="83" pos:column="9"/></operator><name><name pos:line="83" pos:column="9">needle<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">-&gt;<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="17">protocol<pos:position pos:line="83" pos:column="25"/></name></name><operator pos:line="83" pos:column="25">&amp;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="26">PROT_SSL<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">)<pos:position pos:line="83" pos:column="35"/></operator> <operator pos:line="83" pos:column="36">!=<pos:position pos:line="83" pos:column="38"/></operator> <operator pos:line="83" pos:column="39">(<pos:position pos:line="83" pos:column="40"/></operator><name><name pos:line="83" pos:column="40">check<pos:position pos:line="83" pos:column="45"/></name><operator pos:line="83" pos:column="45">-&gt;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="47">protocol<pos:position pos:line="83" pos:column="55"/></name></name><operator pos:line="83" pos:column="55">&amp;<pos:position pos:line="83" pos:column="60"/></operator><name pos:line="83" pos:column="56">PROT_SSL<pos:position pos:line="83" pos:column="64"/></name><operator pos:line="83" pos:column="64">)<pos:position pos:line="83" pos:column="65"/></operator></expr>)<pos:position pos:line="83" pos:column="66"/></condition><then pos:line="83" pos:column="66">
      <comment type="block" pos:line="84" pos:column="7">/* don't do mixed SSL and non-SSL connections */</comment>
      <block type="pseudo"><continue pos:line="85" pos:column="7">continue;<pos:position pos:line="85" pos:column="16"/></continue></block></then></if>

    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name><name pos:line="87" pos:column="8">needle<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">bits<pos:position pos:line="87" pos:column="20"/></name><operator pos:line="87" pos:column="20">.<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="21">proxy<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">!=<pos:position pos:line="87" pos:column="29"/></operator> <name><name pos:line="87" pos:column="30">check<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">bits<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">.<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="42">proxy<pos:position pos:line="87" pos:column="47"/></name></name></expr>)<pos:position pos:line="87" pos:column="48"/></condition><then pos:line="87" pos:column="48">
      <comment type="block" pos:line="88" pos:column="7">/* don't do mixed proxy and non-proxy connections */</comment>
      <block type="pseudo"><continue pos:line="89" pos:column="7">continue;<pos:position pos:line="89" pos:column="16"/></continue></block></then></if>

    <if pos:line="91" pos:column="5">if<condition pos:line="91" pos:column="7">(<expr><operator pos:line="91" pos:column="8">!<pos:position pos:line="91" pos:column="9"/></operator><name><name pos:line="91" pos:column="9">needle<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">bits<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">.<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">httpproxy<pos:position pos:line="91" pos:column="31"/></name></name> <operator pos:line="91" pos:column="32">||<pos:position pos:line="91" pos:column="34"/></operator> <name><name pos:line="91" pos:column="35">needle<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">-&gt;<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="43">protocol<pos:position pos:line="91" pos:column="51"/></name></name><operator pos:line="91" pos:column="51">&amp;<pos:position pos:line="91" pos:column="56"/></operator><name pos:line="91" pos:column="52">PROT_SSL<pos:position pos:line="91" pos:column="60"/></name> <operator pos:line="91" pos:column="61">||<pos:position pos:line="91" pos:column="63"/></operator>
       <operator pos:line="92" pos:column="8">(<pos:position pos:line="92" pos:column="9"/></operator><name><name pos:line="92" pos:column="9">needle<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">bits<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">.<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">httpproxy<pos:position pos:line="92" pos:column="31"/></name></name> <operator pos:line="92" pos:column="32">&amp;&amp;<pos:position pos:line="92" pos:column="42"/></operator> <name><name pos:line="92" pos:column="35">check<pos:position pos:line="92" pos:column="40"/></name><operator pos:line="92" pos:column="40">-&gt;<pos:position pos:line="92" pos:column="45"/></operator><name pos:line="92" pos:column="42">bits<pos:position pos:line="92" pos:column="46"/></name><operator pos:line="92" pos:column="46">.<pos:position pos:line="92" pos:column="47"/></operator><name pos:line="92" pos:column="47">httpproxy<pos:position pos:line="92" pos:column="56"/></name></name> <operator pos:line="92" pos:column="57">&amp;&amp;<pos:position pos:line="92" pos:column="67"/></operator>
        <name><name pos:line="93" pos:column="9">needle<pos:position pos:line="93" pos:column="15"/></name><operator pos:line="93" pos:column="15">-&gt;<pos:position pos:line="93" pos:column="20"/></operator><name pos:line="93" pos:column="17">bits<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">.<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="22">tunnel_proxy<pos:position pos:line="93" pos:column="34"/></name></name> <operator pos:line="93" pos:column="35">&amp;&amp;<pos:position pos:line="93" pos:column="45"/></operator> <name><name pos:line="93" pos:column="38">check<pos:position pos:line="93" pos:column="43"/></name><operator pos:line="93" pos:column="43">-&gt;<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="45">bits<pos:position pos:line="93" pos:column="49"/></name><operator pos:line="93" pos:column="49">.<pos:position pos:line="93" pos:column="50"/></operator><name pos:line="93" pos:column="50">tunnel_proxy<pos:position pos:line="93" pos:column="62"/></name></name> <operator pos:line="93" pos:column="63">&amp;&amp;<pos:position pos:line="93" pos:column="73"/></operator>
        <call><name pos:line="94" pos:column="9">strequal<pos:position pos:line="94" pos:column="17"/></name><argument_list pos:line="94" pos:column="17">(<argument><expr><name><name pos:line="94" pos:column="18">needle<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">-&gt;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="26">proxy<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">.<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="32">name<pos:position pos:line="94" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="38">check<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">-&gt;<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="45">proxy<pos:position pos:line="94" pos:column="50"/></name><operator pos:line="94" pos:column="50">.<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="51">name<pos:position pos:line="94" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call> <operator pos:line="94" pos:column="57">&amp;&amp;<pos:position pos:line="94" pos:column="67"/></operator>
        <operator pos:line="95" pos:column="9">(<pos:position pos:line="95" pos:column="10"/></operator><name><name pos:line="95" pos:column="10">needle<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">-&gt;<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="18">port<pos:position pos:line="95" pos:column="22"/></name></name> <operator pos:line="95" pos:column="23">==<pos:position pos:line="95" pos:column="25"/></operator> <name><name pos:line="95" pos:column="26">check<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">port<pos:position pos:line="95" pos:column="37"/></name></name><operator pos:line="95" pos:column="37">)<pos:position pos:line="95" pos:column="38"/></operator><operator pos:line="95" pos:column="38">)<pos:position pos:line="95" pos:column="39"/></operator></expr>)<pos:position pos:line="95" pos:column="40"/></condition><then pos:line="95" pos:column="40"> <block pos:line="95" pos:column="41">{
      <comment type="block" pos:line="96" pos:column="7">/* The requested connection does not use a HTTP proxy or it uses SSL or
         it is a non-SSL protocol tunneled over the same http proxy name and
         port number */</comment>

      <if pos:line="100" pos:column="7">if<condition pos:line="100" pos:column="9">(<expr><call><name pos:line="100" pos:column="10">strequal<pos:position pos:line="100" pos:column="18"/></name><argument_list pos:line="100" pos:column="18">(<argument><expr><name><name pos:line="100" pos:column="19">needle<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">-&gt;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="27">protostr<pos:position pos:line="100" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="37">check<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">protostr<pos:position pos:line="100" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="53"/></argument_list></call> <operator pos:line="100" pos:column="54">&amp;&amp;<pos:position pos:line="100" pos:column="64"/></operator>
         <call><name pos:line="101" pos:column="10">strequal<pos:position pos:line="101" pos:column="18"/></name><argument_list pos:line="101" pos:column="18">(<argument><expr><name><name pos:line="101" pos:column="19">needle<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">host<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">.<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="32">name<pos:position pos:line="101" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="38">check<pos:position pos:line="101" pos:column="43"/></name><operator pos:line="101" pos:column="43">-&gt;<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="45">host<pos:position pos:line="101" pos:column="49"/></name><operator pos:line="101" pos:column="49">.<pos:position pos:line="101" pos:column="50"/></operator><name pos:line="101" pos:column="50">name<pos:position pos:line="101" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="55"/></argument_list></call> <operator pos:line="101" pos:column="56">&amp;&amp;<pos:position pos:line="101" pos:column="66"/></operator>
         <operator pos:line="102" pos:column="10">(<pos:position pos:line="102" pos:column="11"/></operator><name><name pos:line="102" pos:column="11">needle<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">-&gt;<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="19">remote_port<pos:position pos:line="102" pos:column="30"/></name></name> <operator pos:line="102" pos:column="31">==<pos:position pos:line="102" pos:column="33"/></operator> <name><name pos:line="102" pos:column="34">check<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">-&gt;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="41">remote_port<pos:position pos:line="102" pos:column="52"/></name></name><operator pos:line="102" pos:column="52">)<pos:position pos:line="102" pos:column="53"/></operator></expr> )<pos:position pos:line="102" pos:column="55"/></condition><then pos:line="102" pos:column="55"> <block pos:line="102" pos:column="56">{
        <if pos:line="103" pos:column="9">if<condition pos:line="103" pos:column="11">(<expr><name><name pos:line="103" pos:column="12">needle<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">-&gt;<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="20">protocol<pos:position pos:line="103" pos:column="28"/></name></name> <operator pos:line="103" pos:column="29">&amp;<pos:position pos:line="103" pos:column="34"/></operator> <name pos:line="103" pos:column="31">PROT_SSL<pos:position pos:line="103" pos:column="39"/></name></expr>)<pos:position pos:line="103" pos:column="40"/></condition><then pos:line="103" pos:column="40"> <block pos:line="103" pos:column="41">{
          <comment type="block" pos:line="104" pos:column="11">/* This is SSL, verify that we're using the same
             ssl options as well */</comment>
          <if pos:line="106" pos:column="11">if<condition pos:line="106" pos:column="13">(<expr><operator pos:line="106" pos:column="14">!<pos:position pos:line="106" pos:column="15"/></operator><call><name pos:line="106" pos:column="15">Curl_ssl_config_matches<pos:position pos:line="106" pos:column="38"/></name><argument_list pos:line="106" pos:column="38">(<argument><expr><operator pos:line="106" pos:column="39">&amp;<pos:position pos:line="106" pos:column="44"/></operator><name><name pos:line="106" pos:column="40">needle<pos:position pos:line="106" pos:column="46"/></name><operator pos:line="106" pos:column="46">-&gt;<pos:position pos:line="106" pos:column="51"/></operator><name pos:line="106" pos:column="48">ssl_config<pos:position pos:line="106" pos:column="58"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="107" pos:column="39">&amp;<pos:position pos:line="107" pos:column="44"/></operator><name><name pos:line="107" pos:column="40">check<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">-&gt;<pos:position pos:line="107" pos:column="50"/></operator><name pos:line="107" pos:column="47">ssl_config<pos:position pos:line="107" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="59"/></condition><then pos:line="107" pos:column="59"> <block pos:line="107" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">DEBUGF<pos:position pos:line="108" pos:column="19"/></name><argument_list pos:line="108" pos:column="19">(<argument><expr><call><name pos:line="108" pos:column="20">infof<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">data<pos:position pos:line="108" pos:column="30"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="109" pos:column="26">"Connection #%ld has different SSL parameters, "<pos:position pos:line="109" pos:column="74"/></literal>
                         <literal type="string" pos:line="110" pos:column="26">"can't reuse\n"<pos:position pos:line="110" pos:column="41"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="111" pos:column="26">check<pos:position pos:line="111" pos:column="31"/></name><operator pos:line="111" pos:column="31">-&gt;<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="33">connectindex<pos:position pos:line="111" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt>
            <continue pos:line="112" pos:column="13">continue;<pos:position pos:line="112" pos:column="22"/></continue>
          }<pos:position pos:line="113" pos:column="12"/></block></then>
          <elseif pos:line="114" pos:column="11">else <if pos:line="114" pos:column="16">if<condition pos:line="114" pos:column="18">(<expr><name><name pos:line="114" pos:column="19">check<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">-&gt;<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="26">ssl<pos:position pos:line="114" pos:column="29"/></name><index pos:line="114" pos:column="29">[<expr><name pos:line="114" pos:column="30">FIRSTSOCKET<pos:position pos:line="114" pos:column="41"/></name></expr>]<pos:position pos:line="114" pos:column="42"/></index></name><operator pos:line="114" pos:column="42">.<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="43">state<pos:position pos:line="114" pos:column="48"/></name> <operator pos:line="114" pos:column="49">!=<pos:position pos:line="114" pos:column="51"/></operator> <name pos:line="114" pos:column="52">ssl_connection_complete<pos:position pos:line="114" pos:column="75"/></name></expr>)<pos:position pos:line="114" pos:column="76"/></condition><then pos:line="114" pos:column="76"> <block pos:line="114" pos:column="77">{
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">DEBUGF<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><call><name pos:line="115" pos:column="20">infof<pos:position pos:line="115" pos:column="25"/></name><argument_list pos:line="115" pos:column="25">(<argument><expr><name pos:line="115" pos:column="26">data<pos:position pos:line="115" pos:column="30"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="116" pos:column="26">"Connection #%ld has not started ssl connect, "<pos:position pos:line="116" pos:column="73"/></literal>
                         <literal type="string" pos:line="117" pos:column="26">"can't reuse\n"<pos:position pos:line="117" pos:column="41"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="118" pos:column="26">check<pos:position pos:line="118" pos:column="31"/></name><operator pos:line="118" pos:column="31">-&gt;<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="33">connectindex<pos:position pos:line="118" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="48"/></expr_stmt>
            <continue pos:line="119" pos:column="13">continue;<pos:position pos:line="119" pos:column="22"/></continue>
          }<pos:position pos:line="120" pos:column="12"/></block></then></if></elseif></if>
        }<pos:position pos:line="121" pos:column="10"/></block></then></if>
        <if pos:line="122" pos:column="9">if<condition pos:line="122" pos:column="11">(<expr><operator pos:line="122" pos:column="12">(<pos:position pos:line="122" pos:column="13"/></operator><name><name pos:line="122" pos:column="13">needle<pos:position pos:line="122" pos:column="19"/></name><operator pos:line="122" pos:column="19">-&gt;<pos:position pos:line="122" pos:column="24"/></operator><name pos:line="122" pos:column="21">protocol<pos:position pos:line="122" pos:column="29"/></name></name> <operator pos:line="122" pos:column="30">&amp;<pos:position pos:line="122" pos:column="35"/></operator> <name pos:line="122" pos:column="32">PROT_FTP<pos:position pos:line="122" pos:column="40"/></name><operator pos:line="122" pos:column="40">)<pos:position pos:line="122" pos:column="41"/></operator> <operator pos:line="122" pos:column="42">||<pos:position pos:line="122" pos:column="44"/></operator>
           <operator pos:line="123" pos:column="12">(<pos:position pos:line="123" pos:column="13"/></operator><operator pos:line="123" pos:column="13">(<pos:position pos:line="123" pos:column="14"/></operator><name><name pos:line="123" pos:column="14">needle<pos:position pos:line="123" pos:column="20"/></name><operator pos:line="123" pos:column="20">-&gt;<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="22">protocol<pos:position pos:line="123" pos:column="30"/></name></name> <operator pos:line="123" pos:column="31">&amp;<pos:position pos:line="123" pos:column="36"/></operator> <name pos:line="123" pos:column="33">PROT_HTTP<pos:position pos:line="123" pos:column="42"/></name><operator pos:line="123" pos:column="42">)<pos:position pos:line="123" pos:column="43"/></operator> <operator pos:line="123" pos:column="44">&amp;&amp;<pos:position pos:line="123" pos:column="54"/></operator>
            <operator pos:line="124" pos:column="13">(<pos:position pos:line="124" pos:column="14"/></operator><name><name pos:line="124" pos:column="14">data<pos:position pos:line="124" pos:column="18"/></name><operator pos:line="124" pos:column="18">-&gt;<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="20">state<pos:position pos:line="124" pos:column="25"/></name><operator pos:line="124" pos:column="25">.<pos:position pos:line="124" pos:column="26"/></operator><name pos:line="124" pos:column="26">authhost<pos:position pos:line="124" pos:column="34"/></name><operator pos:line="124" pos:column="34">.<pos:position pos:line="124" pos:column="35"/></operator><name pos:line="124" pos:column="35">want<pos:position pos:line="124" pos:column="39"/></name></name><operator pos:line="124" pos:column="39">==<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="41">CURLAUTH_NTLM<pos:position pos:line="124" pos:column="54"/></name><operator pos:line="124" pos:column="54">)<pos:position pos:line="124" pos:column="55"/></operator><operator pos:line="124" pos:column="55">)<pos:position pos:line="124" pos:column="56"/></operator></expr>)<pos:position pos:line="124" pos:column="57"/></condition><then pos:line="124" pos:column="57"> <block pos:line="124" pos:column="58">{
          <comment type="block" pos:line="125" pos:column="11">/* This is FTP or HTTP+NTLM, verify that we're using the same name
             and password as well */</comment>
          <if pos:line="127" pos:column="11">if<condition pos:line="127" pos:column="13">(<expr><operator pos:line="127" pos:column="14">!<pos:position pos:line="127" pos:column="15"/></operator><call><name pos:line="127" pos:column="15">strequal<pos:position pos:line="127" pos:column="23"/></name><argument_list pos:line="127" pos:column="23">(<argument><expr><name><name pos:line="127" pos:column="24">needle<pos:position pos:line="127" pos:column="30"/></name><operator pos:line="127" pos:column="30">-&gt;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="32">user<pos:position pos:line="127" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="38">check<pos:position pos:line="127" pos:column="43"/></name><operator pos:line="127" pos:column="43">-&gt;<pos:position pos:line="127" pos:column="48"/></operator><name pos:line="127" pos:column="45">user<pos:position pos:line="127" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="50"/></argument_list></call> <operator pos:line="127" pos:column="51">||<pos:position pos:line="127" pos:column="53"/></operator>
             <operator pos:line="128" pos:column="14">!<pos:position pos:line="128" pos:column="15"/></operator><call><name pos:line="128" pos:column="15">strequal<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><name><name pos:line="128" pos:column="24">needle<pos:position pos:line="128" pos:column="30"/></name><operator pos:line="128" pos:column="30">-&gt;<pos:position pos:line="128" pos:column="35"/></operator><name pos:line="128" pos:column="32">passwd<pos:position pos:line="128" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="40">check<pos:position pos:line="128" pos:column="45"/></name><operator pos:line="128" pos:column="45">-&gt;<pos:position pos:line="128" pos:column="50"/></operator><name pos:line="128" pos:column="47">passwd<pos:position pos:line="128" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="55"/></condition><then pos:line="128" pos:column="55"> <block pos:line="128" pos:column="56">{
            <comment type="block" pos:line="129" pos:column="13">/* one of them was different */</comment>
            <continue pos:line="130" pos:column="13">continue;<pos:position pos:line="130" pos:column="22"/></continue>
          }<pos:position pos:line="131" pos:column="12"/></block></then></if>
        }<pos:position pos:line="132" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="133" pos:column="9">match<pos:position pos:line="133" pos:column="14"/></name> <operator pos:line="133" pos:column="15">=<pos:position pos:line="133" pos:column="16"/></operator> <name pos:line="133" pos:column="17">TRUE<pos:position pos:line="133" pos:column="21"/></name></expr>;<pos:position pos:line="133" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="134" pos:column="8"/></block></then></if>
    }<pos:position pos:line="135" pos:column="6"/></block></then>
    <else pos:line="136" pos:column="5">else <block pos:line="136" pos:column="10">{ <comment type="block" pos:line="136" pos:column="12">/* The requested needle connection is using a proxy,
              is the checked one using the same host, port and type? */</comment>
      <if pos:line="138" pos:column="7">if<condition pos:line="138" pos:column="9">(<expr><name><name pos:line="138" pos:column="10">check<pos:position pos:line="138" pos:column="15"/></name><operator pos:line="138" pos:column="15">-&gt;<pos:position pos:line="138" pos:column="20"/></operator><name pos:line="138" pos:column="17">bits<pos:position pos:line="138" pos:column="21"/></name><operator pos:line="138" pos:column="21">.<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="22">proxy<pos:position pos:line="138" pos:column="27"/></name></name> <operator pos:line="138" pos:column="28">&amp;&amp;<pos:position pos:line="138" pos:column="38"/></operator>
         <operator pos:line="139" pos:column="10">(<pos:position pos:line="139" pos:column="11"/></operator><name><name pos:line="139" pos:column="11">needle<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="19">proxytype<pos:position pos:line="139" pos:column="28"/></name></name> <operator pos:line="139" pos:column="29">==<pos:position pos:line="139" pos:column="31"/></operator> <name><name pos:line="139" pos:column="32">check<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">-&gt;<pos:position pos:line="139" pos:column="42"/></operator><name pos:line="139" pos:column="39">proxytype<pos:position pos:line="139" pos:column="48"/></name></name><operator pos:line="139" pos:column="48">)<pos:position pos:line="139" pos:column="49"/></operator> <operator pos:line="139" pos:column="50">&amp;&amp;<pos:position pos:line="139" pos:column="60"/></operator>
         <call><name pos:line="140" pos:column="10">strequal<pos:position pos:line="140" pos:column="18"/></name><argument_list pos:line="140" pos:column="18">(<argument><expr><name><name pos:line="140" pos:column="19">needle<pos:position pos:line="140" pos:column="25"/></name><operator pos:line="140" pos:column="25">-&gt;<pos:position pos:line="140" pos:column="30"/></operator><name pos:line="140" pos:column="27">proxy<pos:position pos:line="140" pos:column="32"/></name><operator pos:line="140" pos:column="32">.<pos:position pos:line="140" pos:column="33"/></operator><name pos:line="140" pos:column="33">name<pos:position pos:line="140" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="39">check<pos:position pos:line="140" pos:column="44"/></name><operator pos:line="140" pos:column="44">-&gt;<pos:position pos:line="140" pos:column="49"/></operator><name pos:line="140" pos:column="46">proxy<pos:position pos:line="140" pos:column="51"/></name><operator pos:line="140" pos:column="51">.<pos:position pos:line="140" pos:column="52"/></operator><name pos:line="140" pos:column="52">name<pos:position pos:line="140" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="57"/></argument_list></call> <operator pos:line="140" pos:column="58">&amp;&amp;<pos:position pos:line="140" pos:column="68"/></operator>
         <name><name pos:line="141" pos:column="10">needle<pos:position pos:line="141" pos:column="16"/></name><operator pos:line="141" pos:column="16">-&gt;<pos:position pos:line="141" pos:column="21"/></operator><name pos:line="141" pos:column="18">port<pos:position pos:line="141" pos:column="22"/></name></name> <operator pos:line="141" pos:column="23">==<pos:position pos:line="141" pos:column="25"/></operator> <name><name pos:line="141" pos:column="26">check<pos:position pos:line="141" pos:column="31"/></name><operator pos:line="141" pos:column="31">-&gt;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="33">port<pos:position pos:line="141" pos:column="37"/></name></name></expr>)<pos:position pos:line="141" pos:column="38"/></condition><then pos:line="141" pos:column="38"> <block pos:line="141" pos:column="39">{
        <comment type="block" pos:line="142" pos:column="9">/* This is the same proxy connection, use it! */</comment>
        <expr_stmt><expr><name pos:line="143" pos:column="9">match<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">=<pos:position pos:line="143" pos:column="16"/></operator> <name pos:line="143" pos:column="17">TRUE<pos:position pos:line="143" pos:column="21"/></name></expr>;<pos:position pos:line="143" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="144" pos:column="8"/></block></then></if>
    }<pos:position pos:line="145" pos:column="6"/></block></else></if>

    <if pos:line="147" pos:column="5">if<condition pos:line="147" pos:column="7">(<expr><name pos:line="147" pos:column="8">match<pos:position pos:line="147" pos:column="13"/></name></expr>)<pos:position pos:line="147" pos:column="14"/></condition><then pos:line="147" pos:column="14"> <block pos:line="147" pos:column="15">{
      <if pos:line="148" pos:column="7">if<condition pos:line="148" pos:column="9">(<expr><name pos:line="148" pos:column="10">pipeLen<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">==<pos:position pos:line="148" pos:column="20"/></operator> <literal type="number" pos:line="148" pos:column="21">0<pos:position pos:line="148" pos:column="22"/></literal></expr>)<pos:position pos:line="148" pos:column="23"/></condition><then pos:line="148" pos:column="23"> <block pos:line="148" pos:column="24">{
        <comment type="block" pos:line="149" pos:column="9">/* The check for a dead socket makes sense only if there
           are no handles in pipeline */</comment>
        <decl_stmt><decl><type><name pos:line="151" pos:column="9">bool<pos:position pos:line="151" pos:column="13"/></name></type> <name pos:line="151" pos:column="14">dead<pos:position pos:line="151" pos:column="18"/></name> <init pos:line="151" pos:column="19">= <expr><call><name pos:line="151" pos:column="21">SocketIsDead<pos:position pos:line="151" pos:column="33"/></name><argument_list pos:line="151" pos:column="33">(<argument><expr><name><name pos:line="151" pos:column="34">check<pos:position pos:line="151" pos:column="39"/></name><operator pos:line="151" pos:column="39">-&gt;<pos:position pos:line="151" pos:column="44"/></operator><name pos:line="151" pos:column="41">sock<pos:position pos:line="151" pos:column="45"/></name><index pos:line="151" pos:column="45">[<expr><name pos:line="151" pos:column="46">FIRSTSOCKET<pos:position pos:line="151" pos:column="57"/></name></expr>]<pos:position pos:line="151" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="151" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="151" pos:column="60"/></decl_stmt>
        <if pos:line="152" pos:column="9">if<condition pos:line="152" pos:column="11">(<expr><name pos:line="152" pos:column="12">dead<pos:position pos:line="152" pos:column="16"/></name></expr>)<pos:position pos:line="152" pos:column="17"/></condition><then pos:line="152" pos:column="17"> <block pos:line="152" pos:column="18">{
          <expr_stmt><expr><name><name pos:line="153" pos:column="11">check<pos:position pos:line="153" pos:column="16"/></name><operator pos:line="153" pos:column="16">-&gt;<pos:position pos:line="153" pos:column="21"/></operator><name pos:line="153" pos:column="18">data<pos:position pos:line="153" pos:column="22"/></name></name> <operator pos:line="153" pos:column="23">=<pos:position pos:line="153" pos:column="24"/></operator> <name pos:line="153" pos:column="25">data<pos:position pos:line="153" pos:column="29"/></name></expr>;<pos:position pos:line="153" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="154" pos:column="11">infof<pos:position pos:line="154" pos:column="16"/></name><argument_list pos:line="154" pos:column="16">(<argument><expr><name pos:line="154" pos:column="17">data<pos:position pos:line="154" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="23">"Connection #%d seems to be dead!\n"<pos:position pos:line="154" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="61">i<pos:position pos:line="154" pos:column="62"/></name></expr></argument>)<pos:position pos:line="154" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="64"/></expr_stmt>

          <expr_stmt><expr><call><name pos:line="156" pos:column="11">Curl_disconnect<pos:position pos:line="156" pos:column="26"/></name><argument_list pos:line="156" pos:column="26">(<argument><expr><name pos:line="156" pos:column="27">check<pos:position pos:line="156" pos:column="32"/></name></expr></argument>)<pos:position pos:line="156" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="34"/></expr_stmt> <comment type="block" pos:line="156" pos:column="35">/* disconnect resources */</comment>
          <expr_stmt><expr><name><name pos:line="157" pos:column="11">data<pos:position pos:line="157" pos:column="15"/></name><operator pos:line="157" pos:column="15">-&gt;<pos:position pos:line="157" pos:column="20"/></operator><name pos:line="157" pos:column="17">state<pos:position pos:line="157" pos:column="22"/></name><operator pos:line="157" pos:column="22">.<pos:position pos:line="157" pos:column="23"/></operator><name pos:line="157" pos:column="23">connc<pos:position pos:line="157" pos:column="28"/></name><operator pos:line="157" pos:column="28">-&gt;<pos:position pos:line="157" pos:column="33"/></operator><name pos:line="157" pos:column="30">connects<pos:position pos:line="157" pos:column="38"/></name><index pos:line="157" pos:column="38">[<expr><name pos:line="157" pos:column="39">i<pos:position pos:line="157" pos:column="40"/></name></expr>]<pos:position pos:line="157" pos:column="41"/></index></name><operator pos:line="157" pos:column="41">=<pos:position pos:line="157" pos:column="42"/></operator><name pos:line="157" pos:column="42">NULL<pos:position pos:line="157" pos:column="46"/></name></expr>;<pos:position pos:line="157" pos:column="47"/></expr_stmt> <comment type="block" pos:line="157" pos:column="48">/* nothing here */</comment>

          <return pos:line="159" pos:column="11">return <expr><name pos:line="159" pos:column="18">FALSE<pos:position pos:line="159" pos:column="23"/></name></expr>;<pos:position pos:line="159" pos:column="24"/></return>
        }<pos:position pos:line="160" pos:column="10"/></block></then></if>
      }<pos:position pos:line="161" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="163" pos:column="7">check<pos:position pos:line="163" pos:column="12"/></name><operator pos:line="163" pos:column="12">-&gt;<pos:position pos:line="163" pos:column="17"/></operator><name pos:line="163" pos:column="14">inuse<pos:position pos:line="163" pos:column="19"/></name></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <name pos:line="163" pos:column="22">TRUE<pos:position pos:line="163" pos:column="26"/></name></expr>;<pos:position pos:line="163" pos:column="27"/></expr_stmt> <comment type="block" pos:line="163" pos:column="28">/* mark this as being in use so that no other
                              handle in a multi stack may nick it */</comment>

      <expr_stmt><expr><operator pos:line="166" pos:column="7">*<pos:position pos:line="166" pos:column="8"/></operator><name pos:line="166" pos:column="8">usethis<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <name pos:line="166" pos:column="18">check<pos:position pos:line="166" pos:column="23"/></name></expr>;<pos:position pos:line="166" pos:column="24"/></expr_stmt>
      <return pos:line="167" pos:column="7">return <expr><name pos:line="167" pos:column="14">TRUE<pos:position pos:line="167" pos:column="18"/></name></expr>;<pos:position pos:line="167" pos:column="19"/></return> <comment type="block" pos:line="167" pos:column="20">/* yes, we found one to use! */</comment>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>
  }<pos:position pos:line="169" pos:column="4"/></block></for>

  <return pos:line="171" pos:column="3">return <expr><name pos:line="171" pos:column="10">FALSE<pos:position pos:line="171" pos:column="15"/></name></expr>;<pos:position pos:line="171" pos:column="16"/></return> <comment type="block" pos:line="171" pos:column="17">/* no matching connecting exists */</comment>
}<pos:position pos:line="172" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1615_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_complete<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="3" pos:column="3">conn<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">-&gt;<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="9">data<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">req<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">.<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">chunk<pos:position pos:line="3" pos:column="24"/></name></name> <operator pos:line="3" pos:column="25">=<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">FALSE<pos:position pos:line="3" pos:column="32"/></name></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">conn<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">-&gt;<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="9">data<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">req<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">.<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">maxfd<pos:position pos:line="4" pos:column="24"/></name></name> <operator pos:line="4" pos:column="25">=<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><ternary><condition><expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">sockfd<pos:position pos:line="4" pos:column="40"/></name></name><operator pos:line="4" pos:column="40">&gt;<pos:position pos:line="4" pos:column="44"/></operator><name><name pos:line="4" pos:column="41">conn<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">writesockfd<pos:position pos:line="4" pos:column="58"/></name></name></expr>?<pos:position pos:line="4" pos:column="59"/></condition><then pos:line="4" pos:column="59">
                           <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">sockfd<pos:position pos:line="5" pos:column="40"/></name></name></expr></then><else pos:line="5" pos:column="40">:<expr><name><name pos:line="5" pos:column="41">conn<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">writesockfd<pos:position pos:line="5" pos:column="58"/></name></name></expr></else></ternary><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator> <operator pos:line="5" pos:column="60">+<pos:position pos:line="5" pos:column="61"/></operator> <literal type="number" pos:line="5" pos:column="62">1<pos:position pos:line="5" pos:column="63"/></literal></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">Curl_pgrsTime<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name><name pos:line="6" pos:column="17">conn<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">data<pos:position pos:line="6" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">TIMER_PRETRANSFER<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

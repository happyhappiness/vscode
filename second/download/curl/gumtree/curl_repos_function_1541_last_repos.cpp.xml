<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1541_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_recv_message<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">connectdata<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">conn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">msg<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_conn<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">smbc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">&amp;<pos:position pos:line="3" pos:column="32"/></operator><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">proto<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">smbc<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">smbc<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">recv_buf<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">bytes_read<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">nbt_size<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">msg_size<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">len<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">MAX_MESSAGE_SIZE<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">-<pos:position pos:line="8" pos:column="34"/></operator> <name><name pos:line="8" pos:column="35">smbc<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">got<pos:position pos:line="8" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">result<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <call><name pos:line="11" pos:column="12">Curl_read<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">conn<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">FIRSTSOCKET<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">buf<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">+<pos:position pos:line="11" pos:column="46"/></operator> <name><name pos:line="11" pos:column="47">smbc<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">got<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">len<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="63">&amp;<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="64">bytes_read<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">result<pos:position pos:line="12" pos:column="12"/></name></expr>)<pos:position pos:line="12" pos:column="13"/></condition><then pos:line="12" pos:column="13">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">result<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">bytes_read<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OK<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">smbc<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">got<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">+=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">bytes_read<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* Check for a 32-bit nbt header */</comment>
  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><name><name pos:line="21" pos:column="6">smbc<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">got<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">&lt;<pos:position pos:line="21" pos:column="20"/></operator> sizeof<operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">unsigned<pos:position pos:line="21" pos:column="33"/></name> <name pos:line="21" pos:column="34">int<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">CURLE_OK<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="24" pos:column="3">nbt_size<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">Curl_read16_be<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">(<pos:position pos:line="24" pos:column="30"/></operator><specifier pos:line="24" pos:column="30">const<pos:position pos:line="24" pos:column="35"/></specifier> <name pos:line="24" pos:column="36">unsigned<pos:position pos:line="24" pos:column="44"/></name> <name pos:line="24" pos:column="45">char<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">*<pos:position pos:line="24" pos:column="51"/></operator><operator pos:line="24" pos:column="51">)<pos:position pos:line="24" pos:column="52"/></operator>
                            <operator pos:line="25" pos:column="29">(<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">buf<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">+<pos:position pos:line="25" pos:column="35"/></operator> sizeof<operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">unsigned<pos:position pos:line="25" pos:column="51"/></name> <name pos:line="25" pos:column="52">short<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">)<pos:position pos:line="25" pos:column="58"/></operator><operator pos:line="25" pos:column="58">)<pos:position pos:line="25" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call> <operator pos:line="25" pos:column="61">+<pos:position pos:line="25" pos:column="62"/></operator>
    sizeof<operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">unsigned<pos:position pos:line="26" pos:column="20"/></name> <name pos:line="26" pos:column="21">int<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">)<pos:position pos:line="26" pos:column="25"/></operator></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name><name pos:line="27" pos:column="6">smbc<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">got<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">&lt;<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="18">nbt_size<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">CURLE_OK<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">msg_size<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <sizeof pos:line="30" pos:column="14">sizeof<argument_list pos:line="30" pos:column="20">(<argument><expr pos:line="30" pos:column="21">struct <name pos:line="30" pos:column="28">smb_header<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">nbt_size<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">&gt;=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="18">msg_size<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">+<pos:position pos:line="31" pos:column="28"/></operator> <literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
    <comment type="block" pos:line="32" pos:column="5">/* Add the word count */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">msg_size<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">+=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal> <operator pos:line="33" pos:column="19">+<pos:position pos:line="33" pos:column="20"/></operator> <operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><operator pos:line="33" pos:column="22">(<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">unsigned<pos:position pos:line="33" pos:column="31"/></name> <name pos:line="33" pos:column="32">char<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator> <name><name pos:line="33" pos:column="38">buf<pos:position pos:line="33" pos:column="41"/></name><index pos:line="33" pos:column="41">[<expr><name pos:line="33" pos:column="42">msg_size<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator> <operator pos:line="33" pos:column="53">*<pos:position pos:line="33" pos:column="54"/></operator> sizeof<operator pos:line="33" pos:column="61">(<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="62">unsigned<pos:position pos:line="33" pos:column="70"/></name> <name pos:line="33" pos:column="71">short<pos:position pos:line="33" pos:column="76"/></name><operator pos:line="33" pos:column="76">)<pos:position pos:line="33" pos:column="77"/></operator></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">nbt_size<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&gt;=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="20">msg_size<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">+<pos:position pos:line="34" pos:column="30"/></operator> sizeof<operator pos:line="34" pos:column="37">(<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">unsigned<pos:position pos:line="34" pos:column="46"/></name> <name pos:line="34" pos:column="47">short<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">)<pos:position pos:line="34" pos:column="53"/></operator></expr>)<pos:position pos:line="34" pos:column="54"/></condition><then pos:line="34" pos:column="54"> <block pos:line="34" pos:column="55">{
      <comment type="block" pos:line="35" pos:column="7">/* Add the byte count */</comment>
      <expr_stmt><expr><name pos:line="36" pos:column="7">msg_size<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">+=<pos:position pos:line="36" pos:column="18"/></operator> sizeof<operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">unsigned<pos:position pos:line="36" pos:column="34"/></name> <name pos:line="36" pos:column="35">short<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">)<pos:position pos:line="36" pos:column="41"/></operator> <operator pos:line="36" pos:column="42">+<pos:position pos:line="36" pos:column="43"/></operator>
        <call><name pos:line="37" pos:column="9">Curl_read16_le<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><specifier pos:line="37" pos:column="25">const<pos:position pos:line="37" pos:column="30"/></specifier> <name pos:line="37" pos:column="31">unsigned<pos:position pos:line="37" pos:column="39"/></name> <name pos:line="37" pos:column="40">char<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name><name pos:line="37" pos:column="48">buf<pos:position pos:line="37" pos:column="51"/></name><index pos:line="37" pos:column="51">[<expr><name pos:line="37" pos:column="52">msg_size<pos:position pos:line="37" pos:column="60"/></name></expr>]<pos:position pos:line="37" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt>
      <if pos:line="38" pos:column="7">if<condition pos:line="38" pos:column="9">(<expr><name pos:line="38" pos:column="10">nbt_size<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&lt;<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="21">msg_size<pos:position pos:line="38" pos:column="29"/></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">CURLE_READ_ERROR<pos:position pos:line="39" pos:column="32"/></name></expr>;<pos:position pos:line="39" pos:column="33"/></return></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="43" pos:column="3">*<pos:position pos:line="43" pos:column="4"/></operator><name pos:line="43" pos:column="4">msg<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <name pos:line="43" pos:column="10">buf<pos:position pos:line="43" pos:column="13"/></name></expr>;<pos:position pos:line="43" pos:column="14"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">CURLE_OK<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_309_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gsk_free_handle<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">Curl_gsk_descriptor<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">p<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">gskstrlist<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type> <name pos:line="5" pos:column="23">q<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

  <while pos:line="7" pos:column="3">while<condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">q<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">strlist<pos:position pos:line="7" pos:column="24"/></name></name><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator></expr>)<pos:position pos:line="7" pos:column="26"/></condition> <block pos:line="7" pos:column="27">{
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">strlist<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">q<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">free<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">void<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">q<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">asciistr<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">free<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">q<pos:position pos:line="10" pos:column="11"/></name></expr></argument>)<pos:position pos:line="10" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">free<pos:position pos:line="12" pos:column="7"/></name><argument_list pos:line="12" pos:column="7">(<argument><expr><name pos:line="12" pos:column="8">p<pos:position pos:line="12" pos:column="9"/></name></expr></argument>)<pos:position pos:line="12" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="11"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

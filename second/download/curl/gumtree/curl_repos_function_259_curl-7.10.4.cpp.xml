<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_259_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">Curl_hash_clean_with_criterium<pos:position pos:line="2" pos:column="31"/></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">curl_hash<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">h<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">void<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">user<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                               <parameter><function_decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> (<modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><name pos:line="3" pos:column="38">comp<pos:position pos:line="3" pos:column="42"/></name>)<parameter_list pos:line="3" pos:column="43">(<parameter><decl><type><name pos:line="3" pos:column="44">void<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">void<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_llist_element<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">le<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_llist_element<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">lnext<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">i<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></init> <condition><expr><name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <name><name pos:line="9" pos:column="19">h<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">slots<pos:position pos:line="9" pos:column="27"/></name></name></expr>;<pos:position pos:line="9" pos:column="28"/></condition> <incr><expr><operator pos:line="9" pos:column="29">++<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">i<pos:position pos:line="9" pos:column="32"/></name></expr></incr>)<pos:position pos:line="9" pos:column="33"/></control> <block pos:line="9" pos:column="34">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">le<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">CURL_LLIST_HEAD<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">h<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">table<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><name pos:line="10" pos:column="35">i<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    <while pos:line="11" pos:column="5">while<condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">le<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition>
      <block type="pseudo"><if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">comp<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">user<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">curl_hash_element<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator> <call><name pos:line="12" pos:column="45">CURL_LLIST_VALP<pos:position pos:line="12" pos:column="60"/></name><argument_list pos:line="12" pos:column="60">(<argument><expr><name pos:line="12" pos:column="61">le<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call><operator pos:line="12" pos:column="64">)<pos:position pos:line="12" pos:column="65"/></operator><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">ptr<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="72"/></condition><then pos:line="12" pos:column="72"> <block pos:line="12" pos:column="73">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">lnext<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">CURL_LLIST_NEXT<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">le<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">Curl_llist_remove<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">h<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">table<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><name pos:line="14" pos:column="36">i<pos:position pos:line="14" pos:column="37"/></name></expr>]<pos:position pos:line="14" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">le<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">(<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">void<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">*<pos:position pos:line="14" pos:column="51"/></operator><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="53">h<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">--<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">h<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">size<pos:position pos:line="15" pos:column="18"/></name></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">le<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">lnext<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></then>
      <else pos:line="18" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">le<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">CURL_LLIST_NEXT<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">le<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></else></if></block></while>
  }<pos:position pos:line="20" pos:column="4"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_547_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">Curl_sftp_send<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">connectdata<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">conn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">sockindex<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">mem<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">len<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">nwrite<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>   <comment type="block" pos:line="4" pos:column="21">/* libssh2_sftp_write() used to return size_t in 0.14
                       but is changed to ssize_t in 0.15. These days we don't
                       support libssh2 0.15*/</comment>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">sockindex<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">nwrite<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">libssh2_sftp_write<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">conn<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">proto<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">sshc<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">.<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">sftp_handle<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">mem<pos:position pos:line="9" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">len<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">nwrite<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">LIBSSH2_ERROR_EAGAIN<pos:position pos:line="10" pos:column="36"/></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">nwrite<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

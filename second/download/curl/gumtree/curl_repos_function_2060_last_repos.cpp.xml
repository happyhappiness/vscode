<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2060_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">_ldap_free_urldesc<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">LDAPURLDesc<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ludp<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">ludp<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">free<pos:position pos:line="8" pos:column="7"/></name><argument_list pos:line="8" pos:column="7">(<argument><expr><name><name pos:line="8" pos:column="8">ludp<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">lud_dn<pos:position pos:line="8" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">free<pos:position pos:line="9" pos:column="7"/></name><argument_list pos:line="9" pos:column="7">(<argument><expr><name><name pos:line="9" pos:column="8">ludp<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">lud_filter<pos:position pos:line="9" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">ludp<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">lud_attrs<pos:position pos:line="11" pos:column="21"/></name></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
    <for pos:line="12" pos:column="5">for<control pos:line="12" pos:column="8">(<init><expr><name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></init> <condition><expr><name pos:line="12" pos:column="16">i<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="20">ludp<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">lud_attrs_dups<pos:position pos:line="12" pos:column="40"/></name></name></expr>;<pos:position pos:line="12" pos:column="41"/></condition> <incr><expr><name pos:line="12" pos:column="42">i<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">++<pos:position pos:line="12" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="46"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">free<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">ludp<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">lud_attrs<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><name pos:line="13" pos:column="28">i<pos:position pos:line="13" pos:column="29"/></name></expr>]<pos:position pos:line="13" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">free<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name><name pos:line="14" pos:column="10">ludp<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">lud_attrs<pos:position pos:line="14" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">free<pos:position pos:line="17" pos:column="7"/></name><argument_list pos:line="17" pos:column="7">(<argument><expr><name pos:line="17" pos:column="8">ludp<pos:position pos:line="17" pos:column="12"/></name></expr></argument>)<pos:position pos:line="17" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

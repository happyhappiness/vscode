<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_760_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">lograw<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">unsigned<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buffer<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">ssize_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">data<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">120<pos:position pos:line="3" pos:column="16"/></literal></expr>]<pos:position pos:line="3" pos:column="17"/></index></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ssize_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">i<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">ptr<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">buffer<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">optr<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">data<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">width<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">left<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><sizeof pos:line="8" pos:column="14">sizeof<argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

  <for pos:line="10" pos:column="3">for<control pos:line="10" pos:column="6">(<init><expr><name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></init> <condition><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">&lt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></condition> <incr><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">++<pos:position pos:line="10" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="25"/></control> <block pos:line="10" pos:column="26">{
    <switch pos:line="11" pos:column="5">switch<condition pos:line="11" pos:column="11">(<expr><name><name pos:line="11" pos:column="12">ptr<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><name pos:line="11" pos:column="16">i<pos:position pos:line="11" pos:column="17"/></name></expr>]<pos:position pos:line="11" pos:column="18"/></index></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition> <block pos:line="11" pos:column="20">{
    <case pos:line="12" pos:column="5">case <expr><literal type="char" pos:line="12" pos:column="10">'\n'<pos:position pos:line="12" pos:column="14"/></literal></expr>:<pos:position pos:line="12" pos:column="15"/></case>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">snprintf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">optr<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">left<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"\\n"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">width<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">2<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">optr<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">+=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">2<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">left<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">-=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">2<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
      <break pos:line="17" pos:column="7">break;<pos:position pos:line="17" pos:column="13"/></break>
    <case pos:line="18" pos:column="5">case <expr><literal type="char" pos:line="18" pos:column="10">'\r'<pos:position pos:line="18" pos:column="14"/></literal></expr>:<pos:position pos:line="18" pos:column="15"/></case>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">snprintf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">optr<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">left<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="28">"\\r"<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">width<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">+=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">2<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">optr<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">+=<pos:position pos:line="21" pos:column="14"/></operator> <literal type="number" pos:line="21" pos:column="15">2<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">left<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">-=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">2<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
      <break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break>
    <default pos:line="24" pos:column="5">default:<pos:position pos:line="24" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">snprintf<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">optr<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="22">left<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="28">"%c"<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="34">(<pos:position pos:line="25" pos:column="35"/></operator><call><name pos:line="25" pos:column="35">ISGRAPH<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name><name pos:line="25" pos:column="43">ptr<pos:position pos:line="25" pos:column="46"/></name><index pos:line="25" pos:column="46">[<expr><name pos:line="25" pos:column="47">i<pos:position pos:line="25" pos:column="48"/></name></expr>]<pos:position pos:line="25" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call> <operator pos:line="25" pos:column="51">||<pos:position pos:line="25" pos:column="53"/></operator>
                                  <name><name pos:line="26" pos:column="35">ptr<pos:position pos:line="26" pos:column="38"/></name><index pos:line="26" pos:column="38">[<expr><name pos:line="26" pos:column="39">i<pos:position pos:line="26" pos:column="40"/></name></expr>]<pos:position pos:line="26" pos:column="41"/></index></name> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">0x20<pos:position pos:line="26" pos:column="49"/></literal><operator pos:line="26" pos:column="49">)<pos:position pos:line="26" pos:column="50"/></operator></expr> ?<pos:position pos:line="26" pos:column="52"/></condition><then><expr><name><name pos:line="26" pos:column="52">ptr<pos:position pos:line="26" pos:column="55"/></name><index pos:line="26" pos:column="55">[<expr><name pos:line="26" pos:column="56">i<pos:position pos:line="26" pos:column="57"/></name></expr>]<pos:position pos:line="26" pos:column="58"/></index></name></expr></then><else pos:line="26" pos:column="58">:<expr><literal type="char" pos:line="26" pos:column="59">'.'<pos:position pos:line="26" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">width<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">++<pos:position pos:line="27" pos:column="14"/></operator></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">optr<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">++<pos:position pos:line="28" pos:column="13"/></operator></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">left<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">--<pos:position pos:line="29" pos:column="13"/></operator></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt>
      <break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break>
    }<pos:position pos:line="31" pos:column="6"/></block></switch>

    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">width<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">&gt;<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="14">60<pos:position pos:line="33" pos:column="16"/></literal></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17"> <block pos:line="33" pos:column="18">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">logmsg<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><literal type="string" pos:line="34" pos:column="14">"'%s'"<pos:position pos:line="34" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="22">data<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">width<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">optr<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">data<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">left<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <sizeof pos:line="37" pos:column="14">sizeof<argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">data<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></for>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">width<pos:position pos:line="40" pos:column="11"/></name></expr>)<pos:position pos:line="40" pos:column="12"/></condition><then pos:line="40" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="5">logmsg<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="string" pos:line="41" pos:column="12">"'%s'"<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="20">data<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2312_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_decode_spnego_message<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">Curl_easy<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">user<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="3" pos:column="42">const<pos:position pos:line="3" pos:column="47"/></specifier> <name pos:line="3" pos:column="48">char<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">password<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="4" pos:column="42">const<pos:position pos:line="4" pos:column="47"/></specifier> <name pos:line="4" pos:column="48">char<pos:position pos:line="4" pos:column="52"/></name> <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier></type><name pos:line="4" pos:column="54">service<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="5" pos:column="42">const<pos:position pos:line="5" pos:column="47"/></specifier> <name pos:line="5" pos:column="48">char<pos:position pos:line="5" pos:column="52"/></name> <modifier pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></modifier></type><name pos:line="5" pos:column="54">host<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="6" pos:column="42">const<pos:position pos:line="6" pos:column="47"/></specifier> <name pos:line="6" pos:column="48">char<pos:position pos:line="6" pos:column="52"/></name> <modifier pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></modifier></type><name pos:line="6" pos:column="54">chlg64<pos:position pos:line="6" pos:column="60"/></name></decl></parameter>,
                                         <parameter><decl><type><name><name pos:line="7" pos:column="42">struct<pos:position pos:line="7" pos:column="48"/></name> <name pos:line="7" pos:column="49">negotiatedata<pos:position pos:line="7" pos:column="62"/></name></name> <modifier pos:line="7" pos:column="63">*<pos:position pos:line="7" pos:column="64"/></modifier></type><name pos:line="7" pos:column="64">nego<pos:position pos:line="7" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="69"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">CURLE_OK<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">chlglen<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">chlg<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">PSecPkgInfo<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">SecurityPackage<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">SecBuffer<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">chlg_buf<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">SecBuffer<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">resp_buf<pos:position pos:line="14" pos:column="21"/></name></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">SecBufferDesc<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">chlg_desc<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">SecBufferDesc<pos:position pos:line="16" pos:column="16"/></name></type> <name pos:line="16" pos:column="17">resp_desc<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">unsigned<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">long<pos:position pos:line="17" pos:column="16"/></name></type> <name pos:line="17" pos:column="17">attrs<pos:position pos:line="17" pos:column="22"/></name></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">TimeStamp<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">expiry<pos:position pos:line="18" pos:column="19"/></name></decl>;<pos:position pos:line="18" pos:column="20"/></decl_stmt> <comment type="block" pos:line="18" pos:column="21">/* For Windows 9x compatibility of SSPI calls */</comment>

<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><call><name pos:line="20" pos:column="5">defined<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">CURL_DISABLE_VERBOSE_STRINGS<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><operator pos:line="21" pos:column="3">(<pos:position pos:line="21" pos:column="4"/></operator><name pos:line="21" pos:column="4">void<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">)<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">data<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><name><name pos:line="24" pos:column="6">nego<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">context<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">&amp;&amp;<pos:position pos:line="24" pos:column="30"/></operator> <name><name pos:line="24" pos:column="23">nego<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">status<pos:position pos:line="24" pos:column="35"/></name></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">SEC_E_OK<pos:position pos:line="24" pos:column="47"/></name></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <block pos:line="24" pos:column="49">{
    <comment type="block" pos:line="25" pos:column="5">/* We finished successfully our part of authentication, but server
     * rejected it (since we're again here). Exit with an error since we
     * can't invent anything better */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">Curl_auth_spnego_cleanup<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">nego<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><operator pos:line="32" pos:column="6">!<pos:position pos:line="32" pos:column="7"/></operator><name><name pos:line="32" pos:column="7">nego<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">spn<pos:position pos:line="32" pos:column="16"/></name></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17"> <block pos:line="32" pos:column="18">{
    <comment type="block" pos:line="33" pos:column="5">/* Generate our SPN */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">nego<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">spn<pos:position pos:line="34" pos:column="14"/></name></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">Curl_auth_build_spn<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">service<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">host<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">NULL<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">!<pos:position pos:line="35" pos:column="9"/></operator><name><name pos:line="35" pos:column="9">nego<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">spn<pos:position pos:line="35" pos:column="18"/></name></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19">
      <block type="pseudo"><return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><operator pos:line="39" pos:column="6">!<pos:position pos:line="39" pos:column="7"/></operator><name><name pos:line="39" pos:column="7">nego<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">output_token<pos:position pos:line="39" pos:column="25"/></name></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26"> <block pos:line="39" pos:column="27">{
    <comment type="block" pos:line="40" pos:column="5">/* Query the security package for Negotiate */</comment>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">nego<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">status<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name><name pos:line="41" pos:column="20">s_pSecFn<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">QuerySecurityPackageInfo<pos:position pos:line="41" pos:column="54"/></name></name><argument_list pos:line="41" pos:column="54">(<argument><expr><operator pos:line="41" pos:column="55">(<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">TCHAR<pos:position pos:line="41" pos:column="61"/></name> <operator pos:line="41" pos:column="62">*<pos:position pos:line="41" pos:column="63"/></operator><operator pos:line="41" pos:column="63">)<pos:position pos:line="41" pos:column="64"/></operator>
                                                      <call><name pos:line="42" pos:column="55">TEXT<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><name pos:line="42" pos:column="60">SP_NAME_NEGOTIATE<pos:position pos:line="42" pos:column="77"/></name></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr></argument>,
                                                      <argument><expr><operator pos:line="43" pos:column="55">&amp;<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="56">SecurityPackage<pos:position pos:line="43" pos:column="71"/></name></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name><name pos:line="44" pos:column="8">nego<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">status<pos:position pos:line="44" pos:column="20"/></name></name> <operator pos:line="44" pos:column="21">!=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">SEC_E_OK<pos:position pos:line="44" pos:column="32"/></name></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33">
      <block type="pseudo"><return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">CURLE_NOT_BUILT_IN<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">nego<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">token_max<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name><name pos:line="47" pos:column="23">SecurityPackage<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">cbMaxToken<pos:position pos:line="47" pos:column="50"/></name></name></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Release the package buffer as it is not required anymore */</comment>
    <expr_stmt><expr><call><name><name pos:line="50" pos:column="5">s_pSecFn<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">FreeContextBuffer<pos:position pos:line="50" pos:column="32"/></name></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">SecurityPackage<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* Allocate our output buffer */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">nego<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">output_token<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <call><name pos:line="53" pos:column="26">malloc<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name><name pos:line="53" pos:column="33">nego<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-&gt;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="39">token_max<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name><name pos:line="54" pos:column="9">nego<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">output_token<pos:position pos:line="54" pos:column="27"/></name></name></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></return></block></then></if>
 }<pos:position pos:line="56" pos:column="3"/></block></then></if>

  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><operator pos:line="58" pos:column="6">!<pos:position pos:line="58" pos:column="7"/></operator><name><name pos:line="58" pos:column="7">nego<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">-&gt;<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="13">credentials<pos:position pos:line="58" pos:column="24"/></name></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25"> <block pos:line="58" pos:column="26">{
    <comment type="block" pos:line="59" pos:column="5">/* Do we have credientials to use or are we using single sign-on? */</comment>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><name pos:line="60" pos:column="8">user<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">&amp;&amp;<pos:position pos:line="60" pos:column="23"/></operator> <operator pos:line="60" pos:column="16">*<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">user<pos:position pos:line="60" pos:column="21"/></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22"> <block pos:line="60" pos:column="23">{
      <comment type="block" pos:line="61" pos:column="7">/* Populate our identity structure */</comment>
      <expr_stmt><expr><name pos:line="62" pos:column="7">result<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">Curl_create_sspi_identity<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name pos:line="62" pos:column="42">user<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">password<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="58">&amp;<pos:position pos:line="62" pos:column="63"/></operator><name><name pos:line="62" pos:column="59">nego<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">-&gt;<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="65">identity<pos:position pos:line="62" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="75"/></expr_stmt>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><name pos:line="63" pos:column="10">result<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17">
        <block type="pseudo"><return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">result<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></return></block></then></if>

      <comment type="block" pos:line="66" pos:column="7">/* Allow proper cleanup of the identity structure */</comment>
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">nego<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">p_identity<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <operator pos:line="67" pos:column="26">&amp;<pos:position pos:line="67" pos:column="31"/></operator><name><name pos:line="67" pos:column="27">nego<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">identity<pos:position pos:line="67" pos:column="41"/></name></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then>
    <else pos:line="69" pos:column="5">else
      <comment type="block" pos:line="70" pos:column="7">/* Use the current Windows user */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="7">nego<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">-&gt;<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="13">p_identity<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">NULL<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="73" pos:column="5">/* Allocate our credentials handle */</comment>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">nego<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">credentials<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <call><name pos:line="74" pos:column="25">malloc<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><sizeof pos:line="74" pos:column="32">sizeof<argument_list pos:line="74" pos:column="38">(<argument><expr><name pos:line="74" pos:column="39">CredHandle<pos:position pos:line="74" pos:column="49"/></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="74" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="52"/></expr_stmt>
    <if pos:line="75" pos:column="5">if<condition pos:line="75" pos:column="7">(<expr><operator pos:line="75" pos:column="8">!<pos:position pos:line="75" pos:column="9"/></operator><name><name pos:line="75" pos:column="9">nego<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">-&gt;<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="15">credentials<pos:position pos:line="75" pos:column="26"/></name></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27">
      <block type="pseudo"><return pos:line="76" pos:column="7">return <expr><name pos:line="76" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="76" pos:column="33"/></name></expr>;<pos:position pos:line="76" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">memset<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name><name pos:line="78" pos:column="12">nego<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">-&gt;<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="18">credentials<pos:position pos:line="78" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="31">0<pos:position pos:line="78" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="34">sizeof<argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">CredHandle<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="80" pos:column="5">/* Acquire our credentials handle */</comment>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">nego<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">status<pos:position pos:line="81" pos:column="17"/></name></name> <operator pos:line="81" pos:column="18">=<pos:position pos:line="81" pos:column="19"/></operator>
      <call><name><name pos:line="82" pos:column="7">s_pSecFn<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">AcquireCredentialsHandle<pos:position pos:line="82" pos:column="41"/></name></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name pos:line="82" pos:column="42">NULL<pos:position pos:line="82" pos:column="46"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="83" pos:column="42">(<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="43">TCHAR<pos:position pos:line="83" pos:column="48"/></name> <operator pos:line="83" pos:column="49">*<pos:position pos:line="83" pos:column="50"/></operator><operator pos:line="83" pos:column="50">)<pos:position pos:line="83" pos:column="51"/></operator><call><name pos:line="83" pos:column="51">TEXT<pos:position pos:line="83" pos:column="55"/></name><argument_list pos:line="83" pos:column="55">(<argument><expr><name pos:line="83" pos:column="56">SP_NAME_NEGOTIATE<pos:position pos:line="83" pos:column="73"/></name></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr></argument>,
                                         <argument><expr><name pos:line="84" pos:column="42">SECPKG_CRED_OUTBOUND<pos:position pos:line="84" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="64">NULL<pos:position pos:line="84" pos:column="68"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="85" pos:column="42">nego<pos:position pos:line="85" pos:column="46"/></name><operator pos:line="85" pos:column="46">-&gt;<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="48">p_identity<pos:position pos:line="85" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="60">NULL<pos:position pos:line="85" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="66">NULL<pos:position pos:line="85" pos:column="70"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="86" pos:column="42">nego<pos:position pos:line="86" pos:column="46"/></name><operator pos:line="86" pos:column="46">-&gt;<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="48">credentials<pos:position pos:line="86" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="61">&amp;<pos:position pos:line="86" pos:column="66"/></operator><name pos:line="86" pos:column="62">expiry<pos:position pos:line="86" pos:column="68"/></name></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="70"/></expr_stmt>
    <if pos:line="87" pos:column="5">if<condition pos:line="87" pos:column="7">(<expr><name><name pos:line="87" pos:column="8">nego<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">status<pos:position pos:line="87" pos:column="20"/></name></name> <operator pos:line="87" pos:column="21">!=<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">SEC_E_OK<pos:position pos:line="87" pos:column="32"/></name></expr>)<pos:position pos:line="87" pos:column="33"/></condition><then pos:line="87" pos:column="33">
      <block type="pseudo"><return pos:line="88" pos:column="7">return <expr><name pos:line="88" pos:column="14">CURLE_LOGIN_DENIED<pos:position pos:line="88" pos:column="32"/></name></expr>;<pos:position pos:line="88" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/* Allocate our new context handle */</comment>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">nego<pos:position pos:line="91" pos:column="9"/></name><operator pos:line="91" pos:column="9">-&gt;<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="11">context<pos:position pos:line="91" pos:column="18"/></name></name> <operator pos:line="91" pos:column="19">=<pos:position pos:line="91" pos:column="20"/></operator> <call><name pos:line="91" pos:column="21">malloc<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><sizeof pos:line="91" pos:column="28">sizeof<argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">CtxtHandle<pos:position pos:line="91" pos:column="45"/></name></expr></argument>)<pos:position pos:line="91" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">(<expr><operator pos:line="92" pos:column="8">!<pos:position pos:line="92" pos:column="9"/></operator><name><name pos:line="92" pos:column="9">nego<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">context<pos:position pos:line="92" pos:column="22"/></name></name></expr>)<pos:position pos:line="92" pos:column="23"/></condition><then pos:line="92" pos:column="23">
      <block type="pseudo"><return pos:line="93" pos:column="7">return <expr><name pos:line="93" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="93" pos:column="33"/></name></expr>;<pos:position pos:line="93" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="95" pos:column="5">memset<pos:position pos:line="95" pos:column="11"/></name><argument_list pos:line="95" pos:column="11">(<argument><expr><name><name pos:line="95" pos:column="12">nego<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">-&gt;<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="18">context<pos:position pos:line="95" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="27">0<pos:position pos:line="95" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="30">sizeof<argument_list pos:line="95" pos:column="36">(<argument><expr><name pos:line="95" pos:column="37">CtxtHandle<pos:position pos:line="95" pos:column="47"/></name></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name pos:line="98" pos:column="6">chlg64<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">&amp;&amp;<pos:position pos:line="98" pos:column="23"/></operator> <operator pos:line="98" pos:column="16">*<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="17">chlg64<pos:position pos:line="98" pos:column="23"/></name></expr>)<pos:position pos:line="98" pos:column="24"/></condition><then pos:line="98" pos:column="24"> <block pos:line="98" pos:column="25">{
    <comment type="block" pos:line="99" pos:column="5">/* Decode the base-64 encoded challenge message */</comment>
    <if pos:line="100" pos:column="5">if<condition pos:line="100" pos:column="7">(<expr><operator pos:line="100" pos:column="8">*<pos:position pos:line="100" pos:column="9"/></operator><name pos:line="100" pos:column="9">chlg64<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">!=<pos:position pos:line="100" pos:column="18"/></operator> <literal type="char" pos:line="100" pos:column="19">'='<pos:position pos:line="100" pos:column="22"/></literal></expr>)<pos:position pos:line="100" pos:column="23"/></condition><then pos:line="100" pos:column="23"> <block pos:line="100" pos:column="24">{
      <expr_stmt><expr><name pos:line="101" pos:column="7">result<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <call><name pos:line="101" pos:column="16">Curl_base64_decode<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">(<argument><expr><name pos:line="101" pos:column="35">chlg64<pos:position pos:line="101" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="43">&amp;<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="44">chlg<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="50">&amp;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="51">chlglen<pos:position pos:line="101" pos:column="58"/></name></expr></argument>)<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="60"/></expr_stmt>
      <if pos:line="102" pos:column="7">if<condition pos:line="102" pos:column="9">(<expr><name pos:line="102" pos:column="10">result<pos:position pos:line="102" pos:column="16"/></name></expr>)<pos:position pos:line="102" pos:column="17"/></condition><then pos:line="102" pos:column="17">
        <block type="pseudo"><return pos:line="103" pos:column="9">return <expr><name pos:line="103" pos:column="16">result<pos:position pos:line="103" pos:column="22"/></name></expr>;<pos:position pos:line="103" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="106" pos:column="5">/* Ensure we have a valid challenge message */</comment>
    <if pos:line="107" pos:column="5">if<condition pos:line="107" pos:column="7">(<expr><operator pos:line="107" pos:column="8">!<pos:position pos:line="107" pos:column="9"/></operator><name pos:line="107" pos:column="9">chlg<pos:position pos:line="107" pos:column="13"/></name></expr>)<pos:position pos:line="107" pos:column="14"/></condition><then pos:line="107" pos:column="14"> <block pos:line="107" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="108" pos:column="7">infof<pos:position pos:line="108" pos:column="12"/></name><argument_list pos:line="108" pos:column="12">(<argument><expr><name pos:line="108" pos:column="13">data<pos:position pos:line="108" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="19">"SPNEGO handshake failure (empty challenge message)\n"<pos:position pos:line="108" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="75"/></expr_stmt>

      <return pos:line="110" pos:column="7">return <expr><name pos:line="110" pos:column="14">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="110" pos:column="40"/></name></expr>;<pos:position pos:line="110" pos:column="41"/></return>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="113" pos:column="5">/* Setup the challenge "input" security buffer */</comment>
    <expr_stmt><expr><name><name pos:line="114" pos:column="5">chlg_desc<pos:position pos:line="114" pos:column="14"/></name><operator pos:line="114" pos:column="14">.<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">ulVersion<pos:position pos:line="114" pos:column="24"/></name></name> <operator pos:line="114" pos:column="25">=<pos:position pos:line="114" pos:column="26"/></operator> <name pos:line="114" pos:column="27">SECBUFFER_VERSION<pos:position pos:line="114" pos:column="44"/></name></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="115" pos:column="5">chlg_desc<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">.<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="15">cBuffers<pos:position pos:line="115" pos:column="23"/></name></name>  <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <literal type="number" pos:line="115" pos:column="27">1<pos:position pos:line="115" pos:column="28"/></literal></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">chlg_desc<pos:position pos:line="116" pos:column="14"/></name><operator pos:line="116" pos:column="14">.<pos:position pos:line="116" pos:column="15"/></operator><name pos:line="116" pos:column="15">pBuffers<pos:position pos:line="116" pos:column="23"/></name></name>  <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <operator pos:line="116" pos:column="27">&amp;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="28">chlg_buf<pos:position pos:line="116" pos:column="36"/></name></expr>;<pos:position pos:line="116" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">chlg_buf<pos:position pos:line="117" pos:column="13"/></name><operator pos:line="117" pos:column="13">.<pos:position pos:line="117" pos:column="14"/></operator><name pos:line="117" pos:column="14">BufferType<pos:position pos:line="117" pos:column="24"/></name></name> <operator pos:line="117" pos:column="25">=<pos:position pos:line="117" pos:column="26"/></operator> <name pos:line="117" pos:column="27">SECBUFFER_TOKEN<pos:position pos:line="117" pos:column="42"/></name></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">chlg_buf<pos:position pos:line="118" pos:column="13"/></name><operator pos:line="118" pos:column="13">.<pos:position pos:line="118" pos:column="14"/></operator><name pos:line="118" pos:column="14">pvBuffer<pos:position pos:line="118" pos:column="22"/></name></name>   <operator pos:line="118" pos:column="25">=<pos:position pos:line="118" pos:column="26"/></operator> <name pos:line="118" pos:column="27">chlg<pos:position pos:line="118" pos:column="31"/></name></expr>;<pos:position pos:line="118" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="119" pos:column="5">chlg_buf<pos:position pos:line="119" pos:column="13"/></name><operator pos:line="119" pos:column="13">.<pos:position pos:line="119" pos:column="14"/></operator><name pos:line="119" pos:column="14">cbBuffer<pos:position pos:line="119" pos:column="22"/></name></name>   <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <call><name pos:line="119" pos:column="27">curlx_uztoul<pos:position pos:line="119" pos:column="39"/></name><argument_list pos:line="119" pos:column="39">(<argument><expr><name pos:line="119" pos:column="40">chlglen<pos:position pos:line="119" pos:column="47"/></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="120" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="122" pos:column="3">/* Setup the response "output" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="123" pos:column="3">resp_desc<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">.<pos:position pos:line="123" pos:column="13"/></operator><name pos:line="123" pos:column="13">ulVersion<pos:position pos:line="123" pos:column="22"/></name></name> <operator pos:line="123" pos:column="23">=<pos:position pos:line="123" pos:column="24"/></operator> <name pos:line="123" pos:column="25">SECBUFFER_VERSION<pos:position pos:line="123" pos:column="42"/></name></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="124" pos:column="3">resp_desc<pos:position pos:line="124" pos:column="12"/></name><operator pos:line="124" pos:column="12">.<pos:position pos:line="124" pos:column="13"/></operator><name pos:line="124" pos:column="13">cBuffers<pos:position pos:line="124" pos:column="21"/></name></name>  <operator pos:line="124" pos:column="23">=<pos:position pos:line="124" pos:column="24"/></operator> <literal type="number" pos:line="124" pos:column="25">1<pos:position pos:line="124" pos:column="26"/></literal></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="125" pos:column="3">resp_desc<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">.<pos:position pos:line="125" pos:column="13"/></operator><name pos:line="125" pos:column="13">pBuffers<pos:position pos:line="125" pos:column="21"/></name></name>  <operator pos:line="125" pos:column="23">=<pos:position pos:line="125" pos:column="24"/></operator> <operator pos:line="125" pos:column="25">&amp;<pos:position pos:line="125" pos:column="30"/></operator><name pos:line="125" pos:column="26">resp_buf<pos:position pos:line="125" pos:column="34"/></name></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="126" pos:column="3">resp_buf<pos:position pos:line="126" pos:column="11"/></name><operator pos:line="126" pos:column="11">.<pos:position pos:line="126" pos:column="12"/></operator><name pos:line="126" pos:column="12">BufferType<pos:position pos:line="126" pos:column="22"/></name></name> <operator pos:line="126" pos:column="23">=<pos:position pos:line="126" pos:column="24"/></operator> <name pos:line="126" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="126" pos:column="40"/></name></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="127" pos:column="3">resp_buf<pos:position pos:line="127" pos:column="11"/></name><operator pos:line="127" pos:column="11">.<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="12">pvBuffer<pos:position pos:line="127" pos:column="20"/></name></name>   <operator pos:line="127" pos:column="23">=<pos:position pos:line="127" pos:column="24"/></operator> <name><name pos:line="127" pos:column="25">nego<pos:position pos:line="127" pos:column="29"/></name><operator pos:line="127" pos:column="29">-&gt;<pos:position pos:line="127" pos:column="34"/></operator><name pos:line="127" pos:column="31">output_token<pos:position pos:line="127" pos:column="43"/></name></name></expr>;<pos:position pos:line="127" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="128" pos:column="3">resp_buf<pos:position pos:line="128" pos:column="11"/></name><operator pos:line="128" pos:column="11">.<pos:position pos:line="128" pos:column="12"/></operator><name pos:line="128" pos:column="12">cbBuffer<pos:position pos:line="128" pos:column="20"/></name></name>   <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <call><name pos:line="128" pos:column="25">curlx_uztoul<pos:position pos:line="128" pos:column="37"/></name><argument_list pos:line="128" pos:column="37">(<argument><expr><name><name pos:line="128" pos:column="38">nego<pos:position pos:line="128" pos:column="42"/></name><operator pos:line="128" pos:column="42">-&gt;<pos:position pos:line="128" pos:column="47"/></operator><name pos:line="128" pos:column="44">token_max<pos:position pos:line="128" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="130" pos:column="3">/* Generate our challenge-response message */</comment>
  <expr_stmt><expr><name><name pos:line="131" pos:column="3">nego<pos:position pos:line="131" pos:column="7"/></name><operator pos:line="131" pos:column="7">-&gt;<pos:position pos:line="131" pos:column="12"/></operator><name pos:line="131" pos:column="9">status<pos:position pos:line="131" pos:column="15"/></name></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <call><name><name pos:line="131" pos:column="18">s_pSecFn<pos:position pos:line="131" pos:column="26"/></name><operator pos:line="131" pos:column="26">-&gt;<pos:position pos:line="131" pos:column="31"/></operator><name pos:line="131" pos:column="28">InitializeSecurityContext<pos:position pos:line="131" pos:column="53"/></name></name><argument_list pos:line="131" pos:column="53">(<argument><expr><name><name pos:line="131" pos:column="54">nego<pos:position pos:line="131" pos:column="58"/></name><operator pos:line="131" pos:column="58">-&gt;<pos:position pos:line="131" pos:column="63"/></operator><name pos:line="131" pos:column="60">credentials<pos:position pos:line="131" pos:column="71"/></name></name></expr></argument>,
                                                     <argument><expr><ternary><condition><expr><name pos:line="132" pos:column="54">chlg<pos:position pos:line="132" pos:column="58"/></name></expr> ?<pos:position pos:line="132" pos:column="60"/></condition><then pos:line="132" pos:column="60"> <expr><name><name pos:line="132" pos:column="61">nego<pos:position pos:line="132" pos:column="65"/></name><operator pos:line="132" pos:column="65">-&gt;<pos:position pos:line="132" pos:column="70"/></operator><name pos:line="132" pos:column="67">context<pos:position pos:line="132" pos:column="74"/></name></name></expr> <pos:position pos:line="132" pos:column="75"/></then><else pos:line="132" pos:column="75">:
                                                            <expr><name pos:line="133" pos:column="61">NULL<pos:position pos:line="133" pos:column="65"/></name></expr></else></ternary></expr></argument>,
                                                     <argument><expr><name><name pos:line="134" pos:column="54">nego<pos:position pos:line="134" pos:column="58"/></name><operator pos:line="134" pos:column="58">-&gt;<pos:position pos:line="134" pos:column="63"/></operator><name pos:line="134" pos:column="60">spn<pos:position pos:line="134" pos:column="63"/></name></name></expr></argument>,
                                                     <argument><expr><name pos:line="135" pos:column="54">ISC_REQ_CONFIDENTIALITY<pos:position pos:line="135" pos:column="77"/></name></expr></argument>,
                                                     <argument><expr><literal type="number" pos:line="136" pos:column="54">0<pos:position pos:line="136" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="57">SECURITY_NATIVE_DREP<pos:position pos:line="136" pos:column="77"/></name></expr></argument>,
                                                     <argument><expr><ternary><condition><expr><name pos:line="137" pos:column="54">chlg<pos:position pos:line="137" pos:column="58"/></name></expr> ?<pos:position pos:line="137" pos:column="60"/></condition><then pos:line="137" pos:column="60"> <expr><operator pos:line="137" pos:column="61">&amp;<pos:position pos:line="137" pos:column="66"/></operator><name pos:line="137" pos:column="62">chlg_desc<pos:position pos:line="137" pos:column="71"/></name></expr> <pos:position pos:line="137" pos:column="72"/></then><else pos:line="137" pos:column="72">: <expr><name pos:line="137" pos:column="74">NULL<pos:position pos:line="137" pos:column="78"/></name></expr></else></ternary></expr></argument>,
                                                     <argument><expr><literal type="number" pos:line="138" pos:column="54">0<pos:position pos:line="138" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="57">nego<pos:position pos:line="138" pos:column="61"/></name><operator pos:line="138" pos:column="61">-&gt;<pos:position pos:line="138" pos:column="66"/></operator><name pos:line="138" pos:column="63">context<pos:position pos:line="138" pos:column="70"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="139" pos:column="54">&amp;<pos:position pos:line="139" pos:column="59"/></operator><name pos:line="139" pos:column="55">resp_desc<pos:position pos:line="139" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="66">&amp;<pos:position pos:line="139" pos:column="71"/></operator><name pos:line="139" pos:column="67">attrs<pos:position pos:line="139" pos:column="72"/></name></expr></argument>,
                                                     <argument><expr><operator pos:line="140" pos:column="54">&amp;<pos:position pos:line="140" pos:column="59"/></operator><name pos:line="140" pos:column="55">expiry<pos:position pos:line="140" pos:column="61"/></name></expr></argument>)<pos:position pos:line="140" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="63"/></expr_stmt>

  <comment type="block" pos:line="142" pos:column="3">/* Free the decoded challenge as it is not required anymore */</comment>
  <expr_stmt><expr><call><name pos:line="143" pos:column="3">free<pos:position pos:line="143" pos:column="7"/></name><argument_list pos:line="143" pos:column="7">(<argument><expr><name pos:line="143" pos:column="8">chlg<pos:position pos:line="143" pos:column="12"/></name></expr></argument>)<pos:position pos:line="143" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="14"/></expr_stmt>

  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><call><name pos:line="145" pos:column="6">GSS_ERROR<pos:position pos:line="145" pos:column="15"/></name><argument_list pos:line="145" pos:column="15">(<argument><expr><name><name pos:line="145" pos:column="16">nego<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">-&gt;<pos:position pos:line="145" pos:column="25"/></operator><name pos:line="145" pos:column="22">status<pos:position pos:line="145" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="30"/></condition><then pos:line="145" pos:column="30"> <block pos:line="145" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">failf<pos:position pos:line="146" pos:column="10"/></name><argument_list pos:line="146" pos:column="10">(<argument><expr><name pos:line="146" pos:column="11">data<pos:position pos:line="146" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="17">"InitializeSecurityContext failed: %s"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="147" pos:column="11">Curl_sspi_strerror<pos:position pos:line="147" pos:column="29"/></name><argument_list pos:line="147" pos:column="29">(<argument><expr><name><name pos:line="147" pos:column="30">data<pos:position pos:line="147" pos:column="34"/></name><operator pos:line="147" pos:column="34">-&gt;<pos:position pos:line="147" pos:column="39"/></operator><name pos:line="147" pos:column="36">easy_conn<pos:position pos:line="147" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="47">nego<pos:position pos:line="147" pos:column="51"/></name><operator pos:line="147" pos:column="51">-&gt;<pos:position pos:line="147" pos:column="56"/></operator><name pos:line="147" pos:column="53">status<pos:position pos:line="147" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="147" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="62"/></expr_stmt>
    <return pos:line="148" pos:column="5">return <expr><name pos:line="148" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="148" pos:column="31"/></name></expr>;<pos:position pos:line="148" pos:column="32"/></return>
  }<pos:position pos:line="149" pos:column="4"/></block></then></if>

  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><name><name pos:line="151" pos:column="6">nego<pos:position pos:line="151" pos:column="10"/></name><operator pos:line="151" pos:column="10">-&gt;<pos:position pos:line="151" pos:column="15"/></operator><name pos:line="151" pos:column="12">status<pos:position pos:line="151" pos:column="18"/></name></name> <operator pos:line="151" pos:column="19">==<pos:position pos:line="151" pos:column="21"/></operator> <name pos:line="151" pos:column="22">SEC_I_COMPLETE_NEEDED<pos:position pos:line="151" pos:column="43"/></name> <operator pos:line="151" pos:column="44">||<pos:position pos:line="151" pos:column="46"/></operator>
     <name><name pos:line="152" pos:column="6">nego<pos:position pos:line="152" pos:column="10"/></name><operator pos:line="152" pos:column="10">-&gt;<pos:position pos:line="152" pos:column="15"/></operator><name pos:line="152" pos:column="12">status<pos:position pos:line="152" pos:column="18"/></name></name> <operator pos:line="152" pos:column="19">==<pos:position pos:line="152" pos:column="21"/></operator> <name pos:line="152" pos:column="22">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="152" pos:column="49"/></name></expr>)<pos:position pos:line="152" pos:column="50"/></condition><then pos:line="152" pos:column="50"> <block pos:line="152" pos:column="51">{
    <expr_stmt><expr><name><name pos:line="153" pos:column="5">nego<pos:position pos:line="153" pos:column="9"/></name><operator pos:line="153" pos:column="9">-&gt;<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="11">status<pos:position pos:line="153" pos:column="17"/></name></name> <operator pos:line="153" pos:column="18">=<pos:position pos:line="153" pos:column="19"/></operator> <call><name><name pos:line="153" pos:column="20">s_pSecFn<pos:position pos:line="153" pos:column="28"/></name><operator pos:line="153" pos:column="28">-&gt;<pos:position pos:line="153" pos:column="33"/></operator><name pos:line="153" pos:column="30">CompleteAuthToken<pos:position pos:line="153" pos:column="47"/></name></name><argument_list pos:line="153" pos:column="47">(<argument><expr><name><name pos:line="153" pos:column="48">nego<pos:position pos:line="153" pos:column="52"/></name><operator pos:line="153" pos:column="52">-&gt;<pos:position pos:line="153" pos:column="57"/></operator><name pos:line="153" pos:column="54">context<pos:position pos:line="153" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="63">&amp;<pos:position pos:line="153" pos:column="68"/></operator><name pos:line="153" pos:column="64">resp_desc<pos:position pos:line="153" pos:column="73"/></name></expr></argument>)<pos:position pos:line="153" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="75"/></expr_stmt>
    <if pos:line="154" pos:column="5">if<condition pos:line="154" pos:column="7">(<expr><call><name pos:line="154" pos:column="8">GSS_ERROR<pos:position pos:line="154" pos:column="17"/></name><argument_list pos:line="154" pos:column="17">(<argument><expr><name><name pos:line="154" pos:column="18">nego<pos:position pos:line="154" pos:column="22"/></name><operator pos:line="154" pos:column="22">-&gt;<pos:position pos:line="154" pos:column="27"/></operator><name pos:line="154" pos:column="24">status<pos:position pos:line="154" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="32"/></condition><then pos:line="154" pos:column="32"> <block pos:line="154" pos:column="33">{
      <return pos:line="155" pos:column="7">return <expr><name pos:line="155" pos:column="14">CURLE_RECV_ERROR<pos:position pos:line="155" pos:column="30"/></name></expr>;<pos:position pos:line="155" pos:column="31"/></return>
    }<pos:position pos:line="156" pos:column="6"/></block></then></if>
  }<pos:position pos:line="157" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="159" pos:column="3">nego<pos:position pos:line="159" pos:column="7"/></name><operator pos:line="159" pos:column="7">-&gt;<pos:position pos:line="159" pos:column="12"/></operator><name pos:line="159" pos:column="9">output_token_length<pos:position pos:line="159" pos:column="28"/></name></name> <operator pos:line="159" pos:column="29">=<pos:position pos:line="159" pos:column="30"/></operator> <name><name pos:line="159" pos:column="31">resp_buf<pos:position pos:line="159" pos:column="39"/></name><operator pos:line="159" pos:column="39">.<pos:position pos:line="159" pos:column="40"/></operator><name pos:line="159" pos:column="40">cbBuffer<pos:position pos:line="159" pos:column="48"/></name></name></expr>;<pos:position pos:line="159" pos:column="49"/></expr_stmt>

  <return pos:line="161" pos:column="3">return <expr><name pos:line="161" pos:column="10">result<pos:position pos:line="161" pos:column="16"/></name></expr>;<pos:position pos:line="161" pos:column="17"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_148_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dumpNode<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">TidyDoc<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">doc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">TidyNode<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">tnod<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">indent<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">TidyNode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">child<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <for pos:line="4" pos:column="3">for<control pos:line="4" pos:column="6">(<init><expr><name pos:line="4" pos:column="7">child<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <call><name pos:line="4" pos:column="15">tidyGetChild<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">tnod<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></init> <condition><expr><name pos:line="4" pos:column="35">child<pos:position pos:line="4" pos:column="40"/></name></expr>;<pos:position pos:line="4" pos:column="41"/></condition> <incr><expr><name pos:line="4" pos:column="42">child<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">=<pos:position pos:line="4" pos:column="49"/></operator> <call><name pos:line="4" pos:column="50">tidyGetNext<pos:position pos:line="4" pos:column="61"/></name><argument_list pos:line="4" pos:column="61">(<argument><expr><name pos:line="4" pos:column="62">child<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></incr> )<pos:position pos:line="4" pos:column="70"/></control> <block pos:line="4" pos:column="71">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ctmbstr<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">name<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><call><name pos:line="5" pos:column="20">tidyNodeGetName<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">child<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <if pos:line="6" pos:column="5">if<condition pos:line="6" pos:column="7">(<expr><name pos:line="6" pos:column="8">name<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13"> <block pos:line="6" pos:column="14">{
      <comment type="block" pos:line="7" pos:column="7">/* if it has a name, then it's an HTML tag ... */</comment>
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">TidyAttr<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">attr<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">printf<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"%*.*s%s "<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">indent<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">indent<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="42">"&lt;"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">name<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
      <comment type="block" pos:line="10" pos:column="7">/* walk the attribute list */</comment>
      <for pos:line="11" pos:column="7">for<control pos:line="11" pos:column="10">(<init><expr><name pos:line="11" pos:column="11">attr<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">tidyAttrFirst<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">child<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></init> <condition><expr><name pos:line="11" pos:column="40">attr<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></condition> <incr><expr><name pos:line="11" pos:column="46">attr<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">=<pos:position pos:line="11" pos:column="52"/></operator> <call><name pos:line="11" pos:column="53">tidyAttrNext<pos:position pos:line="11" pos:column="65"/></name><argument_list pos:line="11" pos:column="65">(<argument><expr><name pos:line="11" pos:column="66">attr<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr></incr> )<pos:position pos:line="11" pos:column="73"/></control> <block pos:line="11" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">printf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><call><name pos:line="12" pos:column="16">tidyAttrName<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">attr<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><ternary><condition><expr><call><name pos:line="13" pos:column="9">tidyAttrValue<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">attr<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>?<pos:position pos:line="13" pos:column="29"/></condition><then><expr><call><name pos:line="13" pos:column="29">printf<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><literal type="string" pos:line="13" pos:column="36">"=\"%s\" "<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="14" pos:column="36">tidyAttrValue<pos:position pos:line="14" pos:column="49"/></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">attr<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr></then><else pos:line="14" pos:column="56">:<expr><call><name pos:line="14" pos:column="57">printf<pos:position pos:line="14" pos:column="63"/></name><argument_list pos:line="14" pos:column="63">(<argument><expr><literal type="string" pos:line="14" pos:column="64">" "<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
      }<pos:position pos:line="15" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">printf<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="string" pos:line="16" pos:column="14">"&gt;\n"<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
      <comment type="block" pos:line="19" pos:column="7">/* if it doesn't have a name, then it's probably text, cdata, etc... */</comment>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">TidyBuffer<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">tidyBufInit<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><operator pos:line="21" pos:column="19">&amp;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="20">buf<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">tidyNodeGetText<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">doc<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">child<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="36">buf<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">printf<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><literal type="string" pos:line="23" pos:column="14">"%*.*s\n"<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="25">indent<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">indent<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="23" pos:column="41">buf<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">bp<pos:position pos:line="23" pos:column="47"/></name></name></expr>?<pos:position pos:line="23" pos:column="48"/></condition><then><expr><operator pos:line="23" pos:column="48">(<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">char<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">*<pos:position pos:line="23" pos:column="55"/></operator><operator pos:line="23" pos:column="55">)<pos:position pos:line="23" pos:column="56"/></operator><name><name pos:line="23" pos:column="56">buf<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">.<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">bp<pos:position pos:line="23" pos:column="62"/></name></name></expr></then><else pos:line="23" pos:column="62">:<expr><literal type="string" pos:line="23" pos:column="63">""<pos:position pos:line="23" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">tidyBufFree<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><operator pos:line="24" pos:column="19">&amp;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="20">buf<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">dumpNode<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">doc<pos:position pos:line="26" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">child<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">indent<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator> <literal type="number" pos:line="26" pos:column="35">4<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt> <comment type="block" pos:line="26" pos:column="39">/* recursive */</comment>
  }<pos:position pos:line="27" pos:column="4"/></block></for>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

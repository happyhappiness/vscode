<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2163_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">time_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">Curl_pp_state_timeout<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">pingpong<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">pp<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">connectdata<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">conn<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name><name pos:line="3" pos:column="30">pp<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">conn<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">time_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">timeout_ms<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt> <comment type="block" pos:line="5" pos:column="22">/* in milliseconds */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">time_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">timeout2_ms<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt> <comment type="block" pos:line="6" pos:column="23">/* in milliseconds */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">response_time<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><ternary><condition><expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">set<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">server_response_timeout<pos:position pos:line="7" pos:column="58"/></name></name><operator pos:line="7" pos:column="58">)<pos:position pos:line="7" pos:column="59"/></operator></expr>?<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
    <expr><name><name pos:line="8" pos:column="5">data<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">set<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">server_response_timeout<pos:position pos:line="8" pos:column="38"/></name></name></expr></then><else pos:line="8" pos:column="38">: <expr><name><name pos:line="8" pos:column="40">pp<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">response_time<pos:position pos:line="8" pos:column="57"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* if CURLOPT_SERVER_RESPONSE_TIMEOUT is set, use that to determine
     remaining time, or use pp-&gt;response because SERVER_RESPONSE_TIMEOUT is
     supposed to govern the response for any given server response, not for
     the time from connect to the given server response. */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* Without a requested timeout, we only wait 'response_time' seconds for the
     full response to arrive before we bail out */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">timeout_ms<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">response_time<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">-<pos:position pos:line="17" pos:column="31"/></operator>
    <call><name pos:line="18" pos:column="5">Curl_tvdiff<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><call><name pos:line="18" pos:column="17">Curl_tvnow<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">()<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="31">pp<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">response<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt> <comment type="block" pos:line="18" pos:column="46">/* spent time */</comment>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name><name pos:line="20" pos:column="6">data<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">set<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">timeout<pos:position pos:line="20" pos:column="23"/></name></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
    <comment type="block" pos:line="21" pos:column="5">/* if timeout is requested, find out how much remaining time we have */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">timeout2_ms<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">set<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">timeout<pos:position pos:line="22" pos:column="36"/></name></name> <operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator> <comment type="block" pos:line="22" pos:column="39">/* timeout time */</comment>
      <call><name pos:line="23" pos:column="7">Curl_tvdiff<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><call><name pos:line="23" pos:column="19">Curl_tvnow<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">()<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="33">conn<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">now<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt> <comment type="block" pos:line="23" pos:column="45">/* spent time */</comment>

    <comment type="block" pos:line="25" pos:column="5">/* pick the lowest number */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">timeout_ms<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">CURLMIN<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">timeout_ms<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">timeout2_ms<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">timeout_ms<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

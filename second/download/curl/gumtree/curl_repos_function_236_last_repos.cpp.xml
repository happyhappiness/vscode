<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_236_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">write_cb<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">ptr<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">size<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">nmemb<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">void<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">data<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">written<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">size<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">nmemb<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">pBuffer<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><operator pos:line="4" pos:column="19">(<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">)<pos:position pos:line="4" pos:column="27"/></operator><call><name pos:line="4" pos:column="27">malloc<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">written<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">+<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">1<pos:position pos:line="4" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">strncpy<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">pBuffer<pos:position pos:line="6" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><specifier pos:line="6" pos:column="21">const<pos:position pos:line="6" pos:column="26"/></specifier> <name pos:line="6" pos:column="27">char<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">ptr<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">written<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">pBuffer<pos:position pos:line="7" pos:column="10"/></name><index pos:line="7" pos:column="10">[<expr><name pos:line="7" pos:column="11">written<pos:position pos:line="7" pos:column="18"/></name></expr>]<pos:position pos:line="7" pos:column="19"/></index></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <literal type="char" pos:line="7" pos:column="22">'\0'<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">fprintf<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">MSG_OUT<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="20">"%s"<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">pBuffer<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">free<pos:position pos:line="11" pos:column="7"/></name><argument_list pos:line="11" pos:column="7">(<argument><expr><name pos:line="11" pos:column="8">pBuffer<pos:position pos:line="11" pos:column="15"/></name></expr></argument>)<pos:position pos:line="11" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>

  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">written<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1004_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">unescape_elements<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">LDAPURLDesc<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ludp<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name><name pos:line="5" pos:column="6">ludp<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">lud_filter<pos:position pos:line="5" pos:column="22"/></name></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">ludp<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">lud_filter<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <call><name pos:line="6" pos:column="24">curl_easy_unescape<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">data<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="49">ludp<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">lud_filter<pos:position pos:line="6" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="67">0<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="70">NULL<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name><name pos:line="7" pos:column="9">ludp<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">lud_filter<pos:position pos:line="7" pos:column="25"/></name></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
       <block type="pseudo"><return pos:line="8" pos:column="8">return <expr><operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">FALSE<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">)<pos:position pos:line="8" pos:column="22"/></operator></expr>;<pos:position pos:line="8" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></init> <condition><expr><name><name pos:line="11" pos:column="15">ludp<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">lud_attrs<pos:position pos:line="11" pos:column="30"/></name></name> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator> <name><name pos:line="11" pos:column="34">ludp<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">lud_attrs<pos:position pos:line="11" pos:column="49"/></name><index pos:line="11" pos:column="49">[<expr><name pos:line="11" pos:column="50">i<pos:position pos:line="11" pos:column="51"/></name></expr>]<pos:position pos:line="11" pos:column="52"/></index></name></expr>;<pos:position pos:line="11" pos:column="53"/></condition> <incr><expr><name pos:line="11" pos:column="54">i<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">++<pos:position pos:line="11" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="58"/></control> <block pos:line="11" pos:column="59">{
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">ludp<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">lud_attrs<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name></expr>]<pos:position pos:line="12" pos:column="23"/></index></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">curl_easy_unescape<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">data<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">ludp<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">lud_attrs<pos:position pos:line="12" pos:column="66"/></name><index pos:line="12" pos:column="66">[<expr><name pos:line="12" pos:column="67">i<pos:position pos:line="12" pos:column="68"/></name></expr>]<pos:position pos:line="12" pos:column="69"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="71">0<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="74">NULL<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">!<pos:position pos:line="13" pos:column="9"/></operator><name><name pos:line="13" pos:column="9">ludp<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">lud_attrs<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">i<pos:position pos:line="13" pos:column="26"/></name></expr>]<pos:position pos:line="13" pos:column="27"/></index></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
       <block type="pseudo"><return pos:line="14" pos:column="8">return <expr><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">FALSE<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">)<pos:position pos:line="14" pos:column="22"/></operator></expr>;<pos:position pos:line="14" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">i<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></init> <condition><expr><name><name pos:line="17" pos:column="15">ludp<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">lud_exts<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">&amp;&amp;<pos:position pos:line="17" pos:column="40"/></operator> <name><name pos:line="17" pos:column="33">ludp<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">lud_exts<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">i<pos:position pos:line="17" pos:column="49"/></name></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr>;<pos:position pos:line="17" pos:column="51"/></condition> <incr><expr><name pos:line="17" pos:column="52">i<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">++<pos:position pos:line="17" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="56"/></control> <block pos:line="17" pos:column="57">{
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ludp<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">lud_exts<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">i<pos:position pos:line="18" pos:column="21"/></name></expr>]<pos:position pos:line="18" pos:column="22"/></index></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="25">curl_easy_unescape<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">(<argument><expr><name pos:line="18" pos:column="44">data<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="50">ludp<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">lud_exts<pos:position pos:line="18" pos:column="64"/></name><index pos:line="18" pos:column="64">[<expr><name pos:line="18" pos:column="65">i<pos:position pos:line="18" pos:column="66"/></name></expr>]<pos:position pos:line="18" pos:column="67"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="69">0<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="72">NULL<pos:position pos:line="18" pos:column="76"/></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><operator pos:line="19" pos:column="8">!<pos:position pos:line="19" pos:column="9"/></operator><name><name pos:line="19" pos:column="9">ludp<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">lud_exts<pos:position pos:line="19" pos:column="23"/></name><index pos:line="19" pos:column="23">[<expr><name pos:line="19" pos:column="24">i<pos:position pos:line="19" pos:column="25"/></name></expr>]<pos:position pos:line="19" pos:column="26"/></index></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27">
       <block type="pseudo"><return pos:line="20" pos:column="8">return <expr><operator pos:line="20" pos:column="15">(<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">FALSE<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name><name pos:line="23" pos:column="6">ludp<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">lud_dn<pos:position pos:line="23" pos:column="18"/></name></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">dn<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><name><name pos:line="24" pos:column="16">ludp<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">lud_dn<pos:position pos:line="24" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">new_dn<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><call><name pos:line="25" pos:column="20">curl_easy_unescape<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">data<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">dn<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="49">0<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">NULL<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="58"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">free<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><name pos:line="27" pos:column="10">dn<pos:position pos:line="27" pos:column="12"/></name></expr></argument>)<pos:position pos:line="27" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ludp<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">lud_dn<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">new_dn<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">new_dn<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16">
       <block type="pseudo"><return pos:line="30" pos:column="8">return <expr><operator pos:line="30" pos:column="15">(<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">FALSE<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator></expr>;<pos:position pos:line="30" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">TRUE<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_314_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">base64Decode<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">unsigned<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">dest<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">src<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">rawLength<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">length<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">equalsTerm<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">numQuantums<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">lastQuantum<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><literal type="number" pos:line="7" pos:column="29">3<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	
  <while pos:line="9" pos:column="3">while<condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">src<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">length<pos:position pos:line="9" pos:column="20"/></name></expr>]<pos:position pos:line="9" pos:column="21"/></index></name> <operator pos:line="9" pos:column="22">!=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="char" pos:line="9" pos:column="25">'='<pos:position pos:line="9" pos:column="28"/></literal><operator pos:line="9" pos:column="28">)<pos:position pos:line="9" pos:column="29"/></operator> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name><name pos:line="9" pos:column="33">src<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">length<pos:position pos:line="9" pos:column="43"/></name></expr>]<pos:position pos:line="9" pos:column="44"/></index></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">length<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">++<pos:position pos:line="10" pos:column="13"/></operator></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt></block></while>
  <while pos:line="11" pos:column="3">while<condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">src<pos:position pos:line="11" pos:column="12"/></name><index pos:line="11" pos:column="12">[<expr><name pos:line="11" pos:column="13">length<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">+<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">equalsTerm<pos:position pos:line="11" pos:column="30"/></name></expr>]<pos:position pos:line="11" pos:column="31"/></index></name> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <literal type="char" pos:line="11" pos:column="35">'='<pos:position pos:line="11" pos:column="38"/></literal></expr>)<pos:position pos:line="11" pos:column="39"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">equalsTerm<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">++<pos:position pos:line="12" pos:column="17"/></operator></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt></block></while>
  
  <expr_stmt><expr><name pos:line="14" pos:column="3">numQuantums<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">length<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">+<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">equalsTerm<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="39">/<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">4<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">rawLength<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">rawLength<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">numQuantums<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">3<pos:position pos:line="16" pos:column="34"/></literal><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator> <operator pos:line="16" pos:column="36">-<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">equalsTerm<pos:position pos:line="16" pos:column="48"/></name></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt></block></then></if>
  
  <for pos:line="18" pos:column="3">for<control pos:line="18" pos:column="6">(<init><expr><name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></init> <condition><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="18">numQuantums<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">-<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></condition> <incr><expr><name pos:line="18" pos:column="35">i<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="39"/></control> <block pos:line="18" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">decodeQuantum<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">dest<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">src<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">dest<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">+=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="number" pos:line="20" pos:column="13">3<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt> <expr_stmt><expr><name pos:line="20" pos:column="16">src<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">+=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">4<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">decodeQuantum<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">lastQuantum<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">src<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
  <for pos:line="24" pos:column="3">for<control pos:line="24" pos:column="6">(<init><expr><name pos:line="24" pos:column="7">i<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <literal type="number" pos:line="24" pos:column="11">0<pos:position pos:line="24" pos:column="12"/></literal></expr>;<pos:position pos:line="24" pos:column="13"/></init> <condition><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&lt;<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="18">3<pos:position pos:line="24" pos:column="19"/></literal> <operator pos:line="24" pos:column="20">-<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">equalsTerm<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></condition> <incr><expr><name pos:line="24" pos:column="34">i<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">++<pos:position pos:line="24" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="5">dest<pos:position pos:line="25" pos:column="9"/></name><index pos:line="25" pos:column="9">[<expr><name pos:line="25" pos:column="10">i<pos:position pos:line="25" pos:column="11"/></name></expr>]<pos:position pos:line="25" pos:column="12"/></index></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name><name pos:line="25" pos:column="15">lastQuantum<pos:position pos:line="25" pos:column="26"/></name><index pos:line="25" pos:column="26">[<expr><name pos:line="25" pos:column="27">i<pos:position pos:line="25" pos:column="28"/></name></expr>]<pos:position pos:line="25" pos:column="29"/></index></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt></block></for>
	
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

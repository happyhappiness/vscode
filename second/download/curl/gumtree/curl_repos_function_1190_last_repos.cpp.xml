<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1190_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">imap_dophase_done<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">bool<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">connected<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">IMAP<pos:position pos:line="3" pos:column="14"/></name></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">imap<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">conn<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">req<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">.<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">protop<pos:position pos:line="3" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="5" pos:column="3">(<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">void<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">)<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">connected<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name><name pos:line="7" pos:column="6">imap<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">transfer<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">FTPTRANSFER_BODY<pos:position pos:line="7" pos:column="40"/></name></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
    <comment type="block" pos:line="8" pos:column="5">/* no data to transfer */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">Curl_setup_transfer<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">conn<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="31">-<pos:position pos:line="9" pos:column="32"/></operator><literal type="number" pos:line="9" pos:column="32">1<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator><literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">FALSE<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">-<pos:position pos:line="9" pos:column="53"/></operator><literal type="number" pos:line="9" pos:column="53">1<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">NULL<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt></block></then></if>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">CURLE_OK<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

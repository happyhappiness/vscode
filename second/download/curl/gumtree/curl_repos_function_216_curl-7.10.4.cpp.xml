<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_216_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">add_buffer_send<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">send_buffer<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">in<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">int<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">sockfd<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                         <parameter><decl><type><name><name pos:line="4" pos:column="26">struct<pos:position pos:line="4" pos:column="32"/></name> <name pos:line="4" pos:column="33">connectdata<pos:position pos:line="4" pos:column="44"/></name></name> <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier></type><name pos:line="4" pos:column="46">conn<pos:position pos:line="4" pos:column="50"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="5" pos:column="26">long<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">bytes_written<pos:position pos:line="5" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="46"/></parameter_list> <comment type="block" pos:line="5" pos:column="47">/* add the number of sent
                                                 bytes to this counter */</comment>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">ssize_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">amount<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">res<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">ptr<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">size<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">HTTP<pos:position pos:line="12" pos:column="14"/></name></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">http<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name><name pos:line="12" pos:column="23">conn<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">proto<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">http<pos:position pos:line="12" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* The looping below is required since we use non-blocking sockets, but due
     to the circumstances we will just loop and try again and again etc */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">ptr<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <name><name pos:line="17" pos:column="9">in<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">buffer<pos:position pos:line="17" pos:column="19"/></name></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">size<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name><name pos:line="18" pos:column="10">in<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">size_used<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">res<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">Curl_write<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">conn<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">sockfd<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">ptr<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">size<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="46">amount<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">CURLE_OK<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">res<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{

    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name><name pos:line="24" pos:column="8">conn<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">data<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">set<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">verbose<pos:position pos:line="24" pos:column="31"/></name></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
      <comment type="block" pos:line="25" pos:column="7">/* this data _may_ contain binary stuff */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">Curl_debug<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name><name pos:line="26" pos:column="18">conn<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">data<pos:position pos:line="26" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">CURLINFO_HEADER_OUT<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">ptr<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">amount<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">bytes_written<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">+=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">amount<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">amount<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">size<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block pos:line="30" pos:column="24">{
      <comment type="block" pos:line="31" pos:column="7">/* The whole request could not be sent in one system call. We must queue
         it up and send it later when we get the chance. We must not loop here
         and wait until it might work again. */</comment>

      <expr_stmt><expr><name pos:line="35" pos:column="7">size<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">-=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">amount<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">ptr<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">+=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">amount<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
    
      <comment type="block" pos:line="38" pos:column="7">/* backup the currently set pointers */</comment>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">http<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">backup<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">fread<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name><name pos:line="39" pos:column="28">conn<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">fread<pos:position pos:line="39" pos:column="39"/></name></name></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">http<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">backup<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">fread_in<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <name><name pos:line="40" pos:column="31">conn<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">fread_in<pos:position pos:line="40" pos:column="45"/></name></name></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="41" pos:column="7">http<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">backup<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">postdata<pos:position pos:line="41" pos:column="28"/></name></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name><name pos:line="41" pos:column="31">http<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">postdata<pos:position pos:line="41" pos:column="45"/></name></name></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="42" pos:column="7">http<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">backup<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">postsize<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name><name pos:line="42" pos:column="31">http<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">postsize<pos:position pos:line="42" pos:column="45"/></name></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="44" pos:column="7">/* set the new pointers for the request-sending */</comment>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">conn<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">fread<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">curl_read_callback<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">)<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">readmoredata<pos:position pos:line="45" pos:column="53"/></name></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="46" pos:column="7">conn<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">fread_in<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">void<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">*<pos:position pos:line="46" pos:column="31"/></operator><operator pos:line="46" pos:column="31">)<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">conn<pos:position pos:line="46" pos:column="36"/></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">http<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">postdata<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">ptr<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">http<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">postsize<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">size<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="50" pos:column="7">http<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">send_buffer<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">in<pos:position pos:line="50" pos:column="29"/></name></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">http<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">sending<pos:position pos:line="51" pos:column="20"/></name></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <name pos:line="51" pos:column="23">HTTPSEND_REQUEST<pos:position pos:line="51" pos:column="39"/></name></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
      
      <return pos:line="53" pos:column="7">return <expr><name pos:line="53" pos:column="14">CURLE_OK<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">http<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">sending<pos:position pos:line="55" pos:column="18"/></name></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">HTTPSEND_BODY<pos:position pos:line="55" pos:column="34"/></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="56" pos:column="5">/* the full buffer was sent, clean up and return */</comment>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>
  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><name><name pos:line="58" pos:column="6">in<pos:position pos:line="58" pos:column="8"/></name><operator pos:line="58" pos:column="8">-&gt;<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="10">buffer<pos:position pos:line="58" pos:column="16"/></name></name></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="5">free<pos:position pos:line="59" pos:column="9"/></name><argument_list pos:line="59" pos:column="9">(<argument><expr><name><name pos:line="59" pos:column="10">in<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">buffer<pos:position pos:line="59" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">free<pos:position pos:line="60" pos:column="7"/></name><argument_list pos:line="60" pos:column="7">(<argument><expr><name pos:line="60" pos:column="8">in<pos:position pos:line="60" pos:column="10"/></name></expr></argument>)<pos:position pos:line="60" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="12"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><name pos:line="62" pos:column="10">res<pos:position pos:line="62" pos:column="13"/></name></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_690_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">readline<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">buffer<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">size_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">bufsize<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">FILE<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">stream<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">offset<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">length<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">newptr<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><operator pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">buffer<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">buffer<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">malloc<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="number" pos:line="8" pos:column="22">128<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    <if pos:line="9" pos:column="5">if<condition pos:line="9" pos:column="7">(<expr><operator pos:line="9" pos:column="8">!<pos:position pos:line="9" pos:column="9"/></operator><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">buffer<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><name pos:line="10" pos:column="14">GPE_OUT_OF_MEMORY<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">bufsize<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="16">128<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <for pos:line="14" pos:column="3">for<control pos:line="14" pos:column="6">(<init pos:line="14" pos:column="7">;<pos:position pos:line="14" pos:column="8"/></init><condition pos:line="14" pos:column="8">;<pos:position pos:line="14" pos:column="9"/></condition><incr/>)<pos:position pos:line="14" pos:column="10"/></control> <block pos:line="14" pos:column="11">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">bytestoread<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><call><name pos:line="15" pos:column="23">curlx_uztosi<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><operator pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">bufsize<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">-<pos:position pos:line="15" pos:column="46"/></operator> <name pos:line="15" pos:column="47">offset<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="55"/></decl_stmt>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><call><name pos:line="17" pos:column="9">fgets<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">buffer<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">+<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">offset<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">bytestoread<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">stream<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><ternary><condition><expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">offset<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">!=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="number" pos:line="18" pos:column="25">0<pos:position pos:line="18" pos:column="26"/></literal><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator></expr> ?<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <expr><name pos:line="18" pos:column="30">GPE_OK<pos:position pos:line="18" pos:column="36"/></name></expr> <pos:position pos:line="18" pos:column="37"/></then><else pos:line="18" pos:column="37">: <expr><name pos:line="18" pos:column="39">GPE_END_OF_FILE<pos:position pos:line="18" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="55"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">length<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">offset<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">+<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">strlen<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">buffer<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">+<pos:position pos:line="20" pos:column="39"/></operator> <name pos:line="20" pos:column="40">offset<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">*<pos:position pos:line="21" pos:column="9"/></operator><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">buffer<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">+<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">length<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">-<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal><operator pos:line="21" pos:column="30">)<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="char" pos:line="21" pos:column="35">'\n'<pos:position pos:line="21" pos:column="39"/></literal></expr>)<pos:position pos:line="21" pos:column="40"/></condition><then pos:line="21" pos:column="40">
      <block type="pseudo"><break pos:line="22" pos:column="7">break;<pos:position pos:line="22" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">offset<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">length<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <if pos:line="24" pos:column="5">if<condition pos:line="24" pos:column="7">(<expr><name pos:line="24" pos:column="8">length<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&lt;<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">bufsize<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">-<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="28">1<pos:position pos:line="24" pos:column="29"/></literal></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">newptr<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">realloc<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><operator pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">buffer<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">bufsize<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">*<pos:position pos:line="27" pos:column="41"/></operator> <literal type="number" pos:line="27" pos:column="42">2<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">newptr<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">GPE_OUT_OF_MEMORY<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">buffer<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">newptr<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">bufsize<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">*=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">2<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></for>

  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">GPE_OK<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

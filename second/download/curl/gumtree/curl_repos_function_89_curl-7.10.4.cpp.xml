<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_89_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">my_get_line<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">FILE<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
   <decl_stmt><decl><type><name pos:line="3" pos:column="4">char<pos:position pos:line="3" pos:column="8"/></name></type> <name><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">4096<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="4" pos:column="4">char<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">nl<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="5" pos:column="4">char<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">retval<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

   <do pos:line="7" pos:column="4">do
   <block pos:line="8" pos:column="4">{
      <if pos:line="9" pos:column="7">if <condition pos:line="9" pos:column="10">(<expr><name pos:line="9" pos:column="11">NULL<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">fgets<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="30">sizeof<argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">buf<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">fp<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
         <block type="pseudo"><break pos:line="10" pos:column="10">break;<pos:position pos:line="10" pos:column="16"/></break></block></then></if>
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">NULL<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">retval<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
         <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="10">retval<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">strdup<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">buf<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then>
      <else pos:line="13" pos:column="7">else
      <block pos:line="14" pos:column="7">{
         <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">retval<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">realloc<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">retval<pos:position pos:line="15" pos:column="46"/></name></expr></argument>,
                                       <argument><expr><call><name pos:line="16" pos:column="40">strlen<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">retval<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call> <operator pos:line="16" pos:column="55">+<pos:position pos:line="16" pos:column="56"/></operator> <call><name pos:line="16" pos:column="57">strlen<pos:position pos:line="16" pos:column="63"/></name><argument_list pos:line="16" pos:column="63">(<argument><expr><name pos:line="16" pos:column="64">buf<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call> <operator pos:line="16" pos:column="69">+<pos:position pos:line="16" pos:column="70"/></operator> <literal type="number" pos:line="16" pos:column="71">1<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call><operator pos:line="16" pos:column="73">)<pos:position pos:line="16" pos:column="74"/></operator></expr>)<pos:position pos:line="16" pos:column="75"/></condition><then pos:line="16" pos:column="75">
            <block type="pseudo"><break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break></block></then></if>
         <expr_stmt><expr><call><name pos:line="18" pos:column="10">strcat<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">retval<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="25">buf<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="19" pos:column="8"/></block></else></if>
   }<pos:position pos:line="20" pos:column="5"/></block>
   while <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">NULL<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <operator pos:line="21" pos:column="19">(<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">nl<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="25">strchr<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">retval<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="40">'\n'<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator></expr>)<pos:position pos:line="21" pos:column="47"/></condition>;<pos:position pos:line="21" pos:column="48"/></do>

   <if pos:line="23" pos:column="4">if <condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">NULL<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">!=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">nl<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
     <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="6">*<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">nl<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <literal type="char" pos:line="24" pos:column="12">'\0'<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt></block></then></if>

   <return pos:line="26" pos:column="4">return <expr><name pos:line="26" pos:column="11">retval<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_73_curl-7.14.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_app_verify_callback<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">X509_STORE_CTX<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">arg<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sslctxparm<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type> <name pos:line="3" pos:column="16">p<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><operator pos:line="3" pos:column="20">(<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">sslctxparm<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator><operator pos:line="3" pos:column="33">)<pos:position pos:line="3" pos:column="34"/></operator> <name pos:line="3" pos:column="35">arg<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ok<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">p<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">verbose<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">&gt;<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">BIO_printf<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name><name pos:line="7" pos:column="16">p<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">errorbio<pos:position pos:line="7" pos:column="27"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="28">"entering ssl_app_verify_callback\n"<pos:position pos:line="7" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">ok<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">X509_verify_cert<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">ctx<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">&amp;&amp;<pos:position pos:line="9" pos:column="45"/></operator> <name><name pos:line="9" pos:column="38">ctx<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">cert<pos:position pos:line="9" pos:column="47"/></name></name></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48"> <block pos:line="9" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">char<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type> <name pos:line="10" pos:column="21">accessinfo<pos:position pos:line="10" pos:column="31"/></name></decl> ;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">verbose<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">&gt;<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="7">X509_print_ex<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name><name pos:line="12" pos:column="21">p<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">errorbio<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>,<argument><expr><name><name pos:line="12" pos:column="33">ctx<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">cert<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="43">0<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">accessinfo<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">my_get_ext<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name><name pos:line="14" pos:column="33">ctx<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">cert<pos:position pos:line="14" pos:column="42"/></name></name></expr></argument>,<argument><expr><name><name pos:line="14" pos:column="43">p<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">accesstype<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument> ,<argument><expr><name pos:line="14" pos:column="58">NID_sinfo_access<pos:position pos:line="14" pos:column="74"/></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="76"/></condition><then pos:line="14" pos:column="76"> <block pos:line="14" pos:column="77">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name><name pos:line="15" pos:column="11">p<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">verbose<pos:position pos:line="15" pos:column="21"/></name></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">BIO_printf<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">p<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">errorbio<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="32">"Setting URL from SIA to: %s\n"<pos:position pos:line="16" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="65">accessinfo<pos:position pos:line="16" pos:column="75"/></name></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="18" pos:column="7">curl_easy_setopt<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">p<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">curl<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">CURLOPT_URL<pos:position pos:line="18" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="45">accessinfo<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">accessinfo<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <call><name pos:line="20" pos:column="27">my_get_ext<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">ctx<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">cert<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>,<argument><expr><name><name pos:line="20" pos:column="48">p<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">accesstype<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="21" pos:column="38">NID_info_access<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55"> <block pos:line="21" pos:column="56">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">p<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">verbose<pos:position pos:line="22" pos:column="21"/></name></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">BIO_printf<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name><name pos:line="23" pos:column="20">p<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">errorbio<pos:position pos:line="23" pos:column="31"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="23" pos:column="32">"Setting URL from AIA to: %s\n"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">accessinfo<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="25" pos:column="7">curl_easy_setopt<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">p<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">curl<pos:position pos:line="25" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">CURLOPT_URL<pos:position pos:line="25" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="45">accessinfo<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">p<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">verbose<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">&gt;<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="20">2<pos:position pos:line="28" pos:column="21"/></literal></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">BIO_printf<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">p<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">errorbio<pos:position pos:line="29" pos:column="27"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="28">"leaving ssl_app_verify_callback with %d\n"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="73">ok<pos:position pos:line="29" pos:column="75"/></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt></block></then></if>
  <return pos:line="30" pos:column="3">return<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">ok<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">)<pos:position pos:line="30" pos:column="13"/></operator></expr>;<pos:position pos:line="30" pos:column="14"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>
